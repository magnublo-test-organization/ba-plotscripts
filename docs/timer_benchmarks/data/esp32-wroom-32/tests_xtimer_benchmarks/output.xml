<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 18:14:08.560" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:09.151" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:09.161" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:10.239" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:09.149" endtime="20201029 18:14:10.240"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:11.243" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 18:14:10.241" endtime="20201029 18:14:11.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.147" endtime="20201029 18:14:11.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:11.250" endtime="20201029 18:14:11.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.247" endtime="20201029 18:14:11.462"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:11.476" endtime="20201029 18:14:11.496"></status>
</kw>
<msg timestamp="20201029 18:14:11.497" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:11.475" endtime="20201029 18:14:11.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:11.499" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:11.498" endtime="20201029 18:14:11.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:11.502" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:11.500" endtime="20201029 18:14:11.503"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:11.472" endtime="20201029 18:14:11.503"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:11.470" endtime="20201029 18:14:11.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.469" endtime="20201029 18:14:11.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:11.508" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:11.508" endtime="20201029 18:14:11.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.505" endtime="20201029 18:14:11.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.468" endtime="20201029 18:14:11.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.467" endtime="20201029 18:14:11.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:11.511" endtime="20201029 18:14:11.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.466" endtime="20201029 18:14:11.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:11.513" endtime="20201029 18:14:11.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.464" endtime="20201029 18:14:11.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.146" endtime="20201029 18:14:11.516"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:11.522" endtime="20201029 18:14:11.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.521" endtime="20201029 18:14:11.542"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:12.338" endtime="20201029 18:14:12.363"></status>
</kw>
<msg timestamp="20201029 18:14:12.365" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:12.334" endtime="20201029 18:14:12.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.370" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:12.367" endtime="20201029 18:14:12.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.377" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:12.372" endtime="20201029 18:14:12.377"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:12.328" endtime="20201029 18:14:12.379"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:12.321" endtime="20201029 18:14:12.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.547" endtime="20201029 18:14:12.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:12.388" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:12.387" endtime="20201029 18:14:12.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.383" endtime="20201029 18:14:12.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.546" endtime="20201029 18:14:12.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.546" endtime="20201029 18:14:12.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:12.390" endtime="20201029 18:14:12.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.544" endtime="20201029 18:14:12.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.543" endtime="20201029 18:14:12.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.519" endtime="20201029 18:14:12.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:12.400" endtime="20201029 18:14:12.414"></status>
</kw>
<msg timestamp="20201029 18:14:12.414" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:12.398" endtime="20201029 18:14:12.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.417" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:12.415" endtime="20201029 18:14:12.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:12.418" endtime="20201029 18:14:12.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.395" endtime="20201029 18:14:12.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.393" endtime="20201029 18:14:12.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.425" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:14:12.423" endtime="20201029 18:14:12.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.427" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 18:14:12.426" endtime="20201029 18:14:12.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.421" endtime="20201029 18:14:12.428"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:11.516" endtime="20201029 18:14:12.429" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:08.672" endtime="20201029 18:14:12.432"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.487" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:12.495" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:13.515" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:12.486" endtime="20201029 18:14:13.516"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.518" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 18:14:13.517" endtime="20201029 18:14:14.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.484" endtime="20201029 18:14:14.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:14.525" endtime="20201029 18:14:14.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.522" endtime="20201029 18:14:14.831"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.843" endtime="20201029 18:14:14.863"></status>
</kw>
<msg timestamp="20201029 18:14:14.864" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.842" endtime="20201029 18:14:14.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.866" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.865" endtime="20201029 18:14:14.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.870" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:14.868" endtime="20201029 18:14:14.870"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:14.839" endtime="20201029 18:14:14.871"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:14.837" endtime="20201029 18:14:14.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.836" endtime="20201029 18:14:14.871"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:14.875" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:14.875" endtime="20201029 18:14:14.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.872" endtime="20201029 18:14:14.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.835" endtime="20201029 18:14:14.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.834" endtime="20201029 18:14:14.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.877" endtime="20201029 18:14:14.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.833" endtime="20201029 18:14:14.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.880" endtime="20201029 18:14:14.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.832" endtime="20201029 18:14:14.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.483" endtime="20201029 18:14:14.883"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:14.889" endtime="20201029 18:14:14.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.887" endtime="20201029 18:14:14.909"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.923" endtime="20201029 18:14:14.941"></status>
</kw>
<msg timestamp="20201029 18:14:14.942" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.921" endtime="20201029 18:14:14.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.945" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.943" endtime="20201029 18:14:14.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.948" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:14.946" endtime="20201029 18:14:14.948"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:14.919" endtime="20201029 18:14:14.949"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:14.916" endtime="20201029 18:14:14.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.915" endtime="20201029 18:14:14.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:14.954" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:14.953" endtime="20201029 18:14:14.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.951" endtime="20201029 18:14:14.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.914" endtime="20201029 18:14:14.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.913" endtime="20201029 18:14:14.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.956" endtime="20201029 18:14:14.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.912" endtime="20201029 18:14:14.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.910" endtime="20201029 18:14:14.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.885" endtime="20201029 18:14:14.958"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.967" endtime="20201029 18:14:14.983"></status>
</kw>
<msg timestamp="20201029 18:14:14.983" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.966" endtime="20201029 18:14:14.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.986" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.984" endtime="20201029 18:14:14.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.987" endtime="20201029 18:14:14.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.963" endtime="20201029 18:14:14.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.961" endtime="20201029 18:14:14.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.996" endtime="20201029 18:14:15.266"></status>
</kw>
<msg timestamp="20201029 18:14:15.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068307514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068316278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:14.995" endtime="20201029 18:14:15.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068307514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068316278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.269" endtime="20201029 18:14:15.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.274" endtime="20201029 18:14:15.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.992" endtime="20201029 18:14:15.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.990" endtime="20201029 18:14:15.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:15.280" level="INFO">${RESULT} = [{'diff': 8.763999999994443e-06}, {'diff': 8.514000000001132e-06}, {'diff': 1.0333000000001258e-05}, {'diff': 6.388999999995537e-06}, {'diff': 5.278000000011329e-06}, {'diff': 6.611000000003586e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:15.277" endtime="20201029 18:14:15.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:15.283" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.763999999994443e-06, 8.514000000001132e-06, 1.0333000000001258e-05, 6.388999999995537e-06, 5.278000000011329e-06, 6.611000000003586e-06, 4.596999999995077e-06, 1.0889000000000038e-05, 7.63...</msg>
<status status="PASS" starttime="20201029 18:14:15.281" endtime="20201029 18:14:15.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.288" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:15.287" endtime="20201029 18:14:15.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.290" level="INFO">VALUE: [8.763999999994443e-06, 8.514000000001132e-06, 1.0333000000001258e-05, 6.388999999995537e-06, 5.278000000011329e-06, 6.611000000003586e-06, 4.596999999995077e-06, 1.0889000000000038e-05, 7.639000000003726e-06, 8.722999999988268e-06, 6.7919999999915825e-06, 9.83299999998688e-06, 9.958000000004352e-06, 7.347000000004766e-06, 6.0829999999900686e-06, 7.0280000000061404e-06, 8.000000000008e-06, 7.2090000000080146e-06, 7.582999999991569e-06, 4.611000000001586e-06, 8.598000000012429e-06, 7.723000000001146e-06, 1.0347000000007767e-05, 9.235999999995803e-06, 8.208000000009541e-06]</msg>
<status status="PASS" starttime="20201029 18:14:15.289" endtime="20201029 18:14:15.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.284" endtime="20201029 18:14:15.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.960" endtime="20201029 18:14:15.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.959" endtime="20201029 18:14:15.291"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.299" endtime="20201029 18:14:15.315"></status>
</kw>
<msg timestamp="20201029 18:14:15.315" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.297" endtime="20201029 18:14:15.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.319" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.317" endtime="20201029 18:14:15.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.321" endtime="20201029 18:14:15.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.295" endtime="20201029 18:14:15.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.293" endtime="20201029 18:14:15.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.331" endtime="20201029 18:14:15.635"></status>
</kw>
<msg timestamp="20201029 18:14:15.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068307514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068316278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.329" endtime="20201029 18:14:15.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068307514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068316278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.641" endtime="20201029 18:14:15.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.652" endtime="20201029 18:14:15.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.326" endtime="20201029 18:14:15.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.325" endtime="20201029 18:14:15.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:15.658" level="INFO">${RESULT} = [{'diff': 8.763999999994443e-06}, {'diff': 8.514000000001132e-06}, {'diff': 1.0333000000001258e-05}, {'diff': 6.388999999995537e-06}, {'diff': 5.278000000011329e-06}, {'diff': 6.611000000003586e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:15.655" endtime="20201029 18:14:15.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:15.662" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.763999999994443e-06, 8.514000000001132e-06, 1.0333000000001258e-05, 6.388999999995537e-06, 5.278000000011329e-06, 6.611000000003586e-06, 4.596999999995077e-06, 1.0889000000000038e-05, 7.63...</msg>
<status status="PASS" starttime="20201029 18:14:15.659" endtime="20201029 18:14:15.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.667" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:15.665" endtime="20201029 18:14:15.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.669" level="INFO">VALUE: [8.763999999994443e-06, 8.514000000001132e-06, 1.0333000000001258e-05, 6.388999999995537e-06, 5.278000000011329e-06, 6.611000000003586e-06, 4.596999999995077e-06, 1.0889000000000038e-05, 7.639000000003726e-06, 8.722999999988268e-06, 6.7919999999915825e-06, 9.83299999998688e-06, 9.958000000004352e-06, 7.347000000004766e-06, 6.0829999999900686e-06, 7.0280000000061404e-06, 8.000000000008e-06, 7.2090000000080146e-06, 7.582999999991569e-06, 4.611000000001586e-06, 8.598000000012429e-06, 7.723000000001146e-06, 1.0347000000007767e-05, 9.235999999995803e-06, 8.208000000009541e-06, 8.458999999960692e-06, 8.347999999991362e-06, 8.708999999995637e-06, 6.778000000040585e-06, 7.2220000000289275e-06, 8.653000000025113e-06, 9.88899999998516e-06, 7.833000000012635e-06, 4.333000000023013e-06, 1.1014000000031388e-05, 8.361000000012275e-06, 6.0139999999986316e-06, 8.473000000008835e-06, 8.985999999988614e-06, 9.902000000006073e-06, 8.471999999981605e-06, 7.332999999998258e-06, 7.2640000000068206e-06, 1.0639000000034482e-05, 5.833000000010635e-06, 1.040200000002045e-05, 8.151999999983506e-06, 7.389000000024293e-06, 6.444999999966061e-06, 9.45900000004496e-06]</msg>
<status status="PASS" starttime="20201029 18:14:15.668" endtime="20201029 18:14:15.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.663" endtime="20201029 18:14:15.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.292" endtime="20201029 18:14:15.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.292" endtime="20201029 18:14:15.672"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.680" endtime="20201029 18:14:15.695"></status>
</kw>
<msg timestamp="20201029 18:14:15.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.678" endtime="20201029 18:14:15.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.697" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.696" endtime="20201029 18:14:15.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.698" endtime="20201029 18:14:15.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.676" endtime="20201029 18:14:15.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.674" endtime="20201029 18:14:15.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.707" endtime="20201029 18:14:16.023"></status>
</kw>
<msg timestamp="20201029 18:14:16.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068490875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068500708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.706" endtime="20201029 18:14:16.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068490875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068500708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.028" endtime="20201029 18:14:16.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.038" endtime="20201029 18:14:16.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.703" endtime="20201029 18:14:16.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.702" endtime="20201029 18:14:16.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:16.044" level="INFO">${RESULT} = [{'diff': 9.83299999998688e-06}, {'diff': 9.958000000004352e-06}, {'diff': 7.347000000004766e-06}, {'diff': 6.0829999999900686e-06}, {'diff': 7.0280000000061404e-06}, {'diff': 8.000000000008e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:16.041" endtime="20201029 18:14:16.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:16.050" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.83299999998688e-06, 9.958000000004352e-06, 7.347000000004766e-06, 6.0829999999900686e-06, 7.0280000000061404e-06, 8.000000000008e-06, 7.2090000000080146e-06, 7.582999999991569e-06, 4.61100...</msg>
<status status="PASS" starttime="20201029 18:14:16.045" endtime="20201029 18:14:16.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.054" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:16.053" endtime="20201029 18:14:16.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.057" level="INFO">VALUE: [9.83299999998688e-06, 9.958000000004352e-06, 7.347000000004766e-06, 6.0829999999900686e-06, 7.0280000000061404e-06, 8.000000000008e-06, 7.2090000000080146e-06, 7.582999999991569e-06, 4.611000000001586e-06, 8.598000000012429e-06, 7.723000000001146e-06, 1.0347000000007767e-05, 9.235999999995803e-06, 8.208000000009541e-06, 8.458999999960692e-06, 8.347999999991362e-06, 8.708999999995637e-06, 6.778000000040585e-06, 7.2220000000289275e-06, 8.653000000025113e-06, 9.88899999998516e-06, 7.833000000012635e-06, 4.333000000023013e-06, 1.1014000000031388e-05, 8.361000000012275e-06, 6.0139999999986316e-06, 8.473000000008835e-06, 8.985999999988614e-06, 9.902000000006073e-06, 8.471999999981605e-06, 7.332999999998258e-06, 7.2640000000068206e-06, 1.0639000000034482e-05, 5.833000000010635e-06, 1.040200000002045e-05, 8.151999999983506e-06, 7.389000000024293e-06, 6.444999999966061e-06, 9.45900000004496e-06, 6.7769999999578445e-06, 1.019400000001891e-05, 7.58400000000492e-06, 8.52799999995213e-06, 8.584000000033676e-06, 7.721999999987794e-06, 7.527999999923374e-06, 8.096999999929189e-06, 7.528000000034396e-06, 7.68100000003713e-06, 6.52800000000564e-06, 1.00969999999867e-05, 7.165999999947381e-06, 6.846999999976511e-06, 4.847000000030022e-06, 6.167000000001366e-06, 8.01399999994512e-06, 6.347000000017644e-06, 1.1651999999973128e-05, 8.95799999989233e-06, 8.805000000000618e-06, 6.52800000000564e-06, 8.721999999905528e-06, 6.18000000007779e-06, 6.834000000011109e-06]</msg>
<status status="PASS" starttime="20201029 18:14:16.055" endtime="20201029 18:14:16.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.051" endtime="20201029 18:14:16.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.672" endtime="20201029 18:14:16.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.672" endtime="20201029 18:14:16.058"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.066" endtime="20201029 18:14:16.081"></status>
</kw>
<msg timestamp="20201029 18:14:16.081" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.064" endtime="20201029 18:14:16.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.084" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.082" endtime="20201029 18:14:16.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.085" endtime="20201029 18:14:16.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.062" endtime="20201029 18:14:16.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.060" endtime="20201029 18:14:16.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.094" endtime="20201029 18:14:16.411"></status>
</kw>
<msg timestamp="20201029 18:14:16.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.389921472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.389927486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.092" endtime="20201029 18:14:16.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.389921472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.389927486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.416" endtime="20201029 18:14:16.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.426" endtime="20201029 18:14:16.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.090" endtime="20201029 18:14:16.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.088" endtime="20201029 18:14:16.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:16.433" level="INFO">${RESULT} = [{'diff': 6.0139999999986316e-06}, {'diff': 8.473000000008835e-06}, {'diff': 8.985999999988614e-06}, {'diff': 9.902000000006073e-06}, {'diff': 8.471999999981605e-06}, {'diff': 7.332999999998258e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:16.429" endtime="20201029 18:14:16.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:16.437" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.0139999999986316e-06, 8.473000000008835e-06, 8.985999999988614e-06, 9.902000000006073e-06, 8.471999999981605e-06, 7.332999999998258e-06, 7.2640000000068206e-06, 1.0639000000034482e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 18:14:16.434" endtime="20201029 18:14:16.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.442" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:16.440" endtime="20201029 18:14:16.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.444" level="INFO">VALUE: [6.0139999999986316e-06, 8.473000000008835e-06, 8.985999999988614e-06, 9.902000000006073e-06, 8.471999999981605e-06, 7.332999999998258e-06, 7.2640000000068206e-06, 1.0639000000034482e-05, 5.833000000010635e-06, 1.040200000002045e-05, 8.151999999983506e-06, 7.389000000024293e-06, 6.444999999966061e-06, 9.45900000004496e-06, 6.7769999999578445e-06, 1.019400000001891e-05, 7.58400000000492e-06, 8.52799999995213e-06, 8.584000000033676e-06, 7.721999999987794e-06, 7.527999999923374e-06, 8.096999999929189e-06, 7.528000000034396e-06, 7.68100000003713e-06, 6.52800000000564e-06, 1.00969999999867e-05, 7.165999999947381e-06, 6.846999999976511e-06, 4.847000000030022e-06, 6.167000000001366e-06, 8.01399999994512e-06, 6.347000000017644e-06, 1.1651999999973128e-05, 8.95799999989233e-06, 8.805000000000618e-06, 6.52800000000564e-06, 8.721999999905528e-06, 6.18000000007779e-06, 6.834000000011109e-06, 9.69499999992074e-06, 7.054999999978051e-06, 7.528000000034396e-06, 7.4859999998899696e-06, 9.943999999872943e-06, 1.0026999999857011e-05, 1.0278000000196741e-05, 6.5140000000685205e-06, 4.180999999991997e-06, 7.3199999999218335e-06, 8.708000000190452e-06, 6.22299999997189e-06, 9.22300000016918e-06, 9.458999999933937e-06, 1.033299999986248e-05, 8.222000000168705e-06, 4.971999999936472e-06, 6.973000000076723e-06, 9.208999999898992e-06, 5.527999999976885e-06, 7.4859999998899696e-06, 9.88899999998516e-06, 1.0875000000076795e-05, 6.958999999806537e-06, 6.903000000058057e-06]</msg>
<status status="PASS" starttime="20201029 18:14:16.443" endtime="20201029 18:14:16.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.438" endtime="20201029 18:14:16.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.059" endtime="20201029 18:14:16.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.059" endtime="20201029 18:14:16.446"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.454" endtime="20201029 18:14:16.469"></status>
</kw>
<msg timestamp="20201029 18:14:16.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.452" endtime="20201029 18:14:16.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.471" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.470" endtime="20201029 18:14:16.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.473" endtime="20201029 18:14:16.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.450" endtime="20201029 18:14:16.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.448" endtime="20201029 18:14:16.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.481" endtime="20201029 18:14:16.788"></status>
</kw>
<msg timestamp="20201029 18:14:16.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.760543486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.760553583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.480" endtime="20201029 18:14:16.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.760543486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.760553583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.793" endtime="20201029 18:14:16.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.804" endtime="20201029 18:14:16.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.477" endtime="20201029 18:14:16.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.476" endtime="20201029 18:14:16.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:16.811" level="INFO">${RESULT} = [{'diff': 1.00969999999867e-05}, {'diff': 7.165999999947381e-06}, {'diff': 6.846999999976511e-06}, {'diff': 4.847000000030022e-06}, {'diff': 6.167000000001366e-06}, {'diff': 8.01399999994512e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:16.807" endtime="20201029 18:14:16.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:16.819" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.00969999999867e-05, 7.165999999947381e-06, 6.846999999976511e-06, 4.847000000030022e-06, 6.167000000001366e-06, 8.01399999994512e-06, 6.347000000017644e-06, 1.1651999999973128e-05, 8.95799...</msg>
<status status="PASS" starttime="20201029 18:14:16.812" endtime="20201029 18:14:16.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.305" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:18.302" endtime="20201029 18:14:18.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.310" level="INFO">VALUE: [1.00969999999867e-05, 7.165999999947381e-06, 6.846999999976511e-06, 4.847000000030022e-06, 6.167000000001366e-06, 8.01399999994512e-06, 6.347000000017644e-06, 1.1651999999973128e-05, 8.95799999989233e-06, 8.805000000000618e-06, 6.52800000000564e-06, 8.721999999905528e-06, 6.18000000007779e-06, 6.834000000011109e-06, 9.69499999992074e-06, 7.054999999978051e-06, 7.528000000034396e-06, 7.4859999998899696e-06, 9.943999999872943e-06, 1.0026999999857011e-05, 1.0278000000196741e-05, 6.5140000000685205e-06, 4.180999999991997e-06, 7.3199999999218335e-06, 8.708000000190452e-06, 6.22299999997189e-06, 9.22300000016918e-06, 9.458999999933937e-06, 1.033299999986248e-05, 8.222000000168705e-06, 4.971999999936472e-06, 6.973000000076723e-06, 9.208999999898992e-06, 5.527999999976885e-06, 7.4859999998899696e-06, 9.88899999998516e-06, 1.0875000000076795e-05, 6.958999999806537e-06, 6.903000000058057e-06, 8.042000000152427e-06, 7.987000000042599e-06, 7.971999999911716e-06, 7.68100000003713e-06, 7.1390000000448595e-06, 5.068999999968682e-06, 6.66699999984921e-06, 8.097000000040211e-06, 1.115299999998598e-05, 6.777999999929563e-06, 9.44500000010784e-06, 7.166999999919099e-06, 8.096999999818166e-06, 7.2220000000289275e-06, 7.3469999999353774e-06, 6.708000000132941e-06, 5.2500000000677005e-06, 8.985999999877592e-06, 9.791000000092254e-06, 5.778000000011829e-06, 8.805999999861314e-06, 8.290999999882587e-06, 1.112500000011174e-05, 6.833999999900087e-06, 7.403000000127946e-06]</msg>
<status status="PASS" starttime="20201029 18:14:18.307" endtime="20201029 18:14:18.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.820" endtime="20201029 18:14:18.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.447" endtime="20201029 18:14:18.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.446" endtime="20201029 18:14:18.313"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.329" endtime="20201029 18:14:18.348"></status>
</kw>
<msg timestamp="20201029 18:14:18.349" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.326" endtime="20201029 18:14:18.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.354" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.351" endtime="20201029 18:14:18.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.356" endtime="20201029 18:14:18.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.321" endtime="20201029 18:14:18.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.317" endtime="20201029 18:14:18.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.374" endtime="20201029 18:14:18.686"></status>
</kw>
<msg timestamp="20201029 18:14:18.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.137082708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.137088931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.372" endtime="20201029 18:14:18.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.137082708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.137088931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.691" endtime="20201029 18:14:18.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.701" endtime="20201029 18:14:18.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.366" endtime="20201029 18:14:18.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.363" endtime="20201029 18:14:18.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:18.708" level="INFO">${RESULT} = [{'diff': 6.22299999997189e-06}, {'diff': 9.22300000016918e-06}, {'diff': 9.458999999933937e-06}, {'diff': 1.033299999986248e-05}, {'diff': 8.222000000168705e-06}, {'diff': 4.971999999936472e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:18.704" endtime="20201029 18:14:18.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:18.715" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.22299999997189e-06, 9.22300000016918e-06, 9.458999999933937e-06, 1.033299999986248e-05, 8.222000000168705e-06, 4.971999999936472e-06, 6.973000000076723e-06, 9.208999999898992e-06, 5.527999...</msg>
<status status="PASS" starttime="20201029 18:14:18.709" endtime="20201029 18:14:18.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.720" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:18.719" endtime="20201029 18:14:18.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.723" level="INFO">VALUE: [6.22299999997189e-06, 9.22300000016918e-06, 9.458999999933937e-06, 1.033299999986248e-05, 8.222000000168705e-06, 4.971999999936472e-06, 6.973000000076723e-06, 9.208999999898992e-06, 5.527999999976885e-06, 7.4859999998899696e-06, 9.88899999998516e-06, 1.0875000000076795e-05, 6.958999999806537e-06, 6.903000000058057e-06, 8.042000000152427e-06, 7.987000000042599e-06, 7.971999999911716e-06, 7.68100000003713e-06, 7.1390000000448595e-06, 5.068999999968682e-06, 6.66699999984921e-06, 8.097000000040211e-06, 1.115299999998598e-05, 6.777999999929563e-06, 9.44500000010784e-06, 7.166999999919099e-06, 8.096999999818166e-06, 7.2220000000289275e-06, 7.3469999999353774e-06, 6.708000000132941e-06, 5.2500000000677005e-06, 8.985999999877592e-06, 9.791000000092254e-06, 5.778000000011829e-06, 8.805999999861314e-06, 8.290999999882587e-06, 1.112500000011174e-05, 6.833999999900087e-06, 7.403000000127946e-06, 9.874999999937017e-06, 6.820000000296034e-06, 5.832999999899613e-06, 5.555000000434518e-06, 1.0194999999768584e-05, 5.958999999666759e-06, 9.028000000022018e-06, 8.972000000273539e-06, 5.403000000292479e-06, 9.901999999950561e-06, 9.819000000188538e-06, 1.0443999999942832e-05, 7.33300000010928e-06, 9.847000000284822e-06, 7.152999999870957e-06, 7.318999999839093e-06, 8.52799999995213e-06, 6.068999999886415e-06, 7.763999999799154e-06, 7.526999999729611e-06, 6.652999999801068e-06, 9.528000000091907e-06, 9.528000000091907e-06, 9.042000000292205e-06, 6.833000000039391e-06]</msg>
<status status="PASS" starttime="20201029 18:14:18.721" endtime="20201029 18:14:18.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.716" endtime="20201029 18:14:18.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.315" endtime="20201029 18:14:18.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.314" endtime="20201029 18:14:18.724"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.732" endtime="20201029 18:14:18.747"></status>
</kw>
<msg timestamp="20201029 18:14:18.747" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.731" endtime="20201029 18:14:18.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.750" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.748" endtime="20201029 18:14:18.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.751" endtime="20201029 18:14:18.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.728" endtime="20201029 18:14:18.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.726" endtime="20201029 18:14:18.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.760" endtime="20201029 18:14:19.074"></status>
</kw>
<msg timestamp="20201029 18:14:19.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.515385889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.515393056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.759" endtime="20201029 18:14:19.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.515385889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.515393056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.079" endtime="20201029 18:14:19.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.096" endtime="20201029 18:14:19.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.756" endtime="20201029 18:14:19.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.754" endtime="20201029 18:14:19.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:19.111" level="INFO">${RESULT} = [{'diff': 7.166999999919099e-06}, {'diff': 8.096999999818166e-06}, {'diff': 7.2220000000289275e-06}, {'diff': 7.3469999999353774e-06}, {'diff': 6.708000000132941e-06}, {'diff': 5.2500000000677005e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:19.103" endtime="20201029 18:14:19.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:19.122" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.166999999919099e-06, 8.096999999818166e-06, 7.2220000000289275e-06, 7.3469999999353774e-06, 6.708000000132941e-06, 5.2500000000677005e-06, 8.985999999877592e-06, 9.791000000092254e-06, 5.7...</msg>
<status status="PASS" starttime="20201029 18:14:19.113" endtime="20201029 18:14:19.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.131" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:19.129" endtime="20201029 18:14:19.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.137" level="INFO">VALUE: [7.166999999919099e-06, 8.096999999818166e-06, 7.2220000000289275e-06, 7.3469999999353774e-06, 6.708000000132941e-06, 5.2500000000677005e-06, 8.985999999877592e-06, 9.791000000092254e-06, 5.778000000011829e-06, 8.805999999861314e-06, 8.290999999882587e-06, 1.112500000011174e-05, 6.833999999900087e-06, 7.403000000127946e-06, 9.874999999937017e-06, 6.820000000296034e-06, 5.832999999899613e-06, 5.555000000434518e-06, 1.0194999999768584e-05, 5.958999999666759e-06, 9.028000000022018e-06, 8.972000000273539e-06, 5.403000000292479e-06, 9.901999999950561e-06, 9.819000000188538e-06, 1.0443999999942832e-05, 7.33300000010928e-06, 9.847000000284822e-06, 7.152999999870957e-06, 7.318999999839093e-06, 8.52799999995213e-06, 6.068999999886415e-06, 7.763999999799154e-06, 7.526999999729611e-06, 6.652999999801068e-06, 9.528000000091907e-06, 9.528000000091907e-06, 9.042000000292205e-06, 6.833000000039391e-06, 6.583000000226491e-06, 9.153000000150513e-06, 7.902999999753746e-06, 7.082999999852291e-06, 1.0458000000213019e-05, 7.375000000031662e-06, 6.473000000006834e-06, 6.471999999924094e-06, 8.777000000126378e-06, 9.833000000014636e-06, 9.096999999957944e-06, 7.723000000403601e-06, 8.52799999995213e-06, 7.416999999954044e-06, 7.5970000001923665e-06, 5.263999999893798e-06, 1.1971999999804694e-05, 1.1417000000069066e-05, 5.139000000209393e-06, 8.847000000145044e-06, 7.332999999665191e-06, 8.347000000075155e-06, 8.207999999676474e-06, 7.180999999967241e-06, 6.917000000328244e-06]</msg>
<status status="PASS" starttime="20201029 18:14:19.134" endtime="20201029 18:14:19.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.124" endtime="20201029 18:14:19.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.725" endtime="20201029 18:14:19.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.725" endtime="20201029 18:14:19.141"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.160" endtime="20201029 18:14:19.179"></status>
</kw>
<msg timestamp="20201029 18:14:19.180" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.156" endtime="20201029 18:14:19.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.182" endtime="20201029 18:14:19.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.187" endtime="20201029 18:14:19.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.149" endtime="20201029 18:14:19.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.145" endtime="20201029 18:14:19.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.197" endtime="20201029 18:14:19.515"></status>
</kw>
<msg timestamp="20201029 18:14:19.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.379924028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.379934472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.195" endtime="20201029 18:14:19.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.379924028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.379934472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.520" endtime="20201029 18:14:19.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.530" endtime="20201029 18:14:19.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.192" endtime="20201029 18:14:19.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.191" endtime="20201029 18:14:19.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:19.537" level="INFO">${RESULT} = [{'diff': 1.0443999999942832e-05}, {'diff': 7.33300000010928e-06}, {'diff': 9.847000000284822e-06}, {'diff': 7.152999999870957e-06}, {'diff': 7.318999999839093e-06}, {'diff': 8.52799999995213e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:19.533" endtime="20201029 18:14:19.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:19.542" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0443999999942832e-05, 7.33300000010928e-06, 9.847000000284822e-06, 7.152999999870957e-06, 7.318999999839093e-06, 8.52799999995213e-06, 6.068999999886415e-06, 7.763999999799154e-06, 7.52699...</msg>
<status status="PASS" starttime="20201029 18:14:19.538" endtime="20201029 18:14:19.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.547" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:19.546" endtime="20201029 18:14:19.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.550" level="INFO">VALUE: [1.0443999999942832e-05, 7.33300000010928e-06, 9.847000000284822e-06, 7.152999999870957e-06, 7.318999999839093e-06, 8.52799999995213e-06, 6.068999999886415e-06, 7.763999999799154e-06, 7.526999999729611e-06, 6.652999999801068e-06, 9.528000000091907e-06, 9.528000000091907e-06, 9.042000000292205e-06, 6.833000000039391e-06, 6.583000000226491e-06, 9.153000000150513e-06, 7.902999999753746e-06, 7.082999999852291e-06, 1.0458000000213019e-05, 7.375000000031662e-06, 6.473000000006834e-06, 6.471999999924094e-06, 8.777000000126378e-06, 9.833000000014636e-06, 9.096999999957944e-06, 7.723000000403601e-06, 8.52799999995213e-06, 7.416999999954044e-06, 7.5970000001923665e-06, 5.263999999893798e-06, 1.1971999999804694e-05, 1.1417000000069066e-05, 5.139000000209393e-06, 8.847000000145044e-06, 7.332999999665191e-06, 8.347000000075155e-06, 8.207999999676474e-06, 7.180999999967241e-06, 6.917000000328244e-06, 7.5829999994780906e-06, 6.0690000003305045e-06, 8.653000000080624e-06, 8.583999999700609e-06, 1.036099999929263e-05, 6.083999999795253e-06, 9.472000000343428e-06, 8.665999999379892e-06, 1.1333999999862954e-05, 7.958000000307663e-06, 1.1403000000242969e-05, 9.041000000209465e-06, 1.040300000010319e-05, 1.0416000000290637e-05, 8.666999999462632e-06, 6.708999999993637e-06, 4.708000000519519e-06, 6.9580000001678854e-06, 7.971999999689672e-06, 9.666000000407848e-06, 8.054999999451695e-06, 8.167000000725011e-06, 8.236000000216848e-06, 8.513000000043291e-06, 7.042000000012649e-06]</msg>
<status status="PASS" starttime="20201029 18:14:19.548" endtime="20201029 18:14:19.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.544" endtime="20201029 18:14:19.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.142" endtime="20201029 18:14:19.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.141" endtime="20201029 18:14:19.551"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.559" endtime="20201029 18:14:19.574"></status>
</kw>
<msg timestamp="20201029 18:14:19.575" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.558" endtime="20201029 18:14:19.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.578" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.576" endtime="20201029 18:14:19.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.579" endtime="20201029 18:14:19.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.555" endtime="20201029 18:14:19.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.553" endtime="20201029 18:14:19.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.590" endtime="20201029 18:14:19.909"></status>
</kw>
<msg timestamp="20201029 18:14:19.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.771781708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.771789431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.588" endtime="20201029 18:14:19.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.771781708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.771789431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.914" endtime="20201029 18:14:19.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.924" endtime="20201029 18:14:19.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.585" endtime="20201029 18:14:19.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.583" endtime="20201029 18:14:19.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:19.931" level="INFO">${RESULT} = [{'diff': 7.723000000403601e-06}, {'diff': 8.52799999995213e-06}, {'diff': 7.416999999954044e-06}, {'diff': 7.5970000001923665e-06}, {'diff': 5.263999999893798e-06}, {'diff': 1.1971999999804694e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:14:19.927" endtime="20201029 18:14:19.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:19.937" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.723000000403601e-06, 8.52799999995213e-06, 7.416999999954044e-06, 7.5970000001923665e-06, 5.263999999893798e-06, 1.1971999999804694e-05, 1.1417000000069066e-05, 5.139000000209393e-06, 8.84...</msg>
<status status="PASS" starttime="20201029 18:14:19.932" endtime="20201029 18:14:19.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.941" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:19.940" endtime="20201029 18:14:19.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.944" level="INFO">VALUE: [7.723000000403601e-06, 8.52799999995213e-06, 7.416999999954044e-06, 7.5970000001923665e-06, 5.263999999893798e-06, 1.1971999999804694e-05, 1.1417000000069066e-05, 5.139000000209393e-06, 8.847000000145044e-06, 7.332999999665191e-06, 8.347000000075155e-06, 8.207999999676474e-06, 7.180999999967241e-06, 6.917000000328244e-06, 7.5829999994780906e-06, 6.0690000003305045e-06, 8.653000000080624e-06, 8.583999999700609e-06, 1.036099999929263e-05, 6.083999999795253e-06, 9.472000000343428e-06, 8.665999999379892e-06, 1.1333999999862954e-05, 7.958000000307663e-06, 1.1403000000242969e-05, 9.041000000209465e-06, 1.040300000010319e-05, 1.0416000000290637e-05, 8.666999999462632e-06, 6.708999999993637e-06, 4.708000000519519e-06, 6.9580000001678854e-06, 7.971999999689672e-06, 9.666000000407848e-06, 8.054999999451695e-06, 8.167000000725011e-06, 8.236000000216848e-06, 8.513000000043291e-06, 7.042000000012649e-06, 9.638999999950215e-06, 7.777999999625251e-06, 6.0969999999827e-06, 7.221999999806883e-06, 9.66599999951967e-06, 8.097999999456817e-06, 5.305999999372091e-06, 8.389000000441627e-06, 5.45899999959687e-06, 8.9170000006078e-06, 7.292000000269638e-06, 5.9160000001057256e-06, 6.582999999338313e-06, 9.152999999706424e-06, 6.819000000213293e-06, 6.903000000058057e-06, 6.749999999833278e-06, 9.915999999776659e-06, 7.013999999472276e-06, 8.388999999553448e-06, 8.943999999289076e-06, 6.222999999749845e-06, 5.2500000000677005e-06, 9.083000000131847e-06, 7.903000000197835e-06]</msg>
<status status="PASS" starttime="20201029 18:14:19.943" endtime="20201029 18:14:19.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.938" endtime="20201029 18:14:19.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.552" endtime="20201029 18:14:19.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.552" endtime="20201029 18:14:19.946"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.954" endtime="20201029 18:14:19.969"></status>
</kw>
<msg timestamp="20201029 18:14:19.969" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.952" endtime="20201029 18:14:19.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.972" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.970" endtime="20201029 18:14:19.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.973" endtime="20201029 18:14:19.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.950" endtime="20201029 18:14:19.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.948" endtime="20201029 18:14:19.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.983" endtime="20201029 18:14:20.299"></status>
</kw>
<msg timestamp="20201029 18:14:20.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.190381931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.190390972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.982" endtime="20201029 18:14:20.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.190381931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.190390972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:20.304" endtime="20201029 18:14:20.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.314" endtime="20201029 18:14:20.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.978" endtime="20201029 18:14:20.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.976" endtime="20201029 18:14:20.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:20.321" level="INFO">${RESULT} = [{'diff': 9.041000000209465e-06}, {'diff': 1.040300000010319e-05}, {'diff': 1.0416000000290637e-05}, {'diff': 8.666999999462632e-06}, {'diff': 6.708999999993637e-06}, {'diff': 4.708000000519519e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:20.317" endtime="20201029 18:14:20.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:20.326" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.041000000209465e-06, 1.040300000010319e-05, 1.0416000000290637e-05, 8.666999999462632e-06, 6.708999999993637e-06, 4.708000000519519e-06, 6.9580000001678854e-06, 7.971999999689672e-06, 9.66...</msg>
<status status="PASS" starttime="20201029 18:14:20.322" endtime="20201029 18:14:20.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.331" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:20.330" endtime="20201029 18:14:20.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.334" level="INFO">VALUE: [9.041000000209465e-06, 1.040300000010319e-05, 1.0416000000290637e-05, 8.666999999462632e-06, 6.708999999993637e-06, 4.708000000519519e-06, 6.9580000001678854e-06, 7.971999999689672e-06, 9.666000000407848e-06, 8.054999999451695e-06, 8.167000000725011e-06, 8.236000000216848e-06, 8.513000000043291e-06, 7.042000000012649e-06, 9.638999999950215e-06, 7.777999999625251e-06, 6.0969999999827e-06, 7.221999999806883e-06, 9.66599999951967e-06, 8.097999999456817e-06, 5.305999999372091e-06, 8.389000000441627e-06, 5.45899999959687e-06, 8.9170000006078e-06, 7.292000000269638e-06, 5.9160000001057256e-06, 6.582999999338313e-06, 9.152999999706424e-06, 6.819000000213293e-06, 6.903000000058057e-06, 6.749999999833278e-06, 9.915999999776659e-06, 7.013999999472276e-06, 8.388999999553448e-06, 8.943999999289076e-06, 6.222999999749845e-06, 5.2500000000677005e-06, 9.083000000131847e-06, 7.903000000197835e-06, 1.0666999999742188e-05, 9.833000000014636e-06, 6.09800000006544e-06, 9.902999999589213e-06, 9.139000000324415e-06, 1.1235999999748003e-05, 1.0528000000675775e-05, 7.527999999368262e-06, 8.166999999836833e-06, 5.068999999302548e-06, 7.541999999638449e-06, 7.666000000128292e-06, 9.26400000000882e-06, 8.778000000653208e-06, 8.708000000190452e-06, 8.832999999874858e-06, 5.708999999853859e-06, 7.23600000007707e-06, 6.6659999999885144e-06, 7.83399999981782e-06, 6.264000000477665e-06, 7.651999999858106e-06, 8.72199999957246e-06, 6.819000000213293e-06, 8.653000000080624e-06]</msg>
<status status="PASS" starttime="20201029 18:14:20.332" endtime="20201029 18:14:20.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.327" endtime="20201029 18:14:20.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.946" endtime="20201029 18:14:20.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.946" endtime="20201029 18:14:20.336"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.344" endtime="20201029 18:14:20.359"></status>
</kw>
<msg timestamp="20201029 18:14:20.359" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.342" endtime="20201029 18:14:20.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.362" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.360" endtime="20201029 18:14:20.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.363" endtime="20201029 18:14:20.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.340" endtime="20201029 18:14:20.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.338" endtime="20201029 18:14:20.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.372" endtime="20201029 18:14:20.688"></status>
</kw>
<msg timestamp="20201029 18:14:20.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.578855431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.578861347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:20.371" endtime="20201029 18:14:20.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.578855431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.578861347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:20.693" endtime="20201029 18:14:20.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.703" endtime="20201029 18:14:20.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.368" endtime="20201029 18:14:20.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.366" endtime="20201029 18:14:20.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:20.710" level="INFO">${RESULT} = [{'diff': 5.9160000001057256e-06}, {'diff': 6.582999999338313e-06}, {'diff': 9.152999999706424e-06}, {'diff': 6.819000000213293e-06}, {'diff': 6.903000000058057e-06}, {'diff': 6.749999999833278e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:20.706" endtime="20201029 18:14:20.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:20.715" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.9160000001057256e-06, 6.582999999338313e-06, 9.152999999706424e-06, 6.819000000213293e-06, 6.903000000058057e-06, 6.749999999833278e-06, 9.915999999776659e-06, 7.013999999472276e-06, 8.388...</msg>
<status status="PASS" starttime="20201029 18:14:20.711" endtime="20201029 18:14:20.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.720" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:20.719" endtime="20201029 18:14:20.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.722" level="INFO">VALUE: [5.9160000001057256e-06, 6.582999999338313e-06, 9.152999999706424e-06, 6.819000000213293e-06, 6.903000000058057e-06, 6.749999999833278e-06, 9.915999999776659e-06, 7.013999999472276e-06, 8.388999999553448e-06, 8.943999999289076e-06, 6.222999999749845e-06, 5.2500000000677005e-06, 9.083000000131847e-06, 7.903000000197835e-06, 1.0666999999742188e-05, 9.833000000014636e-06, 6.09800000006544e-06, 9.902999999589213e-06, 9.139000000324415e-06, 1.1235999999748003e-05, 1.0528000000675775e-05, 7.527999999368262e-06, 8.166999999836833e-06, 5.068999999302548e-06, 7.541999999638449e-06, 7.666000000128292e-06, 9.26400000000882e-06, 8.778000000653208e-06, 8.708000000190452e-06, 8.832999999874858e-06, 5.708999999853859e-06, 7.23600000007707e-06, 6.6659999999885144e-06, 7.83399999981782e-06, 6.264000000477665e-06, 7.651999999858106e-06, 8.72199999957246e-06, 6.819000000213293e-06, 8.653000000080624e-06, 4.917000000048688e-06, 6.4310000000844525e-06, 1.0276999999447867e-05, 6.348000000322429e-06, 7.0970000001224776e-06, 8.153000000454824e-06, 7.957999999419485e-06, 9.458000000073241e-06, 7.513999999986254e-06, 8.27800000013923e-06, 1.1208000000095808e-05, 1.0374999999562817e-05, 7.916000000385282e-06, 7.096999999234299e-06, 7.165999999614314e-06, 8.263999999869043e-06, 9.235999999468447e-06, 7.971999999689672e-06, 8.27800000013923e-06, 5.638000000196541e-06, 6.6939999996407096e-06, 8.37500000017144e-06, 7.152999999426868e-06, 7.903000000197835e-06, 7.0970000001224776e-06]</msg>
<status status="PASS" starttime="20201029 18:14:20.721" endtime="20201029 18:14:20.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.716" endtime="20201029 18:14:20.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.337" endtime="20201029 18:14:20.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.336" endtime="20201029 18:14:20.724"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.733" endtime="20201029 18:14:20.747"></status>
</kw>
<msg timestamp="20201029 18:14:20.747" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.731" endtime="20201029 18:14:20.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.750" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.748" endtime="20201029 18:14:20.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.751" endtime="20201029 18:14:20.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.728" endtime="20201029 18:14:20.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.726" endtime="20201029 18:14:20.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.759" endtime="20201029 18:14:21.078"></status>
</kw>
<msg timestamp="20201029 18:14:21.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.962467542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.962475208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:20.758" endtime="20201029 18:14:21.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.962467542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.962475208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.083" endtime="20201029 18:14:21.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.093" endtime="20201029 18:14:21.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.755" endtime="20201029 18:14:21.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.754" endtime="20201029 18:14:21.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:21.100" level="INFO">${RESULT} = [{'diff': 7.666000000128292e-06}, {'diff': 9.26400000000882e-06}, {'diff': 8.778000000653208e-06}, {'diff': 8.708000000190452e-06}, {'diff': 8.832999999874858e-06}, {'diff': 5.708999999853859e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:21.096" endtime="20201029 18:14:21.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:21.104" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.666000000128292e-06, 9.26400000000882e-06, 8.778000000653208e-06, 8.708000000190452e-06, 8.832999999874858e-06, 5.708999999853859e-06, 7.23600000007707e-06, 6.6659999999885144e-06, 7.83399...</msg>
<status status="PASS" starttime="20201029 18:14:21.101" endtime="20201029 18:14:21.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.109" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:21.108" endtime="20201029 18:14:21.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.111" level="INFO">VALUE: [7.666000000128292e-06, 9.26400000000882e-06, 8.778000000653208e-06, 8.708000000190452e-06, 8.832999999874858e-06, 5.708999999853859e-06, 7.23600000007707e-06, 6.6659999999885144e-06, 7.83399999981782e-06, 6.264000000477665e-06, 7.651999999858106e-06, 8.72199999957246e-06, 6.819000000213293e-06, 8.653000000080624e-06, 4.917000000048688e-06, 6.4310000000844525e-06, 1.0276999999447867e-05, 6.348000000322429e-06, 7.0970000001224776e-06, 8.153000000454824e-06, 7.957999999419485e-06, 9.458000000073241e-06, 7.513999999986254e-06, 8.27800000013923e-06, 1.1208000000095808e-05, 1.0374999999562817e-05, 7.916000000385282e-06, 7.096999999234299e-06, 7.165999999614314e-06, 8.263999999869043e-06, 9.235999999468447e-06, 7.971999999689672e-06, 8.27800000013923e-06, 5.638000000196541e-06, 6.6939999996407096e-06, 8.37500000017144e-06, 7.152999999426868e-06, 7.903000000197835e-06, 7.0970000001224776e-06, 1.1680000000069413e-05, 7.611000000018464e-06, 6.332999999969502e-06, 8.528000000396219e-06, 7.207999999536696e-06, 6.360999999621697e-06, 5.0279999994629065e-06, 1.040300000010319e-05, 9.777999999904807e-06, 7.77800000051343e-06, 8.347000000519245e-06, 6.013000000137936e-06, 8.082999999992069e-06, 8.402999999823635e-06, 9.26400000000882e-06, 8.459000000016204e-06, 7.583000000366269e-06, 8.069999999804622e-06, 7.847000000005266e-06, 8.06900000061006e-06, 6.29200000012986e-06, 1.1834000000376932e-05, 6.861000000135675e-06, 8.333000000249058e-06, 7.2080000004248745e-06]</msg>
<status status="PASS" starttime="20201029 18:14:21.110" endtime="20201029 18:14:21.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.106" endtime="20201029 18:14:21.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.725" endtime="20201029 18:14:21.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.724" endtime="20201029 18:14:21.113"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.121" endtime="20201029 18:14:21.136"></status>
</kw>
<msg timestamp="20201029 18:14:21.136" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.119" endtime="20201029 18:14:21.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.139" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.137" endtime="20201029 18:14:21.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.140" endtime="20201029 18:14:21.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.117" endtime="20201029 18:14:21.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.115" endtime="20201029 18:14:21.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.149" endtime="20201029 18:14:21.468"></status>
</kw>
<msg timestamp="20201029 18:14:21.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.343403125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.3434135, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:21.147" endtime="20201029 18:14:21.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.343403125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.3434135, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:21.473" endtime="20201029 18:14:21.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.483" endtime="20201029 18:14:21.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.144" endtime="20201029 18:14:21.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.143" endtime="20201029 18:14:21.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:21.489" level="INFO">${RESULT} = [{'diff': 1.0374999999562817e-05}, {'diff': 7.916000000385282e-06}, {'diff': 7.096999999234299e-06}, {'diff': 7.165999999614314e-06}, {'diff': 8.263999999869043e-06}, {'diff': 9.235999999468447e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:21.486" endtime="20201029 18:14:21.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:21.495" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0374999999562817e-05, 7.916000000385282e-06, 7.096999999234299e-06, 7.165999999614314e-06, 8.263999999869043e-06, 9.235999999468447e-06, 7.971999999689672e-06, 8.27800000013923e-06, 5.6380...</msg>
<status status="PASS" starttime="20201029 18:14:21.490" endtime="20201029 18:14:21.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.499" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:21.498" endtime="20201029 18:14:21.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.502" level="INFO">VALUE: [1.0374999999562817e-05, 7.916000000385282e-06, 7.096999999234299e-06, 7.165999999614314e-06, 8.263999999869043e-06, 9.235999999468447e-06, 7.971999999689672e-06, 8.27800000013923e-06, 5.638000000196541e-06, 6.6939999996407096e-06, 8.37500000017144e-06, 7.152999999426868e-06, 7.903000000197835e-06, 7.0970000001224776e-06, 1.1680000000069413e-05, 7.611000000018464e-06, 6.332999999969502e-06, 8.528000000396219e-06, 7.207999999536696e-06, 6.360999999621697e-06, 5.0279999994629065e-06, 1.040300000010319e-05, 9.777999999904807e-06, 7.77800000051343e-06, 8.347000000519245e-06, 6.013000000137936e-06, 8.082999999992069e-06, 8.402999999823635e-06, 9.26400000000882e-06, 8.459000000016204e-06, 7.583000000366269e-06, 8.069999999804622e-06, 7.847000000005266e-06, 8.06900000061006e-06, 6.29200000012986e-06, 1.1834000000376932e-05, 6.861000000135675e-06, 8.333000000249058e-06, 7.2080000004248745e-06, 9.22300000016918e-06, 9.083000000131847e-06, 1.0041000000349243e-05, 6.708999999993637e-06, 6.721999999292905e-06, 8.56900000023586e-06, 9.458000000073241e-06, 1.0430000000560824e-05, 1.0458000000213019e-05, 7.403000000572035e-06, 5.8469999997257105e-06, 7.805000000082885e-06, 6.38800000007933e-06, 6.903000000058057e-06, 1.001399999989161e-05, 1.0277000000336045e-05, 6.264000000477665e-06, 1.13470000000504e-05, 8.832999999874858e-06, 6.221999999667105e-06, 9.764000000522799e-06, 7.625000000288651e-06, 9.555000000105451e-06, 6.402999999544079e-06, 6.221999999667105e-06]</msg>
<status status="PASS" starttime="20201029 18:14:21.500" endtime="20201029 18:14:21.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.496" endtime="20201029 18:14:21.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.114" endtime="20201029 18:14:21.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.113" endtime="20201029 18:14:21.503"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.511" endtime="20201029 18:14:21.525"></status>
</kw>
<msg timestamp="20201029 18:14:21.525" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.509" endtime="20201029 18:14:21.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.528" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.526" endtime="20201029 18:14:21.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.529" endtime="20201029 18:14:21.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.507" endtime="20201029 18:14:21.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.505" endtime="20201029 18:14:21.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.537" endtime="20201029 18:14:21.856"></status>
</kw>
<msg timestamp="20201029 18:14:21.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.723116931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.723122944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.536" endtime="20201029 18:14:21.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.723116931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.723122944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.861" endtime="20201029 18:14:21.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.870" endtime="20201029 18:14:21.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.533" endtime="20201029 18:14:21.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.532" endtime="20201029 18:14:21.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:21.877" level="INFO">${RESULT} = [{'diff': 6.013000000137936e-06}, {'diff': 8.082999999992069e-06}, {'diff': 8.402999999823635e-06}, {'diff': 9.26400000000882e-06}, {'diff': 8.459000000016204e-06}, {'diff': 7.583000000366269e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:21.873" endtime="20201029 18:14:21.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:21.882" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.013000000137936e-06, 8.082999999992069e-06, 8.402999999823635e-06, 9.26400000000882e-06, 8.459000000016204e-06, 7.583000000366269e-06, 8.069999999804622e-06, 7.847000000005266e-06, 8.06900...</msg>
<status status="PASS" starttime="20201029 18:14:21.878" endtime="20201029 18:14:21.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.889" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:21.888" endtime="20201029 18:14:21.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.891" level="INFO">VALUE: [6.013000000137936e-06, 8.082999999992069e-06, 8.402999999823635e-06, 9.26400000000882e-06, 8.459000000016204e-06, 7.583000000366269e-06, 8.069999999804622e-06, 7.847000000005266e-06, 8.06900000061006e-06, 6.29200000012986e-06, 1.1834000000376932e-05, 6.861000000135675e-06, 8.333000000249058e-06, 7.2080000004248745e-06, 9.22300000016918e-06, 9.083000000131847e-06, 1.0041000000349243e-05, 6.708999999993637e-06, 6.721999999292905e-06, 8.56900000023586e-06, 9.458000000073241e-06, 1.0430000000560824e-05, 1.0458000000213019e-05, 7.403000000572035e-06, 5.8469999997257105e-06, 7.805000000082885e-06, 6.38800000007933e-06, 6.903000000058057e-06, 1.001399999989161e-05, 1.0277000000336045e-05, 6.264000000477665e-06, 1.13470000000504e-05, 8.832999999874858e-06, 6.221999999667105e-06, 9.764000000522799e-06, 7.625000000288651e-06, 9.555000000105451e-06, 6.402999999544079e-06, 6.221999999667105e-06, 8.084000000074809e-06, 8.848000000227785e-06, 1.1513999999657187e-05, 4.388999999882515e-06, 8.152999999566646e-06, 9.151999999623683e-06, 8.27800000013923e-06, 9.152999999706424e-06, 9.236000000356626e-06, 7.97200000057785e-06, 9.401999999880672e-06, 5.778000000233874e-06, 1.0958000000726997e-05, 1.0833999999348976e-05, 6.777999999485473e-06, 5.69400000038911e-06, 9.625000000568207e-06, 7.042000000012649e-06, 5.819999999268077e-06, 8.638999999810437e-06, 1.1027000000218834e-05, 5.028000000351085e-06, 9.429999999532868e-06, 8.402999999823635e-06, 1.04169999994852e-05]</msg>
<status status="PASS" starttime="20201029 18:14:21.890" endtime="20201029 18:14:21.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.886" endtime="20201029 18:14:21.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.504" endtime="20201029 18:14:21.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.504" endtime="20201029 18:14:21.893"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.901" endtime="20201029 18:14:21.915"></status>
</kw>
<msg timestamp="20201029 18:14:21.916" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.899" endtime="20201029 18:14:21.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.918" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.917" endtime="20201029 18:14:21.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.919" endtime="20201029 18:14:21.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.897" endtime="20201029 18:14:21.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.895" endtime="20201029 18:14:21.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.928" endtime="20201029 18:14:22.248"></status>
</kw>
<msg timestamp="20201029 18:14:22.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.102744764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.102752569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.926" endtime="20201029 18:14:22.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.102744764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.102752569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.253" endtime="20201029 18:14:22.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.263" endtime="20201029 18:14:22.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.924" endtime="20201029 18:14:22.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.922" endtime="20201029 18:14:22.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:22.270" level="INFO">${RESULT} = [{'diff': 7.805000000082885e-06}, {'diff': 6.38800000007933e-06}, {'diff': 6.903000000058057e-06}, {'diff': 1.001399999989161e-05}, {'diff': 1.0277000000336045e-05}, {'diff': 6.264000000477665e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:22.266" endtime="20201029 18:14:22.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:22.275" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.805000000082885e-06, 6.38800000007933e-06, 6.903000000058057e-06, 1.001399999989161e-05, 1.0277000000336045e-05, 6.264000000477665e-06, 1.13470000000504e-05, 8.832999999874858e-06, 6.22199...</msg>
<status status="PASS" starttime="20201029 18:14:22.271" endtime="20201029 18:14:22.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.279" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:22.278" endtime="20201029 18:14:22.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.282" level="INFO">VALUE: [7.805000000082885e-06, 6.38800000007933e-06, 6.903000000058057e-06, 1.001399999989161e-05, 1.0277000000336045e-05, 6.264000000477665e-06, 1.13470000000504e-05, 8.832999999874858e-06, 6.221999999667105e-06, 9.764000000522799e-06, 7.625000000288651e-06, 9.555000000105451e-06, 6.402999999544079e-06, 6.221999999667105e-06, 8.084000000074809e-06, 8.848000000227785e-06, 1.1513999999657187e-05, 4.388999999882515e-06, 8.152999999566646e-06, 9.151999999623683e-06, 8.27800000013923e-06, 9.152999999706424e-06, 9.236000000356626e-06, 7.97200000057785e-06, 9.401999999880672e-06, 5.778000000233874e-06, 1.0958000000726997e-05, 1.0833999999348976e-05, 6.777999999485473e-06, 5.69400000038911e-06, 9.625000000568207e-06, 7.042000000012649e-06, 5.819999999268077e-06, 8.638999999810437e-06, 1.1027000000218834e-05, 5.028000000351085e-06, 9.429999999532868e-06, 8.402999999823635e-06, 1.04169999994852e-05, 6.722000000181083e-06, 6.722000000181083e-06, 8.360999999901253e-06, 7.000000000090267e-06, 5.999999999950489e-06, 6.652999999801068e-06, 6.8469999998654885e-06, 5.568999999816526e-06, 1.0194999999768584e-05, 9.834000000097376e-06, 5.403000000292479e-06, 6.875000000405862e-06, 8.166999999836833e-06, 6.596999999608499e-06, 5.277999999719896e-06, 9.513999999377631e-06, 9.013999999751832e-06, 6.707999999910896e-06, 6.972000000438072e-06, 9.638999999950215e-06, 5.833000000343702e-06, 9.653000000220402e-06, 5.082999999572735e-06, 7.486000000334059e-06, 6.389000000162071e-06]</msg>
<status status="PASS" starttime="20201029 18:14:22.280" endtime="20201029 18:14:22.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.276" endtime="20201029 18:14:22.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.894" endtime="20201029 18:14:22.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.893" endtime="20201029 18:14:22.283"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.292" endtime="20201029 18:14:22.307"></status>
</kw>
<msg timestamp="20201029 18:14:22.307" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.290" endtime="20201029 18:14:22.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.309" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.308" endtime="20201029 18:14:22.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.310" endtime="20201029 18:14:22.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.287" endtime="20201029 18:14:22.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.285" endtime="20201029 18:14:22.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.319" endtime="20201029 18:14:22.633"></status>
</kw>
<msg timestamp="20201029 18:14:22.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.483024222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.48303, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:14:22.318" endtime="20201029 18:14:22.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.483024222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.48303, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:14:22.638" endtime="20201029 18:14:22.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.648" endtime="20201029 18:14:22.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.315" endtime="20201029 18:14:22.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.313" endtime="20201029 18:14:22.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:22.655" level="INFO">${RESULT} = [{'diff': 5.778000000233874e-06}, {'diff': 1.0958000000726997e-05}, {'diff': 1.0833999999348976e-05}, {'diff': 6.777999999485473e-06}, {'diff': 5.69400000038911e-06}, {'diff': 9.625000000568207e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:22.651" endtime="20201029 18:14:22.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:22.660" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.778000000233874e-06, 1.0958000000726997e-05, 1.0833999999348976e-05, 6.777999999485473e-06, 5.69400000038911e-06, 9.625000000568207e-06, 7.042000000012649e-06, 5.819999999268077e-06, 8.638...</msg>
<status status="PASS" starttime="20201029 18:14:22.656" endtime="20201029 18:14:22.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.665" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:22.664" endtime="20201029 18:14:22.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.667" level="INFO">VALUE: [5.778000000233874e-06, 1.0958000000726997e-05, 1.0833999999348976e-05, 6.777999999485473e-06, 5.69400000038911e-06, 9.625000000568207e-06, 7.042000000012649e-06, 5.819999999268077e-06, 8.638999999810437e-06, 1.1027000000218834e-05, 5.028000000351085e-06, 9.429999999532868e-06, 8.402999999823635e-06, 1.04169999994852e-05, 6.722000000181083e-06, 6.722000000181083e-06, 8.360999999901253e-06, 7.000000000090267e-06, 5.999999999950489e-06, 6.652999999801068e-06, 6.8469999998654885e-06, 5.568999999816526e-06, 1.0194999999768584e-05, 9.834000000097376e-06, 5.403000000292479e-06, 6.875000000405862e-06, 8.166999999836833e-06, 6.596999999608499e-06, 5.277999999719896e-06, 9.513999999377631e-06, 9.013999999751832e-06, 6.707999999910896e-06, 6.972000000438072e-06, 9.638999999950215e-06, 5.833000000343702e-06, 9.653000000220402e-06, 5.082999999572735e-06, 7.486000000334059e-06, 6.389000000162071e-06, 9.028000000022018e-06, 5.887999999565352e-06, 7.805000000082885e-06, 9.792000000174994e-06, 6.2080000002850966e-06, 1.115199999990324e-05, 6.528000000116663e-06, 1.020799999995603e-05, 7.764000000243243e-06, 7.166999999697055e-06, 4.709000000602259e-06, 8.902000000254873e-06, 1.0944999999651372e-05, 8.87499999979724e-06, 8.903000000337613e-06, 7.889000000815827e-06, 8.208999999759214e-06, 9.346999999770844e-06, 7.887999999844908e-06, 6.764000000103465e-06, 9.527999999647818e-06, 1.1778000000184363e-05, 5.235999999797514e-06, 5.65299999966129e-06, 9.569000000375638e-06]</msg>
<status status="PASS" starttime="20201029 18:14:22.666" endtime="20201029 18:14:22.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.661" endtime="20201029 18:14:22.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.284" endtime="20201029 18:14:22.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.283" endtime="20201029 18:14:22.669"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.676" endtime="20201029 18:14:22.691"></status>
</kw>
<msg timestamp="20201029 18:14:22.691" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.675" endtime="20201029 18:14:22.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.693" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.692" endtime="20201029 18:14:22.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.694" endtime="20201029 18:14:22.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.672" endtime="20201029 18:14:22.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.671" endtime="20201029 18:14:22.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.703" endtime="20201029 18:14:23.013"></status>
</kw>
<msg timestamp="20201029 18:14:23.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.863969708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.863976583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.702" endtime="20201029 18:14:23.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.863969708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.863976583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.018" endtime="20201029 18:14:23.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.027" endtime="20201029 18:14:23.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.699" endtime="20201029 18:14:23.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.698" endtime="20201029 18:14:23.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:23.035" level="INFO">${RESULT} = [{'diff': 6.875000000405862e-06}, {'diff': 8.166999999836833e-06}, {'diff': 6.596999999608499e-06}, {'diff': 5.277999999719896e-06}, {'diff': 9.513999999377631e-06}, {'diff': 9.013999999751832e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:23.031" endtime="20201029 18:14:23.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:23.040" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.875000000405862e-06, 8.166999999836833e-06, 6.596999999608499e-06, 5.277999999719896e-06, 9.513999999377631e-06, 9.013999999751832e-06, 6.707999999910896e-06, 6.972000000438072e-06, 9.6389...</msg>
<status status="PASS" starttime="20201029 18:14:23.036" endtime="20201029 18:14:23.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.044" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:23.043" endtime="20201029 18:14:23.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.047" level="INFO">VALUE: [6.875000000405862e-06, 8.166999999836833e-06, 6.596999999608499e-06, 5.277999999719896e-06, 9.513999999377631e-06, 9.013999999751832e-06, 6.707999999910896e-06, 6.972000000438072e-06, 9.638999999950215e-06, 5.833000000343702e-06, 9.653000000220402e-06, 5.082999999572735e-06, 7.486000000334059e-06, 6.389000000162071e-06, 9.028000000022018e-06, 5.887999999565352e-06, 7.805000000082885e-06, 9.792000000174994e-06, 6.2080000002850966e-06, 1.115199999990324e-05, 6.528000000116663e-06, 1.020799999995603e-05, 7.764000000243243e-06, 7.166999999697055e-06, 4.709000000602259e-06, 8.902000000254873e-06, 1.0944999999651372e-05, 8.87499999979724e-06, 8.903000000337613e-06, 7.889000000815827e-06, 8.208999999759214e-06, 9.346999999770844e-06, 7.887999999844908e-06, 6.764000000103465e-06, 9.527999999647818e-06, 1.1778000000184363e-05, 5.235999999797514e-06, 5.65299999966129e-06, 9.569000000375638e-06, 6.332999999969502e-06, 6.471999999924094e-06, 7.0279999997424625e-06, 9.971999999969228e-06, 5.832999999455524e-06, 7.833000000623258e-06, 9.485999999725436e-06, 8.207999999676474e-06, 7.347000000379467e-06, 8.861000000415231e-06, 8.457999999933463e-06, 9.152999999706424e-06, 1.1583000000037202e-05, 1.0985999999491014e-05, 5.875000000266084e-06, 9.889000000207204e-06, 1.0514000000405588e-05, 7.93099999985003e-06, 7.611000000018464e-06, 8.111000000532442e-06, 9.319000000118649e-06, 7.847000000005266e-06, 9.082999999243668e-06, 7.528000000256441e-06, 9.194000000434244e-06]</msg>
<status status="PASS" starttime="20201029 18:14:23.046" endtime="20201029 18:14:23.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.041" endtime="20201029 18:14:23.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.670" endtime="20201029 18:14:23.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.669" endtime="20201029 18:14:23.048"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.056" endtime="20201029 18:14:23.071"></status>
</kw>
<msg timestamp="20201029 18:14:23.071" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.055" endtime="20201029 18:14:23.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.074" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.072" endtime="20201029 18:14:23.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.075" endtime="20201029 18:14:23.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.052" endtime="20201029 18:14:23.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.050" endtime="20201029 18:14:23.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.085" endtime="20201029 18:14:23.393"></status>
</kw>
<msg timestamp="20201029 18:14:23.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.244778931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.244787833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.083" endtime="20201029 18:14:23.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.244778931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.244787833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.397" endtime="20201029 18:14:23.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.407" endtime="20201029 18:14:23.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.079" endtime="20201029 18:14:23.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.078" endtime="20201029 18:14:23.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:23.414" level="INFO">${RESULT} = [{'diff': 8.902000000254873e-06}, {'diff': 1.0944999999651372e-05}, {'diff': 8.87499999979724e-06}, {'diff': 8.903000000337613e-06}, {'diff': 7.889000000815827e-06}, {'diff': 8.208999999759214e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:23.410" endtime="20201029 18:14:23.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:23.419" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.902000000254873e-06, 1.0944999999651372e-05, 8.87499999979724e-06, 8.903000000337613e-06, 7.889000000815827e-06, 8.208999999759214e-06, 9.346999999770844e-06, 7.887999999844908e-06, 6.7640...</msg>
<status status="PASS" starttime="20201029 18:14:23.415" endtime="20201029 18:14:23.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.424" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:23.422" endtime="20201029 18:14:23.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.426" level="INFO">VALUE: [8.902000000254873e-06, 1.0944999999651372e-05, 8.87499999979724e-06, 8.903000000337613e-06, 7.889000000815827e-06, 8.208999999759214e-06, 9.346999999770844e-06, 7.887999999844908e-06, 6.764000000103465e-06, 9.527999999647818e-06, 1.1778000000184363e-05, 5.235999999797514e-06, 5.65299999966129e-06, 9.569000000375638e-06, 6.332999999969502e-06, 6.471999999924094e-06, 7.0279999997424625e-06, 9.971999999969228e-06, 5.832999999455524e-06, 7.833000000623258e-06, 9.485999999725436e-06, 8.207999999676474e-06, 7.347000000379467e-06, 8.861000000415231e-06, 8.457999999933463e-06, 9.152999999706424e-06, 1.1583000000037202e-05, 1.0985999999491014e-05, 5.875000000266084e-06, 9.889000000207204e-06, 1.0514000000405588e-05, 7.93099999985003e-06, 7.611000000018464e-06, 8.111000000532442e-06, 9.319000000118649e-06, 7.847000000005266e-06, 9.082999999243668e-06, 7.528000000256441e-06, 9.194000000434244e-06, 7.958000000307663e-06, 8.084000000074809e-06, 1.0278000000418785e-05, 1.0264000000148599e-05, 6.014000000220676e-06, 8.208000000564653e-06, 1.0778000000044585e-05, 6.444999999466461e-06, 7.5700000001788226e-06, 6.389000000162071e-06, 7.291000000186898e-06, 4.875000000126306e-06, 7.194000000154688e-06, 4.582999999946935e-06, 9.444999999885795e-06, 7.985999999959859e-06, 8.347999999713807e-06, 8.443999999663276e-06, 9.291999999661016e-06, 1.065300000036018e-05, 6.9580000001678854e-06, 6.9160000002455035e-06, 7.028000000630641e-06, 6.667000000071255e-06, 6.570000000039045e-06]</msg>
<status status="PASS" starttime="20201029 18:14:23.425" endtime="20201029 18:14:23.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.420" endtime="20201029 18:14:23.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.049" endtime="20201029 18:14:23.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.049" endtime="20201029 18:14:23.428"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.436" endtime="20201029 18:14:23.450"></status>
</kw>
<msg timestamp="20201029 18:14:23.450" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.434" endtime="20201029 18:14:23.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.453" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.451" endtime="20201029 18:14:23.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.454" endtime="20201029 18:14:23.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.432" endtime="20201029 18:14:23.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.430" endtime="20201029 18:14:23.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.463" endtime="20201029 18:14:23.773"></status>
</kw>
<msg timestamp="20201029 18:14:23.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.619623903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.619633056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.461" endtime="20201029 18:14:23.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.619623903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.619633056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.778" endtime="20201029 18:14:23.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.788" endtime="20201029 18:14:23.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.459" endtime="20201029 18:14:23.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.457" endtime="20201029 18:14:23.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:23.796" level="INFO">${RESULT} = [{'diff': 9.152999999706424e-06}, {'diff': 1.1583000000037202e-05}, {'diff': 1.0985999999491014e-05}, {'diff': 5.875000000266084e-06}, {'diff': 9.889000000207204e-06}, {'diff': 1.0514000000405588e-05}...</msg>
<status status="PASS" starttime="20201029 18:14:23.791" endtime="20201029 18:14:23.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:23.802" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.152999999706424e-06, 1.1583000000037202e-05, 1.0985999999491014e-05, 5.875000000266084e-06, 9.889000000207204e-06, 1.0514000000405588e-05, 7.93099999985003e-06, 7.611000000018464e-06, 8.11...</msg>
<status status="PASS" starttime="20201029 18:14:23.797" endtime="20201029 18:14:23.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.808" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:23.807" endtime="20201029 18:14:23.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.812" level="INFO">VALUE: [9.152999999706424e-06, 1.1583000000037202e-05, 1.0985999999491014e-05, 5.875000000266084e-06, 9.889000000207204e-06, 1.0514000000405588e-05, 7.93099999985003e-06, 7.611000000018464e-06, 8.111000000532442e-06, 9.319000000118649e-06, 7.847000000005266e-06, 9.082999999243668e-06, 7.528000000256441e-06, 9.194000000434244e-06, 7.958000000307663e-06, 8.084000000074809e-06, 1.0278000000418785e-05, 1.0264000000148599e-05, 6.014000000220676e-06, 8.208000000564653e-06, 1.0778000000044585e-05, 6.444999999466461e-06, 7.5700000001788226e-06, 6.389000000162071e-06, 7.291000000186898e-06, 4.875000000126306e-06, 7.194000000154688e-06, 4.582999999946935e-06, 9.444999999885795e-06, 7.985999999959859e-06, 8.347999999713807e-06, 8.443999999663276e-06, 9.291999999661016e-06, 1.065300000036018e-05, 6.9580000001678854e-06, 6.9160000002455035e-06, 7.028000000630641e-06, 6.667000000071255e-06, 6.570000000039045e-06, 5.485999999166324e-06, 9.722999999794979e-06, 1.0818999999884227e-05, 7.763999999355065e-06, 6.915999998469147e-06, 9.81999999893901e-06, 5.096999998954743e-06, 6.764000000103465e-06, 7.971999998801493e-06, 7.791999999895438e-06, 8.721999998684282e-06, 1.0208000000844208e-05, 8.819999999687411e-06, 8.666999999462632e-06, 7.901999998338738e-06, 8.526999998537121e-06, 1.0028000000161796e-05, 5.4729999998670564e-06, 9.833000000014636e-06, 8.208999998871036e-06, 9.207999999816252e-06, 7.3329999992211015e-06, 5.874999999377906e-06, 9.846999999396644e-06, 6.166999998669098e-06]</msg>
<status status="PASS" starttime="20201029 18:14:23.810" endtime="20201029 18:14:23.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.803" endtime="20201029 18:14:23.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.429" endtime="20201029 18:14:23.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.428" endtime="20201029 18:14:23.814"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.824" endtime="20201029 18:14:23.839"></status>
</kw>
<msg timestamp="20201029 18:14:23.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.822" endtime="20201029 18:14:23.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.842" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.840" endtime="20201029 18:14:23.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.843" endtime="20201029 18:14:23.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.818" endtime="20201029 18:14:23.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.816" endtime="20201029 18:14:23.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.852" endtime="20201029 18:14:24.168"></status>
</kw>
<msg timestamp="20201029 18:14:24.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.991092639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.991097514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.850" endtime="20201029 18:14:24.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.991092639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.991097514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.173" endtime="20201029 18:14:24.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.183" endtime="20201029 18:14:24.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.848" endtime="20201029 18:14:24.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.846" endtime="20201029 18:14:24.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:24.189" level="INFO">${RESULT} = [{'diff': 4.875000000126306e-06}, {'diff': 7.194000000154688e-06}, {'diff': 4.582999999946935e-06}, {'diff': 9.444999999885795e-06}, {'diff': 7.985999999959859e-06}, {'diff': 8.347999999713807e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:24.186" endtime="20201029 18:14:24.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:24.194" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.875000000126306e-06, 7.194000000154688e-06, 4.582999999946935e-06, 9.444999999885795e-06, 7.985999999959859e-06, 8.347999999713807e-06, 8.443999999663276e-06, 9.291999999661016e-06, 1.0653...</msg>
<status status="PASS" starttime="20201029 18:14:24.190" endtime="20201029 18:14:24.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.199" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:24.198" endtime="20201029 18:14:24.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.201" level="INFO">VALUE: [4.875000000126306e-06, 7.194000000154688e-06, 4.582999999946935e-06, 9.444999999885795e-06, 7.985999999959859e-06, 8.347999999713807e-06, 8.443999999663276e-06, 9.291999999661016e-06, 1.065300000036018e-05, 6.9580000001678854e-06, 6.9160000002455035e-06, 7.028000000630641e-06, 6.667000000071255e-06, 6.570000000039045e-06, 5.485999999166324e-06, 9.722999999794979e-06, 1.0818999999884227e-05, 7.763999999355065e-06, 6.915999998469147e-06, 9.81999999893901e-06, 5.096999998954743e-06, 6.764000000103465e-06, 7.971999998801493e-06, 7.791999999895438e-06, 8.721999998684282e-06, 1.0208000000844208e-05, 8.819999999687411e-06, 8.666999999462632e-06, 7.901999998338738e-06, 8.526999998537121e-06, 1.0028000000161796e-05, 5.4729999998670564e-06, 9.833000000014636e-06, 8.208999998871036e-06, 9.207999999816252e-06, 7.3329999992211015e-06, 5.874999999377906e-06, 9.846999999396644e-06, 6.166999998669098e-06, 6.528000000116663e-06, 9.51400000026581e-06, 6.403000000432257e-06, 7.582999998589912e-06, 8.318999999090693e-06, 7.347000000379467e-06, 1.095899999903338e-05, 1.0098000000624552e-05, 5.471999999784316e-06, 6.722000000181083e-06, 1.005600000070217e-05, 1.0388999999833004e-05, 6.347999999434251e-06, 8.083000000880247e-06, 5.333000000717902e-06, 8.346999999631066e-06, 8.653000000080624e-06, 7.5839999986726525e-06, 7.889000000815827e-06, 1.0152999999846202e-05, 7.096999999234299e-06, 1.0639000000978172e-05, 7.459000000764604e-06, 1.095899999903338e-05, 7.348000000462207e-06]</msg>
<status status="PASS" starttime="20201029 18:14:24.200" endtime="20201029 18:14:24.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.195" endtime="20201029 18:14:24.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.815" endtime="20201029 18:14:24.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.814" endtime="20201029 18:14:24.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.959" endtime="20201029 18:14:24.203"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:14.883" endtime="20201029 18:14:24.203" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:24.210" endtime="20201029 18:14:24.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.209" endtime="20201029 18:14:24.230"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.244" endtime="20201029 18:14:24.260"></status>
</kw>
<msg timestamp="20201029 18:14:24.260" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.242" endtime="20201029 18:14:24.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.263" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.261" endtime="20201029 18:14:24.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.266" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:24.264" endtime="20201029 18:14:24.266"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:24.239" endtime="20201029 18:14:24.267"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:24.237" endtime="20201029 18:14:24.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.236" endtime="20201029 18:14:24.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:24.271" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:24.270" endtime="20201029 18:14:24.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.268" endtime="20201029 18:14:24.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.235" endtime="20201029 18:14:24.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.234" endtime="20201029 18:14:24.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.273" endtime="20201029 18:14:24.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.232" endtime="20201029 18:14:24.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.231" endtime="20201029 18:14:24.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.207" endtime="20201029 18:14:24.275"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.284" endtime="20201029 18:14:24.299"></status>
</kw>
<msg timestamp="20201029 18:14:24.300" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.283" endtime="20201029 18:14:24.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.302" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.301" endtime="20201029 18:14:24.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.303" endtime="20201029 18:14:24.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.280" endtime="20201029 18:14:24.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.278" endtime="20201029 18:14:24.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.313" endtime="20201029 18:14:24.595"></status>
</kw>
<msg timestamp="20201029 18:14:24.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063830625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063836708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.312" endtime="20201029 18:14:24.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063830625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063836708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.600" endtime="20201029 18:14:24.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.608" endtime="20201029 18:14:24.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.308" endtime="20201029 18:14:24.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.306" endtime="20201029 18:14:24.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:24.614" level="INFO">${RESULT} = [{'diff': 6.083000000003946e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7499999999948113e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.7780000000078289e-06}, {'diff': 1.7360000000021802e-0...</msg>
<status status="PASS" starttime="20201029 18:14:24.611" endtime="20201029 18:14:24.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:24.618" level="INFO">${OVERHEAD} = {'diff': [6.083000000003946e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7219999999956714e-06, 1.7780000000078289e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7370000000016539e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:24.615" endtime="20201029 18:14:24.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.622" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:24.621" endtime="20201029 18:14:24.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.625" level="INFO">VALUE: [6.083000000003946e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7219999999956714e-06, 1.7780000000078289e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7220000000095492e-06, 1.750000000008689e-06, 1.7359999999883025e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7220000000095492e-06, 1.7780000000078289e-06, 1.7360000000021802e-06, 1.7359999999883025e-06, 1.7370000000016539e-06, 1.750000000008689e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7499999999948113e-06, 1.7359999999883025e-06, 1.709000000002514e-06, 1.7370000000016539e-06, 1.750000000008689e-06, 1.777999999993951e-06, 1.7360000000021802e-06, 1.7230000000090229e-06, 1.750000000008689e-06, 1.6800000000039006e-06, 1.6949999999960053e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.722999999995145e-06, 1.7359999999883025e-06, 1.76400000000132e-06, 1.750000000008689e-06, 1.6809999999894965e-06]</msg>
<status status="PASS" starttime="20201029 18:14:24.623" endtime="20201029 18:14:24.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.619" endtime="20201029 18:14:24.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.277" endtime="20201029 18:14:24.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.277" endtime="20201029 18:14:24.626"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.635" endtime="20201029 18:14:24.651"></status>
</kw>
<msg timestamp="20201029 18:14:24.651" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.633" endtime="20201029 18:14:24.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.654" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.653" endtime="20201029 18:14:24.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.655" endtime="20201029 18:14:24.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.630" endtime="20201029 18:14:24.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.629" endtime="20201029 18:14:24.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.665" endtime="20201029 18:14:24.971"></status>
</kw>
<msg timestamp="20201029 18:14:24.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064040583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064042278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.663" endtime="20201029 18:14:24.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064040583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064042278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.976" endtime="20201029 18:14:24.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.986" endtime="20201029 18:14:24.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.661" endtime="20201029 18:14:24.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.659" endtime="20201029 18:14:24.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:24.992" level="INFO">${RESULT} = [{'diff': 1.6949999999960053e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.750000000008689e-06}, {'diff': 1.7219999999956714e-0...</msg>
<status status="PASS" starttime="20201029 18:14:24.989" endtime="20201029 18:14:24.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:24.998" level="INFO">${OVERHEAD} = {'diff': [1.6949999999960053e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7360000000021802e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:24.993" endtime="20201029 18:14:24.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.002" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:25.001" endtime="20201029 18:14:25.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.004" level="INFO">VALUE: [1.6949999999960053e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.722999999995145e-06, 1.7359999999883025e-06, 1.76400000000132e-06, 1.750000000008689e-06, 1.6809999999894965e-06, 1.7370000000016539e-06, 1.6939999999965316e-06, 1.7359999999744247e-06, 1.7910000000287418e-06, 1.7360000000299358e-06, 1.6670000000384988e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7640000000151979e-06, 1.6659999999557584e-06, 1.7639999999596867e-06, 1.7230000000090229e-06, 1.7360000000299358e-06, 1.7780000000078289e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7219999999817936e-06, 1.7499999999670557e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7360000000299358e-06, 1.7219999999817936e-06, 1.7360000000299358e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7639999999596867e-06, 1.6529999999903566e-06, 1.7360000000299358e-06, 1.7219999999817936e-06, 1.7360000000299358e-06, 1.6660000000112696e-06, 1.7219999999817936e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7079999999891626e-06, 1.7780000000078289e-06, 1.7360000000299358e-06, 1.7499999999670557e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7220000000373048e-06, 1.7370000000016539e-06, 1.7499999999670557e-06, 1.7499999999670557e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7360000000299358e-06]</msg>
<status status="PASS" starttime="20201029 18:14:25.003" endtime="20201029 18:14:25.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.998" endtime="20201029 18:14:25.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.627" endtime="20201029 18:14:25.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.627" endtime="20201029 18:14:25.006"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.014" endtime="20201029 18:14:25.029"></status>
</kw>
<msg timestamp="20201029 18:14:25.029" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.012" endtime="20201029 18:14:25.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.031" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.030" endtime="20201029 18:14:25.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.032" endtime="20201029 18:14:25.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.010" endtime="20201029 18:14:25.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.008" endtime="20201029 18:14:25.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.041" endtime="20201029 18:14:25.342"></status>
</kw>
<msg timestamp="20201029 18:14:25.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.405032139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.405033917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.040" endtime="20201029 18:14:25.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.405032139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.405033917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.346" endtime="20201029 18:14:25.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.356" endtime="20201029 18:14:25.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.037" endtime="20201029 18:14:25.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.036" endtime="20201029 18:14:25.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:25.363" level="INFO">${RESULT} = [{'diff': 1.7780000000078289e-06}, {'diff': 1.7360000000299358e-06}, {'diff': 1.7499999999670557e-06}, {'diff': 1.7360000000299358e-06}, {'diff': 1.7360000000299358e-06}, {'diff': 1.7220000000373048e-...</msg>
<status status="PASS" starttime="20201029 18:14:25.359" endtime="20201029 18:14:25.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:25.370" level="INFO">${OVERHEAD} = {'diff': [1.7780000000078289e-06, 1.7360000000299358e-06, 1.7499999999670557e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7220000000373048e-06, 1.7370000000016539e-06, 1.7499999999670557e-06...</msg>
<status status="PASS" starttime="20201029 18:14:25.364" endtime="20201029 18:14:25.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.374" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:25.373" endtime="20201029 18:14:25.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.377" level="INFO">VALUE: [1.7780000000078289e-06, 1.7360000000299358e-06, 1.7499999999670557e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7220000000373048e-06, 1.7370000000016539e-06, 1.7499999999670557e-06, 1.7499999999670557e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7499999999115445e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.736000000085447e-06, 1.7780000000078289e-06, 1.7230000000090229e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.764000000070709e-06, 1.7369999999461427e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.736000000085447e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7369999999461427e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.736000000085447e-06, 1.7499999999115445e-06, 1.6949999999127385e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7220000000373048e-06, 1.7500000000225668e-06, 1.736000000085447e-06, 1.736000000085447e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.7499999999115445e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.736000000085447e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7220000000373048e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.709000000071903e-06]</msg>
<status status="PASS" starttime="20201029 18:14:25.375" endtime="20201029 18:14:25.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.371" endtime="20201029 18:14:25.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.007" endtime="20201029 18:14:25.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.007" endtime="20201029 18:14:25.379"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.386" endtime="20201029 18:14:25.401"></status>
</kw>
<msg timestamp="20201029 18:14:25.402" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.385" endtime="20201029 18:14:25.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.404" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.403" endtime="20201029 18:14:25.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.405" endtime="20201029 18:14:25.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.382" endtime="20201029 18:14:25.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.381" endtime="20201029 18:14:25.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.414" endtime="20201029 18:14:25.714"></status>
</kw>
<msg timestamp="20201029 18:14:25.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.773630569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.773632319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.413" endtime="20201029 18:14:25.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.773630569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.773632319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.719" endtime="20201029 18:14:25.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.729" endtime="20201029 18:14:25.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.410" endtime="20201029 18:14:25.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.408" endtime="20201029 18:14:25.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:25.736" level="INFO">${RESULT} = [{'diff': 1.7499999999115445e-06}, {'diff': 1.737000000057165e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7500000000225668e-0...</msg>
<status status="PASS" starttime="20201029 18:14:25.732" endtime="20201029 18:14:25.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:25.741" level="INFO">${OVERHEAD} = {'diff': [1.7499999999115445e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.736000000085447e-06, 1.7359999999744247e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:25.737" endtime="20201029 18:14:25.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.745" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:25.744" endtime="20201029 18:14:25.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.747" level="INFO">VALUE: [1.7499999999115445e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.736000000085447e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7220000000373048e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.709000000071903e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.737000000057165e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7909999998622084e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7919999999449487e-06, 1.7230000000090229e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7769999998140662e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7499999998005222e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7770000000361108e-06, 1.764000000070709e-06, 1.7500000000225668e-06, 1.7499999998005222e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7780000001188512e-06, 1.7359999999744247e-06, 1.737000000057165e-06]</msg>
<status status="PASS" starttime="20201029 18:14:25.746" endtime="20201029 18:14:25.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.741" endtime="20201029 18:14:25.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.379" endtime="20201029 18:14:25.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.379" endtime="20201029 18:14:25.749"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.758" endtime="20201029 18:14:25.773"></status>
</kw>
<msg timestamp="20201029 18:14:25.774" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.756" endtime="20201029 18:14:25.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.776" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.775" endtime="20201029 18:14:25.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.777" endtime="20201029 18:14:25.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.753" endtime="20201029 18:14:25.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.751" endtime="20201029 18:14:25.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.786" endtime="20201029 18:14:26.087"></status>
</kw>
<msg timestamp="20201029 18:14:26.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.137084056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.137085833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.784" endtime="20201029 18:14:26.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.137084056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.137085833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.092" endtime="20201029 18:14:26.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.102" endtime="20201029 18:14:26.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.782" endtime="20201029 18:14:26.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.780" endtime="20201029 18:14:26.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:26.109" level="INFO">${RESULT} = [{'diff': 1.7770000000361108e-06}, {'diff': 1.764000000070709e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7499999998005222e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7219999999262825e-0...</msg>
<status status="PASS" starttime="20201029 18:14:26.105" endtime="20201029 18:14:26.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:26.114" level="INFO">${OVERHEAD} = {'diff': [1.7770000000361108e-06, 1.764000000070709e-06, 1.7500000000225668e-06, 1.7499999998005222e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7500000000225668e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:26.110" endtime="20201029 18:14:26.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.118" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:26.117" endtime="20201029 18:14:26.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.121" level="INFO">VALUE: [1.7770000000361108e-06, 1.764000000070709e-06, 1.7500000000225668e-06, 1.7499999998005222e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7780000001188512e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7919999999449487e-06, 1.6659999999557584e-06, 1.764000000070709e-06, 1.764000000070709e-06, 1.737000000057165e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.722000000148327e-06, 1.7079999998781403e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.7369999998351204e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7369999998351204e-06, 1.764000000070709e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.764000000070709e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.666000000177803e-06, 1.7359999999744247e-06, 1.805999999993091e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.6939999998299982e-06, 1.7359999999744247e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201029 18:14:26.119" endtime="20201029 18:14:26.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.115" endtime="20201029 18:14:26.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.750" endtime="20201029 18:14:26.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.750" endtime="20201029 18:14:26.123"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.130" endtime="20201029 18:14:26.146"></status>
</kw>
<msg timestamp="20201029 18:14:26.146" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.129" endtime="20201029 18:14:26.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.149" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.147" endtime="20201029 18:14:26.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.150" endtime="20201029 18:14:26.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.126" endtime="20201029 18:14:26.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.125" endtime="20201029 18:14:26.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.159" endtime="20201029 18:14:26.468"></status>
</kw>
<msg timestamp="20201029 18:14:26.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.49842475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.498426486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:26.157" endtime="20201029 18:14:26.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.49842475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.498426486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:26.475" endtime="20201029 18:14:26.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.486" endtime="20201029 18:14:26.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.155" endtime="20201029 18:14:26.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.153" endtime="20201029 18:14:26.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:26.497" level="INFO">${RESULT} = [{'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.666000000177803e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.805999999993091e-06...</msg>
<status status="PASS" starttime="20201029 18:14:26.492" endtime="20201029 18:14:26.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:26.504" level="INFO">${OVERHEAD} = {'diff': [1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.666000000177803e-06, 1.7359999999744247e-06, 1.805999999993091e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:26.499" endtime="20201029 18:14:26.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.509" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:26.508" endtime="20201029 18:14:26.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.511" level="INFO">VALUE: [1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.666000000177803e-06, 1.7359999999744247e-06, 1.805999999993091e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.6939999998299982e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.764000000070709e-06, 1.6949999999127385e-06, 1.737000000057165e-06, 1.737000000057165e-06, 1.7219999999262825e-06, 1.764000000070709e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7770000000361108e-06, 1.7770000000361108e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7629999999879686e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7779999998968066e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7919999999449487e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7779999998968066e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7779999998968066e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7089999999608807e-06, 1.7359999999744247e-06]</msg>
<status status="PASS" starttime="20201029 18:14:26.510" endtime="20201029 18:14:26.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.505" endtime="20201029 18:14:26.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.123" endtime="20201029 18:14:26.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.123" endtime="20201029 18:14:26.513"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.522" endtime="20201029 18:14:26.537"></status>
</kw>
<msg timestamp="20201029 18:14:26.538" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.520" endtime="20201029 18:14:26.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.541" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.539" endtime="20201029 18:14:26.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.542" endtime="20201029 18:14:26.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.517" endtime="20201029 18:14:26.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.516" endtime="20201029 18:14:26.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.552" endtime="20201029 18:14:26.866"></status>
</kw>
<msg timestamp="20201029 18:14:26.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.860055889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.860057667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.550" endtime="20201029 18:14:26.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.860055889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.860057667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.871" endtime="20201029 18:14:26.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.881" endtime="20201029 18:14:26.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.547" endtime="20201029 18:14:26.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.545" endtime="20201029 18:14:26.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:26.888" level="INFO">${RESULT} = [{'diff': 1.7779999998968066e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7779999998968066e-06}, {'diff': 1.7500000000225668e-...</msg>
<status status="PASS" starttime="20201029 18:14:26.884" endtime="20201029 18:14:26.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:26.893" level="INFO">${OVERHEAD} = {'diff': [1.7779999998968066e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7779999998968066e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7219999999262825e-06...</msg>
<status status="PASS" starttime="20201029 18:14:26.889" endtime="20201029 18:14:26.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.897" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:26.896" endtime="20201029 18:14:26.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.901" level="INFO">VALUE: [1.7779999998968066e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7779999998968066e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7089999999608807e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7780000001188512e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.681000000086641e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7640000002927536e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7360000001964693e-06, 1.708999999738836e-06, 1.7360000001964693e-06, 1.7639999998486644e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.777999999674762e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7919999999449487e-06, 1.777999999674762e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7919999999449487e-06, 1.7370000002792096e-06, 1.708000000100185e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7370000002792096e-06, 1.7230000000090229e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201029 18:14:26.899" endtime="20201029 18:14:26.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.894" endtime="20201029 18:14:26.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.514" endtime="20201029 18:14:26.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.514" endtime="20201029 18:14:26.906"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.915" endtime="20201029 18:14:26.930"></status>
</kw>
<msg timestamp="20201029 18:14:26.930" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.913" endtime="20201029 18:14:26.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.933" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.931" endtime="20201029 18:14:26.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.934" endtime="20201029 18:14:26.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.911" endtime="20201029 18:14:26.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.908" endtime="20201029 18:14:26.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.943" endtime="20201029 18:14:27.269"></status>
</kw>
<msg timestamp="20201029 18:14:27.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.241461083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.241462875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.941" endtime="20201029 18:14:27.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.241461083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.241462875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:27.274" endtime="20201029 18:14:27.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.284" endtime="20201029 18:14:27.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.939" endtime="20201029 18:14:27.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.937" endtime="20201029 18:14:27.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:27.291" level="INFO">${RESULT} = [{'diff': 1.7919999999449487e-06}, {'diff': 1.777999999674762e-06}, {'diff': 1.7230000000090229e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7919999999449487e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:27.288" endtime="20201029 18:14:27.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:27.297" level="INFO">${OVERHEAD} = {'diff': [1.7919999999449487e-06, 1.777999999674762e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7919999999449487e-06, 1.7370000002792096e-06, 1.708000000100185e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:14:27.292" endtime="20201029 18:14:27.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.302" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:27.301" endtime="20201029 18:14:27.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.304" level="INFO">VALUE: [1.7919999999449487e-06, 1.777999999674762e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7919999999449487e-06, 1.7370000002792096e-06, 1.708000000100185e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7370000002792096e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.6800000000039006e-06, 1.7780000001188512e-06, 1.7500000000225668e-06, 1.6949999999127385e-06, 1.7639999998486644e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7090000001829253e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.6949999999127385e-06, 1.777999999674762e-06]</msg>
<status status="PASS" starttime="20201029 18:14:27.303" endtime="20201029 18:14:27.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.298" endtime="20201029 18:14:27.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.907" endtime="20201029 18:14:27.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.906" endtime="20201029 18:14:27.306"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.314" endtime="20201029 18:14:27.329"></status>
</kw>
<msg timestamp="20201029 18:14:27.329" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.313" endtime="20201029 18:14:27.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.332" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.330" endtime="20201029 18:14:27.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.333" endtime="20201029 18:14:27.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.310" endtime="20201029 18:14:27.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.308" endtime="20201029 18:14:27.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.342" endtime="20201029 18:14:27.654"></status>
</kw>
<msg timestamp="20201029 18:14:27.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.624653806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.624655542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:27.340" endtime="20201029 18:14:27.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.624653806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.624655542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:27.659" endtime="20201029 18:14:27.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.669" endtime="20201029 18:14:27.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.338" endtime="20201029 18:14:27.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.336" endtime="20201029 18:14:27.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:27.677" level="INFO">${RESULT} = [{'diff': 1.7360000001964693e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7780000001188512e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000001964693e-06},...</msg>
<status status="PASS" starttime="20201029 18:14:27.672" endtime="20201029 18:14:27.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:27.682" level="INFO">${OVERHEAD} = {'diff': [1.7360000001964693e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73...</msg>
<status status="PASS" starttime="20201029 18:14:27.678" endtime="20201029 18:14:27.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:27.685" endtime="20201029 18:14:27.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.689" level="INFO">VALUE: [1.7360000001964693e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.6949999999127385e-06, 1.777999999674762e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.762999999765924e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7639999998486644e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7369999998351204e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7220000003703717e-06, 1.7639999998486644e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7640000002927536e-06, 1.7360000001964693e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7370000002792096e-06, 1.7369999998351204e-06]</msg>
<status status="PASS" starttime="20201029 18:14:27.687" endtime="20201029 18:14:27.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.683" endtime="20201029 18:14:27.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.307" endtime="20201029 18:14:27.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.307" endtime="20201029 18:14:27.691"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.700" endtime="20201029 18:14:27.717"></status>
</kw>
<msg timestamp="20201029 18:14:27.718" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.698" endtime="20201029 18:14:27.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.723" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.721" endtime="20201029 18:14:27.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.724" endtime="20201029 18:14:27.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.695" endtime="20201029 18:14:27.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.693" endtime="20201029 18:14:27.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.738" endtime="20201029 18:14:28.067"></status>
</kw>
<msg timestamp="20201029 18:14:28.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.014920583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.014922319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:27.735" endtime="20201029 18:14:28.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.014920583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.014922319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:28.071" endtime="20201029 18:14:28.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.081" endtime="20201029 18:14:28.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.731" endtime="20201029 18:14:28.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.729" endtime="20201029 18:14:28.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:28.088" level="INFO">${RESULT} = [{'diff': 1.7360000001964693e-06}, {'diff': 1.7369999998351204e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7919999999449487e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000001964693e-06},...</msg>
<status status="PASS" starttime="20201029 18:14:28.085" endtime="20201029 18:14:28.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:28.093" level="INFO">${OVERHEAD} = {'diff': [1.7360000001964693e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:14:28.089" endtime="20201029 18:14:28.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.098" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:28.096" endtime="20201029 18:14:28.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.100" level="INFO">VALUE: [1.7360000001964693e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7370000002792096e-06, 1.7369999998351204e-06, 1.7639999998486644e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.708999999738836e-06, 1.6939999998299982e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7090000001829253e-06, 1.7639999998486644e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.6669999998164542e-06, 1.7219999999262825e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7639999998486644e-06, 1.7090000001829253e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7220000003703717e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06]</msg>
<status status="PASS" starttime="20201029 18:14:28.099" endtime="20201029 18:14:28.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.094" endtime="20201029 18:14:28.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.692" endtime="20201029 18:14:28.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.691" endtime="20201029 18:14:28.102"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.110" endtime="20201029 18:14:28.124"></status>
</kw>
<msg timestamp="20201029 18:14:28.125" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.108" endtime="20201029 18:14:28.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.127" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.126" endtime="20201029 18:14:28.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.128" endtime="20201029 18:14:28.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.106" endtime="20201029 18:14:28.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.104" endtime="20201029 18:14:28.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.137" endtime="20201029 18:14:28.448"></status>
</kw>
<msg timestamp="20201029 18:14:28.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.391923514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.39192525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:28.136" endtime="20201029 18:14:28.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.391923514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.39192525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:28.453" endtime="20201029 18:14:28.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.462" endtime="20201029 18:14:28.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.133" endtime="20201029 18:14:28.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.131" endtime="20201029 18:14:28.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:28.469" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.7230000000090229e-06...</msg>
<status status="PASS" starttime="20201029 18:14:28.466" endtime="20201029 18:14:28.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:28.475" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7220000003703717e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73...</msg>
<status status="PASS" starttime="20201029 18:14:28.470" endtime="20201029 18:14:28.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.479" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:28.478" endtime="20201029 18:14:28.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.481" level="INFO">VALUE: [1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7220000003703717e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.8059999997710463e-06, 1.7500000000225668e-06, 1.7639999998486644e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.820000000041233e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7230000000090229e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.6940000002740874e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201029 18:14:28.480" endtime="20201029 18:14:28.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.475" endtime="20201029 18:14:28.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.103" endtime="20201029 18:14:28.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.102" endtime="20201029 18:14:28.483"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.491" endtime="20201029 18:14:28.506"></status>
</kw>
<msg timestamp="20201029 18:14:28.506" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.489" endtime="20201029 18:14:28.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.509" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.507" endtime="20201029 18:14:28.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.510" endtime="20201029 18:14:28.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.487" endtime="20201029 18:14:28.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.485" endtime="20201029 18:14:28.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.519" endtime="20201029 18:14:28.837"></status>
</kw>
<msg timestamp="20201029 18:14:28.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.7924165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.792418236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:28.517" endtime="20201029 18:14:28.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.7924165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.792418236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:28.842" endtime="20201029 18:14:28.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.852" endtime="20201029 18:14:28.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.515" endtime="20201029 18:14:28.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.513" endtime="20201029 18:14:28.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:28.859" level="INFO">${RESULT} = [{'diff': 1.7360000001964693e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.7360000001964693e-06...</msg>
<status status="PASS" starttime="20201029 18:14:28.856" endtime="20201029 18:14:28.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:28.864" level="INFO">${OVERHEAD} = {'diff': [1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:14:28.860" endtime="20201029 18:14:28.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.868" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:28.867" endtime="20201029 18:14:28.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.871" level="INFO">VALUE: [1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.6940000002740874e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7229999995649337e-06, 1.6670000002605434e-06, 1.6809999996425518e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7769999995920216e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.723000000453112e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7090000001829253e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7769999995920216e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7229999995649337e-06, 1.7219999994821933e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 18:14:28.869" endtime="20201029 18:14:28.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.865" endtime="20201029 18:14:28.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.484" endtime="20201029 18:14:28.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.483" endtime="20201029 18:14:28.873"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.882" endtime="20201029 18:14:28.897"></status>
</kw>
<msg timestamp="20201029 18:14:28.898" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.879" endtime="20201029 18:14:28.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.900" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.899" endtime="20201029 18:14:28.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.902" endtime="20201029 18:14:28.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.877" endtime="20201029 18:14:28.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.875" endtime="20201029 18:14:28.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.911" endtime="20201029 18:14:29.233"></status>
</kw>
<msg timestamp="20201029 18:14:29.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.162547319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.162549056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:28.909" endtime="20201029 18:14:29.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.162547319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.162549056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.238" endtime="20201029 18:14:29.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.248" endtime="20201029 18:14:29.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.907" endtime="20201029 18:14:29.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.905" endtime="20201029 18:14:29.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:29.255" level="INFO">${RESULT} = [{'diff': 1.7369999998351204e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7640000002927536e-06}, {'diff': 1.7780000005629404e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:29.251" endtime="20201029 18:14:29.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:29.260" level="INFO">${OVERHEAD} = {'diff': [1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640...</msg>
<status status="PASS" starttime="20201029 18:14:29.256" endtime="20201029 18:14:29.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.264" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:29.263" endtime="20201029 18:14:29.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.267" level="INFO">VALUE: [1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7229999995649337e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.7769999995920216e-06, 1.7360000006405585e-06, 1.7639999994045752e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.723000000453112e-06, 1.7090000001829253e-06, 1.7499999991343884e-06, 1.73599999975238e-06, 1.7089999992947469e-06]</msg>
<status status="PASS" starttime="20201029 18:14:29.265" endtime="20201029 18:14:29.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.261" endtime="20201029 18:14:29.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.874" endtime="20201029 18:14:29.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.873" endtime="20201029 18:14:29.269"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.279" endtime="20201029 18:14:29.299"></status>
</kw>
<msg timestamp="20201029 18:14:29.300" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.275" endtime="20201029 18:14:29.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.306" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.303" endtime="20201029 18:14:29.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.308" endtime="20201029 18:14:29.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.272" endtime="20201029 18:14:29.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.271" endtime="20201029 18:14:29.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.327" endtime="20201029 18:14:29.641"></status>
</kw>
<msg timestamp="20201029 18:14:29.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.543678167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.543679903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.323" endtime="20201029 18:14:29.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.543678167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.543679903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.646" endtime="20201029 18:14:29.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.656" endtime="20201029 18:14:29.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.318" endtime="20201029 18:14:29.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.314" endtime="20201029 18:14:29.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:29.663" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.777999999674762e-06}, {'diff': 1.73599999975238e-06}, {'diff...</msg>
<status status="PASS" starttime="20201029 18:14:29.659" endtime="20201029 18:14:29.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:29.668" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.75000000002...</msg>
<status status="PASS" starttime="20201029 18:14:29.664" endtime="20201029 18:14:29.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.672" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:29.671" endtime="20201029 18:14:29.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.675" level="INFO">VALUE: [1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.723000000453112e-06, 1.7090000001829253e-06, 1.7499999991343884e-06, 1.73599999975238e-06, 1.7089999992947469e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.6519999999076163e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.6670000002605434e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7499999991343884e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.777999999674762e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.7639999994045752e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.777999999674762e-06, 1.7360000006405585e-06]</msg>
<status status="PASS" starttime="20201029 18:14:29.674" endtime="20201029 18:14:29.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.669" endtime="20201029 18:14:29.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.270" endtime="20201029 18:14:29.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.269" endtime="20201029 18:14:29.677"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.685" endtime="20201029 18:14:29.701"></status>
</kw>
<msg timestamp="20201029 18:14:29.701" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.683" endtime="20201029 18:14:29.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.704" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.702" endtime="20201029 18:14:29.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.705" endtime="20201029 18:14:29.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.681" endtime="20201029 18:14:29.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.679" endtime="20201029 18:14:29.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.714" endtime="20201029 18:14:30.031"></status>
</kw>
<msg timestamp="20201029 18:14:30.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.931750903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.931752653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.712" endtime="20201029 18:14:30.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.931750903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.931752653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:30.036" endtime="20201029 18:14:30.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.046" endtime="20201029 18:14:30.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.710" endtime="20201029 18:14:30.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.708" endtime="20201029 18:14:30.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:30.052" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.7639999994045752e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.73599999975238e-06},...</msg>
<status status="PASS" starttime="20201029 18:14:30.049" endtime="20201029 18:14:30.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:30.057" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.7639999994045752e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73...</msg>
<status status="PASS" starttime="20201029 18:14:30.053" endtime="20201029 18:14:30.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.061" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:30.060" endtime="20201029 18:14:30.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.064" level="INFO">VALUE: [1.7500000000225668e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.7639999994045752e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.777999999674762e-06, 1.7360000006405585e-06, 1.6939999998299982e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7780000005629404e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.6939999998299982e-06, 1.7639999994045752e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.6810000005307302e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7639999994045752e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7360000006405585e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 18:14:30.062" endtime="20201029 18:14:30.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.058" endtime="20201029 18:14:30.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.678" endtime="20201029 18:14:30.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.677" endtime="20201029 18:14:30.066"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.074" endtime="20201029 18:14:30.089"></status>
</kw>
<msg timestamp="20201029 18:14:30.090" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.073" endtime="20201029 18:14:30.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.092" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.091" endtime="20201029 18:14:30.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.093" endtime="20201029 18:14:30.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.069" endtime="20201029 18:14:30.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.068" endtime="20201029 18:14:30.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.107" endtime="20201029 18:14:30.428"></status>
</kw>
<msg timestamp="20201029 18:14:30.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.324777125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.324778861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:30.104" endtime="20201029 18:14:30.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.324777125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.324778861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:30.433" endtime="20201029 18:14:30.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.443" endtime="20201029 18:14:30.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.101" endtime="20201029 18:14:30.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.099" endtime="20201029 18:14:30.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:30.450" level="INFO">${RESULT} = [{'diff': 1.7360000006405585e-06}, {'diff': 1.7370000007232989e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.6949999999127385e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:30.446" endtime="20201029 18:14:30.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:30.455" level="INFO">${OVERHEAD} = {'diff': [1.7360000006405585e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.735999...</msg>
<status status="PASS" starttime="20201029 18:14:30.451" endtime="20201029 18:14:30.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.459" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:30.458" endtime="20201029 18:14:30.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.462" level="INFO">VALUE: [1.7360000006405585e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7919999999449487e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7219999994821933e-06, 1.819000000402582e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.8050000001323951e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7229999995649337e-06, 1.7229999995649337e-06, 1.7629999993218348e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.7360000006405585e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.8200000004853223e-06, 1.7780000005629404e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7909999998622084e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7370000007232989e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 18:14:30.460" endtime="20201029 18:14:30.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.456" endtime="20201029 18:14:30.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.066" endtime="20201029 18:14:30.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.066" endtime="20201029 18:14:30.464"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.472" endtime="20201029 18:14:30.487"></status>
</kw>
<msg timestamp="20201029 18:14:30.488" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.470" endtime="20201029 18:14:30.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.490" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.489" endtime="20201029 18:14:30.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.491" endtime="20201029 18:14:30.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.468" endtime="20201029 18:14:30.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.466" endtime="20201029 18:14:30.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.501" endtime="20201029 18:14:30.813"></status>
</kw>
<msg timestamp="20201029 18:14:30.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.70428675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.704288486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:30.500" endtime="20201029 18:14:30.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.70428675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.704288486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:30.817" endtime="20201029 18:14:30.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.827" endtime="20201029 18:14:30.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.496" endtime="20201029 18:14:30.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.494" endtime="20201029 18:14:30.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:30.834" level="INFO">${RESULT} = [{'diff': 1.7360000006405585e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7909999998622084e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06},...</msg>
<status status="PASS" starttime="20201029 18:14:30.831" endtime="20201029 18:14:30.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:30.840" level="INFO">${OVERHEAD} = {'diff': [1.7360000006405585e-06, 1.7360000006405585e-06, 1.7909999998622084e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7360000006405585e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:14:30.835" endtime="20201029 18:14:30.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.844" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:30.843" endtime="20201029 18:14:30.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.847" level="INFO">VALUE: [1.7360000006405585e-06, 1.7360000006405585e-06, 1.7909999998622084e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7370000007232989e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7770000004802e-06, 1.7500000000225668e-06, 1.7639999994045752e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7639999994045752e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 18:14:30.845" endtime="20201029 18:14:30.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.841" endtime="20201029 18:14:30.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.465" endtime="20201029 18:14:30.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.464" endtime="20201029 18:14:30.849"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.857" endtime="20201029 18:14:30.873"></status>
</kw>
<msg timestamp="20201029 18:14:30.873" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.855" endtime="20201029 18:14:30.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.876" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.874" endtime="20201029 18:14:30.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.877" endtime="20201029 18:14:30.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.852" endtime="20201029 18:14:30.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.851" endtime="20201029 18:14:30.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.887" endtime="20201029 18:14:31.206"></status>
</kw>
<msg timestamp="20201029 18:14:31.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.091636139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.091637889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:30.885" endtime="20201029 18:14:31.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.091636139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.091637889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.212" endtime="20201029 18:14:31.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.225" endtime="20201029 18:14:31.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.881" endtime="20201029 18:14:31.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.880" endtime="20201029 18:14:31.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:31.233" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.7639999994045752e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.723000000453112e-0...</msg>
<status status="PASS" starttime="20201029 18:14:31.229" endtime="20201029 18:14:31.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:31.237" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.7639999994045752e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7...</msg>
<status status="PASS" starttime="20201029 18:14:31.234" endtime="20201029 18:14:31.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.242" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:31.241" endtime="20201029 18:14:31.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.245" level="INFO">VALUE: [1.7500000000225668e-06, 1.7639999994045752e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.666000000177803e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7769999995920216e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7919999999449487e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 18:14:31.243" endtime="20201029 18:14:31.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.238" endtime="20201029 18:14:31.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.850" endtime="20201029 18:14:31.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.849" endtime="20201029 18:14:31.247"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.255" endtime="20201029 18:14:31.270"></status>
</kw>
<msg timestamp="20201029 18:14:31.271" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.253" endtime="20201029 18:14:31.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.273" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.272" endtime="20201029 18:14:31.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.274" endtime="20201029 18:14:31.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.251" endtime="20201029 18:14:31.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.249" endtime="20201029 18:14:31.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.283" endtime="20201029 18:14:31.606"></status>
</kw>
<msg timestamp="20201029 18:14:31.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.467598736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.467600486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.282" endtime="20201029 18:14:31.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.467598736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.467600486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.611" endtime="20201029 18:14:31.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.621" endtime="20201029 18:14:31.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.279" endtime="20201029 18:14:31.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.278" endtime="20201029 18:14:31.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:31.628" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7769999995920216e-06}, {'diff': 1.7500000000225668e-...</msg>
<status status="PASS" starttime="20201029 18:14:31.625" endtime="20201029 18:14:31.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:31.633" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7769999995920216e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:14:31.629" endtime="20201029 18:14:31.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.638" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:31.637" endtime="20201029 18:14:31.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.640" level="INFO">VALUE: [1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7769999995920216e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.666000000177803e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.6670000002605434e-06, 1.777999999674762e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7769999995920216e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.777999999674762e-06, 1.7370000007232989e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.777999999674762e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.7769999995920216e-06, 1.7360000006405585e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201029 18:14:31.639" endtime="20201029 18:14:31.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.634" endtime="20201029 18:14:31.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.248" endtime="20201029 18:14:31.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.247" endtime="20201029 18:14:31.642"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.650" endtime="20201029 18:14:31.666"></status>
</kw>
<msg timestamp="20201029 18:14:31.666" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.649" endtime="20201029 18:14:31.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.668" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.667" endtime="20201029 18:14:31.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.670" endtime="20201029 18:14:31.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.646" endtime="20201029 18:14:31.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.644" endtime="20201029 18:14:31.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.679" endtime="20201029 18:14:31.988"></status>
</kw>
<msg timestamp="20201029 18:14:31.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.856675069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.856676806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.677" endtime="20201029 18:14:31.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.856675069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.856676806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.993" endtime="20201029 18:14:32.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.004" endtime="20201029 18:14:32.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.674" endtime="20201029 18:14:32.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.673" endtime="20201029 18:14:32.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:32.011" level="INFO">${RESULT} = [{'diff': 1.7370000007232989e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.777999999674762e-06}, {'diff': 1.777999999674762e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:32.007" endtime="20201029 18:14:32.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:32.016" level="INFO">${OVERHEAD} = {'diff': [1.7370000007232989e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.777999999674762e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7219...</msg>
<status status="PASS" starttime="20201029 18:14:32.012" endtime="20201029 18:14:32.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.020" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:32.019" endtime="20201029 18:14:32.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.023" level="INFO">VALUE: [1.7370000007232989e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.777999999674762e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.7769999995920216e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.7769999995920216e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.666000000177803e-06, 1.6670000002605434e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7780000005629404e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7630000002100132e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.8060000002151355e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 18:14:32.021" endtime="20201029 18:14:32.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.017" endtime="20201029 18:14:32.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.643" endtime="20201029 18:14:32.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.643" endtime="20201029 18:14:32.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.276" endtime="20201029 18:14:32.130"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:24.205" endtime="20201029 18:14:32.131" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:32.138" endtime="20201029 18:14:32.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.136" endtime="20201029 18:14:32.158"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.174" endtime="20201029 18:14:32.190"></status>
</kw>
<msg timestamp="20201029 18:14:32.191" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.172" endtime="20201029 18:14:32.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.193" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.192" endtime="20201029 18:14:32.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.196" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:32.194" endtime="20201029 18:14:32.197"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:32.170" endtime="20201029 18:14:32.197"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:32.167" endtime="20201029 18:14:32.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.166" endtime="20201029 18:14:32.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:32.205" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:32.204" endtime="20201029 18:14:32.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.199" endtime="20201029 18:14:32.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.165" endtime="20201029 18:14:32.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.164" endtime="20201029 18:14:32.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.209" endtime="20201029 18:14:32.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.160" endtime="20201029 18:14:32.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.158" endtime="20201029 18:14:32.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.135" endtime="20201029 18:14:32.215"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.234" endtime="20201029 18:14:32.261"></status>
</kw>
<msg timestamp="20201029 18:14:32.262" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.230" endtime="20201029 18:14:32.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.267" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.264" endtime="20201029 18:14:32.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.270" endtime="20201029 18:14:32.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.224" endtime="20201029 18:14:32.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.220" endtime="20201029 18:14:32.276"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.281" endtime="20201029 18:14:32.284"></status>
</kw>
<msg timestamp="20201029 18:14:32.285" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:32.278" endtime="20201029 18:14:32.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.294" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:32.292" endtime="20201029 18:14:32.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.301" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:32.297" endtime="20201029 18:14:32.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.287" endtime="20201029 18:14:32.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.306" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:32.305" endtime="20201029 18:14:32.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.308" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:32.307" endtime="20201029 18:14:32.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.303" endtime="20201029 18:14:32.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.316" endtime="20201029 18:14:32.603"></status>
</kw>
<msg timestamp="20201029 18:14:32.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.087946806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.087980889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:32.314" endtime="20201029 18:14:32.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.087946806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.087980889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:32.607" endtime="20201029 18:14:32.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.616" endtime="20201029 18:14:32.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.312" endtime="20201029 18:14:32.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.310" endtime="20201029 18:14:32.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:32.622" level="INFO">${RESULT} = [{'diff': 3.408300000000419e-05}, {'diff': 8.041999999999772e-06}, {'diff': 8.05600000000628e-06}, {'diff': 8.041999999999772e-06}, {'diff': 8.139000000004226e-06}, {'diff': 8.055999999992403e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:32.619" endtime="20201029 18:14:32.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:32.626" level="INFO">${OVERHEAD} = {'diff': [3.408300000000419e-05, 8.041999999999772e-06, 8.05600000000628e-06, 8.041999999999772e-06, 8.139000000004226e-06, 8.055999999992403e-06, 8.055999999992403e-06, 8.05600000000628e-06, 8.041999...</msg>
<status status="PASS" starttime="20201029 18:14:32.623" endtime="20201029 18:14:32.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.632" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:14:32.630" endtime="20201029 18:14:32.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.634" level="INFO">VALUE: [3.408300000000419e-05, 8.041999999999772e-06, 8.05600000000628e-06, 8.041999999999772e-06, 8.139000000004226e-06, 8.055999999992403e-06, 8.055999999992403e-06, 8.05600000000628e-06, 8.041999999999772e-06, 8.055999999992403e-06, 8.041000000000298e-06, 8.069999999998911e-06, 8.083999999991542e-06, 8.027000000007667e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.054999999992929e-06, 8.083000000005947e-06, 8.055999999992403e-06, 8.055000000006807e-06, 8.05600000000628e-06, 8.05600000000628e-06, 8.055999999992403e-06, 8.05600000000628e-06, 8.111000000005086e-06, 8.041000000000298e-06, 8.027999999993263e-06, 8.027999999993263e-06, 8.041999999999772e-06, 8.055000000006807e-06, 8.055000000006807e-06, 8.014000000000632e-06, 8.069999999998911e-06, 8.05600000000628e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.05600000000628e-06, 8.055999999992403e-06, 8.041999999999772e-06, 8.027999999993263e-06, 8.02800000000714e-06, 8.041999999999772e-06, 8.110999999991209e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.05600000000628e-06, 8.014000000000632e-06, 8.041999999999772e-06, 8.05600000000628e-06, 8.041000000000298e-06]</msg>
<status status="PASS" starttime="20201029 18:14:32.633" endtime="20201029 18:14:32.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.627" endtime="20201029 18:14:32.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.216" endtime="20201029 18:14:32.636"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:32.132" endtime="20201029 18:14:32.636" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:32.643" endtime="20201029 18:14:32.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.642" endtime="20201029 18:14:32.663"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.676" endtime="20201029 18:14:32.694"></status>
</kw>
<msg timestamp="20201029 18:14:32.695" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.674" endtime="20201029 18:14:32.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.698" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.696" endtime="20201029 18:14:32.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.701" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:32.699" endtime="20201029 18:14:32.702"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:32.672" endtime="20201029 18:14:32.702"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:32.669" endtime="20201029 18:14:32.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.668" endtime="20201029 18:14:32.703"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:32.707" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:32.706" endtime="20201029 18:14:32.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.704" endtime="20201029 18:14:32.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.667" endtime="20201029 18:14:32.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.667" endtime="20201029 18:14:32.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.709" endtime="20201029 18:14:32.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.665" endtime="20201029 18:14:32.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.664" endtime="20201029 18:14:32.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.640" endtime="20201029 18:14:32.712"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.721" endtime="20201029 18:14:32.790"></status>
</kw>
<msg timestamp="20201029 18:14:32.790" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.718" endtime="20201029 18:14:32.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.793" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.791" endtime="20201029 18:14:32.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.794" endtime="20201029 18:14:32.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.716" endtime="20201029 18:14:32.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.714" endtime="20201029 18:14:32.797"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.799" endtime="20201029 18:14:32.801"></status>
</kw>
<msg timestamp="20201029 18:14:32.801" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:32.798" endtime="20201029 18:14:32.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.806" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:32.804" endtime="20201029 18:14:32.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.808" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:32.807" endtime="20201029 18:14:32.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.802" endtime="20201029 18:14:32.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.814" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:32.812" endtime="20201029 18:14:32.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.816" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:32.815" endtime="20201029 18:14:32.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.809" endtime="20201029 18:14:32.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.826" endtime="20201029 18:14:33.132"></status>
</kw>
<msg timestamp="20201029 18:14:33.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069426361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069460431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:32.824" endtime="20201029 18:14:33.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069426361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069460431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:33.137" endtime="20201029 18:14:33.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.145" endtime="20201029 18:14:33.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.820" endtime="20201029 18:14:33.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.818" endtime="20201029 18:14:33.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:33.152" level="INFO">${RESULT} = [{'diff': 3.406999999999716e-05}, {'diff': 3.4194999999986875e-05}, {'diff': 3.416700000000161e-05}, {'diff': 3.419500000000075e-05}, {'diff': 3.419500000000075e-05}, {'diff': 3.418000000000865e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:14:33.148" endtime="20201029 18:14:33.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:33.157" level="INFO">${OVERHEAD} = {'diff': [3.406999999999716e-05, 3.4194999999986875e-05, 3.416700000000161e-05, 3.419500000000075e-05, 3.419500000000075e-05, 3.418000000000865e-05, 3.419500000000075e-05, 3.4180999999994244e-05, 3.41...</msg>
<status status="PASS" starttime="20201029 18:14:33.153" endtime="20201029 18:14:33.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.161" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:14:33.160" endtime="20201029 18:14:33.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.164" level="INFO">VALUE: [3.406999999999716e-05, 3.4194999999986875e-05, 3.416700000000161e-05, 3.419500000000075e-05, 3.419500000000075e-05, 3.418000000000865e-05, 3.419500000000075e-05, 3.4180999999994244e-05, 3.4166999999987735e-05, 3.4152999999995104e-05, 3.426399999999219e-05, 3.423599999999305e-05, 3.4180999999994244e-05, 3.415300000000898e-05, 3.419400000000128e-05, 3.4110999999989455e-05, 3.416700000000161e-05, 3.4138999999988595e-05, 3.415300000000898e-05, 3.419500000000075e-05, 3.419400000000128e-05, 3.418100000000812e-05, 3.4180999999994244e-05, 3.4138999999988595e-05, 3.417999999999477e-05, 3.422200000000042e-05, 3.423600000000693e-05, 3.417999999999477e-05, 3.41939999999874e-05, 3.416700000000161e-05, 3.419400000000128e-05, 3.416599999998826e-05, 3.4180999999994244e-05, 3.415300000000898e-05, 3.417999999999477e-05, 3.419400000000128e-05, 3.416700000000161e-05, 3.418100000000812e-05, 3.418000000000865e-05, 3.416700000000161e-05, 3.417999999999477e-05, 3.424999999999956e-05, 3.4152999999995104e-05, 3.418100000000812e-05, 3.416700000000161e-05, 3.416700000000161e-05, 3.4180999999994244e-05, 3.419500000000075e-05, 3.415199999999563e-05, 3.4180999999994244e-05]</msg>
<status status="PASS" starttime="20201029 18:14:33.162" endtime="20201029 18:14:33.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.158" endtime="20201029 18:14:33.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.712" endtime="20201029 18:14:33.165"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:32.638" endtime="20201029 18:14:33.166" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:33.172" endtime="20201029 18:14:33.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.171" endtime="20201029 18:14:33.192"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.205" endtime="20201029 18:14:33.223"></status>
</kw>
<msg timestamp="20201029 18:14:33.224" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.204" endtime="20201029 18:14:33.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.226" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.225" endtime="20201029 18:14:33.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.229" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:33.227" endtime="20201029 18:14:33.229"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:33.201" endtime="20201029 18:14:33.230"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:33.199" endtime="20201029 18:14:33.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.198" endtime="20201029 18:14:33.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:33.234" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:33.234" endtime="20201029 18:14:33.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.232" endtime="20201029 18:14:33.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.197" endtime="20201029 18:14:33.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.196" endtime="20201029 18:14:33.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.237" endtime="20201029 18:14:33.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.195" endtime="20201029 18:14:33.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.193" endtime="20201029 18:14:33.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.170" endtime="20201029 18:14:33.240"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.248" endtime="20201029 18:14:33.445"></status>
</kw>
<msg timestamp="20201029 18:14:33.446" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.247" endtime="20201029 18:14:33.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.449" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.447" endtime="20201029 18:14:33.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.451" endtime="20201029 18:14:33.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.244" endtime="20201029 18:14:33.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.242" endtime="20201029 18:14:33.454"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.457" endtime="20201029 18:14:33.460"></status>
</kw>
<msg timestamp="20201029 18:14:33.460" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:33.455" endtime="20201029 18:14:33.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.466" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:33.465" endtime="20201029 18:14:33.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.469" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:33.468" endtime="20201029 18:14:33.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.461" endtime="20201029 18:14:33.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.475" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:33.473" endtime="20201029 18:14:33.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.477" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:33.476" endtime="20201029 18:14:33.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.471" endtime="20201029 18:14:33.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.484" endtime="20201029 18:14:33.778"></status>
</kw>
<msg timestamp="20201029 18:14:33.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069022139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069086833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:33.482" endtime="20201029 18:14:33.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069022139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069086833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:33.782" endtime="20201029 18:14:33.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.790" endtime="20201029 18:14:33.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.480" endtime="20201029 18:14:33.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.478" endtime="20201029 18:14:33.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:33.798" level="INFO">${RESULT} = [{'diff': 6.469400000000403e-05}, {'diff': 6.434699999999238e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.43750000000054e-05}, {'diff': 6.434699999999238e-05}, {'diff': 6.436199999999836e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:33.794" endtime="20201029 18:14:33.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:33.802" level="INFO">${OVERHEAD} = {'diff': [6.469400000000403e-05, 6.434699999999238e-05, 6.436099999999889e-05, 6.43750000000054e-05, 6.434699999999238e-05, 6.436199999999836e-05, 6.436099999999889e-05, 6.43200000000066e-05, 6.437500...</msg>
<status status="PASS" starttime="20201029 18:14:33.799" endtime="20201029 18:14:33.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.807" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:14:33.806" endtime="20201029 18:14:33.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.809" level="INFO">VALUE: [6.469400000000403e-05, 6.434699999999238e-05, 6.436099999999889e-05, 6.43750000000054e-05, 6.434699999999238e-05, 6.436199999999836e-05, 6.436099999999889e-05, 6.43200000000066e-05, 6.43750000000054e-05, 6.441699999999717e-05, 6.434799999999186e-05, 6.431899999999324e-05, 6.436099999999889e-05, 6.434799999999186e-05, 6.436199999999836e-05, 6.430600000000009e-05, 6.430600000001396e-05, 6.437499999997764e-05, 6.434699999999238e-05, 6.436100000001277e-05, 6.436199999998449e-05, 6.434700000002014e-05, 6.43750000000054e-05, 6.436100000001277e-05, 6.434699999999238e-05, 6.43200000000066e-05, 6.436100000001277e-05, 6.43750000000054e-05, 6.434800000001961e-05, 6.433399999999923e-05, 6.427700000000147e-05, 6.436200000001224e-05, 6.436100000001277e-05, 6.440299999999066e-05, 6.436199999998449e-05, 6.434699999999238e-05, 6.434699999999238e-05, 6.436200000001224e-05, 6.43750000000054e-05, 6.438899999999803e-05, 6.436199999998449e-05, 6.436099999998501e-05, 6.434699999999238e-05, 6.429199999999358e-05, 6.434699999999238e-05, 6.433399999999923e-05, 6.438899999999803e-05, 6.433299999999975e-05, 6.437499999997764e-05, 6.434699999999238e-05]</msg>
<status status="PASS" starttime="20201029 18:14:33.808" endtime="20201029 18:14:33.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.803" endtime="20201029 18:14:33.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.240" endtime="20201029 18:14:33.810"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:33.167" endtime="20201029 18:14:33.811" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:33.820" endtime="20201029 18:14:33.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.818" endtime="20201029 18:14:33.843"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.871" endtime="20201029 18:14:33.896"></status>
</kw>
<msg timestamp="20201029 18:14:33.897" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.868" endtime="20201029 18:14:33.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.902" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.899" endtime="20201029 18:14:33.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.908" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:33.904" endtime="20201029 18:14:33.909"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:33.861" endtime="20201029 18:14:33.910"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:33.856" endtime="20201029 18:14:33.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.854" endtime="20201029 18:14:33.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:33.918" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:33.917" endtime="20201029 18:14:33.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.914" endtime="20201029 18:14:33.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.852" endtime="20201029 18:14:33.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.851" endtime="20201029 18:14:33.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.920" endtime="20201029 18:14:33.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.848" endtime="20201029 18:14:33.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.845" endtime="20201029 18:14:33.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.815" endtime="20201029 18:14:33.922"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.931" endtime="20201029 18:14:33.953"></status>
</kw>
<msg timestamp="20201029 18:14:33.954" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.929" endtime="20201029 18:14:33.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.956" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.955" endtime="20201029 18:14:33.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.957" endtime="20201029 18:14:33.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.927" endtime="20201029 18:14:33.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.924" endtime="20201029 18:14:33.960"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.962" endtime="20201029 18:14:33.963"></status>
</kw>
<msg timestamp="20201029 18:14:33.964" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:33.961" endtime="20201029 18:14:33.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.968" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:33.967" endtime="20201029 18:14:33.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.970" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:33.969" endtime="20201029 18:14:33.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.965" endtime="20201029 18:14:33.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.975" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:33.974" endtime="20201029 18:14:33.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.977" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:33.976" endtime="20201029 18:14:33.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.972" endtime="20201029 18:14:33.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.985" endtime="20201029 18:14:34.279"></status>
</kw>
<msg timestamp="20201029 18:14:34.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.099872361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.099873889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:33.984" endtime="20201029 18:14:34.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.099872361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.099873889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.283" endtime="20201029 18:14:34.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.291" endtime="20201029 18:14:34.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.980" endtime="20201029 18:14:34.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.978" endtime="20201029 18:14:34.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:34.298" level="INFO">${RESULT} = [{'diff': 1.5279999999867622e-06}, {'diff': 1.5420000000071488e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5410000000076751e-06}, {'diff': 1.52800000000064e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:34.295" endtime="20201029 18:14:34.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:34.302" level="INFO">${OVERHEAD} = {'diff': [1.5279999999867622e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5410000000076751e-06, 1.52800000000064e-06, 1.4859999999949913e-06, 1.541999999993271e-06, 1.54...</msg>
<status status="PASS" starttime="20201029 18:14:34.299" endtime="20201029 18:14:34.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.307" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:14:34.306" endtime="20201029 18:14:34.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.309" level="INFO">VALUE: [1.5279999999867622e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5410000000076751e-06, 1.52800000000064e-06, 1.4859999999949913e-06, 1.541999999993271e-06, 1.5410000000076751e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5410000000076751e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5979999999915506e-06, 1.5139999999941312e-06, 1.5420000000071488e-06, 1.5410000000076751e-06, 1.5420000000071488e-06, 1.5409999999937973e-06, 1.5420000000071488e-06, 1.5279999999867622e-06, 1.5410000000076751e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5410000000076751e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.5420000000071488e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.4579999999958515e-06, 1.52800000000064e-06, 1.514000000008009e-06, 1.52800000000064e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201029 18:14:34.308" endtime="20201029 18:14:34.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.303" endtime="20201029 18:14:34.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.923" endtime="20201029 18:14:34.310"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:33.813" endtime="20201029 18:14:34.311" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:34.318" endtime="20201029 18:14:34.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.317" endtime="20201029 18:14:34.338"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.352" endtime="20201029 18:14:34.370"></status>
</kw>
<msg timestamp="20201029 18:14:34.371" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.350" endtime="20201029 18:14:34.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.374" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.372" endtime="20201029 18:14:34.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.379" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:34.376" endtime="20201029 18:14:34.380"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:34.348" endtime="20201029 18:14:34.381"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:34.345" endtime="20201029 18:14:34.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.344" endtime="20201029 18:14:34.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:34.387" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:34.386" endtime="20201029 18:14:34.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.383" endtime="20201029 18:14:34.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.343" endtime="20201029 18:14:34.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.343" endtime="20201029 18:14:34.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.389" endtime="20201029 18:14:34.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.341" endtime="20201029 18:14:34.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.339" endtime="20201029 18:14:34.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.315" endtime="20201029 18:14:34.392"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.400" endtime="20201029 18:14:34.469"></status>
</kw>
<msg timestamp="20201029 18:14:34.470" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.399" endtime="20201029 18:14:34.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.472" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.471" endtime="20201029 18:14:34.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.473" endtime="20201029 18:14:34.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.396" endtime="20201029 18:14:34.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.394" endtime="20201029 18:14:34.476"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.478" endtime="20201029 18:14:34.480"></status>
</kw>
<msg timestamp="20201029 18:14:34.481" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:34.477" endtime="20201029 18:14:34.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.485" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:34.484" endtime="20201029 18:14:34.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.487" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:34.486" endtime="20201029 18:14:34.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.482" endtime="20201029 18:14:34.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.492" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:34.491" endtime="20201029 18:14:34.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.494" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:34.493" endtime="20201029 18:14:34.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.489" endtime="20201029 18:14:34.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.501" endtime="20201029 18:14:34.792"></status>
</kw>
<msg timestamp="20201029 18:14:34.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073338069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073346958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.500" endtime="20201029 18:14:34.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073338069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073346958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.796" endtime="20201029 18:14:34.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.804" endtime="20201029 18:14:34.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.497" endtime="20201029 18:14:34.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.495" endtime="20201029 18:14:34.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:34.811" level="INFO">${RESULT} = [{'diff': 8.888999999998037e-06}, {'diff': 8.889000000011915e-06}, {'diff': 8.875000000005406e-06}, {'diff': 8.903000000004546e-06}, {'diff': 8.887999999998564e-06}, {'diff': 8.888999999998037e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:34.808" endtime="20201029 18:14:34.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:34.816" level="INFO">${OVERHEAD} = {'diff': [8.888999999998037e-06, 8.889000000011915e-06, 8.875000000005406e-06, 8.903000000004546e-06, 8.887999999998564e-06, 8.888999999998037e-06, 8.916999999997177e-06, 8.847000000006267e-06, 8.8750...</msg>
<status status="PASS" starttime="20201029 18:14:34.812" endtime="20201029 18:14:34.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.821" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:14:34.820" endtime="20201029 18:14:34.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.823" level="INFO">VALUE: [8.888999999998037e-06, 8.889000000011915e-06, 8.875000000005406e-06, 8.903000000004546e-06, 8.887999999998564e-06, 8.888999999998037e-06, 8.916999999997177e-06, 8.847000000006267e-06, 8.875000000005406e-06, 8.889000000011915e-06, 8.902000000005073e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.887999999998564e-06, 8.888999999998037e-06, 8.861999999998371e-06, 8.888999999998037e-06, 8.791999999993583e-06, 8.916999999997177e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.874999999991529e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.903000000004546e-06, 8.916999999997177e-06, 8.832999999999758e-06, 8.874999999991529e-06, 8.916999999997177e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.916999999997177e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.832999999999758e-06, 8.874999999991529e-06, 8.874999999991529e-06, 8.888999999998037e-06]</msg>
<status status="PASS" starttime="20201029 18:14:34.822" endtime="20201029 18:14:34.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.817" endtime="20201029 18:14:34.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.392" endtime="20201029 18:14:34.824"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:34.312" endtime="20201029 18:14:34.825" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:34.832" endtime="20201029 18:14:34.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.830" endtime="20201029 18:14:34.852"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.865" endtime="20201029 18:14:34.882"></status>
</kw>
<msg timestamp="20201029 18:14:34.883" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.863" endtime="20201029 18:14:34.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.885" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.884" endtime="20201029 18:14:34.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.888" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:34.886" endtime="20201029 18:14:34.889"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:34.860" endtime="20201029 18:14:34.889"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:34.858" endtime="20201029 18:14:34.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.857" endtime="20201029 18:14:34.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:34.894" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:34.893" endtime="20201029 18:14:34.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.891" endtime="20201029 18:14:34.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.856" endtime="20201029 18:14:34.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.856" endtime="20201029 18:14:34.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.895" endtime="20201029 18:14:34.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.854" endtime="20201029 18:14:34.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.853" endtime="20201029 18:14:34.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.829" endtime="20201029 18:14:34.898"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.910" endtime="20201029 18:14:35.109"></status>
</kw>
<msg timestamp="20201029 18:14:35.110" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.908" endtime="20201029 18:14:35.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.114" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.112" endtime="20201029 18:14:35.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.117" endtime="20201029 18:14:35.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.905" endtime="20201029 18:14:35.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.900" endtime="20201029 18:14:35.122"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.125" endtime="20201029 18:14:35.128"></status>
</kw>
<msg timestamp="20201029 18:14:35.129" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:35.123" endtime="20201029 18:14:35.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.137" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:35.135" endtime="20201029 18:14:35.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.141" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:35.139" endtime="20201029 18:14:35.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.130" endtime="20201029 18:14:35.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.150" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:35.148" endtime="20201029 18:14:35.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.153" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:35.151" endtime="20201029 18:14:35.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.144" endtime="20201029 18:14:35.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.166" endtime="20201029 18:14:35.478"></status>
</kw>
<msg timestamp="20201029 18:14:35.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071489222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071505569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:35.163" endtime="20201029 18:14:35.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071489222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071505569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:35.482" endtime="20201029 18:14:35.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.490" endtime="20201029 18:14:35.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.159" endtime="20201029 18:14:35.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.156" endtime="20201029 18:14:35.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:35.497" level="INFO">${RESULT} = [{'diff': 1.634699999999989e-05}, {'diff': 1.6389000000005538e-05}, {'diff': 1.6389000000005538e-05}, {'diff': 1.640299999999817e-05}, {'diff': 1.634699999999989e-05}, {'diff': 1.630499999999424e-05},...</msg>
<status status="PASS" starttime="20201029 18:14:35.493" endtime="20201029 18:14:35.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:35.501" level="INFO">${OVERHEAD} = {'diff': [1.634699999999989e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.640299999999817e-05, 1.634699999999989e-05, 1.630499999999424e-05, 1.6389000000005538e-05, 1.638899999999166e-05, 1.6...</msg>
<status status="PASS" starttime="20201029 18:14:35.498" endtime="20201029 18:14:35.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.506" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:14:35.505" endtime="20201029 18:14:35.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.509" level="INFO">VALUE: [1.634699999999989e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.640299999999817e-05, 1.634699999999989e-05, 1.630499999999424e-05, 1.6389000000005538e-05, 1.638899999999166e-05, 1.6389000000005538e-05, 1.636099999999252e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.637499999999903e-05, 1.640299999999817e-05, 1.638899999999166e-05, 1.630499999999424e-05, 1.633300000000726e-05, 1.6375000000012907e-05, 1.640299999999817e-05, 1.6318999999986872e-05, 1.636099999999252e-05, 1.6375000000012907e-05, 1.6388999999977782e-05, 1.6403000000025925e-05, 1.637499999998515e-05, 1.637499999998515e-05, 1.640299999999817e-05, 1.6375000000012907e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.637499999998515e-05, 1.634699999999989e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.6445000000003818e-05, 1.640299999999817e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.6388999999977782e-05, 1.640299999999817e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.645899999999645e-05, 1.6347999999999363e-05]</msg>
<status status="PASS" starttime="20201029 18:14:35.507" endtime="20201029 18:14:35.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.502" endtime="20201029 18:14:35.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.899" endtime="20201029 18:14:35.510"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:34.826" endtime="20201029 18:14:35.510" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:35.517" endtime="20201029 18:14:35.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.516" endtime="20201029 18:14:35.537"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.550" endtime="20201029 18:14:35.568"></status>
</kw>
<msg timestamp="20201029 18:14:35.569" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.548" endtime="20201029 18:14:35.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.570" endtime="20201029 18:14:35.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.575" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:35.572" endtime="20201029 18:14:35.575"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:35.546" endtime="20201029 18:14:35.576"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:35.543" endtime="20201029 18:14:35.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.542" endtime="20201029 18:14:35.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:35.580" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:35.580" endtime="20201029 18:14:35.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.577" endtime="20201029 18:14:35.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.541" endtime="20201029 18:14:35.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.541" endtime="20201029 18:14:35.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.582" endtime="20201029 18:14:35.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.539" endtime="20201029 18:14:35.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.538" endtime="20201029 18:14:35.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.514" endtime="20201029 18:14:35.585"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.588" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:35.597" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:36.679" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:35.587" endtime="20201029 18:14:36.680"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.683" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 18:14:36.681" endtime="20201029 18:14:37.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.585" endtime="20201029 18:14:37.687"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:37.694" endtime="20201029 18:14:37.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.691" endtime="20201029 18:14:37.717"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.734" endtime="20201029 18:14:37.748"></status>
</kw>
<msg timestamp="20201029 18:14:37.749" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.731" endtime="20201029 18:14:37.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.754" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.751" endtime="20201029 18:14:37.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.756" endtime="20201029 18:14:37.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.725" endtime="20201029 18:14:37.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.721" endtime="20201029 18:14:37.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.869" endtime="20201029 18:14:38.165"></status>
</kw>
<msg timestamp="20201029 18:14:38.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029489514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029533028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.865" endtime="20201029 18:14:38.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029489514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029533028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.169" endtime="20201029 18:14:38.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.177" endtime="20201029 18:14:38.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.859" endtime="20201029 18:14:38.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.855" endtime="20201029 18:14:38.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:38.183" level="INFO">${PHILIP_RES} = [{'diff': 4.351399999999797e-05}, {'diff': 8.068999999999438e-06}, {'diff': 8.082999999999008e-06}, {'diff': 8.07000000000238e-06}, {'diff': 8.08400000000195e-06}, {'diff': 8.055999999999341e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:38.180" endtime="20201029 18:14:38.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.189" level="INFO">${RESULT} = {'diff': [4.351399999999797e-05, 8.068999999999438e-06, 8.082999999999008e-06, 8.07000000000238e-06, 8.08400000000195e-06, 8.055999999999341e-06, 8.054999999999868e-06, 8.082999999999008e-06, 8.068999...</msg>
<status status="PASS" starttime="20201029 18:14:38.184" endtime="20201029 18:14:38.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.193" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:38.192" endtime="20201029 18:14:38.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.196" level="INFO">VALUE: [4.351399999999797e-05, 8.068999999999438e-06, 8.082999999999008e-06, 8.07000000000238e-06, 8.08400000000195e-06, 8.055999999999341e-06, 8.054999999999868e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.07000000000238e-06, 8.041999999999772e-06, 8.125000000001187e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.08400000000195e-06, 8.09800000000152e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.014000000000632e-06, 8.082999999999008e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.083999999998481e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.09800000000152e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.096999999998578e-06, 8.054999999999868e-06, 8.069999999998911e-06, 8.083999999998481e-06, 8.082999999999008e-06, 8.068999999999438e-06, 7.986000000001492e-06, 8.124999999997717e-06, 8.083999999998481e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.082999999999008e-06]</msg>
<status status="PASS" starttime="20201029 18:14:38.194" endtime="20201029 18:14:38.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.190" endtime="20201029 18:14:38.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.718" endtime="20201029 18:14:38.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.690" endtime="20201029 18:14:38.197"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:38.199" endtime="20201029 18:14:38.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.198" endtime="20201029 18:14:38.219"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.227" endtime="20201029 18:14:38.238"></status>
</kw>
<msg timestamp="20201029 18:14:38.238" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.226" endtime="20201029 18:14:38.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.241" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.239" endtime="20201029 18:14:38.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.242" endtime="20201029 18:14:38.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.223" endtime="20201029 18:14:38.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.221" endtime="20201029 18:14:38.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.251" endtime="20201029 18:14:38.539"></status>
</kw>
<msg timestamp="20201029 18:14:38.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016587708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016600764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.250" endtime="20201029 18:14:38.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016587708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016600764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.543" endtime="20201029 18:14:38.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.551" endtime="20201029 18:14:38.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.247" endtime="20201029 18:14:38.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.245" endtime="20201029 18:14:38.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:38.558" level="INFO">${PHILIP_RES} = [{'diff': 1.3056000000000872e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2611000000002648e-05}, {'diff': 1.2624999999998748e-05}, {'diff': 1.2624999999998748e-05}, {'diff': 1.2624999999998748e-...</msg>
<status status="PASS" starttime="20201029 18:14:38.554" endtime="20201029 18:14:38.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.562" level="INFO">${RESULT} = {'diff': [1.3056000000000872e-05, 1.2610999999999178e-05, 1.2611000000002648e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2596999999999609e-05, 1.2653000000001358e-05...</msg>
<status status="PASS" starttime="20201029 18:14:38.559" endtime="20201029 18:14:38.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.566" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:38.565" endtime="20201029 18:14:38.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.569" level="INFO">VALUE: [1.3056000000000872e-05, 1.2610999999999178e-05, 1.2611000000002648e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2596999999999609e-05, 1.2653000000001358e-05, 1.2637999999998845e-05, 1.2611000000002648e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2611000000002648e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2625000000002218e-05, 1.2681000000000497e-05, 1.2680000000001024e-05, 1.2637999999998845e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2653000000001358e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.252699999999829e-05, 1.2611000000002648e-05, 1.2624999999998748e-05, 1.2611000000002648e-05, 1.2694000000000594e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2596999999999609e-05, 1.2611000000002648e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2555000000000899e-05, 1.2624999999998748e-05, 1.2583999999999512e-05, 1.2597999999999082e-05, 1.2638000000002314e-05, 1.2624999999998748e-05, 1.2610999999999178e-05, 1.2611000000002648e-05, 1.2624999999998748e-05, 1.2625000000002218e-05, 1.2624999999998748e-05]</msg>
<status status="PASS" starttime="20201029 18:14:38.567" endtime="20201029 18:14:38.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.563" endtime="20201029 18:14:38.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.220" endtime="20201029 18:14:38.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.197" endtime="20201029 18:14:38.570"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:38.572" endtime="20201029 18:14:38.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.571" endtime="20201029 18:14:38.592"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.601" endtime="20201029 18:14:38.612"></status>
</kw>
<msg timestamp="20201029 18:14:38.612" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.599" endtime="20201029 18:14:38.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.615" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.613" endtime="20201029 18:14:38.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.616" endtime="20201029 18:14:38.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.596" endtime="20201029 18:14:38.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.594" endtime="20201029 18:14:38.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.625" endtime="20201029 18:14:38.910"></status>
</kw>
<msg timestamp="20201029 18:14:38.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017366458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017384736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.624" endtime="20201029 18:14:38.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017366458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017384736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.914" endtime="20201029 18:14:38.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.922" endtime="20201029 18:14:38.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.621" endtime="20201029 18:14:38.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.619" endtime="20201029 18:14:38.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:38.929" level="INFO">${PHILIP_RES} = [{'diff': 1.8278000000000044e-05}, {'diff': 1.7777999999999544e-05}, {'diff': 1.7777999999999544e-05}, {'diff': 1.777700000000007e-05}, {'diff': 1.777700000000007e-05}, {'diff': 1.779099999999964e-05}...</msg>
<status status="PASS" starttime="20201029 18:14:38.926" endtime="20201029 18:14:38.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.933" level="INFO">${RESULT} = {'diff': [1.8278000000000044e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.777700000000007e-05, 1.777700000000007e-05, 1.779099999999964e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:14:38.930" endtime="20201029 18:14:38.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.937" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:38.936" endtime="20201029 18:14:38.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.941" level="INFO">VALUE: [1.8278000000000044e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.777700000000007e-05, 1.777700000000007e-05, 1.779099999999964e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7764000000003444e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7777999999999544e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.77630000000005e-05, 1.77630000000005e-05, 1.77630000000005e-05, 1.7778000000003014e-05, 1.7777999999999544e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7778000000003014e-05, 1.7777999999999544e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.77630000000005e-05, 1.7750000000000404e-05, 1.777700000000007e-05, 1.7777999999999544e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7722000000001265e-05, 1.7693999999998655e-05, 1.7722000000001265e-05, 1.7763999999999974e-05, 1.777700000000007e-05, 1.7737000000000308e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.7833999999997824e-05, 1.7763999999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:14:38.939" endtime="20201029 18:14:38.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.934" endtime="20201029 18:14:38.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.593" endtime="20201029 18:14:38.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.570" endtime="20201029 18:14:38.942"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:38.944" endtime="20201029 18:14:38.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.943" endtime="20201029 18:14:38.964"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.972" endtime="20201029 18:14:38.983"></status>
</kw>
<msg timestamp="20201029 18:14:38.984" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.971" endtime="20201029 18:14:38.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.987" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.985" endtime="20201029 18:14:38.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.988" endtime="20201029 18:14:38.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.968" endtime="20201029 18:14:38.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.966" endtime="20201029 18:14:38.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.997" endtime="20201029 18:14:39.283"></status>
</kw>
<msg timestamp="20201029 18:14:39.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016574653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016598722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.995" endtime="20201029 18:14:39.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016574653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016598722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.287" endtime="20201029 18:14:39.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.295" endtime="20201029 18:14:39.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.993" endtime="20201029 18:14:39.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.991" endtime="20201029 18:14:39.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:39.302" level="INFO">${PHILIP_RES} = [{'diff': 2.4068999999998092e-05}, {'diff': 2.3527999999998356e-05}, {'diff': 2.3542000000001395e-05}, {'diff': 2.3513999999998786e-05}, {'diff': 2.3513999999998786e-05}, {'diff': 2.3528000000001825e-...</msg>
<status status="PASS" starttime="20201029 18:14:39.299" endtime="20201029 18:14:39.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:39.307" level="INFO">${RESULT} = {'diff': [2.4068999999998092e-05, 2.3527999999998356e-05, 2.3542000000001395e-05, 2.3513999999998786e-05, 2.3513999999998786e-05, 2.3528000000001825e-05, 2.3526999999998882e-05, 2.355500000000149e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:39.303" endtime="20201029 18:14:39.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.311" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:39.310" endtime="20201029 18:14:39.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.313" level="INFO">VALUE: [2.4068999999998092e-05, 2.3527999999998356e-05, 2.3542000000001395e-05, 2.3513999999998786e-05, 2.3513999999998786e-05, 2.3528000000001825e-05, 2.3526999999998882e-05, 2.355500000000149e-05, 2.3485999999999646e-05, 2.3527999999998356e-05, 2.3528000000001825e-05, 2.3526999999998882e-05, 2.352700000000235e-05, 2.3527999999998356e-05, 2.3528000000001825e-05, 2.3528000000001825e-05, 2.3597999999999675e-05, 2.354100000000192e-05, 2.358300000000063e-05, 2.3514000000002255e-05, 2.3499999999999216e-05, 2.3556000000000965e-05, 2.3528000000001825e-05, 2.3512999999999312e-05, 2.3542000000001395e-05, 2.3528000000001825e-05, 2.3541999999997926e-05, 2.3556000000000965e-05, 2.3526999999998882e-05, 2.355500000000149e-05, 2.3513999999998786e-05, 2.3527999999998356e-05, 2.3444000000000936e-05, 2.3527999999998356e-05, 2.3443999999997467e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.3514000000002255e-05, 2.3541999999997926e-05, 2.3526999999998882e-05, 2.3512999999999312e-05, 2.3513999999998786e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.3527999999998356e-05, 2.35970000000002e-05, 2.3527999999998356e-05, 2.356900000000106e-05, 2.3527999999998356e-05, 2.3513999999998786e-05]</msg>
<status status="PASS" starttime="20201029 18:14:39.312" endtime="20201029 18:14:39.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.308" endtime="20201029 18:14:39.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.965" endtime="20201029 18:14:39.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.942" endtime="20201029 18:14:39.315"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:39.317" endtime="20201029 18:14:39.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.316" endtime="20201029 18:14:39.337"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.345" endtime="20201029 18:14:39.356"></status>
</kw>
<msg timestamp="20201029 18:14:39.357" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.344" endtime="20201029 18:14:39.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.359" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.358" endtime="20201029 18:14:39.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.360" endtime="20201029 18:14:39.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.341" endtime="20201029 18:14:39.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.339" endtime="20201029 18:14:39.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.369" endtime="20201029 18:14:39.655"></status>
</kw>
<msg timestamp="20201029 18:14:39.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016934833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016965264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.368" endtime="20201029 18:14:39.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016934833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016965264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.659" endtime="20201029 18:14:39.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.667" endtime="20201029 18:14:39.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.365" endtime="20201029 18:14:39.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.363" endtime="20201029 18:14:39.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:39.674" level="INFO">${PHILIP_RES} = [{'diff': 3.0431000000000902e-05}, {'diff': 2.9916000000001358e-05}, {'diff': 2.9903000000001262e-05}, {'diff': 2.9875000000002122e-05}, {'diff': 2.9902000000001788e-05}, {'diff': 2.9903000000001262e-...</msg>
<status status="PASS" starttime="20201029 18:14:39.671" endtime="20201029 18:14:39.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:39.679" level="INFO">${RESULT} = {'diff': [3.0431000000000902e-05, 2.9916000000001358e-05, 2.9903000000001262e-05, 2.9875000000002122e-05, 2.9902000000001788e-05, 2.9903000000001262e-05, 2.9903000000001262e-05, 2.9958000000000068e-05...</msg>
<status status="PASS" starttime="20201029 18:14:39.675" endtime="20201029 18:14:39.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.683" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:39.682" endtime="20201029 18:14:39.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.685" level="INFO">VALUE: [3.0431000000000902e-05, 2.9916000000001358e-05, 2.9903000000001262e-05, 2.9875000000002122e-05, 2.9902000000001788e-05, 2.9903000000001262e-05, 2.9903000000001262e-05, 2.9958000000000068e-05, 2.9889000000001692e-05, 2.9874999999998653e-05, 2.9903000000001262e-05, 2.9902999999997792e-05, 2.988799999999875e-05, 2.9903000000001262e-05, 2.9902999999997792e-05, 2.9888999999998223e-05, 2.9902999999997792e-05, 2.9916999999997362e-05, 2.9902999999997792e-05, 2.9888999999998223e-05, 2.9931000000000402e-05, 2.9916999999997362e-05, 2.9916999999997362e-05, 2.990199999999832e-05, 2.9874999999998653e-05, 2.9902999999997792e-05, 2.9944000000000498e-05, 2.9902999999997792e-05, 2.990199999999832e-05, 2.9874999999998653e-05, 2.9903000000001262e-05, 2.9916000000001358e-05, 2.9902999999997792e-05, 2.9903000000001262e-05, 2.9903000000001262e-05, 2.9889000000001692e-05, 2.9971999999999638e-05, 2.9903000000001262e-05, 2.9917000000000832e-05, 2.9902000000001788e-05, 2.9903000000001262e-05, 2.9889000000001692e-05, 2.9903000000001262e-05, 2.9903000000001262e-05, 2.9875000000002122e-05, 2.9903000000001262e-05, 2.9917000000000832e-05, 2.9916000000001358e-05, 2.9903000000001262e-05, 2.9903000000001262e-05]</msg>
<status status="PASS" starttime="20201029 18:14:39.684" endtime="20201029 18:14:39.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.679" endtime="20201029 18:14:39.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.338" endtime="20201029 18:14:39.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.315" endtime="20201029 18:14:39.687"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:39.689" endtime="20201029 18:14:39.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.688" endtime="20201029 18:14:39.709"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.717" endtime="20201029 18:14:39.729"></status>
</kw>
<msg timestamp="20201029 18:14:39.729" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.715" endtime="20201029 18:14:39.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.732" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.730" endtime="20201029 18:14:39.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.733" endtime="20201029 18:14:39.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.713" endtime="20201029 18:14:39.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.711" endtime="20201029 18:14:39.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.743" endtime="20201029 18:14:40.029"></status>
</kw>
<msg timestamp="20201029 18:14:40.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017077056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017114514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.741" endtime="20201029 18:14:40.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017077056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017114514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.034" endtime="20201029 18:14:40.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.044" endtime="20201029 18:14:40.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.739" endtime="20201029 18:14:40.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.737" endtime="20201029 18:14:40.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:40.053" level="INFO">${PHILIP_RES} = [{'diff': 3.745800000000063e-05}, {'diff': 3.6889000000001754e-05}, {'diff': 3.6889000000001754e-05}, {'diff': 3.6860999999999144e-05}, {'diff': 3.6903000000001324e-05}, {'diff': 3.6889000000001754e-0...</msg>
<status status="PASS" starttime="20201029 18:14:40.050" endtime="20201029 18:14:40.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:40.057" level="INFO">${RESULT} = {'diff': [3.745800000000063e-05, 3.6889000000001754e-05, 3.6889000000001754e-05, 3.6860999999999144e-05, 3.6903000000001324e-05, 3.6889000000001754e-05, 3.6846999999999575e-05, 3.6902999999997854e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:40.054" endtime="20201029 18:14:40.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.062" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:40.061" endtime="20201029 18:14:40.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.064" level="INFO">VALUE: [3.745800000000063e-05, 3.6889000000001754e-05, 3.6889000000001754e-05, 3.6860999999999144e-05, 3.6903000000001324e-05, 3.6889000000001754e-05, 3.6846999999999575e-05, 3.6902999999997854e-05, 3.684800000000252e-05, 3.6931000000000463e-05, 3.6902999999997854e-05, 3.694400000000056e-05, 3.6903000000001324e-05, 3.6917000000000894e-05, 3.6888999999998284e-05, 3.6874999999998714e-05, 3.6903000000001324e-05, 3.6902999999997854e-05, 3.6902999999997854e-05, 3.6889000000001754e-05, 3.6903000000001324e-05, 3.6902999999997854e-05, 3.6917000000000894e-05, 3.683399999999948e-05, 3.6903000000001324e-05, 3.6874999999998714e-05, 3.6903000000001324e-05, 3.6903000000001324e-05, 3.6833000000000005e-05, 3.684800000000252e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.6903000000001324e-05, 3.6902999999997854e-05, 3.6902999999997854e-05, 3.6889000000001754e-05, 3.691600000000142e-05, 3.6888999999998284e-05, 3.6903000000001324e-05, 3.691600000000142e-05, 3.6903000000001324e-05, 3.6917000000000894e-05, 3.6903000000001324e-05, 3.6889000000001754e-05, 3.6902999999997854e-05, 3.684800000000252e-05, 3.6903000000001324e-05, 3.6917000000000894e-05]</msg>
<status status="PASS" starttime="20201029 18:14:40.063" endtime="20201029 18:14:40.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.058" endtime="20201029 18:14:40.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.709" endtime="20201029 18:14:40.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.687" endtime="20201029 18:14:40.066"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:40.069" endtime="20201029 18:14:40.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.067" endtime="20201029 18:14:40.089"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.097" endtime="20201029 18:14:40.110"></status>
</kw>
<msg timestamp="20201029 18:14:40.111" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.096" endtime="20201029 18:14:40.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.113" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.112" endtime="20201029 18:14:40.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.114" endtime="20201029 18:14:40.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.093" endtime="20201029 18:14:40.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.091" endtime="20201029 18:14:40.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.123" endtime="20201029 18:14:40.408"></status>
</kw>
<msg timestamp="20201029 18:14:40.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017030208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017075222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.122" endtime="20201029 18:14:40.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017030208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017075222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.412" endtime="20201029 18:14:40.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.421" endtime="20201029 18:14:40.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.119" endtime="20201029 18:14:40.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.117" endtime="20201029 18:14:40.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:40.427" level="INFO">${PHILIP_RES} = [{'diff': 4.501399999999947e-05}, {'diff': 4.447200000000026e-05}, {'diff': 4.448599999999983e-05}, {'diff': 4.450000000000287e-05}, {'diff': 4.444400000000112e-05}, {'diff': 4.4472999999999735e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:14:40.424" endtime="20201029 18:14:40.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:40.432" level="INFO">${RESULT} = {'diff': [4.501399999999947e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.450000000000287e-05, 4.444400000000112e-05, 4.4472999999999735e-05, 4.4472999999999735e-05, 4.448599999999983e-05, 4.44...</msg>
<status status="PASS" starttime="20201029 18:14:40.428" endtime="20201029 18:14:40.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.436" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:40.435" endtime="20201029 18:14:40.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.439" level="INFO">VALUE: [4.501399999999947e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.450000000000287e-05, 4.444400000000112e-05, 4.4472999999999735e-05, 4.4472999999999735e-05, 4.448599999999983e-05, 4.4472999999999735e-05, 4.447199999999679e-05, 4.447200000000026e-05, 4.4430999999997556e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.445800000000069e-05, 4.450000000000287e-05, 4.44999999999994e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.447200000000026e-05, 4.4486999999999305e-05, 4.452699999999907e-05, 4.454099999999864e-05, 4.44999999999994e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.450000000000287e-05, 4.451399999999897e-05, 4.451399999999897e-05, 4.447199999999679e-05, 4.448599999999983e-05, 4.451399999999897e-05, 4.450000000000287e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.451399999999897e-05, 4.450000000000287e-05, 4.454199999999811e-05, 4.4486999999999305e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.4555000000001677e-05, 4.4555000000001677e-05, 4.447200000000026e-05, 4.4583000000000816e-05, 4.448599999999983e-05, 4.44999999999994e-05]</msg>
<status status="PASS" starttime="20201029 18:14:40.437" endtime="20201029 18:14:40.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.433" endtime="20201029 18:14:40.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.089" endtime="20201029 18:14:40.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.067" endtime="20201029 18:14:40.440"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:40.442" endtime="20201029 18:14:40.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.441" endtime="20201029 18:14:40.462"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.471" endtime="20201029 18:14:40.484"></status>
</kw>
<msg timestamp="20201029 18:14:40.485" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.469" endtime="20201029 18:14:40.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.487" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.486" endtime="20201029 18:14:40.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.488" endtime="20201029 18:14:40.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.467" endtime="20201029 18:14:40.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.465" endtime="20201029 18:14:40.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.497" endtime="20201029 18:14:40.791"></status>
</kw>
<msg timestamp="20201029 18:14:40.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017067931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017121139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.496" endtime="20201029 18:14:40.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017067931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017121139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.801" endtime="20201029 18:14:40.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.820" endtime="20201029 18:14:40.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.493" endtime="20201029 18:14:40.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.492" endtime="20201029 18:14:40.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:40.834" level="INFO">${PHILIP_RES} = [{'diff': 5.3207999999999034e-05}, {'diff': 5.2693999999998964e-05}, {'diff': 5.2693999999998964e-05}, {'diff': 5.2693999999998964e-05}, {'diff': 5.2707999999998534e-05}, {'diff': 5.2707999999998534e-...</msg>
<status status="PASS" starttime="20201029 18:14:40.827" endtime="20201029 18:14:40.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:40.843" level="INFO">${RESULT} = {'diff': [5.3207999999999034e-05, 5.2693999999998964e-05, 5.2693999999998964e-05, 5.2693999999998964e-05, 5.2707999999998534e-05, 5.2707999999998534e-05, 5.2707999999998534e-05, 5.270899999999801e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:40.836" endtime="20201029 18:14:40.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.852" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:40.850" endtime="20201029 18:14:40.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.857" level="INFO">VALUE: [5.3207999999999034e-05, 5.2693999999998964e-05, 5.2693999999998964e-05, 5.2693999999998964e-05, 5.2707999999998534e-05, 5.2707999999998534e-05, 5.2707999999998534e-05, 5.270899999999801e-05, 5.2721999999998104e-05, 5.269500000000191e-05, 5.2707999999998534e-05, 5.270900000000148e-05, 5.269400000000243e-05, 5.2708000000002e-05, 5.2708000000002e-05, 5.2693999999998964e-05, 5.270900000000148e-05, 5.2707999999998534e-05, 5.269500000000191e-05, 5.2721999999998104e-05, 5.2735999999997674e-05, 5.2693999999998964e-05, 5.2707999999998534e-05, 5.2721999999998104e-05, 5.2721999999998104e-05, 5.270899999999801e-05, 5.2721999999998104e-05, 5.272300000000105e-05, 5.2707999999998534e-05, 5.272200000000157e-05, 5.272200000000157e-05, 5.2708000000002e-05, 5.270900000000148e-05, 5.2708000000002e-05, 5.270900000000148e-05, 5.265299999999973e-05, 5.273600000000114e-05, 5.2652000000000254e-05, 5.270900000000148e-05, 5.2679999999999394e-05, 5.263900000000016e-05, 5.269499999999844e-05, 5.268099999999887e-05, 5.262500000000059e-05, 5.2679999999999394e-05, 5.269499999999844e-05, 5.263900000000016e-05, 5.265299999999973e-05, 5.273600000000114e-05, 5.2708000000002e-05]</msg>
<status status="PASS" starttime="20201029 18:14:40.854" endtime="20201029 18:14:40.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.845" endtime="20201029 18:14:40.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.463" endtime="20201029 18:14:40.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.441" endtime="20201029 18:14:40.860"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:40.865" endtime="20201029 18:14:40.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.862" endtime="20201029 18:14:40.887"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.895" endtime="20201029 18:14:40.909"></status>
</kw>
<msg timestamp="20201029 18:14:40.909" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.893" endtime="20201029 18:14:40.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.912" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.910" endtime="20201029 18:14:40.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.913" endtime="20201029 18:14:40.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.890" endtime="20201029 18:14:40.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.889" endtime="20201029 18:14:40.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.924" endtime="20201029 18:14:41.211"></status>
</kw>
<msg timestamp="20201029 18:14:41.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017529764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017591819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.922" endtime="20201029 18:14:41.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017529764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017591819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:41.215" endtime="20201029 18:14:41.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.223" endtime="20201029 18:14:41.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.920" endtime="20201029 18:14:41.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.918" endtime="20201029 18:14:41.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:41.230" level="INFO">${PHILIP_RES} = [{'diff': 6.205500000000183e-05}, {'diff': 6.154199999999777e-05}, {'diff': 6.154200000000123e-05}, {'diff': 6.151399999999863e-05}, {'diff': 6.152800000000166e-05}, {'diff': 6.15279999999982e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:41.227" endtime="20201029 18:14:41.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:41.234" level="INFO">${RESULT} = {'diff': [6.205500000000183e-05, 6.154199999999777e-05, 6.154200000000123e-05, 6.151399999999863e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.161099999999961e-05, 6.152699999999872e-05, 6.15280...</msg>
<status status="PASS" starttime="20201029 18:14:41.231" endtime="20201029 18:14:41.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.238" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:41.237" endtime="20201029 18:14:41.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.240" level="INFO">VALUE: [6.205500000000183e-05, 6.154199999999777e-05, 6.154200000000123e-05, 6.151399999999863e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.161099999999961e-05, 6.152699999999872e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.15279999999982e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.152699999999872e-05, 6.154100000000176e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.155499999999786e-05, 6.155500000000133e-05, 6.15279999999982e-05, 6.154200000000123e-05, 6.154199999999777e-05, 6.152800000000166e-05, 6.15560000000008e-05, 6.154100000000176e-05, 6.154099999999829e-05, 6.154099999999829e-05, 6.154200000000123e-05, 6.152800000000166e-05, 6.154200000000123e-05, 6.15560000000008e-05, 6.154100000000176e-05, 6.151399999999863e-05, 6.15140000000021e-05, 6.156899999999743e-05, 6.15140000000021e-05, 6.15279999999982e-05, 6.152700000000219e-05, 6.147199999999992e-05, 6.15690000000009e-05, 6.154200000000123e-05, 6.154200000000123e-05, 6.15279999999982e-05, 6.154200000000123e-05, 6.152699999999872e-05, 6.152699999999872e-05, 6.15140000000021e-05]</msg>
<status status="PASS" starttime="20201029 18:14:41.239" endtime="20201029 18:14:41.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.235" endtime="20201029 18:14:41.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.887" endtime="20201029 18:14:41.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.861" endtime="20201029 18:14:41.243"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:41.245" endtime="20201029 18:14:41.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.244" endtime="20201029 18:14:41.265"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.273" endtime="20201029 18:14:41.286"></status>
</kw>
<msg timestamp="20201029 18:14:41.287" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.272" endtime="20201029 18:14:41.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.289" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.288" endtime="20201029 18:14:41.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.290" endtime="20201029 18:14:41.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.269" endtime="20201029 18:14:41.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.267" endtime="20201029 18:14:41.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.299" endtime="20201029 18:14:41.584"></status>
</kw>
<msg timestamp="20201029 18:14:41.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016554931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016626403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:41.298" endtime="20201029 18:14:41.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016554931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016626403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:41.588" endtime="20201029 18:14:41.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.598" endtime="20201029 18:14:41.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.295" endtime="20201029 18:14:41.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.293" endtime="20201029 18:14:41.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:41.612" level="INFO">${PHILIP_RES} = [{'diff': 7.147200000000298e-05}, {'diff': 7.097299999999848e-05}, {'diff': 7.095799999999944e-05}, {'diff': 7.097199999999901e-05}, {'diff': 7.097199999999901e-05}, {'diff': 7.095799999999944e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:41.605" endtime="20201029 18:14:41.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:41.622" level="INFO">${RESULT} = {'diff': [7.147200000000298e-05, 7.097299999999848e-05, 7.095799999999944e-05, 7.097199999999901e-05, 7.097199999999901e-05, 7.095799999999944e-05, 7.098599999999858e-05, 7.097300000000195e-05, 7.0971...</msg>
<status status="PASS" starttime="20201029 18:14:41.614" endtime="20201029 18:14:41.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.631" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:41.629" endtime="20201029 18:14:41.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.636" level="INFO">VALUE: [7.147200000000298e-05, 7.097299999999848e-05, 7.095799999999944e-05, 7.097199999999901e-05, 7.097199999999901e-05, 7.095799999999944e-05, 7.098599999999858e-05, 7.097300000000195e-05, 7.097199999999901e-05, 7.095799999999944e-05, 7.097199999999901e-05, 7.097200000000248e-05, 7.095899999999891e-05, 7.097299999999848e-05, 7.095799999999944e-05, 7.095800000000291e-05, 7.095799999999944e-05, 7.097199999999901e-05, 7.094500000000281e-05, 7.097299999999848e-05, 7.097199999999901e-05, 7.095799999999944e-05, 7.097200000000248e-05, 7.095799999999944e-05, 7.098599999999858e-05, 7.101400000000119e-05, 7.097300000000195e-05, 7.098599999999858e-05, 7.097199999999901e-05, 7.095800000000291e-05, 7.097199999999901e-05, 7.095899999999891e-05, 7.101400000000119e-05, 7.094399999999987e-05, 7.095799999999944e-05, 7.097199999999901e-05, 7.099999999999815e-05, 7.097199999999901e-05, 7.095899999999891e-05, 7.097199999999901e-05, 7.094399999999987e-05, 7.100000000000162e-05, 7.094399999999987e-05, 7.097299999999848e-05, 7.094500000000281e-05, 7.098599999999858e-05, 7.094399999999987e-05, 7.097200000000248e-05, 7.098600000000205e-05, 7.098599999999858e-05]</msg>
<status status="PASS" starttime="20201029 18:14:41.633" endtime="20201029 18:14:41.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.624" endtime="20201029 18:14:41.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.266" endtime="20201029 18:14:41.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.243" endtime="20201029 18:14:41.640"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:41.645" endtime="20201029 18:14:41.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.642" endtime="20201029 18:14:41.668"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.684" endtime="20201029 18:14:41.700"></status>
</kw>
<msg timestamp="20201029 18:14:41.701" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.681" endtime="20201029 18:14:41.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.703" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.702" endtime="20201029 18:14:41.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.705" endtime="20201029 18:14:41.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.676" endtime="20201029 18:14:41.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.672" endtime="20201029 18:14:41.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.713" endtime="20201029 18:14:42.000"></status>
</kw>
<msg timestamp="20201029 18:14:42.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028627208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02870875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:41.712" endtime="20201029 18:14:42.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028627208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02870875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:42.004" endtime="20201029 18:14:42.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.012" endtime="20201029 18:14:42.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.709" endtime="20201029 18:14:42.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.708" endtime="20201029 18:14:42.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:42.019" level="INFO">${PHILIP_RES} = [{'diff': 8.154200000000042e-05}, {'diff': 8.101400000000078e-05}, {'diff': 8.101400000000078e-05}, {'diff': 8.104199999999992e-05}, {'diff': 8.101400000000078e-05}, {'diff': 8.101400000000078e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:42.016" endtime="20201029 18:14:42.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:42.023" level="INFO">${RESULT} = {'diff': [8.154200000000042e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.104199999999992e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.104199999999992e-05, 8.10130000000013e-05, 8.10140...</msg>
<status status="PASS" starttime="20201029 18:14:42.020" endtime="20201029 18:14:42.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.028" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:42.027" endtime="20201029 18:14:42.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.030" level="INFO">VALUE: [8.154200000000042e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.104199999999992e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.104199999999992e-05, 8.10130000000013e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.100000000000121e-05, 8.102800000000035e-05, 8.105599999999949e-05, 8.101400000000078e-05, 8.101299999999784e-05, 8.09719999999986e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.109699999999873e-05, 8.101399999999731e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.101399999999731e-05, 8.102800000000035e-05, 8.101400000000078e-05, 8.10269999999974e-05, 8.105600000000296e-05, 8.098699999999764e-05, 8.102799999999688e-05, 8.101399999999731e-05, 8.106900000000306e-05, 8.102800000000382e-05, 8.101399999999731e-05, 8.104099999999698e-05, 8.104199999999645e-05, 8.102799999999688e-05, 8.101400000000425e-05, 8.101400000000425e-05, 8.10269999999974e-05, 8.099999999999774e-05, 8.102799999999688e-05, 8.105499999999655e-05, 8.102800000000382e-05, 8.102800000000382e-05, 8.107000000000253e-05, 8.101399999999731e-05, 8.101399999999731e-05, 8.101400000000425e-05, 8.101400000000425e-05]</msg>
<status status="PASS" starttime="20201029 18:14:42.029" endtime="20201029 18:14:42.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.024" endtime="20201029 18:14:42.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.669" endtime="20201029 18:14:42.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.641" endtime="20201029 18:14:42.032"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:42.034" endtime="20201029 18:14:42.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.033" endtime="20201029 18:14:42.054"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.062" endtime="20201029 18:14:42.076"></status>
</kw>
<msg timestamp="20201029 18:14:42.076" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.061" endtime="20201029 18:14:42.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.079" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.077" endtime="20201029 18:14:42.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.080" endtime="20201029 18:14:42.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.058" endtime="20201029 18:14:42.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.056" endtime="20201029 18:14:42.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.090" endtime="20201029 18:14:42.375"></status>
</kw>
<msg timestamp="20201029 18:14:42.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016464028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016556236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.088" endtime="20201029 18:14:42.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016464028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016556236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.379" endtime="20201029 18:14:42.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.388" endtime="20201029 18:14:42.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.086" endtime="20201029 18:14:42.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.084" endtime="20201029 18:14:42.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:42.394" level="INFO">${PHILIP_RES} = [{'diff': 9.220799999999987e-05}, {'diff': 9.166700000000014e-05}, {'diff': 9.162500000000143e-05}, {'diff': 9.166700000000014e-05}, {'diff': 9.168000000000023e-05}, {'diff': 9.168099999999971e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:42.391" endtime="20201029 18:14:42.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:42.398" level="INFO">${RESULT} = {'diff': [9.220799999999987e-05, 9.166700000000014e-05, 9.162500000000143e-05, 9.166700000000014e-05, 9.168000000000023e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.169500000000275e-05, 9.1693...</msg>
<status status="PASS" starttime="20201029 18:14:42.395" endtime="20201029 18:14:42.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.402" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:42.401" endtime="20201029 18:14:42.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.405" level="INFO">VALUE: [9.220799999999987e-05, 9.166700000000014e-05, 9.162500000000143e-05, 9.166700000000014e-05, 9.168000000000023e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.169500000000275e-05, 9.16939999999998e-05, 9.166700000000014e-05, 9.170800000000284e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.172200000000241e-05, 9.173599999999851e-05, 9.173599999999851e-05, 9.16939999999998e-05, 9.170900000000232e-05, 9.168000000000023e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.168099999999971e-05, 9.168099999999971e-05, 9.168099999999971e-05, 9.168099999999971e-05, 9.166700000000014e-05, 9.168099999999971e-05, 9.172199999999894e-05, 9.168099999999971e-05, 9.165300000000057e-05, 9.176400000000112e-05, 9.161100000000186e-05, 9.169499999999928e-05, 9.165300000000057e-05, 9.170900000000232e-05, 9.16939999999998e-05, 9.166700000000014e-05, 9.172199999999894e-05, 9.169499999999928e-05, 9.166600000000066e-05, 9.169499999999928e-05, 9.173599999999851e-05, 9.166700000000014e-05, 9.168000000000023e-05, 9.166700000000014e-05, 9.166600000000066e-05, 9.168099999999971e-05, 9.168099999999971e-05, 9.168099999999971e-05, 9.168099999999971e-05]</msg>
<status status="PASS" starttime="20201029 18:14:42.403" endtime="20201029 18:14:42.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.399" endtime="20201029 18:14:42.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.055" endtime="20201029 18:14:42.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.032" endtime="20201029 18:14:42.407"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:42.410" endtime="20201029 18:14:42.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.408" endtime="20201029 18:14:42.430"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.438" endtime="20201029 18:14:42.453"></status>
</kw>
<msg timestamp="20201029 18:14:42.453" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.436" endtime="20201029 18:14:42.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.457" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.455" endtime="20201029 18:14:42.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.458" endtime="20201029 18:14:42.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.433" endtime="20201029 18:14:42.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.432" endtime="20201029 18:14:42.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.471" endtime="20201029 18:14:42.759"></status>
</kw>
<msg timestamp="20201029 18:14:42.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016578306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016681806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.468" endtime="20201029 18:14:42.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016578306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016681806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.763" endtime="20201029 18:14:42.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.771" endtime="20201029 18:14:42.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.466" endtime="20201029 18:14:42.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.463" endtime="20201029 18:14:42.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:42.777" level="INFO">${PHILIP_RES} = [{'diff': 0.00010349999999999943}, {'diff': 0.00010295800000000022}, {'diff': 0.00010297299999999926}, {'diff': 0.00010295800000000022}, {'diff': 0.00010301400000000197}, {'diff': 0.000102971999999999...</msg>
<status status="PASS" starttime="20201029 18:14:42.774" endtime="20201029 18:14:42.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:42.782" level="INFO">${RESULT} = {'diff': [0.00010349999999999943, 0.00010295800000000022, 0.00010297299999999926, 0.00010295800000000022, 0.00010301400000000197, 0.00010297199999999979, 0.0001029160000000015, 0.00010295800000000022,...</msg>
<status status="PASS" starttime="20201029 18:14:42.778" endtime="20201029 18:14:42.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.786" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:42.785" endtime="20201029 18:14:42.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.789" level="INFO">VALUE: [0.00010349999999999943, 0.00010295800000000022, 0.00010297299999999926, 0.00010295800000000022, 0.00010301400000000197, 0.00010297199999999979, 0.0001029160000000015, 0.00010295800000000022, 0.00010293100000000055, 0.0001030139999999985, 0.00010295899999999969, 0.00010295800000000022, 0.00010295800000000022, 0.00010295800000000022, 0.00010291700000000098, 0.00010295800000000022, 0.00010295800000000022, 0.00010297199999999979, 0.00010297199999999979, 0.00010295800000000022, 0.00010294500000000012, 0.00010295800000000022, 0.00010295800000000022, 0.00010295800000000022, 0.00010294400000000065, 0.00010294400000000065, 0.00010295800000000022, 0.00010294500000000012, 0.0001028749999999988, 0.00010297199999999979, 0.00010294500000000012, 0.00010297199999999979, 0.00010297199999999979, 0.00010295899999999969, 0.00010295800000000022, 0.00010295899999999969, 0.00010290300000000141, 0.00010295899999999969, 0.00010294400000000065, 0.00010295899999999969, 0.00010294399999999718, 0.00010294500000000012, 0.00010294400000000065, 0.00010298599999999936, 0.00010294400000000065, 0.00010295899999999969, 0.00010295800000000022, 0.00010288900000000184, 0.00010297199999999979, 0.00010295899999999969]</msg>
<status status="PASS" starttime="20201029 18:14:42.787" endtime="20201029 18:14:43.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.783" endtime="20201029 18:14:43.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.430" endtime="20201029 18:14:43.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.408" endtime="20201029 18:14:43.978"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:43.983" endtime="20201029 18:14:44.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.980" endtime="20201029 18:14:44.006"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.023" endtime="20201029 18:14:44.044"></status>
</kw>
<msg timestamp="20201029 18:14:44.045" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.020" endtime="20201029 18:14:44.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.051" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.047" endtime="20201029 18:14:44.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.055" endtime="20201029 18:14:44.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.014" endtime="20201029 18:14:44.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.010" endtime="20201029 18:14:44.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.077" endtime="20201029 18:14:44.368"></status>
</kw>
<msg timestamp="20201029 18:14:44.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030745611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030860931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.073" endtime="20201029 18:14:44.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030745611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030860931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.372" endtime="20201029 18:14:44.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.380" endtime="20201029 18:14:44.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.067" endtime="20201029 18:14:44.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.062" endtime="20201029 18:14:44.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:44.388" level="INFO">${PHILIP_RES} = [{'diff': 0.00011532000000000209}, {'diff': 0.00011484699999999778}, {'diff': 0.00011484700000000125}, {'diff': 0.000114903000000003}, {'diff': 0.00011486100000000082}, {'diff': 0.00011483400000000116...</msg>
<status status="PASS" starttime="20201029 18:14:44.385" endtime="20201029 18:14:44.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:44.392" level="INFO">${RESULT} = {'diff': [0.00011532000000000209, 0.00011484699999999778, 0.00011484700000000125, 0.000114903000000003, 0.00011486100000000082, 0.00011483400000000116, 0.00011483300000000168, 0.00011484700000000125, ...</msg>
<status status="PASS" starttime="20201029 18:14:44.389" endtime="20201029 18:14:44.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.396" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:44.395" endtime="20201029 18:14:44.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.398" level="INFO">VALUE: [0.00011532000000000209, 0.00011484699999999778, 0.00011484700000000125, 0.000114903000000003, 0.00011486100000000082, 0.00011483400000000116, 0.00011483300000000168, 0.00011484700000000125, 0.00011488899999999996, 0.00011483300000000168, 0.00011484800000000073, 0.00011479099999999604, 0.00011484700000000125, 0.00011486100000000082, 0.00011484700000000125, 0.0001148620000000003, 0.00011484700000000125, 0.00011484700000000125, 0.00011486100000000082, 0.00011481899999999517, 0.0001148620000000003, 0.00011481900000000211, 0.00011479200000000245, 0.00011481900000000211, 0.00011484700000000125, 0.0001148620000000003, 0.00011483300000000168, 0.0001148750000000004, 0.00011486099999999388, 0.00011483300000000168, 0.00011483400000000116, 0.00011484700000000125, 0.00011484700000000125, 0.00011484700000000125, 0.00011484700000000125, 0.00011477800000000288, 0.00011484699999999431, 0.00011486100000000082, 0.00011477699999999647, 0.00011484700000000125, 0.0001148620000000003, 0.00011484700000000125, 0.00011486100000000082, 0.00011483400000000116, 0.00011484699999999431, 0.00011481999999999465, 0.00011481900000000211, 0.00011486100000000082, 0.00011484800000000073, 0.00011484700000000125]</msg>
<status status="PASS" starttime="20201029 18:14:44.397" endtime="20201029 18:14:44.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.392" endtime="20201029 18:14:44.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.007" endtime="20201029 18:14:44.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.979" endtime="20201029 18:14:44.400"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:44.402" endtime="20201029 18:14:44.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.401" endtime="20201029 18:14:44.422"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.430" endtime="20201029 18:14:44.447"></status>
</kw>
<msg timestamp="20201029 18:14:44.447" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.429" endtime="20201029 18:14:44.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.450" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.448" endtime="20201029 18:14:44.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.451" endtime="20201029 18:14:44.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.426" endtime="20201029 18:14:44.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.424" endtime="20201029 18:14:44.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.461" endtime="20201029 18:14:44.746"></status>
</kw>
<msg timestamp="20201029 18:14:44.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016791611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016919486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.459" endtime="20201029 18:14:44.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016791611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016919486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.750" endtime="20201029 18:14:44.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.758" endtime="20201029 18:14:44.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.457" endtime="20201029 18:14:44.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.455" endtime="20201029 18:14:44.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:44.765" level="INFO">${PHILIP_RES} = [{'diff': 0.00012787499999999952}, {'diff': 0.00012734699999999988}, {'diff': 0.00012730600000000064}, {'diff': 0.00012736099999999945}, {'diff': 0.00012736099999999945}, {'diff': 0.000127346999999999...</msg>
<status status="PASS" starttime="20201029 18:14:44.762" endtime="20201029 18:14:44.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:44.769" level="INFO">${RESULT} = {'diff': [0.00012787499999999952, 0.00012734699999999988, 0.00012730600000000064, 0.00012736099999999945, 0.00012736099999999945, 0.00012734699999999988, 0.00012740200000000215, 0.00012734799999999935...</msg>
<status status="PASS" starttime="20201029 18:14:44.766" endtime="20201029 18:14:44.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.773" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:44.772" endtime="20201029 18:14:44.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.775" level="INFO">VALUE: [0.00012787499999999952, 0.00012734699999999988, 0.00012730600000000064, 0.00012736099999999945, 0.00012736099999999945, 0.00012734699999999988, 0.00012740200000000215, 0.00012734799999999935, 0.00012734699999999988, 0.00012736099999999945, 0.00012736100000000292, 0.00012736099999999945, 0.0001272780000000015, 0.00012734699999999988, 0.00012734699999999988, 0.00012734699999999988, 0.00012734699999999988, 0.00012734699999999988, 0.00012734699999999988, 0.00012736099999999945, 0.00012734800000000282, 0.00012733399999999978, 0.00012737500000000249, 0.00012734699999999988, 0.00012737499999999902, 0.00012734699999999988, 0.00012734699999999988, 0.00012734799999999935, 0.00012734699999999988, 0.00012734699999999988, 0.00012736099999999945, 0.00012734800000000282, 0.00012738900000000206, 0.00012734699999999988, 0.0001272919999999976, 0.0001273330000000003, 0.0001273620000000024, 0.0001273330000000003, 0.00012734700000000335, 0.00012734699999999988, 0.00012734699999999988, 0.00012734799999999935, 0.00012734699999999988, 0.00012737500000000249, 0.00012734699999999988, 0.00012729200000000107, 0.00012733399999999978, 0.0001273330000000003, 0.00012734699999999988, 0.00012729200000000107]</msg>
<status status="PASS" starttime="20201029 18:14:44.774" endtime="20201029 18:14:44.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.770" endtime="20201029 18:14:44.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.423" endtime="20201029 18:14:44.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.400" endtime="20201029 18:14:44.778"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:44.780" endtime="20201029 18:14:44.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.779" endtime="20201029 18:14:44.800"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.808" endtime="20201029 18:14:44.825"></status>
</kw>
<msg timestamp="20201029 18:14:44.825" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.807" endtime="20201029 18:14:44.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.828" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.826" endtime="20201029 18:14:44.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.829" endtime="20201029 18:14:44.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.804" endtime="20201029 18:14:44.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.802" endtime="20201029 18:14:44.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.838" endtime="20201029 18:14:45.124"></status>
</kw>
<msg timestamp="20201029 18:14:45.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016478917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016619889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.836" endtime="20201029 18:14:45.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016478917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016619889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.128" endtime="20201029 18:14:45.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.136" endtime="20201029 18:14:45.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.834" endtime="20201029 18:14:45.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.832" endtime="20201029 18:14:45.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:45.142" level="INFO">${PHILIP_RES} = [{'diff': 0.00014097199999999963}, {'diff': 0.00014045799999999956}, {'diff': 0.0001404720000000026}, {'diff': 0.00014049999999999827}, {'diff': 0.00014045799999999956}, {'diff': 0.0001404719999999991...</msg>
<status status="PASS" starttime="20201029 18:14:45.139" endtime="20201029 18:14:45.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:45.147" level="INFO">${RESULT} = {'diff': [0.00014097199999999963, 0.00014045799999999956, 0.0001404720000000026, 0.00014049999999999827, 0.00014045799999999956, 0.00014047199999999913, 0.00014047199999999913, 0.0001404859999999987, ...</msg>
<status status="PASS" starttime="20201029 18:14:45.143" endtime="20201029 18:14:45.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.151" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:45.150" endtime="20201029 18:14:45.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.153" level="INFO">VALUE: [0.00014097199999999963, 0.00014045799999999956, 0.0001404720000000026, 0.00014049999999999827, 0.00014045799999999956, 0.00014047199999999913, 0.00014047199999999913, 0.0001404859999999987, 0.00014045899999999903, 0.00014047300000000207, 0.0001404590000000025, 0.00014047300000000207, 0.00014047199999999913, 0.00014047199999999913, 0.00014044399999999999, 0.00014047199999999913, 0.00014052800000000087, 0.00014047199999999913, 0.00014045799999999956, 0.00014045799999999956, 0.00014045799999999956, 0.00014047199999999913, 0.0001404309999999999, 0.00014048699999999817, 0.00014045899999999903, 0.00014045799999999956, 0.00014047199999999913, 0.0001404720000000026, 0.0001404720000000026, 0.00014045799999999956, 0.00014049999999999827, 0.00014045799999999956, 0.00014045799999999956, 0.00014047199999999913, 0.00014047199999999913, 0.00014044500000000293, 0.00014047300000000207, 0.00014047300000000207, 0.00014048699999999817, 0.00014045799999999956, 0.00014045799999999956, 0.0001405140000000013, 0.00014045799999999956, 0.00014047199999999913, 0.00014052800000000087, 0.00014048600000000216, 0.00014045899999999903, 0.00014044499999999946, 0.0001404729999999986, 0.0001404729999999986]</msg>
<status status="PASS" starttime="20201029 18:14:45.152" endtime="20201029 18:14:45.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.148" endtime="20201029 18:14:45.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.801" endtime="20201029 18:14:45.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.778" endtime="20201029 18:14:45.155"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:45.158" endtime="20201029 18:14:45.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.156" endtime="20201029 18:14:45.177"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.185" endtime="20201029 18:14:45.203"></status>
</kw>
<msg timestamp="20201029 18:14:45.203" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.184" endtime="20201029 18:14:45.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.206" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.204" endtime="20201029 18:14:45.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.207" endtime="20201029 18:14:45.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.181" endtime="20201029 18:14:45.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.179" endtime="20201029 18:14:45.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.215" endtime="20201029 18:14:45.502"></status>
</kw>
<msg timestamp="20201029 18:14:45.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016713319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016868014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.214" endtime="20201029 18:14:45.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016713319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016868014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.506" endtime="20201029 18:14:45.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.514" endtime="20201029 18:14:45.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.211" endtime="20201029 18:14:45.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.210" endtime="20201029 18:14:45.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:45.520" level="INFO">${PHILIP_RES} = [{'diff': 0.00015469499999999983}, {'diff': 0.0001541800000000003}, {'diff': 0.00015418100000000323}, {'diff': 0.00015420799999999943}, {'diff': 0.00015418099999999976}, {'diff': 0.0001541660000000007...</msg>
<status status="PASS" starttime="20201029 18:14:45.517" endtime="20201029 18:14:45.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:45.524" level="INFO">${RESULT} = {'diff': [0.00015469499999999983, 0.0001541800000000003, 0.00015418100000000323, 0.00015420799999999943, 0.00015418099999999976, 0.00015416600000000072, 0.00015412500000000148, 0.0001541800000000003, ...</msg>
<status status="PASS" starttime="20201029 18:14:45.521" endtime="20201029 18:14:45.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.528" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:45.527" endtime="20201029 18:14:45.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.531" level="INFO">VALUE: [0.00015469499999999983, 0.0001541800000000003, 0.00015418100000000323, 0.00015420799999999943, 0.00015418099999999976, 0.00015416600000000072, 0.00015412500000000148, 0.0001541800000000003, 0.00015418099999999976, 0.00015419399999999986, 0.0001541670000000002, 0.0001541800000000003, 0.00015420799999999943, 0.00015419399999999986, 0.00015418099999999976, 0.00015418099999999976, 0.00015419399999999986, 0.00015419499999999933, 0.0001541800000000003, 0.00015423599999999857, 0.00015416599999999725, 0.00015418099999999976, 0.00015419399999999986, 0.0001541670000000002, 0.0001541800000000003, 0.00015419499999999933, 0.00015419399999999986, 0.00015419499999999933, 0.0001541800000000003, 0.0001541800000000003, 0.00015419499999999933, 0.00015419399999999986, 0.0001541670000000002, 0.0001541800000000003, 0.00015418099999999976, 0.00015413900000000105, 0.00015420900000000237, 0.00015420799999999943, 0.0001541670000000002, 0.00015423599999999857, 0.0001542089999999989, 0.00015419399999999986, 0.00015418099999999976, 0.00015419399999999986, 0.00015422200000000247, 0.00015419399999999986, 0.00015418099999999976, 0.00015422299999999847, 0.0001541800000000003, 0.00015418100000000323]</msg>
<status status="PASS" starttime="20201029 18:14:45.529" endtime="20201029 18:14:45.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.525" endtime="20201029 18:14:45.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.178" endtime="20201029 18:14:45.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.156" endtime="20201029 18:14:45.533"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:45.535" endtime="20201029 18:14:45.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.533" endtime="20201029 18:14:45.555"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.563" endtime="20201029 18:14:45.581"></status>
</kw>
<msg timestamp="20201029 18:14:45.581" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.561" endtime="20201029 18:14:45.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.584" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.582" endtime="20201029 18:14:45.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.585" endtime="20201029 18:14:45.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.559" endtime="20201029 18:14:45.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.557" endtime="20201029 18:14:45.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.594" endtime="20201029 18:14:45.879"></status>
</kw>
<msg timestamp="20201029 18:14:45.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016445097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016614139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.593" endtime="20201029 18:14:45.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016445097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016614139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.883" endtime="20201029 18:14:45.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.891" endtime="20201029 18:14:45.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.590" endtime="20201029 18:14:45.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.589" endtime="20201029 18:14:45.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:45.898" level="INFO">${PHILIP_RES} = [{'diff': 0.0001690420000000012}, {'diff': 0.00016852799999999765}, {'diff': 0.00016852800000000112}, {'diff': 0.00016852799999999765}, {'diff': 0.00016852800000000112}, {'diff': 0.0001685550000000008...</msg>
<status status="PASS" starttime="20201029 18:14:45.895" endtime="20201029 18:14:45.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:45.902" level="INFO">${RESULT} = {'diff': [0.0001690420000000012, 0.00016852799999999765, 0.00016852800000000112, 0.00016852799999999765, 0.00016852800000000112, 0.0001685550000000008, 0.00016854099999999775, 0.00016851400000000155, ...</msg>
<status status="PASS" starttime="20201029 18:14:45.899" endtime="20201029 18:14:45.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.906" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:45.905" endtime="20201029 18:14:45.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.908" level="INFO">VALUE: [0.0001690420000000012, 0.00016852799999999765, 0.00016852800000000112, 0.00016852799999999765, 0.00016852800000000112, 0.0001685550000000008, 0.00016854099999999775, 0.00016851400000000155, 0.00016856900000000036, 0.0001684999999999985, 0.00016852700000000165, 0.00016852699999999818, 0.00016852699999999818, 0.00016854100000000122, 0.00016854199999999722, 0.00016852800000000112, 0.0001685420000000007, 0.00016852799999999765, 0.00016851400000000155, 0.00016852800000000112, 0.0001685420000000007, 0.00016852800000000112, 0.00016852799999999765, 0.00016852800000000112, 0.00016852800000000112, 0.00016852799999999765, 0.0001685420000000007, 0.00016852800000000112, 0.00016851399999999808, 0.0001685420000000007, 0.00016854099999999775, 0.00016851400000000155, 0.00016852700000000165, 0.0001684999999999985, 0.00016852700000000165, 0.00016859700000000297, 0.00016854099999999775, 0.00016851400000000155, 0.0001685420000000007, 0.00016861199999999854, 0.00016852800000000112, 0.00016852799999999765, 0.00016852800000000112, 0.00016852800000000112, 0.00016854199999999722, 0.00016855499999999732, 0.00016852800000000112, 0.00016852800000000112, 0.00016852800000000112, 0.00016851399999999808]</msg>
<status status="PASS" starttime="20201029 18:14:45.907" endtime="20201029 18:14:45.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.902" endtime="20201029 18:14:45.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.555" endtime="20201029 18:14:45.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.533" endtime="20201029 18:14:45.911"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:45.913" endtime="20201029 18:14:45.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.912" endtime="20201029 18:14:45.933"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.944" endtime="20201029 18:14:45.964"></status>
</kw>
<msg timestamp="20201029 18:14:45.965" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.942" endtime="20201029 18:14:45.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.968" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.966" endtime="20201029 18:14:45.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.969" endtime="20201029 18:14:45.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.939" endtime="20201029 18:14:45.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.936" endtime="20201029 18:14:45.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.978" endtime="20201029 18:14:46.269"></status>
</kw>
<msg timestamp="20201029 18:14:46.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019999667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.977" endtime="20201029 18:14:46.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019999667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.278" endtime="20201029 18:14:46.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.296" endtime="20201029 18:14:46.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.974" endtime="20201029 18:14:46.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.972" endtime="20201029 18:14:46.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:46.309" level="INFO">${PHILIP_RES} = [{'diff': 0.000183972000000001}, {'diff': 0.0001834720000000005}, {'diff': 0.00018349999999999964}, {'diff': 0.0001834720000000005}, {'diff': 0.00018348600000000007}, {'diff': 0.00018349999999999964},...</msg>
<status status="PASS" starttime="20201029 18:14:46.303" endtime="20201029 18:14:46.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:46.319" level="INFO">${RESULT} = {'diff': [0.000183972000000001, 0.0001834720000000005, 0.00018349999999999964, 0.0001834720000000005, 0.00018348600000000007, 0.00018349999999999964, 0.00018349999999999964, 0.0001834590000000004, 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:46.311" endtime="20201029 18:14:46.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.328" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:46.326" endtime="20201029 18:14:46.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.333" level="INFO">VALUE: [0.000183972000000001, 0.0001834720000000005, 0.00018349999999999964, 0.0001834720000000005, 0.00018348600000000007, 0.00018349999999999964, 0.00018349999999999964, 0.0001834590000000004, 0.0001834720000000005, 0.0001834720000000005, 0.00018344400000000136, 0.0001834720000000005, 0.0001834439999999979, 0.0001835000000000031, 0.00018349999999999964, 0.00018348600000000007, 0.0001835000000000031, 0.0001834720000000005, 0.00018348699999999954, 0.00018345800000000093, 0.0001834720000000005, 0.00018344400000000136, 0.00018345800000000093, 0.0001834720000000005, 0.0001835139999999992, 0.00018348600000000007, 0.00018348600000000007, 0.00018347199999999703, 0.00018348600000000007, 0.00018347299999999997, 0.00018345800000000093, 0.0001834720000000005, 0.00018345800000000093, 0.0001834720000000005, 0.00018348600000000007, 0.00018348600000000007, 0.0001834720000000005, 0.00018348600000000007, 0.0001834859999999966, 0.00018348600000000007, 0.0001834590000000004, 0.0001834720000000005, 0.0001834720000000005, 0.0001834720000000005, 0.00018349999999999964, 0.00018348600000000007, 0.00018348600000000007, 0.00018348600000000007, 0.00018356900000000148, 0.0001835139999999992]</msg>
<status status="PASS" starttime="20201029 18:14:46.330" endtime="20201029 18:14:46.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.321" endtime="20201029 18:14:46.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.934" endtime="20201029 18:14:46.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.911" endtime="20201029 18:14:46.337"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:46.342" endtime="20201029 18:14:46.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.339" endtime="20201029 18:14:46.362"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.370" endtime="20201029 18:14:46.390"></status>
</kw>
<msg timestamp="20201029 18:14:46.391" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.369" endtime="20201029 18:14:46.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.393" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.392" endtime="20201029 18:14:46.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.394" endtime="20201029 18:14:46.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.366" endtime="20201029 18:14:46.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.364" endtime="20201029 18:14:46.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.403" endtime="20201029 18:14:46.687"></status>
</kw>
<msg timestamp="20201029 18:14:46.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016721875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016921431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.401" endtime="20201029 18:14:46.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016721875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016921431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.691" endtime="20201029 18:14:46.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.699" endtime="20201029 18:14:46.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.399" endtime="20201029 18:14:46.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.397" endtime="20201029 18:14:46.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:46.707" level="INFO">${PHILIP_RES} = [{'diff': 0.00019955600000000004}, {'diff': 0.00019904199999999997}, {'diff': 0.00019905599999999954}, {'diff': 0.0001990410000000005}, {'diff': 0.00019904199999999997}, {'diff': 0.0001990419999999999...</msg>
<status status="PASS" starttime="20201029 18:14:46.704" endtime="20201029 18:14:46.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:46.711" level="INFO">${RESULT} = {'diff': [0.00019955600000000004, 0.00019904199999999997, 0.00019905599999999954, 0.0001990410000000005, 0.00019904199999999997, 0.00019904199999999997, 0.00019905599999999954, 0.0001990280000000004, ...</msg>
<status status="PASS" starttime="20201029 18:14:46.708" endtime="20201029 18:14:46.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.715" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:46.714" endtime="20201029 18:14:46.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.717" level="INFO">VALUE: [0.00019955600000000004, 0.00019904199999999997, 0.00019905599999999954, 0.0001990410000000005, 0.00019904199999999997, 0.00019904199999999997, 0.00019905599999999954, 0.0001990280000000004, 0.00019905500000000007, 0.000199056000000003, 0.00019908399999999868, 0.0001990280000000004, 0.0001990410000000005, 0.00019904199999999997, 0.0001990699999999991, 0.00019904199999999997, 0.00019902700000000093, 0.00019905500000000007, 0.00019904199999999997, 0.00019897200000000212, 0.0001990280000000004, 0.00019905500000000007, 0.00019905599999999954, 0.00019897200000000212, 0.0001990280000000004, 0.00019905500000000007, 0.0001989999999999978, 0.00019904199999999997, 0.00019905599999999954, 0.00019902700000000093, 0.00019897199999999865, 0.00019904199999999997, 0.00019904199999999997, 0.00019912500000000138, 0.00019905500000000007, 0.00019905500000000007, 0.00019904199999999997, 0.00019895799999999908, 0.00019904099999999703, 0.0001990280000000004, 0.00019904199999999997, 0.00019904199999999997, 0.00019905500000000007, 0.00019904199999999997, 0.00019904199999999997, 0.00019904199999999997, 0.00019906899999999964, 0.00019905500000000007, 0.0001990280000000004, 0.0001990280000000004]</msg>
<status status="PASS" starttime="20201029 18:14:46.716" endtime="20201029 18:14:46.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.711" endtime="20201029 18:14:46.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.363" endtime="20201029 18:14:46.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.338" endtime="20201029 18:14:46.719"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:46.721" endtime="20201029 18:14:46.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.720" endtime="20201029 18:14:46.741"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.749" endtime="20201029 18:14:46.770"></status>
</kw>
<msg timestamp="20201029 18:14:46.771" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.748" endtime="20201029 18:14:46.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.773" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.772" endtime="20201029 18:14:46.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.774" endtime="20201029 18:14:46.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.745" endtime="20201029 18:14:46.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.743" endtime="20201029 18:14:46.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.784" endtime="20201029 18:14:47.073"></status>
</kw>
<msg timestamp="20201029 18:14:47.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016567139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016782889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.783" endtime="20201029 18:14:47.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016567139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016782889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.082" endtime="20201029 18:14:47.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.099" endtime="20201029 18:14:47.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.780" endtime="20201029 18:14:47.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.778" endtime="20201029 18:14:47.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:47.113" level="INFO">${PHILIP_RES} = [{'diff': 0.0002157499999999972}, {'diff': 0.0002152360000000006}, {'diff': 0.0002152230000000005}, {'diff': 0.00021520799999999798}, {'diff': 0.00021522200000000102}, {'diff': 0.00021522200000000102}...</msg>
<status status="PASS" starttime="20201029 18:14:47.106" endtime="20201029 18:14:47.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:47.121" level="INFO">${RESULT} = {'diff': [0.0002157499999999972, 0.0002152360000000006, 0.0002152230000000005, 0.00021520799999999798, 0.00021522200000000102, 0.00021522200000000102, 0.00021522200000000102, 0.00021522200000000102, 0...</msg>
<status status="PASS" starttime="20201029 18:14:47.115" endtime="20201029 18:14:47.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.130" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:47.128" endtime="20201029 18:14:47.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.135" level="INFO">VALUE: [0.0002157499999999972, 0.0002152360000000006, 0.0002152230000000005, 0.00021520799999999798, 0.00021522200000000102, 0.00021522200000000102, 0.00021522200000000102, 0.00021522200000000102, 0.00021519400000000188, 0.00021522199999999755, 0.00021522200000000102, 0.0002152360000000006, 0.00021518000000000231, 0.00021526399999999973, 0.00021522200000000102, 0.00021520800000000145, 0.00021515299999999918, 0.0002152360000000006, 0.00021520800000000145, 0.00021520799999999798, 0.00021522200000000102, 0.00021522200000000102, 0.00021526399999999973, 0.00021520799999999798, 0.00021519400000000188, 0.00021522199999999755, 0.00021522200000000102, 0.00021522200000000102, 0.0002152360000000006, 0.00021522199999999755, 0.00021520800000000145, 0.0002152230000000005, 0.0002152230000000005, 0.00021529199999999887, 0.00021520900000000093, 0.0002152230000000005, 0.00021520900000000093, 0.0002152230000000005, 0.00021520899999999746, 0.0002152230000000005, 0.0002152230000000005, 0.00021520899999999746, 0.00021520900000000093, 0.00021522200000000102, 0.00021522199999999755, 0.0002152230000000005, 0.0002152360000000006, 0.00021520799999999798, 0.0002152360000000006, 0.00021522200000000102]</msg>
<status status="PASS" starttime="20201029 18:14:47.132" endtime="20201029 18:14:47.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.123" endtime="20201029 18:14:47.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.742" endtime="20201029 18:14:47.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.719" endtime="20201029 18:14:47.140"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:47.145" endtime="20201029 18:14:47.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.142" endtime="20201029 18:14:47.167"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.175" endtime="20201029 18:14:47.197"></status>
</kw>
<msg timestamp="20201029 18:14:47.198" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.174" endtime="20201029 18:14:47.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.200" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.199" endtime="20201029 18:14:47.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.201" endtime="20201029 18:14:47.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.171" endtime="20201029 18:14:47.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.169" endtime="20201029 18:14:47.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.210" endtime="20201029 18:14:47.495"></status>
</kw>
<msg timestamp="20201029 18:14:47.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018005042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018237583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.208" endtime="20201029 18:14:47.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018005042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018237583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.499" endtime="20201029 18:14:47.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.507" endtime="20201029 18:14:47.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.206" endtime="20201029 18:14:47.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.204" endtime="20201029 18:14:47.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:47.513" level="INFO">${PHILIP_RES} = [{'diff': 0.00023254100000000277}, {'diff': 0.00023201399999999914}, {'diff': 0.00023195800000000086}, {'diff': 0.00023199999999999957}, {'diff': 0.000231986}, {'diff': 0.00023199999999999957}, {'diff...</msg>
<status status="PASS" starttime="20201029 18:14:47.511" endtime="20201029 18:14:47.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:47.518" level="INFO">${RESULT} = {'diff': [0.00023254100000000277, 0.00023201399999999914, 0.00023195800000000086, 0.00023199999999999957, 0.000231986, 0.00023199999999999957, 0.000231986, 0.00023202800000000218, 0.000231999999999999...</msg>
<status status="PASS" starttime="20201029 18:14:47.515" endtime="20201029 18:14:47.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.523" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:47.522" endtime="20201029 18:14:47.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.525" level="INFO">VALUE: [0.00023254100000000277, 0.00023201399999999914, 0.00023195800000000086, 0.00023199999999999957, 0.000231986, 0.00023199999999999957, 0.000231986, 0.00023202800000000218, 0.00023199999999999957, 0.00023199999999999957, 0.000231986, 0.00023199999999999957, 0.0002320279999999987, 0.0002320279999999987, 0.00023202800000000218, 0.00023201399999999914, 0.00023200000000000304, 0.00023197200000000043, 0.00023201399999999914, 0.00023201399999999914, 0.00023199999999999957, 0.000231986, 0.00023199999999999957, 0.00023200000000000304, 0.00023201399999999914, 0.0002320140000000026, 0.00023204200000000175, 0.000231986, 0.00023202800000000218, 0.000231986, 0.0002320140000000026, 0.00023201299999999966, 0.0002320140000000026, 0.00023199999999999957, 0.00023199999999999957, 0.00023199999999999957, 0.0002320279999999987, 0.0002320140000000026, 0.00023204199999999828, 0.00023209699999999708, 0.00023205500000000184, 0.00023201299999999966, 0.00023199999999999957, 0.000231986, 0.00023201399999999914, 0.00023201399999999914, 0.0002320140000000026, 0.00023197200000000043, 0.00023199999999999957, 0.00023201399999999914]</msg>
<status status="PASS" starttime="20201029 18:14:47.524" endtime="20201029 18:14:47.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.519" endtime="20201029 18:14:47.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.168" endtime="20201029 18:14:47.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.141" endtime="20201029 18:14:47.527"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:47.529" endtime="20201029 18:14:47.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.528" endtime="20201029 18:14:47.549"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.557" endtime="20201029 18:14:47.580"></status>
</kw>
<msg timestamp="20201029 18:14:47.580" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.555" endtime="20201029 18:14:47.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.583" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.581" endtime="20201029 18:14:47.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.584" endtime="20201029 18:14:47.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.553" endtime="20201029 18:14:47.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.551" endtime="20201029 18:14:47.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.593" endtime="20201029 18:14:47.882"></status>
</kw>
<msg timestamp="20201029 18:14:47.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016526194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016776125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.591" endtime="20201029 18:14:47.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016526194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016776125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.891" endtime="20201029 18:14:47.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.909" endtime="20201029 18:14:47.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.589" endtime="20201029 18:14:47.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.587" endtime="20201029 18:14:47.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:47.922" level="INFO">${PHILIP_RES} = [{'diff': 0.0002499309999999984}, {'diff': 0.00024944400000000144}, {'diff': 0.00024944400000000144}, {'diff': 0.00024938899999999917}, {'diff': 0.00024933400000000036}, {'diff': 0.0002493749999999996...</msg>
<status status="PASS" starttime="20201029 18:14:47.915" endtime="20201029 18:14:47.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:47.931" level="INFO">${RESULT} = {'diff': [0.0002499309999999984, 0.00024944400000000144, 0.00024944400000000144, 0.00024938899999999917, 0.00024933400000000036, 0.0002493749999999996, 0.0002493749999999996, 0.000249361, 0.0002493890...</msg>
<status status="PASS" starttime="20201029 18:14:47.924" endtime="20201029 18:14:47.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.939" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:47.937" endtime="20201029 18:14:47.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.944" level="INFO">VALUE: [0.0002499309999999984, 0.00024944400000000144, 0.00024944400000000144, 0.00024938899999999917, 0.00024933400000000036, 0.0002493749999999996, 0.0002493749999999996, 0.000249361, 0.00024938900000000264, 0.0002494170000000018, 0.0002494169999999983, 0.0002494169999999983, 0.00024943100000000135, 0.0002494030000000022, 0.000249458000000001, 0.00024943000000000187, 0.00024940199999999926, 0.00024940299999999874, 0.00024940299999999874, 0.0002494030000000022, 0.000249458000000001, 0.00024940299999999874, 0.00024940299999999874, 0.00024940299999999874, 0.00024940199999999926, 0.0002494720000000006, 0.0002494030000000022, 0.00024938899999999917, 0.0002494169999999983, 0.00024940299999999874, 0.0002494030000000022, 0.00024943100000000135, 0.0002494170000000018, 0.0002494720000000006, 0.0002494299999999984, 0.00024941599999999883, 0.00024943100000000135, 0.000249443999999998, 0.00024943100000000135, 0.0002494169999999983, 0.0002494309999999979, 0.0002494169999999983, 0.0002494160000000023, 0.0002494160000000023, 0.00024940299999999874, 0.00024940299999999874, 0.00024940299999999874, 0.000249361, 0.0002494030000000022, 0.0002494170000000018]</msg>
<status status="PASS" starttime="20201029 18:14:47.941" endtime="20201029 18:14:48.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.932" endtime="20201029 18:14:48.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.550" endtime="20201029 18:14:48.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.527" endtime="20201029 18:14:48.019"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:48.021" endtime="20201029 18:14:48.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.020" endtime="20201029 18:14:48.041"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.049" endtime="20201029 18:14:48.073"></status>
</kw>
<msg timestamp="20201029 18:14:48.073" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.048" endtime="20201029 18:14:48.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.076" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.074" endtime="20201029 18:14:48.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.077" endtime="20201029 18:14:48.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.045" endtime="20201029 18:14:48.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.043" endtime="20201029 18:14:48.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.087" endtime="20201029 18:14:48.375"></status>
</kw>
<msg timestamp="20201029 18:14:48.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016774069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017042014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.085" endtime="20201029 18:14:48.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016774069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017042014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.379" endtime="20201029 18:14:48.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.387" endtime="20201029 18:14:48.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.083" endtime="20201029 18:14:48.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.081" endtime="20201029 18:14:48.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:48.393" level="INFO">${PHILIP_RES} = [{'diff': 0.00026794500000000207}, {'diff': 0.00026743099999999853}, {'diff': 0.000267431000000002}, {'diff': 0.00026743099999999853}, {'diff': 0.00026745800000000167}, {'diff': 0.00026741699999999896...</msg>
<status status="PASS" starttime="20201029 18:14:48.390" endtime="20201029 18:14:48.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:48.397" level="INFO">${RESULT} = {'diff': [0.00026794500000000207, 0.00026743099999999853, 0.000267431000000002, 0.00026743099999999853, 0.00026745800000000167, 0.00026741699999999896, 0.00026743099999999853, 0.00026737500000000025, ...</msg>
<status status="PASS" starttime="20201029 18:14:48.394" endtime="20201029 18:14:48.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.401" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:48.400" endtime="20201029 18:14:48.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.403" level="INFO">VALUE: [0.00026794500000000207, 0.00026743099999999853, 0.000267431000000002, 0.00026743099999999853, 0.00026745800000000167, 0.00026741699999999896, 0.00026743099999999853, 0.00026737500000000025, 0.0002673480000000006, 0.00026743099999999853, 0.0002674029999999994, 0.0002674159999999995, 0.0002675000000000004, 0.00026741699999999896, 0.00026742999999999906, 0.00026742999999999906, 0.00026742999999999906, 0.000267431000000002, 0.0002674159999999995, 0.0002674159999999995, 0.0002674159999999995, 0.00026742999999999906, 0.0002674159999999995, 0.0002674159999999995, 0.0002674159999999995, 0.00026745800000000167, 0.0002674159999999995, 0.0002673889999999998, 0.00026741699999999896, 0.0002674029999999994, 0.00026744399999999863, 0.000267431000000002, 0.00026743099999999853, 0.00026741700000000243, 0.0002674029999999994, 0.000267431000000002, 0.00026743099999999853, 0.00026741700000000243, 0.0002674449999999981, 0.0002673470000000011, 0.00026743099999999853, 0.00026741700000000243, 0.00026743099999999853, 0.00026741700000000243, 0.0002674440000000021, 0.0002673610000000007, 0.0002674029999999994, 0.00026744500000000157, 0.00026743099999999853, 0.0002674029999999994]</msg>
<status status="PASS" starttime="20201029 18:14:48.402" endtime="20201029 18:14:48.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.398" endtime="20201029 18:14:48.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.042" endtime="20201029 18:14:48.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.019" endtime="20201029 18:14:48.406"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:48.409" endtime="20201029 18:14:48.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.407" endtime="20201029 18:14:48.428"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.436" endtime="20201029 18:14:48.461"></status>
</kw>
<msg timestamp="20201029 18:14:48.461" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.435" endtime="20201029 18:14:48.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.464" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.462" endtime="20201029 18:14:48.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.465" endtime="20201029 18:14:48.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.432" endtime="20201029 18:14:48.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.430" endtime="20201029 18:14:48.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.473" endtime="20201029 18:14:48.772"></status>
</kw>
<msg timestamp="20201029 18:14:48.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016599028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016885625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.472" endtime="20201029 18:14:48.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016599028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016885625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.781" endtime="20201029 18:14:48.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.795" endtime="20201029 18:14:48.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.469" endtime="20201029 18:14:48.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.468" endtime="20201029 18:14:48.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:48.802" level="INFO">${PHILIP_RES} = [{'diff': 0.000286597000000003}, {'diff': 0.00028605500000000034}, {'diff': 0.0002860689999999999}, {'diff': 0.00028602800000000067}, {'diff': 0.0002860140000000011}, {'diff': 0.00028604200000000024},...</msg>
<status status="PASS" starttime="20201029 18:14:48.799" endtime="20201029 18:14:48.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:48.806" level="INFO">${RESULT} = {'diff': [0.000286597000000003, 0.00028605500000000034, 0.0002860689999999999, 0.00028602800000000067, 0.0002860140000000011, 0.00028604200000000024, 0.0002860689999999999, 0.00028608300000000295, 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:48.803" endtime="20201029 18:14:48.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.811" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:48.810" endtime="20201029 18:14:48.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.813" level="INFO">VALUE: [0.000286597000000003, 0.00028605500000000034, 0.0002860689999999999, 0.00028602800000000067, 0.0002860140000000011, 0.00028604200000000024, 0.0002860689999999999, 0.00028608300000000295, 0.0002860559999999998, 0.0002860559999999998, 0.0002860559999999998, 0.00028602800000000067, 0.0002860689999999999, 0.00028604100000000077, 0.0002860559999999998, 0.00028602800000000067, 0.00028604200000000024, 0.0002860559999999998, 0.00028605499999999687, 0.00028605500000000034, 0.0002860689999999999, 0.00028605500000000034, 0.0002860559999999998, 0.0002860699999999994, 0.00028604100000000077, 0.0002860689999999999, 0.00028604200000000024, 0.0002860699999999994, 0.00028607000000000285, 0.0002860559999999998, 0.00028602800000000067, 0.00028605500000000034, 0.00028605499999999687, 0.0002860559999999998, 0.0002860559999999998, 0.00028604200000000024, 0.00028605500000000034, 0.00028599999999999806, 0.0002860829999999995, 0.00028602800000000067, 0.00028599999999999806, 0.00028604200000000024, 0.00028609699999999905, 0.00028604100000000077, 0.00028605500000000034, 0.00028604199999999677, 0.0002860699999999994, 0.0002860559999999998, 0.00028605500000000034, 0.00028604099999999383]</msg>
<status status="PASS" starttime="20201029 18:14:48.812" endtime="20201029 18:14:48.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.807" endtime="20201029 18:14:48.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.429" endtime="20201029 18:14:48.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.407" endtime="20201029 18:14:48.815"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:48.817" endtime="20201029 18:14:48.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.816" endtime="20201029 18:14:48.837"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.845" endtime="20201029 18:14:48.871"></status>
</kw>
<msg timestamp="20201029 18:14:48.872" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.844" endtime="20201029 18:14:48.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.874" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.873" endtime="20201029 18:14:48.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.875" endtime="20201029 18:14:48.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.841" endtime="20201029 18:14:48.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.839" endtime="20201029 18:14:48.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.884" endtime="20201029 18:14:49.172"></status>
</kw>
<msg timestamp="20201029 18:14:49.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016630542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016936333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.882" endtime="20201029 18:14:49.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016630542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016936333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.176" endtime="20201029 18:14:49.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.184" endtime="20201029 18:14:49.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.880" endtime="20201029 18:14:49.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.878" endtime="20201029 18:14:49.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:49.191" level="INFO">${PHILIP_RES} = [{'diff': 0.0003057909999999997}, {'diff': 0.00030530599999999825}, {'diff': 0.0003052909999999992}, {'diff': 0.00030529200000000214}, {'diff': 0.00030524999999999997}, {'diff': 0.0003053190000000018}...</msg>
<status status="PASS" starttime="20201029 18:14:49.188" endtime="20201029 18:14:49.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:49.195" level="INFO">${RESULT} = {'diff': [0.0003057909999999997, 0.00030530599999999825, 0.0003052909999999992, 0.00030529200000000214, 0.00030524999999999997, 0.0003053190000000018, 0.0003052780000000026, 0.00030534700000000095, 0....</msg>
<status status="PASS" starttime="20201029 18:14:49.192" endtime="20201029 18:14:49.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.199" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:49.198" endtime="20201029 18:14:49.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.201" level="INFO">VALUE: [0.0003057909999999997, 0.00030530599999999825, 0.0003052909999999992, 0.00030529200000000214, 0.00030524999999999997, 0.0003053190000000018, 0.0003052780000000026, 0.00030534700000000095, 0.0003053060000000017, 0.0003052909999999992, 0.0003053190000000018, 0.00030530500000000224, 0.0003053329999999979, 0.00030533400000000085, 0.00030529200000000214, 0.0003052919999999987, 0.0003052909999999992, 0.00030526399999999954, 0.00030530499999999877, 0.0003052919999999987, 0.00030530500000000224, 0.0003052919999999987, 0.00030531899999999834, 0.00030529200000000214, 0.0003052919999999987, 0.00030531899999999834, 0.000305264000000003, 0.00030527699999999963, 0.0003053200000000013, 0.00030530500000000224, 0.0003052919999999987, 0.0003052779999999991, 0.00030529200000000214, 0.00030524999999999997, 0.00030530499999999877, 0.00030529200000000214, 0.00030530499999999877, 0.0003052919999999987, 0.0003053329999999979, 0.0003052919999999987, 0.0003052909999999992, 0.0003052919999999987, 0.0003052779999999991, 0.0003052909999999992, 0.0003052919999999987, 0.00030526399999999954, 0.00030526399999999954, 0.0003052909999999992, 0.0003052920000000056, 0.0003053329999999979]</msg>
<status status="PASS" starttime="20201029 18:14:49.200" endtime="20201029 18:14:49.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.195" endtime="20201029 18:14:49.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.838" endtime="20201029 18:14:49.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.815" endtime="20201029 18:14:49.203"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:49.205" endtime="20201029 18:14:49.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.204" endtime="20201029 18:14:49.225"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.233" endtime="20201029 18:14:49.260"></status>
</kw>
<msg timestamp="20201029 18:14:49.261" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.232" endtime="20201029 18:14:49.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.263" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.262" endtime="20201029 18:14:49.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.264" endtime="20201029 18:14:49.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.229" endtime="20201029 18:14:49.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.227" endtime="20201029 18:14:49.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.274" endtime="20201029 18:14:49.559"></status>
</kw>
<msg timestamp="20201029 18:14:49.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016456792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016782458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.272" endtime="20201029 18:14:49.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016456792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016782458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.563" endtime="20201029 18:14:49.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.571" endtime="20201029 18:14:49.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.270" endtime="20201029 18:14:49.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.268" endtime="20201029 18:14:49.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:49.577" level="INFO">${PHILIP_RES} = [{'diff': 0.00032566599999999876}, {'diff': 0.00032511099999999946}, {'diff': 0.0003252089999999999}, {'diff': 0.00032513900000000207}, {'diff': 0.0003251389999999986}, {'diff': 0.0003251519999999987}...</msg>
<status status="PASS" starttime="20201029 18:14:49.574" endtime="20201029 18:14:49.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:49.581" level="INFO">${RESULT} = {'diff': [0.00032566599999999876, 0.00032511099999999946, 0.0003252089999999999, 0.00032513900000000207, 0.0003251389999999986, 0.0003251519999999987, 0.0003251519999999987, 0.00032515300000000164, 0....</msg>
<status status="PASS" starttime="20201029 18:14:49.578" endtime="20201029 18:14:49.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.586" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:49.585" endtime="20201029 18:14:49.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.588" level="INFO">VALUE: [0.00032566599999999876, 0.00032511099999999946, 0.0003252089999999999, 0.00032513900000000207, 0.0003251389999999986, 0.0003251519999999987, 0.0003251519999999987, 0.00032515300000000164, 0.00032515300000000164, 0.00032515300000000164, 0.0003251670000000012, 0.0003251389999999986, 0.0003251389999999986, 0.0003251389999999986, 0.00032511099999999946, 0.00032515300000000164, 0.00032515300000000164, 0.0003251389999999986, 0.0003251519999999987, 0.0003251389999999986, 0.0003251389999999986, 0.00032520800000000044, 0.00032516600000000173, 0.00032515200000000216, 0.00032515299999999817, 0.0003251389999999986, 0.0003251389999999986, 0.00032513900000000207, 0.0003251670000000012, 0.0003251120000000024, 0.0003251519999999987, 0.00032515299999999817, 0.00032515299999999817, 0.0003251389999999986, 0.0003251389999999986, 0.00032515200000000216, 0.00032513900000000207, 0.0003251389999999986, 0.000325124999999999, 0.00032515299999999817, 0.00032515300000000164, 0.0003251389999999951, 0.00032515300000000164, 0.00032513900000000207, 0.00032513900000000207, 0.00032513900000000207, 0.00032516600000000173, 0.00032516600000000173, 0.00032508299999999685, 0.0003251250000000025]</msg>
<status status="PASS" starttime="20201029 18:14:49.587" endtime="20201029 18:14:49.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.582" endtime="20201029 18:14:49.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.226" endtime="20201029 18:14:49.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.203" endtime="20201029 18:14:49.591"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:49.593" endtime="20201029 18:14:49.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.592" endtime="20201029 18:14:49.613"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.621" endtime="20201029 18:14:49.648"></status>
</kw>
<msg timestamp="20201029 18:14:49.649" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.619" endtime="20201029 18:14:49.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.651" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.650" endtime="20201029 18:14:49.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.652" endtime="20201029 18:14:49.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.617" endtime="20201029 18:14:49.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.615" endtime="20201029 18:14:49.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.661" endtime="20201029 18:14:49.946"></status>
</kw>
<msg timestamp="20201029 18:14:49.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016483986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016830111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.659" endtime="20201029 18:14:49.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016483986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016830111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.950" endtime="20201029 18:14:49.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.958" endtime="20201029 18:14:49.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.657" endtime="20201029 18:14:49.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.655" endtime="20201029 18:14:49.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:49.964" level="INFO">${PHILIP_RES} = [{'diff': 0.0003461249999999992}, {'diff': 0.00034559700000000304}, {'diff': 0.00034566599999999795}, {'diff': 0.00034561099999999914}, {'diff': 0.00034561099999999914}, {'diff': 0.0003456249999999987...</msg>
<status status="PASS" starttime="20201029 18:14:49.961" endtime="20201029 18:14:49.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:49.969" level="INFO">${RESULT} = {'diff': [0.0003461249999999992, 0.00034559700000000304, 0.00034566599999999795, 0.00034561099999999914, 0.00034561099999999914, 0.0003456249999999987, 0.000345583, 0.00034561099999999914, 0.000345583...</msg>
<status status="PASS" starttime="20201029 18:14:49.965" endtime="20201029 18:14:49.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.974" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:49.973" endtime="20201029 18:14:49.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.976" level="INFO">VALUE: [0.0003461249999999992, 0.00034559700000000304, 0.00034566599999999795, 0.00034561099999999914, 0.00034561099999999914, 0.0003456249999999987, 0.000345583, 0.00034561099999999914, 0.0003455839999999995, 0.0003455279999999977, 0.00034561099999999914, 0.0003456250000000022, 0.00034559699999999957, 0.00034561099999999914, 0.0003455980000000025, 0.00034559699999999957, 0.000345583, 0.00034561099999999914, 0.00034559699999999957, 0.0003456389999999983, 0.00034561099999999914, 0.00034559699999999957, 0.000345583, 0.00034563900000000175, 0.00034561099999999914, 0.0003456250000000022, 0.0003456250000000022, 0.0003456660000000014, 0.000345583, 0.00034559699999999957, 0.0003456119999999986, 0.0003456249999999987, 0.0003456670000000009, 0.0003456119999999986, 0.0003455699999999999, 0.00034559699999999957, 0.00034561099999999914, 0.00034561099999999914, 0.00034561099999999914, 0.0003456110000000026, 0.0003455969999999961, 0.0003455690000000039, 0.0003455969999999961, 0.00034559700000000304, 0.00034558400000000294, 0.0003456110000000026, 0.0003456120000000021, 0.00034559700000000304, 0.00034559700000000304, 0.000345583999999996]</msg>
<status status="PASS" starttime="20201029 18:14:49.975" endtime="20201029 18:14:49.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.970" endtime="20201029 18:14:49.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.613" endtime="20201029 18:14:49.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.591" endtime="20201029 18:14:49.978"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:49.980" endtime="20201029 18:14:50.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.979" endtime="20201029 18:14:50.000"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.008" endtime="20201029 18:14:50.037"></status>
</kw>
<msg timestamp="20201029 18:14:50.038" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.007" endtime="20201029 18:14:50.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.040" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.039" endtime="20201029 18:14:50.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.041" endtime="20201029 18:14:50.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.004" endtime="20201029 18:14:50.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.002" endtime="20201029 18:14:50.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.050" endtime="20201029 18:14:50.352"></status>
</kw>
<msg timestamp="20201029 18:14:50.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016823958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017191167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.049" endtime="20201029 18:14:50.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016823958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017191167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.356" endtime="20201029 18:14:50.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.364" endtime="20201029 18:14:50.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.046" endtime="20201029 18:14:50.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.044" endtime="20201029 18:14:50.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:50.370" level="INFO">${PHILIP_RES} = [{'diff': 0.0003672090000000003}, {'diff': 0.00036668100000000065}, {'diff': 0.00036669400000000074}, {'diff': 0.00036669400000000074}, {'diff': 0.0003666660000000016}, {'diff': 0.0003666660000000016}...</msg>
<status status="PASS" starttime="20201029 18:14:50.367" endtime="20201029 18:14:50.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:50.374" level="INFO">${RESULT} = {'diff': [0.0003672090000000003, 0.00036668100000000065, 0.00036669400000000074, 0.00036669400000000074, 0.0003666660000000016, 0.0003666660000000016, 0.00036668000000000117, 0.00036676400000000206, 0...</msg>
<status status="PASS" starttime="20201029 18:14:50.371" endtime="20201029 18:14:50.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.379" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:50.378" endtime="20201029 18:14:50.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.381" level="INFO">VALUE: [0.0003672090000000003, 0.00036668100000000065, 0.00036669400000000074, 0.00036669400000000074, 0.0003666660000000016, 0.0003666660000000016, 0.00036668000000000117, 0.00036676400000000206, 0.00036668100000000065, 0.0003666669999999976, 0.00036668100000000065, 0.00036668100000000065, 0.00036669400000000074, 0.00036669400000000074, 0.00036669400000000074, 0.0003666799999999977, 0.00036669399999999727, 0.00036669499999999675, 0.0003666809999999972, 0.0003666809999999972, 0.0003666809999999972, 0.00036663900000000194, 0.00036669399999999727, 0.00036666599999999813, 0.00036666599999999813, 0.00036665299999999804, 0.0003666530000000015, 0.00036668100000000065, 0.00036668100000000065, 0.0003666249999999989, 0.00036668100000000065, 0.00036669400000000074, 0.00036669400000000074, 0.00036668000000000117, 0.00036668000000000117, 0.0003666799999999977, 0.00036667999999999423, 0.0003666950000000002, 0.00036665299999999457, 0.0003667089999999998, 0.0003666530000000015, 0.0003666670000000011, 0.00036669400000000074, 0.00036668000000000117, 0.0003666660000000016, 0.00036668000000000117, 0.00036668000000000117, 0.0003666950000000002, 0.00036668100000000065, 0.00036668100000000065]</msg>
<status status="PASS" starttime="20201029 18:14:50.380" endtime="20201029 18:14:50.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.375" endtime="20201029 18:14:50.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.001" endtime="20201029 18:14:50.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.978" endtime="20201029 18:14:50.383"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:50.385" endtime="20201029 18:14:50.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.384" endtime="20201029 18:14:50.405"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.413" endtime="20201029 18:14:50.443"></status>
</kw>
<msg timestamp="20201029 18:14:50.443" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.411" endtime="20201029 18:14:50.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.446" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.444" endtime="20201029 18:14:50.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.447" endtime="20201029 18:14:50.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.409" endtime="20201029 18:14:50.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.407" endtime="20201029 18:14:50.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.456" endtime="20201029 18:14:50.741"></status>
</kw>
<msg timestamp="20201029 18:14:50.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016477833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016866722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.455" endtime="20201029 18:14:50.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016477833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016866722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.745" endtime="20201029 18:14:50.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.753" endtime="20201029 18:14:50.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.452" endtime="20201029 18:14:50.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.451" endtime="20201029 18:14:50.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:50.760" level="INFO">${PHILIP_RES} = [{'diff': 0.0003888889999999999}, {'diff': 0.00038840300000000244}, {'diff': 0.00038837499999999983}, {'diff': 0.00038836100000000026}, {'diff': 0.0003884439999999982}, {'diff': 0.00038837499999999983...</msg>
<status status="PASS" starttime="20201029 18:14:50.757" endtime="20201029 18:14:50.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:50.764" level="INFO">${RESULT} = {'diff': [0.0003888889999999999, 0.00038840300000000244, 0.00038837499999999983, 0.00038836100000000026, 0.0003884439999999982, 0.00038837499999999983, 0.00038837499999999983, 0.00038837499999999983, ...</msg>
<status status="PASS" starttime="20201029 18:14:50.761" endtime="20201029 18:14:50.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.768" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:50.767" endtime="20201029 18:14:50.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.770" level="INFO">VALUE: [0.0003888889999999999, 0.00038840300000000244, 0.00038837499999999983, 0.00038836100000000026, 0.0003884439999999982, 0.00038837499999999983, 0.00038837499999999983, 0.00038837499999999983, 0.000388305999999998, 0.00038837499999999983, 0.00038836100000000026, 0.0003883889999999994, 0.00038840300000000244, 0.00038836100000000026, 0.00038836100000000026, 0.0003883889999999994, 0.00038836199999999974, 0.000388305000000002, 0.00038837499999999983, 0.0003884310000000016, 0.0003884439999999982, 0.00038837499999999983, 0.00038837499999999983, 0.00038836100000000026, 0.0003883889999999994, 0.0003883469999999972, 0.0003883889999999994, 0.00038836100000000026, 0.00038837499999999983, 0.00038829099999999894, 0.00038837499999999983, 0.0003883889999999994, 0.00038837499999999983, 0.000388417000000002, 0.0003883330000000011, 0.0003883750000000033, 0.0003883750000000033, 0.0003883609999999968, 0.00038837499999999636, 0.00038837499999999636, 0.0003883620000000032, 0.00038838900000000287, 0.0003883750000000033, 0.000388319000000005, 0.00038837499999999636, 0.00038836199999999627, 0.00038841699999999507, 0.0003883750000000033, 0.0003883750000000033, 0.00038836100000000373]</msg>
<status status="PASS" starttime="20201029 18:14:50.769" endtime="20201029 18:14:50.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.765" endtime="20201029 18:14:50.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.406" endtime="20201029 18:14:50.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.383" endtime="20201029 18:14:50.773"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:50.775" endtime="20201029 18:14:50.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.774" endtime="20201029 18:14:50.795"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.803" endtime="20201029 18:14:50.834"></status>
</kw>
<msg timestamp="20201029 18:14:50.835" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.802" endtime="20201029 18:14:50.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.837" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.836" endtime="20201029 18:14:50.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.838" endtime="20201029 18:14:50.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.799" endtime="20201029 18:14:50.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.797" endtime="20201029 18:14:50.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.847" endtime="20201029 18:14:51.135"></status>
</kw>
<msg timestamp="20201029 18:14:51.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016433722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016844917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.846" endtime="20201029 18:14:51.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016433722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016844917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.139" endtime="20201029 18:14:51.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.147" endtime="20201029 18:14:51.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.843" endtime="20201029 18:14:51.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.841" endtime="20201029 18:14:51.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:51.153" level="INFO">${PHILIP_RES} = [{'diff': 0.0004111949999999996}, {'diff': 0.00041068099999999955}, {'diff': 0.0004107500000000014}, {'diff': 0.00041068099999999955}, {'diff': 0.00041068099999999955}, {'diff': 0.00041069399999999964...</msg>
<status status="PASS" starttime="20201029 18:14:51.150" endtime="20201029 18:14:51.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:51.158" level="INFO">${RESULT} = {'diff': [0.0004111949999999996, 0.00041068099999999955, 0.0004107500000000014, 0.00041068099999999955, 0.00041068099999999955, 0.00041069399999999964, 0.000410667, 0.00041068000000000007, 0.000410667...</msg>
<status status="PASS" starttime="20201029 18:14:51.154" endtime="20201029 18:14:51.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.162" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:51.161" endtime="20201029 18:14:51.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.164" level="INFO">VALUE: [0.0004111949999999996, 0.00041068099999999955, 0.0004107500000000014, 0.00041068099999999955, 0.00041068099999999955, 0.00041069399999999964, 0.000410667, 0.00041068000000000007, 0.000410667, 0.00041072299999999826, 0.00041068000000000007, 0.000410667, 0.0004106110000000017, 0.0004106660000000005, 0.0004106530000000004, 0.000410667, 0.00041065199999999746, 0.0004106950000000026, 0.00041068000000000007, 0.000410667, 0.000410667, 0.0004106660000000005, 0.0004107219999999988, 0.0004107230000000017, 0.00041068000000000007, 0.000410681000000003, 0.00041070900000000216, 0.0004106660000000005, 0.00041058300000000256, 0.00041069399999999964, 0.00041068099999999955, 0.000410667, 0.00041068000000000354, 0.000410681000000003, 0.000410681000000003, 0.00041066600000000397, 0.000410681000000003, 0.00041072200000000225, 0.00041066600000000397, 0.0004106809999999961, 0.0004106799999999966, 0.000410681000000003, 0.0004106669999999965, 0.0004106939999999962, 0.0004106669999999965, 0.0004106669999999965, 0.00041066599999999703, 0.0004106809999999961, 0.00041072200000000225, 0.00041065299999999694]</msg>
<status status="PASS" starttime="20201029 18:14:51.163" endtime="20201029 18:14:51.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.159" endtime="20201029 18:14:51.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.796" endtime="20201029 18:14:51.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.773" endtime="20201029 18:14:51.166"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:51.169" endtime="20201029 18:14:51.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.167" endtime="20201029 18:14:51.189"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.197" endtime="20201029 18:14:51.230"></status>
</kw>
<msg timestamp="20201029 18:14:51.230" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.195" endtime="20201029 18:14:51.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.232" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.231" endtime="20201029 18:14:51.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.234" endtime="20201029 18:14:51.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.192" endtime="20201029 18:14:51.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.191" endtime="20201029 18:14:51.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.242" endtime="20201029 18:14:51.529"></status>
</kw>
<msg timestamp="20201029 18:14:51.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016635625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017069778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.241" endtime="20201029 18:14:51.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016635625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017069778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.533" endtime="20201029 18:14:51.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.541" endtime="20201029 18:14:51.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.238" endtime="20201029 18:14:51.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.237" endtime="20201029 18:14:51.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:51.547" level="INFO">${PHILIP_RES} = [{'diff': 0.0004341529999999996}, {'diff': 0.0004336110000000004}, {'diff': 0.0004335980000000003}, {'diff': 0.0004336110000000004}, {'diff': 0.0004335409999999991}, {'diff': 0.0004335969999999974}, {...</msg>
<status status="PASS" starttime="20201029 18:14:51.544" endtime="20201029 18:14:51.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:51.551" level="INFO">${RESULT} = {'diff': [0.0004341529999999996, 0.0004336110000000004, 0.0004335980000000003, 0.0004336110000000004, 0.0004335409999999991, 0.0004335969999999974, 0.0004336669999999987, 0.0004335690000000017, 0.0004...</msg>
<status status="PASS" starttime="20201029 18:14:51.548" endtime="20201029 18:14:51.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.556" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:51.554" endtime="20201029 18:14:51.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.558" level="INFO">VALUE: [0.0004341529999999996, 0.0004336110000000004, 0.0004335980000000003, 0.0004336110000000004, 0.0004335409999999991, 0.0004335969999999974, 0.0004336669999999987, 0.0004335690000000017, 0.00043356899999999823, 0.0004335829999999978, 0.00043358400000000075, 0.0004335830000000013, 0.0004335830000000013, 0.0004335829999999978, 0.0004335560000000016, 0.0004335830000000013, 0.0004335690000000017, 0.00043356899999999823, 0.00043359799999999685, 0.0004336110000000004, 0.0004335690000000017, 0.0004335830000000013, 0.0004335980000000003, 0.00043359700000000084, 0.0004335830000000013, 0.0004335690000000017, 0.0004335699999999977, 0.000433625, 0.0004335830000000013, 0.0004335409999999991, 0.0004335980000000003, 0.00043359700000000084, 0.0004336110000000004, 0.0004335830000000013, 0.00043358400000000075, 0.00043358400000000075, 0.0004335830000000013, 0.0004335830000000013, 0.0004335560000000016, 0.0004335830000000013, 0.0004336110000000004, 0.00043359700000000084, 0.0004335839999999938, 0.0004335700000000012, 0.0004336110000000004, 0.00043359700000000084, 0.00043358400000000075, 0.00043356999999999424, 0.00043358400000000075, 0.00043359700000000084]</msg>
<status status="PASS" starttime="20201029 18:14:51.557" endtime="20201029 18:14:51.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.552" endtime="20201029 18:14:51.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.189" endtime="20201029 18:14:51.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.167" endtime="20201029 18:14:51.560"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:51.562" endtime="20201029 18:14:51.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.561" endtime="20201029 18:14:51.582"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.590" endtime="20201029 18:14:51.624"></status>
</kw>
<msg timestamp="20201029 18:14:51.624" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.588" endtime="20201029 18:14:51.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.627" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.625" endtime="20201029 18:14:51.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.628" endtime="20201029 18:14:51.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.586" endtime="20201029 18:14:51.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.584" endtime="20201029 18:14:51.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.638" endtime="20201029 18:14:51.934"></status>
</kw>
<msg timestamp="20201029 18:14:51.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016599722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017057375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.636" endtime="20201029 18:14:51.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016599722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017057375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.938" endtime="20201029 18:14:51.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.946" endtime="20201029 18:14:51.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.633" endtime="20201029 18:14:51.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.632" endtime="20201029 18:14:51.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:51.952" level="INFO">${PHILIP_RES} = [{'diff': 0.00045765299999999884}, {'diff': 0.0004571249999999992}, {'diff': 0.0004571119999999991}, {'diff': 0.00045709700000000006}, {'diff': 0.0004571249999999992}, {'diff': 0.00045709700000000006}...</msg>
<status status="PASS" starttime="20201029 18:14:51.949" endtime="20201029 18:14:51.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:51.956" level="INFO">${RESULT} = {'diff': [0.00045765299999999884, 0.0004571249999999992, 0.0004571119999999991, 0.00045709700000000006, 0.0004571249999999992, 0.00045709700000000006, 0.000457082999999997, 0.000457098000000003, 0.000...</msg>
<status status="PASS" starttime="20201029 18:14:51.953" endtime="20201029 18:14:51.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.961" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:51.960" endtime="20201029 18:14:51.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.963" level="INFO">VALUE: [0.00045765299999999884, 0.0004571249999999992, 0.0004571119999999991, 0.00045709700000000006, 0.0004571249999999992, 0.00045709700000000006, 0.000457082999999997, 0.000457098000000003, 0.00045711099999999963, 0.00045711099999999963, 0.0004571249999999992, 0.0004571249999999992, 0.0004571939999999976, 0.0004570700000000004, 0.0004571249999999992, 0.00045709799999999953, 0.00045711099999999963, 0.00045711099999999963, 0.0004571530000000018, 0.00045711099999999963, 0.00045711200000000257, 0.0004571249999999992, 0.0004571249999999992, 0.00045709700000000006, 0.0004571119999999991, 0.00045709799999999953, 0.0004571249999999992, 0.0004571249999999992, 0.00045709700000000006, 0.00045712500000000267, 0.000457082999999997, 0.00045713900000000224, 0.00045711099999999616, 0.0004571110000000031, 0.00045711099999999616, 0.00045712500000000267, 0.00045711099999999616, 0.000457098000000003, 0.0004570969999999966, 0.00045709700000000353, 0.00045712500000000267, 0.0004571110000000031, 0.000457098000000003, 0.00045711099999999616, 0.0004571110000000031, 0.00045715299999999487, 0.00045713800000000276, 0.00045711099999999616, 0.00045709700000000353, 0.0004570969999999966]</msg>
<status status="PASS" starttime="20201029 18:14:51.962" endtime="20201029 18:14:51.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.957" endtime="20201029 18:14:51.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.582" endtime="20201029 18:14:51.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.560" endtime="20201029 18:14:51.966"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:51.968" endtime="20201029 18:14:51.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.967" endtime="20201029 18:14:51.988"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.996" endtime="20201029 18:14:52.032"></status>
</kw>
<msg timestamp="20201029 18:14:52.032" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.995" endtime="20201029 18:14:52.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.035" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.033" endtime="20201029 18:14:52.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.036" endtime="20201029 18:14:52.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.992" endtime="20201029 18:14:52.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.990" endtime="20201029 18:14:52.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.044" endtime="20201029 18:14:52.329"></status>
</kw>
<msg timestamp="20201029 18:14:52.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016714014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017195792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.043" endtime="20201029 18:14:52.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016714014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017195792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.333" endtime="20201029 18:14:52.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.341" endtime="20201029 18:14:52.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.040" endtime="20201029 18:14:52.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.039" endtime="20201029 18:14:52.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:52.348" level="INFO">${PHILIP_RES} = [{'diff': 0.00048177800000000215}, {'diff': 0.0004812639999999986}, {'diff': 0.00048129199999999775}, {'diff': 0.0004812500000000025}, {'diff': 0.0004812639999999986}, {'diff': 0.00048127800000000165}...</msg>
<status status="PASS" starttime="20201029 18:14:52.345" endtime="20201029 18:14:52.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:52.353" level="INFO">${RESULT} = {'diff': [0.00048177800000000215, 0.0004812639999999986, 0.00048129199999999775, 0.0004812500000000025, 0.0004812639999999986, 0.00048127800000000165, 0.00048124999999999904, 0.00048119500000000023, 0...</msg>
<status status="PASS" starttime="20201029 18:14:52.349" endtime="20201029 18:14:52.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.357" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:52.356" endtime="20201029 18:14:52.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.359" level="INFO">VALUE: [0.00048177800000000215, 0.0004812639999999986, 0.00048129199999999775, 0.0004812500000000025, 0.0004812639999999986, 0.00048127800000000165, 0.00048124999999999904, 0.00048119500000000023, 0.00048123600000000294, 0.00048126299999999914, 0.00048124999999999904, 0.00048123600000000294, 0.00048124999999999904, 0.000481332999999997, 0.0004812500000000025, 0.00048129199999999775, 0.00048124999999999904, 0.00048124999999999904, 0.00048124999999999904, 0.0004812640000000021, 0.0004812640000000021, 0.00048123599999999947, 0.00048129100000000175, 0.00048124999999999904, 0.00048132000000000036, 0.0004812500000000025, 0.00048123599999999947, 0.00048123599999999947, 0.00048119400000000423, 0.0004812640000000021, 0.00048120799999999686, 0.000481235999999996, 0.0004812640000000021, 0.0004812640000000021, 0.0004812640000000021, 0.0004812630000000026, 0.00048120799999999686, 0.00048124999999999557, 0.0004812630000000026, 0.0004812500000000025, 0.00048123600000000294, 0.00048122199999999643, 0.0004813190000000009, 0.0004812640000000021, 0.00048127800000000165, 0.00048133300000000045, 0.0004812500000000025, 0.00048133399999999993, 0.00048126399999999514, 0.0004813190000000009]</msg>
<status status="PASS" starttime="20201029 18:14:52.358" endtime="20201029 18:14:52.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.353" endtime="20201029 18:14:52.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.989" endtime="20201029 18:14:52.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.966" endtime="20201029 18:14:52.361"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:52.363" endtime="20201029 18:14:52.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.362" endtime="20201029 18:14:52.383"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.391" endtime="20201029 18:14:52.428"></status>
</kw>
<msg timestamp="20201029 18:14:52.429" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.390" endtime="20201029 18:14:52.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.431" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.430" endtime="20201029 18:14:52.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.432" endtime="20201029 18:14:52.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.387" endtime="20201029 18:14:52.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.385" endtime="20201029 18:14:52.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.441" endtime="20201029 18:14:52.739"></status>
</kw>
<msg timestamp="20201029 18:14:52.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016561986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0170685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:52.439" endtime="20201029 18:14:52.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016561986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0170685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:52.743" endtime="20201029 18:14:52.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.751" endtime="20201029 18:14:52.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.437" endtime="20201029 18:14:52.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.435" endtime="20201029 18:14:52.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:52.758" level="INFO">${PHILIP_RES} = [{'diff': 0.0005065139999999996}, {'diff': 0.0005059999999999995}, {'diff': 0.0005060139999999991}, {'diff': 0.0005059999999999995}, {'diff': 0.0005060140000000025}, {'diff': 0.000506000000000003}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:52.755" endtime="20201029 18:14:52.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:52.762" level="INFO">${RESULT} = {'diff': [0.0005065139999999996, 0.0005059999999999995, 0.0005060139999999991, 0.0005059999999999995, 0.0005060140000000025, 0.000506000000000003, 0.0005060140000000025, 0.0005060140000000025, 0.00050...</msg>
<status status="PASS" starttime="20201029 18:14:52.759" endtime="20201029 18:14:52.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.766" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:52.765" endtime="20201029 18:14:52.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.768" level="INFO">VALUE: [0.0005065139999999996, 0.0005059999999999995, 0.0005060139999999991, 0.0005059999999999995, 0.0005060140000000025, 0.000506000000000003, 0.0005060140000000025, 0.0005060140000000025, 0.0005059999999999995, 0.0005060139999999991, 0.0005059859999999999, 0.0005060560000000013, 0.0005060690000000014, 0.0005060139999999991, 0.0005060139999999991, 0.0005059999999999995, 0.0005060139999999991, 0.0005059999999999995, 0.0005060139999999991, 0.0005060139999999991, 0.0005060139999999991, 0.0005059999999999995, 0.0005059999999999995, 0.0005060280000000021, 0.000506000000000003, 0.0005060139999999991, 0.0005060139999999991, 0.0005060279999999986, 0.0005060689999999979, 0.0005059999999999995, 0.0005060409999999987, 0.0005060000000000064, 0.0005059999999999995, 0.000506014000000006, 0.0005059999999999995, 0.0005060139999999991, 0.0005060689999999979, 0.0005060139999999991, 0.0005060269999999992, 0.0005059440000000012, 0.0005060139999999991, 0.0005059859999999999, 0.0005060139999999991, 0.0005060279999999986, 0.0005060139999999991, 0.0005059999999999995, 0.0005059999999999995, 0.0005060139999999991, 0.0005059999999999995, 0.0005059999999999995]</msg>
<status status="PASS" starttime="20201029 18:14:52.767" endtime="20201029 18:14:52.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.762" endtime="20201029 18:14:52.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.384" endtime="20201029 18:14:52.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.361" endtime="20201029 18:14:52.770"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:52.772" endtime="20201029 18:14:52.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.771" endtime="20201029 18:14:52.792"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.800" endtime="20201029 18:14:52.838"></status>
</kw>
<msg timestamp="20201029 18:14:52.839" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.799" endtime="20201029 18:14:52.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.841" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.840" endtime="20201029 18:14:52.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.842" endtime="20201029 18:14:52.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.796" endtime="20201029 18:14:52.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.794" endtime="20201029 18:14:52.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.852" endtime="20201029 18:14:53.138"></status>
</kw>
<msg timestamp="20201029 18:14:53.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016574639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0171065, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:52.851" endtime="20201029 18:14:53.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016574639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0171065, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:53.142" endtime="20201029 18:14:53.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.150" endtime="20201029 18:14:53.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.848" endtime="20201029 18:14:53.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.846" endtime="20201029 18:14:53.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:53.156" level="INFO">${PHILIP_RES} = [{'diff': 0.0005318610000000015}, {'diff': 0.0005313750000000006}, {'diff': 0.0005313620000000005}, {'diff': 0.0005313890000000002}, {'diff': 0.0005313750000000006}, {'diff': 0.000531361000000001}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:53.153" endtime="20201029 18:14:53.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:53.160" level="INFO">${RESULT} = {'diff': [0.0005318610000000015, 0.0005313750000000006, 0.0005313620000000005, 0.0005313890000000002, 0.0005313750000000006, 0.000531361000000001, 0.0005313750000000006, 0.0005313750000000006, 0.00053...</msg>
<status status="PASS" starttime="20201029 18:14:53.157" endtime="20201029 18:14:53.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.164" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:53.163" endtime="20201029 18:14:53.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.167" level="INFO">VALUE: [0.0005318610000000015, 0.0005313750000000006, 0.0005313620000000005, 0.0005313890000000002, 0.0005313750000000006, 0.000531361000000001, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.0005313890000000002, 0.0005313890000000002, 0.0005313749999999971, 0.0005313749999999971, 0.0005313609999999976, 0.0005313609999999976, 0.0005314169999999993, 0.0005313750000000006, 0.0005314300000000029, 0.0005313749999999971, 0.0005313890000000002, 0.0005313750000000006, 0.0005313189999999988, 0.0005314299999999994, 0.000531443999999999, 0.0005313889999999967, 0.0005313750000000006, 0.0005313890000000002, 0.0005313750000000006, 0.0005313049999999958, 0.0005313890000000002, 0.0005313890000000002, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.000531361000000001, 0.0005313620000000005, 0.0005313330000000019, 0.0005313890000000002, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.0005314309999999989, 0.000531361000000001, 0.0005313480000000009, 0.0005314159999999998, 0.0005314029999999997, 0.0005313469999999945, 0.0005313750000000006]</msg>
<status status="PASS" starttime="20201029 18:14:53.165" endtime="20201029 18:14:53.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.161" endtime="20201029 18:14:53.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.793" endtime="20201029 18:14:53.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.771" endtime="20201029 18:14:53.169"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:53.172" endtime="20201029 18:14:53.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.170" endtime="20201029 18:14:53.192"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.200" endtime="20201029 18:14:53.239"></status>
</kw>
<msg timestamp="20201029 18:14:53.239" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.198" endtime="20201029 18:14:53.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.242" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.240" endtime="20201029 18:14:53.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.243" endtime="20201029 18:14:53.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.195" endtime="20201029 18:14:53.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.193" endtime="20201029 18:14:53.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.252" endtime="20201029 18:14:53.547"></status>
</kw>
<msg timestamp="20201029 18:14:53.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01667125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017229125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:53.250" endtime="20201029 18:14:53.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01667125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017229125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:53.551" endtime="20201029 18:14:53.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.559" endtime="20201029 18:14:53.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.248" endtime="20201029 18:14:53.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.246" endtime="20201029 18:14:53.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:53.565" level="INFO">${PHILIP_RES} = [{'diff': 0.0005578750000000028}, {'diff': 0.0005574030000000015}, {'diff': 0.0005573609999999993}, {'diff': 0.0005573480000000026}, {'diff': 0.0005573609999999993}, {'diff': 0.0005574159999999981}, {...</msg>
<status status="PASS" starttime="20201029 18:14:53.562" endtime="20201029 18:14:53.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:53.570" level="INFO">${RESULT} = {'diff': [0.0005578750000000028, 0.0005574030000000015, 0.0005573609999999993, 0.0005573480000000026, 0.0005573609999999993, 0.0005574159999999981, 0.0005573469999999997, 0.0005574310000000006, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:14:53.566" endtime="20201029 18:14:53.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.574" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:53.573" endtime="20201029 18:14:53.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.577" level="INFO">VALUE: [0.0005578750000000028, 0.0005574030000000015, 0.0005573609999999993, 0.0005573480000000026, 0.0005573609999999993, 0.0005574159999999981, 0.0005573469999999997, 0.0005574310000000006, 0.0005573469999999997, 0.0005573469999999997, 0.0005573340000000031, 0.00055732, 0.0005573469999999997, 0.0005573330000000001, 0.0005573330000000001, 0.0005573889999999984, 0.0005572780000000013, 0.0005573610000000027, 0.0005572919999999974, 0.0005574159999999981, 0.0005573470000000032, 0.0005573469999999997, 0.000557305000000001, 0.0005573609999999993, 0.0005573469999999997, 0.0005573470000000066, 0.0005574440000000042, 0.0005573190000000006, 0.0005573330000000001, 0.0005573469999999997, 0.0005573619999999987, 0.0005573469999999997, 0.0005573750000000058, 0.0005573890000000054, 0.0005573889999999984, 0.0005573330000000001, 0.0005573889999999984, 0.0005573749999999988, 0.0005573469999999997, 0.0005573189999999936, 0.0005573749999999988, 0.0005573469999999997, 0.0005573469999999997, 0.0005573749999999988, 0.0005573609999999993, 0.0005573609999999993, 0.0005573190000000006, 0.0005573609999999993, 0.0005574169999999976, 0.000557305000000001]</msg>
<status status="PASS" starttime="20201029 18:14:53.576" endtime="20201029 18:14:53.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.571" endtime="20201029 18:14:53.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.192" endtime="20201029 18:14:53.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.170" endtime="20201029 18:14:53.579"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:53.581" endtime="20201029 18:14:53.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.580" endtime="20201029 18:14:53.601"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.609" endtime="20201029 18:14:53.649"></status>
</kw>
<msg timestamp="20201029 18:14:53.650" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.607" endtime="20201029 18:14:53.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.652" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.651" endtime="20201029 18:14:53.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.653" endtime="20201029 18:14:53.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.605" endtime="20201029 18:14:53.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.603" endtime="20201029 18:14:53.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.662" endtime="20201029 18:14:53.948"></status>
</kw>
<msg timestamp="20201029 18:14:53.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016605111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017189556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:53.660" endtime="20201029 18:14:53.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016605111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017189556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:53.952" endtime="20201029 18:14:53.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.960" endtime="20201029 18:14:53.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.658" endtime="20201029 18:14:53.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.656" endtime="20201029 18:14:53.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:53.966" level="INFO">${PHILIP_RES} = [{'diff': 0.0005844450000000029}, {'diff': 0.0005839299999999999}, {'diff': 0.0005839309999999993}, {'diff': 0.0005839439999999994}, {'diff': 0.0005839029999999967}, {'diff': 0.000583959000000002}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:53.963" endtime="20201029 18:14:53.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:53.970" level="INFO">${RESULT} = {'diff': [0.0005844450000000029, 0.0005839299999999999, 0.0005839309999999993, 0.0005839439999999994, 0.0005839029999999967, 0.000583959000000002, 0.0005839439999999994, 0.0005839310000000028, 0.00058...</msg>
<status status="PASS" starttime="20201029 18:14:53.967" endtime="20201029 18:14:53.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.974" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:53.973" endtime="20201029 18:14:53.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.977" level="INFO">VALUE: [0.0005844450000000029, 0.0005839299999999999, 0.0005839309999999993, 0.0005839439999999994, 0.0005839029999999967, 0.000583959000000002, 0.0005839439999999994, 0.0005839310000000028, 0.0005839309999999993, 0.000583957999999999, 0.0005839309999999993, 0.0005839019999999973, 0.0005839580000000025, 0.0005839310000000028, 0.0005840139999999973, 0.000583957999999999, 0.0005839589999999985, 0.0005839299999999999, 0.000583959000000002, 0.0005839299999999999, 0.000583957999999999, 0.0005839449999999989, 0.000583957999999999, 0.0005839309999999993, 0.000583972000000002, 0.000583943999999996, 0.0005839310000000028, 0.0005839440000000029, 0.0005839299999999964, 0.0005839030000000037, 0.000583943999999996, 0.0005839170000000032, 0.0005839449999999954, 0.0005839580000000025, 0.0005839440000000029, 0.0005839309999999959, 0.0005839440000000029, 0.0005839449999999954, 0.000583972000000002, 0.0005839440000000029, 0.0005839450000000024, 0.0005839300000000033, 0.000583943999999996, 0.0005839310000000028, 0.0005838749999999976, 0.0005839310000000028, 0.0005839310000000028, 0.0005839299999999964, 0.000583959000000002, 0.000583943999999996]</msg>
<status status="PASS" starttime="20201029 18:14:53.975" endtime="20201029 18:14:53.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.971" endtime="20201029 18:14:53.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.601" endtime="20201029 18:14:53.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.579" endtime="20201029 18:14:53.979"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:53.981" endtime="20201029 18:14:54.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.980" endtime="20201029 18:14:54.001"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.009" endtime="20201029 18:14:54.051"></status>
</kw>
<msg timestamp="20201029 18:14:54.051" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.007" endtime="20201029 18:14:54.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.054" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.052" endtime="20201029 18:14:54.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.055" endtime="20201029 18:14:54.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.005" endtime="20201029 18:14:54.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.003" endtime="20201029 18:14:54.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.064" endtime="20201029 18:14:54.363"></status>
</kw>
<msg timestamp="20201029 18:14:54.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016607542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017219208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.063" endtime="20201029 18:14:54.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016607542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017219208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.367" endtime="20201029 18:14:54.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.374" endtime="20201029 18:14:54.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.060" endtime="20201029 18:14:54.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.059" endtime="20201029 18:14:54.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:54.381" level="INFO">${PHILIP_RES} = [{'diff': 0.0006116660000000003}, {'diff': 0.0006111250000000006}, {'diff': 0.0006111390000000001}, {'diff': 0.0006111390000000001}, {'diff': 0.0006111529999999997}, {'diff': 0.0006111659999999998}, {...</msg>
<status status="PASS" starttime="20201029 18:14:54.378" endtime="20201029 18:14:54.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:54.385" level="INFO">${RESULT} = {'diff': [0.0006116660000000003, 0.0006111250000000006, 0.0006111390000000001, 0.0006111390000000001, 0.0006111529999999997, 0.0006111659999999998, 0.0006111529999999997, 0.0006111669999999993, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:14:54.382" endtime="20201029 18:14:54.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.389" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:54.388" endtime="20201029 18:14:54.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.391" level="INFO">VALUE: [0.0006116660000000003, 0.0006111250000000006, 0.0006111390000000001, 0.0006111390000000001, 0.0006111529999999997, 0.0006111659999999998, 0.0006111529999999997, 0.0006111669999999993, 0.0006111529999999997, 0.0006111390000000001, 0.0006110970000000014, 0.0006111390000000001, 0.0006111530000000032, 0.0006111390000000001, 0.0006111669999999993, 0.0006111659999999998, 0.0006111529999999997, 0.0006111670000000027, 0.0006110830000000018, 0.0006111250000000006, 0.0006111390000000001, 0.0006111250000000006, 0.0006111669999999993, 0.0006111390000000036, 0.0006111519999999968, 0.0006111379999999972, 0.0006111530000000032, 0.0006111529999999962, 0.0006111389999999967, 0.0006111940000000024, 0.0006111249999999971, 0.000611096999999998, 0.0006111670000000027, 0.0006111670000000027, 0.0006111249999999971, 0.0006111390000000036, 0.0006111390000000036, 0.0006112090000000014, 0.0006111390000000036, 0.0006111520000000037, 0.0006111529999999962, 0.0006111670000000027, 0.0006111530000000032, 0.0006111389999999967, 0.0006111249999999971, 0.0006111390000000036, 0.0006111660000000033, 0.0006111669999999958, 0.0006111800000000028, 0.0006111800000000028]</msg>
<status status="PASS" starttime="20201029 18:14:54.390" endtime="20201029 18:14:54.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.386" endtime="20201029 18:14:54.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.001" endtime="20201029 18:14:54.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.979" endtime="20201029 18:14:54.394"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:54.396" endtime="20201029 18:14:54.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.395" endtime="20201029 18:14:54.416"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.424" endtime="20201029 18:14:54.467"></status>
</kw>
<msg timestamp="20201029 18:14:54.468" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.422" endtime="20201029 18:14:54.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.470" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.469" endtime="20201029 18:14:54.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.471" endtime="20201029 18:14:54.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.420" endtime="20201029 18:14:54.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.418" endtime="20201029 18:14:54.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.480" endtime="20201029 18:14:54.766"></status>
</kw>
<msg timestamp="20201029 18:14:54.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0165375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017177, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 18:14:54.479" endtime="20201029 18:14:54.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0165375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017177, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 18:14:54.770" endtime="20201029 18:14:54.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.778" endtime="20201029 18:14:54.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.476" endtime="20201029 18:14:54.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.474" endtime="20201029 18:14:54.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:54.784" level="INFO">${PHILIP_RES} = [{'diff': 0.0006395000000000012}, {'diff': 0.0006389310000000023}, {'diff': 0.0006389719999999981}, {'diff': 0.0006389729999999975}, {'diff': 0.0006389590000000014}, {'diff': 0.0006389590000000014}, {...</msg>
<status status="PASS" starttime="20201029 18:14:54.781" endtime="20201029 18:14:54.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:54.789" level="INFO">${RESULT} = {'diff': [0.0006395000000000012, 0.0006389310000000023, 0.0006389719999999981, 0.0006389729999999975, 0.0006389590000000014, 0.0006389590000000014, 0.0006389439999999989, 0.0006389720000000015, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:14:54.785" endtime="20201029 18:14:54.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.793" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:54.792" endtime="20201029 18:14:54.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.795" level="INFO">VALUE: [0.0006395000000000012, 0.0006389310000000023, 0.0006389719999999981, 0.0006389729999999975, 0.0006389590000000014, 0.0006389590000000014, 0.0006389439999999989, 0.0006389720000000015, 0.0006389159999999998, 0.0006389299999999994, 0.0006389439999999989, 0.000638958000000002, 0.0006389870000000006, 0.000638958999999998, 0.0006389719999999981, 0.000638958000000002, 0.000638958000000002, 0.0006389719999999981, 0.0006389439999999989, 0.0006389720000000015, 0.0006389309999999988, 0.0006389729999999975, 0.0006389589999999945, 0.0006389719999999946, 0.0006389720000000015, 0.000638958000000002, 0.0006388890000000036, 0.000638958000000002, 0.000638958000000002, 0.0006389719999999946, 0.0006389729999999941, 0.0006389590000000014, 0.0006389860000000011, 0.0006389720000000015, 0.000638958000000002, 0.0006389720000000015, 0.0006389439999999955, 0.000638957999999995, 0.0006389720000000015, 0.0006389450000000019, 0.0006389860000000011, 0.0006389590000000014, 0.0006389720000000015, 0.000638958000000002, 0.0006389719999999946, 0.000638957999999995, 0.000638958000000002, 0.0006389720000000015, 0.0006389590000000014, 0.0006389590000000014]</msg>
<status status="PASS" starttime="20201029 18:14:54.794" endtime="20201029 18:14:54.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.790" endtime="20201029 18:14:54.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.417" endtime="20201029 18:14:54.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.394" endtime="20201029 18:14:54.797"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:54.800" endtime="20201029 18:14:54.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.798" endtime="20201029 18:14:54.819"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.827" endtime="20201029 18:14:54.873"></status>
</kw>
<msg timestamp="20201029 18:14:54.873" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.826" endtime="20201029 18:14:54.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.876" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.874" endtime="20201029 18:14:54.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.877" endtime="20201029 18:14:54.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.823" endtime="20201029 18:14:54.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.821" endtime="20201029 18:14:54.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.886" endtime="20201029 18:14:55.187"></status>
</kw>
<msg timestamp="20201029 18:14:55.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016553333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017221264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.884" endtime="20201029 18:14:55.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016553333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017221264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.191" endtime="20201029 18:14:55.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.199" endtime="20201029 18:14:55.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.881" endtime="20201029 18:14:55.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.880" endtime="20201029 18:14:55.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:55.206" level="INFO">${PHILIP_RES} = [{'diff': 0.0006679310000000001}, {'diff': 0.0006673480000000016}, {'diff': 0.0006673750000000013}, {'diff': 0.0006674030000000004}, {'diff': 0.000667402000000001}, {'diff': 0.0006673889999999974}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:55.203" endtime="20201029 18:14:55.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:55.210" level="INFO">${RESULT} = {'diff': [0.0006679310000000001, 0.0006673480000000016, 0.0006673750000000013, 0.0006674030000000004, 0.000667402000000001, 0.0006673889999999974, 0.0006673889999999974, 0.0006673749999999978, 0.00066...</msg>
<status status="PASS" starttime="20201029 18:14:55.207" endtime="20201029 18:14:55.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.214" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:55.213" endtime="20201029 18:14:55.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.216" level="INFO">VALUE: [0.0006679310000000001, 0.0006673480000000016, 0.0006673750000000013, 0.0006674030000000004, 0.000667402000000001, 0.0006673889999999974, 0.0006673889999999974, 0.0006673749999999978, 0.0006673890000000009, 0.0006673750000000013, 0.0006673890000000009, 0.0006674030000000004, 0.0006673189999999996, 0.0006673890000000009, 0.0006674030000000004, 0.0006673890000000009, 0.0006674030000000004, 0.0006673889999999974, 0.000667402999999997, 0.0006673889999999974, 0.0006673890000000009, 0.0006673609999999983, 0.0006674579999999958, 0.0006673749999999978, 0.0006673889999999974, 0.0006674580000000027, 0.0006673890000000043, 0.0006673890000000043, 0.0006673890000000043, 0.0006673890000000043, 0.0006673890000000043, 0.0006673750000000048, 0.0006673470000000056, 0.0006674030000000039, 0.0006673889999999974, 0.0006673889999999974, 0.000667431000000003, 0.0006673749999999978, 0.0006674450000000026, 0.0006673889999999974, 0.0006673889999999974, 0.0006673889999999974, 0.0006674579999999958, 0.0006673889999999974, 0.0006673889999999974, 0.0006673889999999974, 0.000667402999999997, 0.0006674030000000039, 0.0006673890000000043, 0.0006673890000000043]</msg>
<status status="PASS" starttime="20201029 18:14:55.215" endtime="20201029 18:14:55.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.210" endtime="20201029 18:14:55.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.820" endtime="20201029 18:14:55.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.798" endtime="20201029 18:14:55.218"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:55.221" endtime="20201029 18:14:55.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.219" endtime="20201029 18:14:55.240"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.248" endtime="20201029 18:14:55.294"></status>
</kw>
<msg timestamp="20201029 18:14:55.295" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.247" endtime="20201029 18:14:55.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.297" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.296" endtime="20201029 18:14:55.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.298" endtime="20201029 18:14:55.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.244" endtime="20201029 18:14:55.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.242" endtime="20201029 18:14:55.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.308" endtime="20201029 18:14:55.594"></status>
</kw>
<msg timestamp="20201029 18:14:55.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016564597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017261556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.307" endtime="20201029 18:14:55.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016564597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017261556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.598" endtime="20201029 18:14:55.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.606" endtime="20201029 18:14:55.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.304" endtime="20201029 18:14:55.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.302" endtime="20201029 18:14:55.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:55.612" level="INFO">${PHILIP_RES} = [{'diff': 0.0006969590000000005}, {'diff': 0.0006964300000000014}, {'diff': 0.0006964449999999969}, {'diff': 0.0006963609999999995}, {'diff': 0.0006964170000000013}, {'diff': 0.0006964720000000001}, {...</msg>
<status status="PASS" starttime="20201029 18:14:55.609" endtime="20201029 18:14:55.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:55.616" level="INFO">${RESULT} = {'diff': [0.0006969590000000005, 0.0006964300000000014, 0.0006964449999999969, 0.0006963609999999995, 0.0006964170000000013, 0.0006964720000000001, 0.0006964309999999974, 0.0006964300000000014, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:14:55.613" endtime="20201029 18:14:55.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.621" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:55.620" endtime="20201029 18:14:55.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.623" level="INFO">VALUE: [0.0006969590000000005, 0.0006964300000000014, 0.0006964449999999969, 0.0006963609999999995, 0.0006964170000000013, 0.0006964720000000001, 0.0006964309999999974, 0.0006964300000000014, 0.0006964030000000017, 0.0006964170000000013, 0.0006964450000000004, 0.0006964859999999996, 0.0006964300000000014, 0.0006964169999999978, 0.0006964300000000014, 0.000696459, 0.0006964300000000014, 0.0006964029999999982, 0.0006964019999999987, 0.0006964450000000004, 0.0006964439999999975, 0.0006964449999999969, 0.0006964169999999978, 0.0006964029999999982, 0.000696458000000004, 0.0006964160000000053, 0.0006964309999999974, 0.0006964159999999983, 0.0006964029999999982, 0.0006964439999999975, 0.0006964450000000039, 0.0006964160000000053, 0.0006964310000000043, 0.0006964439999999975, 0.0006964439999999975, 0.0006964029999999982, 0.0006964029999999982, 0.0006964720000000035, 0.0006964300000000048, 0.0006964030000000052, 0.0006964299999999979, 0.0006964309999999974, 0.0006964439999999975, 0.0006964309999999974, 0.0006964159999999983, 0.0006963749999999991, 0.0006964170000000047, 0.0006964029999999982, 0.0006964309999999974, 0.0006964439999999975]</msg>
<status status="PASS" starttime="20201029 18:14:55.622" endtime="20201029 18:14:55.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.617" endtime="20201029 18:14:55.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.241" endtime="20201029 18:14:55.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.219" endtime="20201029 18:14:55.626"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:55.628" endtime="20201029 18:14:55.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.627" endtime="20201029 18:14:55.648"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.656" endtime="20201029 18:14:55.704"></status>
</kw>
<msg timestamp="20201029 18:14:55.704" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.654" endtime="20201029 18:14:55.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.706" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.705" endtime="20201029 18:14:55.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.708" endtime="20201029 18:14:55.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.652" endtime="20201029 18:14:55.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.650" endtime="20201029 18:14:55.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.716" endtime="20201029 18:14:56.016"></status>
</kw>
<msg timestamp="20201029 18:14:56.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016663903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017390528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.715" endtime="20201029 18:14:56.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016663903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017390528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.020" endtime="20201029 18:14:56.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.028" endtime="20201029 18:14:56.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.712" endtime="20201029 18:14:56.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.711" endtime="20201029 18:14:56.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:56.034" level="INFO">${PHILIP_RES} = [{'diff': 0.0007266249999999981}, {'diff': 0.0007260829999999989}, {'diff': 0.0007260829999999989}, {'diff': 0.0007260410000000002}, {'diff': 0.0007260830000000024}, {'diff': 0.0007260829999999989}, {...</msg>
<status status="PASS" starttime="20201029 18:14:56.031" endtime="20201029 18:14:56.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.039" level="INFO">${RESULT} = {'diff': [0.0007266249999999981, 0.0007260829999999989, 0.0007260829999999989, 0.0007260410000000002, 0.0007260830000000024, 0.0007260829999999989, 0.0007261250000000011, 0.0007260700000000023, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:14:56.035" endtime="20201029 18:14:56.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.043" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:56.042" endtime="20201029 18:14:56.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.046" level="INFO">VALUE: [0.0007266249999999981, 0.0007260829999999989, 0.0007260829999999989, 0.0007260410000000002, 0.0007260830000000024, 0.0007260829999999989, 0.0007261250000000011, 0.0007260700000000023, 0.0007261390000000006, 0.0007260839999999984, 0.0007260830000000024, 0.0007260699999999988, 0.0007260970000000019, 0.0007260700000000023, 0.0007260829999999989, 0.0007260840000000018, 0.0007260830000000024, 0.0007260699999999988, 0.0007260830000000024, 0.0007260829999999954, 0.000726096999999995, 0.0007261380000000012, 0.0007260689999999959, 0.0007260829999999954, 0.000726014000000004, 0.0007260970000000019, 0.0007260829999999954, 0.0007260830000000024, 0.0007260840000000018, 0.0007260829999999954, 0.0007259999999999975, 0.0007260830000000024, 0.0007260979999999945, 0.0007260830000000024, 0.0007260560000000027, 0.0007260829999999954, 0.0007260700000000023, 0.0007260970000000019, 0.0007260839999999949, 0.0007260690000000028, 0.0007261390000000006, 0.000726096999999995, 0.0007260700000000023, 0.0007260690000000028, 0.0007260840000000018, 0.0007260970000000019, 0.0007261110000000015, 0.0007260830000000024, 0.0007260689999999959, 0.0007260700000000023]</msg>
<status status="PASS" starttime="20201029 18:14:56.044" endtime="20201029 18:14:56.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.040" endtime="20201029 18:14:56.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.648" endtime="20201029 18:14:56.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.626" endtime="20201029 18:14:56.048"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:56.050" endtime="20201029 18:14:56.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.048" endtime="20201029 18:14:56.070"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.078" endtime="20201029 18:14:56.128"></status>
</kw>
<msg timestamp="20201029 18:14:56.128" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.076" endtime="20201029 18:14:56.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.130" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.129" endtime="20201029 18:14:56.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.132" endtime="20201029 18:14:56.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.074" endtime="20201029 18:14:56.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.072" endtime="20201029 18:14:56.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.141" endtime="20201029 18:14:56.429"></status>
</kw>
<msg timestamp="20201029 18:14:56.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016575528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017332403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.139" endtime="20201029 18:14:56.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016575528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017332403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.433" endtime="20201029 18:14:56.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.441" endtime="20201029 18:14:56.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.136" endtime="20201029 18:14:56.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.135" endtime="20201029 18:14:56.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:56.447" level="INFO">${PHILIP_RES} = [{'diff': 0.0007568750000000006}, {'diff': 0.0007563189999999984}, {'diff': 0.0007563469999999975}, {'diff': 0.0007563480000000004}, {'diff': 0.000756347000000001}, {'diff': 0.0007563610000000005}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:56.444" endtime="20201029 18:14:56.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.451" level="INFO">${RESULT} = {'diff': [0.0007568750000000006, 0.0007563189999999984, 0.0007563469999999975, 0.0007563480000000004, 0.000756347000000001, 0.0007563610000000005, 0.0007563330000000014, 0.0007563469999999975, 0.00075...</msg>
<status status="PASS" starttime="20201029 18:14:56.448" endtime="20201029 18:14:56.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.456" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:56.455" endtime="20201029 18:14:56.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.458" level="INFO">VALUE: [0.0007568750000000006, 0.0007563189999999984, 0.0007563469999999975, 0.0007563480000000004, 0.000756347000000001, 0.0007563610000000005, 0.0007563330000000014, 0.0007563469999999975, 0.0007563339999999974, 0.0007563469999999975, 0.0007563340000000009, 0.0007563750000000001, 0.0007563189999999984, 0.0007563480000000004, 0.0007563329999999979, 0.0007563610000000005, 0.000756347000000001, 0.000756347000000001, 0.000756347999999997, 0.0007563330000000049, 0.000756347999999997, 0.0007563470000000044, 0.0007563329999999979, 0.0007564169999999953, 0.0007563470000000044, 0.0007563339999999974, 0.0007563470000000044, 0.0007563469999999975, 0.0007563890000000031, 0.0007563470000000044, 0.0007563199999999978, 0.0007563470000000044, 0.0007563879999999967, 0.0007563480000000039, 0.0007563469999999975, 0.0007563059999999983, 0.0007563470000000044, 0.0007563749999999966, 0.0007563059999999983, 0.0007563469999999975, 0.000756347999999997, 0.0007563469999999975, 0.0007563609999999971, 0.000756361000000004, 0.0007563329999999979, 0.0007563480000000039, 0.0007563329999999979, 0.0007563609999999971, 0.000756361000000004, 0.0007563469999999975]</msg>
<status status="PASS" starttime="20201029 18:14:56.457" endtime="20201029 18:14:56.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.452" endtime="20201029 18:14:56.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.070" endtime="20201029 18:14:56.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.048" endtime="20201029 18:14:56.460"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:56.462" endtime="20201029 18:14:56.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.461" endtime="20201029 18:14:56.482"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.490" endtime="20201029 18:14:56.540"></status>
</kw>
<msg timestamp="20201029 18:14:56.541" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.488" endtime="20201029 18:14:56.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.543" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.542" endtime="20201029 18:14:56.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.544" endtime="20201029 18:14:56.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.486" endtime="20201029 18:14:56.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.484" endtime="20201029 18:14:56.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.554" endtime="20201029 18:14:56.853"></status>
</kw>
<msg timestamp="20201029 18:14:56.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016493111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017280847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.553" endtime="20201029 18:14:56.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016493111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017280847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.857" endtime="20201029 18:14:56.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.865" endtime="20201029 18:14:56.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.550" endtime="20201029 18:14:56.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.548" endtime="20201029 18:14:56.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:56.871" level="INFO">${PHILIP_RES} = [{'diff': 0.0007877359999999972}, {'diff': 0.0007872220000000006}, {'diff': 0.000787195000000001}, {'diff': 0.0007872230000000001}, {'diff': 0.0007871519999999993}, {'diff': 0.0007872220000000006}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:56.868" endtime="20201029 18:14:56.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.875" level="INFO">${RESULT} = {'diff': [0.0007877359999999972, 0.0007872220000000006, 0.000787195000000001, 0.0007872230000000001, 0.0007871519999999993, 0.0007872220000000006, 0.0007872220000000006, 0.0007871949999999975, 0.00078...</msg>
<status status="PASS" starttime="20201029 18:14:56.872" endtime="20201029 18:14:56.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.879" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:56.878" endtime="20201029 18:14:56.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.882" level="INFO">VALUE: [0.0007877359999999972, 0.0007872220000000006, 0.000787195000000001, 0.0007872230000000001, 0.0007871519999999993, 0.0007872220000000006, 0.0007872220000000006, 0.0007871949999999975, 0.000787208000000001, 0.0007872220000000006, 0.000787195000000001, 0.0007872230000000001, 0.0007871940000000015, 0.0007871800000000019, 0.0007872360000000002, 0.0007872220000000006, 0.000787208000000001, 0.0007872359999999967, 0.0007872219999999971, 0.000787276999999996, 0.000787209000000004, 0.0007872360000000037, 0.0007872360000000037, 0.0007872079999999976, 0.000787208999999997, 0.0007871949999999975, 0.0007872220000000041, 0.0007872220000000041, 0.0007872360000000037, 0.0007872370000000031, 0.0007872780000000024, 0.0007872219999999971, 0.0007872219999999971, 0.0007872359999999967, 0.0007872220000000041, 0.0007872640000000028, 0.0007872360000000037, 0.0007871529999999988, 0.0007871809999999979, 0.0007872219999999971, 0.0007872360000000037, 0.0007872080000000045, 0.0007872230000000036, 0.0007872219999999971, 0.0007872359999999967, 0.0007872219999999971, 0.0007871809999999979, 0.0007872360000000037, 0.0007872080000000045, 0.0007871390000000061]</msg>
<status status="PASS" starttime="20201029 18:14:56.881" endtime="20201029 18:14:56.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.876" endtime="20201029 18:14:56.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.482" endtime="20201029 18:14:56.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.460" endtime="20201029 18:14:56.884"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:56.887" endtime="20201029 18:14:56.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.885" endtime="20201029 18:14:56.907"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.914" endtime="20201029 18:14:56.967"></status>
</kw>
<msg timestamp="20201029 18:14:56.968" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.913" endtime="20201029 18:14:56.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.970" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.969" endtime="20201029 18:14:56.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.971" endtime="20201029 18:14:56.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.910" endtime="20201029 18:14:56.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.909" endtime="20201029 18:14:56.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.980" endtime="20201029 18:14:57.266"></status>
</kw>
<msg timestamp="20201029 18:14:57.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016509, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017328222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:56.978" endtime="20201029 18:14:57.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016509, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017328222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:57.270" endtime="20201029 18:14:57.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.278" endtime="20201029 18:14:57.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.976" endtime="20201029 18:14:57.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.974" endtime="20201029 18:14:57.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:57.284" level="INFO">${PHILIP_RES} = [{'diff': 0.0008192220000000014}, {'diff': 0.0008187360000000005}, {'diff': 0.0008187220000000009}, {'diff': 0.0008187220000000009}, {'diff': 0.0008186940000000018}, {'diff': 0.0008187080000000013}, {...</msg>
<status status="PASS" starttime="20201029 18:14:57.281" endtime="20201029 18:14:57.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:57.289" level="INFO">${RESULT} = {'diff': [0.0008192220000000014, 0.0008187360000000005, 0.0008187220000000009, 0.0008187220000000009, 0.0008186940000000018, 0.0008187080000000013, 0.0008186950000000012, 0.0008187220000000009, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:14:57.285" endtime="20201029 18:14:57.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.293" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:57.292" endtime="20201029 18:14:57.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.295" level="INFO">VALUE: [0.0008192220000000014, 0.0008187360000000005, 0.0008187220000000009, 0.0008187220000000009, 0.0008186940000000018, 0.0008187080000000013, 0.0008186950000000012, 0.0008187220000000009, 0.0008186950000000012, 0.0008187090000000008, 0.0008186950000000012, 0.0008187089999999973, 0.0008187089999999973, 0.0008187079999999979, 0.0008187089999999973, 0.0008187219999999974, 0.0008187219999999974, 0.0008187360000000005, 0.0008187080000000013, 0.0008187220000000009, 0.0008186940000000018, 0.0008187639999999996, 0.0008187220000000009, 0.0008187220000000009, 0.0008187080000000013, 0.0008187079999999944, 0.0008187220000000009, 0.0008187079999999944, 0.0008187220000000009, 0.0008187089999999939, 0.0008187090000000008, 0.0008186809999999947, 0.0008186810000000017, 0.0008187080000000013, 0.0008186950000000012, 0.0008186529999999956, 0.0008186940000000018, 0.0008187220000000009, 0.00081875, 0.0008187220000000009, 0.00081875, 0.0008186940000000018, 0.0008187080000000013, 0.0008186660000000026, 0.0008187220000000009, 0.0008186940000000018, 0.0008187220000000009, 0.0008187090000000008, 0.0008187360000000005, 0.0008186950000000012]</msg>
<status status="PASS" starttime="20201029 18:14:57.294" endtime="20201029 18:14:57.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.289" endtime="20201029 18:14:57.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.907" endtime="20201029 18:14:57.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.885" endtime="20201029 18:14:57.297"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:57.299" endtime="20201029 18:14:57.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.298" endtime="20201029 18:14:57.319"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.327" endtime="20201029 18:14:57.383"></status>
</kw>
<msg timestamp="20201029 18:14:57.384" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.326" endtime="20201029 18:14:57.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.389" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.386" endtime="20201029 18:14:57.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.391" endtime="20201029 18:14:57.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.323" endtime="20201029 18:14:57.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.321" endtime="20201029 18:14:57.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.410" endtime="20201029 18:14:57.698"></status>
</kw>
<msg timestamp="20201029 18:14:57.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016562194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017413556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.407" endtime="20201029 18:14:57.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016562194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017413556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.702" endtime="20201029 18:14:57.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.710" endtime="20201029 18:14:57.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.401" endtime="20201029 18:14:57.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.398" endtime="20201029 18:14:57.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:57.716" level="INFO">${PHILIP_RES} = [{'diff': 0.0008513620000000013}, {'diff': 0.0008508190000000027}, {'diff': 0.0008508060000000026}, {'diff': 0.0008507360000000012}, {'diff': 0.0008508190000000027}, {'diff': 0.0008508480000000013}, {...</msg>
<status status="PASS" starttime="20201029 18:14:57.713" endtime="20201029 18:14:57.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:57.720" level="INFO">${RESULT} = {'diff': [0.0008513620000000013, 0.0008508190000000027, 0.0008508060000000026, 0.0008507360000000012, 0.0008508190000000027, 0.0008508480000000013, 0.0008508189999999992, 0.000850778, 0.00085080499999...</msg>
<status status="PASS" starttime="20201029 18:14:57.717" endtime="20201029 18:14:57.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.724" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:57.723" endtime="20201029 18:14:57.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.726" level="INFO">VALUE: [0.0008513620000000013, 0.0008508190000000027, 0.0008508060000000026, 0.0008507360000000012, 0.0008508190000000027, 0.0008508480000000013, 0.0008508189999999992, 0.000850778, 0.0008508049999999996, 0.0008508189999999992, 0.0008508480000000013, 0.0008508049999999996, 0.0008508339999999982, 0.0008508469999999983, 0.0008508609999999979, 0.0008508199999999987, 0.0008508049999999996, 0.0008508339999999948, 0.0008508330000000022, 0.0008508199999999952, 0.0008508050000000031, 0.0008508059999999956, 0.0008508060000000026, 0.0008508189999999957, 0.0008508200000000021, 0.0008508189999999957, 0.000850792000000003, 0.0008508049999999961, 0.0008508200000000021, 0.0008508190000000027, 0.0008508330000000022, 0.0008508060000000026, 0.0008508049999999961, 0.000850792000000003, 0.0008508189999999957, 0.0008508200000000021, 0.0008508189999999957, 0.0008507910000000035, 0.0008507779999999965, 0.0008508470000000018, 0.0008508199999999952, 0.0008508330000000022, 0.0008507779999999965, 0.0008508340000000017, 0.0008508469999999949, 0.0008508200000000021, 0.0008507639999999969, 0.0008508060000000026, 0.0008508050000000031, 0.0008508190000000027]</msg>
<status status="PASS" starttime="20201029 18:14:57.725" endtime="20201029 18:14:57.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.721" endtime="20201029 18:14:57.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.320" endtime="20201029 18:14:57.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.297" endtime="20201029 18:14:57.728"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:57.731" endtime="20201029 18:14:57.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.729" endtime="20201029 18:14:57.750"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.759" endtime="20201029 18:14:57.814"></status>
</kw>
<msg timestamp="20201029 18:14:57.815" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.757" endtime="20201029 18:14:57.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.817" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.816" endtime="20201029 18:14:57.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.818" endtime="20201029 18:14:57.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.754" endtime="20201029 18:14:57.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.752" endtime="20201029 18:14:57.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.828" endtime="20201029 18:14:58.114"></status>
</kw>
<msg timestamp="20201029 18:14:58.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016721972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017606042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.826" endtime="20201029 18:14:58.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016721972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017606042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.119" endtime="20201029 18:14:58.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.128" endtime="20201029 18:14:58.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.824" endtime="20201029 18:14:58.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.822" endtime="20201029 18:14:58.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:58.134" level="INFO">${PHILIP_RES} = [{'diff': 0.0008840699999999972}, {'diff': 0.0008834729999999992}, {'diff': 0.0008835410000000016}, {'diff': 0.0008835269999999985}, {'diff': 0.0008835550000000011}, {'diff': 0.000883527999999998}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:58.131" endtime="20201029 18:14:58.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:58.138" level="INFO">${RESULT} = {'diff': [0.0008840699999999972, 0.0008834729999999992, 0.0008835410000000016, 0.0008835269999999985, 0.0008835550000000011, 0.000883527999999998, 0.0008835280000000015, 0.0008835280000000015, 0.00088...</msg>
<status status="PASS" starttime="20201029 18:14:58.135" endtime="20201029 18:14:58.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.142" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:58.141" endtime="20201029 18:14:58.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.145" level="INFO">VALUE: [0.0008840699999999972, 0.0008834729999999992, 0.0008835410000000016, 0.0008835269999999985, 0.0008835550000000011, 0.000883527999999998, 0.0008835280000000015, 0.0008835280000000015, 0.0008835139999999984, 0.0008835139999999984, 0.0008835140000000019, 0.000883527999999998, 0.0008835280000000015, 0.000883527000000002, 0.0008834859999999993, 0.0008835280000000015, 0.000883542000000001, 0.0008835280000000015, 0.0008834719999999963, 0.0008835280000000015, 0.0008835140000000019, 0.000883542000000001, 0.0008835410000000016, 0.0008834860000000028, 0.0008835279999999945, 0.0008835140000000019, 0.000883542000000001, 0.0008835560000000006, 0.0008835280000000015, 0.0008835280000000015, 0.0008835279999999945, 0.0008835280000000015, 0.0008835280000000015, 0.000883527000000002, 0.0008835410000000016, 0.0008835279999999945, 0.0008835419999999941, 0.0008835280000000015, 0.000883542000000001, 0.0008835140000000019, 0.0008835000000000023, 0.0008835969999999999, 0.0008835269999999951, 0.0008835130000000024, 0.0008835140000000019, 0.0008835140000000019, 0.0008835280000000015, 0.0008835279999999945, 0.000883513999999995, 0.0008835279999999945]</msg>
<status status="PASS" starttime="20201029 18:14:58.143" endtime="20201029 18:14:58.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.139" endtime="20201029 18:14:58.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.751" endtime="20201029 18:14:58.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.729" endtime="20201029 18:14:58.147"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:58.150" endtime="20201029 18:14:58.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.148" endtime="20201029 18:14:58.170"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.182" endtime="20201029 18:14:58.242"></status>
</kw>
<msg timestamp="20201029 18:14:58.243" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.178" endtime="20201029 18:14:58.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.248" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.246" endtime="20201029 18:14:58.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.251" endtime="20201029 18:14:58.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.174" endtime="20201029 18:14:58.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.172" endtime="20201029 18:14:58.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.269" endtime="20201029 18:14:58.570"></status>
</kw>
<msg timestamp="20201029 18:14:58.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023473347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.266" endtime="20201029 18:14:58.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023473347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.574" endtime="20201029 18:14:58.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.582" endtime="20201029 18:14:58.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.261" endtime="20201029 18:14:58.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.257" endtime="20201029 18:14:58.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:58.588" level="INFO">${PHILIP_RES} = [{'diff': 0.0009174029999999972}, {'diff': 0.0009168469999999984}, {'diff': 0.000916875000000001}, {'diff': 0.0009168610000000015}, {'diff': 0.000916875000000001}, {'diff': 0.0009168610000000015}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:58.585" endtime="20201029 18:14:58.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:58.593" level="INFO">${RESULT} = {'diff': [0.0009174029999999972, 0.0009168469999999984, 0.000916875000000001, 0.0009168610000000015, 0.000916875000000001, 0.0009168610000000015, 0.000916875000000001, 0.0009169160000000003, 0.0009168...</msg>
<status status="PASS" starttime="20201029 18:14:58.589" endtime="20201029 18:14:58.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.597" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:58.596" endtime="20201029 18:14:58.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.599" level="INFO">VALUE: [0.0009174029999999972, 0.0009168469999999984, 0.000916875000000001, 0.0009168610000000015, 0.000916875000000001, 0.0009168610000000015, 0.000916875000000001, 0.0009169160000000003, 0.0009168049999999962, 0.0009168479999999979, 0.0009168610000000049, 0.0009168889999999971, 0.0009168610000000049, 0.0009168199999999987, 0.0009168610000000049, 0.000916860999999998, 0.0009168469999999984, 0.0009168469999999984, 0.000916860999999998, 0.0009167910000000001, 0.0009168469999999984, 0.000916860999999998, 0.0009168749999999976, 0.0009168750000000045, 0.0009168889999999971, 0.0009169450000000023, 0.0009169440000000029, 0.0009168610000000049, 0.0009168619999999975, 0.0009168749999999976, 0.0009168619999999975, 0.0009168889999999971, 0.0009168890000000041, 0.0009168059999999992, 0.0009168189999999993, 0.000916860999999998, 0.0009168610000000049, 0.000916860999999998, 0.0009168890000000041, 0.000916860999999998, 0.0009168189999999993, 0.0009168749999999976, 0.0009168610000000049, 0.000916860999999991, 0.0009168469999999984, 0.0009168060000000061, 0.0009168749999999976, 0.0009168620000000044, 0.0009168470000000123, 0.0009168620000000044]</msg>
<status status="PASS" starttime="20201029 18:14:58.598" endtime="20201029 18:14:58.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.594" endtime="20201029 18:14:58.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.170" endtime="20201029 18:14:58.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.148" endtime="20201029 18:14:58.667"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:58.669" endtime="20201029 18:14:58.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.668" endtime="20201029 18:14:58.689"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.697" endtime="20201029 18:14:58.756"></status>
</kw>
<msg timestamp="20201029 18:14:58.757" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.695" endtime="20201029 18:14:58.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.759" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.758" endtime="20201029 18:14:58.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.760" endtime="20201029 18:14:58.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.693" endtime="20201029 18:14:58.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.691" endtime="20201029 18:14:58.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.769" endtime="20201029 18:14:59.056"></status>
</kw>
<msg timestamp="20201029 18:14:59.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016641361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017592681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.767" endtime="20201029 18:14:59.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016641361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017592681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.060" endtime="20201029 18:14:59.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.068" endtime="20201029 18:14:59.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.765" endtime="20201029 18:14:59.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.763" endtime="20201029 18:14:59.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:59.074" level="INFO">${PHILIP_RES} = [{'diff': 0.0009513199999999986}, {'diff': 0.0009507920000000024}, {'diff': 0.0009507920000000024}, {'diff': 0.0009507919999999989}, {'diff': 0.0009508189999999986}, {'diff': 0.0009507909999999994}, {...</msg>
<status status="PASS" starttime="20201029 18:14:59.071" endtime="20201029 18:14:59.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:59.078" level="INFO">${RESULT} = {'diff': [0.0009513199999999986, 0.0009507920000000024, 0.0009507920000000024, 0.0009507919999999989, 0.0009508189999999986, 0.0009507909999999994, 0.0009507910000000029, 0.0009508059999999985, 0.0009...</msg>
<status status="PASS" starttime="20201029 18:14:59.075" endtime="20201029 18:14:59.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.083" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:59.081" endtime="20201029 18:14:59.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.088" level="INFO">VALUE: [0.0009513199999999986, 0.0009507920000000024, 0.0009507920000000024, 0.0009507919999999989, 0.0009508189999999986, 0.0009507909999999994, 0.0009507910000000029, 0.0009508059999999985, 0.0009507919999999989, 0.0009507219999999976, 0.000950806000000002, 0.0009508189999999986, 0.000950804999999999, 0.0009508189999999986, 0.0009507920000000024, 0.0009508329999999982, 0.0009508059999999985, 0.0009507360000000006, 0.000950804999999999, 0.0009507909999999994, 0.0009507770000000068, 0.0009507919999999989, 0.0009507919999999989, 0.0009508190000000055, 0.0009508059999999985, 0.000950805000000006, 0.000950804999999999, 0.0009507779999999993, 0.0009508059999999985, 0.0009508059999999985, 0.0009507779999999993, 0.0009508059999999985, 0.0009508189999999986, 0.000950804999999999, 0.0009507919999999989, 0.0009507779999999993, 0.0009507919999999989, 0.0009508059999999985, 0.0009508190000000055, 0.0009507909999999994, 0.0009507630000000003, 0.0009508890000000034, 0.0009508059999999985, 0.0009507920000000059, 0.0009508199999999981, 0.0009508049999999921, 0.000950804999999999, 0.000950804999999999, 0.0009508059999999985, 0.0009507500000000002]</msg>
<status status="PASS" starttime="20201029 18:14:59.085" endtime="20201029 18:14:59.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.079" endtime="20201029 18:14:59.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.689" endtime="20201029 18:14:59.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.667" endtime="20201029 18:14:59.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.688" endtime="20201029 18:14:59.092"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:35.512" endtime="20201029 18:14:59.093" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:12.440" endtime="20201029 18:14:59.112"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.223" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:59.232" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:15:00.232" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:59.222" endtime="20201029 18:15:00.233"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.236" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 18:15:00.234" endtime="20201029 18:15:01.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.221" endtime="20201029 18:15:01.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.243" endtime="20201029 18:15:01.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.240" endtime="20201029 18:15:01.491"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.504" endtime="20201029 18:15:01.524"></status>
</kw>
<msg timestamp="20201029 18:15:01.524" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.502" endtime="20201029 18:15:01.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.527" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.525" endtime="20201029 18:15:01.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.530" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:01.528" endtime="20201029 18:15:01.530"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.500" endtime="20201029 18:15:01.531"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.498" endtime="20201029 18:15:01.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.496" endtime="20201029 18:15:01.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:01.536" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:01.536" endtime="20201029 18:15:01.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.532" endtime="20201029 18:15:01.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.496" endtime="20201029 18:15:01.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.495" endtime="20201029 18:15:01.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.538" endtime="20201029 18:15:01.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.494" endtime="20201029 18:15:01.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.541" endtime="20201029 18:15:01.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.492" endtime="20201029 18:15:01.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.220" endtime="20201029 18:15:01.543"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.549" endtime="20201029 18:15:01.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.547" endtime="20201029 18:15:01.569"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.582" endtime="20201029 18:15:01.600"></status>
</kw>
<msg timestamp="20201029 18:15:01.601" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.580" endtime="20201029 18:15:01.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.603" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.602" endtime="20201029 18:15:01.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.606" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:01.604" endtime="20201029 18:15:01.607"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.578" endtime="20201029 18:15:01.607"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.576" endtime="20201029 18:15:01.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.574" endtime="20201029 18:15:01.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:01.612" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:01.611" endtime="20201029 18:15:01.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.609" endtime="20201029 18:15:01.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.574" endtime="20201029 18:15:01.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.573" endtime="20201029 18:15:01.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.614" endtime="20201029 18:15:01.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.572" endtime="20201029 18:15:01.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.569" endtime="20201029 18:15:01.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.546" endtime="20201029 18:15:01.616"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.627" endtime="20201029 18:15:01.645"></status>
</kw>
<msg timestamp="20201029 18:15:01.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.625" endtime="20201029 18:15:01.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.646" endtime="20201029 18:15:01.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.649" endtime="20201029 18:15:01.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.622" endtime="20201029 18:15:01.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.619" endtime="20201029 18:15:01.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.658" endtime="20201029 18:15:01.951"></status>
</kw>
<msg timestamp="20201029 18:15:01.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068532403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068556944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.656" endtime="20201029 18:15:01.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068532403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068556944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.957" endtime="20201029 18:15:01.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.967" endtime="20201029 18:15:01.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.654" endtime="20201029 18:15:01.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.652" endtime="20201029 18:15:01.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:01.976" level="INFO">${RESULT} = [{'diff': 2.4540999999989044e-05}, {'diff': 3.7090000000045142e-06}, {'diff': 2.7079999999901627e-06}, {'diff': 3.2079999999906628e-06}, {'diff': 3.2079999999906628e-06}, {'diff': 3.1940000000119095e-...</msg>
<status status="PASS" starttime="20201029 18:15:01.971" endtime="20201029 18:15:01.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:01.981" level="INFO">${ACCURACY} = {'diff': [2.4540999999989044e-05, 3.7090000000045142e-06, 2.7079999999901627e-06, 3.2079999999906628e-06, 3.2079999999906628e-06, 3.1940000000119095e-06, 2.6939999999975317e-06, 2.723000000010023e-06,...</msg>
<status status="PASS" starttime="20201029 18:15:01.977" endtime="20201029 18:15:01.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.988" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:15:01.986" endtime="20201029 18:15:01.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.990" level="INFO">VALUE: [2.4540999999989044e-05, 3.7090000000045142e-06, 2.7079999999901627e-06, 3.2079999999906628e-06, 3.2079999999906628e-06, 3.1940000000119095e-06, 2.6939999999975317e-06, 2.723000000010023e-06, 2.722999999996145e-06, 2.6940000000114095e-06, 3.1949999999975054e-06, 3.1939999999980317e-06, 3.1939999999980317e-06, 2.7080000000040405e-06, 3.2089999999901364e-06, 2.7080000000040405e-06, 2.6939999999975317e-06, 3.2219999999971716e-06, 2.6669999999978655e-06, 3.26400000000282e-06, 2.7079999999901627e-06, 3.2219999999971716e-06, 2.6389999999987257e-06, 2.709000000003514e-06, 3.2079999999906628e-06, 3.7219999999976716e-06, 3.165999999998892e-06, 3.209000000004014e-06, 2.7079999999901627e-06, 2.7079999999901627e-06, 2.723000000010023e-06, 3.2080000000045406e-06, 3.1939999999980317e-06, 3.7090000000045142e-06, 2.7080000000040405e-06, 2.709000000003514e-06, 3.2080000000045406e-06, 3.2079999999906628e-06, 3.2080000000045406e-06, 3.2079999999906628e-06, 2.7089999999896364e-06, 3.209000000004014e-06, 3.26400000000282e-06, 3.209000000004014e-06, 2.7769999999954775e-06, 2.709000000003514e-06, 3.2220000000110494e-06, 3.195000000011383e-06, 2.7080000000040405e-06, 2.7080000000040405e-06]</msg>
<status status="PASS" starttime="20201029 18:15:01.989" endtime="20201029 18:15:01.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.982" endtime="20201029 18:15:01.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.995" endtime="20201029 18:15:02.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.993" endtime="20201029 18:15:02.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.992" endtime="20201029 18:15:02.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.618" endtime="20201029 18:15:02.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.617" endtime="20201029 18:15:02.016"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.025" endtime="20201029 18:15:02.041"></status>
</kw>
<msg timestamp="20201029 18:15:02.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.023" endtime="20201029 18:15:02.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.043" endtime="20201029 18:15:02.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.046" endtime="20201029 18:15:02.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.020" endtime="20201029 18:15:02.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.018" endtime="20201029 18:15:02.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.055" endtime="20201029 18:15:02.345"></status>
</kw>
<msg timestamp="20201029 18:15:02.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019557222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019560931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.053" endtime="20201029 18:15:02.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019557222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019560931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.349" endtime="20201029 18:15:02.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.357" endtime="20201029 18:15:02.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.050" endtime="20201029 18:15:02.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.049" endtime="20201029 18:15:02.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.363" level="INFO">${RESULT} = [{'diff': 3.709000000001045e-06}, {'diff': 3.6940000000020012e-06}, {'diff': 4.193999999999032e-06}, {'diff': 3.7089999999975753e-06}, {'diff': 4.263999999996881e-06}, {'diff': 4.179999999999462e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:02.360" endtime="20201029 18:15:02.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:02.369" level="INFO">${ACCURACY} = {'diff': [3.709000000001045e-06, 3.6940000000020012e-06, 4.193999999999032e-06, 3.7089999999975753e-06, 4.263999999996881e-06, 4.179999999999462e-06, 4.195000000001975e-06, 4.208999999998075e-06, 4.20...</msg>
<status status="PASS" starttime="20201029 18:15:02.364" endtime="20201029 18:15:02.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.373" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:15:02.372" endtime="20201029 18:15:02.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.375" level="INFO">VALUE: [3.709000000001045e-06, 3.6940000000020012e-06, 4.193999999999032e-06, 3.7089999999975753e-06, 4.263999999996881e-06, 4.179999999999462e-06, 4.195000000001975e-06, 4.208999999998075e-06, 4.208999999998075e-06, 4.195000000001975e-06, 4.222000000001641e-06, 3.722000000001141e-06, 3.709000000001045e-06, 3.709000000001045e-06, 4.180000000002931e-06, 4.1949999999985055e-06, 4.209000000001545e-06, 3.736000000000711e-06, 4.209000000001545e-06, 3.708000000001571e-06, 4.708000000002571e-06, 4.208000000002071e-06, 4.708000000002571e-06, 4.222999999997645e-06, 4.208000000002071e-06, 3.708000000001571e-06, 3.722000000001141e-06, 3.667000000002335e-06, 4.264000000000351e-06, 3.693999999998532e-06, 3.7219999999976716e-06, 4.236000000001211e-06, 4.736000000001711e-06, 4.193999999999032e-06, 3.709000000001045e-06, 3.693999999998532e-06, 4.139000000000226e-06, 3.736000000000711e-06, 3.679999999998962e-06, 4.207999999998602e-06, 3.708000000001571e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.166999999999366e-06, 3.708000000001571e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.1809999999989356e-06, 3.7359999999972415e-06]</msg>
<status status="PASS" starttime="20201029 18:15:02.374" endtime="20201029 18:15:02.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.369" endtime="20201029 18:15:02.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:02.380" endtime="20201029 18:15:02.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.378" endtime="20201029 18:15:02.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.377" endtime="20201029 18:15:02.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.017" endtime="20201029 18:15:02.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.016" endtime="20201029 18:15:02.400"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.409" endtime="20201029 18:15:02.427"></status>
</kw>
<msg timestamp="20201029 18:15:02.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.407" endtime="20201029 18:15:02.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.428" endtime="20201029 18:15:02.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.431" endtime="20201029 18:15:02.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.405" endtime="20201029 18:15:02.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.403" endtime="20201029 18:15:02.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.440" endtime="20201029 18:15:02.724"></status>
</kw>
<msg timestamp="20201029 18:15:02.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019198556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019203222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.438" endtime="20201029 18:15:02.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019198556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019203222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.728" endtime="20201029 18:15:02.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.737" endtime="20201029 18:15:02.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.436" endtime="20201029 18:15:02.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.434" endtime="20201029 18:15:02.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.743" level="INFO">${RESULT} = [{'diff': 4.666000000000392e-06}, {'diff': 4.707999999999102e-06}, {'diff': 5.277999999997451e-06}, {'diff': 4.721999999998672e-06}, {'diff': 5.207999999999602e-06}, {'diff': 4.721999999998672e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:02.740" endtime="20201029 18:15:02.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:02.747" level="INFO">${ACCURACY} = {'diff': [4.666000000000392e-06, 4.707999999999102e-06, 5.277999999997451e-06, 4.721999999998672e-06, 5.207999999999602e-06, 4.721999999998672e-06, 5.221999999999172e-06, 4.693999999999532e-06, 4.7079...</msg>
<status status="PASS" starttime="20201029 18:15:02.744" endtime="20201029 18:15:02.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.752" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:15:02.751" endtime="20201029 18:15:02.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.754" level="INFO">VALUE: [4.666000000000392e-06, 4.707999999999102e-06, 5.277999999997451e-06, 4.721999999998672e-06, 5.207999999999602e-06, 4.721999999998672e-06, 5.221999999999172e-06, 4.693999999999532e-06, 4.707999999999102e-06, 4.679999999999962e-06, 5.208000000003071e-06, 4.693999999999532e-06, 5.277999999997451e-06, 5.207999999999602e-06, 4.721999999998672e-06, 5.207999999999602e-06, 5.207999999999602e-06, 4.707999999999102e-06, 5.221999999999172e-06, 5.236000000002211e-06, 4.707999999999102e-06, 5.2089999999990755e-06, 5.708000000000102e-06, 4.707999999999102e-06, 5.2639999999978815e-06, 4.708000000002571e-06, 4.723000000001615e-06, 5.222000000002641e-06, 5.221999999999172e-06, 5.222000000002641e-06, 5.292000000000491e-06, 5.2089999999990755e-06, 5.208000000003071e-06, 4.791999999999991e-06, 5.721999999999672e-06, 5.2639999999978815e-06, 5.235999999998742e-06, 5.2089999999990755e-06, 5.721999999999672e-06, 4.7089999999985754e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.222000000002641e-06, 4.722999999998145e-06, 4.7089999999985754e-06, 5.262999999998408e-06, 5.208000000003071e-06, 4.707999999999102e-06, 4.7089999999985754e-06, 4.723000000001615e-06]</msg>
<status status="PASS" starttime="20201029 18:15:02.753" endtime="20201029 18:15:02.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.748" endtime="20201029 18:15:02.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:02.758" endtime="20201029 18:15:02.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.757" endtime="20201029 18:15:02.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.756" endtime="20201029 18:15:02.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.401" endtime="20201029 18:15:02.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.401" endtime="20201029 18:15:02.779"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.788" endtime="20201029 18:15:02.806"></status>
</kw>
<msg timestamp="20201029 18:15:02.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.786" endtime="20201029 18:15:02.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.809" endtime="20201029 18:15:02.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.813" endtime="20201029 18:15:02.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.783" endtime="20201029 18:15:02.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.781" endtime="20201029 18:15:02.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.827" endtime="20201029 18:15:03.114"></status>
</kw>
<msg timestamp="20201029 18:15:03.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.824" endtime="20201029 18:15:03.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.120" endtime="20201029 18:15:03.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.132" endtime="20201029 18:15:03.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.820" endtime="20201029 18:15:03.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.817" endtime="20201029 18:15:03.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.139" level="INFO">${RESULT} = [{'diff': 5.708000000000102e-06}, {'diff': 5.708000000000102e-06}, {'diff': 5.7089999999995755e-06}, {'diff': 5.723000000002615e-06}, {'diff': 5.680000000000962e-06}, {'diff': 5.708000000000102e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:03.136" endtime="20201029 18:15:03.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:03.143" level="INFO">${ACCURACY} = {'diff': [5.708000000000102e-06, 5.708000000000102e-06, 5.7089999999995755e-06, 5.723000000002615e-06, 5.680000000000962e-06, 5.708000000000102e-06, 5.749999999998812e-06, 5.667000000000866e-06, 5.722...</msg>
<status status="PASS" starttime="20201029 18:15:03.140" endtime="20201029 18:15:03.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.148" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:15:03.147" endtime="20201029 18:15:03.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.150" level="INFO">VALUE: [5.708000000000102e-06, 5.708000000000102e-06, 5.7089999999995755e-06, 5.723000000002615e-06, 5.680000000000962e-06, 5.708000000000102e-06, 5.749999999998812e-06, 5.667000000000866e-06, 5.7229999999991454e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.208000000000602e-06, 5.708000000000102e-06, 6.735999999996772e-06, 6.2090000000000756e-06, 5.7089999999995755e-06, 6.235999999999742e-06, 5.721999999999672e-06, 5.6939999999970625e-06, 6.222000000000172e-06, 5.7229999999991454e-06, 6.208000000000602e-06, 6.195000000000506e-06, 5.708000000000102e-06, 5.680000000000962e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.222000000000172e-06, 5.695000000000006e-06, 5.694000000000532e-06, 6.194000000001032e-06, 5.721999999999672e-06, 5.680000000000962e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.222000000000172e-06, 5.721999999999672e-06, 6.2079999999971325e-06, 5.695000000000006e-06, 6.2229999999996455e-06, 5.7229999999991454e-06, 5.666000000001392e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 5.708000000000102e-06, 6.2090000000000756e-06, 5.708000000000102e-06]</msg>
<status status="PASS" starttime="20201029 18:15:03.149" endtime="20201029 18:15:03.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.144" endtime="20201029 18:15:03.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:03.156" endtime="20201029 18:15:03.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.154" endtime="20201029 18:15:03.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.153" endtime="20201029 18:15:03.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.780" endtime="20201029 18:15:03.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.779" endtime="20201029 18:15:03.176"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.185" endtime="20201029 18:15:03.203"></status>
</kw>
<msg timestamp="20201029 18:15:03.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.183" endtime="20201029 18:15:03.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.205" endtime="20201029 18:15:03.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.207" endtime="20201029 18:15:03.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.181" endtime="20201029 18:15:03.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.179" endtime="20201029 18:15:03.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.216" endtime="20201029 18:15:03.501"></status>
</kw>
<msg timestamp="20201029 18:15:03.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019824556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.215" endtime="20201029 18:15:03.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019824556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.505" endtime="20201029 18:15:03.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.513" endtime="20201029 18:15:03.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.212" endtime="20201029 18:15:03.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.211" endtime="20201029 18:15:03.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.520" level="INFO">${RESULT} = [{'diff': 6.708000000001102e-06}, {'diff': 6.693999999998063e-06}, {'diff': 7.208000000001602e-06}, {'diff': 6.7779999999989515e-06}, {'diff': 7.195000000001506e-06}, {'diff': 7.208000000001602e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:03.516" endtime="20201029 18:15:03.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:03.524" level="INFO">${ACCURACY} = {'diff': [6.708000000001102e-06, 6.693999999998063e-06, 7.208000000001602e-06, 6.7779999999989515e-06, 7.195000000001506e-06, 7.208000000001602e-06, 6.695000000001006e-06, 7.208000000001602e-06, 6.694...</msg>
<status status="PASS" starttime="20201029 18:15:03.520" endtime="20201029 18:15:03.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.529" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:15:03.528" endtime="20201029 18:15:03.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.531" level="INFO">VALUE: [6.708000000001102e-06, 6.693999999998063e-06, 7.208000000001602e-06, 6.7779999999989515e-06, 7.195000000001506e-06, 7.208000000001602e-06, 6.695000000001006e-06, 7.208000000001602e-06, 6.694000000001532e-06, 7.2230000000006456e-06, 7.749999999997342e-06, 7.2219999999977025e-06, 7.222000000001172e-06, 6.708000000001102e-06, 7.2219999999977025e-06, 7.1529999999993266e-06, 7.276999999999978e-06, 7.693999999999063e-06, 7.1669999999988965e-06, 7.777999999999952e-06, 6.7079999999976325e-06, 6.763999999999382e-06, 7.208000000001602e-06, 7.138999999999757e-06, 7.639000000000257e-06, 7.222000000001172e-06, 7.2230000000006456e-06, 6.7079999999976325e-06, 7.2079999999981326e-06, 7.138999999999757e-06, 7.2219999999977025e-06, 7.2230000000006456e-06, 7.2230000000006456e-06, 6.694000000001532e-06, 7.2219999999977025e-06, 7.639000000000257e-06, 6.709000000000576e-06, 7.209000000001076e-06, 7.222000000001172e-06, 7.736000000001242e-06, 6.736000000000242e-06, 7.193999999998563e-06, 6.7779999999989515e-06, 7.2219999999977025e-06, 7.694999999998536e-06, 7.193999999998563e-06, 6.694000000001532e-06, 7.708000000002102e-06, 7.2219999999977025e-06, 6.665999999998923e-06]</msg>
<status status="PASS" starttime="20201029 18:15:03.530" endtime="20201029 18:15:03.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.525" endtime="20201029 18:15:03.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:03.536" endtime="20201029 18:15:03.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.534" endtime="20201029 18:15:03.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.533" endtime="20201029 18:15:03.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.177" endtime="20201029 18:15:03.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.177" endtime="20201029 18:15:03.557"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.566" endtime="20201029 18:15:03.584"></status>
</kw>
<msg timestamp="20201029 18:15:03.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.564" endtime="20201029 18:15:03.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.585" endtime="20201029 18:15:03.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.588" endtime="20201029 18:15:03.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.561" endtime="20201029 18:15:03.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.559" endtime="20201029 18:15:03.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.597" endtime="20201029 18:15:03.880"></status>
</kw>
<msg timestamp="20201029 18:15:03.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019805069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019813278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.595" endtime="20201029 18:15:03.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019805069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019813278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.884" endtime="20201029 18:15:03.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.892" endtime="20201029 18:15:03.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.592" endtime="20201029 18:15:03.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.591" endtime="20201029 18:15:03.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.899" level="INFO">${RESULT} = [{'diff': 8.208999999998606e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.235999999998272e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.235999999998272e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:03.895" endtime="20201029 18:15:03.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:03.903" level="INFO">${ACCURACY} = {'diff': [8.208999999998606e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.707999999999633e-06, 8.221999999998703e-06, 8.235999999998272e-06, 7.694999999998536e-06, 7.707999999998633e-06, 8.2219...</msg>
<status status="PASS" starttime="20201029 18:15:03.900" endtime="20201029 18:15:03.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.907" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:15:03.906" endtime="20201029 18:15:03.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.910" level="INFO">VALUE: [8.208999999998606e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.707999999999633e-06, 8.221999999998703e-06, 8.235999999998272e-06, 7.694999999998536e-06, 7.707999999998633e-06, 8.221999999998703e-06, 8.707999999999633e-06, 7.708000000002102e-06, 7.694999999998536e-06, 7.708000000002102e-06, 7.679999999999493e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.263999999997412e-06, 8.680999999999967e-06, 7.707999999998633e-06, 7.721999999998203e-06, 7.709000000001576e-06, 8.235999999998272e-06, 8.208999999998606e-06, 7.736000000001242e-06, 7.721999999998203e-06, 8.208000000002602e-06, 8.223000000001646e-06, 7.679999999999493e-06, 7.707999999998633e-06, 8.208000000002602e-06, 7.694999999998536e-06, 8.207999999999133e-06, 7.708000000002102e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.708000000002102e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.209000000002076e-06, 7.707999999998633e-06, 8.221999999998703e-06, 8.209000000002076e-06, 7.693999999999063e-06, 7.777999999999952e-06, 8.278000000000452e-06, 8.207999999999133e-06, 7.708000000002102e-06, 8.222000000002172e-06, 8.222000000002172e-06, 7.750000000000812e-06]</msg>
<status status="PASS" starttime="20201029 18:15:03.908" endtime="20201029 18:15:03.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.904" endtime="20201029 18:15:03.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:03.914" endtime="20201029 18:15:03.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.913" endtime="20201029 18:15:05.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.911" endtime="20201029 18:15:05.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.557" endtime="20201029 18:15:05.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.557" endtime="20201029 18:15:05.033"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.052" endtime="20201029 18:15:05.077"></status>
</kw>
<msg timestamp="20201029 18:15:05.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.049" endtime="20201029 18:15:05.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.080" endtime="20201029 18:15:05.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.085" endtime="20201029 18:15:05.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.044" endtime="20201029 18:15:05.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.039" endtime="20201029 18:15:05.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.104" endtime="20201029 18:15:05.405"></status>
</kw>
<msg timestamp="20201029 18:15:05.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.131927861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.131937028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.100" endtime="20201029 18:15:05.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.131927861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.131937028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.409" endtime="20201029 18:15:05.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.418" endtime="20201029 18:15:05.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.095" endtime="20201029 18:15:05.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.091" endtime="20201029 18:15:05.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.424" level="INFO">${RESULT} = [{'diff': 9.16699999997661e-06}, {'diff': 8.680999999954864e-06}, {'diff': 8.707999999968408e-06}, {'diff': 8.707999999968408e-06}, {'diff': 8.72200000001655e-06}, {'diff': 9.708999999968881e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:05.421" endtime="20201029 18:15:05.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:05.428" level="INFO">${ACCURACY} = {'diff': [9.16699999997661e-06, 8.680999999954864e-06, 8.707999999968408e-06, 8.707999999968408e-06, 8.72200000001655e-06, 9.708999999968881e-06, 8.707999999968408e-06, 9.179999999942012e-06, 9.208000...</msg>
<status status="PASS" starttime="20201029 18:15:05.425" endtime="20201029 18:15:05.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.433" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:15:05.432" endtime="20201029 18:15:05.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.435" level="INFO">VALUE: [9.16699999997661e-06, 8.680999999954864e-06, 8.707999999968408e-06, 8.707999999968408e-06, 8.72200000001655e-06, 9.708999999968881e-06, 8.707999999968408e-06, 9.179999999942012e-06, 9.208000000038297e-06, 9.249999999960679e-06, 9.708999999968881e-06, 9.221999999864394e-06, 9.221999999864394e-06, 9.208000000038297e-06, 9.708999999968881e-06, 9.193999999990154e-06, 9.19499999985085e-06, 8.72200000001655e-06, 8.707999999968408e-06, 8.709000000051148e-06, 8.72200000001655e-06, 9.193999999990154e-06, 9.209000000121037e-06, 9.222000000086439e-06, 8.707999999968408e-06, 9.152999999928468e-06, 8.693999999920266e-06, 8.72300000009929e-06, 8.762999999856191e-06, 9.222999999947135e-06, 8.69400000014231e-06, 8.72300000009929e-06, 9.708000000108186e-06, 9.138999999880326e-06, 8.707999999968408e-06, 9.694000000060043e-06, 9.209000000121037e-06, 8.709000000051148e-06, 9.235999999912536e-06, 8.72200000001655e-06, 8.693999999920266e-06, 9.194000000212199e-06, 8.708000000190452e-06, 8.709000000051148e-06, 9.207999999816252e-06, 8.750000000112834e-06, 8.72200000001655e-06, 8.707999999968408e-06, 8.680999999954864e-06, 9.222999999947135e-06]</msg>
<status status="PASS" starttime="20201029 18:15:05.434" endtime="20201029 18:15:05.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.429" endtime="20201029 18:15:05.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:05.441" endtime="20201029 18:15:05.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.440" endtime="20201029 18:15:05.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.438" endtime="20201029 18:15:05.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.035" endtime="20201029 18:15:05.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.034" endtime="20201029 18:15:05.462"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.470" endtime="20201029 18:15:05.488"></status>
</kw>
<msg timestamp="20201029 18:15:05.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.469" endtime="20201029 18:15:05.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.489" endtime="20201029 18:15:05.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.492" endtime="20201029 18:15:05.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.466" endtime="20201029 18:15:05.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.464" endtime="20201029 18:15:05.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.501" endtime="20201029 18:15:05.789"></status>
</kw>
<msg timestamp="20201029 18:15:05.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019466417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019476667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.499" endtime="20201029 18:15:05.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019466417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019476667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.793" endtime="20201029 18:15:05.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.801" endtime="20201029 18:15:05.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.497" endtime="20201029 18:15:05.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.495" endtime="20201029 18:15:05.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.808" level="INFO">${RESULT} = [{'diff': 1.0249999999999843e-05}, {'diff': 1.0209000000000606e-05}, {'diff': 9.708000000000633e-06}, {'diff': 9.708000000000633e-06}, {'diff': 1.0180000000001993e-05}, {'diff': 1.0208000000001133e-05...</msg>
<status status="PASS" starttime="20201029 18:15:05.805" endtime="20201029 18:15:05.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:05.813" level="INFO">${ACCURACY} = {'diff': [1.0249999999999843e-05, 1.0209000000000606e-05, 9.708000000000633e-06, 9.708000000000633e-06, 1.0180000000001993e-05, 1.0208000000001133e-05, 1.0666999999998927e-05, 1.0194000000001563e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:05.809" endtime="20201029 18:15:05.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.818" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:15:05.817" endtime="20201029 18:15:05.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.821" level="INFO">VALUE: [1.0249999999999843e-05, 1.0209000000000606e-05, 9.708000000000633e-06, 9.708000000000633e-06, 1.0180000000001993e-05, 1.0208000000001133e-05, 1.0666999999998927e-05, 1.0194000000001563e-05, 9.708000000000633e-06, 9.709000000000106e-06, 9.708000000000633e-06, 1.0222000000000703e-05, 1.0195000000001037e-05, 9.722000000000203e-06, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0290999999999079e-05, 9.708000000000633e-06, 9.735999999999773e-06, 9.764000000002382e-06, 9.722000000000203e-06, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0221999999997233e-05, 9.722999999999676e-06, 9.722000000000203e-06, 9.722000000000203e-06, 1.0207999999997663e-05, 1.0209000000000606e-05, 9.708000000000633e-06, 1.0277999999998982e-05, 9.708000000000633e-06, 1.0207999999997663e-05, 1.0180999999997997e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0194000000001563e-05, 1.0722000000001203e-05, 9.722000000000203e-06, 1.0708999999997637e-05, 1.0209000000000606e-05, 9.709000000000106e-06, 9.735999999999773e-06, 9.722000000000203e-06, 1.0207999999997663e-05, 9.707999999997163e-06, 1.0249999999999843e-05, 1.0679999999999024e-05, 9.792000000001522e-06]</msg>
<status status="PASS" starttime="20201029 18:15:05.819" endtime="20201029 18:15:05.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.814" endtime="20201029 18:15:05.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:05.826" endtime="20201029 18:15:05.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.824" endtime="20201029 18:15:05.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.823" endtime="20201029 18:15:05.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.463" endtime="20201029 18:15:05.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.462" endtime="20201029 18:15:05.847"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.856" endtime="20201029 18:15:05.873"></status>
</kw>
<msg timestamp="20201029 18:15:05.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.854" endtime="20201029 18:15:05.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.875" endtime="20201029 18:15:05.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.880" endtime="20201029 18:15:05.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.851" endtime="20201029 18:15:05.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.849" endtime="20201029 18:15:05.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.900" endtime="20201029 18:15:06.195"></status>
</kw>
<msg timestamp="20201029 18:15:06.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.897" endtime="20201029 18:15:06.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.199" endtime="20201029 18:15:06.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.208" endtime="20201029 18:15:06.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.891" endtime="20201029 18:15:06.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.887" endtime="20201029 18:15:06.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.215" level="INFO">${RESULT} = [{'diff': 1.1736000000001773e-05}, {'diff': 1.1264000000000413e-05}, {'diff': 1.1208000000002133e-05}, {'diff': 1.1221999999998233e-05}, {'diff': 1.1208000000002133e-05}, {'diff': 1.1222000000001703e-...</msg>
<status status="PASS" starttime="20201029 18:15:06.211" endtime="20201029 18:15:06.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:06.219" level="INFO">${ACCURACY} = {'diff': [1.1736000000001773e-05, 1.1264000000000413e-05, 1.1208000000002133e-05, 1.1221999999998233e-05, 1.1208000000002133e-05, 1.1222000000001703e-05, 1.1209000000001607e-05, 1.1221999999998233e-05...</msg>
<status status="PASS" starttime="20201029 18:15:06.216" endtime="20201029 18:15:06.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.224" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:15:06.222" endtime="20201029 18:15:06.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.226" level="INFO">VALUE: [1.1736000000001773e-05, 1.1264000000000413e-05, 1.1208000000002133e-05, 1.1221999999998233e-05, 1.1208000000002133e-05, 1.1222000000001703e-05, 1.1209000000001607e-05, 1.1221999999998233e-05, 1.0722000000001203e-05, 1.1195000000002037e-05, 1.1221999999998233e-05, 1.1207999999998663e-05, 1.0709000000001107e-05, 1.0694000000002063e-05, 1.0707999999998163e-05, 1.0708000000001633e-05, 1.0722000000001203e-05, 1.0722000000001203e-05, 1.1209000000001607e-05, 1.1237000000000746e-05, 1.1207999999998663e-05, 1.0708000000001633e-05, 1.1222000000001703e-05, 1.1222000000001703e-05, 1.1152999999999857e-05, 1.1222000000001703e-05, 1.0666999999998927e-05, 1.0722000000001203e-05, 1.1222000000001703e-05, 1.1250000000000843e-05, 1.1223000000001176e-05, 1.1193999999999094e-05, 1.0736000000000773e-05, 1.0722000000001203e-05, 1.0721999999997733e-05, 1.1209000000001607e-05, 1.1221999999998233e-05, 1.1207999999998663e-05, 1.1709000000002107e-05, 1.1193999999999094e-05, 1.0721999999997733e-05, 1.0708000000001633e-05, 1.1207999999998663e-05, 1.1221999999998233e-05, 1.1207999999998663e-05, 1.0722000000001203e-05, 1.1721999999998733e-05, 1.0707999999998163e-05, 1.0722000000001203e-05, 1.0708000000001633e-05]</msg>
<status status="PASS" starttime="20201029 18:15:06.225" endtime="20201029 18:15:06.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.220" endtime="20201029 18:15:06.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:06.231" endtime="20201029 18:15:06.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.230" endtime="20201029 18:15:06.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.229" endtime="20201029 18:15:06.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.848" endtime="20201029 18:15:06.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.847" endtime="20201029 18:15:06.252"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.261" endtime="20201029 18:15:06.282"></status>
</kw>
<msg timestamp="20201029 18:15:06.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.259" endtime="20201029 18:15:06.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.284" endtime="20201029 18:15:06.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.287" endtime="20201029 18:15:06.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.257" endtime="20201029 18:15:06.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.255" endtime="20201029 18:15:06.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.296" endtime="20201029 18:15:06.582"></status>
</kw>
<msg timestamp="20201029 18:15:06.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023164, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023176208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:06.294" endtime="20201029 18:15:06.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023164, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023176208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:06.587" endtime="20201029 18:15:06.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.595" endtime="20201029 18:15:06.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.292" endtime="20201029 18:15:06.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.290" endtime="20201029 18:15:06.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.602" level="INFO">${RESULT} = [{'diff': 1.2207999999999664e-05}, {'diff': 1.2194000000000094e-05}, {'diff': 1.2207999999999664e-05}, {'diff': 1.2221999999999233e-05}, {'diff': 1.1721999999998733e-05}, {'diff': 1.2222000000002703e-...</msg>
<status status="PASS" starttime="20201029 18:15:06.599" endtime="20201029 18:15:06.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:06.606" level="INFO">${ACCURACY} = {'diff': [1.2207999999999664e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.1721999999998733e-05, 1.2222000000002703e-05, 1.2207999999999664e-05, 1.2221999999999233e-05...</msg>
<status status="PASS" starttime="20201029 18:15:06.603" endtime="20201029 18:15:06.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.611" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:15:06.610" endtime="20201029 18:15:06.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.613" level="INFO">VALUE: [1.2207999999999664e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.1721999999998733e-05, 1.2222000000002703e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.1707999999999164e-05, 1.2221999999999233e-05, 1.1694000000003063e-05, 1.2695000000000067e-05, 1.2249999999998373e-05, 1.2180000000000524e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.2194000000000094e-05, 1.1709000000002107e-05, 1.2222999999998707e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.2209000000002607e-05, 1.2250000000001843e-05, 1.1721999999998733e-05, 1.2221999999999233e-05, 1.2681000000000497e-05, 1.1721999999998733e-05, 1.1709000000002107e-05, 1.2236000000002273e-05, 1.2292000000000552e-05, 1.2221999999999233e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.2250000000001843e-05, 1.1736000000001773e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1709000000002107e-05, 1.1721999999998733e-05, 1.1680999999999497e-05, 1.1735999999998303e-05, 1.2292000000000552e-05, 1.2208999999999137e-05, 1.2180999999999997e-05, 1.2221999999999233e-05, 1.1680999999999497e-05, 1.2695000000000067e-05]</msg>
<status status="PASS" starttime="20201029 18:15:06.612" endtime="20201029 18:15:06.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.607" endtime="20201029 18:15:06.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:06.619" endtime="20201029 18:15:06.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.618" endtime="20201029 18:15:06.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.617" endtime="20201029 18:15:06.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.253" endtime="20201029 18:15:06.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.252" endtime="20201029 18:15:06.640"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.649" endtime="20201029 18:15:06.666"></status>
</kw>
<msg timestamp="20201029 18:15:06.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.647" endtime="20201029 18:15:06.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.668" endtime="20201029 18:15:06.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.670" endtime="20201029 18:15:06.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.645" endtime="20201029 18:15:06.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.643" endtime="20201029 18:15:06.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.680" endtime="20201029 18:15:06.966"></status>
</kw>
<msg timestamp="20201029 18:15:06.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020170514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.678" endtime="20201029 18:15:06.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020170514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.971" endtime="20201029 18:15:06.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.979" endtime="20201029 18:15:06.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.676" endtime="20201029 18:15:06.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.674" endtime="20201029 18:15:06.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.986" level="INFO">${RESULT} = [{'diff': 1.2694000000000594e-05}, {'diff': 1.3208000000000664e-05}, {'diff': 1.3195000000000567e-05}, {'diff': 1.2694000000000594e-05}, {'diff': 1.3194999999997098e-05}, {'diff': 1.3222000000000234e-...</msg>
<status status="PASS" starttime="20201029 18:15:06.983" endtime="20201029 18:15:06.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:06.991" level="INFO">${ACCURACY} = {'diff': [1.2694000000000594e-05, 1.3208000000000664e-05, 1.3195000000000567e-05, 1.2694000000000594e-05, 1.3194999999997098e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.3222999999999707e-05...</msg>
<status status="PASS" starttime="20201029 18:15:06.987" endtime="20201029 18:15:06.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.996" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:15:06.995" endtime="20201029 18:15:06.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.999" level="INFO">VALUE: [1.2694000000000594e-05, 1.3208000000000664e-05, 1.3195000000000567e-05, 1.2694000000000594e-05, 1.3194999999997098e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.3222999999999707e-05, 1.3222999999999707e-05, 1.3291999999998083e-05, 1.3209000000000137e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.3222000000000234e-05, 1.3222999999999707e-05, 1.3723000000000207e-05, 1.2708999999999637e-05, 1.3208000000000664e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.3694999999997598e-05, 1.2721999999999734e-05, 1.3708000000001164e-05, 1.3222000000000234e-05, 1.2693999999997124e-05, 1.3208000000000664e-05, 1.3722000000000734e-05, 1.3693999999998124e-05, 1.3208000000000664e-05, 1.3209000000000137e-05, 1.2721999999999734e-05, 1.2709000000003107e-05, 1.2722999999999207e-05, 1.3291999999998083e-05, 1.3208000000000664e-05, 1.2695000000000067e-05, 1.2721999999999734e-05, 1.2723000000002677e-05, 1.3235999999999803e-05, 1.2708000000000164e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.2708000000000164e-05, 1.3209000000000137e-05, 1.2721999999999734e-05, 1.3235999999999803e-05, 1.2708000000000164e-05, 1.3209000000000137e-05, 1.2652999999997888e-05]</msg>
<status status="PASS" starttime="20201029 18:15:06.997" endtime="20201029 18:15:06.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.992" endtime="20201029 18:15:07.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.004" endtime="20201029 18:15:07.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.002" endtime="20201029 18:15:07.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.001" endtime="20201029 18:15:07.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.641" endtime="20201029 18:15:07.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.640" endtime="20201029 18:15:07.025"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.034" endtime="20201029 18:15:07.052"></status>
</kw>
<msg timestamp="20201029 18:15:07.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.032" endtime="20201029 18:15:07.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.053" endtime="20201029 18:15:07.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.056" endtime="20201029 18:15:07.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.029" endtime="20201029 18:15:07.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.027" endtime="20201029 18:15:07.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.065" endtime="20201029 18:15:07.352"></status>
</kw>
<msg timestamp="20201029 18:15:07.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020081194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.064" endtime="20201029 18:15:07.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020081194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.357" endtime="20201029 18:15:07.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.366" endtime="20201029 18:15:07.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.061" endtime="20201029 18:15:07.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.059" endtime="20201029 18:15:07.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.373" level="INFO">${RESULT} = [{'diff': 1.4208000000001664e-05}, {'diff': 1.4222000000001234e-05}, {'diff': 1.3736000000000304e-05}, {'diff': 1.3722000000000734e-05}, {'diff': 1.3721999999997264e-05}, {'diff': 1.3721999999997264e-...</msg>
<status status="PASS" starttime="20201029 18:15:07.369" endtime="20201029 18:15:07.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:07.377" level="INFO">${ACCURACY} = {'diff': [1.4208000000001664e-05, 1.4222000000001234e-05, 1.3736000000000304e-05, 1.3722000000000734e-05, 1.3721999999997264e-05, 1.3721999999997264e-05, 1.3763999999999443e-05, 1.3708000000001164e-05...</msg>
<status status="PASS" starttime="20201029 18:15:07.374" endtime="20201029 18:15:07.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.382" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:15:07.381" endtime="20201029 18:15:07.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.384" level="INFO">VALUE: [1.4208000000001664e-05, 1.4222000000001234e-05, 1.3736000000000304e-05, 1.3722000000000734e-05, 1.3721999999997264e-05, 1.3721999999997264e-05, 1.3763999999999443e-05, 1.3708000000001164e-05, 1.3723000000000207e-05, 1.4639000000000318e-05, 1.3736000000000304e-05, 1.4263999999999943e-05, 1.3694000000001594e-05, 1.3709000000000637e-05, 1.4208999999997668e-05, 1.4208000000001664e-05, 1.3708000000001164e-05, 1.3680999999998028e-05, 1.4208000000001664e-05, 1.4250000000000373e-05, 1.4195000000001567e-05, 1.4209000000001137e-05, 1.3708000000001164e-05, 1.4208000000001664e-05, 1.4207999999998194e-05, 1.3708999999997168e-05, 1.4709000000001637e-05, 1.3736999999999777e-05, 1.3708000000001164e-05, 1.4207999999998194e-05, 1.3694000000001594e-05, 1.4250000000000373e-05, 1.4723000000001207e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.4222000000001234e-05, 1.3709000000000637e-05, 1.3708000000001164e-05, 1.4223000000000707e-05, 1.4209000000001137e-05, 1.3722000000000734e-05, 1.4222000000001234e-05, 1.3708000000001164e-05, 1.4194000000002094e-05, 1.4237000000000277e-05, 1.3694999999997598e-05, 1.4207999999998194e-05, 1.4221999999997764e-05, 1.4207999999998194e-05, 1.4208000000001664e-05]</msg>
<status status="PASS" starttime="20201029 18:15:07.383" endtime="20201029 18:15:07.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.378" endtime="20201029 18:15:07.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.389" endtime="20201029 18:15:07.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.388" endtime="20201029 18:15:07.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.387" endtime="20201029 18:15:07.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.025" endtime="20201029 18:15:07.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.025" endtime="20201029 18:15:07.410"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.419" endtime="20201029 18:15:07.438"></status>
</kw>
<msg timestamp="20201029 18:15:07.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.418" endtime="20201029 18:15:07.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.440" endtime="20201029 18:15:07.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.442" endtime="20201029 18:15:07.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.415" endtime="20201029 18:15:07.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.413" endtime="20201029 18:15:07.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.452" endtime="20201029 18:15:07.737"></status>
</kw>
<msg timestamp="20201029 18:15:07.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020939708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:07.450" endtime="20201029 18:15:07.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020939708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:07.741" endtime="20201029 18:15:07.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.750" endtime="20201029 18:15:07.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.447" endtime="20201029 18:15:07.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.446" endtime="20201029 18:15:07.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.756" level="INFO">${RESULT} = [{'diff': 1.4708000000002164e-05}, {'diff': 1.5221999999998764e-05}, {'diff': 1.5709000000002638e-05}, {'diff': 1.4694999999998598e-05}, {'diff': 1.4778000000000013e-05}, {'diff': 1.5223000000001707e-...</msg>
<status status="PASS" starttime="20201029 18:15:07.753" endtime="20201029 18:15:07.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:07.761" level="INFO">${ACCURACY} = {'diff': [1.4708000000002164e-05, 1.5221999999998764e-05, 1.5709000000002638e-05, 1.4694999999998598e-05, 1.4778000000000013e-05, 1.5223000000001707e-05, 1.5236000000001804e-05, 1.5208999999998668e-05...</msg>
<status status="PASS" starttime="20201029 18:15:07.757" endtime="20201029 18:15:07.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.765" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:15:07.764" endtime="20201029 18:15:07.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.768" level="INFO">VALUE: [1.4708000000002164e-05, 1.5221999999998764e-05, 1.5709000000002638e-05, 1.4694999999998598e-05, 1.4778000000000013e-05, 1.5223000000001707e-05, 1.5236000000001804e-05, 1.5208999999998668e-05, 1.5221999999998764e-05, 1.5207999999999194e-05, 1.5193999999999624e-05, 1.4708000000002164e-05, 1.4708000000002164e-05, 1.5193999999999624e-05, 1.5222000000002234e-05, 1.5208999999998668e-05, 1.5207999999999194e-05, 1.4721999999998264e-05, 1.5207999999999194e-05, 1.5208000000002664e-05, 1.5195000000002568e-05, 1.4694999999998598e-05, 1.4723000000001207e-05, 1.5138999999997349e-05, 1.4722000000001734e-05, 1.4708000000002164e-05, 1.5208999999998668e-05, 1.5235999999998334e-05, 1.5193999999999624e-05, 1.4721999999998264e-05, 1.5222000000002234e-05, 1.4708999999998168e-05, 1.5207999999999194e-05, 1.4736000000001304e-05, 1.4722999999997738e-05, 1.4693999999999124e-05, 1.4707999999998694e-05, 1.5194999999999098e-05, 1.5694999999999598e-05, 1.5708999999999168e-05, 1.4679999999999555e-05, 1.5263999999997474e-05, 1.5193999999999624e-05, 1.5209000000002137e-05, 1.4764000000000443e-05, 1.4707999999998694e-05, 1.5194999999999098e-05, 1.4695000000002068e-05, 1.5208000000002664e-05, 1.5195000000002568e-05]</msg>
<status status="PASS" starttime="20201029 18:15:07.766" endtime="20201029 18:15:07.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.761" endtime="20201029 18:15:07.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.774" endtime="20201029 18:15:07.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.772" endtime="20201029 18:15:07.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.771" endtime="20201029 18:15:07.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.411" endtime="20201029 18:15:07.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.411" endtime="20201029 18:15:07.795"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.804" endtime="20201029 18:15:07.821"></status>
</kw>
<msg timestamp="20201029 18:15:07.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.802" endtime="20201029 18:15:07.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.822" endtime="20201029 18:15:07.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.825" endtime="20201029 18:15:07.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.799" endtime="20201029 18:15:07.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.797" endtime="20201029 18:15:07.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.834" endtime="20201029 18:15:08.120"></status>
</kw>
<msg timestamp="20201029 18:15:08.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019963819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.833" endtime="20201029 18:15:08.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019963819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.125" endtime="20201029 18:15:08.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.133" endtime="20201029 18:15:08.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.830" endtime="20201029 18:15:08.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.828" endtime="20201029 18:15:08.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.140" level="INFO">${RESULT} = [{'diff': 1.5694999999999598e-05}, {'diff': 1.5721999999999264e-05}, {'diff': 1.6208000000000194e-05}, {'diff': 1.6208999999999668e-05}, {'diff': 1.5707999999999694e-05}, {'diff': 1.5707999999999694e-...</msg>
<status status="PASS" starttime="20201029 18:15:08.137" endtime="20201029 18:15:08.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:08.145" level="INFO">${ACCURACY} = {'diff': [1.5694999999999598e-05, 1.5721999999999264e-05, 1.6208000000000194e-05, 1.6208999999999668e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.6208000000000194e-05, 1.5707999999999694e-05...</msg>
<status status="PASS" starttime="20201029 18:15:08.141" endtime="20201029 18:15:08.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.150" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:15:08.149" endtime="20201029 18:15:08.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.153" level="INFO">VALUE: [1.5694999999999598e-05, 1.5721999999999264e-05, 1.6208000000000194e-05, 1.6208999999999668e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.6208000000000194e-05, 1.5707999999999694e-05, 1.6221999999999764e-05, 1.6221999999999764e-05, 1.5694000000000125e-05, 1.5707999999999694e-05, 1.6735999999999834e-05, 1.5707999999999694e-05, 1.5806000000000153e-05, 1.5694999999999598e-05, 1.5695000000003068e-05, 1.6208000000000194e-05, 1.5722000000002734e-05, 1.5722000000002734e-05, 1.6208999999999668e-05, 1.6195000000000098e-05, 1.6208000000000194e-05, 1.5736000000002304e-05, 1.5735999999998834e-05, 1.6221999999999764e-05, 1.6208000000000194e-05, 1.6208000000000194e-05, 1.6722000000000264e-05, 1.5708000000003164e-05, 1.6249999999998904e-05, 1.5721999999999264e-05, 1.6277999999998044e-05, 1.662499999999928e-05, 1.5708999999999168e-05, 1.6708000000000695e-05, 1.5721999999999264e-05, 1.6221999999999764e-05, 1.6749999999999404e-05, 1.5709000000002638e-05, 1.6235999999999334e-05, 1.6221999999999764e-05, 1.6221999999999764e-05, 1.5694999999999598e-05, 1.613900000000182e-05, 1.5736999999998308e-05, 1.5723000000002207e-05, 1.5722000000002734e-05, 1.5680000000000555e-05, 1.6264000000001944e-05]</msg>
<status status="PASS" starttime="20201029 18:15:08.151" endtime="20201029 18:15:08.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.146" endtime="20201029 18:15:08.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.158" endtime="20201029 18:15:08.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.156" endtime="20201029 18:15:08.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.155" endtime="20201029 18:15:08.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.796" endtime="20201029 18:15:08.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.795" endtime="20201029 18:15:08.179"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.188" endtime="20201029 18:15:08.205"></status>
</kw>
<msg timestamp="20201029 18:15:08.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.186" endtime="20201029 18:15:08.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.206" endtime="20201029 18:15:08.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.209" endtime="20201029 18:15:08.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.183" endtime="20201029 18:15:08.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.181" endtime="20201029 18:15:08.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.218" endtime="20201029 18:15:08.505"></status>
</kw>
<msg timestamp="20201029 18:15:08.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019964208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.217" endtime="20201029 18:15:08.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019964208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.510" endtime="20201029 18:15:08.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.518" endtime="20201029 18:15:08.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.214" endtime="20201029 18:15:08.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.212" endtime="20201029 18:15:08.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.525" level="INFO">${RESULT} = [{'diff': 1.7222000000000764e-05}, {'diff': 1.7222000000000764e-05}, {'diff': 1.72089999999972e-05}, {'diff': 1.7209000000000668e-05}, {'diff': 1.72089999999972e-05}, {'diff': 1.7207999999997725e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:08.521" endtime="20201029 18:15:08.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:08.529" level="INFO">${ACCURACY} = {'diff': [1.7222000000000764e-05, 1.7222000000000764e-05, 1.72089999999972e-05, 1.7209000000000668e-05, 1.72089999999972e-05, 1.7207999999997725e-05, 1.72089999999972e-05, 1.6722000000000264e-05, 1.67...</msg>
<status status="PASS" starttime="20201029 18:15:08.526" endtime="20201029 18:15:08.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.534" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:15:08.533" endtime="20201029 18:15:08.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.536" level="INFO">VALUE: [1.7222000000000764e-05, 1.7222000000000764e-05, 1.72089999999972e-05, 1.7209000000000668e-05, 1.72089999999972e-05, 1.7207999999997725e-05, 1.72089999999972e-05, 1.6722000000000264e-05, 1.6709000000000168e-05, 1.6735999999999834e-05, 1.7208000000001195e-05, 1.7195000000001098e-05, 1.7236000000000334e-05, 1.7736000000000834e-05, 1.7222000000000764e-05, 1.6680000000001555e-05, 1.6735999999999834e-05, 1.7180000000002055e-05, 1.6707999999997225e-05, 1.7707999999998225e-05, 1.6709000000000168e-05, 1.7208000000001195e-05, 1.7223000000000238e-05, 1.6735999999999834e-05, 1.7208000000001195e-05, 1.7221999999997295e-05, 1.6764000000002444e-05, 1.7249999999999904e-05, 1.7222000000000764e-05, 1.6708000000000695e-05, 1.7222000000000764e-05, 1.7207999999997725e-05, 1.6750000000002874e-05, 1.7179999999998585e-05, 1.7209000000000668e-05, 1.7708000000001695e-05, 1.7222000000000764e-05, 1.7208000000001195e-05, 1.7207999999997725e-05, 1.7209000000000668e-05, 1.668100000000103e-05, 1.7221999999997295e-05, 1.6722000000000264e-05, 1.6709000000000168e-05, 1.6722000000000264e-05, 1.7223000000000238e-05, 1.7208000000001195e-05, 1.6749999999999404e-05, 1.6708000000000695e-05, 1.6722000000000264e-05]</msg>
<status status="PASS" starttime="20201029 18:15:08.535" endtime="20201029 18:15:08.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.530" endtime="20201029 18:15:08.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.541" endtime="20201029 18:15:08.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.540" endtime="20201029 18:15:08.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.539" endtime="20201029 18:15:08.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.180" endtime="20201029 18:15:08.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.179" endtime="20201029 18:15:08.562"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.571" endtime="20201029 18:15:08.590"></status>
</kw>
<msg timestamp="20201029 18:15:08.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.570" endtime="20201029 18:15:08.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.592" endtime="20201029 18:15:08.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.594" endtime="20201029 18:15:08.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.567" endtime="20201029 18:15:08.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.565" endtime="20201029 18:15:08.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.604" endtime="20201029 18:15:08.887"></status>
</kw>
<msg timestamp="20201029 18:15:08.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020941111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020959306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.602" endtime="20201029 18:15:08.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020941111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020959306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.892" endtime="20201029 18:15:08.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.900" endtime="20201029 18:15:08.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.599" endtime="20201029 18:15:08.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.598" endtime="20201029 18:15:08.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.907" level="INFO">${RESULT} = [{'diff': 1.81950000000021e-05}, {'diff': 1.8221999999998295e-05}, {'diff': 1.7750000000000404e-05}, {'diff': 1.869499999999913e-05}, {'diff': 1.8250000000000904e-05}, {'diff': 1.8236000000001334e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:08.904" endtime="20201029 18:15:08.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:08.911" level="INFO">${ACCURACY} = {'diff': [1.81950000000021e-05, 1.8221999999998295e-05, 1.7750000000000404e-05, 1.869499999999913e-05, 1.8250000000000904e-05, 1.8236000000001334e-05, 1.8209000000001668e-05, 1.8209000000001668e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:15:08.908" endtime="20201029 18:15:08.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.916" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:15:08.915" endtime="20201029 18:15:08.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.918" level="INFO">VALUE: [1.81950000000021e-05, 1.8221999999998295e-05, 1.7750000000000404e-05, 1.869499999999913e-05, 1.8250000000000904e-05, 1.8236000000001334e-05, 1.8209000000001668e-05, 1.8209000000001668e-05, 1.8222000000001765e-05, 1.8207999999998725e-05, 1.8707999999999225e-05, 1.813900000000035e-05, 1.82089999999982e-05, 1.7680000000002555e-05, 1.7709000000001168e-05, 1.81950000000021e-05, 1.779099999999964e-05, 1.870900000000217e-05, 1.8207999999998725e-05, 1.8263999999997005e-05, 1.8207999999998725e-05, 1.7721999999997795e-05, 1.7736000000000834e-05, 1.76950000000016e-05, 1.7707999999998225e-05, 1.7694000000002125e-05, 1.77089999999977e-05, 1.8291999999999614e-05, 1.7707999999998225e-05, 1.8209000000001668e-05, 1.82089999999982e-05, 1.8222000000001765e-05, 1.818099999999906e-05, 1.8721999999998795e-05, 1.8207999999998725e-05, 1.8221999999998295e-05, 1.7693999999998655e-05, 1.822299999999777e-05, 1.77089999999977e-05, 1.8209000000001668e-05, 1.8207999999998725e-05, 1.82089999999982e-05, 1.7709000000001168e-05, 1.8193999999999155e-05, 1.7707999999998225e-05, 1.8221999999998295e-05, 1.8207999999998725e-05, 1.77089999999977e-05, 1.7693999999998655e-05, 1.7694000000002125e-05]</msg>
<status status="PASS" starttime="20201029 18:15:08.917" endtime="20201029 18:15:08.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.912" endtime="20201029 18:15:08.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.924" endtime="20201029 18:15:08.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.923" endtime="20201029 18:15:08.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.922" endtime="20201029 18:15:08.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.563" endtime="20201029 18:15:08.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.563" endtime="20201029 18:15:08.945"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.954" endtime="20201029 18:15:08.971"></status>
</kw>
<msg timestamp="20201029 18:15:08.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.952" endtime="20201029 18:15:08.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.972" endtime="20201029 18:15:08.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.975" endtime="20201029 18:15:08.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.950" endtime="20201029 18:15:08.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.948" endtime="20201029 18:15:08.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.984" endtime="20201029 18:15:09.269"></status>
</kw>
<msg timestamp="20201029 18:15:09.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020053778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.983" endtime="20201029 18:15:09.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020053778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.274" endtime="20201029 18:15:09.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.282" endtime="20201029 18:15:09.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.980" endtime="20201029 18:15:09.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.978" endtime="20201029 18:15:09.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.289" level="INFO">${RESULT} = [{'diff': 1.9194000000000155e-05}, {'diff': 1.92089999999992e-05}, {'diff': 1.868099999999956e-05}, {'diff': 1.8736000000001835e-05}, {'diff': 1.8722000000002265e-05}, {'diff': 1.87089999999987e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:09.286" endtime="20201029 18:15:09.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:09.294" level="INFO">${ACCURACY} = {'diff': [1.9194000000000155e-05, 1.92089999999992e-05, 1.868099999999956e-05, 1.8736000000001835e-05, 1.8722000000002265e-05, 1.87089999999987e-05, 1.9223000000002238e-05, 1.870900000000217e-05, 1.91...</msg>
<status status="PASS" starttime="20201029 18:15:09.290" endtime="20201029 18:15:09.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.299" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:15:09.298" endtime="20201029 18:15:09.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.301" level="INFO">VALUE: [1.9194000000000155e-05, 1.92089999999992e-05, 1.868099999999956e-05, 1.8736000000001835e-05, 1.8722000000002265e-05, 1.87089999999987e-05, 1.9223000000002238e-05, 1.870900000000217e-05, 1.9194000000000155e-05, 1.962499999999881e-05, 1.8707999999999225e-05, 1.92089999999992e-05, 1.9194000000000155e-05, 1.919499999999963e-05, 1.9278000000001044e-05, 1.9221999999999295e-05, 1.8736000000001835e-05, 1.92089999999992e-05, 1.8749999999997935e-05, 1.973699999999884e-05, 1.8722000000002265e-05, 1.9264000000001474e-05, 1.9263999999998005e-05, 1.92089999999992e-05, 1.9194000000000155e-05, 1.870900000000217e-05, 1.9207999999999725e-05, 1.9208000000003195e-05, 1.920900000000267e-05, 1.870900000000217e-05, 1.9207999999999725e-05, 1.97089999999997e-05, 1.8722000000002265e-05, 1.9221999999999295e-05, 1.870900000000217e-05, 1.8707999999999225e-05, 1.9237000000001808e-05, 1.8721999999998795e-05, 1.8707999999999225e-05, 1.8736000000001835e-05, 1.9235999999998865e-05, 1.9236000000002335e-05, 1.8707999999999225e-05, 1.9707999999996756e-05, 1.919499999999963e-05, 1.8707999999999225e-05, 1.9194000000000155e-05, 1.8735999999998365e-05, 1.8693999999999655e-05, 1.92089999999992e-05]</msg>
<status status="PASS" starttime="20201029 18:15:09.300" endtime="20201029 18:15:09.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.295" endtime="20201029 18:15:09.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:09.375" endtime="20201029 18:15:09.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.374" endtime="20201029 18:15:09.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.373" endtime="20201029 18:15:09.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.946" endtime="20201029 18:15:09.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.946" endtime="20201029 18:15:09.396"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.405" endtime="20201029 18:15:09.423"></status>
</kw>
<msg timestamp="20201029 18:15:09.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.404" endtime="20201029 18:15:09.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.425" endtime="20201029 18:15:09.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.428" endtime="20201029 18:15:09.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.401" endtime="20201029 18:15:09.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.399" endtime="20201029 18:15:09.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.437" endtime="20201029 18:15:09.726"></status>
</kw>
<msg timestamp="20201029 18:15:09.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020097861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020118569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.435" endtime="20201029 18:15:09.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020097861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020118569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.731" endtime="20201029 18:15:09.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.739" endtime="20201029 18:15:09.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.433" endtime="20201029 18:15:09.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.431" endtime="20201029 18:15:09.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.746" level="INFO">${RESULT} = [{'diff': 2.0707999999997756e-05}, {'diff': 2.0222000000000295e-05}, {'diff': 2.0208000000000725e-05}, {'diff': 2.0722000000000795e-05}, {'diff': 1.969500000000013e-05}, {'diff': 2.0207999999997256e-0...</msg>
<status status="PASS" starttime="20201029 18:15:09.743" endtime="20201029 18:15:09.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:09.750" level="INFO">${ACCURACY} = {'diff': [2.0707999999997756e-05, 2.0222000000000295e-05, 2.0208000000000725e-05, 2.0722000000000795e-05, 1.969500000000013e-05, 2.0207999999997256e-05, 1.9721999999999795e-05, 2.0694000000001656e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:09.747" endtime="20201029 18:15:09.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.755" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:15:09.754" endtime="20201029 18:15:09.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.757" level="INFO">VALUE: [2.0707999999997756e-05, 2.0222000000000295e-05, 2.0208000000000725e-05, 2.0722000000000795e-05, 1.969500000000013e-05, 2.0207999999997256e-05, 1.9721999999999795e-05, 2.0694000000001656e-05, 1.9708000000000225e-05, 1.972300000000274e-05, 2.0235999999999865e-05, 2.019499999999716e-05, 2.0708000000001225e-05, 2.015300000000192e-05, 1.963899999999838e-05, 2.0236000000003335e-05, 1.966699999999752e-05, 1.9763999999998505e-05, 2.013899999999888e-05, 1.9708000000000225e-05, 2.0249999999999435e-05, 1.9708000000000225e-05, 2.022299999999977e-05, 1.9694000000000655e-05, 1.97089999999997e-05, 2.0208000000000725e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 2.022299999999977e-05, 2.0249999999999435e-05, 2.0708000000001225e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 2.0235999999999865e-05, 1.9694000000000655e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.97769999999986e-05, 1.9736000000002835e-05, 1.9806000000000684e-05, 1.9763999999998505e-05, 1.9708000000000225e-05, 1.9708000000000225e-05, 2.018100000000106e-05, 2.0208000000000725e-05, 1.9694000000000655e-05, 2.0708000000001225e-05, 2.023699999999934e-05, 2.02090000000002e-05, 2.019499999999716e-05]</msg>
<status status="PASS" starttime="20201029 18:15:09.756" endtime="20201029 18:15:09.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.751" endtime="20201029 18:15:09.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:09.763" endtime="20201029 18:15:09.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.761" endtime="20201029 18:15:09.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.760" endtime="20201029 18:15:09.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.397" endtime="20201029 18:15:09.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.397" endtime="20201029 18:15:09.786"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.803" endtime="20201029 18:15:09.830"></status>
</kw>
<msg timestamp="20201029 18:15:09.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.800" endtime="20201029 18:15:09.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.833" endtime="20201029 18:15:09.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.838" endtime="20201029 18:15:09.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.795" endtime="20201029 18:15:09.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.791" endtime="20201029 18:15:09.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.856" endtime="20201029 18:15:10.145"></status>
</kw>
<msg timestamp="20201029 18:15:10.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038524028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03854525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:09.853" endtime="20201029 18:15:10.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038524028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03854525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:10.149" endtime="20201029 18:15:10.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.157" endtime="20201029 18:15:10.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.848" endtime="20201029 18:15:10.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.845" endtime="20201029 18:15:10.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.164" level="INFO">${RESULT} = [{'diff': 2.1222000000001295e-05}, {'diff': 2.0708000000001225e-05}, {'diff': 2.119500000000163e-05}, {'diff': 2.072300000000027e-05}, {'diff': 2.1194000000002156e-05}, {'diff': 2.1208000000001725e-05...</msg>
<status status="PASS" starttime="20201029 18:15:10.161" endtime="20201029 18:15:10.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:10.168" level="INFO">${ACCURACY} = {'diff': [2.1222000000001295e-05, 2.0708000000001225e-05, 2.119500000000163e-05, 2.072300000000027e-05, 2.1194000000002156e-05, 2.1208000000001725e-05, 2.0721999999993856e-05, 2.12090000000012e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:10.165" endtime="20201029 18:15:10.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.173" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:15:10.172" endtime="20201029 18:15:10.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.176" level="INFO">VALUE: [2.1222000000001295e-05, 2.0708000000001225e-05, 2.119500000000163e-05, 2.072300000000027e-05, 2.1194000000002156e-05, 2.1208000000001725e-05, 2.0721999999993856e-05, 2.12090000000012e-05, 2.07090000000007e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2.0693999999994717e-05, 2.1222000000001295e-05, 2.07090000000007e-05, 2.0708000000001225e-05, 2.115299999999598e-05, 2.1208000000001725e-05, 2.0708000000001225e-05, 2.119500000000163e-05, 2.0708000000001225e-05, 2.0722000000000795e-05, 2.119500000000163e-05, 2.1250000000000435e-05, 2.0708000000001225e-05, 2.120899999999426e-05, 2.1194000000002156e-05, 2.0763999999999505e-05, 2.068099999999462e-05, 2.1250000000000435e-05, 2.0708000000001225e-05, 2.129099999999967e-05, 2.0708000000001225e-05, 2.0680000000002086e-05, 2.0708000000001225e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2.1722000000001795e-05, 2.1222000000001295e-05, 2.1207999999994787e-05, 2.07090000000007e-05, 2.1207999999994787e-05, 2.0707999999994287e-05, 2.1207999999994787e-05, 2.072300000000027e-05, 2.12090000000012e-05, 2.0722000000000795e-05, 2.1207999999994787e-05, 2.1236000000000865e-05, 2.0722000000000795e-05, 2.1208000000001725e-05]</msg>
<status status="PASS" starttime="20201029 18:15:10.174" endtime="20201029 18:15:10.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.169" endtime="20201029 18:15:10.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:10.182" endtime="20201029 18:15:10.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.180" endtime="20201029 18:15:10.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.179" endtime="20201029 18:15:10.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.788" endtime="20201029 18:15:10.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.787" endtime="20201029 18:15:10.202"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.211" endtime="20201029 18:15:10.229"></status>
</kw>
<msg timestamp="20201029 18:15:10.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.210" endtime="20201029 18:15:10.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.230" endtime="20201029 18:15:10.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.233" endtime="20201029 18:15:10.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.207" endtime="20201029 18:15:10.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.205" endtime="20201029 18:15:10.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.242" endtime="20201029 18:15:10.528"></status>
</kw>
<msg timestamp="20201029 18:15:10.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.241" endtime="20201029 18:15:10.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.532" endtime="20201029 18:15:10.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.540" endtime="20201029 18:15:10.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.238" endtime="20201029 18:15:10.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.236" endtime="20201029 18:15:10.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.547" level="INFO">${RESULT} = [{'diff': 2.1721999999998326e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.2236000000001865e-05}, {'diff': 2.1693999999999186e-05}, {'diff': 2.1750000000000935e-05}, {'diff': 2.1722000000001795e-...</msg>
<status status="PASS" starttime="20201029 18:15:10.544" endtime="20201029 18:15:10.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:10.552" level="INFO">${ACCURACY} = {'diff': [2.1721999999998326e-05, 2.2207999999999256e-05, 2.2236000000001865e-05, 2.1693999999999186e-05, 2.1750000000000935e-05, 2.1722000000001795e-05, 2.1707999999998756e-05, 2.219499999999916e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:10.548" endtime="20201029 18:15:10.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.557" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:15:10.556" endtime="20201029 18:15:10.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.560" level="INFO">VALUE: [2.1721999999998326e-05, 2.2207999999999256e-05, 2.2236000000001865e-05, 2.1693999999999186e-05, 2.1750000000000935e-05, 2.1722000000001795e-05, 2.1707999999998756e-05, 2.219499999999916e-05, 2.169500000000213e-05, 2.1693999999999186e-05, 2.1721999999998326e-05, 2.2207999999999256e-05, 2.2721999999999326e-05, 2.220899999999873e-05, 2.220899999999873e-05, 2.27229999999988e-05, 2.169500000000213e-05, 2.17090000000017e-05, 2.2221999999998826e-05, 2.1722000000001795e-05, 2.2193999999999686e-05, 2.170899999999823e-05, 2.1736000000001365e-05, 2.2207999999999256e-05, 2.1721999999998326e-05, 2.2264000000001005e-05, 2.2236000000001865e-05, 2.1721999999998326e-05, 2.170899999999823e-05, 2.169499999999866e-05, 2.2207999999999256e-05, 2.2221999999998826e-05, 2.1693999999999186e-05, 2.2207999999999256e-05, 2.2207999999999256e-05, 2.2221999999998826e-05, 2.17090000000017e-05, 2.2250000000001435e-05, 2.2207999999999256e-05, 2.2221999999998826e-05, 2.1693999999999186e-05, 2.2236000000001865e-05, 2.219499999999916e-05, 2.2207999999999256e-05, 2.2278000000000575e-05, 2.17090000000017e-05, 2.2208000000002726e-05, 2.1722000000001795e-05, 2.2222000000002295e-05, 2.1736000000001365e-05]</msg>
<status status="PASS" starttime="20201029 18:15:10.558" endtime="20201029 18:15:10.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.553" endtime="20201029 18:15:10.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:10.565" endtime="20201029 18:15:10.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.563" endtime="20201029 18:15:10.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.562" endtime="20201029 18:15:10.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.203" endtime="20201029 18:15:10.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.203" endtime="20201029 18:15:10.586"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.594" endtime="20201029 18:15:10.613"></status>
</kw>
<msg timestamp="20201029 18:15:10.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.593" endtime="20201029 18:15:10.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.614" endtime="20201029 18:15:10.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.617" endtime="20201029 18:15:10.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.590" endtime="20201029 18:15:10.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.588" endtime="20201029 18:15:10.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.626" endtime="20201029 18:15:10.913"></status>
</kw>
<msg timestamp="20201029 18:15:10.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019908514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019931708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.625" endtime="20201029 18:15:10.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019908514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019931708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.917" endtime="20201029 18:15:10.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.926" endtime="20201029 18:15:10.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.622" endtime="20201029 18:15:10.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.620" endtime="20201029 18:15:10.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.933" level="INFO">${RESULT} = [{'diff': 2.3194000000000686e-05}, {'diff': 2.315299999999798e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.32229999999993e-05}, {'diff': 2.3722000000000326e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:10.929" endtime="20201029 18:15:10.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:10.937" level="INFO">${ACCURACY} = {'diff': [2.3194000000000686e-05, 2.315299999999798e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.32229999999993e-05, 2.3722000000000326e-05, 2.320899999999973e-05, 2.319500000000016e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:15:10.934" endtime="20201029 18:15:10.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.942" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:15:10.940" endtime="20201029 18:15:10.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.944" level="INFO">VALUE: [2.3194000000000686e-05, 2.315299999999798e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.32229999999993e-05, 2.3722000000000326e-05, 2.320899999999973e-05, 2.319500000000016e-05, 2.2749999999998466e-05, 2.2721999999999326e-05, 2.3763999999999036e-05, 2.3208000000000256e-05, 2.32229999999993e-05, 2.2707999999999756e-05, 2.319500000000016e-05, 2.2707999999999756e-05, 2.3221999999999826e-05, 2.263899999999791e-05, 2.2721999999999326e-05, 2.2750000000001935e-05, 2.2707999999999756e-05, 2.2722000000002796e-05, 2.2721999999999326e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.3235999999999396e-05, 2.3277999999998106e-05, 2.2721999999999326e-05, 2.2736000000002365e-05, 2.27229999999988e-05, 2.32229999999993e-05, 2.32090000000032e-05, 2.3208000000000256e-05, 2.3250000000002435e-05, 2.2665999999997577e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.3222000000003296e-05, 2.270899999999923e-05, 2.2707999999999756e-05, 2.2735999999998896e-05, 2.269499999999966e-05, 2.270899999999923e-05, 2.2750000000001935e-05, 2.2707999999999756e-05, 2.2722000000002796e-05, 2.3208000000000256e-05, 2.269500000000313e-05, 2.27229999999988e-05, 2.27229999999988e-05]</msg>
<status status="PASS" starttime="20201029 18:15:10.943" endtime="20201029 18:15:10.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.938" endtime="20201029 18:15:10.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:10.949" endtime="20201029 18:15:10.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.948" endtime="20201029 18:15:10.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.947" endtime="20201029 18:15:10.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.587" endtime="20201029 18:15:10.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.586" endtime="20201029 18:15:10.970"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.979" endtime="20201029 18:15:10.998"></status>
</kw>
<msg timestamp="20201029 18:15:10.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.977" endtime="20201029 18:15:10.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.000" endtime="20201029 18:15:11.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.002" endtime="20201029 18:15:11.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.975" endtime="20201029 18:15:11.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.973" endtime="20201029 18:15:11.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.012" endtime="20201029 18:15:11.297"></status>
</kw>
<msg timestamp="20201029 18:15:11.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021002972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021027139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.010" endtime="20201029 18:15:11.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021002972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021027139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.302" endtime="20201029 18:15:11.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.310" endtime="20201029 18:15:11.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.007" endtime="20201029 18:15:11.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.006" endtime="20201029 18:15:11.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:11.317" level="INFO">${RESULT} = [{'diff': 2.416699999999855e-05}, {'diff': 2.473700000000037e-05}, {'diff': 2.4208000000001256e-05}, {'diff': 2.4179999999998647e-05}, {'diff': 2.4208000000001256e-05}, {'diff': 2.370899999999676e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:11.314" endtime="20201029 18:15:11.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:11.322" level="INFO">${ACCURACY} = {'diff': [2.416699999999855e-05, 2.473700000000037e-05, 2.4208000000001256e-05, 2.4179999999998647e-05, 2.4208000000001256e-05, 2.370899999999676e-05, 2.3749999999999466e-05, 2.373699999999937e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:11.318" endtime="20201029 18:15:11.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.326" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:15:11.325" endtime="20201029 18:15:11.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.329" level="INFO">VALUE: [2.416699999999855e-05, 2.473700000000037e-05, 2.4208000000001256e-05, 2.4179999999998647e-05, 2.4208000000001256e-05, 2.370899999999676e-05, 2.3749999999999466e-05, 2.373699999999937e-05, 2.3707999999997287e-05, 2.4707999999998287e-05, 2.3735999999999896e-05, 2.3680000000001616e-05, 2.4249999999999966e-05, 2.418100000000159e-05, 2.4249999999999966e-05, 2.4236000000000396e-05, 2.4208000000001256e-05, 2.4222000000000826e-05, 2.3735999999999896e-05, 2.370900000000023e-05, 2.3694000000001186e-05, 2.4222000000000826e-05, 2.3708000000000756e-05, 2.4208000000001256e-05, 2.4222000000000826e-05, 2.366700000000152e-05, 2.373699999999937e-05, 2.418099999999812e-05, 2.4736000000000896e-05, 2.4236000000000396e-05, 2.3722000000000326e-05, 2.4693999999998717e-05, 2.3763999999999036e-05, 2.4222000000000826e-05, 2.370900000000023e-05, 2.3693999999997717e-05, 2.4207999999997787e-05, 2.418099999999812e-05, 2.4222000000000826e-05, 2.42230000000003e-05, 2.4236000000000396e-05, 2.413899999999941e-05, 2.3708000000000756e-05, 2.420900000000073e-05, 2.4193999999998217e-05, 2.3666000000002047e-05, 2.4222000000000826e-05, 2.4263000000000062e-05, 2.4208000000001256e-05, 2.370900000000023e-05]</msg>
<status status="PASS" starttime="20201029 18:15:11.327" endtime="20201029 18:15:11.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.322" endtime="20201029 18:15:11.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:11.335" endtime="20201029 18:15:11.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.333" endtime="20201029 18:15:11.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.332" endtime="20201029 18:15:11.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.971" endtime="20201029 18:15:11.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.970" endtime="20201029 18:15:11.356"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.365" endtime="20201029 18:15:11.382"></status>
</kw>
<msg timestamp="20201029 18:15:11.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.363" endtime="20201029 18:15:11.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.384" endtime="20201029 18:15:11.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.386" endtime="20201029 18:15:11.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.360" endtime="20201029 18:15:11.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.358" endtime="20201029 18:15:11.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.396" endtime="20201029 18:15:11.681"></status>
</kw>
<msg timestamp="20201029 18:15:11.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020039847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020065069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.394" endtime="20201029 18:15:11.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020039847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020065069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.685" endtime="20201029 18:15:11.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.694" endtime="20201029 18:15:11.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.391" endtime="20201029 18:15:11.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.390" endtime="20201029 18:15:11.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:11.701" level="INFO">${RESULT} = [{'diff': 2.5222000000001826e-05}, {'diff': 2.47230000000008e-05}, {'diff': 2.5207999999998787e-05}, {'diff': 2.4708000000001756e-05}, {'diff': 2.5222000000001826e-05}, {'diff': 2.5193999999999217e-05...</msg>
<status status="PASS" starttime="20201029 18:15:11.697" endtime="20201029 18:15:11.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:11.706" level="INFO">${ACCURACY} = {'diff': [2.5222000000001826e-05, 2.47230000000008e-05, 2.5207999999998787e-05, 2.4708000000001756e-05, 2.5222000000001826e-05, 2.5193999999999217e-05, 2.470900000000123e-05, 2.5236000000001396e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:11.702" endtime="20201029 18:15:11.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.711" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:15:11.710" endtime="20201029 18:15:11.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.713" level="INFO">VALUE: [2.5222000000001826e-05, 2.47230000000008e-05, 2.5207999999998787e-05, 2.4708000000001756e-05, 2.5222000000001826e-05, 2.5193999999999217e-05, 2.470900000000123e-05, 2.5236000000001396e-05, 2.4693999999998717e-05, 2.4680000000002617e-05, 2.5722000000002326e-05, 2.4665999999999577e-05, 2.5222000000001826e-05, 2.5235999999997927e-05, 2.47230000000008e-05, 2.513900000000041e-05, 2.5721999999998857e-05, 2.5222000000001826e-05, 2.4722000000001326e-05, 2.4721999999997857e-05, 2.4722000000001326e-05, 2.52230000000013e-05, 2.5179999999999647e-05, 2.5179999999999647e-05, 2.4722000000001326e-05, 2.5207999999998787e-05, 2.5221999999998357e-05, 2.4721999999997857e-05, 2.52230000000013e-05, 2.568099999999962e-05, 2.5264000000000536e-05, 2.5207999999998787e-05, 2.4693999999998717e-05, 2.4707999999998287e-05, 2.47230000000008e-05, 2.5221999999998357e-05, 2.5707999999999287e-05, 2.5235999999997927e-05, 2.5236000000001396e-05, 2.4694000000002186e-05, 2.47230000000008e-05, 2.520899999999826e-05, 2.4707999999998287e-05, 2.4722000000001326e-05, 2.4722000000001326e-05, 2.4722000000001326e-05, 2.4708000000001756e-05, 2.4721999999997857e-05, 2.5166000000000077e-05, 2.4694000000002186e-05]</msg>
<status status="PASS" starttime="20201029 18:15:11.712" endtime="20201029 18:15:11.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.707" endtime="20201029 18:15:11.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:11.718" endtime="20201029 18:15:11.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.717" endtime="20201029 18:15:11.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.716" endtime="20201029 18:15:11.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.356" endtime="20201029 18:15:11.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.356" endtime="20201029 18:15:11.739"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.748" endtime="20201029 18:15:11.766"></status>
</kw>
<msg timestamp="20201029 18:15:11.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.747" endtime="20201029 18:15:11.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.768" endtime="20201029 18:15:11.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.770" endtime="20201029 18:15:11.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.744" endtime="20201029 18:15:11.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.742" endtime="20201029 18:15:11.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.780" endtime="20201029 18:15:12.066"></status>
</kw>
<msg timestamp="20201029 18:15:12.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020068319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020094472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.778" endtime="20201029 18:15:12.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020068319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020094472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.070" endtime="20201029 18:15:12.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.079" endtime="20201029 18:15:12.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.775" endtime="20201029 18:15:12.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.773" endtime="20201029 18:15:12.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.086" level="INFO">${RESULT} = [{'diff': 2.615299999999751e-05}, {'diff': 2.5721999999998857e-05}, {'diff': 2.6708000000000287e-05}, {'diff': 2.5693999999999717e-05}, {'diff': 2.615300000000098e-05}, {'diff': 2.570899999999876e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:12.082" endtime="20201029 18:15:12.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:12.090" level="INFO">${ACCURACY} = {'diff': [2.615299999999751e-05, 2.5721999999998857e-05, 2.6708000000000287e-05, 2.5693999999999717e-05, 2.615300000000098e-05, 2.570899999999876e-05, 2.6194000000000217e-05, 2.6721999999999857e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:12.087" endtime="20201029 18:15:12.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.095" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:15:12.094" endtime="20201029 18:15:12.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.097" level="INFO">VALUE: [2.615299999999751e-05, 2.5721999999998857e-05, 2.6708000000000287e-05, 2.5693999999999717e-05, 2.615300000000098e-05, 2.570899999999876e-05, 2.6194000000000217e-05, 2.6721999999999857e-05, 2.5708000000002756e-05, 2.6152000000001507e-05, 2.5693999999999717e-05, 2.5708000000002756e-05, 2.6236000000002396e-05, 2.623700000000187e-05, 2.6207999999999787e-05, 2.566700000000005e-05, 2.5750000000001466e-05, 2.6221999999999357e-05, 2.569499999999919e-05, 2.572299999999833e-05, 2.570899999999876e-05, 2.57369999999979e-05, 2.6194000000000217e-05, 2.5805999999999746e-05, 2.572299999999833e-05, 2.620899999999926e-05, 2.6207999999999787e-05, 2.6207999999999787e-05, 2.618100000000012e-05, 2.619499999999969e-05, 2.5735999999998427e-05, 2.6221999999999357e-05, 2.5792000000000176e-05, 2.62369999999984e-05, 2.6277999999997637e-05, 2.5735999999998427e-05, 2.5721999999998857e-05, 2.622299999999883e-05, 2.615300000000098e-05, 2.6166000000001077e-05, 2.5764000000001036e-05, 2.5708000000002756e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.6250000000001966e-05, 2.6721999999999857e-05, 2.570899999999876e-05, 2.566700000000005e-05, 2.5735999999998427e-05, 2.615300000000098e-05]</msg>
<status status="PASS" starttime="20201029 18:15:12.096" endtime="20201029 18:15:12.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.091" endtime="20201029 18:15:12.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.102" endtime="20201029 18:15:12.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.101" endtime="20201029 18:15:12.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.100" endtime="20201029 18:15:12.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.740" endtime="20201029 18:15:12.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.740" endtime="20201029 18:15:12.123"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.132" endtime="20201029 18:15:12.151"></status>
</kw>
<msg timestamp="20201029 18:15:12.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.130" endtime="20201029 18:15:12.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.153" endtime="20201029 18:15:12.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.155" endtime="20201029 18:15:12.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.128" endtime="20201029 18:15:12.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.126" endtime="20201029 18:15:12.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.165" endtime="20201029 18:15:12.450"></status>
</kw>
<msg timestamp="20201029 18:15:12.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021027153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021054861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.163" endtime="20201029 18:15:12.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021027153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021054861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.455" endtime="20201029 18:15:12.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.463" endtime="20201029 18:15:12.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.161" endtime="20201029 18:15:12.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.159" endtime="20201029 18:15:12.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.470" level="INFO">${RESULT} = [{'diff': 2.7708000000001287e-05}, {'diff': 2.7263999999999067e-05}, {'diff': 2.6721999999999857e-05}, {'diff': 2.670899999999976e-05}, {'diff': 2.6694000000000717e-05}, {'diff': 2.7291999999998207e-0...</msg>
<status status="PASS" starttime="20201029 18:15:12.467" endtime="20201029 18:15:12.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:12.475" level="INFO">${ACCURACY} = {'diff': [2.7708000000001287e-05, 2.7263999999999067e-05, 2.6721999999999857e-05, 2.670899999999976e-05, 2.6694000000000717e-05, 2.7291999999998207e-05, 2.7222000000000357e-05, 2.670899999999976e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:12.471" endtime="20201029 18:15:12.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.479" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:15:12.478" endtime="20201029 18:15:12.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.482" level="INFO">VALUE: [2.7708000000001287e-05, 2.7263999999999067e-05, 2.6721999999999857e-05, 2.670899999999976e-05, 2.6694000000000717e-05, 2.7291999999998207e-05, 2.7222000000000357e-05, 2.670899999999976e-05, 2.722299999999983e-05, 2.7222000000000357e-05, 2.7222000000000357e-05, 2.6721999999999857e-05, 2.7222000000000357e-05, 2.666700000000105e-05, 2.6708000000000287e-05, 2.672299999999933e-05, 2.7221999999996888e-05, 2.7180000000001647e-05, 2.6694000000000717e-05, 2.770899999999729e-05, 2.6721999999999857e-05, 2.7208000000000787e-05, 2.6721999999999857e-05, 2.669500000000019e-05, 2.719500000000069e-05, 2.6791000000001702e-05, 2.7249999999999497e-05, 2.672299999999933e-05, 2.7263999999999067e-05, 2.72369999999994e-05, 2.6735999999999427e-05, 2.7165999999998608e-05, 2.6708000000000287e-05, 2.6735999999999427e-05, 2.715299999999851e-05, 2.669499999999672e-05, 2.7708000000001287e-05, 2.6721999999999857e-05, 2.7222000000000357e-05, 2.6708000000000287e-05, 2.7721999999997388e-05, 2.6764000000002036e-05, 2.6721999999999857e-05, 2.7151999999999038e-05, 2.7193999999997748e-05, 2.720900000000026e-05, 2.715300000000198e-05, 2.7263999999999067e-05, 2.670899999999976e-05, 2.7222000000000357e-05]</msg>
<status status="PASS" starttime="20201029 18:15:12.480" endtime="20201029 18:15:12.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.475" endtime="20201029 18:15:12.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.488" endtime="20201029 18:15:12.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.486" endtime="20201029 18:15:12.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.485" endtime="20201029 18:15:12.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.124" endtime="20201029 18:15:12.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.123" endtime="20201029 18:15:12.508"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.518" endtime="20201029 18:15:12.535"></status>
</kw>
<msg timestamp="20201029 18:15:12.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.516" endtime="20201029 18:15:12.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.537" endtime="20201029 18:15:12.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.539" endtime="20201029 18:15:12.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.513" endtime="20201029 18:15:12.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.511" endtime="20201029 18:15:12.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.549" endtime="20201029 18:15:12.835"></status>
</kw>
<msg timestamp="20201029 18:15:12.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020056208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.547" endtime="20201029 18:15:12.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020056208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.839" endtime="20201029 18:15:12.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.848" endtime="20201029 18:15:12.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.545" endtime="20201029 18:15:12.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.543" endtime="20201029 18:15:12.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.855" level="INFO">${RESULT} = [{'diff': 2.770900000000076e-05}, {'diff': 2.7791999999998707e-05}, {'diff': 2.8222000000001357e-05}, {'diff': 2.7722000000000857e-05}, {'diff': 2.770900000000076e-05}, {'diff': 2.772299999999686e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:12.851" endtime="20201029 18:15:12.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:12.860" level="INFO">${ACCURACY} = {'diff': [2.770900000000076e-05, 2.7791999999998707e-05, 2.8222000000001357e-05, 2.7722000000000857e-05, 2.770900000000076e-05, 2.772299999999686e-05, 2.770900000000076e-05, 2.820900000000126e-05, 2.8...</msg>
<status status="PASS" starttime="20201029 18:15:12.856" endtime="20201029 18:15:12.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.865" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:15:12.863" endtime="20201029 18:15:12.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.867" level="INFO">VALUE: [2.770900000000076e-05, 2.7791999999998707e-05, 2.8222000000001357e-05, 2.7722000000000857e-05, 2.770900000000076e-05, 2.772299999999686e-05, 2.770900000000076e-05, 2.820900000000126e-05, 2.8165999999999608e-05, 2.7707999999997818e-05, 2.8721999999998388e-05, 2.769500000000119e-05, 2.8249999999997027e-05, 2.772300000000033e-05, 2.770900000000076e-05, 2.8222000000001357e-05, 2.8193999999998748e-05, 2.8208000000001787e-05, 2.8250000000000497e-05, 2.772300000000033e-05, 2.872299999999786e-05, 2.8236000000000927e-05, 2.8722000000001857e-05, 2.8207999999998318e-05, 2.8222000000001357e-05, 2.8221999999997888e-05, 2.772300000000033e-05, 2.7736000000000427e-05, 2.8221999999997888e-05, 2.8208000000001787e-05, 2.8222000000001357e-05, 2.8193999999998748e-05, 2.820900000000126e-05, 2.7763999999999567e-05, 2.8207999999998318e-05, 2.7722000000000857e-05, 2.7736000000000427e-05, 2.7763999999999567e-05, 2.7707999999997818e-05, 2.8236000000000927e-05, 2.772300000000033e-05, 2.769500000000119e-05, 2.769500000000119e-05, 2.8222000000001357e-05, 2.770900000000076e-05, 2.769500000000119e-05, 2.7806000000001746e-05, 2.8277999999999637e-05, 2.7722000000000857e-05, 2.7694000000001717e-05]</msg>
<status status="PASS" starttime="20201029 18:15:12.866" endtime="20201029 18:15:12.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.861" endtime="20201029 18:15:12.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.872" endtime="20201029 18:15:12.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.871" endtime="20201029 18:15:12.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.869" endtime="20201029 18:15:12.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.509" endtime="20201029 18:15:12.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.509" endtime="20201029 18:15:12.893"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.902" endtime="20201029 18:15:12.919"></status>
</kw>
<msg timestamp="20201029 18:15:12.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.900" endtime="20201029 18:15:12.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.921" endtime="20201029 18:15:12.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.923" endtime="20201029 18:15:12.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.898" endtime="20201029 18:15:12.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.896" endtime="20201029 18:15:12.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.933" endtime="20201029 18:15:13.220"></status>
</kw>
<msg timestamp="20201029 18:15:13.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020094681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.931" endtime="20201029 18:15:13.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020094681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.224" endtime="20201029 18:15:13.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.233" endtime="20201029 18:15:13.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.929" endtime="20201029 18:15:13.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.927" endtime="20201029 18:15:13.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.240" level="INFO">${RESULT} = [{'diff': 2.8707999999998818e-05}, {'diff': 2.9250000000001497e-05}, {'diff': 2.9235999999998458e-05}, {'diff': 2.9193999999999748e-05}, {'diff': 2.922299999999836e-05}, {'diff': 2.920900000000226e-05...</msg>
<status status="PASS" starttime="20201029 18:15:13.236" endtime="20201029 18:15:13.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:13.244" level="INFO">${ACCURACY} = {'diff': [2.8707999999998818e-05, 2.9250000000001497e-05, 2.9235999999998458e-05, 2.9193999999999748e-05, 2.922299999999836e-05, 2.920900000000226e-05, 2.9221999999998888e-05, 2.8707999999998818e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:13.241" endtime="20201029 18:15:13.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.249" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:15:13.247" endtime="20201029 18:15:13.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.251" level="INFO">VALUE: [2.8707999999998818e-05, 2.9250000000001497e-05, 2.9235999999998458e-05, 2.9193999999999748e-05, 2.922299999999836e-05, 2.920900000000226e-05, 2.9221999999998888e-05, 2.8707999999998818e-05, 2.9236000000001927e-05, 2.9207999999999318e-05, 2.8653000000000012e-05, 2.872300000000133e-05, 2.9221999999998888e-05, 2.9721999999999388e-05, 2.9207999999999318e-05, 2.8735999999997958e-05, 2.870899999999829e-05, 2.872300000000133e-05, 2.8735999999997958e-05, 2.9193999999999748e-05, 2.9264000000001067e-05, 2.8721999999998388e-05, 2.970899999999929e-05, 2.970899999999929e-05, 2.869499999999872e-05, 2.9207999999999318e-05, 2.9207999999999318e-05, 2.9221999999998888e-05, 2.9222000000002357e-05, 2.870900000000176e-05, 2.870900000000176e-05, 2.870900000000176e-05, 2.870900000000176e-05, 2.8722000000001857e-05, 2.8722000000001857e-05, 2.9264000000001067e-05, 2.922299999999836e-05, 2.9207999999999318e-05, 2.920899999999879e-05, 2.9207999999999318e-05, 2.8750000000000997e-05, 2.9222000000002357e-05, 2.8722000000001857e-05, 2.922300000000183e-05, 2.919499999999922e-05, 2.970900000000276e-05, 2.9222000000002357e-05, 2.9208000000002787e-05, 2.920899999999879e-05, 2.8707999999998818e-05]</msg>
<status status="PASS" starttime="20201029 18:15:13.250" endtime="20201029 18:15:13.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.245" endtime="20201029 18:15:13.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.256" endtime="20201029 18:15:13.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.255" endtime="20201029 18:15:13.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.254" endtime="20201029 18:15:13.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.894" endtime="20201029 18:15:13.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.893" endtime="20201029 18:15:13.277"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.286" endtime="20201029 18:15:13.307"></status>
</kw>
<msg timestamp="20201029 18:15:13.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.285" endtime="20201029 18:15:13.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.309" endtime="20201029 18:15:13.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.311" endtime="20201029 18:15:13.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.282" endtime="20201029 18:15:13.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.280" endtime="20201029 18:15:13.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.321" endtime="20201029 18:15:13.607"></status>
</kw>
<msg timestamp="20201029 18:15:13.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023282458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023312125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.319" endtime="20201029 18:15:13.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023282458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023312125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.611" endtime="20201029 18:15:13.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.620" endtime="20201029 18:15:13.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.317" endtime="20201029 18:15:13.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.315" endtime="20201029 18:15:13.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.626" level="INFO">${RESULT} = [{'diff': 2.9667000000000582e-05}, {'diff': 3.072200000000039e-05}, {'diff': 3.0124999999998903e-05}, {'diff': 3.020899999999979e-05}, {'diff': 2.9721999999999388e-05}, {'diff': 3.0208000000000318e-05...</msg>
<status status="PASS" starttime="20201029 18:15:13.623" endtime="20201029 18:15:13.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:13.631" level="INFO">${ACCURACY} = {'diff': [2.9667000000000582e-05, 3.072200000000039e-05, 3.0124999999998903e-05, 3.020899999999979e-05, 2.9721999999999388e-05, 3.0208000000000318e-05, 3.069500000000072e-05, 2.9707999999999818e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:13.627" endtime="20201029 18:15:13.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.636" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:15:13.634" endtime="20201029 18:15:13.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.638" level="INFO">VALUE: [2.9667000000000582e-05, 3.072200000000039e-05, 3.0124999999998903e-05, 3.020899999999979e-05, 2.9721999999999388e-05, 3.0208000000000318e-05, 3.069500000000072e-05, 2.9707999999999818e-05, 2.9694000000000248e-05, 2.9707999999999818e-05, 2.9707999999999818e-05, 2.970899999999929e-05, 3.016599999999814e-05, 3.0221999999999888e-05, 2.9721999999999388e-05, 3.0235999999999458e-05, 2.9694000000000248e-05, 2.9694000000000248e-05, 3.0221999999999888e-05, 3.0221999999999888e-05, 3.0235999999999458e-05, 3.0221999999999888e-05, 2.972299999999886e-05, 2.972299999999886e-05, 2.970900000000276e-05, 3.0249999999999028e-05, 3.020799999999685e-05, 3.0277999999998167e-05, 3.077800000000214e-05, 3.0208000000000318e-05, 3.0208000000000318e-05, 2.9721999999999388e-05, 3.072299999999986e-05, 3.0208000000000318e-05, 3.0180000000001178e-05, 3.0208000000000318e-05, 3.0221999999999888e-05, 3.022299999999936e-05, 2.9681000000000152e-05, 2.9707999999999818e-05, 3.0208000000000318e-05, 3.0249999999999028e-05, 3.069500000000072e-05, 3.020899999999979e-05, 3.070900000000029e-05, 2.9707999999999818e-05, 3.0235999999999458e-05, 3.0208000000000318e-05, 2.9707999999999818e-05, 3.0194000000000748e-05]</msg>
<status status="PASS" starttime="20201029 18:15:13.637" endtime="20201029 18:15:13.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.632" endtime="20201029 18:15:13.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.644" endtime="20201029 18:15:13.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.642" endtime="20201029 18:15:13.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.641" endtime="20201029 18:15:13.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.278" endtime="20201029 18:15:13.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.277" endtime="20201029 18:15:13.665"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.674" endtime="20201029 18:15:13.691"></status>
</kw>
<msg timestamp="20201029 18:15:13.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.672" endtime="20201029 18:15:13.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.693" endtime="20201029 18:15:13.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.695" endtime="20201029 18:15:13.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.669" endtime="20201029 18:15:13.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.667" endtime="20201029 18:15:13.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.705" endtime="20201029 18:15:13.990"></status>
</kw>
<msg timestamp="20201029 18:15:13.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.703" endtime="20201029 18:15:13.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.994" endtime="20201029 18:15:14.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.003" endtime="20201029 18:15:14.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.700" endtime="20201029 18:15:14.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.699" endtime="20201029 18:15:14.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.010" level="INFO">${RESULT} = [{'diff': 3.070799999999735e-05}, {'diff': 3.072200000000039e-05}, {'diff': 3.119399999999828e-05}, {'diff': 3.120800000000132e-05}, {'diff': 3.118099999999818e-05}, {'diff': 3.122300000000036e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:14.006" endtime="20201029 18:15:14.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:14.015" level="INFO">${ACCURACY} = {'diff': [3.070799999999735e-05, 3.072200000000039e-05, 3.119399999999828e-05, 3.120800000000132e-05, 3.118099999999818e-05, 3.122300000000036e-05, 3.118100000000165e-05, 3.070800000000082e-05, 3.0709...</msg>
<status status="PASS" starttime="20201029 18:15:14.011" endtime="20201029 18:15:14.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.020" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:15:14.019" endtime="20201029 18:15:14.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.022" level="INFO">VALUE: [3.070799999999735e-05, 3.072200000000039e-05, 3.119399999999828e-05, 3.120800000000132e-05, 3.118099999999818e-05, 3.122300000000036e-05, 3.118100000000165e-05, 3.070800000000082e-05, 3.070900000000029e-05, 3.127799999999917e-05, 3.122200000000089e-05, 3.072199999999692e-05, 3.072299999999986e-05, 3.118000000000218e-05, 3.119500000000122e-05, 3.072200000000039e-05, 3.070800000000082e-05, 3.122200000000089e-05, 3.120799999999785e-05, 3.123600000000046e-05, 3.069399999999778e-05, 3.120900000000079e-05, 3.072200000000039e-05, 3.070800000000082e-05, 3.120799999999785e-05, 3.120800000000132e-05, 3.120799999999785e-05, 3.070799999999735e-05, 3.120799999999785e-05, 3.122199999999742e-05, 3.070799999999735e-05, 3.120900000000079e-05, 3.072200000000039e-05, 3.123600000000046e-05, 3.120899999999732e-05, 3.122200000000089e-05, 3.116699999999861e-05, 3.07639999999991e-05, 3.122199999999742e-05, 3.122200000000089e-05, 3.122300000000036e-05, 3.072199999999692e-05, 3.113900000000294e-05, 3.070800000000082e-05, 3.127799999999917e-05, 3.070900000000029e-05, 3.072199999999692e-05, 3.122200000000089e-05, 3.073599999999996e-05, 3.069500000000072e-05]</msg>
<status status="PASS" starttime="20201029 18:15:14.021" endtime="20201029 18:15:14.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.016" endtime="20201029 18:15:14.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:14.027" endtime="20201029 18:15:14.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.026" endtime="20201029 18:15:14.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.025" endtime="20201029 18:15:14.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.666" endtime="20201029 18:15:14.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.665" endtime="20201029 18:15:14.048"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.060" endtime="20201029 18:15:14.078"></status>
</kw>
<msg timestamp="20201029 18:15:14.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.058" endtime="20201029 18:15:14.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.079" endtime="20201029 18:15:14.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.082" endtime="20201029 18:15:14.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.055" endtime="20201029 18:15:14.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.051" endtime="20201029 18:15:14.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.091" endtime="20201029 18:15:14.378"></status>
</kw>
<msg timestamp="20201029 18:15:14.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.090" endtime="20201029 18:15:14.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.382" endtime="20201029 18:15:14.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.391" endtime="20201029 18:15:14.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.087" endtime="20201029 18:15:14.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.085" endtime="20201029 18:15:14.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.398" level="INFO">${RESULT} = [{'diff': 5.6485999999997955e-05}, {'diff': 3.4832999999998004e-05}, {'diff': 3.4875000000000184e-05}, {'diff': 3.538800000000078e-05}, {'diff': 3.566600000000017e-05}, {'diff': 3.493000000000246e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:14.394" endtime="20201029 18:15:14.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:14.402" level="INFO">${ACCURACY} = {'diff': [5.6485999999997955e-05, 3.4832999999998004e-05, 3.4875000000000184e-05, 3.538800000000078e-05, 3.566600000000017e-05, 3.493000000000246e-05, 3.5416999999999393e-05, 3.551400000000038e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:15:14.399" endtime="20201029 18:15:14.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.407" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:15:14.406" endtime="20201029 18:15:14.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.409" level="INFO">VALUE: [5.6485999999997955e-05, 3.4832999999998004e-05, 3.4875000000000184e-05, 3.538800000000078e-05, 3.566600000000017e-05, 3.493000000000246e-05, 3.5416999999999393e-05, 3.551400000000038e-05, 3.4875000000000184e-05, 3.4902999999999323e-05, 3.4861000000000614e-05, 3.479200000000224e-05, 3.5318999999998935e-05, 3.5416999999999393e-05, 3.4902999999999323e-05, 3.501399999999988e-05, 3.466699999999864e-05, 3.5333000000001974e-05, 3.472300000000039e-05, 3.548600000000124e-05, 3.550000000000081e-05, 3.5624999999997464e-05, 3.490300000000279e-05, 3.529199999999927e-05, 3.548600000000124e-05, 3.501399999999988e-05, 3.55840000000017e-05, 3.520900000000132e-05, 3.4777000000003194e-05, 3.454199999999852e-05, 3.547200000000167e-05, 3.472200000000092e-05, 3.517999999999924e-05, 3.51520000000001e-05, 3.4804999999998865e-05, 3.469400000000178e-05, 3.52779999999997e-05, 3.526400000000013e-05, 3.5139000000000004e-05, 3.522200000000142e-05, 3.5402999999999823e-05, 3.4818999999998435e-05, 3.545799999999863e-05, 3.5402999999999823e-05, 3.4847000000001044e-05, 3.545799999999863e-05, 3.5416999999999393e-05, 3.501399999999988e-05, 3.524999999999709e-05, 3.470900000000082e-05]</msg>
<status status="PASS" starttime="20201029 18:15:14.408" endtime="20201029 18:15:14.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.403" endtime="20201029 18:15:14.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:14.485" endtime="20201029 18:15:14.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.483" endtime="20201029 18:15:14.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.482" endtime="20201029 18:15:14.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.049" endtime="20201029 18:15:14.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.048" endtime="20201029 18:15:14.506"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.514" endtime="20201029 18:15:14.533"></status>
</kw>
<msg timestamp="20201029 18:15:14.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.513" endtime="20201029 18:15:14.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.534" endtime="20201029 18:15:14.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.537" endtime="20201029 18:15:14.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.510" endtime="20201029 18:15:14.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.508" endtime="20201029 18:15:14.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.547" endtime="20201029 18:15:14.833"></status>
</kw>
<msg timestamp="20201029 18:15:14.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020946264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020981833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.545" endtime="20201029 18:15:14.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020946264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020981833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.837" endtime="20201029 18:15:14.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.846" endtime="20201029 18:15:14.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.542" endtime="20201029 18:15:14.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.540" endtime="20201029 18:15:14.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.852" level="INFO">${RESULT} = [{'diff': 3.5568999999999185e-05}, {'diff': 3.5888999999997284e-05}, {'diff': 3.567999999999974e-05}, {'diff': 3.593099999999946e-05}, {'diff': 3.619399999999981e-05}, {'diff': 3.619399999999981e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:14.849" endtime="20201029 18:15:14.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:14.857" level="INFO">${ACCURACY} = {'diff': [3.5568999999999185e-05, 3.5888999999997284e-05, 3.567999999999974e-05, 3.593099999999946e-05, 3.619399999999981e-05, 3.619399999999981e-05, 3.652800000000095e-05, 3.5653000000000074e-05, 3.6...</msg>
<status status="PASS" starttime="20201029 18:15:14.853" endtime="20201029 18:15:14.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.861" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:15:14.860" endtime="20201029 18:15:14.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.864" level="INFO">VALUE: [3.5568999999999185e-05, 3.5888999999997284e-05, 3.567999999999974e-05, 3.593099999999946e-05, 3.619399999999981e-05, 3.619399999999981e-05, 3.652800000000095e-05, 3.5653000000000074e-05, 3.65979999999988e-05, 3.6167000000000143e-05, 3.5889000000000754e-05, 3.6332999999999505e-05, 3.644400000000006e-05, 3.6638999999998034e-05, 3.633399999999898e-05, 3.570800000000235e-05, 3.5875000000001184e-05, 3.631999999999941e-05, 3.6153000000000574e-05, 3.6417000000000394e-05, 3.582000000000238e-05, 3.650000000000181e-05, 3.600000000000131e-05, 3.592999999999999e-05, 3.649999999999834e-05, 3.57780000000002e-05, 3.64719999999992e-05, 3.6332999999999505e-05, 3.6568999999996715e-05, 3.5889000000000754e-05, 3.652799999999748e-05, 3.652800000000095e-05, 3.645799999999963e-05, 3.6138999999997534e-05, 3.5847000000002044e-05, 3.57780000000002e-05, 3.6666999999997174e-05, 3.5833000000002474e-05, 3.57780000000002e-05, 3.6417000000000394e-05, 3.6262999999998186e-05, 3.5903000000000324e-05, 3.602800000000045e-05, 3.6639000000001504e-05, 3.6096999999998824e-05, 3.597299999999817e-05, 3.583399999999848e-05, 3.634799999999855e-05, 3.6624999999998464e-05, 3.633400000000245e-05]</msg>
<status status="PASS" starttime="20201029 18:15:14.862" endtime="20201029 18:15:14.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.857" endtime="20201029 18:15:14.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:14.870" endtime="20201029 18:15:14.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.868" endtime="20201029 18:15:14.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.867" endtime="20201029 18:15:14.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.506" endtime="20201029 18:15:14.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.506" endtime="20201029 18:15:14.891"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.900" endtime="20201029 18:15:14.918"></status>
</kw>
<msg timestamp="20201029 18:15:14.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.898" endtime="20201029 18:15:14.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.920" endtime="20201029 18:15:14.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.922" endtime="20201029 18:15:14.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.895" endtime="20201029 18:15:14.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.893" endtime="20201029 18:15:14.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.932" endtime="20201029 18:15:15.217"></status>
</kw>
<msg timestamp="20201029 18:15:15.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.930" endtime="20201029 18:15:15.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.221" endtime="20201029 18:15:15.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.230" endtime="20201029 18:15:15.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.927" endtime="20201029 18:15:15.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.926" endtime="20201029 18:15:15.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.237" level="INFO">${RESULT} = [{'diff': 3.695800000000013e-05}, {'diff': 3.7389000000002254e-05}, {'diff': 3.7652999999998604e-05}, {'diff': 3.675000000000206e-05}, {'diff': 3.7153000000001574e-05}, {'diff': 3.679200000000077e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:15.233" endtime="20201029 18:15:15.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:15.242" level="INFO">${ACCURACY} = {'diff': [3.695800000000013e-05, 3.7389000000002254e-05, 3.7652999999998604e-05, 3.675000000000206e-05, 3.7153000000001574e-05, 3.679200000000077e-05, 3.683399999999948e-05, 3.757000000000066e-05, 3.7...</msg>
<status status="PASS" starttime="20201029 18:15:15.238" endtime="20201029 18:15:15.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.247" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:15:15.246" endtime="20201029 18:15:15.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.249" level="INFO">VALUE: [3.695800000000013e-05, 3.7389000000002254e-05, 3.7652999999998604e-05, 3.675000000000206e-05, 3.7153000000001574e-05, 3.679200000000077e-05, 3.683399999999948e-05, 3.757000000000066e-05, 3.720800000000038e-05, 3.7445000000000533e-05, 3.6889000000001754e-05, 3.749999999999934e-05, 3.720899999999985e-05, 3.680600000000034e-05, 3.683399999999948e-05, 3.7305000000001365e-05, 3.727799999999823e-05, 3.7262999999999186e-05, 3.749999999999934e-05, 3.688799999999881e-05, 3.7389000000002254e-05, 3.6541000000001045e-05, 3.7388999999998784e-05, 3.720799999999691e-05, 3.74720000000002e-05, 3.723599999999952e-05, 3.6833000000000005e-05, 3.7638999999999034e-05, 3.7402999999998354e-05, 3.699999999999884e-05, 3.7597000000000325e-05, 3.727799999999823e-05, 3.6833000000000005e-05, 3.701399999999841e-05, 3.704200000000102e-05, 3.754200000000152e-05, 3.747299999999967e-05, 3.72780000000017e-05, 3.683400000000295e-05, 3.670899999999935e-05, 3.677799999999773e-05, 3.670900000000282e-05, 3.70979999999993e-05, 3.7262999999999186e-05, 3.669400000000031e-05, 3.6819000000000435e-05, 3.7569000000001185e-05, 3.677799999999773e-05, 3.722199999999995e-05, 3.7152999999998104e-05]</msg>
<status status="PASS" starttime="20201029 18:15:15.248" endtime="20201029 18:15:15.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.243" endtime="20201029 18:15:15.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.254" endtime="20201029 18:15:15.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.253" endtime="20201029 18:15:15.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.252" endtime="20201029 18:15:15.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.892" endtime="20201029 18:15:15.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.891" endtime="20201029 18:15:15.275"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.284" endtime="20201029 18:15:15.302"></status>
</kw>
<msg timestamp="20201029 18:15:15.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.282" endtime="20201029 18:15:15.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.304" endtime="20201029 18:15:15.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.306" endtime="20201029 18:15:15.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.280" endtime="20201029 18:15:15.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.278" endtime="20201029 18:15:15.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.316" endtime="20201029 18:15:15.603"></status>
</kw>
<msg timestamp="20201029 18:15:15.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01992825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019966931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:15.314" endtime="20201029 18:15:15.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01992825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019966931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:15.607" endtime="20201029 18:15:15.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.615" endtime="20201029 18:15:15.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.311" endtime="20201029 18:15:15.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.310" endtime="20201029 18:15:15.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.622" level="INFO">${RESULT} = [{'diff': 3.8680999999998744e-05}, {'diff': 3.7624999999999464e-05}, {'diff': 3.8652999999999604e-05}, {'diff': 3.823699999999999e-05}, {'diff': 3.790199999999938e-05}, {'diff': 3.817999999999877e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:15.619" endtime="20201029 18:15:15.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:15.627" level="INFO">${ACCURACY} = {'diff': [3.8680999999998744e-05, 3.7624999999999464e-05, 3.8652999999999604e-05, 3.823699999999999e-05, 3.790199999999938e-05, 3.817999999999877e-05, 3.808400000000073e-05, 3.8083000000001255e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:15:15.623" endtime="20201029 18:15:15.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.631" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:15:15.630" endtime="20201029 18:15:15.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.634" level="INFO">VALUE: [3.8680999999998744e-05, 3.7624999999999464e-05, 3.8652999999999604e-05, 3.823699999999999e-05, 3.790199999999938e-05, 3.817999999999877e-05, 3.808400000000073e-05, 3.8083000000001255e-05, 3.8625000000000465e-05, 3.7861000000000145e-05, 3.790199999999938e-05, 3.776399999999916e-05, 3.791600000000242e-05, 3.8431000000001964e-05, 3.825000000000009e-05, 3.8194999999997814e-05, 3.804199999999855e-05, 3.79720000000007e-05, 3.798600000000027e-05, 3.825000000000009e-05, 3.8680999999998744e-05, 3.8124999999999964e-05, 3.8625000000000465e-05, 3.8152999999999104e-05, 3.784800000000005e-05, 3.7667000000001644e-05, 3.851399999999991e-05, 3.826399999999966e-05, 3.848600000000077e-05, 3.850000000000034e-05, 3.802799999999898e-05, 3.84720000000012e-05, 3.852799999999948e-05, 3.86659999999997e-05, 3.774999999999959e-05, 3.7777000000002725e-05, 3.7888999999999284e-05, 3.8625000000000465e-05, 3.822199999999748e-05, 3.8597000000001325e-05, 3.801399999999941e-05, 3.8361000000000645e-05, 3.7888999999999284e-05, 3.772200000000045e-05, 3.827799999999923e-05, 3.794399999999809e-05, 3.854199999999905e-05, 3.8097000000000825e-05, 3.832000000000141e-05, 3.8625000000000465e-05]</msg>
<status status="PASS" starttime="20201029 18:15:15.632" endtime="20201029 18:15:15.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.627" endtime="20201029 18:15:15.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.639" endtime="20201029 18:15:15.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.637" endtime="20201029 18:15:15.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.636" endtime="20201029 18:15:15.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.276" endtime="20201029 18:15:15.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.275" endtime="20201029 18:15:15.660"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.669" endtime="20201029 18:15:15.687"></status>
</kw>
<msg timestamp="20201029 18:15:15.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.667" endtime="20201029 18:15:15.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.689" endtime="20201029 18:15:15.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.692" endtime="20201029 18:15:15.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.664" endtime="20201029 18:15:15.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.662" endtime="20201029 18:15:15.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.701" endtime="20201029 18:15:15.988"></status>
</kw>
<msg timestamp="20201029 18:15:15.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021040681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021080014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.699" endtime="20201029 18:15:15.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021040681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021080014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.992" endtime="20201029 18:15:16.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.001" endtime="20201029 18:15:16.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.697" endtime="20201029 18:15:16.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.695" endtime="20201029 18:15:16.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.007" level="INFO">${RESULT} = [{'diff': 3.9333000000002505e-05}, {'diff': 3.927800000000023e-05}, {'diff': 3.925000000000109e-05}, {'diff': 3.897300000000117e-05}, {'diff': 3.875000000000059e-05}, {'diff': 3.9430999999999494e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:16.004" endtime="20201029 18:15:16.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:16.012" level="INFO">${ACCURACY} = {'diff': [3.9333000000002505e-05, 3.927800000000023e-05, 3.925000000000109e-05, 3.897300000000117e-05, 3.875000000000059e-05, 3.9430999999999494e-05, 3.954200000000005e-05, 3.9139000000000534e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 18:15:16.008" endtime="20201029 18:15:16.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.016" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:15:16.015" endtime="20201029 18:15:16.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.019" level="INFO">VALUE: [3.9333000000002505e-05, 3.927800000000023e-05, 3.925000000000109e-05, 3.897300000000117e-05, 3.875000000000059e-05, 3.9430999999999494e-05, 3.954200000000005e-05, 3.9139000000000534e-05, 3.87919999999993e-05, 3.8582999999998285e-05, 3.872300000000092e-05, 3.9582999999999285e-05, 3.915199999999716e-05, 3.920799999999891e-05, 3.9096999999998355e-05, 3.877799999999973e-05, 3.9332999999999035e-05, 3.9166999999999674e-05, 3.895799999999866e-05, 3.947199999999873e-05, 3.9402999999996885e-05, 3.952800000000048e-05, 3.94720000000022e-05, 3.945799999999916e-05, 3.872200000000145e-05, 3.944399999999959e-05, 3.872199999999798e-05, 3.880600000000234e-05, 3.87919999999993e-05, 3.949999999999787e-05, 3.958400000000223e-05, 3.930599999999937e-05, 3.904199999999955e-05, 3.92919999999998e-05, 3.907000000000216e-05, 3.8874999999997245e-05, 3.888799999999734e-05, 3.8804999999999396e-05, 3.872199999999798e-05, 3.922199999999848e-05, 3.938799999999784e-05, 3.872200000000145e-05, 3.944399999999959e-05, 3.9139000000000534e-05, 3.9096999999998355e-05, 3.870800000000188e-05, 3.9082999999998785e-05, 3.9318999999999465e-05, 3.902799999999998e-05, 3.901400000000041e-05]</msg>
<status status="PASS" starttime="20201029 18:15:16.017" endtime="20201029 18:15:16.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.013" endtime="20201029 18:15:16.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.025" endtime="20201029 18:15:16.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.023" endtime="20201029 18:15:16.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.022" endtime="20201029 18:15:16.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.661" endtime="20201029 18:15:16.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.660" endtime="20201029 18:15:16.046"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.055" endtime="20201029 18:15:16.073"></status>
</kw>
<msg timestamp="20201029 18:15:16.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.053" endtime="20201029 18:15:16.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.074" endtime="20201029 18:15:16.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.077" endtime="20201029 18:15:16.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.051" endtime="20201029 18:15:16.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.048" endtime="20201029 18:15:16.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.086" endtime="20201029 18:15:16.373"></status>
</kw>
<msg timestamp="20201029 18:15:16.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020096222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020136639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.085" endtime="20201029 18:15:16.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020096222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020136639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.377" endtime="20201029 18:15:16.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.385" endtime="20201029 18:15:16.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.082" endtime="20201029 18:15:16.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.080" endtime="20201029 18:15:16.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.392" level="INFO">${RESULT} = [{'diff': 4.0417000000000924e-05}, {'diff': 4.0333000000000035e-05}, {'diff': 4.0389000000001785e-05}, {'diff': 4.0208999999999384e-05}, {'diff': 3.9958999999999134e-05}, {'diff': 4.0236999999998524e-...</msg>
<status status="PASS" starttime="20201029 18:15:16.389" endtime="20201029 18:15:16.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:16.397" level="INFO">${ACCURACY} = {'diff': [4.0417000000000924e-05, 4.0333000000000035e-05, 4.0389000000001785e-05, 4.0208999999999384e-05, 3.9958999999999134e-05, 4.0236999999998524e-05, 4.0374999999998745e-05, 3.958399999999876e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:16.393" endtime="20201029 18:15:16.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.402" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:15:16.401" endtime="20201029 18:15:16.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.405" level="INFO">VALUE: [4.0417000000000924e-05, 4.0333000000000035e-05, 4.0389000000001785e-05, 4.0208999999999384e-05, 3.9958999999999134e-05, 4.0236999999998524e-05, 4.0374999999998745e-05, 3.958399999999876e-05, 4.045800000000016e-05, 4.001400000000141e-05, 4.0431000000000494e-05, 4.047199999999973e-05, 4.0276999999998286e-05, 4.0276999999998286e-05, 4.023600000000252e-05, 4.0069000000000216e-05, 3.9875000000001715e-05, 4.052800000000148e-05, 4.0208999999999384e-05, 4.045800000000016e-05, 4.027800000000123e-05, 4.0346999999999605e-05, 4.0153000000001104e-05, 3.969399999999984e-05, 3.972199999999898e-05, 4.0583000000000286e-05, 4.026399999999819e-05, 3.9860999999998675e-05, 4.054200000000105e-05, 4.0194999999999814e-05, 4.002800000000098e-05, 3.983400000000248e-05, 4.0417000000000924e-05, 3.982000000000291e-05, 4.019400000000034e-05, 3.9777000000001256e-05, 4.0360999999999175e-05, 4.0012999999998466e-05, 4.0333000000000035e-05, 3.976400000000116e-05, 4.0262999999998716e-05, 4.0305000000000896e-05, 4.0223000000002423e-05, 3.995799999999966e-05, 3.995799999999966e-05, 3.995799999999966e-05, 3.995799999999966e-05, 4.0653000000001605e-05, 4.0096999999999355e-05, 4.0139000000001535e-05]</msg>
<status status="PASS" starttime="20201029 18:15:16.403" endtime="20201029 18:15:16.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.398" endtime="20201029 18:15:16.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.410" endtime="20201029 18:15:16.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.408" endtime="20201029 18:15:16.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.407" endtime="20201029 18:15:16.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.047" endtime="20201029 18:15:16.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.046" endtime="20201029 18:15:16.430"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.440" endtime="20201029 18:15:16.459"></status>
</kw>
<msg timestamp="20201029 18:15:16.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.438" endtime="20201029 18:15:16.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.461" endtime="20201029 18:15:16.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.463" endtime="20201029 18:15:16.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.435" endtime="20201029 18:15:16.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.433" endtime="20201029 18:15:16.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.473" endtime="20201029 18:15:16.760"></status>
</kw>
<msg timestamp="20201029 18:15:16.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020089167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020130542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.471" endtime="20201029 18:15:16.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020089167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020130542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.765" endtime="20201029 18:15:16.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.773" endtime="20201029 18:15:16.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.468" endtime="20201029 18:15:16.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.467" endtime="20201029 18:15:16.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.780" level="INFO">${RESULT} = [{'diff': 4.1374999999999745e-05}, {'diff': 4.1652999999999135e-05}, {'diff': 4.091599999999848e-05}, {'diff': 4.0874999999999245e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 4.1512999999999967e-0...</msg>
<status status="PASS" starttime="20201029 18:15:16.777" endtime="20201029 18:15:16.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:16.784" level="INFO">${ACCURACY} = {'diff': [4.1374999999999745e-05, 4.1652999999999135e-05, 4.091599999999848e-05, 4.0874999999999245e-05, 4.1138999999999065e-05, 4.1512999999999967e-05, 4.076400000000216e-05, 4.091599999999848e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:15:16.781" endtime="20201029 18:15:16.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.789" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:15:16.788" endtime="20201029 18:15:16.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.792" level="INFO">VALUE: [4.1374999999999745e-05, 4.1652999999999135e-05, 4.091599999999848e-05, 4.0874999999999245e-05, 4.1138999999999065e-05, 4.1512999999999967e-05, 4.076400000000216e-05, 4.091599999999848e-05, 4.132000000000094e-05, 4.1138999999999065e-05, 4.1388999999999315e-05, 4.1388999999999315e-05, 4.132000000000094e-05, 4.1402999999998885e-05, 4.0847000000000105e-05, 4.0902999999998385e-05, 4.1388999999999315e-05, 4.149999999999987e-05, 4.1083000000000786e-05, 4.1096999999996886e-05, 4.1097000000000355e-05, 4.099999999999937e-05, 4.133400000000051e-05, 4.132000000000094e-05, 4.1152999999998635e-05, 4.152799999999901e-05, 4.082000000000044e-05, 4.0805000000001396e-05, 4.1262999999999717e-05, 4.0695000000000314e-05, 4.0847000000000105e-05, 4.120800000000091e-05, 4.14860000000003e-05, 4.1166999999998205e-05, 4.149999999999987e-05, 4.077799999999826e-05, 4.095800000000066e-05, 4.1403000000002355e-05, 4.1417000000001924e-05, 4.1597000000000856e-05, 4.099999999999937e-05, 4.0791000000001826e-05, 4.095800000000066e-05, 4.1402999999998885e-05, 4.1596999999997386e-05, 4.1653000000002605e-05, 4.083400000000001e-05, 4.1653000000002605e-05, 4.152799999999901e-05, 4.1110999999999925e-05]</msg>
<status status="PASS" starttime="20201029 18:15:16.790" endtime="20201029 18:15:16.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.785" endtime="20201029 18:15:16.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.797" endtime="20201029 18:15:16.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.795" endtime="20201029 18:15:16.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.794" endtime="20201029 18:15:16.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.431" endtime="20201029 18:15:16.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.431" endtime="20201029 18:15:16.818"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.827" endtime="20201029 18:15:16.848"></status>
</kw>
<msg timestamp="20201029 18:15:16.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.825" endtime="20201029 18:15:16.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.850" endtime="20201029 18:15:16.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.852" endtime="20201029 18:15:16.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.822" endtime="20201029 18:15:16.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.820" endtime="20201029 18:15:16.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.862" endtime="20201029 18:15:17.148"></status>
</kw>
<msg timestamp="20201029 18:15:17.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023208486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023250681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.860" endtime="20201029 18:15:17.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023208486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023250681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.152" endtime="20201029 18:15:17.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.161" endtime="20201029 18:15:17.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.858" endtime="20201029 18:15:17.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.856" endtime="20201029 18:15:17.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.167" level="INFO">${RESULT} = [{'diff': 4.2194999999998345e-05}, {'diff': 4.2625000000000995e-05}, {'diff': 4.2611000000001426e-05}, {'diff': 4.1888999999999815e-05}, {'diff': 4.223600000000105e-05}, {'diff': 4.222199999999801e-05...</msg>
<status status="PASS" starttime="20201029 18:15:17.164" endtime="20201029 18:15:17.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:17.172" level="INFO">${ACCURACY} = {'diff': [4.2194999999998345e-05, 4.2625000000000995e-05, 4.2611000000001426e-05, 4.1888999999999815e-05, 4.223600000000105e-05, 4.222199999999801e-05, 4.176399999999969e-05, 4.2125000000000495e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:15:17.168" endtime="20201029 18:15:17.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.176" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:15:17.175" endtime="20201029 18:15:17.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.179" level="INFO">VALUE: [4.2194999999998345e-05, 4.2625000000000995e-05, 4.2611000000001426e-05, 4.1888999999999815e-05, 4.223600000000105e-05, 4.222199999999801e-05, 4.176399999999969e-05, 4.2125000000000495e-05, 4.2666999999999705e-05, 4.2639000000000565e-05, 4.23059999999989e-05, 4.219400000000234e-05, 4.179199999999883e-05, 4.252800000000001e-05, 4.2333000000002036e-05, 4.220799999999844e-05, 4.176300000000022e-05, 4.233400000000151e-05, 4.2431000000002494e-05, 4.1875000000000245e-05, 4.197200000000123e-05, 4.226400000000019e-05, 4.2666999999999705e-05, 4.19860000000008e-05, 4.1888999999999815e-05, 4.213800000000059e-05, 4.245799999999869e-05, 4.242999999999955e-05, 4.244399999999912e-05, 4.2097000000001356e-05, 4.177799999999926e-05, 4.2111000000000925e-05, 4.2375000000000745e-05, 4.1888999999999815e-05, 4.17920000000023e-05, 4.2111000000000925e-05, 4.155600000000162e-05, 4.229199999999933e-05, 4.2638999999997096e-05, 4.2666999999999705e-05, 4.252800000000001e-05, 4.2444999999998595e-05, 4.2610999999997956e-05, 4.175000000000012e-05, 4.255599999999915e-05, 4.1902999999999385e-05, 4.251300000000097e-05, 4.226400000000019e-05, 4.172200000000098e-05, 4.241599999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:15:17.177" endtime="20201029 18:15:17.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.172" endtime="20201029 18:15:17.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.185" endtime="20201029 18:15:17.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.183" endtime="20201029 18:15:17.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.182" endtime="20201029 18:15:17.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.819" endtime="20201029 18:15:17.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.818" endtime="20201029 18:15:17.206"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.215" endtime="20201029 18:15:17.233"></status>
</kw>
<msg timestamp="20201029 18:15:17.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.213" endtime="20201029 18:15:17.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.235" endtime="20201029 18:15:17.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.238" endtime="20201029 18:15:17.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.210" endtime="20201029 18:15:17.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.208" endtime="20201029 18:15:17.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.247" endtime="20201029 18:15:17.532"></status>
</kw>
<msg timestamp="20201029 18:15:17.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.245" endtime="20201029 18:15:17.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.537" endtime="20201029 18:15:17.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.545" endtime="20201029 18:15:17.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.243" endtime="20201029 18:15:17.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.241" endtime="20201029 18:15:17.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.551" level="INFO">${RESULT} = [{'diff': 4.322199999999901e-05}, {'diff': 4.273600000000155e-05}, {'diff': 4.283399999999854e-05}, {'diff': 4.2916999999999955e-05}, {'diff': 4.3152999999997166e-05}, {'diff': 4.365199999999819e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:17.548" endtime="20201029 18:15:17.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:17.556" level="INFO">${ACCURACY} = {'diff': [4.322199999999901e-05, 4.273600000000155e-05, 4.283399999999854e-05, 4.2916999999999955e-05, 4.3152999999997166e-05, 4.365199999999819e-05, 4.2860999999998206e-05, 4.3124999999998026e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:15:17.552" endtime="20201029 18:15:17.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.561" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:15:17.560" endtime="20201029 18:15:17.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.563" level="INFO">VALUE: [4.322199999999901e-05, 4.273600000000155e-05, 4.283399999999854e-05, 4.2916999999999955e-05, 4.3152999999997166e-05, 4.365199999999819e-05, 4.2860999999998206e-05, 4.3124999999998026e-05, 4.270799999999894e-05, 4.3332999999999566e-05, 4.277700000000079e-05, 4.322199999999901e-05, 4.291600000000048e-05, 4.3569000000000246e-05, 4.2903000000000385e-05, 4.327800000000076e-05, 4.3403000000000885e-05, 4.3653000000001135e-05, 4.2832999999999066e-05, 4.322199999999901e-05, 4.304200000000008e-05, 4.3167000000000205e-05, 4.29999999999979e-05, 4.3139000000001065e-05, 4.2708999999998415e-05, 4.3472999999998735e-05, 4.351400000000144e-05, 4.309799999999836e-05, 4.334799999999861e-05, 4.3208999999998915e-05, 4.2709000000001884e-05, 4.276399999999722e-05, 4.3652999999997666e-05, 4.3361000000002176e-05, 4.3305000000000426e-05, 4.3111000000001926e-05, 4.332000000000294e-05, 4.3055000000000176e-05, 4.3610999999998956e-05, 4.351400000000144e-05, 4.322199999999901e-05, 4.29860000000018e-05, 4.3082999999999316e-05, 4.273600000000155e-05, 4.3181000000003245e-05, 4.3096999999998886e-05, 4.308399999999879e-05, 4.336199999999818e-05, 4.327800000000076e-05, 4.33059999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:15:17.562" endtime="20201029 18:15:17.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.557" endtime="20201029 18:15:17.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.568" endtime="20201029 18:15:17.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.567" endtime="20201029 18:15:17.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.566" endtime="20201029 18:15:17.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.207" endtime="20201029 18:15:17.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.206" endtime="20201029 18:15:17.589"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.597" endtime="20201029 18:15:17.616"></status>
</kw>
<msg timestamp="20201029 18:15:17.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.596" endtime="20201029 18:15:17.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.618" endtime="20201029 18:15:17.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.620" endtime="20201029 18:15:17.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.593" endtime="20201029 18:15:17.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.591" endtime="20201029 18:15:17.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.629" endtime="20201029 18:15:17.916"></status>
</kw>
<msg timestamp="20201029 18:15:17.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019491472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.627" endtime="20201029 18:15:17.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019491472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.920" endtime="20201029 18:15:17.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.928" endtime="20201029 18:15:17.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.625" endtime="20201029 18:15:17.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.623" endtime="20201029 18:15:17.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.934" level="INFO">${RESULT} = [{'diff': 4.379200000000083e-05}, {'diff': 4.451399999999897e-05}, {'diff': 4.376299999999875e-05}, {'diff': 4.454200000000158e-05}, {'diff': 4.375000000000212e-05}, {'diff': 4.384800000000258e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:17.931" endtime="20201029 18:15:17.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:17.939" level="INFO">${ACCURACY} = {'diff': [4.379200000000083e-05, 4.451399999999897e-05, 4.376299999999875e-05, 4.454200000000158e-05, 4.375000000000212e-05, 4.384800000000258e-05, 4.4402999999998416e-05, 4.463799999999962e-05, 4.404...</msg>
<status status="PASS" starttime="20201029 18:15:17.935" endtime="20201029 18:15:17.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.943" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:15:17.942" endtime="20201029 18:15:17.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.946" level="INFO">VALUE: [4.379200000000083e-05, 4.451399999999897e-05, 4.376299999999875e-05, 4.454200000000158e-05, 4.375000000000212e-05, 4.384800000000258e-05, 4.4402999999998416e-05, 4.463799999999962e-05, 4.404099999999814e-05, 4.402700000000204e-05, 4.4347000000000136e-05, 4.4583000000000816e-05, 4.4360999999999706e-05, 4.4569000000001247e-05, 4.445800000000069e-05, 4.4152999999998166e-05, 4.420800000000044e-05, 4.397199999999976e-05, 4.4402999999998416e-05, 4.394400000000062e-05, 4.4639000000002566e-05, 4.3874999999998776e-05, 4.4653000000002135e-05, 4.3846999999999636e-05, 4.451400000000244e-05, 4.422200000000001e-05, 4.44860000000033e-05, 4.4416999999997986e-05, 4.4138999999998596e-05, 4.3958999999999665e-05, 4.3681000000000275e-05, 4.3917000000000955e-05, 4.422200000000001e-05, 4.408399999999979e-05, 4.4110999999999456e-05, 4.4069000000000746e-05, 4.420800000000044e-05, 4.4638999999999096e-05, 4.4347000000000136e-05, 4.376400000000169e-05, 4.3888999999998346e-05, 4.402800000000151e-05, 4.4610999999999956e-05, 4.397199999999976e-05, 4.452799999999854e-05, 4.405600000000065e-05, 4.43329999999971e-05, 4.420800000000044e-05, 4.4096999999999886e-05, 4.425000000000262e-05]</msg>
<status status="PASS" starttime="20201029 18:15:17.944" endtime="20201029 18:15:17.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.939" endtime="20201029 18:15:17.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.950" endtime="20201029 18:15:17.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.949" endtime="20201029 18:15:17.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.948" endtime="20201029 18:15:17.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.590" endtime="20201029 18:15:17.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.589" endtime="20201029 18:15:17.971"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.980" endtime="20201029 18:15:17.999"></status>
</kw>
<msg timestamp="20201029 18:15:17.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.978" endtime="20201029 18:15:18.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.000" endtime="20201029 18:15:18.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.003" endtime="20201029 18:15:18.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.976" endtime="20201029 18:15:18.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.973" endtime="20201029 18:15:18.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.012" endtime="20201029 18:15:18.297"></status>
</kw>
<msg timestamp="20201029 18:15:18.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020253222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.010" endtime="20201029 18:15:18.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020253222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.302" endtime="20201029 18:15:18.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.310" endtime="20201029 18:15:18.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.008" endtime="20201029 18:15:18.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.006" endtime="20201029 18:15:18.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.316" level="INFO">${RESULT} = [{'diff': 4.498600000000033e-05}, {'diff': 4.504099999999914e-05}, {'diff': 4.53329999999981e-05}, {'diff': 4.5347000000001136e-05}, {'diff': 4.526399999999972e-05}, {'diff': 4.5319000000001997e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:18.313" endtime="20201029 18:15:18.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:18.320" level="INFO">${ACCURACY} = {'diff': [4.498600000000033e-05, 4.504099999999914e-05, 4.53329999999981e-05, 4.5347000000001136e-05, 4.526399999999972e-05, 4.5319000000001997e-05, 4.479100000000236e-05, 4.5652999999999666e-05, 4.47...</msg>
<status status="PASS" starttime="20201029 18:15:18.317" endtime="20201029 18:15:18.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.325" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:15:18.324" endtime="20201029 18:15:18.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.327" level="INFO">VALUE: [4.498600000000033e-05, 4.504099999999914e-05, 4.53329999999981e-05, 4.5347000000001136e-05, 4.526399999999972e-05, 4.5319000000001997e-05, 4.479100000000236e-05, 4.5652999999999666e-05, 4.476399999999922e-05, 4.4903000000002385e-05, 4.520799999999797e-05, 4.4902999999998916e-05, 4.5402999999999416e-05, 4.4833000000001066e-05, 4.5388999999999846e-05, 4.479200000000183e-05, 4.5194999999997876e-05, 4.5639000000000096e-05, 4.5361000000000706e-05, 4.5639000000000096e-05, 4.552700000000007e-05, 4.536200000000018e-05, 4.483399999999707e-05, 4.559799999999739e-05, 4.51939999999984e-05, 4.558299999999835e-05, 4.551399999999997e-05, 4.481899999999803e-05, 4.469400000000137e-05, 4.51939999999984e-05, 4.479099999999889e-05, 4.5083000000001316e-05, 4.55000000000004e-05, 4.531899999999853e-05, 4.555499999999921e-05, 4.554200000000258e-05, 4.547199999999779e-05, 4.504200000000208e-05, 4.4861000000000206e-05, 4.527799999999929e-05, 4.4903000000002385e-05, 4.5388999999999846e-05, 4.4638999999999096e-05, 4.5388999999999846e-05, 4.534800000000061e-05, 4.48199999999975e-05, 4.502799999999904e-05, 4.516600000000273e-05, 4.529099999999939e-05, 4.5125000000000026e-05]</msg>
<status status="PASS" starttime="20201029 18:15:18.326" endtime="20201029 18:15:18.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.321" endtime="20201029 18:15:18.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.333" endtime="20201029 18:15:18.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.332" endtime="20201029 18:15:18.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.330" endtime="20201029 18:15:18.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.972" endtime="20201029 18:15:18.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.971" endtime="20201029 18:15:18.354"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.362" endtime="20201029 18:15:18.382"></status>
</kw>
<msg timestamp="20201029 18:15:18.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.361" endtime="20201029 18:15:18.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.383" endtime="20201029 18:15:18.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.387" endtime="20201029 18:15:18.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.358" endtime="20201029 18:15:18.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.356" endtime="20201029 18:15:18.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.400" endtime="20201029 18:15:18.686"></status>
</kw>
<msg timestamp="20201029 18:15:18.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019335542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019381917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.399" endtime="20201029 18:15:18.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019335542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019381917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.690" endtime="20201029 18:15:18.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.698" endtime="20201029 18:15:18.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.395" endtime="20201029 18:15:18.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.392" endtime="20201029 18:15:18.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.705" level="INFO">${RESULT} = [{'diff': 4.637499999999781e-05}, {'diff': 4.586099999999774e-05}, {'diff': 4.6403000000000416e-05}, {'diff': 4.597199999999829e-05}, {'diff': 4.6430999999999556e-05}, {'diff': 4.6639000000001096e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:18.702" endtime="20201029 18:15:18.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:18.710" level="INFO">${ACCURACY} = {'diff': [4.637499999999781e-05, 4.586099999999774e-05, 4.6403000000000416e-05, 4.597199999999829e-05, 4.6430999999999556e-05, 4.6639000000001096e-05, 4.622199999999854e-05, 4.584699999999817e-05, 4.6...</msg>
<status status="PASS" starttime="20201029 18:15:18.706" endtime="20201029 18:15:18.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.714" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:15:18.713" endtime="20201029 18:15:18.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.717" level="INFO">VALUE: [4.637499999999781e-05, 4.586099999999774e-05, 4.6403000000000416e-05, 4.597199999999829e-05, 4.6430999999999556e-05, 4.6639000000001096e-05, 4.622199999999854e-05, 4.584699999999817e-05, 4.6597000000002387e-05, 4.6389000000000846e-05, 4.6139000000000596e-05, 4.6639000000001096e-05, 4.63329999999991e-05, 4.659699999999892e-05, 4.5723000000000985e-05, 4.601400000000047e-05, 4.6625000000001526e-05, 4.572199999999804e-05, 4.6445000000002595e-05, 4.631899999999953e-05, 4.598599999999786e-05, 4.56939999999989e-05, 4.626300000000125e-05, 4.651299999999803e-05, 4.6013999999997e-05, 4.645799999999922e-05, 4.598600000000133e-05, 4.5916999999999486e-05, 4.643000000000008e-05, 4.604199999999961e-05, 4.6361000000001706e-05, 4.6208999999998446e-05, 4.5945000000002095e-05, 4.5930999999999056e-05, 4.6597000000002387e-05, 4.626400000000072e-05, 4.5972999999997766e-05, 4.575000000000065e-05, 4.661199999999796e-05, 4.6139000000000596e-05, 4.663899999999763e-05, 4.659799999999839e-05, 4.6013000000001e-05, 4.60000000000009e-05, 4.602700000000057e-05, 4.597200000000176e-05, 4.597200000000176e-05, 4.598599999999786e-05, 4.647199999999879e-05, 4.60000000000009e-05]</msg>
<status status="PASS" starttime="20201029 18:15:18.715" endtime="20201029 18:15:18.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.711" endtime="20201029 18:15:18.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.721" endtime="20201029 18:15:18.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.720" endtime="20201029 18:15:18.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.719" endtime="20201029 18:15:18.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.355" endtime="20201029 18:15:18.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.354" endtime="20201029 18:15:18.742"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.751" endtime="20201029 18:15:18.769"></status>
</kw>
<msg timestamp="20201029 18:15:18.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.749" endtime="20201029 18:15:18.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.771" endtime="20201029 18:15:18.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.773" endtime="20201029 18:15:18.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.747" endtime="20201029 18:15:18.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.745" endtime="20201029 18:15:18.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.782" endtime="20201029 18:15:19.068"></status>
</kw>
<msg timestamp="20201029 18:15:19.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.781" endtime="20201029 18:15:19.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.072" endtime="20201029 18:15:19.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.080" endtime="20201029 18:15:19.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.778" endtime="20201029 18:15:19.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.777" endtime="20201029 18:15:19.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.087" level="INFO">${RESULT} = [{'diff': 4.680599999999993e-05}, {'diff': 4.699999999999843e-05}, {'diff': 4.7208999999999446e-05}, {'diff': 4.712499999999856e-05}, {'diff': 4.733399999999957e-05}, {'diff': 4.704100000000114e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:19.083" endtime="20201029 18:15:19.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:19.091" level="INFO">${ACCURACY} = {'diff': [4.680599999999993e-05, 4.699999999999843e-05, 4.7208999999999446e-05, 4.712499999999856e-05, 4.733399999999957e-05, 4.704100000000114e-05, 4.680500000000046e-05, 4.7125000000002026e-05, 4.74...</msg>
<status status="PASS" starttime="20201029 18:15:19.088" endtime="20201029 18:15:19.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.095" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:15:19.094" endtime="20201029 18:15:19.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.098" level="INFO">VALUE: [4.680599999999993e-05, 4.699999999999843e-05, 4.7208999999999446e-05, 4.712499999999856e-05, 4.733399999999957e-05, 4.704100000000114e-05, 4.680500000000046e-05, 4.7125000000002026e-05, 4.747200000000326e-05, 4.740199999999847e-05, 4.670800000000294e-05, 4.672199999999904e-05, 4.677800000000079e-05, 4.73330000000001e-05, 4.697199999999929e-05, 4.752800000000154e-05, 4.670799999999947e-05, 4.686099999999874e-05, 4.720800000000344e-05, 4.734699999999967e-05, 4.726400000000172e-05, 4.702800000000104e-05, 4.7458999999999696e-05, 4.718000000000083e-05, 4.713899999999813e-05, 4.737499999999881e-05, 4.6944999999999626e-05, 4.752800000000154e-05, 4.7013999999998e-05, 4.727799999999782e-05, 4.676400000000122e-05, 4.754200000000111e-05, 4.747199999999979e-05, 4.7653000000001666e-05, 4.677800000000079e-05, 4.7013999999998e-05, 4.718000000000083e-05, 4.679200000000036e-05, 4.75000000000024e-05, 4.720799999999997e-05, 4.684699999999917e-05, 4.674999999999818e-05, 4.699999999999843e-05, 4.754200000000111e-05, 4.7458999999999696e-05, 4.713899999999813e-05, 4.71940000000004e-05, 4.741599999999804e-05, 4.762499999999906e-05, 4.7347000000003137e-05]</msg>
<status status="PASS" starttime="20201029 18:15:19.096" endtime="20201029 18:15:19.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.091" endtime="20201029 18:15:19.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.103" endtime="20201029 18:15:19.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.101" endtime="20201029 18:15:19.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.100" endtime="20201029 18:15:19.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.743" endtime="20201029 18:15:19.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.743" endtime="20201029 18:15:19.123"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.132" endtime="20201029 18:15:19.151"></status>
</kw>
<msg timestamp="20201029 18:15:19.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.130" endtime="20201029 18:15:19.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.153" endtime="20201029 18:15:19.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.155" endtime="20201029 18:15:19.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.128" endtime="20201029 18:15:19.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.126" endtime="20201029 18:15:19.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.164" endtime="20201029 18:15:19.450"></status>
</kw>
<msg timestamp="20201029 18:15:19.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020306097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020354319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.162" endtime="20201029 18:15:19.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020306097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020354319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.454" endtime="20201029 18:15:19.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.462" endtime="20201029 18:15:19.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.160" endtime="20201029 18:15:19.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.158" endtime="20201029 18:15:19.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.468" level="INFO">${RESULT} = [{'diff': 4.822200000000054e-05}, {'diff': 4.797200000000029e-05}, {'diff': 4.833299999999763e-05}, {'diff': 4.840299999999895e-05}, {'diff': 4.805499999999824e-05}, {'diff': 4.863899999999963e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:19.465" endtime="20201029 18:15:19.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:19.472" level="INFO">${ACCURACY} = {'diff': [4.822200000000054e-05, 4.797200000000029e-05, 4.833299999999763e-05, 4.840299999999895e-05, 4.805499999999824e-05, 4.863899999999963e-05, 4.798600000000333e-05, 4.848600000000036e-05, 4.7903...</msg>
<status status="PASS" starttime="20201029 18:15:19.469" endtime="20201029 18:15:19.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.477" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:15:19.476" endtime="20201029 18:15:19.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.479" level="INFO">VALUE: [4.822200000000054e-05, 4.797200000000029e-05, 4.833299999999763e-05, 4.840299999999895e-05, 4.805499999999824e-05, 4.863899999999963e-05, 4.798600000000333e-05, 4.848600000000036e-05, 4.7903000000001916e-05, 4.7903000000001916e-05, 4.845799999999775e-05, 4.797200000000029e-05, 4.816699999999827e-05, 4.773599999999961e-05, 4.813899999999913e-05, 4.790299999999845e-05, 4.829200000000186e-05, 4.852800000000254e-05, 4.787499999999931e-05, 4.802799999999857e-05, 4.7722999999999516e-05, 4.7973000000003235e-05, 4.834700000000067e-05, 4.773599999999961e-05, 4.858300000000135e-05, 4.788899999999888e-05, 4.783400000000007e-05, 4.854199999999864e-05, 4.78330000000006e-05, 4.852800000000254e-05, 4.858300000000135e-05, 4.831899999999806e-05, 4.798599999999986e-05, 4.85139999999995e-05, 4.783299999999713e-05, 4.804100000000214e-05, 4.816699999999827e-05, 4.7695000000000376e-05, 4.804199999999814e-05, 4.833400000000057e-05, 4.8458999999997227e-05, 4.817999999999836e-05, 4.773599999999961e-05, 4.798599999999986e-05, 4.845800000000122e-05, 4.823600000000011e-05, 4.815199999999922e-05, 4.838899999999938e-05, 4.81529999999987e-05, 4.852799999999907e-05]</msg>
<status status="PASS" starttime="20201029 18:15:19.478" endtime="20201029 18:15:19.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.473" endtime="20201029 18:15:19.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.556" endtime="20201029 18:15:19.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.555" endtime="20201029 18:15:19.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.553" endtime="20201029 18:15:19.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.124" endtime="20201029 18:15:19.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.123" endtime="20201029 18:15:19.577"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.585" endtime="20201029 18:15:19.604"></status>
</kw>
<msg timestamp="20201029 18:15:19.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.584" endtime="20201029 18:15:19.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.605" endtime="20201029 18:15:19.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.608" endtime="20201029 18:15:19.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.581" endtime="20201029 18:15:19.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.579" endtime="20201029 18:15:19.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.617" endtime="20201029 18:15:19.902"></status>
</kw>
<msg timestamp="20201029 18:15:19.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019370736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019419764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.615" endtime="20201029 18:15:19.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019370736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019419764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.906" endtime="20201029 18:15:19.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.914" endtime="20201029 18:15:19.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.613" endtime="20201029 18:15:19.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.611" endtime="20201029 18:15:19.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.921" level="INFO">${RESULT} = [{'diff': 4.902799999999957e-05}, {'diff': 4.933299999999863e-05}, {'diff': 4.947199999999832e-05}, {'diff': 4.876399999999975e-05}, {'diff': 4.902799999999957e-05}, {'diff': 4.955599999999921e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:19.918" endtime="20201029 18:15:19.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:19.926" level="INFO">${ACCURACY} = {'diff': [4.902799999999957e-05, 4.933299999999863e-05, 4.947199999999832e-05, 4.876399999999975e-05, 4.902799999999957e-05, 4.955599999999921e-05, 4.93330000000021e-05, 4.930599999999896e-05, 4.87779...</msg>
<status status="PASS" starttime="20201029 18:15:19.922" endtime="20201029 18:15:19.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.930" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:15:19.929" endtime="20201029 18:15:19.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.933" level="INFO">VALUE: [4.902799999999957e-05, 4.933299999999863e-05, 4.947199999999832e-05, 4.876399999999975e-05, 4.902799999999957e-05, 4.955599999999921e-05, 4.93330000000021e-05, 4.930599999999896e-05, 4.877799999999932e-05, 4.962500000000106e-05, 4.934799999999767e-05, 4.966600000000029e-05, 4.925000000000068e-05, 4.86940000000019e-05, 4.944399999999918e-05, 4.929099999999992e-05, 4.9651999999997254e-05, 4.880499999999899e-05, 4.92079999999985e-05, 4.855499999999874e-05, 4.96530000000002e-05, 4.884700000000117e-05, 4.866599999999929e-05, 4.934700000000167e-05, 4.8707999999998e-05, 4.96530000000002e-05, 4.9014e-05, 4.947200000000179e-05, 4.958299999999888e-05, 4.945800000000222e-05, 4.936099999999777e-05, 4.955499999999974e-05, 4.966600000000029e-05, 4.931900000000253e-05, 4.900000000000043e-05, 4.872199999999757e-05, 4.962499999999759e-05, 4.955499999999974e-05, 4.933299999999863e-05, 4.923600000000111e-05, 4.955499999999974e-05, 4.936100000000124e-05, 4.911099999999752e-05, 4.908299999999838e-05, 4.880599999999846e-05, 4.856899999999831e-05, 4.947199999999832e-05, 4.918099999999884e-05, 4.888899999999988e-05, 4.963900000000063e-05]</msg>
<status status="PASS" starttime="20201029 18:15:19.931" endtime="20201029 18:15:19.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.927" endtime="20201029 18:15:19.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.938" endtime="20201029 18:15:19.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.936" endtime="20201029 18:15:19.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.935" endtime="20201029 18:15:19.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.578" endtime="20201029 18:15:19.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.577" endtime="20201029 18:15:19.958"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.967" endtime="20201029 18:15:19.985"></status>
</kw>
<msg timestamp="20201029 18:15:19.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.965" endtime="20201029 18:15:19.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.987" endtime="20201029 18:15:19.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.989" endtime="20201029 18:15:19.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.963" endtime="20201029 18:15:19.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.961" endtime="20201029 18:15:19.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.998" endtime="20201029 18:15:20.299"></status>
</kw>
<msg timestamp="20201029 18:15:20.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019354125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019404681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.997" endtime="20201029 18:15:20.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019354125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019404681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.303" endtime="20201029 18:15:20.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.311" endtime="20201029 18:15:20.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.994" endtime="20201029 18:15:20.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.992" endtime="20201029 18:15:20.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.318" level="INFO">${RESULT} = [{'diff': 5.055600000000021e-05}, {'diff': 4.970899999999848e-05}, {'diff': 5.0402000000001473e-05}, {'diff': 4.981999999999903e-05}, {'diff': 5.066600000000129e-05}, {'diff': 5.015200000000122e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:20.314" endtime="20201029 18:15:20.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:20.322" level="INFO">${ACCURACY} = {'diff': [5.055600000000021e-05, 4.970899999999848e-05, 5.0402000000001473e-05, 4.981999999999903e-05, 5.066600000000129e-05, 5.015200000000122e-05, 5.061099999999902e-05, 4.979099999999695e-05, 4.977...</msg>
<status status="PASS" starttime="20201029 18:15:20.318" endtime="20201029 18:15:20.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.326" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:15:20.325" endtime="20201029 18:15:20.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.328" level="INFO">VALUE: [5.055600000000021e-05, 4.970899999999848e-05, 5.0402000000001473e-05, 4.981999999999903e-05, 5.066600000000129e-05, 5.015200000000122e-05, 5.061099999999902e-05, 4.979099999999695e-05, 4.977699999999738e-05, 5.040299999999748e-05, 5.059699999999945e-05, 5.040299999999748e-05, 5.038900000000138e-05, 5.036099999999877e-05, 5.031900000000006e-05, 4.969399999999943e-05, 4.998600000000186e-05, 5.045799999999975e-05, 5.012499999999809e-05, 5.051399999999803e-05, 5.034800000000214e-05, 5.0014000000001e-05, 4.970899999999848e-05, 5.038900000000138e-05, 4.973599999999814e-05, 5.0402000000001473e-05, 5.044400000000018e-05, 5.066600000000129e-05, 4.988900000000088e-05, 5.036099999999877e-05, 5.027800000000082e-05, 5.016600000000079e-05, 4.993000000000011e-05, 4.995899999999873e-05, 5.047199999999932e-05, 4.976400000000075e-05, 5.019399999999993e-05, 4.993099999999959e-05, 5.041700000000052e-05, 4.958399999999835e-05, 5.01530000000007e-05, 4.976400000000075e-05, 5.0222999999998547e-05, 4.990300000000045e-05, 5.027799999999735e-05, 5.016600000000079e-05, 5.036100000000224e-05, 5.0652000000001723e-05, 5.066700000000077e-05, 5.045799999999975e-05]</msg>
<status status="PASS" starttime="20201029 18:15:20.327" endtime="20201029 18:15:20.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.322" endtime="20201029 18:15:20.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.333" endtime="20201029 18:15:20.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.332" endtime="20201029 18:15:20.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.331" endtime="20201029 18:15:20.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.959" endtime="20201029 18:15:20.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.959" endtime="20201029 18:15:20.354"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.362" endtime="20201029 18:15:20.384"></status>
</kw>
<msg timestamp="20201029 18:15:20.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.361" endtime="20201029 18:15:20.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.386" endtime="20201029 18:15:20.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.388" endtime="20201029 18:15:20.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.358" endtime="20201029 18:15:20.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.356" endtime="20201029 18:15:20.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.397" endtime="20201029 18:15:20.684"></status>
</kw>
<msg timestamp="20201029 18:15:20.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.396" endtime="20201029 18:15:20.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.689" endtime="20201029 18:15:20.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.697" endtime="20201029 18:15:20.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.393" endtime="20201029 18:15:20.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.391" endtime="20201029 18:15:20.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.704" level="INFO">${RESULT} = [{'diff': 5.124999999999921e-05}, {'diff': 5.115299999999823e-05}, {'diff': 5.138899999999891e-05}, {'diff': 5.154200000000164e-05}, {'diff': 5.144500000000066e-05}, {'diff': 5.084799999999917e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:20.700" endtime="20201029 18:15:20.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:20.708" level="INFO">${ACCURACY} = {'diff': [5.124999999999921e-05, 5.115299999999823e-05, 5.138899999999891e-05, 5.154200000000164e-05, 5.144500000000066e-05, 5.084799999999917e-05, 5.102800000000157e-05, 5.072199999999957e-05, 5.1415...</msg>
<status status="PASS" starttime="20201029 18:15:20.705" endtime="20201029 18:15:20.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.712" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:15:20.711" endtime="20201029 18:15:20.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.715" level="INFO">VALUE: [5.124999999999921e-05, 5.115299999999823e-05, 5.138899999999891e-05, 5.154200000000164e-05, 5.144500000000066e-05, 5.084799999999917e-05, 5.102800000000157e-05, 5.072199999999957e-05, 5.1415999999998574e-05, 5.0708e-05, 5.12080000000005e-05, 5.148599999999989e-05, 5.095800000000025e-05, 5.090300000000145e-05, 5.15140000000025e-05, 5.124999999999921e-05, 5.086100000000274e-05, 5.111099999999952e-05, 5.077799999999785e-05, 5.102800000000157e-05, 5.074999999999871e-05, 5.144499999999719e-05, 5.090299999999798e-05, 5.152800000000207e-05, 5.084800000000264e-05, 5.072299999999905e-05, 5.140299999999848e-05, 5.151399999999903e-05, 5.124999999999921e-05, 5.112500000000256e-05, 5.155499999999827e-05, 5.16530000000022e-05, 5.098600000000286e-05, 5.068000000000086e-05, 5.075000000000218e-05, 5.08469999999997e-05, 5.102800000000157e-05, 5.0708e-05, 5.16530000000022e-05, 5.109699999999995e-05, 5.156900000000131e-05, 5.165299999999873e-05, 5.088900000000188e-05, 5.106899999999734e-05, 5.094500000000016e-05, 5.155499999999827e-05, 5.131900000000106e-05, 5.144500000000066e-05, 5.1223000000003016e-05, 5.08339999999996e-05]</msg>
<status status="PASS" starttime="20201029 18:15:20.713" endtime="20201029 18:15:20.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.709" endtime="20201029 18:15:20.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.721" endtime="20201029 18:15:20.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.719" endtime="20201029 18:15:20.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.718" endtime="20201029 18:15:20.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.355" endtime="20201029 18:15:20.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.354" endtime="20201029 18:15:20.741"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.750" endtime="20201029 18:15:20.770"></status>
</kw>
<msg timestamp="20201029 18:15:20.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.749" endtime="20201029 18:15:20.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.771" endtime="20201029 18:15:20.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.774" endtime="20201029 18:15:20.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.746" endtime="20201029 18:15:20.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.744" endtime="20201029 18:15:20.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.783" endtime="20201029 18:15:21.085"></status>
</kw>
<msg timestamp="20201029 18:15:21.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.781" endtime="20201029 18:15:21.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.089" endtime="20201029 18:15:21.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.098" endtime="20201029 18:15:21.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.779" endtime="20201029 18:15:21.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.777" endtime="20201029 18:15:21.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.104" level="INFO">${RESULT} = [{'diff': 5.251400000000003e-05}, {'diff': 5.23340000000011e-05}, {'diff': 5.23479999999972e-05}, {'diff': 5.226399999999978e-05}, {'diff': 5.2415999999999574e-05}, {'diff': 5.202699999999963e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:21.101" endtime="20201029 18:15:21.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:21.109" level="INFO">${ACCURACY} = {'diff': [5.251400000000003e-05, 5.23340000000011e-05, 5.23479999999972e-05, 5.226399999999978e-05, 5.2415999999999574e-05, 5.202699999999963e-05, 5.198600000000039e-05, 5.252700000000013e-05, 5.17079...</msg>
<status status="PASS" starttime="20201029 18:15:21.105" endtime="20201029 18:15:21.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.114" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:15:21.113" endtime="20201029 18:15:21.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.116" level="INFO">VALUE: [5.251400000000003e-05, 5.23340000000011e-05, 5.23479999999972e-05, 5.226399999999978e-05, 5.2415999999999574e-05, 5.202699999999963e-05, 5.198600000000039e-05, 5.252700000000013e-05, 5.1707999999997534e-05, 5.174999999999971e-05, 5.20409999999992e-05, 5.259699999999798e-05, 5.201399999999953e-05, 5.237499999999687e-05, 5.213899999999966e-05, 5.22080000000015e-05, 5.188899999999941e-05, 5.205600000000171e-05, 5.209700000000095e-05, 5.195900000000073e-05, 5.236100000000077e-05, 5.263900000000016e-05, 5.231899999999859e-05, 5.219500000000141e-05, 5.222200000000107e-05, 5.208400000000085e-05, 5.22080000000015e-05, 5.2457999999998284e-05, 5.201399999999953e-05, 5.227699999999988e-05, 5.213899999999966e-05, 5.251400000000003e-05, 5.250000000000046e-05, 5.1943999999998214e-05, 5.174999999999971e-05, 5.233300000000163e-05, 5.257000000000178e-05, 5.188899999999941e-05, 5.226399999999978e-05, 5.261100000000102e-05, 5.168100000000134e-05, 5.240300000000295e-05, 5.226399999999978e-05, 5.188899999999941e-05, 5.25279999999996e-05, 5.227800000000282e-05, 5.250000000000046e-05, 5.208300000000138e-05, 5.238899999999991e-05, 5.2402000000000004e-05]</msg>
<status status="PASS" starttime="20201029 18:15:21.115" endtime="20201029 18:15:21.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.110" endtime="20201029 18:15:21.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.121" endtime="20201029 18:15:21.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.120" endtime="20201029 18:15:21.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.119" endtime="20201029 18:15:21.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.742" endtime="20201029 18:15:21.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.742" endtime="20201029 18:15:21.142"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.151" endtime="20201029 18:15:21.170"></status>
</kw>
<msg timestamp="20201029 18:15:21.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.149" endtime="20201029 18:15:21.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.171" endtime="20201029 18:15:21.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.174" endtime="20201029 18:15:21.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.147" endtime="20201029 18:15:21.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.144" endtime="20201029 18:15:21.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.183" endtime="20201029 18:15:21.469"></status>
</kw>
<msg timestamp="20201029 18:15:21.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019699847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.181" endtime="20201029 18:15:21.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019699847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.473" endtime="20201029 18:15:21.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.481" endtime="20201029 18:15:21.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.179" endtime="20201029 18:15:21.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.177" endtime="20201029 18:15:21.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.488" level="INFO">${RESULT} = [{'diff': 5.312500000000109e-05}, {'diff': 5.308299999999891e-05}, {'diff': 5.308299999999891e-05}, {'diff': 5.32080000000025e-05}, {'diff': 5.313900000000066e-05}, {'diff': 5.31669999999998e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:21.485" endtime="20201029 18:15:21.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:21.492" level="INFO">${ACCURACY} = {'diff': [5.312500000000109e-05, 5.308299999999891e-05, 5.308299999999891e-05, 5.32080000000025e-05, 5.313900000000066e-05, 5.31669999999998e-05, 5.347200000000232e-05, 5.276400000000028e-05, 5.348599...</msg>
<status status="PASS" starttime="20201029 18:15:21.489" endtime="20201029 18:15:21.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.497" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:15:21.496" endtime="20201029 18:15:21.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.499" level="INFO">VALUE: [5.312500000000109e-05, 5.308299999999891e-05, 5.308299999999891e-05, 5.32080000000025e-05, 5.313900000000066e-05, 5.31669999999998e-05, 5.347200000000232e-05, 5.276400000000028e-05, 5.3485999999998424e-05, 5.327800000000035e-05, 5.337500000000134e-05, 5.290299999999998e-05, 5.319499999999894e-05, 5.279199999999942e-05, 5.306899999999934e-05, 5.340300000000048e-05, 5.347299999999833e-05, 5.358399999999888e-05, 5.351299999999809e-05, 5.287500000000084e-05, 5.330500000000002e-05, 5.362499999999812e-05, 5.297200000000182e-05, 5.305599999999924e-05, 5.2943999999999214e-05, 5.286100000000127e-05, 5.2693999999998964e-05, 5.2735999999997674e-05, 5.255499999999927e-05, 5.308299999999891e-05, 5.333299999999916e-05, 5.347200000000232e-05, 5.309700000000195e-05, 5.336200000000124e-05, 5.322299999999808e-05, 5.330500000000002e-05, 5.333399999999863e-05, 5.305499999999977e-05, 5.31669999999998e-05, 5.304199999999967e-05, 5.281900000000256e-05, 5.283299999999866e-05, 5.33470000000022e-05, 5.281900000000256e-05, 5.2902000000000504e-05, 5.365300000000073e-05, 5.329199999999992e-05, 5.272200000000157e-05, 5.331899999999959e-05, 5.309699999999848e-05]</msg>
<status status="PASS" starttime="20201029 18:15:21.498" endtime="20201029 18:15:21.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.493" endtime="20201029 18:15:21.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.504" endtime="20201029 18:15:21.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.503" endtime="20201029 18:15:21.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.501" endtime="20201029 18:15:21.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.143" endtime="20201029 18:15:21.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.142" endtime="20201029 18:15:21.525"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.533" endtime="20201029 18:15:21.556"></status>
</kw>
<msg timestamp="20201029 18:15:21.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.532" endtime="20201029 18:15:21.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.557" endtime="20201029 18:15:21.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.560" endtime="20201029 18:15:21.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.529" endtime="20201029 18:15:21.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.527" endtime="20201029 18:15:21.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.570" endtime="20201029 18:15:21.869"></status>
</kw>
<msg timestamp="20201029 18:15:21.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020542444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.568" endtime="20201029 18:15:21.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020542444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.874" endtime="20201029 18:15:21.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.882" endtime="20201029 18:15:21.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.565" endtime="20201029 18:15:21.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.563" endtime="20201029 18:15:21.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.888" level="INFO">${RESULT} = [{'diff': 5.4637999999999215e-05}, {'diff': 5.383300000000313e-05}, {'diff': 5.412500000000209e-05}, {'diff': 5.4458000000000284e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.43609999999993e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:21.885" endtime="20201029 18:15:21.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:21.892" level="INFO">${ACCURACY} = {'diff': [5.4637999999999215e-05, 5.383300000000313e-05, 5.412500000000209e-05, 5.4458000000000284e-05, 5.3721999999999104e-05, 5.43609999999993e-05, 5.405600000000024e-05, 5.4458000000000284e-05, 5.4...</msg>
<status status="PASS" starttime="20201029 18:15:21.889" endtime="20201029 18:15:21.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.897" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:15:21.896" endtime="20201029 18:15:21.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.899" level="INFO">VALUE: [5.4637999999999215e-05, 5.383300000000313e-05, 5.412500000000209e-05, 5.4458000000000284e-05, 5.3721999999999104e-05, 5.43609999999993e-05, 5.405600000000024e-05, 5.4458000000000284e-05, 5.4527999999998134e-05, 5.412499999999862e-05, 5.391700000000055e-05, 5.441700000000105e-05, 5.445899999999976e-05, 5.441699999999758e-05, 5.387499999999837e-05, 5.432000000000006e-05, 5.3929999999997175e-05, 5.459699999999998e-05, 5.4208000000000034e-05, 5.40280000000011e-05, 5.438899999999844e-05, 5.440299999999801e-05, 5.379099999999748e-05, 5.38609999999988e-05, 5.3693999999999964e-05, 5.4458000000000284e-05, 5.3721999999999104e-05, 5.4013999999998064e-05, 5.418100000000037e-05, 5.3985999999998924e-05, 5.462499999999912e-05, 5.440300000000148e-05, 5.4263999999998314e-05, 5.423600000000264e-05, 5.38340000000026e-05, 5.4277999999997883e-05, 5.438899999999844e-05, 5.3749999999998244e-05, 5.4263999999998314e-05, 5.377800000000085e-05, 5.4471999999999854e-05, 5.43609999999993e-05, 5.418100000000037e-05, 5.3693999999999964e-05, 5.406900000000034e-05, 5.463899999999869e-05, 5.381900000000009e-05, 5.388900000000141e-05, 5.459699999999998e-05, 5.3693999999999964e-05]</msg>
<status status="PASS" starttime="20201029 18:15:21.898" endtime="20201029 18:15:21.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.893" endtime="20201029 18:15:21.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.905" endtime="20201029 18:15:21.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.904" endtime="20201029 18:15:21.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.903" endtime="20201029 18:15:21.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.526" endtime="20201029 18:15:21.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.525" endtime="20201029 18:15:21.926"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.935" endtime="20201029 18:15:21.955"></status>
</kw>
<msg timestamp="20201029 18:15:21.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.933" endtime="20201029 18:15:21.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.956" endtime="20201029 18:15:21.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.959" endtime="20201029 18:15:21.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.931" endtime="20201029 18:15:21.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.928" endtime="20201029 18:15:21.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.970" endtime="20201029 18:15:22.256"></status>
</kw>
<msg timestamp="20201029 18:15:22.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020229208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.968" endtime="20201029 18:15:22.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020229208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.260" endtime="20201029 18:15:22.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.268" endtime="20201029 18:15:22.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.965" endtime="20201029 18:15:22.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.962" endtime="20201029 18:15:22.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.274" level="INFO">${RESULT} = [{'diff': 5.479099999999848e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.508299999999744e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.55549999999988e-05}, {'diff': 5.563900000000316e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:22.271" endtime="20201029 18:15:22.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:22.279" level="INFO">${ACCURACY} = {'diff': [5.479099999999848e-05, 5.4735999999999674e-05, 5.508299999999744e-05, 5.4749999999999244e-05, 5.55549999999988e-05, 5.563900000000316e-05, 5.4944000000001214e-05, 5.48479999999997e-05, 5.526...</msg>
<status status="PASS" starttime="20201029 18:15:22.275" endtime="20201029 18:15:22.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.284" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:15:22.283" endtime="20201029 18:15:22.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.286" level="INFO">VALUE: [5.479099999999848e-05, 5.4735999999999674e-05, 5.508299999999744e-05, 5.4749999999999244e-05, 5.55549999999988e-05, 5.563900000000316e-05, 5.4944000000001214e-05, 5.48479999999997e-05, 5.526400000000278e-05, 5.4957999999997315e-05, 5.5472000000000854e-05, 5.56809999999984e-05, 5.473600000000314e-05, 5.491699999999808e-05, 5.520899999999704e-05, 5.534700000000073e-05, 5.481900000000109e-05, 5.487500000000284e-05, 5.509799999999995e-05, 5.508300000000091e-05, 5.506900000000134e-05, 5.527699999999941e-05, 5.476400000000228e-05, 5.5402000000003004e-05, 5.5472000000000854e-05, 5.537499999999987e-05, 5.533300000000116e-05, 5.561100000000055e-05, 5.493100000000112e-05, 5.4985999999999924e-05, 5.512499999999962e-05, 5.557000000000131e-05, 5.545900000000076e-05, 5.490299999999851e-05, 5.4999999999999494e-05, 5.513899999999919e-05, 5.509799999999995e-05, 5.5415999999999105e-05, 5.484700000000023e-05, 5.5249999999999744e-05, 5.527699999999941e-05, 5.501299999999959e-05, 5.509700000000048e-05, 5.5235999999996704e-05, 5.5221999999997134e-05, 5.566699999999883e-05, 5.565300000000273e-05, 5.563899999999969e-05, 5.48609999999998e-05, 5.508299999999744e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.285" endtime="20201029 18:15:22.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.280" endtime="20201029 18:15:22.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.291" endtime="20201029 18:15:22.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.290" endtime="20201029 18:15:22.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.289" endtime="20201029 18:15:22.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.927" endtime="20201029 18:15:22.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.926" endtime="20201029 18:15:22.312"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.320" endtime="20201029 18:15:22.339"></status>
</kw>
<msg timestamp="20201029 18:15:22.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.319" endtime="20201029 18:15:22.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.341" endtime="20201029 18:15:22.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.343" endtime="20201029 18:15:22.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.316" endtime="20201029 18:15:22.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.314" endtime="20201029 18:15:22.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.352" endtime="20201029 18:15:22.639"></status>
</kw>
<msg timestamp="20201029 18:15:22.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019484028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.351" endtime="20201029 18:15:22.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019484028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.643" endtime="20201029 18:15:22.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.651" endtime="20201029 18:15:22.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.348" endtime="20201029 18:15:22.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.346" endtime="20201029 18:15:22.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.658" level="INFO">${RESULT} = [{'diff': 5.644500000000219e-05}, {'diff': 5.661099999999808e-05}, {'diff': 5.6014000000000064e-05}, {'diff': 5.58480000000007e-05}, {'diff': 5.5986000000000924e-05}, {'diff': 5.597300000000083e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:22.655" endtime="20201029 18:15:22.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:22.662" level="INFO">${ACCURACY} = {'diff': [5.644500000000219e-05, 5.661099999999808e-05, 5.6014000000000064e-05, 5.58480000000007e-05, 5.5986000000000924e-05, 5.597300000000083e-05, 5.5707999999998065e-05, 5.611100000000105e-05, 5.60...</msg>
<status status="PASS" starttime="20201029 18:15:22.659" endtime="20201029 18:15:22.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.667" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:15:22.666" endtime="20201029 18:15:22.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.669" level="INFO">VALUE: [5.644500000000219e-05, 5.661099999999808e-05, 5.6014000000000064e-05, 5.58480000000007e-05, 5.5986000000000924e-05, 5.597300000000083e-05, 5.5707999999998065e-05, 5.611100000000105e-05, 5.608300000000191e-05, 5.6152000000000285e-05, 5.6194000000002464e-05, 5.5750000000000244e-05, 5.5929999999999175e-05, 5.5722000000001104e-05, 5.6528000000000134e-05, 5.609699999999801e-05, 5.638900000000044e-05, 5.644499999999872e-05, 5.662500000000112e-05, 5.613900000000019e-05, 5.606899999999887e-05, 5.6277999999999884e-05, 5.586099999999733e-05, 5.563899999999969e-05, 5.6222000000001604e-05, 5.634700000000173e-05, 5.652700000000066e-05, 5.552699999999966e-05, 5.663900000000069e-05, 5.5887999999996996e-05, 5.608300000000191e-05, 5.641699999999958e-05, 5.6541999999999704e-05, 5.633299999999869e-05, 5.640300000000001e-05, 5.609700000000148e-05, 5.640300000000001e-05, 5.6541999999999704e-05, 5.6514000000000564e-05, 5.6528000000000134e-05, 5.620900000000151e-05, 5.6055999999998773e-05, 5.657000000000231e-05, 5.613900000000019e-05, 5.638900000000044e-05, 5.637500000000087e-05, 5.6416000000000105e-05, 5.627700000000041e-05, 5.6207999999998565e-05, 5.6443999999999245e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.668" endtime="20201029 18:15:22.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.663" endtime="20201029 18:15:22.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.674" endtime="20201029 18:15:22.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.672" endtime="20201029 18:15:22.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.671" endtime="20201029 18:15:22.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.313" endtime="20201029 18:15:22.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.312" endtime="20201029 18:15:22.695"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.703" endtime="20201029 18:15:22.723"></status>
</kw>
<msg timestamp="20201029 18:15:22.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.702" endtime="20201029 18:15:22.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.725" endtime="20201029 18:15:22.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.727" endtime="20201029 18:15:22.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.699" endtime="20201029 18:15:22.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.697" endtime="20201029 18:15:22.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.736" endtime="20201029 18:15:23.022"></status>
</kw>
<msg timestamp="20201029 18:15:23.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020672403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020729194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.735" endtime="20201029 18:15:23.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020672403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020729194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.026" endtime="20201029 18:15:23.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.034" endtime="20201029 18:15:23.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.732" endtime="20201029 18:15:23.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.731" endtime="20201029 18:15:23.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.040" level="INFO">${RESULT} = [{'diff': 5.679100000000048e-05}, {'diff': 5.7457999999999815e-05}, {'diff': 5.75550000000008e-05}, {'diff': 5.6791999999999954e-05}, {'diff': 5.680500000000005e-05}, {'diff': 5.7472000000002854e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:23.037" endtime="20201029 18:15:23.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.045" level="INFO">${ACCURACY} = {'diff': [5.679100000000048e-05, 5.7457999999999815e-05, 5.75550000000008e-05, 5.6791999999999954e-05, 5.680500000000005e-05, 5.7472000000002854e-05, 5.761099999999908e-05, 5.7221999999999135e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 18:15:23.041" endtime="20201029 18:15:23.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.049" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.048" endtime="20201029 18:15:23.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.052" level="INFO">VALUE: [5.679100000000048e-05, 5.7457999999999815e-05, 5.75550000000008e-05, 5.6791999999999954e-05, 5.680500000000005e-05, 5.7472000000002854e-05, 5.761099999999908e-05, 5.7221999999999135e-05, 5.680500000000005e-05, 5.738899999999797e-05, 5.7278000000000884e-05, 5.765299999999779e-05, 5.7457999999999815e-05, 5.740300000000101e-05, 5.697299999999836e-05, 5.7069999999999343e-05, 5.709800000000195e-05, 5.738899999999797e-05, 5.683299999999919e-05, 5.7499999999998525e-05, 5.7471999999999385e-05, 5.736099999999883e-05, 5.713899999999772e-05, 5.6749999999997774e-05, 5.738900000000144e-05, 5.731900000000012e-05, 5.6791999999999954e-05, 5.6805999999999524e-05, 5.7278000000000884e-05, 5.711099999999858e-05, 5.7263999999997844e-05, 5.6736000000001674e-05, 5.715300000000076e-05, 5.7278000000000884e-05, 5.6791999999999954e-05, 5.719499999999947e-05, 5.737500000000187e-05, 5.759699999999951e-05, 5.713900000000119e-05, 5.729099999999751e-05, 5.681899999999962e-05, 5.7166000000000855e-05, 5.6943999999999745e-05, 5.7249999999998274e-05, 5.7513999999998094e-05, 5.737500000000187e-05, 5.715300000000076e-05, 5.7472000000002854e-05, 5.7207999999999565e-05, 5.6778000000000384e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.050" endtime="20201029 18:15:23.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.045" endtime="20201029 18:15:23.054"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.057" endtime="20201029 18:15:23.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.056" endtime="20201029 18:15:23.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.055" endtime="20201029 18:15:23.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.696" endtime="20201029 18:15:23.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.695" endtime="20201029 18:15:23.078"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.087" endtime="20201029 18:15:23.105"></status>
</kw>
<msg timestamp="20201029 18:15:23.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.085" endtime="20201029 18:15:23.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.107" endtime="20201029 18:15:23.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.109" endtime="20201029 18:15:23.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.082" endtime="20201029 18:15:23.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.080" endtime="20201029 18:15:23.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.118" endtime="20201029 18:15:23.403"></status>
</kw>
<msg timestamp="20201029 18:15:23.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019493944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.116" endtime="20201029 18:15:23.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019493944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.407" endtime="20201029 18:15:23.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.416" endtime="20201029 18:15:23.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.114" endtime="20201029 18:15:23.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.112" endtime="20201029 18:15:23.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.422" level="INFO">${RESULT} = [{'diff': 5.793100000000065e-05}, {'diff': 5.784699999999976e-05}, {'diff': 5.866700000000183e-05}, {'diff': 5.784699999999976e-05}, {'diff': 5.8027999999998164e-05}, {'diff': 5.8499999999999525e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:23.419" endtime="20201029 18:15:23.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.427" level="INFO">${ACCURACY} = {'diff': [5.793100000000065e-05, 5.784699999999976e-05, 5.866700000000183e-05, 5.784699999999976e-05, 5.8027999999998164e-05, 5.8499999999999525e-05, 5.8056000000000774e-05, 5.772299999999911e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 18:15:23.423" endtime="20201029 18:15:23.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.431" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.430" endtime="20201029 18:15:23.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.434" level="INFO">VALUE: [5.793100000000065e-05, 5.784699999999976e-05, 5.866700000000183e-05, 5.784699999999976e-05, 5.8027999999998164e-05, 5.8499999999999525e-05, 5.8056000000000774e-05, 5.772299999999911e-05, 5.8291999999997984e-05, 5.815300000000176e-05, 5.790300000000151e-05, 5.823699999999918e-05, 5.784699999999976e-05, 5.7971999999999885e-05, 5.784699999999976e-05, 5.834699999999679e-05, 5.7943999999997275e-05, 5.863899999999922e-05, 5.815299999999829e-05, 5.791700000000108e-05, 5.8513999999999095e-05, 5.8334000000000163e-05, 5.8208000000000565e-05, 5.8306000000001024e-05, 5.7749999999998775e-05, 5.8264000000002314e-05, 5.795899999999979e-05, 5.78749999999989e-05, 5.7778000000001384e-05, 5.788899999999847e-05, 5.8222000000000135e-05, 5.801299999999912e-05, 5.7721999999999635e-05, 5.7888000000002465e-05, 5.8263999999998844e-05, 5.7958000000000315e-05, 5.861100000000008e-05, 5.8500000000002994e-05, 5.862499999999965e-05, 5.8444000000001245e-05, 5.784699999999976e-05, 5.788899999999847e-05, 5.8597999999999983e-05, 5.815299999999829e-05, 5.809700000000001e-05, 5.815300000000176e-05, 5.804100000000173e-05, 5.7915999999998136e-05, 5.804100000000173e-05, 5.861100000000008e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.432" endtime="20201029 18:15:23.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.428" endtime="20201029 18:15:23.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.439" endtime="20201029 18:15:23.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.437" endtime="20201029 18:15:23.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.436" endtime="20201029 18:15:23.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.079" endtime="20201029 18:15:23.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.078" endtime="20201029 18:15:23.459"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.468" endtime="20201029 18:15:23.486"></status>
</kw>
<msg timestamp="20201029 18:15:23.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.466" endtime="20201029 18:15:23.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.488" endtime="20201029 18:15:23.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.490" endtime="20201029 18:15:23.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.464" endtime="20201029 18:15:23.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.462" endtime="20201029 18:15:23.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.499" endtime="20201029 18:15:23.787"></status>
</kw>
<msg timestamp="20201029 18:15:23.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01937075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019430292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:23.498" endtime="20201029 18:15:23.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01937075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019430292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:23.791" endtime="20201029 18:15:23.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.799" endtime="20201029 18:15:23.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.495" endtime="20201029 18:15:23.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.494" endtime="20201029 18:15:23.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.806" level="INFO">${RESULT} = [{'diff': 5.9541999999999234e-05}, {'diff': 5.8834000000000664e-05}, {'diff': 5.945900000000129e-05}, {'diff': 5.879100000000248e-05}, {'diff': 5.9000000000000025e-05}, {'diff': 5.927699999999994e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:23.802" endtime="20201029 18:15:23.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.810" level="INFO">${ACCURACY} = {'diff': [5.9541999999999234e-05, 5.8834000000000664e-05, 5.945900000000129e-05, 5.879100000000248e-05, 5.9000000000000025e-05, 5.927699999999994e-05, 5.95689999999989e-05, 5.965299999999979e-05, 5.87...</msg>
<status status="PASS" starttime="20201029 18:15:23.807" endtime="20201029 18:15:23.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.814" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.813" endtime="20201029 18:15:23.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.817" level="INFO">VALUE: [5.9541999999999234e-05, 5.8834000000000664e-05, 5.945900000000129e-05, 5.879100000000248e-05, 5.9000000000000025e-05, 5.927699999999994e-05, 5.95689999999989e-05, 5.965299999999979e-05, 5.8707999999997595e-05, 5.8707999999997595e-05, 5.891699999999861e-05, 5.88749999999999e-05, 5.965299999999979e-05, 5.9207999999998095e-05, 5.870900000000054e-05, 5.915299999999929e-05, 5.8722000000000635e-05, 5.9250000000000275e-05, 5.8986000000000455e-05, 5.9348000000000734e-05, 5.9000000000000025e-05, 5.905499999999883e-05, 5.938899999999997e-05, 5.88749999999999e-05, 5.9499999999997055e-05, 5.9208000000001565e-05, 5.909700000000101e-05, 5.940299999999954e-05, 5.9514000000000095e-05, 5.966699999999936e-05, 5.888899999999947e-05, 5.913899999999972e-05, 5.9472000000001385e-05, 5.8764000000002814e-05, 5.9055999999998304e-05, 5.9458000000001815e-05, 5.965299999999979e-05, 5.870900000000054e-05, 5.8583999999996944e-05, 5.945900000000129e-05, 5.8848000000000233e-05, 5.9041999999998734e-05, 5.9500000000000525e-05, 5.886100000000033e-05, 5.908300000000144e-05, 5.8679999999998456e-05, 5.8972000000000885e-05, 5.88749999999999e-05, 5.886100000000033e-05, 5.931899999999865e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.815" endtime="20201029 18:15:23.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.811" endtime="20201029 18:15:23.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.821" endtime="20201029 18:15:23.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.820" endtime="20201029 18:15:23.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.819" endtime="20201029 18:15:23.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.460" endtime="20201029 18:15:23.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.460" endtime="20201029 18:15:23.842"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.851" endtime="20201029 18:15:23.873"></status>
</kw>
<msg timestamp="20201029 18:15:23.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.849" endtime="20201029 18:15:23.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.875" endtime="20201029 18:15:23.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.877" endtime="20201029 18:15:23.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.847" endtime="20201029 18:15:23.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.844" endtime="20201029 18:15:23.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.886" endtime="20201029 18:15:24.171"></status>
</kw>
<msg timestamp="20201029 18:15:24.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02271775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022777722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:23.884" endtime="20201029 18:15:24.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02271775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022777722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:24.175" endtime="20201029 18:15:24.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.184" endtime="20201029 18:15:24.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.882" endtime="20201029 18:15:24.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.880" endtime="20201029 18:15:24.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.190" level="INFO">${RESULT} = [{'diff': 5.9972000000001885e-05}, {'diff': 6.052699999999772e-05}, {'diff': 5.984699999999829e-05}, {'diff': 6.044500000000272e-05}, {'diff': 5.9693999999999026e-05}, {'diff': 6.0569999999999374e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:24.187" endtime="20201029 18:15:24.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:24.194" level="INFO">${ACCURACY} = {'diff': [5.9972000000001885e-05, 6.052699999999772e-05, 5.984699999999829e-05, 6.044500000000272e-05, 5.9693999999999026e-05, 6.0569999999999374e-05, 5.990300000000004e-05, 6.015299999999682e-05, 6.0...</msg>
<status status="PASS" starttime="20201029 18:15:24.191" endtime="20201029 18:15:24.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.198" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:15:24.197" endtime="20201029 18:15:24.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.201" level="INFO">VALUE: [5.9972000000001885e-05, 6.052699999999772e-05, 5.984699999999829e-05, 6.044500000000272e-05, 5.9693999999999026e-05, 6.0569999999999374e-05, 5.990300000000004e-05, 6.015299999999682e-05, 6.008299999999897e-05, 6.033300000000269e-05, 6.041700000000011e-05, 5.9749999999997305e-05, 6.0569999999999374e-05, 6.0263999999997375e-05, 5.9764000000000345e-05, 6.013899999999725e-05, 5.9750000000000775e-05, 5.977700000000044e-05, 5.9943999999999276e-05, 5.981899999999915e-05, 6.059700000000251e-05, 6.00689999999994e-05, 6.034699999999879e-05, 6.0207999999999096e-05, 5.9792000000002954e-05, 6.0528000000000665e-05, 5.984700000000176e-05, 6.013900000000072e-05, 5.9708000000002065e-05, 6.038900000000097e-05, 6.063899999999775e-05, 6.063899999999775e-05, 6.0555999999999804e-05, 6.0291999999999984e-05, 6.063799999999828e-05, 5.9972000000001885e-05, 5.986100000000133e-05, 5.979100000000001e-05, 5.983299999999872e-05, 6.061100000000208e-05, 5.9791999999999484e-05, 6.059700000000251e-05, 6.0055999999999304e-05, 5.9806000000002524e-05, 5.965299999999979e-05, 6.008299999999897e-05, 5.9834000000001664e-05, 6.002700000000069e-05, 6.0278000000000415e-05, 6.0291999999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:15:24.200" endtime="20201029 18:15:24.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.195" endtime="20201029 18:15:24.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.207" endtime="20201029 18:15:24.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.205" endtime="20201029 18:15:24.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.204" endtime="20201029 18:15:24.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.843" endtime="20201029 18:15:24.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.842" endtime="20201029 18:15:24.227"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.236" endtime="20201029 18:15:24.255"></status>
</kw>
<msg timestamp="20201029 18:15:24.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.234" endtime="20201029 18:15:24.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.256" endtime="20201029 18:15:24.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.259" endtime="20201029 18:15:24.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.232" endtime="20201029 18:15:24.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.230" endtime="20201029 18:15:24.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.267" endtime="20201029 18:15:24.553"></status>
</kw>
<msg timestamp="20201029 18:15:24.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019271542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019332931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.266" endtime="20201029 18:15:24.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019271542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019332931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.557" endtime="20201029 18:15:24.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.566" endtime="20201029 18:15:24.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.263" endtime="20201029 18:15:24.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.262" endtime="20201029 18:15:24.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.572" level="INFO">${RESULT} = [{'diff': 6.138900000000197e-05}, {'diff': 6.106899999999693e-05}, {'diff': 6.161099999999961e-05}, {'diff': 6.145800000000035e-05}, {'diff': 6.109699999999954e-05}, {'diff': 6.0750000000001775e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:24.569" endtime="20201029 18:15:24.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:24.577" level="INFO">${ACCURACY} = {'diff': [6.138900000000197e-05, 6.106899999999693e-05, 6.161099999999961e-05, 6.145800000000035e-05, 6.109699999999954e-05, 6.0750000000001775e-05, 6.127799999999795e-05, 6.140299999999807e-05, 6.126...</msg>
<status status="PASS" starttime="20201029 18:15:24.573" endtime="20201029 18:15:24.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.581" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:15:24.580" endtime="20201029 18:15:24.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.584" level="INFO">VALUE: [6.138900000000197e-05, 6.106899999999693e-05, 6.161099999999961e-05, 6.145800000000035e-05, 6.109699999999954e-05, 6.0750000000001775e-05, 6.127799999999795e-05, 6.140299999999807e-05, 6.126400000000184e-05, 6.12080000000001e-05, 6.083299999999972e-05, 6.15279999999982e-05, 6.116699999999739e-05, 6.0888999999998e-05, 6.120899999999957e-05, 6.132000000000012e-05, 6.147299999999939e-05, 6.0819999999999624e-05, 6.154199999999777e-05, 6.109699999999954e-05, 6.0957999999999846e-05, 6.104099999999779e-05, 6.154199999999777e-05, 6.0777999999997445e-05, 6.165299999999832e-05, 6.116700000000086e-05, 6.131900000000065e-05, 6.084699999999929e-05, 6.13339999999997e-05, 6.156899999999743e-05, 6.151399999999863e-05, 6.1195e-05, 6.144400000000078e-05, 6.095899999999932e-05, 6.130600000000055e-05, 6.145899999999982e-05, 6.148600000000295e-05, 6.113900000000172e-05, 6.0999999999998555e-05, 6.113899999999825e-05, 6.13889999999985e-05, 6.1013999999998125e-05, 6.126400000000184e-05, 6.109700000000301e-05, 6.12080000000001e-05, 6.0999999999998555e-05, 6.126399999999838e-05, 6.152699999999872e-05, 6.158300000000047e-05, 6.0721999999999166e-05]</msg>
<status status="PASS" starttime="20201029 18:15:24.582" endtime="20201029 18:15:24.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.578" endtime="20201029 18:15:24.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.644" endtime="20201029 18:15:24.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.642" endtime="20201029 18:15:24.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.641" endtime="20201029 18:15:24.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.228" endtime="20201029 18:15:24.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.228" endtime="20201029 18:15:24.667"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.685" endtime="20201029 18:15:24.710"></status>
</kw>
<msg timestamp="20201029 18:15:24.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.682" endtime="20201029 18:15:24.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.713" endtime="20201029 18:15:24.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.718" endtime="20201029 18:15:24.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.677" endtime="20201029 18:15:24.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.672" endtime="20201029 18:15:24.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.737" endtime="20201029 18:15:25.025"></status>
</kw>
<msg timestamp="20201029 18:15:25.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033249083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033311361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.734" endtime="20201029 18:15:25.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033249083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033311361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.029" endtime="20201029 18:15:25.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.037" endtime="20201029 18:15:25.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.728" endtime="20201029 18:15:25.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.725" endtime="20201029 18:15:25.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.043" level="INFO">${RESULT} = [{'diff': 6.227799999999895e-05}, {'diff': 6.247200000000092e-05}, {'diff': 6.215299999999535e-05}, {'diff': 6.23750000000034e-05}, {'diff': 6.216700000000186e-05}, {'diff': 6.25279999999992e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:25.040" endtime="20201029 18:15:25.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.048" level="INFO">${ACCURACY} = {'diff': [6.227799999999895e-05, 6.247200000000092e-05, 6.215299999999535e-05, 6.23750000000034e-05, 6.216700000000186e-05, 6.25279999999992e-05, 6.252699999999972e-05, 6.241699999999517e-05, 6.242999...</msg>
<status status="PASS" starttime="20201029 18:15:25.044" endtime="20201029 18:15:25.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.052" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.051" endtime="20201029 18:15:25.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.055" level="INFO">VALUE: [6.227799999999895e-05, 6.247200000000092e-05, 6.215299999999535e-05, 6.23750000000034e-05, 6.216700000000186e-05, 6.25279999999992e-05, 6.252699999999972e-05, 6.241699999999517e-05, 6.242999999999527e-05, 6.194500000000075e-05, 6.245900000000082e-05, 6.183300000000419e-05, 6.248600000000049e-05, 6.22499999999998e-05, 6.195800000000085e-05, 6.17080000000006e-05, 6.195800000000085e-05, 6.188899999999553e-05, 6.220799999999416e-05, 6.195799999999391e-05, 6.245800000000135e-05, 6.173599999999974e-05, 6.184699999999682e-05, 6.191699999999467e-05, 6.212499999999621e-05, 6.261199999999661e-05, 6.173599999999974e-05, 6.208399999999697e-05, 6.222300000000014e-05, 6.222200000000067e-05, 6.240199999999613e-05, 6.18750000000029e-05, 6.25279999999992e-05, 6.241600000000264e-05, 6.199999999999956e-05, 6.241700000000211e-05, 6.17499999999993e-05, 6.233300000000469e-05, 6.229199999999852e-05, 6.17080000000006e-05, 6.262499999999671e-05, 6.190300000000204e-05, 6.226399999999938e-05, 6.23620000000033e-05, 6.220900000000057e-05, 6.170900000000007e-05, 6.205599999999784e-05, 6.208300000000444e-05, 6.256900000000537e-05, 6.17080000000006e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.053" endtime="20201029 18:15:25.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.048" endtime="20201029 18:15:25.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.059" endtime="20201029 18:15:25.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.058" endtime="20201029 18:15:25.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.057" endtime="20201029 18:15:25.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.669" endtime="20201029 18:15:25.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.668" endtime="20201029 18:15:25.080"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.088" endtime="20201029 18:15:25.109"></status>
</kw>
<msg timestamp="20201029 18:15:25.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.087" endtime="20201029 18:15:25.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.110" endtime="20201029 18:15:25.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.113" endtime="20201029 18:15:25.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.084" endtime="20201029 18:15:25.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.082" endtime="20201029 18:15:25.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.122" endtime="20201029 18:15:25.407"></status>
</kw>
<msg timestamp="20201029 18:15:25.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020283931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.120" endtime="20201029 18:15:25.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020283931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.412" endtime="20201029 18:15:25.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.420" endtime="20201029 18:15:25.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.118" endtime="20201029 18:15:25.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.116" endtime="20201029 18:15:25.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.426" level="INFO">${RESULT} = [{'diff': 6.345900000000182e-05}, {'diff': 6.340300000000007e-05}, {'diff': 6.304099999999979e-05}, {'diff': 6.313900000000025e-05}, {'diff': 6.345799999999888e-05}, {'diff': 6.295800000000185e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:25.423" endtime="20201029 18:15:25.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.430" level="INFO">${ACCURACY} = {'diff': [6.345900000000182e-05, 6.340300000000007e-05, 6.304099999999979e-05, 6.313900000000025e-05, 6.345799999999888e-05, 6.295800000000185e-05, 6.365199999999738e-05, 6.327700000000047e-05, 6.2917...</msg>
<status status="PASS" starttime="20201029 18:15:25.427" endtime="20201029 18:15:25.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.435" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.434" endtime="20201029 18:15:25.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.437" level="INFO">VALUE: [6.345900000000182e-05, 6.340300000000007e-05, 6.304099999999979e-05, 6.313900000000025e-05, 6.345799999999888e-05, 6.295800000000185e-05, 6.365199999999738e-05, 6.327700000000047e-05, 6.291700000000261e-05, 6.269399999999856e-05, 6.276399999999988e-05, 6.269399999999856e-05, 6.326400000000038e-05, 6.333299999999875e-05, 6.326400000000038e-05, 6.329200000000298e-05, 6.32089999999981e-05, 6.311100000000111e-05, 6.336099999999789e-05, 6.300000000000056e-05, 6.358399999999848e-05, 6.323600000000124e-05, 6.281999999999816e-05, 6.279199999999902e-05, 6.304099999999979e-05, 6.334700000000179e-05, 6.284700000000129e-05, 6.309700000000154e-05, 6.302800000000316e-05, 6.347200000000192e-05, 6.30279999999997e-05, 6.365300000000032e-05, 6.354199999999977e-05, 6.330599999999909e-05, 6.329100000000004e-05, 6.292999999999924e-05, 6.305599999999884e-05, 6.307000000000187e-05, 6.338800000000103e-05, 6.298600000000099e-05, 6.33890000000005e-05, 6.333299999999875e-05, 6.356899999999943e-05, 6.290299999999957e-05, 6.32500000000008e-05, 6.35280000000002e-05, 6.284700000000129e-05, 6.323600000000124e-05, 6.337500000000093e-05, 6.320799999999863e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.436" endtime="20201029 18:15:25.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.431" endtime="20201029 18:15:25.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.443" endtime="20201029 18:15:25.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.441" endtime="20201029 18:15:25.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.440" endtime="20201029 18:15:25.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.081" endtime="20201029 18:15:25.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.080" endtime="20201029 18:15:25.463"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.472" endtime="20201029 18:15:25.492"></status>
</kw>
<msg timestamp="20201029 18:15:25.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.470" endtime="20201029 18:15:25.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.493" endtime="20201029 18:15:25.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.496" endtime="20201029 18:15:25.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.468" endtime="20201029 18:15:25.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.466" endtime="20201029 18:15:25.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.505" endtime="20201029 18:15:25.790"></status>
</kw>
<msg timestamp="20201029 18:15:25.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019355181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019419139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.503" endtime="20201029 18:15:25.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019355181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019419139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.794" endtime="20201029 18:15:25.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.802" endtime="20201029 18:15:25.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.500" endtime="20201029 18:15:25.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.499" endtime="20201029 18:15:25.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.808" level="INFO">${RESULT} = [{'diff': 6.395799999999938e-05}, {'diff': 6.40829999999995e-05}, {'diff': 6.404200000000027e-05}, {'diff': 6.377800000000045e-05}, {'diff': 6.395799999999938e-05}, {'diff': 6.427800000000095e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:25.805" endtime="20201029 18:15:25.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.813" level="INFO">${ACCURACY} = {'diff': [6.395799999999938e-05, 6.40829999999995e-05, 6.404200000000027e-05, 6.377800000000045e-05, 6.395799999999938e-05, 6.427800000000095e-05, 6.426400000000138e-05, 6.408399999999898e-05, 6.42780...</msg>
<status status="PASS" starttime="20201029 18:15:25.809" endtime="20201029 18:15:25.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.818" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.817" endtime="20201029 18:15:25.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.820" level="INFO">VALUE: [6.395799999999938e-05, 6.40829999999995e-05, 6.404200000000027e-05, 6.377800000000045e-05, 6.395799999999938e-05, 6.427800000000095e-05, 6.426400000000138e-05, 6.408399999999898e-05, 6.427800000000095e-05, 6.397300000000189e-05, 6.377800000000045e-05, 6.413799999999831e-05, 6.463900000000175e-05, 6.450000000000206e-05, 6.438899999999803e-05, 6.377800000000045e-05, 6.42639999999979e-05, 6.415300000000082e-05, 6.42080000000031e-05, 6.413900000000125e-05, 6.426400000000138e-05, 6.434699999999932e-05, 6.40699999999994e-05, 6.401400000000113e-05, 6.38479999999983e-05, 6.411200000000158e-05, 6.459699999999957e-05, 6.418099999999996e-05, 6.409699999999907e-05, 6.387500000000143e-05, 6.409699999999907e-05, 6.415200000000135e-05, 6.462499999999871e-05, 6.409700000000254e-05, 6.431900000000018e-05, 6.416699999999692e-05, 6.384699999999882e-05, 6.433299999999975e-05, 6.401400000000113e-05, 6.413900000000125e-05, 6.429200000000052e-05, 6.401400000000113e-05, 6.42500000000018e-05, 6.466700000000089e-05, 6.434800000000226e-05, 6.372200000000217e-05, 6.426400000000138e-05, 6.420799999999963e-05, 6.369399999999956e-05, 6.397200000000242e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.819" endtime="20201029 18:15:25.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.814" endtime="20201029 18:15:25.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.825" endtime="20201029 18:15:25.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.824" endtime="20201029 18:15:25.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.823" endtime="20201029 18:15:25.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.464" endtime="20201029 18:15:25.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.464" endtime="20201029 18:15:25.846"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.854" endtime="20201029 18:15:25.873"></status>
</kw>
<msg timestamp="20201029 18:15:25.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.853" endtime="20201029 18:15:25.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.875" endtime="20201029 18:15:25.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.877" endtime="20201029 18:15:25.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.850" endtime="20201029 18:15:25.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.848" endtime="20201029 18:15:25.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.886" endtime="20201029 18:15:26.173"></status>
</kw>
<msg timestamp="20201029 18:15:26.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.884" endtime="20201029 18:15:26.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.178" endtime="20201029 18:15:26.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.186" endtime="20201029 18:15:26.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.882" endtime="20201029 18:15:26.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.880" endtime="20201029 18:15:26.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.192" level="INFO">${RESULT} = [{'diff': 6.551399999999916e-05}, {'diff': 6.547299999999992e-05}, {'diff': 6.566599999999895e-05}, {'diff': 6.537499999999946e-05}, {'diff': 6.49440000000008e-05}, {'diff': 6.565200000000285e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:26.189" endtime="20201029 18:15:26.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:26.196" level="INFO">${ACCURACY} = {'diff': [6.551399999999916e-05, 6.547299999999992e-05, 6.566599999999895e-05, 6.537499999999946e-05, 6.49440000000008e-05, 6.565200000000285e-05, 6.486099999999939e-05, 6.512499999999921e-05, 6.53609...</msg>
<status status="PASS" starttime="20201029 18:15:26.193" endtime="20201029 18:15:26.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.201" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:15:26.200" endtime="20201029 18:15:26.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.203" level="INFO">VALUE: [6.551399999999916e-05, 6.547299999999992e-05, 6.566599999999895e-05, 6.537499999999946e-05, 6.49440000000008e-05, 6.565200000000285e-05, 6.486099999999939e-05, 6.512499999999921e-05, 6.536099999999989e-05, 6.487499999999896e-05, 6.522199999999673e-05, 6.518000000000149e-05, 6.551399999999916e-05, 6.479199999999755e-05, 6.50700000000004e-05, 6.549999999999959e-05, 6.522299999999967e-05, 6.499999999999909e-05, 6.544500000000078e-05, 6.565299999999885e-05, 6.49029999999981e-05, 6.565199999999938e-05, 6.491600000000167e-05, 6.473599999999927e-05, 6.52220000000002e-05, 6.479200000000102e-05, 6.549999999999959e-05, 6.49029999999981e-05, 6.509700000000007e-05, 6.527799999999848e-05, 6.551399999999916e-05, 6.498599999999952e-05, 6.543099999999774e-05, 6.547300000000339e-05, 6.527799999999848e-05, 6.47639999999984e-05, 6.498699999999899e-05, 6.534700000000032e-05, 6.538899999999903e-05, 6.47219999999997e-05, 6.544500000000078e-05, 6.537499999999946e-05, 6.552799999999873e-05, 6.545800000000088e-05, 6.524999999999934e-05, 6.470800000000013e-05, 6.47219999999997e-05, 6.561100000000014e-05, 6.483300000000025e-05, 6.498599999999952e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.202" endtime="20201029 18:15:26.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.197" endtime="20201029 18:15:26.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.208" endtime="20201029 18:15:26.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.207" endtime="20201029 18:15:26.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.206" endtime="20201029 18:15:26.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.847" endtime="20201029 18:15:26.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.846" endtime="20201029 18:15:26.229"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.237" endtime="20201029 18:15:26.257"></status>
</kw>
<msg timestamp="20201029 18:15:26.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.236" endtime="20201029 18:15:26.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.259" endtime="20201029 18:15:26.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.261" endtime="20201029 18:15:26.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.233" endtime="20201029 18:15:26.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.231" endtime="20201029 18:15:26.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.270" endtime="20201029 18:15:26.555"></status>
</kw>
<msg timestamp="20201029 18:15:26.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:26.269" endtime="20201029 18:15:26.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:26.560" endtime="20201029 18:15:26.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.568" endtime="20201029 18:15:26.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.266" endtime="20201029 18:15:26.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.264" endtime="20201029 18:15:26.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.574" level="INFO">${RESULT} = [{'diff': 6.581899999999821e-05}, {'diff': 6.583400000000073e-05}, {'diff': 6.663900000000028e-05}, {'diff': 6.634700000000132e-05}, {'diff': 6.570799999999766e-05}, {'diff': 6.602699999999975e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:26.571" endtime="20201029 18:15:26.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:26.578" level="INFO">${ACCURACY} = {'diff': [6.581899999999821e-05, 6.583400000000073e-05, 6.663900000000028e-05, 6.634700000000132e-05, 6.570799999999766e-05, 6.602699999999975e-05, 6.665200000000038e-05, 6.57769999999995e-05, 6.63330...</msg>
<status status="PASS" starttime="20201029 18:15:26.575" endtime="20201029 18:15:26.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.583" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:15:26.582" endtime="20201029 18:15:26.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.585" level="INFO">VALUE: [6.581899999999821e-05, 6.583400000000073e-05, 6.663900000000028e-05, 6.634700000000132e-05, 6.570799999999766e-05, 6.602699999999975e-05, 6.665200000000038e-05, 6.57769999999995e-05, 6.633300000000175e-05, 6.647200000000145e-05, 6.62220000000012e-05, 6.601399999999966e-05, 6.661100000000114e-05, 6.581900000000168e-05, 6.633299999999828e-05, 6.655599999999887e-05, 6.579199999999855e-05, 6.641699999999917e-05, 6.644499999999831e-05, 6.606900000000193e-05, 6.574999999999984e-05, 6.661099999999767e-05, 6.640200000000013e-05, 6.59159999999992e-05, 6.645799999999841e-05, 6.647199999999798e-05, 6.651400000000016e-05, 6.579200000000202e-05, 6.595800000000138e-05, 6.643100000000221e-05, 6.636100000000089e-05, 6.597200000000095e-05, 6.670800000000213e-05, 6.597200000000095e-05, 6.622300000000067e-05, 6.627799999999948e-05, 6.595899999999738e-05, 6.57639999999994e-05, 6.588800000000006e-05, 6.608299999999803e-05, 6.64029999999996e-05, 6.570800000000113e-05, 6.605600000000184e-05, 6.619400000000206e-05, 6.57639999999994e-05, 6.65419999999993e-05, 6.62220000000012e-05, 6.62220000000012e-05, 6.622199999999773e-05, 6.647300000000092e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.584" endtime="20201029 18:15:26.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.579" endtime="20201029 18:15:26.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.591" endtime="20201029 18:15:26.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.590" endtime="20201029 18:15:26.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.588" endtime="20201029 18:15:26.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.230" endtime="20201029 18:15:26.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.229" endtime="20201029 18:15:26.612"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.620" endtime="20201029 18:15:26.640"></status>
</kw>
<msg timestamp="20201029 18:15:26.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.619" endtime="20201029 18:15:26.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.642" endtime="20201029 18:15:26.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.644" endtime="20201029 18:15:26.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.616" endtime="20201029 18:15:26.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.614" endtime="20201029 18:15:26.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.653" endtime="20201029 18:15:26.938"></status>
</kw>
<msg timestamp="20201029 18:15:26.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019385458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.651" endtime="20201029 18:15:26.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019385458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.943" endtime="20201029 18:15:26.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.951" endtime="20201029 18:15:26.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.649" endtime="20201029 18:15:26.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.647" endtime="20201029 18:15:26.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.957" level="INFO">${RESULT} = [{'diff': 6.687499999999749e-05}, {'diff': 6.673600000000127e-05}, {'diff': 6.738900000000103e-05}, {'diff': 6.695800000000238e-05}, {'diff': 6.672199999999823e-05}, {'diff': 6.738900000000103e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:26.954" endtime="20201029 18:15:26.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:26.962" level="INFO">${ACCURACY} = {'diff': [6.687499999999749e-05, 6.673600000000127e-05, 6.738900000000103e-05, 6.695800000000238e-05, 6.672199999999823e-05, 6.738900000000103e-05, 6.752800000000073e-05, 6.67220000000017e-05, 6.73889...</msg>
<status status="PASS" starttime="20201029 18:15:26.958" endtime="20201029 18:15:26.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.967" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:15:26.966" endtime="20201029 18:15:26.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.969" level="INFO">VALUE: [6.687499999999749e-05, 6.673600000000127e-05, 6.738900000000103e-05, 6.695800000000238e-05, 6.672199999999823e-05, 6.738900000000103e-05, 6.752800000000073e-05, 6.67220000000017e-05, 6.738899999999756e-05, 6.747299999999845e-05, 6.713900000000078e-05, 6.733300000000275e-05, 6.701400000000066e-05, 6.670899999999813e-05, 6.681999999999869e-05, 6.672199999999823e-05, 6.769400000000009e-05, 6.675000000000084e-05, 6.743000000000027e-05, 6.718099999999949e-05, 6.700000000000109e-05, 6.709700000000207e-05, 6.766700000000042e-05, 6.74030000000006e-05, 6.72640000000009e-05, 6.762499999999824e-05, 6.68619999999974e-05, 6.74030000000006e-05, 6.695900000000185e-05, 6.68480000000013e-05, 6.699999999999762e-05, 6.676300000000093e-05, 6.679100000000007e-05, 6.655499999999939e-05, 6.720799999999916e-05, 6.733299999999928e-05, 6.727799999999701e-05, 6.702800000000023e-05, 6.67220000000017e-05, 6.737499999999799e-05, 6.737499999999799e-05, 6.732000000000266e-05, 6.747199999999898e-05, 6.75420000000003e-05, 6.747200000000245e-05, 6.701400000000066e-05, 6.723600000000177e-05, 6.719499999999906e-05, 6.715300000000035e-05, 6.701399999999719e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.968" endtime="20201029 18:15:26.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.963" endtime="20201029 18:15:26.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.974" endtime="20201029 18:15:26.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.972" endtime="20201029 18:15:26.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.971" endtime="20201029 18:15:26.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.612" endtime="20201029 18:15:26.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.612" endtime="20201029 18:15:26.995"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.003" endtime="20201029 18:15:27.023"></status>
</kw>
<msg timestamp="20201029 18:15:27.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.002" endtime="20201029 18:15:27.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.024" endtime="20201029 18:15:27.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.027" endtime="20201029 18:15:27.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.999" endtime="20201029 18:15:27.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.997" endtime="20201029 18:15:27.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.035" endtime="20201029 18:15:27.322"></status>
</kw>
<msg timestamp="20201029 18:15:27.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019387306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019455389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.034" endtime="20201029 18:15:27.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019387306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019455389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.326" endtime="20201029 18:15:27.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.334" endtime="20201029 18:15:27.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.031" endtime="20201029 18:15:27.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.030" endtime="20201029 18:15:27.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.341" level="INFO">${RESULT} = [{'diff': 6.808300000000003e-05}, {'diff': 6.808300000000003e-05}, {'diff': 6.845899999999988e-05}, {'diff': 6.847299999999945e-05}, {'diff': 6.799999999999862e-05}, {'diff': 6.840299999999813e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:27.338" endtime="20201029 18:15:27.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:27.345" level="INFO">${ACCURACY} = {'diff': [6.808300000000003e-05, 6.808300000000003e-05, 6.845899999999988e-05, 6.847299999999945e-05, 6.799999999999862e-05, 6.840299999999813e-05, 6.769499999999956e-05, 6.834699999999985e-05, 6.7887...</msg>
<status status="PASS" starttime="20201029 18:15:27.342" endtime="20201029 18:15:27.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.349" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:15:27.348" endtime="20201029 18:15:27.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.352" level="INFO">VALUE: [6.808300000000003e-05, 6.808300000000003e-05, 6.845899999999988e-05, 6.847299999999945e-05, 6.799999999999862e-05, 6.840299999999813e-05, 6.769499999999956e-05, 6.834699999999985e-05, 6.788799999999859e-05, 6.844399999999737e-05, 6.85970000000001e-05, 6.847199999999998e-05, 6.840299999999813e-05, 6.806900000000046e-05, 6.819400000000059e-05, 6.844400000000084e-05, 6.797199999999948e-05, 6.793100000000024e-05, 6.797299999999895e-05, 6.809800000000255e-05, 6.784799999999883e-05, 6.791700000000067e-05, 6.822199999999973e-05, 6.770799999999966e-05, 6.806900000000046e-05, 6.852699999999878e-05, 6.852799999999826e-05, 6.804199999999733e-05, 6.865300000000185e-05, 6.787499999999849e-05, 6.840299999999813e-05, 6.799999999999862e-05, 6.852799999999826e-05, 6.797300000000242e-05, 6.84030000000016e-05, 6.806999999999994e-05, 6.776399999999794e-05, 6.82229999999992e-05, 6.802700000000175e-05, 6.80969999999996e-05, 6.855500000000139e-05, 6.784699999999935e-05, 6.849999999999912e-05, 6.79030000000011e-05, 6.80969999999996e-05, 6.781900000000021e-05, 6.790299999999763e-05, 6.820800000000016e-05, 6.813900000000178e-05, 6.84030000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.350" endtime="20201029 18:15:27.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.346" endtime="20201029 18:15:27.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.357" endtime="20201029 18:15:27.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.355" endtime="20201029 18:15:27.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.354" endtime="20201029 18:15:27.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.996" endtime="20201029 18:15:27.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.995" endtime="20201029 18:15:27.377"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.386" endtime="20201029 18:15:27.409"></status>
</kw>
<msg timestamp="20201029 18:15:27.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.384" endtime="20201029 18:15:27.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.411" endtime="20201029 18:15:27.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.413" endtime="20201029 18:15:27.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.382" endtime="20201029 18:15:27.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.380" endtime="20201029 18:15:27.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.422" endtime="20201029 18:15:27.708"></status>
</kw>
<msg timestamp="20201029 18:15:27.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.421" endtime="20201029 18:15:27.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.712" endtime="20201029 18:15:27.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.720" endtime="20201029 18:15:27.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.418" endtime="20201029 18:15:27.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.416" endtime="20201029 18:15:27.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.727" level="INFO">${RESULT} = [{'diff': 6.890299999999863e-05}, {'diff': 6.95970000000011e-05}, {'diff': 6.962500000000024e-05}, {'diff': 6.895900000000038e-05}, {'diff': 6.958399999999754e-05}, {'diff': 6.938899999999956e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:27.724" endtime="20201029 18:15:27.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:27.731" level="INFO">${ACCURACY} = {'diff': [6.890299999999863e-05, 6.95970000000011e-05, 6.962500000000024e-05, 6.895900000000038e-05, 6.958399999999754e-05, 6.938899999999956e-05, 6.906899999999799e-05, 6.940299999999913e-05, 6.87639...</msg>
<status status="PASS" starttime="20201029 18:15:27.728" endtime="20201029 18:15:27.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.735" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:15:27.734" endtime="20201029 18:15:27.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.738" level="INFO">VALUE: [6.890299999999863e-05, 6.95970000000011e-05, 6.962500000000024e-05, 6.895900000000038e-05, 6.958399999999754e-05, 6.938899999999956e-05, 6.906899999999799e-05, 6.940299999999913e-05, 6.876399999999894e-05, 6.936100000000042e-05, 6.958300000000153e-05, 6.936100000000042e-05, 6.89030000000021e-05, 6.895799999999744e-05, 6.90420000000018e-05, 6.927800000000248e-05, 6.954199999999883e-05, 6.883400000000026e-05, 6.920900000000063e-05, 6.884799999999983e-05, 6.901399999999919e-05, 6.890299999999863e-05, 6.922200000000073e-05, 6.922200000000073e-05, 6.919399999999812e-05, 6.947200000000098e-05, 6.951399999999969e-05, 6.947200000000098e-05, 6.95970000000011e-05, 6.938899999999956e-05, 6.945799999999794e-05, 6.920799999999769e-05, 6.879199999999808e-05, 6.918099999999802e-05, 6.940299999999913e-05, 6.901399999999919e-05, 6.933399999999729e-05, 6.962500000000024e-05, 6.879100000000207e-05, 6.951300000000021e-05, 6.883300000000078e-05, 6.922200000000073e-05, 6.897200000000048e-05, 6.944400000000184e-05, 6.90970000000006e-05, 6.966699999999895e-05, 6.954199999999883e-05, 6.872200000000023e-05, 6.884700000000035e-05, 6.931999999999772e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.736" endtime="20201029 18:15:27.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.732" endtime="20201029 18:15:27.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.743" endtime="20201029 18:15:27.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.742" endtime="20201029 18:15:27.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.741" endtime="20201029 18:15:27.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.378" endtime="20201029 18:15:27.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.378" endtime="20201029 18:15:27.764"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.772" endtime="20201029 18:15:27.792"></status>
</kw>
<msg timestamp="20201029 18:15:27.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.771" endtime="20201029 18:15:27.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.793" endtime="20201029 18:15:27.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.796" endtime="20201029 18:15:27.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.768" endtime="20201029 18:15:27.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.766" endtime="20201029 18:15:27.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.805" endtime="20201029 18:15:28.091"></status>
</kw>
<msg timestamp="20201029 18:15:28.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019341042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019410764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.803" endtime="20201029 18:15:28.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019341042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019410764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.095" endtime="20201029 18:15:28.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.103" endtime="20201029 18:15:28.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.801" endtime="20201029 18:15:28.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.799" endtime="20201029 18:15:28.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.109" level="INFO">${RESULT} = [{'diff': 6.972200000000123e-05}, {'diff': 7.016700000000292e-05}, {'diff': 6.995899999999791e-05}, {'diff': 6.976399999999994e-05}, {'diff': 7.045900000000188e-05}, {'diff': 7.000000000000062e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:28.106" endtime="20201029 18:15:28.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.114" level="INFO">${ACCURACY} = {'diff': [6.972200000000123e-05, 7.016700000000292e-05, 6.995899999999791e-05, 6.976399999999994e-05, 7.045900000000188e-05, 7.000000000000062e-05, 6.998600000000105e-05, 6.970899999999766e-05, 7.0083...</msg>
<status status="PASS" starttime="20201029 18:15:28.110" endtime="20201029 18:15:28.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.119" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.118" endtime="20201029 18:15:28.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.121" level="INFO">VALUE: [6.972200000000123e-05, 7.016700000000292e-05, 6.995899999999791e-05, 6.976399999999994e-05, 7.045900000000188e-05, 7.000000000000062e-05, 6.998600000000105e-05, 6.970899999999766e-05, 7.008399999999804e-05, 6.984700000000135e-05, 7.04299999999998e-05, 7.063900000000081e-05, 7.008299999999856e-05, 6.975000000000037e-05, 7.038900000000056e-05, 7.058299999999906e-05, 6.981899999999874e-05, 7.047200000000198e-05, 6.998599999999758e-05, 7.004199999999933e-05, 7.006999999999847e-05, 7.057000000000244e-05, 6.984800000000083e-05, 7.02230000000012e-05, 7.00840000000015e-05, 6.980499999999917e-05, 7.041600000000023e-05, 7.007000000000194e-05, 6.980499999999917e-05, 7.05689999999995e-05, 7.026400000000044e-05, 7.044399999999937e-05, 6.988900000000006e-05, 7.051399999999722e-05, 7.063900000000081e-05, 7.01109999999977e-05, 7.033400000000176e-05, 7.016699999999945e-05, 7.025000000000087e-05, 7.034799999999786e-05, 7.02230000000012e-05, 7.045800000000241e-05, 7.02499999999974e-05, 7.002799999999976e-05, 6.972199999999776e-05, 7.036100000000142e-05, 7.001400000000019e-05, 7.022199999999826e-05, 7.038900000000056e-05, 6.990299999999963e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.120" endtime="20201029 18:15:28.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.115" endtime="20201029 18:15:28.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.126" endtime="20201029 18:15:28.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.125" endtime="20201029 18:15:28.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.124" endtime="20201029 18:15:28.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.765" endtime="20201029 18:15:28.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.764" endtime="20201029 18:15:28.147"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.155" endtime="20201029 18:15:28.175"></status>
</kw>
<msg timestamp="20201029 18:15:28.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.154" endtime="20201029 18:15:28.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.176" endtime="20201029 18:15:28.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.178" endtime="20201029 18:15:28.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.151" endtime="20201029 18:15:28.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.149" endtime="20201029 18:15:28.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.187" endtime="20201029 18:15:28.475"></status>
</kw>
<msg timestamp="20201029 18:15:28.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019344347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.186" endtime="20201029 18:15:28.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019344347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.479" endtime="20201029 18:15:28.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.487" endtime="20201029 18:15:28.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.183" endtime="20201029 18:15:28.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.182" endtime="20201029 18:15:28.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.494" level="INFO">${RESULT} = [{'diff': 7.084699999999888e-05}, {'diff': 7.158399999999954e-05}, {'diff': 7.151400000000169e-05}, {'diff': 7.07910000000006e-05}, {'diff': 7.144400000000037e-05}, {'diff': 7.165300000000138e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:28.491" endtime="20201029 18:15:28.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.498" level="INFO">${ACCURACY} = {'diff': [7.084699999999888e-05, 7.158399999999954e-05, 7.151400000000169e-05, 7.07910000000006e-05, 7.144400000000037e-05, 7.165300000000138e-05, 7.145799999999994e-05, 7.098600000000205e-05, 7.06810...</msg>
<status status="PASS" starttime="20201029 18:15:28.495" endtime="20201029 18:15:28.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.502" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.501" endtime="20201029 18:15:28.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.505" level="INFO">VALUE: [7.084699999999888e-05, 7.158399999999954e-05, 7.151400000000169e-05, 7.07910000000006e-05, 7.144400000000037e-05, 7.165300000000138e-05, 7.145799999999994e-05, 7.098600000000205e-05, 7.068100000000299e-05, 7.070799999999919e-05, 7.136099999999895e-05, 7.148599999999908e-05, 7.093099999999977e-05, 7.115300000000088e-05, 7.081999999999922e-05, 7.095900000000238e-05, 7.116700000000045e-05, 7.163800000000234e-05, 7.076400000000094e-05, 7.148599999999908e-05, 7.072199999999876e-05, 7.12910000000011e-05, 7.09170000000002e-05, 7.12499999999984e-05, 7.116699999999698e-05, 7.095799999999944e-05, 7.134699999999938e-05, 7.126300000000196e-05, 7.080599999999965e-05, 7.056999999999897e-05, 7.091600000000073e-05, 7.072199999999876e-05, 7.115200000000141e-05, 7.102799999999729e-05, 7.141599999999776e-05, 7.101400000000119e-05, 7.159699999999963e-05, 7.115300000000088e-05, 7.165299999999791e-05, 7.11109999999987e-05, 7.109699999999913e-05, 7.126399999999797e-05, 7.077700000000103e-05, 7.084699999999888e-05, 7.098599999999858e-05, 7.149999999999865e-05, 7.102800000000076e-05, 7.170800000000019e-05, 7.158399999999954e-05, 7.140200000000166e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.503" endtime="20201029 18:15:28.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.499" endtime="20201029 18:15:28.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.510" endtime="20201029 18:15:28.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.508" endtime="20201029 18:15:28.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.507" endtime="20201029 18:15:28.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.148" endtime="20201029 18:15:28.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.147" endtime="20201029 18:15:28.530"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.539" endtime="20201029 18:15:28.559"></status>
</kw>
<msg timestamp="20201029 18:15:28.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.537" endtime="20201029 18:15:28.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.560" endtime="20201029 18:15:28.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.563" endtime="20201029 18:15:28.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.535" endtime="20201029 18:15:28.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.533" endtime="20201029 18:15:28.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.572" endtime="20201029 18:15:28.858"></status>
</kw>
<msg timestamp="20201029 18:15:28.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020358125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.570" endtime="20201029 18:15:28.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020358125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.862" endtime="20201029 18:15:28.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.870" endtime="20201029 18:15:28.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.568" endtime="20201029 18:15:28.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.566" endtime="20201029 18:15:28.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.877" level="INFO">${RESULT} = [{'diff': 7.184699999999988e-05}, {'diff': 7.262499999999977e-05}, {'diff': 7.247200000000051e-05}, {'diff': 7.184699999999988e-05}, {'diff': 7.243100000000127e-05}, {'diff': 7.195800000000044e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:28.873" endtime="20201029 18:15:28.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.881" level="INFO">${ACCURACY} = {'diff': [7.184699999999988e-05, 7.262499999999977e-05, 7.247200000000051e-05, 7.184699999999988e-05, 7.243100000000127e-05, 7.195800000000044e-05, 7.223599999999983e-05, 7.26110000000002e-05, 7.19170...</msg>
<status status="PASS" starttime="20201029 18:15:28.877" endtime="20201029 18:15:28.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.885" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.884" endtime="20201029 18:15:28.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.887" level="INFO">VALUE: [7.184699999999988e-05, 7.262499999999977e-05, 7.247200000000051e-05, 7.184699999999988e-05, 7.243100000000127e-05, 7.195800000000044e-05, 7.223599999999983e-05, 7.26110000000002e-05, 7.19170000000012e-05, 7.227800000000201e-05, 7.229200000000158e-05, 7.220800000000069e-05, 7.231900000000124e-05, 7.212499999999927e-05, 7.19300000000013e-05, 7.266700000000195e-05, 7.234699999999691e-05, 7.223599999999983e-05, 7.259700000000063e-05, 7.212499999999927e-05, 7.263899999999934e-05, 7.172199999999976e-05, 7.233400000000029e-05, 7.259800000000011e-05, 7.186099999999945e-05, 7.182000000000022e-05, 7.18049999999977e-05, 7.205499999999795e-05, 7.22499999999994e-05, 7.236099999999995e-05, 7.254099999999888e-05, 7.186099999999945e-05, 7.198599999999958e-05, 7.172199999999976e-05, 7.263899999999934e-05, 7.180600000000065e-05, 7.26110000000002e-05, 7.193100000000077e-05, 7.208300000000056e-05, 7.204200000000133e-05, 7.263900000000281e-05, 7.236199999999943e-05, 7.234700000000038e-05, 7.190199999999869e-05, 7.252700000000278e-05, 7.26110000000002e-05, 7.194400000000087e-05, 7.238899999999909e-05, 7.244500000000084e-05, 7.233300000000081e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.886" endtime="20201029 18:15:28.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.881" endtime="20201029 18:15:28.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.893" endtime="20201029 18:15:28.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.892" endtime="20201029 18:15:28.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.891" endtime="20201029 18:15:28.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.531" endtime="20201029 18:15:28.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.531" endtime="20201029 18:15:28.914"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.922" endtime="20201029 18:15:28.941"></status>
</kw>
<msg timestamp="20201029 18:15:28.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.921" endtime="20201029 18:15:28.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.943" endtime="20201029 18:15:28.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.945" endtime="20201029 18:15:28.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.918" endtime="20201029 18:15:28.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.916" endtime="20201029 18:15:28.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.954" endtime="20201029 18:15:29.240"></status>
</kw>
<msg timestamp="20201029 18:15:29.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019378819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.953" endtime="20201029 18:15:29.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019378819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.244" endtime="20201029 18:15:29.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.252" endtime="20201029 18:15:29.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.950" endtime="20201029 18:15:29.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.949" endtime="20201029 18:15:29.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.259" level="INFO">${RESULT} = [{'diff': 7.336200000000043e-05}, {'diff': 7.288899999999959e-05}, {'diff': 7.308399999999757e-05}, {'diff': 7.338800000000062e-05}, {'diff': 7.365200000000044e-05}, {'diff': 7.313800000000037e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:29.256" endtime="20201029 18:15:29.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:29.264" level="INFO">${ACCURACY} = {'diff': [7.336200000000043e-05, 7.288899999999959e-05, 7.308399999999757e-05, 7.338800000000062e-05, 7.365200000000044e-05, 7.313800000000037e-05, 7.359700000000163e-05, 7.315299999999941e-05, 7.3278...</msg>
<status status="PASS" starttime="20201029 18:15:29.260" endtime="20201029 18:15:29.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.269" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:15:29.268" endtime="20201029 18:15:29.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.271" level="INFO">VALUE: [7.336200000000043e-05, 7.288899999999959e-05, 7.308399999999757e-05, 7.338800000000062e-05, 7.365200000000044e-05, 7.313800000000037e-05, 7.359700000000163e-05, 7.315299999999941e-05, 7.327800000000301e-05, 7.369499999999862e-05, 7.290299999999916e-05, 7.359700000000163e-05, 7.270800000000119e-05, 7.323600000000083e-05, 7.304199999999886e-05, 7.284800000000036e-05, 7.272300000000023e-05, 7.305500000000242e-05, 7.280500000000217e-05, 7.258300000000106e-05, 7.354099999999988e-05, 7.352699999999684e-05, 7.32500000000004e-05, 7.312500000000027e-05, 7.333299999999834e-05, 7.277799999999904e-05, 7.340299999999966e-05, 7.287500000000002e-05, 7.291699999999873e-05, 7.284800000000036e-05, 7.345900000000141e-05, 7.27499999999999e-05, 7.349999999999718e-05, 7.313899999999984e-05, 7.340299999999966e-05, 7.291599999999926e-05, 7.350000000000065e-05, 7.368099999999905e-05, 7.288899999999959e-05, 7.336100000000095e-05, 7.25690000000015e-05, 7.326399999999997e-05, 7.320800000000169e-05, 7.359700000000163e-05, 7.272200000000076e-05, 7.358399999999807e-05, 7.345899999999794e-05, 7.307000000000147e-05, 7.344499999999837e-05, 7.284800000000036e-05]</msg>
<status status="PASS" starttime="20201029 18:15:29.270" endtime="20201029 18:15:29.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.265" endtime="20201029 18:15:29.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.276" endtime="20201029 18:15:29.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.274" endtime="20201029 18:15:29.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.273" endtime="20201029 18:15:29.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.915" endtime="20201029 18:15:29.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.914" endtime="20201029 18:15:29.297"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.305" endtime="20201029 18:15:29.325"></status>
</kw>
<msg timestamp="20201029 18:15:29.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.303" endtime="20201029 18:15:29.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.327" endtime="20201029 18:15:29.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.329" endtime="20201029 18:15:29.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.301" endtime="20201029 18:15:29.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.299" endtime="20201029 18:15:29.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.338" endtime="20201029 18:15:29.624"></status>
</kw>
<msg timestamp="20201029 18:15:29.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019413833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019488111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.337" endtime="20201029 18:15:29.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019413833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019488111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.628" endtime="20201029 18:15:29.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.636" endtime="20201029 18:15:29.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.334" endtime="20201029 18:15:29.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.332" endtime="20201029 18:15:29.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.643" level="INFO">${RESULT} = [{'diff': 7.427800000000054e-05}, {'diff': 7.45829999999996e-05}, {'diff': 7.434700000000238e-05}, {'diff': 7.40829999999991e-05}, {'diff': 7.401299999999778e-05}, {'diff': 7.465299999999744e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:29.640" endtime="20201029 18:15:29.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:29.647" level="INFO">${ACCURACY} = {'diff': [7.427800000000054e-05, 7.45829999999996e-05, 7.434700000000238e-05, 7.40829999999991e-05, 7.401299999999778e-05, 7.465299999999744e-05, 7.391699999999973e-05, 7.388900000000059e-05, 7.452799...</msg>
<status status="PASS" starttime="20201029 18:15:29.644" endtime="20201029 18:15:29.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.651" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:15:29.650" endtime="20201029 18:15:29.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.654" level="INFO">VALUE: [7.427800000000054e-05, 7.45829999999996e-05, 7.434700000000238e-05, 7.40829999999991e-05, 7.401299999999778e-05, 7.465299999999744e-05, 7.391699999999973e-05, 7.388900000000059e-05, 7.452799999999732e-05, 7.436099999999848e-05, 7.441599999999729e-05, 7.461099999999873e-05, 7.390300000000016e-05, 7.452800000000079e-05, 7.390300000000016e-05, 7.451400000000122e-05, 7.42500000000014e-05, 7.412500000000127e-05, 7.459699999999916e-05, 7.437499999999805e-05, 7.379199999999961e-05, 7.4069999999999e-05, 7.429200000000011e-05, 7.427800000000054e-05, 7.445799999999947e-05, 7.463900000000134e-05, 7.38049999999997e-05, 7.372200000000176e-05, 7.386099999999798e-05, 7.418099999999955e-05, 7.397200000000201e-05, 7.370799999999872e-05, 7.369399999999915e-05, 7.438900000000109e-05, 7.415300000000041e-05, 7.44029999999972e-05, 7.395899999999844e-05, 7.382000000000222e-05, 7.408399999999857e-05, 7.397200000000201e-05, 7.43050000000002e-05, 7.462500000000177e-05, 7.365199999999697e-05, 7.404199999999986e-05, 7.429200000000011e-05, 7.377800000000004e-05, 7.377800000000004e-05, 7.461099999999873e-05, 7.465299999999744e-05, 7.390300000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:15:29.652" endtime="20201029 18:15:29.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.648" endtime="20201029 18:15:29.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.738" endtime="20201029 18:15:29.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.735" endtime="20201029 18:15:29.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.732" endtime="20201029 18:15:29.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.297" endtime="20201029 18:15:29.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.297" endtime="20201029 18:15:29.762"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.780" endtime="20201029 18:15:29.807"></status>
</kw>
<msg timestamp="20201029 18:15:29.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.777" endtime="20201029 18:15:29.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.810" endtime="20201029 18:15:29.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.815" endtime="20201029 18:15:29.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.772" endtime="20201029 18:15:29.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.767" endtime="20201029 18:15:29.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.834" endtime="20201029 18:15:30.126"></status>
</kw>
<msg timestamp="20201029 18:15:30.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035004625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035080097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.831" endtime="20201029 18:15:30.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035004625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035080097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.130" endtime="20201029 18:15:30.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.138" endtime="20201029 18:15:30.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.826" endtime="20201029 18:15:30.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.822" endtime="20201029 18:15:30.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.145" level="INFO">${RESULT} = [{'diff': 7.547200000000004e-05}, {'diff': 7.531900000000424e-05}, {'diff': 7.557000000000397e-05}, {'diff': 7.541700000000123e-05}, {'diff': 7.520800000000022e-05}, {'diff': 7.515300000000141e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:30.142" endtime="20201029 18:15:30.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.149" level="INFO">${ACCURACY} = {'diff': [7.547200000000004e-05, 7.531900000000424e-05, 7.557000000000397e-05, 7.541700000000123e-05, 7.520800000000022e-05, 7.515300000000141e-05, 7.527799999999807e-05, 7.533399999999635e-05, 7.5542...</msg>
<status status="PASS" starttime="20201029 18:15:30.146" endtime="20201029 18:15:30.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.153" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.152" endtime="20201029 18:15:30.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.156" level="INFO">VALUE: [7.547200000000004e-05, 7.531900000000424e-05, 7.557000000000397e-05, 7.541700000000123e-05, 7.520800000000022e-05, 7.515300000000141e-05, 7.527799999999807e-05, 7.533399999999635e-05, 7.554200000000483e-05, 7.552800000000526e-05, 7.490300000000116e-05, 7.544499999999343e-05, 7.473599999999886e-05, 7.547200000000004e-05, 7.50969999999962e-05, 7.483299999999637e-05, 7.491700000000073e-05, 7.502800000000476e-05, 7.534700000000338e-05, 7.534699999999644e-05, 7.552799999999832e-05, 7.563900000000234e-05, 7.495899999999944e-05, 7.51389999999949e-05, 7.472299999999876e-05, 7.522299999999926e-05, 7.470899999999919e-05, 7.508300000000356e-05, 7.509700000000313e-05, 7.502799999999782e-05, 7.51389999999949e-05, 7.554200000000483e-05, 7.519400000000065e-05, 7.559700000000363e-05, 7.551399999999875e-05, 7.504199999999739e-05, 7.470799999999972e-05, 7.519500000000012e-05, 7.545899999999994e-05, 7.488899999999465e-05, 7.480500000000417e-05, 7.520800000000022e-05, 7.548599999999961e-05, 7.49440000000004e-05, 7.497199999999954e-05, 7.501399999999825e-05, 7.53890000000021e-05, 7.499999999999868e-05, 7.536099999999601e-05, 7.558299999999712e-05]</msg>
<status status="PASS" starttime="20201029 18:15:30.154" endtime="20201029 18:15:30.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.150" endtime="20201029 18:15:30.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.162" endtime="20201029 18:15:30.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.160" endtime="20201029 18:15:30.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.159" endtime="20201029 18:15:30.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.764" endtime="20201029 18:15:30.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.763" endtime="20201029 18:15:30.182"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.191" endtime="20201029 18:15:30.211"></status>
</kw>
<msg timestamp="20201029 18:15:30.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.189" endtime="20201029 18:15:30.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.212" endtime="20201029 18:15:30.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.215" endtime="20201029 18:15:30.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.187" endtime="20201029 18:15:30.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.185" endtime="20201029 18:15:30.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.224" endtime="20201029 18:15:30.509"></status>
</kw>
<msg timestamp="20201029 18:15:30.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019373403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019449806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.222" endtime="20201029 18:15:30.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019373403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019449806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.513" endtime="20201029 18:15:30.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.521" endtime="20201029 18:15:30.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.220" endtime="20201029 18:15:30.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.218" endtime="20201029 18:15:30.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.528" level="INFO">${RESULT} = [{'diff': 7.64029999999992e-05}, {'diff': 7.602799999999882e-05}, {'diff': 7.597300000000001e-05}, {'diff': 7.632000000000125e-05}, {'diff': 7.604099999999892e-05}, {'diff': 7.623600000000036e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:30.525" endtime="20201029 18:15:30.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.533" level="INFO">${ACCURACY} = {'diff': [7.64029999999992e-05, 7.602799999999882e-05, 7.597300000000001e-05, 7.632000000000125e-05, 7.604099999999892e-05, 7.623600000000036e-05, 7.576400000000247e-05, 7.623600000000036e-05, 7.65689...</msg>
<status status="PASS" starttime="20201029 18:15:30.529" endtime="20201029 18:15:30.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.537" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.536" endtime="20201029 18:15:30.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.540" level="INFO">VALUE: [7.64029999999992e-05, 7.602799999999882e-05, 7.597300000000001e-05, 7.632000000000125e-05, 7.604099999999892e-05, 7.623600000000036e-05, 7.576400000000247e-05, 7.623600000000036e-05, 7.656899999999855e-05, 7.624999999999993e-05, 7.598600000000011e-05, 7.652799999999932e-05, 7.652799999999932e-05, 7.604199999999839e-05, 7.64440000000019e-05, 7.643099999999833e-05, 7.602800000000229e-05, 7.66250000000003e-05, 7.588899999999912e-05, 7.616600000000251e-05, 7.637500000000005e-05, 7.597300000000001e-05, 7.570800000000072e-05, 7.591599999999879e-05, 7.606900000000152e-05, 7.6457999999998e-05, 7.586099999999998e-05, 7.655599999999846e-05, 7.64029999999992e-05, 7.623600000000036e-05, 7.615299999999894e-05, 7.663899999999987e-05, 7.630600000000168e-05, 7.558400000000007e-05, 7.647200000000104e-05, 7.633400000000082e-05, 7.666599999999954e-05, 7.630499999999873e-05, 7.666699999999901e-05, 7.602799999999882e-05, 7.601399999999925e-05, 7.652800000000279e-05, 7.60830000000011e-05, 7.606899999999805e-05, 7.591700000000173e-05, 7.620800000000122e-05, 7.59310000000013e-05, 7.665299999999944e-05, 7.577799999999857e-05, 7.622300000000026e-05]</msg>
<status status="PASS" starttime="20201029 18:15:30.538" endtime="20201029 18:15:30.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.534" endtime="20201029 18:15:30.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.545" endtime="20201029 18:15:30.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.543" endtime="20201029 18:15:30.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.542" endtime="20201029 18:15:30.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.183" endtime="20201029 18:15:30.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.182" endtime="20201029 18:15:30.565"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.574" endtime="20201029 18:15:30.594"></status>
</kw>
<msg timestamp="20201029 18:15:30.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.572" endtime="20201029 18:15:30.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.595" endtime="20201029 18:15:30.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.598" endtime="20201029 18:15:30.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.570" endtime="20201029 18:15:30.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.568" endtime="20201029 18:15:30.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.606" endtime="20201029 18:15:30.895"></status>
</kw>
<msg timestamp="20201029 18:15:30.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019539681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.605" endtime="20201029 18:15:30.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019539681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.899" endtime="20201029 18:15:30.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.907" endtime="20201029 18:15:30.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.602" endtime="20201029 18:15:30.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.601" endtime="20201029 18:15:30.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.913" level="INFO">${RESULT} = [{'diff': 7.670900000000119e-05}, {'diff': 7.706999999999853e-05}, {'diff': 7.70839999999981e-05}, {'diff': 7.729100000000017e-05}, {'diff': 7.7070000000002e-05}, {'diff': 7.702799999999982e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:15:30.910" endtime="20201029 18:15:30.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.918" level="INFO">${ACCURACY} = {'diff': [7.670900000000119e-05, 7.706999999999853e-05, 7.70839999999981e-05, 7.729100000000017e-05, 7.7070000000002e-05, 7.702799999999982e-05, 7.69029999999997e-05, 7.733300000000234e-05, 7.72919999...</msg>
<status status="PASS" starttime="20201029 18:15:30.914" endtime="20201029 18:15:30.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.922" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.921" endtime="20201029 18:15:30.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.924" level="INFO">VALUE: [7.670900000000119e-05, 7.706999999999853e-05, 7.70839999999981e-05, 7.729100000000017e-05, 7.7070000000002e-05, 7.702799999999982e-05, 7.69029999999997e-05, 7.733300000000234e-05, 7.729199999999964e-05, 7.68189999999988e-05, 7.709700000000166e-05, 7.738900000000062e-05, 7.711099999999776e-05, 7.754199999999989e-05, 7.734699999999844e-05, 7.720899999999822e-05, 7.69029999999997e-05, 7.751400000000075e-05, 7.670800000000172e-05, 7.713900000000037e-05, 7.686099999999751e-05, 7.747199999999857e-05, 7.680499999999923e-05, 7.670800000000172e-05, 7.738899999999715e-05, 7.693000000000283e-05, 7.747199999999857e-05, 7.702799999999982e-05, 7.701400000000025e-05, 7.670900000000119e-05, 7.695900000000144e-05, 7.704200000000286e-05, 7.729199999999964e-05, 7.766600000000054e-05, 7.67770000000001e-05, 7.742999999999986e-05, 7.75969999999987e-05, 7.738900000000062e-05, 7.701400000000025e-05, 7.762499999999783e-05, 7.672199999999782e-05, 7.693099999999883e-05, 7.684700000000141e-05, 7.751400000000075e-05, 7.702799999999982e-05, 7.736100000000148e-05, 7.740199999999725e-05, 7.727800000000007e-05, 7.670799999999825e-05, 7.740200000000072e-05]</msg>
<status status="PASS" starttime="20201029 18:15:30.923" endtime="20201029 18:15:30.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.918" endtime="20201029 18:15:30.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.929" endtime="20201029 18:15:30.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.928" endtime="20201029 18:15:30.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.927" endtime="20201029 18:15:30.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.566" endtime="20201029 18:15:30.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.566" endtime="20201029 18:15:30.950"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.959" endtime="20201029 18:15:30.981"></status>
</kw>
<msg timestamp="20201029 18:15:30.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.957" endtime="20201029 18:15:30.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.983" endtime="20201029 18:15:30.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.986" endtime="20201029 18:15:30.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.954" endtime="20201029 18:15:30.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.952" endtime="20201029 18:15:30.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.994" endtime="20201029 18:15:31.279"></status>
</kw>
<msg timestamp="20201029 18:15:31.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022662347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022740292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.993" endtime="20201029 18:15:31.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022662347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022740292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.283" endtime="20201029 18:15:31.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.291" endtime="20201029 18:15:31.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.990" endtime="20201029 18:15:31.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.989" endtime="20201029 18:15:31.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.298" level="INFO">${RESULT} = [{'diff': 7.79449999999994e-05}, {'diff': 7.806999999999953e-05}, {'diff': 7.802800000000082e-05}, {'diff': 7.854100000000142e-05}, {'diff': 7.784699999999894e-05}, {'diff': 7.770799999999925e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:31.294" endtime="20201029 18:15:31.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:31.302" level="INFO">${ACCURACY} = {'diff': [7.79449999999994e-05, 7.806999999999953e-05, 7.802800000000082e-05, 7.854100000000142e-05, 7.784699999999894e-05, 7.770799999999925e-05, 7.86389999999984e-05, 7.826399999999803e-05, 7.783299...</msg>
<status status="PASS" starttime="20201029 18:15:31.299" endtime="20201029 18:15:31.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.306" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:15:31.305" endtime="20201029 18:15:31.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.308" level="INFO">VALUE: [7.79449999999994e-05, 7.806999999999953e-05, 7.802800000000082e-05, 7.854100000000142e-05, 7.784699999999894e-05, 7.770799999999925e-05, 7.86389999999984e-05, 7.826399999999803e-05, 7.783299999999937e-05, 7.843100000000033e-05, 7.854199999999742e-05, 7.859700000000316e-05, 7.801400000000125e-05, 7.834699999999944e-05, 7.84449999999999e-05, 7.82229999999988e-05, 7.784799999999842e-05, 7.770899999999872e-05, 7.804100000000092e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.816600000000104e-05, 7.851400000000175e-05, 7.834699999999944e-05, 7.793000000000036e-05, 7.852799999999785e-05, 7.847299999999904e-05, 7.865300000000144e-05, 7.7764000000001e-05, 7.837500000000205e-05, 7.82229999999988e-05, 7.823699999999836e-05, 7.793000000000036e-05, 7.861100000000273e-05, 7.80969999999992e-05, 7.794399999999993e-05, 7.82770000000016e-05, 7.773599999999839e-05, 7.769399999999968e-05, 7.770800000000272e-05, 7.833299999999987e-05, 7.8458e-05, 7.811099999999876e-05, 7.829200000000064e-05, 7.820899999999922e-05, 7.786199999999799e-05, 7.795899999999897e-05, 7.787499999999808e-05, 7.822199999999932e-05, 7.81389999999979e-05]</msg>
<status status="PASS" starttime="20201029 18:15:31.307" endtime="20201029 18:15:31.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.302" endtime="20201029 18:15:31.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.314" endtime="20201029 18:15:31.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.313" endtime="20201029 18:15:31.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.311" endtime="20201029 18:15:31.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.951" endtime="20201029 18:15:31.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.950" endtime="20201029 18:15:31.335"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.343" endtime="20201029 18:15:31.363"></status>
</kw>
<msg timestamp="20201029 18:15:31.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.342" endtime="20201029 18:15:31.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.365" endtime="20201029 18:15:31.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.367" endtime="20201029 18:15:31.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.339" endtime="20201029 18:15:31.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.337" endtime="20201029 18:15:31.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.376" endtime="20201029 18:15:31.661"></status>
</kw>
<msg timestamp="20201029 18:15:31.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019358208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019437319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.375" endtime="20201029 18:15:31.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019358208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019437319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.665" endtime="20201029 18:15:31.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.674" endtime="20201029 18:15:31.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.372" endtime="20201029 18:15:31.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.370" endtime="20201029 18:15:31.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.680" level="INFO">${RESULT} = [{'diff': 7.911100000000323e-05}, {'diff': 7.933300000000088e-05}, {'diff': 7.967999999999864e-05}, {'diff': 7.947200000000057e-05}, {'diff': 7.948600000000014e-05}, {'diff': 7.917999999999814e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:31.677" endtime="20201029 18:15:31.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:31.685" level="INFO">${ACCURACY} = {'diff': [7.911100000000323e-05, 7.933300000000088e-05, 7.967999999999864e-05, 7.947200000000057e-05, 7.948600000000014e-05, 7.917999999999814e-05, 7.947200000000057e-05, 7.89580000000005e-05, 7.88200...</msg>
<status status="PASS" starttime="20201029 18:15:31.681" endtime="20201029 18:15:31.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.689" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:15:31.688" endtime="20201029 18:15:31.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.692" level="INFO">VALUE: [7.911100000000323e-05, 7.933300000000088e-05, 7.967999999999864e-05, 7.947200000000057e-05, 7.948600000000014e-05, 7.917999999999814e-05, 7.947200000000057e-05, 7.89580000000005e-05, 7.882000000000028e-05, 7.937499999999958e-05, 7.898600000000311e-05, 7.876399999999853e-05, 7.966700000000201e-05, 7.892999999999789e-05, 7.895899999999997e-05, 7.90970000000002e-05, 7.90970000000002e-05, 7.912499999999933e-05, 7.89030000000017e-05, 7.951400000000275e-05, 7.8764000000002e-05, 7.911099999999976e-05, 7.951400000000275e-05, 7.930600000000121e-05, 7.947200000000057e-05, 7.91389999999989e-05, 7.884799999999942e-05, 7.898699999999911e-05, 7.89450000000004e-05, 7.95840000000006e-05, 7.891599999999832e-05, 7.876399999999853e-05, 7.96389999999994e-05, 7.90970000000002e-05, 7.88190000000008e-05, 7.927800000000207e-05, 7.930600000000121e-05, 7.916700000000151e-05, 7.95970000000007e-05, 7.957000000000103e-05, 7.945900000000047e-05, 7.963900000000287e-05, 7.879100000000167e-05, 7.883300000000037e-05, 7.938900000000262e-05, 7.90970000000002e-05, 7.887499999999908e-05, 7.929200000000164e-05, 7.941700000000176e-05, 7.856900000000056e-05]</msg>
<status status="PASS" starttime="20201029 18:15:31.690" endtime="20201029 18:15:31.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.686" endtime="20201029 18:15:31.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.697" endtime="20201029 18:15:31.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.695" endtime="20201029 18:15:31.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.694" endtime="20201029 18:15:31.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.336" endtime="20201029 18:15:31.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.335" endtime="20201029 18:15:31.718"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.726" endtime="20201029 18:15:31.746"></status>
</kw>
<msg timestamp="20201029 18:15:31.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.725" endtime="20201029 18:15:31.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.747" endtime="20201029 18:15:31.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.750" endtime="20201029 18:15:31.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.722" endtime="20201029 18:15:31.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.720" endtime="20201029 18:15:31.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.759" endtime="20201029 18:15:32.051"></status>
</kw>
<msg timestamp="20201029 18:15:32.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019861472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.757" endtime="20201029 18:15:32.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019861472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.060" endtime="20201029 18:15:32.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.079" endtime="20201029 18:15:32.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.755" endtime="20201029 18:15:32.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.753" endtime="20201029 18:15:32.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.095" level="INFO">${RESULT} = [{'diff': 7.991600000000279e-05}, {'diff': 8.022200000000132e-05}, {'diff': 8.023600000000089e-05}, {'diff': 8.03329999999984e-05}, {'diff': 7.972199999999735e-05}, {'diff': 8.004199999999892e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:32.087" endtime="20201029 18:15:32.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.104" level="INFO">${ACCURACY} = {'diff': [7.991600000000279e-05, 8.022200000000132e-05, 8.023600000000089e-05, 8.03329999999984e-05, 7.972199999999735e-05, 8.004199999999892e-05, 7.997200000000107e-05, 8.016699999999904e-05, 8.02090...</msg>
<status status="PASS" starttime="20201029 18:15:32.097" endtime="20201029 18:15:32.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.113" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.111" endtime="20201029 18:15:32.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.118" level="INFO">VALUE: [7.991600000000279e-05, 8.022200000000132e-05, 8.023600000000089e-05, 8.03329999999984e-05, 7.972199999999735e-05, 8.004199999999892e-05, 7.997200000000107e-05, 8.016699999999904e-05, 8.020900000000122e-05, 7.995900000000097e-05, 8.055499999999952e-05, 7.984700000000094e-05, 7.972200000000082e-05, 7.995799999999803e-05, 7.970799999999778e-05, 7.983300000000138e-05, 8.040299999999972e-05, 7.984700000000094e-05, 8.01109999999973e-05, 8.044499999999843e-05, 8.051400000000028e-05, 7.972299999999682e-05, 8.01389999999999e-05, 8.065299999999997e-05, 8.016600000000304e-05, 8.061100000000126e-05, 8.024999999999699e-05, 8.052700000000038e-05, 7.988900000000312e-05, 8.009699999999773e-05, 7.972200000000082e-05, 8.058299999999866e-05, 8.027800000000307e-05, 7.984700000000094e-05, 8.038900000000015e-05, 8.029199999999917e-05, 7.995900000000097e-05, 8.02779999999996e-05, 8.023700000000036e-05, 7.97909999999992e-05, 7.97909999999992e-05, 7.987500000000008e-05, 8.020799999999828e-05, 8.06390000000004e-05, 7.987500000000008e-05, 8.026400000000003e-05, 8.048600000000114e-05, 8.055600000000246e-05, 7.984700000000094e-05, 8.040299999999972e-05]</msg>
<status status="PASS" starttime="20201029 18:15:32.115" endtime="20201029 18:15:32.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.106" endtime="20201029 18:15:32.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.127" endtime="20201029 18:15:32.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.125" endtime="20201029 18:15:32.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.123" endtime="20201029 18:15:32.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.719" endtime="20201029 18:15:32.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.718" endtime="20201029 18:15:32.148"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.157" endtime="20201029 18:15:32.177"></status>
</kw>
<msg timestamp="20201029 18:15:32.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.155" endtime="20201029 18:15:32.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.179" endtime="20201029 18:15:32.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.181" endtime="20201029 18:15:32.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.152" endtime="20201029 18:15:32.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.150" endtime="20201029 18:15:32.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.190" endtime="20201029 18:15:32.476"></status>
</kw>
<msg timestamp="20201029 18:15:32.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020364667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.189" endtime="20201029 18:15:32.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020364667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.480" endtime="20201029 18:15:32.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.488" endtime="20201029 18:15:32.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.186" endtime="20201029 18:15:32.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.185" endtime="20201029 18:15:32.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.494" level="INFO">${RESULT} = [{'diff': 8.124999999999799e-05}, {'diff': 8.133399999999888e-05}, {'diff': 8.109800000000167e-05}, {'diff': 8.083399999999838e-05}, {'diff': 8.091599999999685e-05}, {'diff': 8.165199999999803e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:32.491" endtime="20201029 18:15:32.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.499" level="INFO">${ACCURACY} = {'diff': [8.124999999999799e-05, 8.133399999999888e-05, 8.109800000000167e-05, 8.083399999999838e-05, 8.091599999999685e-05, 8.165199999999803e-05, 8.158299999999966e-05, 8.07780000000001e-05, 8.07500...</msg>
<status status="PASS" starttime="20201029 18:15:32.495" endtime="20201029 18:15:32.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.503" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.502" endtime="20201029 18:15:32.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.505" level="INFO">VALUE: [8.124999999999799e-05, 8.133399999999888e-05, 8.109800000000167e-05, 8.083399999999838e-05, 8.091599999999685e-05, 8.165199999999803e-05, 8.158299999999966e-05, 8.07780000000001e-05, 8.075000000000096e-05, 8.165300000000097e-05, 8.138899999999769e-05, 8.148600000000214e-05, 8.108299999999916e-05, 8.075000000000096e-05, 8.147200000000257e-05, 8.084699999999848e-05, 8.075000000000096e-05, 8.136099999999855e-05, 8.15970000000027e-05, 8.165199999999803e-05, 8.111100000000177e-05, 8.1458999999999e-05, 8.122199999999885e-05, 8.143000000000039e-05, 8.080599999999924e-05, 8.102800000000035e-05, 8.149999999999824e-05, 8.166699999999708e-05, 8.109800000000167e-05, 8.16390000000014e-05, 8.147299999999857e-05, 8.10840000000021e-05, 8.050000000000071e-05, 8.090200000000075e-05, 8.134700000000245e-05, 8.092999999999989e-05, 8.084699999999848e-05, 8.108299999999916e-05, 8.158299999999966e-05, 8.090300000000022e-05, 8.149999999999824e-05, 8.1458999999999e-05, 8.119499999999918e-05, 8.165300000000097e-05, 8.150000000000171e-05, 8.100000000000121e-05, 8.15979999999987e-05, 8.090199999999728e-05, 8.16390000000014e-05, 8.084700000000195e-05]</msg>
<status status="PASS" starttime="20201029 18:15:32.504" endtime="20201029 18:15:32.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.499" endtime="20201029 18:15:32.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.511" endtime="20201029 18:15:32.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.510" endtime="20201029 18:15:32.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.508" endtime="20201029 18:15:32.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.149" endtime="20201029 18:15:32.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.148" endtime="20201029 18:15:32.532"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.540" endtime="20201029 18:15:32.560"></status>
</kw>
<msg timestamp="20201029 18:15:32.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.539" endtime="20201029 18:15:32.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.562" endtime="20201029 18:15:32.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.564" endtime="20201029 18:15:32.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.536" endtime="20201029 18:15:32.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.534" endtime="20201029 18:15:32.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.573" endtime="20201029 18:15:32.859"></status>
</kw>
<msg timestamp="20201029 18:15:32.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019587153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.572" endtime="20201029 18:15:32.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019587153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.863" endtime="20201029 18:15:32.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.872" endtime="20201029 18:15:32.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.569" endtime="20201029 18:15:32.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.567" endtime="20201029 18:15:32.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.878" level="INFO">${RESULT} = [{'diff': 8.201399999999831e-05}, {'diff': 8.236099999999955e-05}, {'diff': 8.226399999999856e-05}, {'diff': 8.234699999999998e-05}, {'diff': 8.186200000000199e-05}, {'diff': 8.25979999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:32.875" endtime="20201029 18:15:32.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.883" level="INFO">${ACCURACY} = {'diff': [8.201399999999831e-05, 8.236099999999955e-05, 8.226399999999856e-05, 8.234699999999998e-05, 8.186200000000199e-05, 8.25979999999997e-05, 8.216600000000157e-05, 8.194400000000046e-05, 8.17629...</msg>
<status status="PASS" starttime="20201029 18:15:32.879" endtime="20201029 18:15:32.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.888" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.887" endtime="20201029 18:15:32.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.890" level="INFO">VALUE: [8.201399999999831e-05, 8.236099999999955e-05, 8.226399999999856e-05, 8.234699999999998e-05, 8.186200000000199e-05, 8.25979999999997e-05, 8.216600000000157e-05, 8.194400000000046e-05, 8.176299999999859e-05, 8.26529999999985e-05, 8.2152999999998e-05, 8.19719999999996e-05, 8.234699999999998e-05, 8.188899999999819e-05, 8.245799999999706e-05, 8.262499999999937e-05, 8.176400000000153e-05, 8.202799999999788e-05, 8.207000000000006e-05, 8.254100000000195e-05, 8.254100000000195e-05, 8.218000000000114e-05, 8.204100000000145e-05, 8.222199999999985e-05, 8.252800000000185e-05, 8.226400000000203e-05, 8.21109999999993e-05, 8.212499999999887e-05, 8.2152999999998e-05, 8.219500000000018e-05, 8.176400000000153e-05, 8.212500000000234e-05, 8.22910000000017e-05, 8.208399999999963e-05, 8.227700000000213e-05, 8.202800000000135e-05, 8.174999999999849e-05, 8.255500000000152e-05, 8.267999999999817e-05, 8.226400000000203e-05, 8.201400000000178e-05, 8.24170000000013e-05, 8.219400000000071e-05, 8.205600000000049e-05, 8.245800000000053e-05, 8.179200000000067e-05, 8.19589999999995e-05, 8.234800000000292e-05, 8.2459e-05, 8.204199999999745e-05]</msg>
<status status="PASS" starttime="20201029 18:15:32.889" endtime="20201029 18:15:32.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.884" endtime="20201029 18:15:32.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.895" endtime="20201029 18:15:32.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.893" endtime="20201029 18:15:32.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.892" endtime="20201029 18:15:32.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.533" endtime="20201029 18:15:32.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.532" endtime="20201029 18:15:32.916"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.924" endtime="20201029 18:15:32.944"></status>
</kw>
<msg timestamp="20201029 18:15:32.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.923" endtime="20201029 18:15:32.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.946" endtime="20201029 18:15:32.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.948" endtime="20201029 18:15:32.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.920" endtime="20201029 18:15:32.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.918" endtime="20201029 18:15:32.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.957" endtime="20201029 18:15:33.244"></status>
</kw>
<msg timestamp="20201029 18:15:33.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019674306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.956" endtime="20201029 18:15:33.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019674306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.248" endtime="20201029 18:15:33.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.256" endtime="20201029 18:15:33.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.953" endtime="20201029 18:15:33.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.951" endtime="20201029 18:15:33.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.263" level="INFO">${RESULT} = [{'diff': 8.290199999999928e-05}, {'diff': 8.269499999999722e-05}, {'diff': 8.354099999999948e-05}, {'diff': 8.373600000000092e-05}, {'diff': 8.322200000000085e-05}, {'diff': 8.288899999999919e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:33.260" endtime="20201029 18:15:33.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:33.267" level="INFO">${ACCURACY} = {'diff': [8.290199999999928e-05, 8.269499999999722e-05, 8.354099999999948e-05, 8.373600000000092e-05, 8.322200000000085e-05, 8.288899999999919e-05, 8.32919999999987e-05, 8.324999999999999e-05, 8.35689...</msg>
<status status="PASS" starttime="20201029 18:15:33.264" endtime="20201029 18:15:33.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.271" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:15:33.270" endtime="20201029 18:15:33.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.274" level="INFO">VALUE: [8.290199999999928e-05, 8.269499999999722e-05, 8.354099999999948e-05, 8.373600000000092e-05, 8.322200000000085e-05, 8.288899999999919e-05, 8.32919999999987e-05, 8.324999999999999e-05, 8.356899999999862e-05, 8.327799999999913e-05, 8.299999999999974e-05, 8.280599999999777e-05, 8.308400000000063e-05, 8.322199999999738e-05, 8.336200000000002e-05, 8.333400000000088e-05, 8.341600000000282e-05, 8.31659999999991e-05, 8.352699999999991e-05, 8.359700000000123e-05, 8.283299999999744e-05, 8.352799999999938e-05, 8.288899999999919e-05, 8.299999999999974e-05, 8.308300000000116e-05, 8.355599999999852e-05, 8.357000000000156e-05, 8.343100000000186e-05, 8.358399999999766e-05, 8.318100000000161e-05, 8.329200000000217e-05, 8.298600000000017e-05, 8.33469999999975e-05, 8.348600000000067e-05, 8.320800000000128e-05, 8.301399999999931e-05, 8.270800000000078e-05, 8.302800000000235e-05, 8.34170000000023e-05, 8.333299999999794e-05, 8.330600000000174e-05, 8.272299999999982e-05, 8.358399999999766e-05, 8.300000000000321e-05, 8.347199999999763e-05, 8.302699999999941e-05, 8.319399999999824e-05, 8.333299999999794e-05, 8.344500000000143e-05, 8.299999999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:15:33.272" endtime="20201029 18:15:33.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.268" endtime="20201029 18:15:33.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.279" endtime="20201029 18:15:33.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.277" endtime="20201029 18:15:33.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.276" endtime="20201029 18:15:33.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.916" endtime="20201029 18:15:33.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.916" endtime="20201029 18:15:33.299"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.308" endtime="20201029 18:15:33.330"></status>
</kw>
<msg timestamp="20201029 18:15:33.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.306" endtime="20201029 18:15:33.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.331" endtime="20201029 18:15:33.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.333" endtime="20201029 18:15:33.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.304" endtime="20201029 18:15:33.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.302" endtime="20201029 18:15:33.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.342" endtime="20201029 18:15:33.627"></status>
</kw>
<msg timestamp="20201029 18:15:33.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020462153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.341" endtime="20201029 18:15:33.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020462153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.632" endtime="20201029 18:15:33.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.640" endtime="20201029 18:15:33.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.338" endtime="20201029 18:15:33.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.337" endtime="20201029 18:15:33.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.646" level="INFO">${RESULT} = [{'diff': 8.438900000000069e-05}, {'diff': 8.422200000000185e-05}, {'diff': 8.39720000000016e-05}, {'diff': 8.409699999999826e-05}, {'diff': 8.466700000000008e-05}, {'diff': 8.391699999999933e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:33.643" endtime="20201029 18:15:33.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:33.650" level="INFO">${ACCURACY} = {'diff': [8.438900000000069e-05, 8.422200000000185e-05, 8.39720000000016e-05, 8.409699999999826e-05, 8.466700000000008e-05, 8.391699999999933e-05, 8.370799999999831e-05, 8.461200000000127e-05, 8.36529...</msg>
<status status="PASS" starttime="20201029 18:15:33.647" endtime="20201029 18:15:33.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.655" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:15:33.654" endtime="20201029 18:15:33.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.657" level="INFO">VALUE: [8.438900000000069e-05, 8.422200000000185e-05, 8.39720000000016e-05, 8.409699999999826e-05, 8.466700000000008e-05, 8.391699999999933e-05, 8.370799999999831e-05, 8.461200000000127e-05, 8.36529999999995e-05, 8.451399999999734e-05, 8.441600000000035e-05, 8.431899999999937e-05, 8.422199999999838e-05, 8.440299999999679e-05, 8.395799999999856e-05, 8.441699999999983e-05, 8.46530000000005e-05, 8.376400000000006e-05, 8.398600000000117e-05, 8.434700000000198e-05, 8.405599999999902e-05, 8.376400000000006e-05, 8.402799999999988e-05, 8.463900000000094e-05, 8.46110000000018e-05, 8.465200000000103e-05, 8.420800000000228e-05, 8.436099999999808e-05, 8.420800000000228e-05, 8.423600000000142e-05, 8.454199999999995e-05, 8.434700000000198e-05, 8.369500000000168e-05, 8.386099999999758e-05, 8.397300000000107e-05, 8.451399999999734e-05, 8.402799999999988e-05, 8.46249999999979e-05, 8.46110000000018e-05, 8.445800000000253e-05, 8.39720000000016e-05, 8.388900000000019e-05, 8.43330000000024e-05, 8.456899999999962e-05, 8.381900000000234e-05, 8.445799999999906e-05, 8.424999999999752e-05, 8.4153e-05, 8.450000000000124e-05, 8.377799999999963e-05]</msg>
<status status="PASS" starttime="20201029 18:15:33.656" endtime="20201029 18:15:33.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.651" endtime="20201029 18:15:33.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.663" endtime="20201029 18:15:33.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.661" endtime="20201029 18:15:33.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.660" endtime="20201029 18:15:33.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.300" endtime="20201029 18:15:33.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.300" endtime="20201029 18:15:33.684"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.692" endtime="20201029 18:15:33.712"></status>
</kw>
<msg timestamp="20201029 18:15:33.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.691" endtime="20201029 18:15:33.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.714" endtime="20201029 18:15:33.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.716" endtime="20201029 18:15:33.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.688" endtime="20201029 18:15:33.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.686" endtime="20201029 18:15:33.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.725" endtime="20201029 18:15:34.012"></status>
</kw>
<msg timestamp="20201029 18:15:34.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019591833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.724" endtime="20201029 18:15:34.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019591833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.017" endtime="20201029 18:15:34.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.025" endtime="20201029 18:15:34.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.721" endtime="20201029 18:15:34.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.719" endtime="20201029 18:15:34.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:34.031" level="INFO">${RESULT} = [{'diff': 8.463900000000094e-05}, {'diff': 8.552799999999791e-05}, {'diff': 8.556900000000062e-05}, {'diff': 8.552800000000138e-05}, {'diff': 8.483299999999944e-05}, {'diff': 8.508299999999969e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:34.028" endtime="20201029 18:15:34.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:34.036" level="INFO">${ACCURACY} = {'diff': [8.463900000000094e-05, 8.552799999999791e-05, 8.556900000000062e-05, 8.552800000000138e-05, 8.483299999999944e-05, 8.508299999999969e-05, 8.527799999999766e-05, 8.488900000000119e-05, 8.5111...</msg>
<status status="PASS" starttime="20201029 18:15:34.032" endtime="20201029 18:15:34.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.041" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:15:34.040" endtime="20201029 18:15:34.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.043" level="INFO">VALUE: [8.463900000000094e-05, 8.552799999999791e-05, 8.556900000000062e-05, 8.552800000000138e-05, 8.483299999999944e-05, 8.508299999999969e-05, 8.527799999999766e-05, 8.488900000000119e-05, 8.51110000000023e-05, 8.540300000000126e-05, 8.538899999999822e-05, 8.54729999999991e-05, 8.561099999999933e-05, 8.552699999999844e-05, 8.554100000000148e-05, 8.511099999999883e-05, 8.551400000000181e-05, 8.468099999999965e-05, 8.541700000000083e-05, 8.552800000000138e-05, 8.557000000000009e-05, 8.494499999999947e-05, 8.516700000000058e-05, 8.53050000000008e-05, 8.550000000000224e-05, 8.469499999999922e-05, 8.483399999999891e-05, 8.490200000000128e-05, 8.491600000000085e-05, 8.554100000000148e-05, 8.548600000000267e-05, 8.51249999999984e-05, 8.495799999999956e-05, 8.526400000000156e-05, 8.490300000000076e-05, 8.527800000000113e-05, 8.458400000000213e-05, 8.502799999999741e-05, 8.541700000000083e-05, 8.502800000000088e-05, 8.53469999999995e-05, 8.547199999999963e-05, 8.568000000000117e-05, 8.472199999999888e-05, 8.477800000000063e-05, 8.486100000000205e-05, 8.483299999999944e-05, 8.4846999999999e-05, 8.509700000000273e-05, 8.501400000000131e-05]</msg>
<status status="PASS" starttime="20201029 18:15:34.042" endtime="20201029 18:15:34.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.037" endtime="20201029 18:15:34.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.048" endtime="20201029 18:15:34.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.047" endtime="20201029 18:15:34.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.045" endtime="20201029 18:15:34.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.684" endtime="20201029 18:15:34.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.684" endtime="20201029 18:15:34.069"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.077" endtime="20201029 18:15:34.098"></status>
</kw>
<msg timestamp="20201029 18:15:34.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.076" endtime="20201029 18:15:34.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.099" endtime="20201029 18:15:34.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.101" endtime="20201029 18:15:34.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.073" endtime="20201029 18:15:34.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.071" endtime="20201029 18:15:34.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.110" endtime="20201029 18:15:34.397"></status>
</kw>
<msg timestamp="20201029 18:15:34.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.109" endtime="20201029 18:15:34.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.401" endtime="20201029 18:15:34.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.409" endtime="20201029 18:15:34.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.106" endtime="20201029 18:15:34.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.105" endtime="20201029 18:15:34.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:34.416" level="INFO">${RESULT} = [{'diff': 8.626399999999909e-05}, {'diff': 8.645900000000054e-05}, {'diff': 8.572199999999988e-05}, {'diff': 8.649999999999977e-05}, {'diff': 8.622199999999691e-05}, {'diff': 8.651399999999934e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:34.413" endtime="20201029 18:15:34.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:34.420" level="INFO">${ACCURACY} = {'diff': [8.626399999999909e-05, 8.645900000000054e-05, 8.572199999999988e-05, 8.649999999999977e-05, 8.622199999999691e-05, 8.651399999999934e-05, 8.615299999999854e-05, 8.626399999999909e-05, 8.5806...</msg>
<status status="PASS" starttime="20201029 18:15:34.417" endtime="20201029 18:15:34.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.425" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:15:34.424" endtime="20201029 18:15:34.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.427" level="INFO">VALUE: [8.626399999999909e-05, 8.645900000000054e-05, 8.572199999999988e-05, 8.649999999999977e-05, 8.622199999999691e-05, 8.651399999999934e-05, 8.615299999999854e-05, 8.626399999999909e-05, 8.580600000000077e-05, 8.577799999999816e-05, 8.591699999999786e-05, 8.665299999999904e-05, 8.63470000000005e-05, 8.649999999999977e-05, 8.6153000000002e-05, 8.620900000000029e-05, 8.669399999999827e-05, 8.651399999999934e-05, 8.586099999999958e-05, 8.633300000000094e-05, 8.5847e-05, 8.597200000000013e-05, 8.644399999999802e-05, 8.644500000000097e-05, 8.608300000000069e-05, 8.626299999999962e-05, 8.616700000000158e-05, 8.655499999999858e-05, 8.602799999999841e-05, 8.630499999999833e-05, 8.652799999999891e-05, 8.611099999999983e-05, 8.638899999999922e-05, 8.583300000000044e-05, 8.638899999999922e-05, 8.638899999999922e-05, 8.602800000000188e-05, 8.623599999999995e-05, 8.59859999999997e-05, 8.599999999999927e-05, 8.576400000000206e-05, 8.616700000000158e-05, 8.577799999999816e-05, 8.659700000000076e-05, 8.569400000000074e-05, 8.597200000000013e-05, 8.597200000000013e-05, 8.63470000000005e-05, 8.627799999999866e-05, 8.5847e-05]</msg>
<status status="PASS" starttime="20201029 18:15:34.426" endtime="20201029 18:15:34.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.421" endtime="20201029 18:15:34.428"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.432" endtime="20201029 18:15:34.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.431" endtime="20201029 18:15:34.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.429" endtime="20201029 18:15:34.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.070" endtime="20201029 18:15:34.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.069" endtime="20201029 18:15:34.453"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.461" endtime="20201029 18:15:34.485"></status>
</kw>
<msg timestamp="20201029 18:15:34.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.460" endtime="20201029 18:15:34.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.487" endtime="20201029 18:15:34.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.489" endtime="20201029 18:15:34.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.457" endtime="20201029 18:15:34.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.455" endtime="20201029 18:15:34.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.498" endtime="20201029 18:15:34.785"></status>
</kw>
<msg timestamp="20201029 18:15:34.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022749236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.497" endtime="20201029 18:15:34.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022749236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.789" endtime="20201029 18:15:34.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.797" endtime="20201029 18:15:34.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.494" endtime="20201029 18:15:34.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.493" endtime="20201029 18:15:34.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:34.803" level="INFO">${RESULT} = [{'diff': 8.694500000000147e-05}, {'diff': 8.736099999999761e-05}, {'diff': 8.755499999999958e-05}, {'diff': 8.713800000000049e-05}, {'diff': 8.683300000000144e-05}, {'diff': 8.683300000000144e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:34.800" endtime="20201029 18:15:34.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:34.807" level="INFO">${ACCURACY} = {'diff': [8.694500000000147e-05, 8.736099999999761e-05, 8.755499999999958e-05, 8.713800000000049e-05, 8.683300000000144e-05, 8.683300000000144e-05, 8.754199999999948e-05, 8.754199999999948e-05, 8.6833...</msg>
<status status="PASS" starttime="20201029 18:15:34.804" endtime="20201029 18:15:34.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.812" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:15:34.811" endtime="20201029 18:15:34.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.814" level="INFO">VALUE: [8.694500000000147e-05, 8.736099999999761e-05, 8.755499999999958e-05, 8.713800000000049e-05, 8.683300000000144e-05, 8.683300000000144e-05, 8.754199999999948e-05, 8.754199999999948e-05, 8.683300000000144e-05, 8.723600000000095e-05, 8.720800000000181e-05, 8.752700000000044e-05, 8.676399999999959e-05, 8.740200000000031e-05, 8.694500000000147e-05, 8.702799999999941e-05, 8.6847000000001e-05, 8.73470000000015e-05, 8.71669999999991e-05, 8.763900000000047e-05, 8.69310000000019e-05, 8.709699999999779e-05, 8.751400000000034e-05, 8.733400000000141e-05, 8.763900000000047e-05, 8.675000000000002e-05, 8.708400000000116e-05, 8.677699999999969e-05, 8.752700000000044e-05, 8.690299999999929e-05, 8.68050000000023e-05, 8.727799999999966e-05, 8.773699999999746e-05, 8.747200000000163e-05, 8.679199999999873e-05, 8.706900000000212e-05, 8.747200000000163e-05, 8.738900000000022e-05, 8.741699999999936e-05, 8.745899999999807e-05, 8.711100000000083e-05, 8.679199999999873e-05, 8.719500000000172e-05, 8.702799999999941e-05, 8.663899999999947e-05, 8.679100000000273e-05, 8.705499999999908e-05, 8.684699999999754e-05, 8.690299999999929e-05, 8.704199999999898e-05]</msg>
<status status="PASS" starttime="20201029 18:15:34.813" endtime="20201029 18:15:34.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.808" endtime="20201029 18:15:34.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.875" endtime="20201029 18:15:34.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.873" endtime="20201029 18:15:34.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.872" endtime="20201029 18:15:34.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.454" endtime="20201029 18:15:34.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.453" endtime="20201029 18:15:34.896"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.904" endtime="20201029 18:15:34.924"></status>
</kw>
<msg timestamp="20201029 18:15:34.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.903" endtime="20201029 18:15:34.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.926" endtime="20201029 18:15:34.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.928" endtime="20201029 18:15:34.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.900" endtime="20201029 18:15:34.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.898" endtime="20201029 18:15:34.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.937" endtime="20201029 18:15:35.235"></status>
</kw>
<msg timestamp="20201029 18:15:35.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019331597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.936" endtime="20201029 18:15:35.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019331597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.239" endtime="20201029 18:15:35.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.247" endtime="20201029 18:15:35.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.933" endtime="20201029 18:15:35.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.932" endtime="20201029 18:15:35.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.253" level="INFO">${RESULT} = [{'diff': 8.859700000000276e-05}, {'diff': 8.815200000000106e-05}, {'diff': 8.783299999999897e-05}, {'diff': 8.815200000000106e-05}, {'diff': 8.76799999999997e-05}, {'diff': 8.840300000000079e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:35.250" endtime="20201029 18:15:35.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.258" level="INFO">${ACCURACY} = {'diff': [8.859700000000276e-05, 8.815200000000106e-05, 8.783299999999897e-05, 8.815200000000106e-05, 8.76799999999997e-05, 8.840300000000079e-05, 8.868100000000018e-05, 8.815299999999707e-05, 8.82920...</msg>
<status status="PASS" starttime="20201029 18:15:35.254" endtime="20201029 18:15:35.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.263" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.262" endtime="20201029 18:15:35.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.265" level="INFO">VALUE: [8.859700000000276e-05, 8.815200000000106e-05, 8.783299999999897e-05, 8.815200000000106e-05, 8.76799999999997e-05, 8.840300000000079e-05, 8.868100000000018e-05, 8.815299999999707e-05, 8.829200000000023e-05, 8.868100000000018e-05, 8.802800000000041e-05, 8.784800000000148e-05, 8.8638999999998e-05, 8.829200000000023e-05, 8.866600000000113e-05, 8.777700000000069e-05, 8.81800000000002e-05, 8.784700000000201e-05, 8.776400000000059e-05, 8.777800000000016e-05, 8.847199999999916e-05, 8.829200000000023e-05, 8.845799999999959e-05, 8.833399999999894e-05, 8.770800000000231e-05, 8.79310000000029e-05, 8.865299999999757e-05, 8.827800000000066e-05, 8.756899999999915e-05, 8.827700000000119e-05, 8.81519999999976e-05, 8.826400000000109e-05, 8.802800000000041e-05, 8.848599999999873e-05, 8.81250000000014e-05, 8.779199999999973e-05, 8.808299999999922e-05, 8.84999999999983e-05, 8.823599999999848e-05, 8.837499999999818e-05, 8.809699999999879e-05, 8.788799999999777e-05, 8.838800000000174e-05, 8.790200000000081e-05, 8.851399999999787e-05, 8.827799999999719e-05, 8.83189999999999e-05, 8.772199999999841e-05, 8.851399999999787e-05, 8.840300000000079e-05]</msg>
<status status="PASS" starttime="20201029 18:15:35.264" endtime="20201029 18:15:35.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.259" endtime="20201029 18:15:35.266"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.270" endtime="20201029 18:15:35.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.269" endtime="20201029 18:15:35.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.267" endtime="20201029 18:15:35.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.897" endtime="20201029 18:15:35.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.896" endtime="20201029 18:15:35.291"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.299" endtime="20201029 18:15:35.319"></status>
</kw>
<msg timestamp="20201029 18:15:35.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.298" endtime="20201029 18:15:35.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.321" endtime="20201029 18:15:35.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.323" endtime="20201029 18:15:35.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.295" endtime="20201029 18:15:35.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.293" endtime="20201029 18:15:35.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.332" endtime="20201029 18:15:35.620"></status>
</kw>
<msg timestamp="20201029 18:15:35.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019471931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.331" endtime="20201029 18:15:35.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019471931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.624" endtime="20201029 18:15:35.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.632" endtime="20201029 18:15:35.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.328" endtime="20201029 18:15:35.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.327" endtime="20201029 18:15:35.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.639" level="INFO">${RESULT} = [{'diff': 8.936099999999961e-05}, {'diff': 8.877800000000116e-05}, {'diff': 8.94450000000005e-05}, {'diff': 8.948599999999973e-05}, {'diff': 8.911099999999936e-05}, {'diff': 8.902799999999794e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:35.635" endtime="20201029 18:15:35.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.643" level="INFO">${ACCURACY} = {'diff': [8.936099999999961e-05, 8.877800000000116e-05, 8.94450000000005e-05, 8.948599999999973e-05, 8.911099999999936e-05, 8.902799999999794e-05, 8.952799999999844e-05, 8.954200000000148e-05, 8.96109...</msg>
<status status="PASS" starttime="20201029 18:15:35.640" endtime="20201029 18:15:35.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.647" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.646" endtime="20201029 18:15:35.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.650" level="INFO">VALUE: [8.936099999999961e-05, 8.877800000000116e-05, 8.94450000000005e-05, 8.948599999999973e-05, 8.911099999999936e-05, 8.902799999999794e-05, 8.952799999999844e-05, 8.954200000000148e-05, 8.961099999999986e-05, 8.919500000000025e-05, 8.893100000000043e-05, 8.922199999999991e-05, 8.968100000000118e-05, 8.911099999999936e-05, 8.888900000000172e-05, 8.958300000000072e-05, 8.883299999999997e-05, 8.963799999999952e-05, 8.920800000000034e-05, 8.954099999999854e-05, 8.938900000000222e-05, 8.893100000000043e-05, 8.886099999999911e-05, 8.895800000000009e-05, 8.936099999999961e-05, 8.891700000000086e-05, 8.856999999999962e-05, 8.904200000000098e-05, 8.936100000000308e-05, 8.947200000000016e-05, 8.90129999999989e-05, 8.936099999999961e-05, 8.937499999999918e-05, 8.9638999999999e-05, 8.886099999999911e-05, 8.915300000000154e-05, 8.88190000000004e-05, 8.920899999999982e-05, 8.913799999999902e-05, 8.870899999999932e-05, 8.902800000000141e-05, 8.920899999999982e-05, 8.932000000000037e-05, 8.89999999999988e-05, 8.91250000000024e-05, 8.954099999999854e-05, 8.959700000000029e-05, 8.88190000000004e-05, 8.916699999999764e-05, 8.888900000000172e-05]</msg>
<status status="PASS" starttime="20201029 18:15:35.648" endtime="20201029 18:15:35.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.644" endtime="20201029 18:15:35.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.654" endtime="20201029 18:15:35.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.653" endtime="20201029 18:15:35.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.652" endtime="20201029 18:15:35.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.292" endtime="20201029 18:15:35.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.291" endtime="20201029 18:15:35.675"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.684" endtime="20201029 18:15:35.706"></status>
</kw>
<msg timestamp="20201029 18:15:35.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.683" endtime="20201029 18:15:35.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.708" endtime="20201029 18:15:35.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.710" endtime="20201029 18:15:35.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.680" endtime="20201029 18:15:35.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.678" endtime="20201029 18:15:35.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.719" endtime="20201029 18:15:36.004"></status>
</kw>
<msg timestamp="20201029 18:15:36.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020844736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020934986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.717" endtime="20201029 18:15:36.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020844736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020934986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.008" endtime="20201029 18:15:36.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.016" endtime="20201029 18:15:36.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.715" endtime="20201029 18:15:36.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.713" endtime="20201029 18:15:36.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.022" level="INFO">${RESULT} = [{'diff': 9.025000000000005e-05}, {'diff': 8.997200000000066e-05}, {'diff': 8.96800000000017e-05}, {'diff': 9.05130000000004e-05}, {'diff': 8.973599999999998e-05}, {'diff': 9.01389999999995e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:15:36.019" endtime="20201029 18:15:36.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.027" level="INFO">${ACCURACY} = {'diff': [9.025000000000005e-05, 8.997200000000066e-05, 8.96800000000017e-05, 9.05130000000004e-05, 8.973599999999998e-05, 9.01389999999995e-05, 9.009800000000026e-05, 9.066699999999914e-05, 8.9792000...</msg>
<status status="PASS" starttime="20201029 18:15:36.023" endtime="20201029 18:15:36.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.031" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.030" endtime="20201029 18:15:36.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.033" level="INFO">VALUE: [9.025000000000005e-05, 8.997200000000066e-05, 8.96800000000017e-05, 9.05130000000004e-05, 8.973599999999998e-05, 9.01389999999995e-05, 9.009800000000026e-05, 9.066699999999914e-05, 8.979200000000173e-05, 9.01519999999996e-05, 9.008300000000122e-05, 9.001399999999937e-05, 8.970799999999737e-05, 8.972199999999694e-05, 9.054199999999901e-05, 8.969400000000127e-05, 8.997200000000066e-05, 9.065300000000304e-05, 8.976399999999912e-05, 8.969500000000075e-05, 9.061100000000086e-05, 9.018099999999821e-05, 9.007000000000112e-05, 9.036100000000061e-05, 9.006900000000165e-05, 8.988899999999925e-05, 8.976400000000259e-05, 9.061099999999739e-05, 9.012499999999993e-05, 9.037500000000018e-05, 8.976399999999912e-05, 9.040300000000279e-05, 8.977799999999869e-05, 9.019400000000177e-05, 9.001399999999937e-05, 8.990199999999934e-05, 9.047200000000116e-05, 8.992999999999848e-05, 8.98329999999975e-05, 8.987499999999968e-05, 8.983300000000097e-05, 9.012499999999993e-05, 8.98060000000013e-05, 8.980599999999783e-05, 9.023600000000048e-05, 8.980599999999783e-05, 9.01800000000022e-05, 8.969500000000075e-05, 9.008400000000069e-05, 9.017999999999873e-05]</msg>
<status status="PASS" starttime="20201029 18:15:36.032" endtime="20201029 18:15:36.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.028" endtime="20201029 18:15:36.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.039" endtime="20201029 18:15:36.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.038" endtime="20201029 18:15:36.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.037" endtime="20201029 18:15:36.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.677" endtime="20201029 18:15:36.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.676" endtime="20201029 18:15:36.060"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.068" endtime="20201029 18:15:36.089"></status>
</kw>
<msg timestamp="20201029 18:15:36.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.067" endtime="20201029 18:15:36.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.090" endtime="20201029 18:15:36.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.093" endtime="20201029 18:15:36.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.064" endtime="20201029 18:15:36.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.062" endtime="20201029 18:15:36.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.102" endtime="20201029 18:15:36.387"></status>
</kw>
<msg timestamp="20201029 18:15:36.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019466819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.100" endtime="20201029 18:15:36.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019466819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.391" endtime="20201029 18:15:36.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.400" endtime="20201029 18:15:36.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.098" endtime="20201029 18:15:36.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.096" endtime="20201029 18:15:36.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.408" level="INFO">${RESULT} = [{'diff': 9.083400000000144e-05}, {'diff': 9.098600000000123e-05}, {'diff': 9.093100000000243e-05}, {'diff': 9.158300000000272e-05}, {'diff': 9.084699999999807e-05}, {'diff': 9.091599999999991e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:36.404" endtime="20201029 18:15:36.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.414" level="INFO">${ACCURACY} = {'diff': [9.083400000000144e-05, 9.098600000000123e-05, 9.093100000000243e-05, 9.158300000000272e-05, 9.084699999999807e-05, 9.091599999999991e-05, 9.168099999999971e-05, 9.130599999999933e-05, 9.1250...</msg>
<status status="PASS" starttime="20201029 18:15:36.409" endtime="20201029 18:15:36.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.420" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.419" endtime="20201029 18:15:36.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.423" level="INFO">VALUE: [9.083400000000144e-05, 9.098600000000123e-05, 9.093100000000243e-05, 9.158300000000272e-05, 9.084699999999807e-05, 9.091599999999991e-05, 9.168099999999971e-05, 9.130599999999933e-05, 9.125000000000105e-05, 9.086100000000111e-05, 9.079199999999926e-05, 9.102799999999994e-05, 9.08060000000023e-05, 9.127800000000019e-05, 9.072200000000141e-05, 9.090299999999982e-05, 9.112500000000093e-05, 9.079099999999979e-05, 9.1639000000001e-05, 9.127700000000072e-05, 9.154200000000001e-05, 9.098600000000123e-05, 9.101400000000037e-05, 9.095800000000209e-05, 9.109699999999832e-05, 9.127800000000019e-05, 9.076400000000012e-05, 9.147299999999817e-05, 9.097300000000114e-05, 9.08190000000024e-05, 9.1332999999999e-05, 9.161099999999839e-05, 9.133300000000247e-05, 9.163899999999753e-05, 9.079199999999926e-05, 9.1639000000001e-05, 9.088900000000025e-05, 9.158399999999872e-05, 9.15139999999974e-05, 9.140300000000032e-05, 9.079099999999979e-05, 9.138900000000075e-05, 9.095799999999862e-05, 9.081899999999893e-05, 9.102799999999994e-05, 9.120799999999887e-05, 9.097200000000166e-05, 9.161100000000186e-05, 9.158299999999925e-05, 9.123600000000148e-05]</msg>
<status status="PASS" starttime="20201029 18:15:36.421" endtime="20201029 18:15:36.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.415" endtime="20201029 18:15:36.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.430" endtime="20201029 18:15:36.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.428" endtime="20201029 18:15:36.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.427" endtime="20201029 18:15:36.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.061" endtime="20201029 18:15:36.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.060" endtime="20201029 18:15:36.450"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.459" endtime="20201029 18:15:36.479"></status>
</kw>
<msg timestamp="20201029 18:15:36.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.457" endtime="20201029 18:15:36.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.481" endtime="20201029 18:15:36.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.483" endtime="20201029 18:15:36.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.455" endtime="20201029 18:15:36.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.453" endtime="20201029 18:15:36.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.492" endtime="20201029 18:15:36.779"></status>
</kw>
<msg timestamp="20201029 18:15:36.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019364, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01945575, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:15:36.490" endtime="20201029 18:15:36.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019364, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01945575, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:15:36.784" endtime="20201029 18:15:36.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.792" endtime="20201029 18:15:36.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.488" endtime="20201029 18:15:36.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.486" endtime="20201029 18:15:36.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.799" level="INFO">${RESULT} = [{'diff': 9.175000000000155e-05}, {'diff': 9.24719999999997e-05}, {'diff': 9.211099999999889e-05}, {'diff': 9.233400000000294e-05}, {'diff': 9.263899999999853e-05}, {'diff': 9.179200000000026e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:36.795" endtime="20201029 18:15:36.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.803" level="INFO">${ACCURACY} = {'diff': [9.175000000000155e-05, 9.24719999999997e-05, 9.211099999999889e-05, 9.233400000000294e-05, 9.263899999999853e-05, 9.179200000000026e-05, 9.252799999999797e-05, 9.170899999999885e-05, 9.20840...</msg>
<status status="PASS" starttime="20201029 18:15:36.800" endtime="20201029 18:15:36.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.807" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.806" endtime="20201029 18:15:36.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.810" level="INFO">VALUE: [9.175000000000155e-05, 9.24719999999997e-05, 9.211099999999889e-05, 9.233400000000294e-05, 9.263899999999853e-05, 9.179200000000026e-05, 9.252799999999797e-05, 9.170899999999885e-05, 9.208400000000269e-05, 9.240199999999837e-05, 9.193000000000048e-05, 9.165199999999762e-05, 9.220799999999987e-05, 9.19719999999992e-05, 9.170799999999937e-05, 9.198599999999876e-05, 9.226399999999815e-05, 9.244500000000003e-05, 9.226400000000162e-05, 9.254200000000101e-05, 9.190300000000082e-05, 9.218000000000073e-05, 9.208399999999922e-05, 9.240199999999837e-05, 9.259700000000329e-05, 9.204099999999757e-05, 9.259699999999982e-05, 9.158299999999925e-05, 9.202800000000094e-05, 9.16939999999998e-05, 9.240300000000132e-05, 9.197299999999867e-05, 9.24589999999996e-05, 9.191600000000091e-05, 9.24719999999997e-05, 9.18329999999995e-05, 9.226300000000215e-05, 9.195799999999962e-05, 9.216700000000064e-05, 9.186100000000211e-05, 9.205600000000008e-05, 9.222199999999944e-05, 9.255599999999711e-05, 9.222199999999944e-05, 9.24589999999996e-05, 9.205500000000061e-05, 9.197300000000214e-05, 9.265300000000157e-05, 9.230600000000033e-05, 9.225000000000205e-05]</msg>
<status status="PASS" starttime="20201029 18:15:36.808" endtime="20201029 18:15:36.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.803" endtime="20201029 18:15:36.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.814" endtime="20201029 18:15:36.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.813" endtime="20201029 18:15:36.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.812" endtime="20201029 18:15:36.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.451" endtime="20201029 18:15:36.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.451" endtime="20201029 18:15:36.835"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.844" endtime="20201029 18:15:36.866"></status>
</kw>
<msg timestamp="20201029 18:15:36.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.842" endtime="20201029 18:15:36.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.867" endtime="20201029 18:15:36.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.870" endtime="20201029 18:15:36.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.840" endtime="20201029 18:15:36.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.838" endtime="20201029 18:15:36.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.879" endtime="20201029 18:15:37.165"></status>
</kw>
<msg timestamp="20201029 18:15:37.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020348583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.877" endtime="20201029 18:15:37.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020348583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.169" endtime="20201029 18:15:37.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.177" endtime="20201029 18:15:37.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.874" endtime="20201029 18:15:37.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.873" endtime="20201029 18:15:37.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.184" level="INFO">${RESULT} = [{'diff': 9.269500000000028e-05}, {'diff': 9.298699999999924e-05}, {'diff': 9.306899999999771e-05}, {'diff': 9.33469999999971e-05}, {'diff': 9.351299999999993e-05}, {'diff': 9.309699999999685e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:37.181" endtime="20201029 18:15:37.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.188" level="INFO">${ACCURACY} = {'diff': [9.269500000000028e-05, 9.298699999999924e-05, 9.306899999999771e-05, 9.33469999999971e-05, 9.351299999999993e-05, 9.309699999999685e-05, 9.322200000000044e-05, 9.290300000000182e-05, 9.29719...</msg>
<status status="PASS" starttime="20201029 18:15:37.185" endtime="20201029 18:15:37.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.192" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.191" endtime="20201029 18:15:37.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.195" level="INFO">VALUE: [9.269500000000028e-05, 9.298699999999924e-05, 9.306899999999771e-05, 9.33469999999971e-05, 9.351299999999993e-05, 9.309699999999685e-05, 9.322200000000044e-05, 9.290300000000182e-05, 9.297199999999672e-05, 9.294399999999758e-05, 9.291700000000139e-05, 9.273599999999951e-05, 9.30139999999989e-05, 9.299999999999933e-05, 9.316700000000164e-05, 9.27079999999969e-05, 9.30130000000029e-05, 9.358299999999778e-05, 9.356900000000168e-05, 9.320800000000087e-05, 9.366699999999867e-05, 9.290300000000182e-05, 9.3026999999999e-05, 9.36529999999991e-05, 9.357000000000115e-05, 9.290300000000182e-05, 9.307000000000065e-05, 9.309799999999979e-05, 9.277800000000169e-05, 9.309699999999685e-05, 9.304200000000151e-05, 9.327799999999872e-05, 9.312499999999946e-05, 9.284700000000007e-05, 9.270800000000037e-05, 9.343099999999799e-05, 9.29720000000002e-05, 9.341699999999842e-05, 9.338899999999928e-05, 9.322299999999992e-05, 9.349999999999983e-05, 9.331900000000143e-05, 9.305500000000161e-05, 9.3333000000001e-05, 9.343000000000198e-05, 9.36529999999991e-05, 9.311099999999989e-05, 9.306900000000118e-05, 9.319500000000078e-05, 9.31529999999986e-05]</msg>
<status status="PASS" starttime="20201029 18:15:37.193" endtime="20201029 18:15:37.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.189" endtime="20201029 18:15:37.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.200" endtime="20201029 18:15:37.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.199" endtime="20201029 18:15:37.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.198" endtime="20201029 18:15:37.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.836" endtime="20201029 18:15:37.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.835" endtime="20201029 18:15:37.221"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.230" endtime="20201029 18:15:37.250"></status>
</kw>
<msg timestamp="20201029 18:15:37.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.228" endtime="20201029 18:15:37.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.251" endtime="20201029 18:15:37.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.254" endtime="20201029 18:15:37.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.225" endtime="20201029 18:15:37.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.223" endtime="20201029 18:15:37.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.263" endtime="20201029 18:15:37.547"></status>
</kw>
<msg timestamp="20201029 18:15:37.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019543972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019637931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.261" endtime="20201029 18:15:37.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019543972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019637931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.551" endtime="20201029 18:15:37.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.560" endtime="20201029 18:15:37.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.259" endtime="20201029 18:15:37.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.257" endtime="20201029 18:15:37.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.566" level="INFO">${RESULT} = [{'diff': 9.39590000000011e-05}, {'diff': 9.383400000000097e-05}, {'diff': 9.452799999999997e-05}, {'diff': 9.416699999999917e-05}, {'diff': 9.369499999999781e-05}, {'diff': 9.39720000000012e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:37.563" endtime="20201029 18:15:37.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.571" level="INFO">${ACCURACY} = {'diff': [9.39590000000011e-05, 9.383400000000097e-05, 9.452799999999997e-05, 9.416699999999917e-05, 9.369499999999781e-05, 9.39720000000012e-05, 9.459700000000182e-05, 9.400000000000033e-05, 9.404099...</msg>
<status status="PASS" starttime="20201029 18:15:37.567" endtime="20201029 18:15:37.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.575" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.574" endtime="20201029 18:15:37.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.578" level="INFO">VALUE: [9.39590000000011e-05, 9.383400000000097e-05, 9.452799999999997e-05, 9.416699999999917e-05, 9.369499999999781e-05, 9.39720000000012e-05, 9.459700000000182e-05, 9.400000000000033e-05, 9.404099999999957e-05, 9.4333000000002e-05, 9.452799999999997e-05, 9.422300000000092e-05, 9.405599999999861e-05, 9.426400000000015e-05, 9.388899999999978e-05, 9.429199999999929e-05, 9.404199999999904e-05, 9.422300000000092e-05, 9.459699999999835e-05, 9.426300000000068e-05, 9.38880000000003e-05, 9.422199999999797e-05, 9.416699999999917e-05, 9.409700000000132e-05, 9.402799999999947e-05, 9.402799999999947e-05, 9.370800000000137e-05, 9.36529999999991e-05, 9.427799999999972e-05, 9.423700000000049e-05, 9.369499999999781e-05, 9.41659999999997e-05, 9.38469999999976e-05, 9.455499999999964e-05, 9.388899999999978e-05, 9.459700000000182e-05, 9.437500000000071e-05, 9.419399999999883e-05, 9.419500000000178e-05, 9.425000000000058e-05, 9.397300000000067e-05, 9.404200000000251e-05, 9.407000000000165e-05, 9.388899999999978e-05, 9.431899999999896e-05, 9.422199999999797e-05, 9.463900000000053e-05, 9.394399999999858e-05, 9.404199999999904e-05, 9.431999999999843e-05]</msg>
<status status="PASS" starttime="20201029 18:15:37.577" endtime="20201029 18:15:37.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.572" endtime="20201029 18:15:37.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.583" endtime="20201029 18:15:37.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.581" endtime="20201029 18:15:37.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.580" endtime="20201029 18:15:37.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.222" endtime="20201029 18:15:37.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.221" endtime="20201029 18:15:37.603"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.612" endtime="20201029 18:15:37.632"></status>
</kw>
<msg timestamp="20201029 18:15:37.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.610" endtime="20201029 18:15:37.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.634" endtime="20201029 18:15:37.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.636" endtime="20201029 18:15:37.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.608" endtime="20201029 18:15:37.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.606" endtime="20201029 18:15:37.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.645" endtime="20201029 18:15:37.933"></status>
</kw>
<msg timestamp="20201029 18:15:37.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019408125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.644" endtime="20201029 18:15:37.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019408125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.937" endtime="20201029 18:15:37.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.946" endtime="20201029 18:15:37.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.641" endtime="20201029 18:15:37.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.640" endtime="20201029 18:15:37.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.952" level="INFO">${RESULT} = [{'diff': 9.49859999999983e-05}, {'diff': 9.538900000000128e-05}, {'diff': 9.473599999999804e-05}, {'diff': 9.516700000000017e-05}, {'diff': 9.565299999999763e-05}, {'diff': 9.50140000000009e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:37.949" endtime="20201029 18:15:37.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.956" level="INFO">${ACCURACY} = {'diff': [9.49859999999983e-05, 9.538900000000128e-05, 9.473599999999804e-05, 9.516700000000017e-05, 9.565299999999763e-05, 9.50140000000009e-05, 9.484799999999807e-05, 9.477800000000022e-05, 9.501299...</msg>
<status status="PASS" starttime="20201029 18:15:37.953" endtime="20201029 18:15:37.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.960" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.959" endtime="20201029 18:15:37.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.963" level="INFO">VALUE: [9.49859999999983e-05, 9.538900000000128e-05, 9.473599999999804e-05, 9.516700000000017e-05, 9.565299999999763e-05, 9.50140000000009e-05, 9.484799999999807e-05, 9.477800000000022e-05, 9.501299999999796e-05, 9.55270000000015e-05, 9.536099999999867e-05, 9.486100000000164e-05, 9.491699999999992e-05, 9.531899999999996e-05, 9.490300000000035e-05, 9.483299999999903e-05, 9.488900000000078e-05, 9.477800000000022e-05, 9.490200000000087e-05, 9.516700000000017e-05, 9.531899999999996e-05, 9.505500000000014e-05, 9.508299999999928e-05, 9.50140000000009e-05, 9.472200000000194e-05, 9.566700000000067e-05, 9.50140000000009e-05, 9.55279999999975e-05, 9.480599999999936e-05, 9.538900000000128e-05, 9.501399999999743e-05, 9.57079999999999e-05, 9.509799999999832e-05, 9.549999999999836e-05, 9.498600000000176e-05, 9.504200000000004e-05, 9.520800000000287e-05, 9.543099999999999e-05, 9.494399999999958e-05, 9.504200000000004e-05, 9.483299999999903e-05, 9.472199999999847e-05, 9.509699999999885e-05, 9.472300000000142e-05, 9.538900000000128e-05, 9.549999999999836e-05, 9.490300000000035e-05, 9.526300000000168e-05, 9.529200000000029e-05, 9.509799999999832e-05]</msg>
<status status="PASS" starttime="20201029 18:15:37.961" endtime="20201029 18:15:37.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.957" endtime="20201029 18:15:37.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.968" endtime="20201029 18:15:37.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.966" endtime="20201029 18:15:37.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.965" endtime="20201029 18:15:37.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.604" endtime="20201029 18:15:37.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.604" endtime="20201029 18:15:37.988"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.997" endtime="20201029 18:15:38.021"></status>
</kw>
<msg timestamp="20201029 18:15:38.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.995" endtime="20201029 18:15:38.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.023" endtime="20201029 18:15:38.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.026" endtime="20201029 18:15:38.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.993" endtime="20201029 18:15:38.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.991" endtime="20201029 18:15:38.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.035" endtime="20201029 18:15:38.321"></status>
</kw>
<msg timestamp="20201029 18:15:38.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022899417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02299575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:38.033" endtime="20201029 18:15:38.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022899417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02299575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:38.326" endtime="20201029 18:15:38.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.334" endtime="20201029 18:15:38.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.031" endtime="20201029 18:15:38.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.029" endtime="20201029 18:15:38.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.340" level="INFO">${RESULT} = [{'diff': 9.633300000000053e-05}, {'diff': 9.572199999999947e-05}, {'diff': 9.611099999999942e-05}, {'diff': 9.640300000000185e-05}, {'diff': 9.613899999999856e-05}, {'diff': 9.62920000000013e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:38.337" endtime="20201029 18:15:38.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.344" level="INFO">${ACCURACY} = {'diff': [9.633300000000053e-05, 9.572199999999947e-05, 9.611099999999942e-05, 9.640300000000185e-05, 9.613899999999856e-05, 9.62920000000013e-05, 9.662499999999949e-05, 9.579099999999785e-05, 9.59439...</msg>
<status status="PASS" starttime="20201029 18:15:38.341" endtime="20201029 18:15:38.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.349" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.348" endtime="20201029 18:15:38.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.351" level="INFO">VALUE: [9.633300000000053e-05, 9.572199999999947e-05, 9.611099999999942e-05, 9.640300000000185e-05, 9.613899999999856e-05, 9.62920000000013e-05, 9.662499999999949e-05, 9.579099999999785e-05, 9.594399999999711e-05, 9.59859999999993e-05, 9.650000000000283e-05, 9.606900000000071e-05, 9.618100000000074e-05, 9.662499999999949e-05, 9.641699999999795e-05, 9.665299999999863e-05, 9.599999999999886e-05, 9.584700000000307e-05, 9.608399999999975e-05, 9.60409999999981e-05, 9.642999999999805e-05, 9.583300000000003e-05, 9.583300000000003e-05, 9.58469999999996e-05, 9.641700000000142e-05, 9.665299999999863e-05, 9.591700000000092e-05, 9.591700000000092e-05, 9.663799999999959e-05, 9.581999999999993e-05, 9.634799999999957e-05, 9.609799999999932e-05, 9.613799999999909e-05, 9.59019999999984e-05, 9.643000000000151e-05, 9.640299999999838e-05, 9.61669999999977e-05, 9.655600000000111e-05, 9.572199999999947e-05, 9.645800000000065e-05, 9.66530000000021e-05, 9.595899999999963e-05, 9.665299999999863e-05, 9.640300000000185e-05, 9.652699999999903e-05, 9.658300000000078e-05, 9.619400000000083e-05, 9.661099999999992e-05, 9.623599999999954e-05, 9.665299999999863e-05]</msg>
<status status="PASS" starttime="20201029 18:15:38.350" endtime="20201029 18:15:38.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.345" endtime="20201029 18:15:38.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.357" endtime="20201029 18:15:38.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.355" endtime="20201029 18:15:38.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.354" endtime="20201029 18:15:38.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.989" endtime="20201029 18:15:38.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.989" endtime="20201029 18:15:38.377"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.386" endtime="20201029 18:15:38.407"></status>
</kw>
<msg timestamp="20201029 18:15:38.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.385" endtime="20201029 18:15:38.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.408" endtime="20201029 18:15:38.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.411" endtime="20201029 18:15:38.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.382" endtime="20201029 18:15:38.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.380" endtime="20201029 18:15:38.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.420" endtime="20201029 18:15:38.705"></status>
</kw>
<msg timestamp="20201029 18:15:38.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019592792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.418" endtime="20201029 18:15:38.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019592792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.709" endtime="20201029 18:15:38.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.717" endtime="20201029 18:15:38.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.416" endtime="20201029 18:15:38.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.414" endtime="20201029 18:15:38.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.723" level="INFO">${RESULT} = [{'diff': 9.709800000000032e-05}, {'diff': 9.695900000000063e-05}, {'diff': 9.743000000000251e-05}, {'diff': 9.720799999999793e-05}, {'diff': 9.691599999999898e-05}, {'diff': 9.745799999999818e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:38.720" endtime="20201029 18:15:38.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.728" level="INFO">${ACCURACY} = {'diff': [9.709800000000032e-05, 9.695900000000063e-05, 9.743000000000251e-05, 9.720799999999793e-05, 9.691599999999898e-05, 9.745799999999818e-05, 9.73470000000011e-05, 9.733300000000153e-05, 9.76529...</msg>
<status status="PASS" starttime="20201029 18:15:38.724" endtime="20201029 18:15:38.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.733" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.732" endtime="20201029 18:15:38.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.735" level="INFO">VALUE: [9.709800000000032e-05, 9.695900000000063e-05, 9.743000000000251e-05, 9.720799999999793e-05, 9.691599999999898e-05, 9.745799999999818e-05, 9.73470000000011e-05, 9.733300000000153e-05, 9.765299999999963e-05, 9.718099999999827e-05, 9.740300000000285e-05, 9.68059999999979e-05, 9.691700000000192e-05, 9.715299999999913e-05, 9.738899999999981e-05, 9.702699999999953e-05, 9.736100000000067e-05, 9.709700000000085e-05, 9.712499999999999e-05, 9.690299999999888e-05, 9.720799999999793e-05, 9.695800000000115e-05, 9.741700000000242e-05, 9.765299999999963e-05, 9.676399999999918e-05, 9.737500000000024e-05, 9.687499999999974e-05, 9.709700000000085e-05, 9.656899999999774e-05, 9.697200000000072e-05, 9.687499999999974e-05, 9.704199999999857e-05, 9.747200000000122e-05, 9.722200000000097e-05, 9.736100000000067e-05, 9.677800000000222e-05, 9.738899999999981e-05, 9.720799999999793e-05, 9.741599999999948e-05, 9.720799999999793e-05, 9.750000000000036e-05, 9.756899999999874e-05, 9.672200000000047e-05, 9.740299999999938e-05, 9.759699999999788e-05, 9.751399999999993e-05, 9.744500000000156e-05, 9.711100000000042e-05, 9.688799999999984e-05, 9.734800000000057e-05]</msg>
<status status="PASS" starttime="20201029 18:15:38.734" endtime="20201029 18:15:38.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.729" endtime="20201029 18:15:38.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.740" endtime="20201029 18:15:38.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.739" endtime="20201029 18:15:38.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.738" endtime="20201029 18:15:38.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.378" endtime="20201029 18:15:38.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.378" endtime="20201029 18:15:38.761"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.770" endtime="20201029 18:15:38.791"></status>
</kw>
<msg timestamp="20201029 18:15:38.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.768" endtime="20201029 18:15:38.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.792" endtime="20201029 18:15:38.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.795" endtime="20201029 18:15:38.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.766" endtime="20201029 18:15:38.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.763" endtime="20201029 18:15:38.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.804" endtime="20201029 18:15:39.091"></status>
</kw>
<msg timestamp="20201029 18:15:39.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019360111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019458347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.802" endtime="20201029 18:15:39.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019360111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019458347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.095" endtime="20201029 18:15:39.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.103" endtime="20201029 18:15:39.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.800" endtime="20201029 18:15:39.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.798" endtime="20201029 18:15:39.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.110" level="INFO">${RESULT} = [{'diff': 9.823600000000154e-05}, {'diff': 9.797199999999825e-05}, {'diff': 9.859699999999888e-05}, {'diff': 9.790299999999988e-05}, {'diff': 9.768100000000224e-05}, {'diff': 9.783299999999856e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:39.107" endtime="20201029 18:15:39.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.114" level="INFO">${ACCURACY} = {'diff': [9.823600000000154e-05, 9.797199999999825e-05, 9.859699999999888e-05, 9.790299999999988e-05, 9.768100000000224e-05, 9.783299999999856e-05, 9.834800000000157e-05, 9.788900000000031e-05, 9.7902...</msg>
<status status="PASS" starttime="20201029 18:15:39.111" endtime="20201029 18:15:39.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.118" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.117" endtime="20201029 18:15:39.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.121" level="INFO">VALUE: [9.823600000000154e-05, 9.797199999999825e-05, 9.859699999999888e-05, 9.790299999999988e-05, 9.768100000000224e-05, 9.783299999999856e-05, 9.834800000000157e-05, 9.788900000000031e-05, 9.790299999999988e-05, 9.795799999999869e-05, 9.78470000000016e-05, 9.806899999999924e-05, 9.786100000000117e-05, 9.791699999999945e-05, 9.769399999999887e-05, 9.838900000000081e-05, 9.83059999999994e-05, 9.78340000000015e-05, 9.79730000000012e-05, 9.858399999999878e-05, 9.777700000000028e-05, 9.850000000000136e-05, 9.775000000000061e-05, 9.82219999999985e-05, 9.818100000000274e-05, 9.858299999999931e-05, 9.781899999999899e-05, 9.776400000000018e-05, 9.777799999999975e-05, 9.770899999999791e-05, 9.822299999999798e-05, 9.786100000000117e-05, 9.786100000000117e-05, 9.852699999999756e-05, 9.765199999999669e-05, 9.861100000000192e-05, 9.865300000000063e-05, 9.862500000000149e-05, 9.773599999999757e-05, 9.802699999999706e-05, 9.855599999999964e-05, 9.82219999999985e-05, 9.834699999999863e-05, 9.791699999999945e-05, 9.795899999999816e-05, 9.823599999999807e-05, 9.784699999999813e-05, 9.829199999999982e-05, 9.80410000000001e-05, 9.822200000000197e-05]</msg>
<status status="PASS" starttime="20201029 18:15:39.119" endtime="20201029 18:15:39.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.115" endtime="20201029 18:15:39.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.126" endtime="20201029 18:15:39.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.124" endtime="20201029 18:15:39.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.123" endtime="20201029 18:15:39.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.762" endtime="20201029 18:15:39.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.761" endtime="20201029 18:15:39.146"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.155" endtime="20201029 18:15:39.176"></status>
</kw>
<msg timestamp="20201029 18:15:39.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.153" endtime="20201029 18:15:39.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.178" endtime="20201029 18:15:39.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.180" endtime="20201029 18:15:39.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.151" endtime="20201029 18:15:39.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.149" endtime="20201029 18:15:39.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.189" endtime="20201029 18:15:39.473"></status>
</kw>
<msg timestamp="20201029 18:15:39.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020187111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020286125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.187" endtime="20201029 18:15:39.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020187111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020286125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.477" endtime="20201029 18:15:39.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.486" endtime="20201029 18:15:39.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.185" endtime="20201029 18:15:39.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.183" endtime="20201029 18:15:39.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.492" level="INFO">${RESULT} = [{'diff': 9.901399999999796e-05}, {'diff': 9.877700000000128e-05}, {'diff': 9.938900000000181e-05}, {'diff': 9.944400000000062e-05}, {'diff': 9.883300000000303e-05}, {'diff': 9.96670000000012e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:39.489" endtime="20201029 18:15:39.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.496" level="INFO">${ACCURACY} = {'diff': [9.901399999999796e-05, 9.877700000000128e-05, 9.938900000000181e-05, 9.944400000000062e-05, 9.883300000000303e-05, 9.96670000000012e-05, 9.926400000000168e-05, 9.891700000000045e-05, 9.90970...</msg>
<status status="PASS" starttime="20201029 18:15:39.493" endtime="20201029 18:15:39.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.501" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.500" endtime="20201029 18:15:39.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.503" level="INFO">VALUE: [9.901399999999796e-05, 9.877700000000128e-05, 9.938900000000181e-05, 9.944400000000062e-05, 9.883300000000303e-05, 9.96670000000012e-05, 9.926400000000168e-05, 9.891700000000045e-05, 9.909700000000285e-05, 9.913899999999809e-05, 9.91670000000007e-05, 9.887499999999827e-05, 9.870799999999944e-05, 9.881999999999946e-05, 9.952699999999856e-05, 9.93609999999992e-05, 9.870799999999944e-05, 9.911100000000242e-05, 9.8721999999999e-05, 9.8721999999999e-05, 9.937499999999877e-05, 9.965299999999816e-05, 9.897299999999873e-05, 9.954200000000107e-05, 9.879200000000032e-05, 9.931999999999996e-05, 9.926300000000221e-05, 9.906900000000024e-05, 9.883299999999956e-05, 9.927799999999778e-05, 9.89730000000022e-05, 9.886100000000217e-05, 9.91670000000007e-05, 9.947199999999976e-05, 9.947299999999923e-05, 9.877800000000075e-05, 9.898599999999882e-05, 9.959699999999988e-05, 9.91939999999969e-05, 9.920799999999994e-05, 9.909699999999938e-05, 9.926400000000168e-05, 9.900000000000186e-05, 9.904200000000057e-05, 9.89860000000023e-05, 9.931999999999996e-05, 9.965299999999816e-05, 9.940299999999791e-05, 9.911099999999895e-05, 9.888900000000131e-05]</msg>
<status status="PASS" starttime="20201029 18:15:39.502" endtime="20201029 18:15:39.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.497" endtime="20201029 18:15:39.505"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.509" endtime="20201029 18:15:39.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.507" endtime="20201029 18:15:39.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.506" endtime="20201029 18:15:39.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.147" endtime="20201029 18:15:39.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.147" endtime="20201029 18:15:39.530"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.538" endtime="20201029 18:15:39.559"></status>
</kw>
<msg timestamp="20201029 18:15:39.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.537" endtime="20201029 18:15:39.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.560" endtime="20201029 18:15:39.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.563" endtime="20201029 18:15:39.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.534" endtime="20201029 18:15:39.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.532" endtime="20201029 18:15:39.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.572" endtime="20201029 18:15:39.857"></status>
</kw>
<msg timestamp="20201029 18:15:39.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019733958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.570" endtime="20201029 18:15:39.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019733958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.861" endtime="20201029 18:15:39.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.869" endtime="20201029 18:15:39.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.568" endtime="20201029 18:15:39.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.566" endtime="20201029 18:15:39.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.876" level="INFO">${RESULT} = [{'diff': 0.00010026399999999921}, {'diff': 0.00010054099999999913}, {'diff': 9.976399999999871e-05}, {'diff': 0.00010026399999999921}, {'diff': 0.00010048600000000033}, {'diff': 9.972299999999948e-05...</msg>
<status status="PASS" starttime="20201029 18:15:39.873" endtime="20201029 18:15:39.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.881" level="INFO">${ACCURACY} = {'diff': [0.00010026399999999921, 0.00010054099999999913, 9.976399999999871e-05, 0.00010026399999999921, 0.00010048600000000033, 9.972299999999948e-05, 0.00010052799999999903, 9.982000000000046e-05, 0...</msg>
<status status="PASS" starttime="20201029 18:15:39.877" endtime="20201029 18:15:39.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.885" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.884" endtime="20201029 18:15:39.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.888" level="INFO">VALUE: [0.00010026399999999921, 0.00010054099999999913, 9.976399999999871e-05, 0.00010026399999999921, 0.00010048600000000033, 9.972299999999948e-05, 0.00010052799999999903, 9.982000000000046e-05, 0.0001005549999999987, 9.98479999999996e-05, 0.00010027799999999878, 0.00010019400000000137, 0.00010008300000000081, 9.983300000000056e-05, 9.990300000000188e-05, 0.0001001670000000017, 9.969400000000087e-05, 0.00010058299999999784, 0.00010008400000000028, 0.00010032000000000096, 0.00010040300000000238, 9.983400000000003e-05, 0.00010048600000000033, 9.970800000000044e-05, 9.970799999999697e-05, 0.0001000410000000021, 0.00010006900000000124, 0.00010027799999999878, 9.987499999999927e-05, 9.970800000000044e-05, 0.0001005549999999987, 0.00010008400000000028, 0.00010042999999999858, 9.969500000000034e-05, 9.970899999999991e-05, 0.00010016600000000223, 0.00010051399999999946, 9.975000000000261e-05, 0.00010004200000000157, 0.00010013899999999909, 0.00010048600000000033, 9.9722e-05, 0.00010062500000000002, 0.00010020900000000041, 0.00010059800000000035, 0.00010008400000000028, 0.00010020800000000094, 0.00010020799999999747, 0.00010016699999999823, 0.00010041699999999848]</msg>
<status status="PASS" starttime="20201029 18:15:39.886" endtime="20201029 18:15:40.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.882" endtime="20201029 18:15:40.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.072" endtime="20201029 18:15:40.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.069" endtime="20201029 18:15:40.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.067" endtime="20201029 18:15:40.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.530" endtime="20201029 18:15:40.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.530" endtime="20201029 18:15:40.096"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.114" endtime="20201029 18:15:40.141"></status>
</kw>
<msg timestamp="20201029 18:15:40.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.111" endtime="20201029 18:15:40.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.144" endtime="20201029 18:15:40.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.149" endtime="20201029 18:15:40.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.106" endtime="20201029 18:15:40.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.101" endtime="20201029 18:15:40.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.167" endtime="20201029 18:15:40.460"></status>
</kw>
<msg timestamp="20201029 18:15:40.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033131056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033232458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.164" endtime="20201029 18:15:40.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033131056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033232458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.464" endtime="20201029 18:15:40.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.472" endtime="20201029 18:15:40.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.159" endtime="20201029 18:15:40.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.155" endtime="20201029 18:15:40.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.478" level="INFO">${RESULT} = [{'diff': 0.00010140200000000044}, {'diff': 0.00010122199999999804}, {'diff': 0.00010131900000000249}, {'diff': 0.00010072199999999754}, {'diff': 0.00010079200000000232}, {'diff': 0.000101416999999999...</msg>
<status status="PASS" starttime="20201029 18:15:40.475" endtime="20201029 18:15:40.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.482" level="INFO">${ACCURACY} = {'diff': [0.00010140200000000044, 0.00010122199999999804, 0.00010131900000000249, 0.00010072199999999754, 0.00010079200000000232, 0.00010141699999999948, 0.00010145899999999819, 0.00010127800000000325...</msg>
<status status="PASS" starttime="20201029 18:15:40.479" endtime="20201029 18:15:40.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.487" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.486" endtime="20201029 18:15:40.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.489" level="INFO">VALUE: [0.00010140200000000044, 0.00010122199999999804, 0.00010131900000000249, 0.00010072199999999754, 0.00010079200000000232, 0.00010141699999999948, 0.00010145899999999819, 0.00010127800000000325, 0.00010152799999999657, 0.00010116699999999923, 0.00010077699999999634, 0.00010090199999999994, 0.00010161100000000145, 0.00010127800000000325, 0.00010156900000000274, 0.00010154199999999614, 0.00010166699999999973, 0.00010104200000000257, 0.00010149999999999743, 0.00010104200000000257, 0.00010123699999999708, 0.00010158400000000178, 0.00010077800000000275, 0.00010138800000000087, 0.00010127799999999632, 0.00010056900000000174, 0.00010120799999999847, 0.00010079200000000232, 0.0001012080000000054, 0.00010107000000000171, 0.0001016809999999993, 0.00010147199999999829, 0.00010147299999999776, 0.00010157000000000221, 0.00010147199999999829, 0.00010145799999999872, 0.00010083300000000156, 0.00010102799999999607, 0.00010070799999999797, 0.00010056900000000174, 0.00010088899999999984, 0.00010094499999999812, 0.00010094500000000506, 0.00010141699999999948, 0.0001013339999999946, 0.00010147299999999776, 0.00010116599999999976, 0.0001007359999999971, 0.00010131899999999555, 0.00010130500000000292]</msg>
<status status="PASS" starttime="20201029 18:15:40.488" endtime="20201029 18:15:40.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.483" endtime="20201029 18:15:40.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.494" endtime="20201029 18:15:40.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.493" endtime="20201029 18:15:40.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.491" endtime="20201029 18:15:40.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.098" endtime="20201029 18:15:40.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.097" endtime="20201029 18:15:40.515"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.524" endtime="20201029 18:15:40.546"></status>
</kw>
<msg timestamp="20201029 18:15:40.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.522" endtime="20201029 18:15:40.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.547" endtime="20201029 18:15:40.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.550" endtime="20201029 18:15:40.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.519" endtime="20201029 18:15:40.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.517" endtime="20201029 18:15:40.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.559" endtime="20201029 18:15:40.844"></status>
</kw>
<msg timestamp="20201029 18:15:40.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020612889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020715139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.557" endtime="20201029 18:15:40.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020612889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020715139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.849" endtime="20201029 18:15:40.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.857" endtime="20201029 18:15:40.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.555" endtime="20201029 18:15:40.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.553" endtime="20201029 18:15:40.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.864" level="INFO">${RESULT} = [{'diff': 0.00010225000000000165}, {'diff': 0.00010236099999999873}, {'diff': 0.00010272199999999954}, {'diff': 0.00010209800000000185}, {'diff': 0.00010220900000000241}, {'diff': 0.000102180000000000...</msg>
<status status="PASS" starttime="20201029 18:15:40.861" endtime="20201029 18:15:40.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.868" level="INFO">${ACCURACY} = {'diff': [0.00010225000000000165, 0.00010236099999999873, 0.00010272199999999954, 0.00010209800000000185, 0.00010220900000000241, 0.00010218000000000033, 0.00010211100000000195, 0.00010183299999999909...</msg>
<status status="PASS" starttime="20201029 18:15:40.865" endtime="20201029 18:15:40.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.873" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.872" endtime="20201029 18:15:40.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.876" level="INFO">VALUE: [0.00010225000000000165, 0.00010236099999999873, 0.00010272199999999954, 0.00010209800000000185, 0.00010220900000000241, 0.00010218000000000033, 0.00010211100000000195, 0.00010183299999999909, 0.0001020550000000002, 0.00010197199999999879, 0.00010197199999999879, 0.00010176400000000071, 0.00010243100000000005, 0.00010182000000000246, 0.00010261099999999898, 0.00010222299999999851, 0.00010230500000000045, 0.00010194399999999965, 0.00010222199999999904, 0.00010247199999999929, 0.00010259699999999941, 0.00010175000000000115, 0.00010177800000000028, 0.00010222199999999904, 0.00010193100000000302, 0.00010226399999999775, 0.00010180599999999942, 0.00010197300000000173, 0.00010240300000000091, 0.00010216600000000076, 0.00010227700000000131, 0.00010194399999999965, 0.00010218000000000033, 0.00010222199999999904, 0.00010222199999999904, 0.00010220800000000294, 0.00010240300000000091, 0.00010237500000000177, 0.00010265299999999769, 0.00010249999999999843, 0.00010233299999999959, 0.00010263799999999865, 0.00010227700000000131, 0.0001023610000000022, 0.00010263900000000159, 0.00010222199999999904, 0.00010222199999999904, 0.00010188900000000084, 0.00010230599999999992, 0.00010265300000000116]</msg>
<status status="PASS" starttime="20201029 18:15:40.874" endtime="20201029 18:15:40.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.869" endtime="20201029 18:15:40.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.882" endtime="20201029 18:15:40.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.880" endtime="20201029 18:15:40.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.879" endtime="20201029 18:15:40.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.516" endtime="20201029 18:15:40.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.515" endtime="20201029 18:15:40.903"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.920" endtime="20201029 18:15:40.949"></status>
</kw>
<msg timestamp="20201029 18:15:40.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.914" endtime="20201029 18:15:40.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.952" endtime="20201029 18:15:40.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.958" endtime="20201029 18:15:40.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.910" endtime="20201029 18:15:40.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.907" endtime="20201029 18:15:40.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.978" endtime="20201029 18:15:41.275"></status>
</kw>
<msg timestamp="20201029 18:15:41.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031654361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031757125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.975" endtime="20201029 18:15:41.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031654361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031757125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.279" endtime="20201029 18:15:41.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.288" endtime="20201029 18:15:41.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.969" endtime="20201029 18:15:41.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.965" endtime="20201029 18:15:41.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.295" level="INFO">${RESULT} = [{'diff': 0.00010276399999999825}, {'diff': 0.00010284700000000313}, {'diff': 0.0001027359999999991}, {'diff': 0.00010359799999999642}, {'diff': 0.00010311099999999601}, {'diff': 0.0001035129999999995...</msg>
<status status="PASS" starttime="20201029 18:15:41.291" endtime="20201029 18:15:41.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.300" level="INFO">${ACCURACY} = {'diff': [0.00010276399999999825, 0.00010284700000000313, 0.0001027359999999991, 0.00010359799999999642, 0.00010311099999999601, 0.00010351299999999952, 0.00010327699999999884, 0.00010326400000000568,...</msg>
<status status="PASS" starttime="20201029 18:15:41.296" endtime="20201029 18:15:41.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.305" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.304" endtime="20201029 18:15:41.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.308" level="INFO">VALUE: [0.00010276399999999825, 0.00010284700000000313, 0.0001027359999999991, 0.00010359799999999642, 0.00010311099999999601, 0.00010351299999999952, 0.00010327699999999884, 0.00010326400000000568, 0.00010368000000000183, 0.0001027359999999991, 0.0001030689999999973, 0.00010340300000000191, 0.00010295800000000022, 0.00010284699999999619, 0.00010351299999999952, 0.00010274999999999868, 0.00010363899999999565, 0.00010291599999999457, 0.0001035689999999978, 0.00010327699999999884, 0.00010277800000000475, 0.00010337500000000277, 0.00010295800000000022, 0.00010302699999999859, 0.0001033889999999954, 0.00010319500000000037, 0.00010340300000000191, 0.00010322200000000004, 0.00010349999999999943, 0.00010308300000000381, 0.00010352799999999857, 0.00010330499999999798, 0.00010363900000000259, 0.00010316700000000123, 0.00010320800000000047, 0.00010295800000000022, 0.00010359699999999694, 0.00010327799999999832, 0.00010276400000000518, 0.00010286099999999576, 0.0001030410000000051, 0.00010365200000000269, 0.00010275000000000561, 0.00010283300000000356, 0.00010266700000000073, 0.00010304199999999764, 0.00010276299999999877, 0.00010284700000000313, 0.00010329199999999789, 0.00010329199999999789]</msg>
<status status="PASS" starttime="20201029 18:15:41.306" endtime="20201029 18:15:41.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.301" endtime="20201029 18:15:41.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.313" endtime="20201029 18:15:41.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.311" endtime="20201029 18:15:41.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.310" endtime="20201029 18:15:41.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.905" endtime="20201029 18:15:41.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.904" endtime="20201029 18:15:41.334"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.343" endtime="20201029 18:15:41.364"></status>
</kw>
<msg timestamp="20201029 18:15:41.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.341" endtime="20201029 18:15:41.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.365" endtime="20201029 18:15:41.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.368" endtime="20201029 18:15:41.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.338" endtime="20201029 18:15:41.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.336" endtime="20201029 18:15:41.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.377" endtime="20201029 18:15:41.664"></status>
</kw>
<msg timestamp="20201029 18:15:41.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020185806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.376" endtime="20201029 18:15:41.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020185806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.669" endtime="20201029 18:15:41.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.677" endtime="20201029 18:15:41.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.373" endtime="20201029 18:15:41.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.371" endtime="20201029 18:15:41.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.684" level="INFO">${RESULT} = [{'diff': 0.00010408400000000081}, {'diff': 0.00010427800000000279}, {'diff': 0.0001042360000000006}, {'diff': 0.00010384700000000066}, {'diff': 0.00010397200000000079}, {'diff': 0.0001036799999999983...</msg>
<status status="PASS" starttime="20201029 18:15:41.681" endtime="20201029 18:15:41.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.688" level="INFO">${ACCURACY} = {'diff': [0.00010408400000000081, 0.00010427800000000279, 0.0001042360000000006, 0.00010384700000000066, 0.00010397200000000079, 0.00010367999999999836, 0.00010426399999999975, 0.00010434700000000116,...</msg>
<status status="PASS" starttime="20201029 18:15:41.685" endtime="20201029 18:15:41.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.694" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.691" endtime="20201029 18:15:41.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.696" level="INFO">VALUE: [0.00010408400000000081, 0.00010427800000000279, 0.0001042360000000006, 0.00010384700000000066, 0.00010397200000000079, 0.00010367999999999836, 0.00010426399999999975, 0.00010434700000000116, 0.00010465299999999969, 0.00010459699999999794, 0.0001043200000000015, 0.00010426399999999975, 0.00010412500000000005, 0.00010395800000000122, 0.00010408299999999787, 0.00010416599999999929, 0.00010379200000000185, 0.00010426399999999975, 0.00010416699999999876, 0.00010427800000000279, 0.00010445900000000119, 0.00010376399999999925, 0.00010390299999999894, 0.0001040420000000021, 0.00010447299999999729, 0.00010395799999999775, 0.000104514, 0.00010377699999999934, 0.00010467999999999936, 0.0001040689999999983, 0.00010429099999999941, 0.00010447200000000129, 0.00010395799999999775, 0.00010384700000000066, 0.00010402800000000254, 0.00010445899999999772, 0.00010445800000000172, 0.00010419399999999843, 0.00010374999999999968, 0.00010434699999999769, 0.00010441700000000248, 0.00010426399999999975, 0.00010415299999999919, 0.00010415299999999919, 0.00010415299999999919, 0.00010405600000000167, 0.00010459799999999742, 0.0001038749999999998, 0.0001035550000000017, 0.00010388900000000284]</msg>
<status status="PASS" starttime="20201029 18:15:41.695" endtime="20201029 18:15:41.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.689" endtime="20201029 18:15:41.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.701" endtime="20201029 18:15:41.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.700" endtime="20201029 18:15:41.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.699" endtime="20201029 18:15:41.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.335" endtime="20201029 18:15:41.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.334" endtime="20201029 18:15:41.722"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.731" endtime="20201029 18:15:41.754"></status>
</kw>
<msg timestamp="20201029 18:15:41.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.730" endtime="20201029 18:15:41.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.756" endtime="20201029 18:15:41.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.758" endtime="20201029 18:15:41.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.727" endtime="20201029 18:15:41.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.725" endtime="20201029 18:15:41.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.768" endtime="20201029 18:15:42.054"></status>
</kw>
<msg timestamp="20201029 18:15:42.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023448958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023553722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.766" endtime="20201029 18:15:42.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023448958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023553722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.058" endtime="20201029 18:15:42.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.067" endtime="20201029 18:15:42.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.764" endtime="20201029 18:15:42.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.762" endtime="20201029 18:15:42.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.073" level="INFO">${RESULT} = [{'diff': 0.00010476400000000025}, {'diff': 0.00010547199999999882}, {'diff': 0.00010534700000000216}, {'diff': 0.00010531899999999955}, {'diff': 0.00010558299999999937}, {'diff': 0.000104916999999999...</msg>
<status status="PASS" starttime="20201029 18:15:42.070" endtime="20201029 18:15:42.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.077" level="INFO">${ACCURACY} = {'diff': [0.00010476400000000025, 0.00010547199999999882, 0.00010534700000000216, 0.00010531899999999955, 0.00010558299999999937, 0.00010491699999999951, 0.00010458399999999785, 0.00010486100000000123...</msg>
<status status="PASS" starttime="20201029 18:15:42.074" endtime="20201029 18:15:42.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.082" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.081" endtime="20201029 18:15:42.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.085" level="INFO">VALUE: [0.00010476400000000025, 0.00010547199999999882, 0.00010534700000000216, 0.00010531899999999955, 0.00010558299999999937, 0.00010491699999999951, 0.00010458399999999785, 0.00010486100000000123, 0.00010556999999999928, 0.00010481899999999905, 0.00010534699999999869, 0.00010533299999999912, 0.00010526400000000075, 0.00010559699999999894, 0.00010515300000000019, 0.00010530599999999946, 0.00010520800000000247, 0.00010512500000000105, 0.00010491699999999951, 0.00010545899999999872, 0.00010470900000000144, 0.00010495900000000169, 0.00010509700000000191, 0.00010541600000000054, 0.00010477799999999982, 0.00010494399999999918, 0.00010509700000000191, 0.00010511100000000148, 0.00010522300000000151, 0.00010457000000000174, 0.00010499999999999746, 0.00010505600000000268, 0.00010547199999999882, 0.00010515200000000072, 0.00010490200000000047, 0.000105514000000001, 0.00010511100000000148, 0.00010488900000000037, 0.00010527800000000032, 0.00010529199999999989, 0.0001048889999999969, 0.00010526400000000075, 0.00010497199999999832, 0.00010519399999999943, 0.00010550000000000143, 0.00010529199999999989, 0.00010522199999999857, 0.00010541700000000001, 0.00010526399999999728, 0.00010504199999999964]</msg>
<status status="PASS" starttime="20201029 18:15:42.083" endtime="20201029 18:15:42.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.078" endtime="20201029 18:15:42.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.090" endtime="20201029 18:15:42.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.089" endtime="20201029 18:15:42.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.088" endtime="20201029 18:15:42.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.723" endtime="20201029 18:15:42.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.723" endtime="20201029 18:15:42.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.617" endtime="20201029 18:15:42.111"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:01.544" endtime="20201029 18:15:42.112" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.119" endtime="20201029 18:15:42.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.117" endtime="20201029 18:15:42.139"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.152" endtime="20201029 18:15:42.170"></status>
</kw>
<msg timestamp="20201029 18:15:42.171" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.151" endtime="20201029 18:15:42.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.173" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.172" endtime="20201029 18:15:42.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.177" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:42.175" endtime="20201029 18:15:42.177"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:42.148" endtime="20201029 18:15:42.178"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:42.146" endtime="20201029 18:15:42.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.144" endtime="20201029 18:15:42.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:42.182" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:42.182" endtime="20201029 18:15:42.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.179" endtime="20201029 18:15:42.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.143" endtime="20201029 18:15:42.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.143" endtime="20201029 18:15:42.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.184" endtime="20201029 18:15:42.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.141" endtime="20201029 18:15:42.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.140" endtime="20201029 18:15:42.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.116" endtime="20201029 18:15:42.187"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.198" endtime="20201029 18:15:42.216"></status>
</kw>
<msg timestamp="20201029 18:15:42.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.196" endtime="20201029 18:15:42.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.218" endtime="20201029 18:15:42.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.221" endtime="20201029 18:15:42.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.192" endtime="20201029 18:15:42.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.190" endtime="20201029 18:15:42.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.230" endtime="20201029 18:15:42.517"></status>
</kw>
<msg timestamp="20201029 18:15:42.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069695778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069718819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.229" endtime="20201029 18:15:42.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069695778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069718819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.522" endtime="20201029 18:15:42.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.530" endtime="20201029 18:15:42.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.226" endtime="20201029 18:15:42.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.224" endtime="20201029 18:15:42.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.537" level="INFO">${RESULT} = [{'diff': 2.304100000000142e-05}, {'diff': 5.55600000000378e-06}, {'diff': 5.55600000000378e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 5.541999999997271e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:42.534" endtime="20201029 18:15:42.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.541" level="INFO">${ACCURACY} = {'diff': [2.304100000000142e-05, 5.55600000000378e-06, 5.55600000000378e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 5.541999999997271e-06, 5.55600000000378e-06, 5.541999999997271e-06, 5.541999...</msg>
<status status="PASS" starttime="20201029 18:15:42.538" endtime="20201029 18:15:42.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.547" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.546" endtime="20201029 18:15:42.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.549" level="INFO">VALUE: [2.304100000000142e-05, 5.55600000000378e-06, 5.55600000000378e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 5.541999999997271e-06, 5.55600000000378e-06, 5.541999999997271e-06, 5.541999999997271e-06, 5.555999999989902e-06, 6.041999999997771e-06, 5.542000000011149e-06, 6.069999999996911e-06, 5.61200000000206e-06, 6.0550000000048065e-06, 6.041999999997771e-06, 5.5279999999907625e-06, 5.5689999999969375e-06, 5.5279999999907625e-06, 6.040999999998298e-06, 5.5410000000116755e-06, 6.041999999997771e-06, 6.05600000000428e-06, 6.069000000011315e-06, 5.55600000000378e-06, 5.55600000000378e-06, 6.055999999990402e-06, 6.055999999990402e-06, 6.527000000006167e-06, 6.0000000000060005e-06, 5.583000000003446e-06, 6.0550000000048065e-06, 6.054999999990929e-06, 5.52800000000464e-06, 5.555999999989902e-06, 5.5689999999969375e-06, 5.5550000000043065e-06, 5.526999999991289e-06, 6.069999999996911e-06, 5.5410000000116755e-06, 5.569999999996411e-06, 6.040999999998298e-06, 6.540999999998798e-06, 5.55600000000378e-06, 6.054999999990929e-06, 5.542000000011149e-06, 5.5279999999907625e-06, 6.05600000000428e-06, 6.041999999997771e-06, 6.054999999990929e-06]</msg>
<status status="PASS" starttime="20201029 18:15:42.548" endtime="20201029 18:15:42.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.542" endtime="20201029 18:15:42.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.554" endtime="20201029 18:15:42.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.553" endtime="20201029 18:15:42.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.551" endtime="20201029 18:15:42.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.189" endtime="20201029 18:15:42.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.188" endtime="20201029 18:15:42.575"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.584" endtime="20201029 18:15:42.603"></status>
</kw>
<msg timestamp="20201029 18:15:42.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.582" endtime="20201029 18:15:42.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.604" endtime="20201029 18:15:42.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.607" endtime="20201029 18:15:42.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.580" endtime="20201029 18:15:42.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.577" endtime="20201029 18:15:42.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.616" endtime="20201029 18:15:42.900"></status>
</kw>
<msg timestamp="20201029 18:15:42.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020703542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020710611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.615" endtime="20201029 18:15:42.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020703542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020710611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.905" endtime="20201029 18:15:42.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.913" endtime="20201029 18:15:42.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.612" endtime="20201029 18:15:42.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.610" endtime="20201029 18:15:42.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.920" level="INFO">${RESULT} = [{'diff': 7.069000000001907e-06}, {'diff': 6.555999999997841e-06}, {'diff': 6.554999999998368e-06}, {'diff': 7.041000000002767e-06}, {'diff': 6.554999999998368e-06}, {'diff': 6.541999999998271e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:42.917" endtime="20201029 18:15:42.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.925" level="INFO">${ACCURACY} = {'diff': [7.069000000001907e-06, 6.555999999997841e-06, 6.554999999998368e-06, 7.041000000002767e-06, 6.554999999998368e-06, 6.541999999998271e-06, 6.513999999999132e-06, 7.0969999999975775e-06, 6.556...</msg>
<status status="PASS" starttime="20201029 18:15:42.921" endtime="20201029 18:15:42.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.930" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.929" endtime="20201029 18:15:42.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.932" level="INFO">VALUE: [7.069000000001907e-06, 6.555999999997841e-06, 6.554999999998368e-06, 7.041000000002767e-06, 6.554999999998368e-06, 6.541999999998271e-06, 6.513999999999132e-06, 7.0969999999975775e-06, 6.556000000001311e-06, 7.055999999998341e-06, 6.568999999997938e-06, 6.556000000001311e-06, 6.540999999998798e-06, 6.540999999998798e-06, 6.570000000000881e-06, 7.541000000003267e-06, 7.054999999998868e-06, 7.054999999998868e-06, 7.054999999998868e-06, 7.042000000002241e-06, 7.054999999998868e-06, 6.986000000000492e-06, 7.054999999998868e-06, 6.555999999997841e-06, 7.069999999997911e-06, 6.986000000000492e-06, 6.542000000001741e-06, 6.611000000000117e-06, 7.042000000002241e-06, 7.611000000001117e-06, 6.555999999997841e-06, 6.541999999998271e-06, 7.068999999998438e-06, 7.070000000001381e-06, 7.5419999999992715e-06, 6.624999999999687e-06, 7.055999999998341e-06, 6.555000000001837e-06, 7.514000000000132e-06, 7.056000000001811e-06, 6.555000000001837e-06, 7.0419999999987715e-06, 6.555000000001837e-06, 6.556000000001311e-06, 7.556000000002311e-06, 7.041000000002767e-06, 6.542000000001741e-06, 7.041000000002767e-06, 7.0419999999987715e-06, 7.054999999998868e-06]</msg>
<status status="PASS" starttime="20201029 18:15:42.931" endtime="20201029 18:15:42.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.926" endtime="20201029 18:15:42.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.937" endtime="20201029 18:15:42.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.936" endtime="20201029 18:15:42.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.934" endtime="20201029 18:15:42.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.576" endtime="20201029 18:15:42.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.575" endtime="20201029 18:15:42.958"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.967" endtime="20201029 18:15:42.985"></status>
</kw>
<msg timestamp="20201029 18:15:42.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.966" endtime="20201029 18:15:42.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.987" endtime="20201029 18:15:42.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.990" endtime="20201029 18:15:42.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.963" endtime="20201029 18:15:42.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.960" endtime="20201029 18:15:42.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.999" endtime="20201029 18:15:43.285"></status>
</kw>
<msg timestamp="20201029 18:15:43.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020650653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020658681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.997" endtime="20201029 18:15:43.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020650653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020658681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.289" endtime="20201029 18:15:43.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.299" endtime="20201029 18:15:43.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.995" endtime="20201029 18:15:43.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.993" endtime="20201029 18:15:43.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.306" level="INFO">${RESULT} = [{'diff': 8.028000000000202e-06}, {'diff': 7.555999999998841e-06}, {'diff': 7.568999999998938e-06}, {'diff': 8.028000000000202e-06}, {'diff': 8.041999999999772e-06}, {'diff': 8.069999999998911e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:43.302" endtime="20201029 18:15:43.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.310" level="INFO">${ACCURACY} = {'diff': [8.028000000000202e-06, 7.555999999998841e-06, 7.568999999998938e-06, 8.028000000000202e-06, 8.041999999999772e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.028000000000202e-06, 7.5420...</msg>
<status status="PASS" starttime="20201029 18:15:43.307" endtime="20201029 18:15:43.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.315" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.314" endtime="20201029 18:15:43.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.317" level="INFO">VALUE: [8.028000000000202e-06, 7.555999999998841e-06, 7.568999999998938e-06, 8.028000000000202e-06, 8.041999999999772e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.028000000000202e-06, 7.542000000002741e-06, 8.055999999999341e-06, 8.054999999999868e-06, 7.554999999999368e-06, 8.055999999999341e-06, 7.986000000001492e-06, 8.054999999999868e-06, 7.569000000002407e-06, 7.554999999999368e-06, 8.041000000000298e-06, 8.056000000002811e-06, 8.068999999999438e-06, 8.055999999999341e-06, 7.527999999999702e-06, 8.555999999999842e-06, 8.041999999999772e-06, 8.041999999999772e-06, 7.5419999999992715e-06, 8.082999999999008e-06, 8.097000000002047e-06, 7.540999999999798e-06, 7.527000000000228e-06, 7.556000000002311e-06, 8.08400000000195e-06, 8.054999999999868e-06, 8.041999999999772e-06, 8.054999999999868e-06, 8.028000000000202e-06, 7.985999999998022e-06, 8.055999999999341e-06, 7.554999999999368e-06, 8.028000000000202e-06, 8.028000000000202e-06, 7.625000000000687e-06, 7.527999999999702e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.028000000000202e-06, 8.041999999999772e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.5419999999992715e-06]</msg>
<status status="PASS" starttime="20201029 18:15:43.316" endtime="20201029 18:15:43.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.311" endtime="20201029 18:15:43.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.322" endtime="20201029 18:15:43.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.320" endtime="20201029 18:15:43.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.319" endtime="20201029 18:15:43.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.959" endtime="20201029 18:15:43.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.958" endtime="20201029 18:15:43.343"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.353" endtime="20201029 18:15:43.371"></status>
</kw>
<msg timestamp="20201029 18:15:43.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.351" endtime="20201029 18:15:43.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.372" endtime="20201029 18:15:43.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.375" endtime="20201029 18:15:43.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.348" endtime="20201029 18:15:43.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.346" endtime="20201029 18:15:43.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.384" endtime="20201029 18:15:43.669"></status>
</kw>
<msg timestamp="20201029 18:15:43.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021572722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.383" endtime="20201029 18:15:43.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021572722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.673" endtime="20201029 18:15:43.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.682" endtime="20201029 18:15:43.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.380" endtime="20201029 18:15:43.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.378" endtime="20201029 18:15:43.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.689" level="INFO">${RESULT} = [{'diff': 8.555000000000368e-06}, {'diff': 8.541000000000798e-06}, {'diff': 8.541000000000798e-06}, {'diff': 9.056000000000342e-06}, {'diff': 8.555999999999842e-06}, {'diff': 8.499999999998092e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:43.685" endtime="20201029 18:15:43.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.694" level="INFO">${ACCURACY} = {'diff': [8.555000000000368e-06, 8.541000000000798e-06, 8.541000000000798e-06, 9.056000000000342e-06, 8.555999999999842e-06, 8.499999999998092e-06, 9.027999999997732e-06, 9.042000000000772e-06, 8.5689...</msg>
<status status="PASS" starttime="20201029 18:15:43.690" endtime="20201029 18:15:43.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.698" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.697" endtime="20201029 18:15:43.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.701" level="INFO">VALUE: [8.555000000000368e-06, 8.541000000000798e-06, 8.541000000000798e-06, 9.056000000000342e-06, 8.555999999999842e-06, 8.499999999998092e-06, 9.027999999997732e-06, 9.042000000000772e-06, 8.568999999999938e-06, 9.097000000003047e-06, 9.068999999996968e-06, 8.555999999999842e-06, 9.041999999997302e-06, 8.541000000000798e-06, 8.555999999999842e-06, 9.027999999997732e-06, 9.055000000000868e-06, 9.014000000001632e-06, 9.056000000000342e-06, 8.555000000000368e-06, 8.485999999998523e-06, 8.999999999998592e-06, 8.542000000000272e-06, 9.056000000000342e-06, 8.555999999999842e-06, 8.568999999999938e-06, 8.500000000001562e-06, 9.042000000000772e-06, 8.555999999999842e-06, 9.042000000000772e-06, 9.042000000000772e-06, 8.542000000000272e-06, 8.542000000000272e-06, 9.041999999997302e-06, 9.542000000001272e-06, 8.555999999999842e-06, 9.028000000001202e-06, 8.542000000000272e-06, 9.042000000000772e-06, 8.542000000000272e-06, 9.042000000000772e-06, 8.611000000002117e-06, 9.026999999998259e-06, 8.542000000000272e-06, 9.012999999998689e-06, 9.541000000001798e-06, 9.069000000000438e-06, 9.069000000000438e-06, 8.542000000000272e-06, 8.542000000000272e-06]</msg>
<status status="PASS" starttime="20201029 18:15:43.700" endtime="20201029 18:15:43.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.695" endtime="20201029 18:15:43.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.708" endtime="20201029 18:15:43.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.706" endtime="20201029 18:15:43.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.705" endtime="20201029 18:15:43.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.344" endtime="20201029 18:15:43.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.344" endtime="20201029 18:15:43.729"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.738" endtime="20201029 18:15:43.754"></status>
</kw>
<msg timestamp="20201029 18:15:43.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.736" endtime="20201029 18:15:43.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.755" endtime="20201029 18:15:43.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.758" endtime="20201029 18:15:43.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.733" endtime="20201029 18:15:43.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.731" endtime="20201029 18:15:43.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.772" endtime="20201029 18:15:44.061"></status>
</kw>
<msg timestamp="20201029 18:15:44.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020275542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020285569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.769" endtime="20201029 18:15:44.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020275542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020285569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.065" endtime="20201029 18:15:44.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.073" endtime="20201029 18:15:44.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.764" endtime="20201029 18:15:44.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.762" endtime="20201029 18:15:44.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.080" level="INFO">${RESULT} = [{'diff': 1.0026999999999259e-05}, {'diff': 1.0042000000001772e-05}, {'diff': 1.0569999999997942e-05}, {'diff': 9.569000000000938e-06}, {'diff': 1.0055999999997872e-05}, {'diff': 1.0068999999997968e-0...</msg>
<status status="PASS" starttime="20201029 18:15:44.077" endtime="20201029 18:15:44.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.085" level="INFO">${ACCURACY} = {'diff': [1.0026999999999259e-05, 1.0042000000001772e-05, 1.0569999999997942e-05, 9.569000000000938e-06, 1.0055999999997872e-05, 1.0068999999997968e-05, 1.0083000000001008e-05, 1.0055000000001868e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:44.081" endtime="20201029 18:15:44.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.090" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.089" endtime="20201029 18:15:44.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.094" level="INFO">VALUE: [1.0026999999999259e-05, 1.0042000000001772e-05, 1.0569999999997942e-05, 9.569000000000938e-06, 1.0055999999997872e-05, 1.0068999999997968e-05, 1.0083000000001008e-05, 1.0055000000001868e-05, 9.541000000001798e-06, 1.0040999999998829e-05, 9.540999999998329e-06, 1.0041000000002298e-05, 1.0055999999997872e-05, 1.0056000000001342e-05, 1.0054999999998399e-05, 9.528000000001702e-06, 1.0027999999998732e-05, 9.528000000001702e-06, 9.527999999998232e-06, 1.0069999999997442e-05, 1.0556000000001842e-05, 1.0070000000000912e-05, 1.0055999999997872e-05, 1.0040999999998829e-05, 1.0040999999998829e-05, 1.0070000000000912e-05, 9.569000000000938e-06, 9.541999999997802e-06, 9.527999999998232e-06, 1.0027999999998732e-05, 1.0139000000002757e-05, 1.0056000000001342e-05, 1.0068999999997968e-05, 9.513999999998662e-06, 1.0055999999997872e-05, 9.999999999999593e-06, 1.0070000000000912e-05, 1.0527999999999232e-05, 1.0055999999997872e-05, 9.541999999997802e-06, 1.0070000000000912e-05, 9.514000000002132e-06, 9.624999999999218e-06, 9.542000000001272e-06, 9.542000000001272e-06, 1.0042000000001772e-05, 1.0056000000001342e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 9.583999999999981e-06]</msg>
<status status="PASS" starttime="20201029 18:15:44.091" endtime="20201029 18:15:44.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.086" endtime="20201029 18:15:44.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.099" endtime="20201029 18:15:44.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.097" endtime="20201029 18:15:44.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.096" endtime="20201029 18:15:44.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.730" endtime="20201029 18:15:44.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.729" endtime="20201029 18:15:44.120"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.129" endtime="20201029 18:15:44.146"></status>
</kw>
<msg timestamp="20201029 18:15:44.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.127" endtime="20201029 18:15:44.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.148" endtime="20201029 18:15:44.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.150" endtime="20201029 18:15:44.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.124" endtime="20201029 18:15:44.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.122" endtime="20201029 18:15:44.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.164" endtime="20201029 18:15:44.453"></status>
</kw>
<msg timestamp="20201029 18:15:44.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020209903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.161" endtime="20201029 18:15:44.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020209903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.458" endtime="20201029 18:15:44.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.466" endtime="20201029 18:15:44.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.157" endtime="20201029 18:15:44.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.154" endtime="20201029 18:15:44.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.473" level="INFO">${RESULT} = [{'diff': 1.1027999999999732e-05}, {'diff': 1.0554999999998899e-05}, {'diff': 1.0555999999998372e-05}, {'diff': 1.1040999999999829e-05}, {'diff': 1.0540999999999329e-05}, {'diff': 1.1040999999999829e-...</msg>
<status status="PASS" starttime="20201029 18:15:44.469" endtime="20201029 18:15:44.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.477" level="INFO">${ACCURACY} = {'diff': [1.1027999999999732e-05, 1.0554999999998899e-05, 1.0555999999998372e-05, 1.1040999999999829e-05, 1.0540999999999329e-05, 1.1040999999999829e-05, 1.0556000000001842e-05, 1.0486000000000523e-05...</msg>
<status status="PASS" starttime="20201029 18:15:44.474" endtime="20201029 18:15:44.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.482" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.481" endtime="20201029 18:15:44.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.484" level="INFO">VALUE: [1.1027999999999732e-05, 1.0554999999998899e-05, 1.0555999999998372e-05, 1.1040999999999829e-05, 1.0540999999999329e-05, 1.1040999999999829e-05, 1.0556000000001842e-05, 1.0486000000000523e-05, 1.1056000000002342e-05, 1.0513999999999663e-05, 1.1541999999999802e-05, 1.0554999999998899e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.0541999999998802e-05, 1.1041999999999302e-05, 1.0527999999999232e-05, 1.1055999999998872e-05, 1.0556000000001842e-05, 1.1041999999999302e-05, 1.1054999999999399e-05, 1.1069000000002438e-05, 1.1554999999999899e-05, 1.0555999999998372e-05, 1.0500000000000093e-05, 1.1040999999999829e-05, 1.1541000000000329e-05, 1.1098000000001051e-05, 1.0540999999999329e-05, 1.1500000000001093e-05, 1.1040999999999829e-05, 1.0500000000000093e-05, 1.1041999999999302e-05, 1.0540999999999329e-05, 1.1055999999998872e-05, 1.0513999999999663e-05, 1.1042000000002772e-05, 1.1054999999999399e-05, 1.0556000000001842e-05, 1.1027999999999732e-05, 1.1541000000000329e-05, 1.0527999999999232e-05, 1.1041999999999302e-05, 1.0542000000002272e-05, 1.0971999999997983e-05, 1.1054999999999399e-05, 1.1041999999999302e-05, 1.0556000000001842e-05, 1.1042000000002772e-05, 1.0555999999998372e-05]</msg>
<status status="PASS" starttime="20201029 18:15:44.483" endtime="20201029 18:15:44.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.478" endtime="20201029 18:15:44.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.489" endtime="20201029 18:15:44.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.488" endtime="20201029 18:15:44.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.487" endtime="20201029 18:15:44.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.121" endtime="20201029 18:15:44.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.120" endtime="20201029 18:15:44.510"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.519" endtime="20201029 18:15:44.538"></status>
</kw>
<msg timestamp="20201029 18:15:44.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.518" endtime="20201029 18:15:44.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.539" endtime="20201029 18:15:44.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.542" endtime="20201029 18:15:44.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.515" endtime="20201029 18:15:44.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.513" endtime="20201029 18:15:44.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.551" endtime="20201029 18:15:44.839"></status>
</kw>
<msg timestamp="20201029 18:15:44.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021053611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021065181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.550" endtime="20201029 18:15:44.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021053611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021065181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.843" endtime="20201029 18:15:44.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.852" endtime="20201029 18:15:44.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.547" endtime="20201029 18:15:44.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.545" endtime="20201029 18:15:44.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.859" level="INFO">${RESULT} = [{'diff': 1.1569999999998942e-05}, {'diff': 1.2625000000002218e-05}, {'diff': 1.2013999999997693e-05}, {'diff': 1.2041000000000829e-05}, {'diff': 1.2055999999999872e-05}, {'diff': 1.1541999999999802e-...</msg>
<status status="PASS" starttime="20201029 18:15:44.855" endtime="20201029 18:15:44.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.863" level="INFO">${ACCURACY} = {'diff': [1.1569999999998942e-05, 1.2625000000002218e-05, 1.2013999999997693e-05, 1.2041000000000829e-05, 1.2055999999999872e-05, 1.1541999999999802e-05, 1.2055999999999872e-05, 1.2055000000000399e-05...</msg>
<status status="PASS" starttime="20201029 18:15:44.859" endtime="20201029 18:15:44.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.867" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.866" endtime="20201029 18:15:44.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.870" level="INFO">VALUE: [1.1569999999998942e-05, 1.2625000000002218e-05, 1.2013999999997693e-05, 1.2041000000000829e-05, 1.2055999999999872e-05, 1.1541999999999802e-05, 1.2055999999999872e-05, 1.2055000000000399e-05, 1.1583000000002508e-05, 1.2042000000000302e-05, 1.1569000000002938e-05, 1.2042000000000302e-05, 1.1555999999999372e-05, 1.2055999999999872e-05, 1.2013999999997693e-05, 1.1569999999998942e-05, 1.1514000000000663e-05, 1.2042000000000302e-05, 1.2042000000000302e-05, 1.1556000000002842e-05, 1.2055000000000399e-05, 1.2042000000000302e-05, 1.2055000000000399e-05, 1.1541999999999802e-05, 1.2055000000000399e-05, 1.2055999999999872e-05, 1.2541000000001329e-05, 1.2069999999999442e-05, 1.2014000000001163e-05, 1.1541999999999802e-05, 1.204099999999736e-05, 1.1542000000003272e-05, 1.2055999999999872e-05, 1.2055000000000399e-05, 1.1582999999999039e-05, 1.2055999999999872e-05, 1.2055999999999872e-05, 1.2041000000000829e-05, 1.1554999999999899e-05, 1.1528000000000233e-05, 1.2068999999999969e-05, 1.1528000000000233e-05, 1.1555999999999372e-05, 1.1555999999999372e-05, 1.1541999999999802e-05, 1.1568999999999469e-05, 1.2055000000000399e-05, 1.2055000000000399e-05, 1.2082999999999539e-05, 1.2055000000000399e-05]</msg>
<status status="PASS" starttime="20201029 18:15:44.868" endtime="20201029 18:15:44.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.864" endtime="20201029 18:15:44.872"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.876" endtime="20201029 18:15:44.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.874" endtime="20201029 18:15:44.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.873" endtime="20201029 18:15:44.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.511" endtime="20201029 18:15:44.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.511" endtime="20201029 18:15:44.897"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.906" endtime="20201029 18:15:44.924"></status>
</kw>
<msg timestamp="20201029 18:15:44.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.905" endtime="20201029 18:15:44.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.926" endtime="20201029 18:15:44.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.928" endtime="20201029 18:15:44.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.902" endtime="20201029 18:15:44.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.899" endtime="20201029 18:15:44.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.937" endtime="20201029 18:15:45.223"></status>
</kw>
<msg timestamp="20201029 18:15:45.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020698653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020711681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.936" endtime="20201029 18:15:45.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020698653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020711681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.227" endtime="20201029 18:15:45.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.235" endtime="20201029 18:15:45.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.933" endtime="20201029 18:15:45.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.931" endtime="20201029 18:15:45.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.242" level="INFO">${RESULT} = [{'diff': 1.3027999999998263e-05}, {'diff': 1.3070000000000442e-05}, {'diff': 1.305499999999793e-05}, {'diff': 1.3042000000001303e-05}, {'diff': 1.3541999999998333e-05}, {'diff': 1.3041999999997833e-0...</msg>
<status status="PASS" starttime="20201029 18:15:45.239" endtime="20201029 18:15:45.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.249" level="INFO">${ACCURACY} = {'diff': [1.3027999999998263e-05, 1.3070000000000442e-05, 1.305499999999793e-05, 1.3042000000001303e-05, 1.3541999999998333e-05, 1.3041999999997833e-05, 1.3541999999998333e-05, 1.2556000000000372e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:45.243" endtime="20201029 18:15:45.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.253" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.252" endtime="20201029 18:15:45.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.257" level="INFO">VALUE: [1.3027999999998263e-05, 1.3070000000000442e-05, 1.305499999999793e-05, 1.3042000000001303e-05, 1.3541999999998333e-05, 1.3041999999997833e-05, 1.3541999999998333e-05, 1.2556000000000372e-05, 1.3527999999998763e-05, 1.3028000000001733e-05, 1.3041999999997833e-05, 1.2611999999998652e-05, 1.2528000000001233e-05, 1.2556000000000372e-05, 1.3056000000000872e-05, 1.2555000000000899e-05, 1.2542000000000803e-05, 1.3069000000000969e-05, 1.255499999999743e-05, 1.2569999999999942e-05, 1.3055999999997403e-05, 1.3556000000001373e-05, 1.254099999999786e-05, 1.3041999999997833e-05, 1.2541000000001329e-05, 1.2485999999999053e-05, 1.3042000000001303e-05, 1.3056000000000872e-05, 1.3055000000001399e-05, 1.2485999999999053e-05, 1.304099999999836e-05, 1.2527000000001759e-05, 1.3069000000000969e-05, 1.2542000000000803e-05, 1.2555000000000899e-05, 1.2514000000001663e-05, 1.2610999999999178e-05, 1.2639000000001788e-05, 1.2556000000000372e-05, 1.2555999999996903e-05, 1.3555999999997903e-05, 1.2542000000000803e-05, 1.30689999999975e-05, 1.305499999999793e-05, 1.2527999999997763e-05, 1.2569000000000469e-05, 1.3042000000001303e-05, 1.2569000000000469e-05, 1.2999999999999123e-05, 1.2527999999997763e-05]</msg>
<status status="PASS" starttime="20201029 18:15:45.255" endtime="20201029 18:15:45.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.250" endtime="20201029 18:15:45.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.326" endtime="20201029 18:15:45.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.323" endtime="20201029 18:15:45.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.320" endtime="20201029 18:15:45.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.898" endtime="20201029 18:15:45.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.897" endtime="20201029 18:15:45.350"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.368" endtime="20201029 18:15:45.391"></status>
</kw>
<msg timestamp="20201029 18:15:45.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.365" endtime="20201029 18:15:45.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.394" endtime="20201029 18:15:45.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.399" endtime="20201029 18:15:45.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.360" endtime="20201029 18:15:45.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.355" endtime="20201029 18:15:45.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.418" endtime="20201029 18:15:45.709"></status>
</kw>
<msg timestamp="20201029 18:15:45.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0334385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033452556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:45.415" endtime="20201029 18:15:45.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0334385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033452556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:45.713" endtime="20201029 18:15:45.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.721" endtime="20201029 18:15:45.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.409" endtime="20201029 18:15:45.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.406" endtime="20201029 18:15:45.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.728" level="INFO">${RESULT} = [{'diff': 1.4055999999998403e-05}, {'diff': 1.3541999999998333e-05}, {'diff': 1.3568999999998e-05}, {'diff': 1.3541999999998333e-05}, {'diff': 1.3541999999998333e-05}, {'diff': 1.4041999999998833e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:45.725" endtime="20201029 18:15:45.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.732" level="INFO">${ACCURACY} = {'diff': [1.4055999999998403e-05, 1.3541999999998333e-05, 1.3568999999998e-05, 1.3541999999998333e-05, 1.3541999999998333e-05, 1.4041999999998833e-05, 1.4027999999999263e-05, 1.4556000000005842e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:15:45.729" endtime="20201029 18:15:45.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.736" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.735" endtime="20201029 18:15:45.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.739" level="INFO">VALUE: [1.4055999999998403e-05, 1.3541999999998333e-05, 1.3568999999998e-05, 1.3541999999998333e-05, 1.3541999999998333e-05, 1.4041999999998833e-05, 1.4027999999999263e-05, 1.4556000000005842e-05, 1.4041999999998833e-05, 1.4070000000004912e-05, 1.355499999999843e-05, 1.3542000000005272e-05, 1.40689999999985e-05, 1.3541999999998333e-05, 1.4069000000005438e-05, 1.4041999999998833e-05, 1.355499999999843e-05, 1.3597999999996613e-05, 1.4055999999998403e-05, 1.4027999999999263e-05, 1.4069999999997973e-05, 1.3541999999998333e-05, 1.404099999999936e-05, 1.4569999999998473e-05, 1.3555999999997903e-05, 1.3569999999997473e-05, 1.3556000000004842e-05, 1.3986000000000554e-05, 1.4069000000005438e-05, 1.40689999999985e-05, 1.355499999999843e-05, 1.3597000000004078e-05, 1.404099999999936e-05, 1.4125000000003718e-05, 1.355499999999843e-05, 1.3568999999998e-05, 1.4027999999999263e-05, 1.4041999999998833e-05, 1.3541999999998333e-05, 1.355499999999843e-05, 1.4041999999998833e-05, 1.461099999999771e-05, 1.3541999999998333e-05, 1.4056000000005342e-05, 1.3555999999997903e-05, 1.3541999999998333e-05, 1.3486000000000054e-05, 1.4027999999999263e-05, 1.3569999999997473e-05, 1.3527999999998763e-05]</msg>
<status status="PASS" starttime="20201029 18:15:45.737" endtime="20201029 18:15:45.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.733" endtime="20201029 18:15:45.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.744" endtime="20201029 18:15:45.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.742" endtime="20201029 18:15:45.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.741" endtime="20201029 18:15:45.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.352" endtime="20201029 18:15:45.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.351" endtime="20201029 18:15:45.764"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.773" endtime="20201029 18:15:45.791"></status>
</kw>
<msg timestamp="20201029 18:15:45.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.771" endtime="20201029 18:15:45.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.792" endtime="20201029 18:15:45.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.795" endtime="20201029 18:15:45.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.769" endtime="20201029 18:15:45.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.767" endtime="20201029 18:15:45.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.804" endtime="20201029 18:15:46.095"></status>
</kw>
<msg timestamp="20201029 18:15:46.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020558986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020574014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.802" endtime="20201029 18:15:46.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020558986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020574014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.099" endtime="20201029 18:15:46.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.107" endtime="20201029 18:15:46.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.800" endtime="20201029 18:15:46.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.798" endtime="20201029 18:15:46.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.113" level="INFO">${RESULT} = [{'diff': 1.5028000000000263e-05}, {'diff': 1.505499999999993e-05}, {'diff': 1.4569999999998473e-05}, {'diff': 1.504100000000036e-05}, {'diff': 1.5070000000002443e-05}, {'diff': 1.504100000000036e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:46.110" endtime="20201029 18:15:46.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.118" level="INFO">${ACCURACY} = {'diff': [1.5028000000000263e-05, 1.505499999999993e-05, 1.4569999999998473e-05, 1.504100000000036e-05, 1.5070000000002443e-05, 1.504100000000036e-05, 1.4499999999997154e-05, 1.4514000000000193e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:15:46.114" endtime="20201029 18:15:46.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.122" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.121" endtime="20201029 18:15:46.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.124" level="INFO">VALUE: [1.5028000000000263e-05, 1.505499999999993e-05, 1.4569999999998473e-05, 1.504100000000036e-05, 1.5070000000002443e-05, 1.504100000000036e-05, 1.4499999999997154e-05, 1.4514000000000193e-05, 1.4541999999999333e-05, 1.558299999999957e-05, 1.5041999999999833e-05, 1.454099999999986e-05, 1.4985999999998084e-05, 1.4556000000002373e-05, 1.5028000000000263e-05, 1.505499999999993e-05, 1.5041999999999833e-05, 1.505499999999993e-05, 1.4541999999999333e-05, 1.4555999999998903e-05, 1.4541999999999333e-05, 1.5112000000001152e-05, 1.5084000000002012e-05, 1.4541999999999333e-05, 1.4527999999999763e-05, 1.4625000000000749e-05, 1.508299999999907e-05, 1.505499999999993e-05, 1.5028000000000263e-05, 1.505499999999993e-05, 1.508299999999907e-05, 1.4556000000002373e-05, 1.454099999999986e-05, 1.4541999999999333e-05, 1.4555999999998903e-05, 1.505499999999993e-05, 1.5041999999999833e-05, 1.505499999999993e-05, 1.4569999999998473e-05, 1.5028000000000263e-05, 1.4555999999998903e-05, 1.504100000000036e-05, 1.505499999999993e-05, 1.4541999999999333e-05, 1.4541999999999333e-05, 1.5055999999999403e-05, 1.5055999999999403e-05, 1.5014000000000693e-05, 1.454099999999986e-05, 1.5000000000001124e-05]</msg>
<status status="PASS" starttime="20201029 18:15:46.123" endtime="20201029 18:15:46.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.118" endtime="20201029 18:15:46.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.130" endtime="20201029 18:15:46.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.129" endtime="20201029 18:15:46.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.128" endtime="20201029 18:15:46.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.765" endtime="20201029 18:15:46.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.765" endtime="20201029 18:15:46.151"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.159" endtime="20201029 18:15:46.177"></status>
</kw>
<msg timestamp="20201029 18:15:46.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.158" endtime="20201029 18:15:46.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.179" endtime="20201029 18:15:46.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.181" endtime="20201029 18:15:46.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.155" endtime="20201029 18:15:46.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.153" endtime="20201029 18:15:46.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.190" endtime="20201029 18:15:46.476"></status>
</kw>
<msg timestamp="20201029 18:15:46.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.189" endtime="20201029 18:15:46.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.480" endtime="20201029 18:15:46.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.488" endtime="20201029 18:15:46.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.186" endtime="20201029 18:15:46.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.185" endtime="20201029 18:15:46.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.495" level="INFO">${RESULT} = [{'diff': 1.5555999999999903e-05}, {'diff': 1.5555999999999903e-05}, {'diff': 1.6098000000002582e-05}, {'diff': 1.5555999999999903e-05}, {'diff': 1.554099999999739e-05}, {'diff': 1.6569000000001e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:46.492" endtime="20201029 18:15:46.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.500" level="INFO">${ACCURACY} = {'diff': [1.5555999999999903e-05, 1.5555999999999903e-05, 1.6098000000002582e-05, 1.5555999999999903e-05, 1.554099999999739e-05, 1.6569000000001e-05, 1.6042000000000833e-05, 1.655500000000143e-05, 1.6...</msg>
<status status="PASS" starttime="20201029 18:15:46.496" endtime="20201029 18:15:46.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.504" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.503" endtime="20201029 18:15:46.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.507" level="INFO">VALUE: [1.5555999999999903e-05, 1.5555999999999903e-05, 1.6098000000002582e-05, 1.5555999999999903e-05, 1.554099999999739e-05, 1.6569000000001e-05, 1.6042000000000833e-05, 1.655500000000143e-05, 1.6056000000000403e-05, 1.5542000000000333e-05, 1.5555999999999903e-05, 1.6041999999997364e-05, 1.6042000000000833e-05, 1.605499999999746e-05, 1.5569e-05, 1.5569e-05, 1.5542000000000333e-05, 1.5542000000000333e-05, 1.5541999999996864e-05, 1.5514000000001194e-05, 1.6028000000001263e-05, 1.555500000000043e-05, 1.5569e-05, 1.6056000000000403e-05, 1.5528000000000763e-05, 1.5569e-05, 1.5555999999999903e-05, 1.5569999999999473e-05, 1.6069999999999973e-05, 1.602700000000179e-05, 1.605499999999746e-05, 1.5555999999999903e-05, 1.5542000000000333e-05, 1.6499999999999154e-05, 1.554100000000086e-05, 1.604099999999789e-05, 1.604099999999789e-05, 1.612499999999878e-05, 1.6042000000000833e-05, 1.5542000000000333e-05, 1.6042000000000833e-05, 1.6056000000000403e-05, 1.605500000000093e-05, 1.604099999999789e-05, 1.5528000000000763e-05, 1.5527999999997294e-05, 1.6056000000000403e-05, 1.6041999999997364e-05, 1.6569000000001e-05, 1.6056000000000403e-05]</msg>
<status status="PASS" starttime="20201029 18:15:46.505" endtime="20201029 18:15:46.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.501" endtime="20201029 18:15:46.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.512" endtime="20201029 18:15:46.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.510" endtime="20201029 18:15:46.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.509" endtime="20201029 18:15:46.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.152" endtime="20201029 18:15:46.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.151" endtime="20201029 18:15:46.532"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.541" endtime="20201029 18:15:46.559"></status>
</kw>
<msg timestamp="20201029 18:15:46.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.539" endtime="20201029 18:15:46.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.560" endtime="20201029 18:15:46.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.563" endtime="20201029 18:15:46.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.537" endtime="20201029 18:15:46.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.535" endtime="20201029 18:15:46.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.572" endtime="20201029 18:15:46.858"></status>
</kw>
<msg timestamp="20201029 18:15:46.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019569347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.570" endtime="20201029 18:15:46.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019569347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.862" endtime="20201029 18:15:46.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.871" endtime="20201029 18:15:46.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.568" endtime="20201029 18:15:46.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.566" endtime="20201029 18:15:46.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.877" level="INFO">${RESULT} = [{'diff': 1.6569000000001e-05}, {'diff': 1.655500000000143e-05}, {'diff': 1.6542000000001333e-05}, {'diff': 1.6541999999997864e-05}, {'diff': 1.705500000000193e-05}, {'diff': 1.654100000000186e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:46.874" endtime="20201029 18:15:46.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.881" level="INFO">${ACCURACY} = {'diff': [1.6569000000001e-05, 1.655500000000143e-05, 1.6542000000001333e-05, 1.6541999999997864e-05, 1.705500000000193e-05, 1.654100000000186e-05, 1.654099999999839e-05, 1.659700000000014e-05, 1.6554...</msg>
<status status="PASS" starttime="20201029 18:15:46.878" endtime="20201029 18:15:46.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.886" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.885" endtime="20201029 18:15:46.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.888" level="INFO">VALUE: [1.6569000000001e-05, 1.655500000000143e-05, 1.6542000000001333e-05, 1.6541999999997864e-05, 1.705500000000193e-05, 1.654100000000186e-05, 1.654099999999839e-05, 1.659700000000014e-05, 1.655499999999796e-05, 1.7042000000001833e-05, 1.6556000000000903e-05, 1.659700000000014e-05, 1.6541999999997864e-05, 1.7041999999998364e-05, 1.7069999999997504e-05, 1.7055999999997934e-05, 1.7041999999998364e-05, 1.7541999999998864e-05, 1.6542000000001333e-05, 1.6556000000000903e-05, 1.6999999999999654e-05, 1.656899999999753e-05, 1.7056000000001403e-05, 1.7027999999998794e-05, 1.7027999999998794e-05, 1.705499999999846e-05, 1.7028000000002264e-05, 1.705499999999846e-05, 1.7041999999998364e-05, 1.706899999999803e-05, 1.654100000000186e-05, 1.704099999999889e-05, 1.704099999999889e-05, 1.7541999999998864e-05, 1.706899999999803e-05, 1.6527999999998294e-05, 1.6556000000000903e-05, 1.652700000000229e-05, 1.754099999999939e-05, 1.704099999999889e-05, 1.654100000000186e-05, 1.6541999999997864e-05, 1.7055999999997934e-05, 1.7056000000001403e-05, 1.754099999999939e-05, 1.7041999999998364e-05, 1.7070000000000973e-05, 1.70690000000015e-05, 1.7541999999998864e-05, 1.7042000000001833e-05]</msg>
<status status="PASS" starttime="20201029 18:15:46.887" endtime="20201029 18:15:46.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.882" endtime="20201029 18:15:46.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.893" endtime="20201029 18:15:46.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.891" endtime="20201029 18:15:46.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.890" endtime="20201029 18:15:46.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.533" endtime="20201029 18:15:46.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.533" endtime="20201029 18:15:46.914"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.923" endtime="20201029 18:15:46.942"></status>
</kw>
<msg timestamp="20201029 18:15:46.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.921" endtime="20201029 18:15:46.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.943" endtime="20201029 18:15:46.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.946" endtime="20201029 18:15:46.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.918" endtime="20201029 18:15:46.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.916" endtime="20201029 18:15:46.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.955" endtime="20201029 18:15:47.240"></status>
</kw>
<msg timestamp="20201029 18:15:47.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021325347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.953" endtime="20201029 18:15:47.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021325347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.245" endtime="20201029 18:15:47.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.253" endtime="20201029 18:15:47.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.951" endtime="20201029 18:15:47.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.949" endtime="20201029 18:15:47.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.259" level="INFO">${RESULT} = [{'diff': 1.7485999999997115e-05}, {'diff': 1.8041999999999364e-05}, {'diff': 1.804099999999989e-05}, {'diff': 1.808300000000207e-05}, {'diff': 1.805500000000293e-05}, {'diff': 1.8027999999999794e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:47.256" endtime="20201029 18:15:47.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.263" level="INFO">${ACCURACY} = {'diff': [1.7485999999997115e-05, 1.8041999999999364e-05, 1.804099999999989e-05, 1.808300000000207e-05, 1.805500000000293e-05, 1.8027999999999794e-05, 1.8069999999998504e-05, 1.8069999999998504e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:15:47.260" endtime="20201029 18:15:47.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.268" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.267" endtime="20201029 18:15:47.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.270" level="INFO">VALUE: [1.7485999999997115e-05, 1.8041999999999364e-05, 1.804099999999989e-05, 1.808300000000207e-05, 1.805500000000293e-05, 1.8027999999999794e-05, 1.8069999999998504e-05, 1.8069999999998504e-05, 1.7556000000001903e-05, 1.755499999999896e-05, 1.8027999999999794e-05, 1.8027999999999794e-05, 1.7986000000001084e-05, 1.8070000000001973e-05, 1.8027999999999794e-05, 1.755500000000243e-05, 1.7541999999998864e-05, 1.8055999999998934e-05, 1.7555999999998434e-05, 1.8041999999999364e-05, 1.8055999999998934e-05, 1.756899999999853e-05, 1.7570000000001473e-05, 1.805499999999946e-05, 1.756899999999853e-05, 1.805499999999946e-05, 1.755499999999896e-05, 1.8000000000000654e-05, 1.755499999999896e-05, 1.754099999999939e-05, 1.801300000000075e-05, 1.8070000000001973e-05, 1.805499999999946e-05, 1.7541999999998864e-05, 1.8014000000000224e-05, 1.8041999999999364e-05, 1.755499999999896e-05, 1.754099999999939e-05, 1.8070000000001973e-05, 1.756899999999853e-05, 1.804099999999989e-05, 1.805499999999946e-05, 1.804099999999989e-05, 1.8541999999999864e-05, 1.7556000000001903e-05, 1.8069999999998504e-05, 1.8042000000002834e-05, 1.755499999999896e-05, 1.7542000000002334e-05, 1.801300000000075e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.269" endtime="20201029 18:15:47.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.264" endtime="20201029 18:15:47.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.276" endtime="20201029 18:15:47.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.275" endtime="20201029 18:15:47.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.273" endtime="20201029 18:15:47.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.914" endtime="20201029 18:15:47.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.914" endtime="20201029 18:15:47.297"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.306" endtime="20201029 18:15:47.323"></status>
</kw>
<msg timestamp="20201029 18:15:47.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.304" endtime="20201029 18:15:47.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.325" endtime="20201029 18:15:47.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.327" endtime="20201029 18:15:47.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.301" endtime="20201029 18:15:47.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.299" endtime="20201029 18:15:47.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.336" endtime="20201029 18:15:47.623"></status>
</kw>
<msg timestamp="20201029 18:15:47.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019858042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.335" endtime="20201029 18:15:47.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019858042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.627" endtime="20201029 18:15:47.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.635" endtime="20201029 18:15:47.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.332" endtime="20201029 18:15:47.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.330" endtime="20201029 18:15:47.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.642" level="INFO">${RESULT} = [{'diff': 1.90829999999996e-05}, {'diff': 1.905500000000046e-05}, {'diff': 1.9069999999999504e-05}, {'diff': 1.855499999999996e-05}, {'diff': 1.955500000000096e-05}, {'diff': 1.9041999999996895e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:47.639" endtime="20201029 18:15:47.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.647" level="INFO">${ACCURACY} = {'diff': [1.90829999999996e-05, 1.905500000000046e-05, 1.9069999999999504e-05, 1.855499999999996e-05, 1.955500000000096e-05, 1.9041999999996895e-05, 1.906900000000003e-05, 1.855499999999996e-05, 1.904...</msg>
<status status="PASS" starttime="20201029 18:15:47.643" endtime="20201029 18:15:47.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.651" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.650" endtime="20201029 18:15:47.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.654" level="INFO">VALUE: [1.90829999999996e-05, 1.905500000000046e-05, 1.9069999999999504e-05, 1.855499999999996e-05, 1.955500000000096e-05, 1.9041999999996895e-05, 1.906900000000003e-05, 1.855499999999996e-05, 1.904100000000089e-05, 1.905500000000046e-05, 1.856899999999953e-05, 1.8541999999999864e-05, 1.9055999999999934e-05, 1.9055999999999934e-05, 1.85829999999991e-05, 1.855499999999996e-05, 1.8556000000002904e-05, 1.863900000000085e-05, 1.9055999999999934e-05, 1.9042000000000364e-05, 1.8541999999999864e-05, 1.8541999999999864e-05, 1.904099999999742e-05, 1.858300000000257e-05, 1.9570000000000004e-05, 1.9055999999999934e-05, 1.854100000000039e-05, 1.904100000000089e-05, 1.9055999999999934e-05, 1.9000000000001654e-05, 1.9055999999999934e-05, 1.854100000000039e-05, 1.8555999999999434e-05, 1.8541999999999864e-05, 1.906900000000003e-05, 1.905499999999699e-05, 1.9055999999999934e-05, 1.8471999999998545e-05, 1.9055999999999934e-05, 1.909700000000264e-05, 1.906900000000003e-05, 1.9028000000000794e-05, 1.8528000000000294e-05, 1.9042000000000364e-05, 1.8555999999999434e-05, 1.861099999999824e-05, 1.8570000000002473e-05, 1.8514000000000724e-05, 1.905500000000046e-05, 1.8555999999999434e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.653" endtime="20201029 18:15:47.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.648" endtime="20201029 18:15:47.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.659" endtime="20201029 18:15:47.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.657" endtime="20201029 18:15:47.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.656" endtime="20201029 18:15:47.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.298" endtime="20201029 18:15:47.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.297" endtime="20201029 18:15:47.679"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.688" endtime="20201029 18:15:47.706"></status>
</kw>
<msg timestamp="20201029 18:15:47.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.686" endtime="20201029 18:15:47.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.708" endtime="20201029 18:15:47.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.710" endtime="20201029 18:15:47.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.684" endtime="20201029 18:15:47.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.682" endtime="20201029 18:15:47.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.719" endtime="20201029 18:15:48.015"></status>
</kw>
<msg timestamp="20201029 18:15:48.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019516042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019536125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.717" endtime="20201029 18:15:48.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019516042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019536125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.019" endtime="20201029 18:15:48.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.028" endtime="20201029 18:15:48.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.715" endtime="20201029 18:15:48.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.713" endtime="20201029 18:15:48.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.034" level="INFO">${RESULT} = [{'diff': 2.00830000000006e-05}, {'diff': 1.955500000000096e-05}, {'diff': 2.0028000000001794e-05}, {'diff': 2.0056000000000934e-05}, {'diff': 1.9556000000000434e-05}, {'diff': 1.9514000000001724e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:48.031" endtime="20201029 18:15:48.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.038" level="INFO">${ACCURACY} = {'diff': [2.00830000000006e-05, 1.955500000000096e-05, 2.0028000000001794e-05, 2.0056000000000934e-05, 1.9556000000000434e-05, 1.9514000000001724e-05, 2.0042000000001364e-05, 1.9556000000000434e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:15:48.035" endtime="20201029 18:15:48.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.043" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.042" endtime="20201029 18:15:48.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.045" level="INFO">VALUE: [2.00830000000006e-05, 1.955500000000096e-05, 2.0028000000001794e-05, 2.0056000000000934e-05, 1.9556000000000434e-05, 1.9514000000001724e-05, 2.0042000000001364e-05, 1.9556000000000434e-05, 1.9542000000000864e-05, 2.0028000000001794e-05, 2.0556000000001434e-05, 1.956900000000053e-05, 2.0028000000001794e-05, 2.0070000000000504e-05, 2.00969999999967e-05, 2.005499999999799e-05, 2.002699999999885e-05, 1.955500000000096e-05, 2.0055999999997465e-05, 2.0056000000000934e-05, 2.005499999999799e-05, 2.005500000000146e-05, 2.004100000000189e-05, 2.006900000000103e-05, 1.95830000000001e-05, 2.055499999999849e-05, 1.9570000000000004e-05, 1.95830000000001e-05, 1.955500000000096e-05, 1.9556000000000434e-05, 1.954100000000139e-05, 2.0056000000000934e-05, 2.006899999999756e-05, 2.0042000000001364e-05, 1.9528000000001294e-05, 2.002700000000232e-05, 2.0056000000000934e-05, 1.9542000000000864e-05, 1.9570000000000004e-05, 1.9556000000000434e-05, 2.0056000000000934e-05, 2.0056000000000934e-05, 2.005500000000146e-05, 1.9556000000000434e-05, 2.0056000000000934e-05, 2.0042000000001364e-05, 2.005500000000146e-05, 1.955499999999749e-05, 2.0056000000000934e-05, 1.9528000000001294e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.044" endtime="20201029 18:15:48.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.039" endtime="20201029 18:15:48.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.050" endtime="20201029 18:15:48.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.049" endtime="20201029 18:15:48.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.047" endtime="20201029 18:15:48.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.680" endtime="20201029 18:15:48.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.680" endtime="20201029 18:15:48.071"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.079" endtime="20201029 18:15:48.097"></status>
</kw>
<msg timestamp="20201029 18:15:48.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.078" endtime="20201029 18:15:48.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.099" endtime="20201029 18:15:48.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.102" endtime="20201029 18:15:48.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.075" endtime="20201029 18:15:48.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.073" endtime="20201029 18:15:48.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.111" endtime="20201029 18:15:48.397"></status>
</kw>
<msg timestamp="20201029 18:15:48.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020500736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020521722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.109" endtime="20201029 18:15:48.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020500736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020521722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.401" endtime="20201029 18:15:48.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.409" endtime="20201029 18:15:48.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.107" endtime="20201029 18:15:48.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.105" endtime="20201029 18:15:48.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.416" level="INFO">${RESULT} = [{'diff': 2.0986000000000615e-05}, {'diff': 2.1041999999998895e-05}, {'diff': 2.111100000000074e-05}, {'diff': 2.111100000000074e-05}, {'diff': 2.055499999999849e-05}, {'diff': 2.0555999999997965e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:48.412" endtime="20201029 18:15:48.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.420" level="INFO">${ACCURACY} = {'diff': [2.0986000000000615e-05, 2.1041999999998895e-05, 2.111100000000074e-05, 2.111100000000074e-05, 2.055499999999849e-05, 2.0555999999997965e-05, 2.055500000000196e-05, 2.1541999999999395e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:48.417" endtime="20201029 18:15:48.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.424" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.423" endtime="20201029 18:15:48.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.427" level="INFO">VALUE: [2.0986000000000615e-05, 2.1041999999998895e-05, 2.111100000000074e-05, 2.111100000000074e-05, 2.055499999999849e-05, 2.0555999999997965e-05, 2.055500000000196e-05, 2.1541999999999395e-05, 2.105499999999899e-05, 2.1112000000000214e-05, 2.0541999999998395e-05, 2.1056000000001934e-05, 2.0541999999998395e-05, 2.0542000000001864e-05, 2.0555999999997965e-05, 2.1013999999999755e-05, 2.105500000000246e-05, 2.108299999999813e-05, 2.1069999999998035e-05, 2.1041999999998895e-05, 2.154099999999992e-05, 2.156899999999906e-05, 2.105499999999899e-05, 2.0542000000001864e-05, 2.0569999999997535e-05, 2.0542000000001864e-05, 2.054099999999892e-05, 2.0542000000001864e-05, 2.0541999999998395e-05, 2.056900000000153e-05, 2.155499999999949e-05, 2.1041999999998895e-05, 2.055499999999849e-05, 2.062499999999981e-05, 2.1056000000001934e-05, 2.0541999999998395e-05, 2.109700000000117e-05, 2.1056000000001934e-05, 2.1056000000001934e-05, 2.0556000000001434e-05, 2.1070000000001504e-05, 2.105499999999899e-05, 2.1541999999999395e-05, 2.1028000000002794e-05, 2.112500000000031e-05, 2.1055999999998465e-05, 2.1555999999998965e-05, 2.0556000000001434e-05, 2.106899999999856e-05, 2.106899999999856e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.425" endtime="20201029 18:15:48.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.421" endtime="20201029 18:15:48.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.432" endtime="20201029 18:15:48.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.431" endtime="20201029 18:15:48.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.430" endtime="20201029 18:15:48.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.072" endtime="20201029 18:15:48.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.071" endtime="20201029 18:15:48.453"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.461" endtime="20201029 18:15:48.479"></status>
</kw>
<msg timestamp="20201029 18:15:48.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.460" endtime="20201029 18:15:48.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.480" endtime="20201029 18:15:48.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.483" endtime="20201029 18:15:48.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.457" endtime="20201029 18:15:48.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.455" endtime="20201029 18:15:48.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.492" endtime="20201029 18:15:48.779"></status>
</kw>
<msg timestamp="20201029 18:15:48.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019604694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.490" endtime="20201029 18:15:48.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019604694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.783" endtime="20201029 18:15:48.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.791" endtime="20201029 18:15:48.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.488" endtime="20201029 18:15:48.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.486" endtime="20201029 18:15:48.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.798" level="INFO">${RESULT} = [{'diff': 2.206899999999956e-05}, {'diff': 2.2055999999999465e-05}, {'diff': 2.1555999999998965e-05}, {'diff': 2.1555999999998965e-05}, {'diff': 2.154099999999992e-05}, {'diff': 2.1555999999998965e-05...</msg>
<status status="PASS" starttime="20201029 18:15:48.795" endtime="20201029 18:15:48.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.805" level="INFO">${ACCURACY} = {'diff': [2.206899999999956e-05, 2.2055999999999465e-05, 2.1555999999998965e-05, 2.1555999999998965e-05, 2.154099999999992e-05, 2.1555999999998965e-05, 2.155499999999949e-05, 2.204100000000042e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:48.799" endtime="20201029 18:15:48.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.810" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.809" endtime="20201029 18:15:48.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.812" level="INFO">VALUE: [2.206899999999956e-05, 2.2055999999999465e-05, 2.1555999999998965e-05, 2.1555999999998965e-05, 2.154099999999992e-05, 2.1555999999998965e-05, 2.155499999999949e-05, 2.204100000000042e-05, 2.2069999999999035e-05, 2.208299999999913e-05, 2.205499999999999e-05, 2.1541999999999395e-05, 2.1556000000002434e-05, 2.155499999999949e-05, 2.1486000000001115e-05, 2.1527999999999825e-05, 2.155499999999949e-05, 2.1569999999998535e-05, 2.1555999999998965e-05, 2.206899999999956e-05, 2.156900000000253e-05, 2.1514000000000255e-05, 2.2055999999999465e-05, 2.161099999999777e-05, 2.2069999999999035e-05, 2.156899999999906e-05, 2.2028000000000325e-05, 2.154099999999992e-05, 2.2555999999999965e-05, 2.1556000000002434e-05, 2.2070000000002504e-05, 2.154099999999992e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.2056000000002934e-05, 2.2084000000002074e-05, 2.156900000000253e-05, 2.2555999999999965e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.155499999999949e-05, 2.1541999999999395e-05, 2.155499999999949e-05, 2.2541999999996926e-05, 2.2569999999999535e-05, 2.155499999999949e-05, 2.2555999999999965e-05, 2.2055999999999465e-05, 2.155499999999949e-05, 2.209700000000217e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.811" endtime="20201029 18:15:48.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.806" endtime="20201029 18:15:48.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.817" endtime="20201029 18:15:48.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.816" endtime="20201029 18:15:48.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.814" endtime="20201029 18:15:48.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.454" endtime="20201029 18:15:48.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.453" endtime="20201029 18:15:48.838"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.847" endtime="20201029 18:15:48.865"></status>
</kw>
<msg timestamp="20201029 18:15:48.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.846" endtime="20201029 18:15:48.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.867" endtime="20201029 18:15:48.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.869" endtime="20201029 18:15:48.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.842" endtime="20201029 18:15:48.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.840" endtime="20201029 18:15:48.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.878" endtime="20201029 18:15:49.259"></status>
</kw>
<msg timestamp="20201029 18:15:49.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020562222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020585778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.877" endtime="20201029 18:15:49.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020562222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020585778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.263" endtime="20201029 18:15:49.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.272" endtime="20201029 18:15:49.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.874" endtime="20201029 18:15:49.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.872" endtime="20201029 18:15:49.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.278" level="INFO">${RESULT} = [{'diff': 2.3555999999997496e-05}, {'diff': 2.3041999999997426e-05}, {'diff': 2.309700000000317e-05}, {'diff': 2.256900000000006e-05}, {'diff': 2.2569999999999535e-05}, {'diff': 2.3570000000000535e-05...</msg>
<status status="PASS" starttime="20201029 18:15:49.275" endtime="20201029 18:15:49.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.282" level="INFO">${ACCURACY} = {'diff': [2.3555999999997496e-05, 2.3041999999997426e-05, 2.309700000000317e-05, 2.256900000000006e-05, 2.2569999999999535e-05, 2.3570000000000535e-05, 2.3054999999997522e-05, 2.306900000000056e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:49.279" endtime="20201029 18:15:49.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.287" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.286" endtime="20201029 18:15:49.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.289" level="INFO">VALUE: [2.3555999999997496e-05, 2.3041999999997426e-05, 2.309700000000317e-05, 2.256900000000006e-05, 2.2569999999999535e-05, 2.3570000000000535e-05, 2.3054999999997522e-05, 2.306900000000056e-05, 2.305500000000099e-05, 2.3042000000000895e-05, 2.2513999999997786e-05, 2.3056000000000465e-05, 2.3042000000000895e-05, 2.256900000000006e-05, 2.305500000000099e-05, 2.2555999999999965e-05, 2.3056000000000465e-05, 2.298700000000209e-05, 2.2542000000000395e-05, 2.2569999999999535e-05, 2.2514000000001255e-05, 2.2584000000002574e-05, 2.3056000000000465e-05, 2.2597999999998675e-05, 2.308300000000013e-05, 2.3568999999997592e-05, 2.304100000000142e-05, 2.3056000000000465e-05, 2.255500000000049e-05, 2.3026999999998382e-05, 2.305500000000099e-05, 2.3027999999997856e-05, 2.3056000000000465e-05, 2.2513999999997786e-05, 2.2569999999999535e-05, 2.2999999999998716e-05, 2.312499999999884e-05, 2.2554999999997022e-05, 2.2528000000000825e-05, 2.3042000000000895e-05, 2.3542000000001395e-05, 2.2555999999999965e-05, 2.305500000000099e-05, 2.3042000000000895e-05, 2.305500000000099e-05, 2.255500000000049e-05, 2.30969999999997e-05, 2.3042000000000895e-05, 2.301300000000228e-05, 2.2512999999998312e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.288" endtime="20201029 18:15:49.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.283" endtime="20201029 18:15:49.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.295" endtime="20201029 18:15:49.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.293" endtime="20201029 18:15:49.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.291" endtime="20201029 18:15:49.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.839" endtime="20201029 18:15:49.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.838" endtime="20201029 18:15:49.315"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.324" endtime="20201029 18:15:49.342"></status>
</kw>
<msg timestamp="20201029 18:15:49.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.322" endtime="20201029 18:15:49.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.343" endtime="20201029 18:15:49.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.346" endtime="20201029 18:15:49.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.320" endtime="20201029 18:15:49.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.318" endtime="20201029 18:15:49.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.355" endtime="20201029 18:15:49.641"></status>
</kw>
<msg timestamp="20201029 18:15:49.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.353" endtime="20201029 18:15:49.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.646" endtime="20201029 18:15:49.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.654" endtime="20201029 18:15:49.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.351" endtime="20201029 18:15:49.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.349" endtime="20201029 18:15:49.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.660" level="INFO">${RESULT} = [{'diff': 2.4056000000001465e-05}, {'diff': 2.3541999999997926e-05}, {'diff': 2.3542000000001395e-05}, {'diff': 2.3513999999998786e-05}, {'diff': 2.3568999999997592e-05}, {'diff': 2.4055999999997996e-...</msg>
<status status="PASS" starttime="20201029 18:15:49.657" endtime="20201029 18:15:49.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.665" level="INFO">${ACCURACY} = {'diff': [2.4056000000001465e-05, 2.3541999999997926e-05, 2.3542000000001395e-05, 2.3513999999998786e-05, 2.3568999999997592e-05, 2.4055999999997996e-05, 2.3986000000000146e-05, 2.4055999999997996e-05...</msg>
<status status="PASS" starttime="20201029 18:15:49.661" endtime="20201029 18:15:49.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.670" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.669" endtime="20201029 18:15:49.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.672" level="INFO">VALUE: [2.4056000000001465e-05, 2.3541999999997926e-05, 2.3542000000001395e-05, 2.3513999999998786e-05, 2.3568999999997592e-05, 2.4055999999997996e-05, 2.3986000000000146e-05, 2.4055999999997996e-05, 2.362500000000281e-05, 2.4555999999998496e-05, 2.4027999999998856e-05, 2.411100000000027e-05, 2.3556000000000965e-05, 2.4042000000001895e-05, 2.4068999999998092e-05, 2.3527999999998356e-05, 2.3999999999999716e-05, 2.4013999999999286e-05, 2.3527999999998356e-05, 2.3526999999998882e-05, 2.3584000000000105e-05, 2.4042000000001895e-05, 2.4070000000001035e-05, 2.3556000000000965e-05, 2.4526999999999882e-05, 2.3555999999997496e-05, 2.4054999999998522e-05, 2.3499999999999216e-05, 2.4054999999998522e-05, 2.405500000000199e-05, 2.361099999999977e-05, 2.3556000000000965e-05, 2.4054999999998522e-05, 2.40970000000007e-05, 2.4013999999999286e-05, 2.3528000000001825e-05, 2.3568999999997592e-05, 2.4054999999998522e-05, 2.3554999999998022e-05, 2.406900000000156e-05, 2.3542000000001395e-05, 2.356900000000106e-05, 2.35970000000002e-05, 2.358300000000063e-05, 2.3555999999997496e-05, 2.3542000000001395e-05, 2.35970000000002e-05, 2.4068999999998092e-05, 2.4555999999998496e-05, 2.4070000000001035e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.671" endtime="20201029 18:15:49.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.666" endtime="20201029 18:15:49.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.677" endtime="20201029 18:15:49.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.676" endtime="20201029 18:15:49.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.674" endtime="20201029 18:15:49.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.316" endtime="20201029 18:15:49.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.316" endtime="20201029 18:15:49.698"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.707" endtime="20201029 18:15:49.725"></status>
</kw>
<msg timestamp="20201029 18:15:49.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.705" endtime="20201029 18:15:49.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.726" endtime="20201029 18:15:49.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.729" endtime="20201029 18:15:49.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.702" endtime="20201029 18:15:49.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.700" endtime="20201029 18:15:49.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.738" endtime="20201029 18:15:50.024"></status>
</kw>
<msg timestamp="20201029 18:15:50.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019958542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:49.736" endtime="20201029 18:15:50.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019958542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:50.028" endtime="20201029 18:15:50.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.037" endtime="20201029 18:15:50.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.733" endtime="20201029 18:15:50.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.732" endtime="20201029 18:15:50.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.043" level="INFO">${RESULT} = [{'diff': 2.5041999999999426e-05}, {'diff': 2.4541999999998926e-05}, {'diff': 2.5541999999999926e-05}, {'diff': 2.458300000000163e-05}, {'diff': 2.4555999999998496e-05}, {'diff': 2.4596999999997732e-0...</msg>
<status status="PASS" starttime="20201029 18:15:50.040" endtime="20201029 18:15:50.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.048" level="INFO">${ACCURACY} = {'diff': [2.5041999999999426e-05, 2.4541999999998926e-05, 2.5541999999999926e-05, 2.458300000000163e-05, 2.4555999999998496e-05, 2.4596999999997732e-05, 2.5068999999999092e-05, 2.4541999999998926e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:50.045" endtime="20201029 18:15:50.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.053" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.052" endtime="20201029 18:15:50.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.055" level="INFO">VALUE: [2.5041999999999426e-05, 2.4541999999998926e-05, 2.5541999999999926e-05, 2.458300000000163e-05, 2.4555999999998496e-05, 2.4596999999997732e-05, 2.5068999999999092e-05, 2.4541999999998926e-05, 2.5041999999999426e-05, 2.5485999999998177e-05, 2.5056000000002465e-05, 2.5054999999999522e-05, 2.5055999999998996e-05, 2.5027999999999856e-05, 2.506900000000256e-05, 2.5040999999999952e-05, 2.5054999999999522e-05, 2.4555999999998496e-05, 2.505500000000299e-05, 2.513900000000041e-05, 2.4556000000001965e-05, 2.5028000000003325e-05, 2.5068999999999092e-05, 2.5068999999999092e-05, 2.5042000000002895e-05, 2.5056000000002465e-05, 2.4568999999998592e-05, 2.4556000000001965e-05, 2.4541999999998926e-05, 2.4555999999998496e-05, 2.5054999999999522e-05, 2.5040999999999952e-05, 2.4554999999999022e-05, 2.4555999999998496e-05, 2.4540999999999452e-05, 2.4555999999998496e-05, 2.4527999999999356e-05, 2.455500000000249e-05, 2.5056000000002465e-05, 2.5040999999999952e-05, 2.458300000000163e-05, 2.4542000000002395e-05, 2.505500000000299e-05, 2.5000000000000716e-05, 2.4556000000001965e-05, 2.5054999999999522e-05, 2.5027999999999856e-05, 2.5110999999997802e-05, 2.5056000000002465e-05, 2.4542000000002395e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.054" endtime="20201029 18:15:50.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.049" endtime="20201029 18:15:50.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.060" endtime="20201029 18:15:50.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.059" endtime="20201029 18:15:50.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.058" endtime="20201029 18:15:50.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.699" endtime="20201029 18:15:50.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.698" endtime="20201029 18:15:50.081"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.090" endtime="20201029 18:15:50.109"></status>
</kw>
<msg timestamp="20201029 18:15:50.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.089" endtime="20201029 18:15:50.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.110" endtime="20201029 18:15:50.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.113" endtime="20201029 18:15:50.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.086" endtime="20201029 18:15:50.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.084" endtime="20201029 18:15:50.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.125" endtime="20201029 18:15:50.410"></status>
</kw>
<msg timestamp="20201029 18:15:50.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020954153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020980208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.123" endtime="20201029 18:15:50.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020954153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020980208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.414" endtime="20201029 18:15:50.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.423" endtime="20201029 18:15:50.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.118" endtime="20201029 18:15:50.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.116" endtime="20201029 18:15:50.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.430" level="INFO">${RESULT} = [{'diff': 2.6055000000000522e-05}, {'diff': 2.6069000000000092e-05}, {'diff': 2.5472000000002076e-05}, {'diff': 2.5569999999999066e-05}, {'diff': 2.6042000000000426e-05}, {'diff': 2.5568999999999592e-...</msg>
<status status="PASS" starttime="20201029 18:15:50.426" endtime="20201029 18:15:50.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.434" level="INFO">${ACCURACY} = {'diff': [2.6055000000000522e-05, 2.6069000000000092e-05, 2.5472000000002076e-05, 2.5569999999999066e-05, 2.6042000000000426e-05, 2.5568999999999592e-05, 2.5472000000002076e-05, 2.6069999999999566e-05...</msg>
<status status="PASS" starttime="20201029 18:15:50.431" endtime="20201029 18:15:50.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.439" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.438" endtime="20201029 18:15:50.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.442" level="INFO">VALUE: [2.6055000000000522e-05, 2.6069000000000092e-05, 2.5472000000002076e-05, 2.5569999999999066e-05, 2.6042000000000426e-05, 2.5568999999999592e-05, 2.5472000000002076e-05, 2.6069999999999566e-05, 2.5569999999999066e-05, 2.5541999999999926e-05, 2.6042000000000426e-05, 2.5555999999999496e-05, 2.5528000000000356e-05, 2.6042000000000426e-05, 2.562500000000134e-05, 2.5541999999999926e-05, 2.5568999999999592e-05, 2.5528000000000356e-05, 2.5541999999999926e-05, 2.6055999999999996e-05, 2.6042000000000426e-05, 2.5583999999998636e-05, 2.6054999999997053e-05, 2.6055999999999996e-05, 2.6041000000000952e-05, 2.5541000000000452e-05, 2.5555999999999496e-05, 2.6055000000000522e-05, 2.5610999999998302e-05, 2.6069999999999566e-05, 2.6055999999999996e-05, 2.5596999999998732e-05, 2.5556000000002965e-05, 2.595899999999901e-05, 2.6069000000000092e-05, 2.5569999999999066e-05, 2.6055000000000522e-05, 2.6055000000000522e-05, 2.661100000000277e-05, 2.6054999999997053e-05, 2.5985999999998677e-05, 2.6569000000000592e-05, 2.6055000000000522e-05, 2.6041000000000952e-05, 2.6569000000000592e-05, 2.6028000000000856e-05, 2.5582999999999162e-05, 2.6027000000001382e-05, 2.6082999999999662e-05, 2.6569000000000592e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.440" endtime="20201029 18:15:50.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.435" endtime="20201029 18:15:50.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.514" endtime="20201029 18:15:50.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.513" endtime="20201029 18:15:50.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.511" endtime="20201029 18:15:50.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.082" endtime="20201029 18:15:50.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.082" endtime="20201029 18:15:50.535"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.544" endtime="20201029 18:15:50.562"></status>
</kw>
<msg timestamp="20201029 18:15:50.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.542" endtime="20201029 18:15:50.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.563" endtime="20201029 18:15:50.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.566" endtime="20201029 18:15:50.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.540" endtime="20201029 18:15:50.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.538" endtime="20201029 18:15:50.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.575" endtime="20201029 18:15:50.884"></status>
</kw>
<msg timestamp="20201029 18:15:50.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020228264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.574" endtime="20201029 18:15:50.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020228264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.888" endtime="20201029 18:15:50.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.897" endtime="20201029 18:15:50.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.571" endtime="20201029 18:15:50.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.569" endtime="20201029 18:15:50.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.904" level="INFO">${RESULT} = [{'diff': 2.7055000000001522e-05}, {'diff': 2.7042000000001426e-05}, {'diff': 2.7068999999997623e-05}, {'diff': 2.7068999999997623e-05}, {'diff': 2.6513000000002312e-05}, {'diff': 2.7555999999998027e-...</msg>
<status status="PASS" starttime="20201029 18:15:50.900" endtime="20201029 18:15:50.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.909" level="INFO">${ACCURACY} = {'diff': [2.7055000000001522e-05, 2.7042000000001426e-05, 2.7068999999997623e-05, 2.7068999999997623e-05, 2.6513000000002312e-05, 2.7555999999998027e-05, 2.7027999999998387e-05, 2.6556000000000496e-05...</msg>
<status status="PASS" starttime="20201029 18:15:50.905" endtime="20201029 18:15:50.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.914" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.913" endtime="20201029 18:15:50.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.917" level="INFO">VALUE: [2.7055000000001522e-05, 2.7042000000001426e-05, 2.7068999999997623e-05, 2.7068999999997623e-05, 2.6513000000002312e-05, 2.7555999999998027e-05, 2.7027999999998387e-05, 2.6556000000000496e-05, 2.7555999999998027e-05, 2.7055000000001522e-05, 2.7027999999998387e-05, 2.6554999999997553e-05, 2.6556000000000496e-05, 2.7055999999997526e-05, 2.7042000000001426e-05, 2.6542000000000926e-05, 2.7041999999997957e-05, 2.6555000000001022e-05, 2.7056000000000996e-05, 2.7042000000001426e-05, 2.7041999999997957e-05, 2.7041999999997957e-05, 2.7042000000001426e-05, 2.7040999999998483e-05, 2.6555000000001022e-05, 2.6541000000001452e-05, 2.6556000000000496e-05, 2.7041999999997957e-05, 2.7056000000000996e-05, 2.7097000000000232e-05, 2.6583999999999636e-05, 2.6569000000000592e-05, 2.6540999999997983e-05, 2.7055999999997526e-05, 2.6555000000001022e-05, 2.7040999999998483e-05, 2.7042000000001426e-05, 2.6542000000000926e-05, 2.6542000000000926e-05, 2.6556000000000496e-05, 2.7042000000001426e-05, 2.7056000000000996e-05, 2.6555000000001022e-05, 2.6555000000001022e-05, 2.7070000000000566e-05, 2.7110999999999802e-05, 2.7042000000001426e-05, 2.7084000000000136e-05, 2.7070000000000566e-05, 2.6569000000000592e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.916" endtime="20201029 18:15:50.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.910" endtime="20201029 18:15:50.919"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.923" endtime="20201029 18:15:50.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.921" endtime="20201029 18:15:50.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.920" endtime="20201029 18:15:50.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.536" endtime="20201029 18:15:50.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.535" endtime="20201029 18:15:50.943"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.952" endtime="20201029 18:15:50.971"></status>
</kw>
<msg timestamp="20201029 18:15:50.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.951" endtime="20201029 18:15:50.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.972" endtime="20201029 18:15:50.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.975" endtime="20201029 18:15:50.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.948" endtime="20201029 18:15:50.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.946" endtime="20201029 18:15:50.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.985" endtime="20201029 18:15:51.271"></status>
</kw>
<msg timestamp="20201029 18:15:51.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02009875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:50.983" endtime="20201029 18:15:51.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02009875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:51.275" endtime="20201029 18:15:51.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.284" endtime="20201029 18:15:51.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.980" endtime="20201029 18:15:51.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.978" endtime="20201029 18:15:51.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.291" level="INFO">${RESULT} = [{'diff': 2.7596999999997263e-05}, {'diff': 2.7568999999998123e-05}, {'diff': 2.8041999999998957e-05}, {'diff': 2.8000000000000247e-05}, {'diff': 2.7542000000001926e-05}, {'diff': 2.8055999999998527e-...</msg>
<status status="PASS" starttime="20201029 18:15:51.287" endtime="20201029 18:15:51.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.295" level="INFO">${ACCURACY} = {'diff': [2.7596999999997263e-05, 2.7568999999998123e-05, 2.8041999999998957e-05, 2.8000000000000247e-05, 2.7542000000001926e-05, 2.8055999999998527e-05, 2.7555999999998027e-05, 2.7554999999998553e-05...</msg>
<status status="PASS" starttime="20201029 18:15:51.292" endtime="20201029 18:15:51.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.299" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.298" endtime="20201029 18:15:51.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.302" level="INFO">VALUE: [2.7596999999997263e-05, 2.7568999999998123e-05, 2.8041999999998957e-05, 2.8000000000000247e-05, 2.7542000000001926e-05, 2.8055999999998527e-05, 2.7555999999998027e-05, 2.7554999999998553e-05, 2.745899999999704e-05, 2.7554999999998553e-05, 2.8055000000002522e-05, 2.8056000000001996e-05, 2.8055999999998527e-05, 2.8041999999998957e-05, 2.7555999999998027e-05, 2.7556000000001496e-05, 2.7568999999998123e-05, 2.8069999999998096e-05, 2.8055000000002522e-05, 2.8068999999998623e-05, 2.8040999999999483e-05, 2.8054999999999053e-05, 2.8625000000000872e-05, 2.7555999999998027e-05, 2.8041999999998957e-05, 2.8054999999999053e-05, 2.7555999999998027e-05, 2.8055999999998527e-05, 2.7513999999999317e-05, 2.8056000000001996e-05, 2.8055999999998527e-05, 2.7513999999999317e-05, 2.7611999999999776e-05, 2.7513999999999317e-05, 2.7541999999998457e-05, 2.8041999999998957e-05, 2.8041999999998957e-05, 2.8056000000001996e-05, 2.7624999999999872e-05, 2.8069999999998096e-05, 2.8098000000000706e-05, 2.7554999999998553e-05, 2.7541000000002452e-05, 2.8040999999999483e-05, 2.8097999999997236e-05, 2.7555999999998027e-05, 2.7554999999998553e-05, 2.7541999999998457e-05, 2.7499999999999747e-05, 2.7541999999998457e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.300" endtime="20201029 18:15:51.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.296" endtime="20201029 18:15:51.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.307" endtime="20201029 18:15:51.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.306" endtime="20201029 18:15:51.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.304" endtime="20201029 18:15:51.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.944" endtime="20201029 18:15:51.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.944" endtime="20201029 18:15:51.328"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.337" endtime="20201029 18:15:51.356"></status>
</kw>
<msg timestamp="20201029 18:15:51.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.335" endtime="20201029 18:15:51.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.357" endtime="20201029 18:15:51.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.360" endtime="20201029 18:15:51.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.333" endtime="20201029 18:15:51.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.330" endtime="20201029 18:15:51.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.369" endtime="20201029 18:15:51.656"></status>
</kw>
<msg timestamp="20201029 18:15:51.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021051319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.368" endtime="20201029 18:15:51.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021051319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.661" endtime="20201029 18:15:51.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.669" endtime="20201029 18:15:51.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.365" endtime="20201029 18:15:51.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.363" endtime="20201029 18:15:51.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.675" level="INFO">${RESULT} = [{'diff': 2.9055000000000053e-05}, {'diff': 2.9041000000000483e-05}, {'diff': 2.9040999999997014e-05}, {'diff': 2.9013000000001343e-05}, {'diff': 2.9055999999999527e-05}, {'diff': 2.8555999999999027e-...</msg>
<status status="PASS" starttime="20201029 18:15:51.672" endtime="20201029 18:15:51.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.680" level="INFO">${ACCURACY} = {'diff': [2.9055000000000053e-05, 2.9041000000000483e-05, 2.9040999999997014e-05, 2.9013000000001343e-05, 2.9055999999999527e-05, 2.8555999999999027e-05, 2.8514000000000317e-05, 2.9041999999999957e-05...</msg>
<status status="PASS" starttime="20201029 18:15:51.676" endtime="20201029 18:15:51.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.684" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.683" endtime="20201029 18:15:51.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.687" level="INFO">VALUE: [2.9055000000000053e-05, 2.9041000000000483e-05, 2.9040999999997014e-05, 2.9013000000001343e-05, 2.9055999999999527e-05, 2.8555999999999027e-05, 2.8514000000000317e-05, 2.9041999999999957e-05, 2.9055999999999527e-05, 2.8555000000003022e-05, 2.9068999999999623e-05, 2.9056000000002996e-05, 2.8540999999999983e-05, 2.8555999999999027e-05, 2.9041999999999957e-05, 2.9055999999999527e-05, 2.8527999999999887e-05, 2.9068999999999623e-05, 2.9055999999999527e-05, 2.9112000000001276e-05, 2.8471999999998138e-05, 2.8540999999999983e-05, 2.9012999999997874e-05, 2.9541000000000983e-05, 2.8540999999999983e-05, 2.9096999999998763e-05, 2.9083999999998666e-05, 2.8986000000001677e-05, 2.8514000000000317e-05, 2.8540999999999983e-05, 2.9041999999999957e-05, 2.9069999999999097e-05, 2.9541000000000983e-05, 2.9055000000000053e-05, 2.9055000000000053e-05, 2.9055000000000053e-05, 2.9068999999999623e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.8486000000001177e-05, 2.9597999999998736e-05, 2.9569999999999597e-05, 2.9000000000001247e-05, 2.8471999999998138e-05, 2.8569999999998597e-05, 2.9569999999999597e-05, 2.8556000000002496e-05, 2.8999999999997778e-05, 2.9556000000000027e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.685" endtime="20201029 18:15:51.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.680" endtime="20201029 18:15:51.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.692" endtime="20201029 18:15:51.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.691" endtime="20201029 18:15:51.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.689" endtime="20201029 18:15:51.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.329" endtime="20201029 18:15:51.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.328" endtime="20201029 18:15:51.713"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.721" endtime="20201029 18:15:51.738"></status>
</kw>
<msg timestamp="20201029 18:15:51.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.720" endtime="20201029 18:15:51.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.740" endtime="20201029 18:15:51.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.742" endtime="20201029 18:15:51.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.717" endtime="20201029 18:15:51.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.715" endtime="20201029 18:15:51.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.751" endtime="20201029 18:15:52.037"></status>
</kw>
<msg timestamp="20201029 18:15:52.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.750" endtime="20201029 18:15:52.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.041" endtime="20201029 18:15:52.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.049" endtime="20201029 18:15:52.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.747" endtime="20201029 18:15:52.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.746" endtime="20201029 18:15:52.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.056" level="INFO">${RESULT} = [{'diff': 2.9556000000000027e-05}, {'diff': 3.0069000000000623e-05}, {'diff': 2.9569000000000123e-05}, {'diff': 3.0083000000000193e-05}, {'diff': 3.0096999999999763e-05}, {'diff': 3.0027999999997917e-...</msg>
<status status="PASS" starttime="20201029 18:15:52.053" endtime="20201029 18:15:52.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.061" level="INFO">${ACCURACY} = {'diff': [2.9556000000000027e-05, 3.0069000000000623e-05, 2.9569000000000123e-05, 3.0083000000000193e-05, 3.0096999999999763e-05, 3.0027999999997917e-05, 3.0041999999997487e-05, 3.0082999999996723e-05...</msg>
<status status="PASS" starttime="20201029 18:15:52.057" endtime="20201029 18:15:52.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.066" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.064" endtime="20201029 18:15:52.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.068" level="INFO">VALUE: [2.9556000000000027e-05, 3.0069000000000623e-05, 2.9569000000000123e-05, 3.0083000000000193e-05, 3.0096999999999763e-05, 3.0027999999997917e-05, 3.0041999999997487e-05, 3.0082999999996723e-05, 3.0055000000001053e-05, 3.0041000000001483e-05, 2.9512999999998374e-05, 3.0055000000001053e-05, 3.0055000000001053e-05, 3.0054999999997584e-05, 3.0042000000000957e-05, 2.9513999999997848e-05, 3.0014000000001817e-05, 3.0055999999997057e-05, 2.9555000000000553e-05, 3.0042000000000957e-05, 2.9569000000000123e-05, 2.9556000000000027e-05, 2.9528000000000887e-05, 3.0083000000000193e-05, 3.0068999999997154e-05, 3.0069000000000623e-05, 2.9514000000001317e-05, 3.0056000000000527e-05, 3.0000000000002247e-05, 2.9541999999996987e-05, 3.0056000000000527e-05, 2.9596999999999263e-05, 2.9541000000000983e-05, 2.9528000000000887e-05, 3.0055000000001053e-05, 2.9985999999999208e-05, 2.9556000000000027e-05, 2.9569000000000123e-05, 3.0054999999997584e-05, 3.0069000000000623e-05, 2.9568999999996654e-05, 3.0070000000000097e-05, 2.9542000000000457e-05, 2.9556000000000027e-05, 3.0056000000000527e-05, 2.9611999999998306e-05, 3.0055000000001053e-05, 2.9569000000000123e-05, 2.9541000000000983e-05, 2.9555000000000553e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.067" endtime="20201029 18:15:52.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.062" endtime="20201029 18:15:52.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.073" endtime="20201029 18:15:52.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.071" endtime="20201029 18:15:52.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.070" endtime="20201029 18:15:52.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.714" endtime="20201029 18:15:52.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.713" endtime="20201029 18:15:52.093"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.102" endtime="20201029 18:15:52.123"></status>
</kw>
<msg timestamp="20201029 18:15:52.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.100" endtime="20201029 18:15:52.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.126" endtime="20201029 18:15:52.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.131" endtime="20201029 18:15:52.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.098" endtime="20201029 18:15:52.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.096" endtime="20201029 18:15:52.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.150" endtime="20201029 18:15:52.443"></status>
</kw>
<msg timestamp="20201029 18:15:52.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019458153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019489194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.147" endtime="20201029 18:15:52.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019458153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019489194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.447" endtime="20201029 18:15:52.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.455" endtime="20201029 18:15:52.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.141" endtime="20201029 18:15:52.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.138" endtime="20201029 18:15:52.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.462" level="INFO">${RESULT} = [{'diff': 3.104100000000248e-05}, {'diff': 3.15700000000016e-05}, {'diff': 3.1054999999998584e-05}, {'diff': 3.105500000000205e-05}, {'diff': 3.0526999999998944e-05}, {'diff': 3.105599999999806e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:52.458" endtime="20201029 18:15:52.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.466" level="INFO">${ACCURACY} = {'diff': [3.104100000000248e-05, 3.15700000000016e-05, 3.1054999999998584e-05, 3.105500000000205e-05, 3.0526999999998944e-05, 3.105599999999806e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.104...</msg>
<status status="PASS" starttime="20201029 18:15:52.463" endtime="20201029 18:15:52.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.470" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.469" endtime="20201029 18:15:52.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.473" level="INFO">VALUE: [3.104100000000248e-05, 3.15700000000016e-05, 3.1054999999998584e-05, 3.105500000000205e-05, 3.0526999999998944e-05, 3.105599999999806e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.104200000000196e-05, 3.105599999999806e-05, 3.0485999999999708e-05, 3.052799999999842e-05, 3.055600000000103e-05, 3.104199999999849e-05, 3.101399999999935e-05, 3.105599999999806e-05, 3.104200000000196e-05, 3.054199999999799e-05, 3.056900000000112e-05, 3.104200000000196e-05, 3.0540999999998514e-05, 3.102800000000239e-05, 3.1554999999999084e-05, 3.055600000000103e-05, 3.1040999999999014e-05, 3.05700000000006e-05, 3.052799999999842e-05, 3.105599999999806e-05, 3.1596999999997794e-05, 3.055600000000103e-05, 3.1054999999998584e-05, 3.0568999999997654e-05, 3.104200000000196e-05, 3.104200000000196e-05, 3.105599999999806e-05, 3.104200000000196e-05, 3.108400000000067e-05, 3.1054999999998584e-05, 3.155599999999856e-05, 3.0582999999997224e-05, 3.105599999999806e-05, 3.054200000000146e-05, 3.105500000000205e-05, 3.155600000000203e-05, 3.061099999999983e-05, 3.154200000000246e-05, 3.105599999999806e-05, 3.155599999999856e-05, 3.0554999999998084e-05, 3.055500000000155e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.471" endtime="20201029 18:15:52.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.467" endtime="20201029 18:15:52.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.478" endtime="20201029 18:15:52.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.476" endtime="20201029 18:15:52.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.475" endtime="20201029 18:15:52.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.094" endtime="20201029 18:15:52.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.094" endtime="20201029 18:15:52.498"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.507" endtime="20201029 18:15:52.528"></status>
</kw>
<msg timestamp="20201029 18:15:52.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.505" endtime="20201029 18:15:52.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.529" endtime="20201029 18:15:52.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.532" endtime="20201029 18:15:52.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.503" endtime="20201029 18:15:52.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.501" endtime="20201029 18:15:52.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.541" endtime="20201029 18:15:52.827"></status>
</kw>
<msg timestamp="20201029 18:15:52.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02242675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:52.539" endtime="20201029 18:15:52.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02242675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:52.831" endtime="20201029 18:15:52.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.839" endtime="20201029 18:15:52.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.537" endtime="20201029 18:15:52.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.535" endtime="20201029 18:15:52.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.846" level="INFO">${RESULT} = [{'diff': 3.155600000000203e-05}, {'diff': 3.208400000000167e-05}, {'diff': 3.15700000000016e-05}, {'diff': 3.202799999999992e-05}, {'diff': 3.155500000000255e-05}, {'diff': 3.152799999999942e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:52.843" endtime="20201029 18:15:52.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.850" level="INFO">${ACCURACY} = {'diff': [3.155600000000203e-05, 3.208400000000167e-05, 3.15700000000016e-05, 3.202799999999992e-05, 3.155500000000255e-05, 3.152799999999942e-05, 3.1568999999998654e-05, 3.2041000000000014e-05, 3.154...</msg>
<status status="PASS" starttime="20201029 18:15:52.847" endtime="20201029 18:15:52.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.854" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.853" endtime="20201029 18:15:52.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.857" level="INFO">VALUE: [3.155600000000203e-05, 3.208400000000167e-05, 3.15700000000016e-05, 3.202799999999992e-05, 3.155500000000255e-05, 3.152799999999942e-05, 3.1568999999998654e-05, 3.2041000000000014e-05, 3.1540999999999514e-05, 3.205600000000253e-05, 3.1596999999997794e-05, 3.205599999999906e-05, 3.2568999999999654e-05, 3.206900000000262e-05, 3.204199999999949e-05, 3.2054999999999584e-05, 3.197200000000164e-05, 3.155599999999856e-05, 3.2068999999999154e-05, 3.154199999999899e-05, 3.205600000000253e-05, 3.150000000000028e-05, 3.202799999999992e-05, 3.155600000000203e-05, 3.2041000000000014e-05, 3.155599999999856e-05, 3.255599999999956e-05, 3.155599999999856e-05, 3.154200000000246e-05, 3.1568999999998654e-05, 3.2041000000000014e-05, 3.2054999999999584e-05, 3.2041000000000014e-05, 3.205599999999906e-05, 3.155599999999856e-05, 3.204199999999949e-05, 3.2068999999999154e-05, 3.16250000000004e-05, 3.152799999999942e-05, 3.202799999999992e-05, 3.150000000000028e-05, 3.147199999999767e-05, 3.161100000000083e-05, 3.155500000000255e-05, 3.155600000000203e-05, 3.2041000000000014e-05, 3.1568999999998654e-05, 3.204199999999949e-05, 3.206999999999863e-05, 3.151399999999985e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.855" endtime="20201029 18:15:52.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.851" endtime="20201029 18:15:52.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.863" endtime="20201029 18:15:52.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.861" endtime="20201029 18:15:52.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.860" endtime="20201029 18:15:52.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.499" endtime="20201029 18:15:52.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.499" endtime="20201029 18:15:52.883"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.892" endtime="20201029 18:15:52.909"></status>
</kw>
<msg timestamp="20201029 18:15:52.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.890" endtime="20201029 18:15:52.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.911" endtime="20201029 18:15:52.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.913" endtime="20201029 18:15:52.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.888" endtime="20201029 18:15:52.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.886" endtime="20201029 18:15:52.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.922" endtime="20201029 18:15:53.207"></status>
</kw>
<msg timestamp="20201029 18:15:53.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019495542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.921" endtime="20201029 18:15:53.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019495542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.211" endtime="20201029 18:15:53.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.219" endtime="20201029 18:15:53.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.918" endtime="20201029 18:15:53.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.916" endtime="20201029 18:15:53.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.226" level="INFO">${RESULT} = [{'diff': 3.255599999999956e-05}, {'diff': 3.297299999999864e-05}, {'diff': 3.254199999999999e-05}, {'diff': 3.254199999999999e-05}, {'diff': 3.3069000000000154e-05}, {'diff': 3.255599999999956e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:53.223" endtime="20201029 18:15:53.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.231" level="INFO">${ACCURACY} = {'diff': [3.255599999999956e-05, 3.297299999999864e-05, 3.254199999999999e-05, 3.254199999999999e-05, 3.3069000000000154e-05, 3.255599999999956e-05, 3.254199999999999e-05, 3.305600000000006e-05, 3.306...</msg>
<status status="PASS" starttime="20201029 18:15:53.227" endtime="20201029 18:15:53.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.235" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.234" endtime="20201029 18:15:53.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.238" level="INFO">VALUE: [3.255599999999956e-05, 3.297299999999864e-05, 3.254199999999999e-05, 3.254199999999999e-05, 3.3069000000000154e-05, 3.255599999999956e-05, 3.254199999999999e-05, 3.305600000000006e-05, 3.3069000000000154e-05, 3.254199999999999e-05, 3.3055000000000584e-05, 3.255599999999956e-05, 3.305600000000006e-05, 3.304200000000049e-05, 3.2541000000000514e-05, 3.254199999999999e-05, 3.3054999999997114e-05, 3.2541000000000514e-05, 3.2568999999999654e-05, 3.255599999999956e-05, 3.302800000000092e-05, 3.3055000000000584e-05, 3.2555000000000084e-05, 3.305600000000006e-05, 3.305600000000006e-05, 3.252800000000042e-05, 3.3055000000000584e-05, 3.3541000000001514e-05, 3.2555000000000084e-05, 3.3041000000001014e-05, 3.306999999999963e-05, 3.2568999999999654e-05, 3.3555000000001084e-05, 3.255599999999956e-05, 3.304200000000049e-05, 3.3055000000000584e-05, 3.3040999999997545e-05, 3.3040999999997545e-05, 3.302800000000092e-05, 3.254199999999999e-05, 3.299999999999831e-05, 3.305600000000006e-05, 3.2568999999999654e-05, 3.3069000000000154e-05, 3.311199999999834e-05, 3.2526999999997475e-05, 3.3040999999997545e-05, 3.255599999999956e-05, 3.3055000000000584e-05, 3.2555000000000084e-05]</msg>
<status status="PASS" starttime="20201029 18:15:53.236" endtime="20201029 18:15:53.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.232" endtime="20201029 18:15:53.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.243" endtime="20201029 18:15:53.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.241" endtime="20201029 18:15:53.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.240" endtime="20201029 18:15:53.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.884" endtime="20201029 18:15:53.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.883" endtime="20201029 18:15:53.263"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.272" endtime="20201029 18:15:53.289"></status>
</kw>
<msg timestamp="20201029 18:15:53.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.270" endtime="20201029 18:15:53.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.291" endtime="20201029 18:15:53.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.293" endtime="20201029 18:15:53.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.268" endtime="20201029 18:15:53.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.266" endtime="20201029 18:15:53.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.302" endtime="20201029 18:15:53.589"></status>
</kw>
<msg timestamp="20201029 18:15:53.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019584847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.301" endtime="20201029 18:15:53.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019584847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.593" endtime="20201029 18:15:53.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.601" endtime="20201029 18:15:53.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.298" endtime="20201029 18:15:53.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.297" endtime="20201029 18:15:53.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.608" level="INFO">${RESULT} = [{'diff': 3.3540999999998045e-05}, {'diff': 3.3527000000001944e-05}, {'diff': 3.405600000000106e-05}, {'diff': 3.354200000000099e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.405599999999759e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:53.604" endtime="20201029 18:15:53.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.612" level="INFO">${ACCURACY} = {'diff': [3.3540999999998045e-05, 3.3527000000001944e-05, 3.405600000000106e-05, 3.354200000000099e-05, 3.3583000000000224e-05, 3.405599999999759e-05, 3.452799999999895e-05, 3.4026999999998975e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:15:53.609" endtime="20201029 18:15:53.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.616" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.615" endtime="20201029 18:15:53.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.619" level="INFO">VALUE: [3.3540999999998045e-05, 3.3527000000001944e-05, 3.405600000000106e-05, 3.354200000000099e-05, 3.3583000000000224e-05, 3.405599999999759e-05, 3.452799999999895e-05, 3.4026999999998975e-05, 3.402800000000192e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.4110999999999864e-05, 3.4040999999998545e-05, 3.3554999999997615e-05, 3.3540999999998045e-05, 3.4055000000001584e-05, 3.3610999999999364e-05, 3.3554999999997615e-05, 3.352800000000142e-05, 3.354200000000099e-05, 3.4097000000000294e-05, 3.401400000000235e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.46250000000034e-05, 3.404200000000149e-05, 3.354200000000099e-05, 3.3554999999997615e-05, 3.402800000000192e-05, 3.3512999999998905e-05, 3.4055000000001584e-05, 3.407000000000063e-05, 3.354199999999752e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.35839999999997e-05, 3.3541000000001514e-05, 3.354200000000099e-05, 3.3583000000000224e-05, 3.3569000000000654e-05, 3.4110999999999864e-05, 3.4069000000001154e-05, 3.4083000000000724e-05, 3.35839999999997e-05, 3.3568999999997184e-05, 3.4054999999998115e-05, 3.4041000000002014e-05, 3.3554999999997615e-05, 3.3540999999998045e-05, 3.3555000000001084e-05]</msg>
<status status="PASS" starttime="20201029 18:15:53.617" endtime="20201029 18:15:53.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.613" endtime="20201029 18:15:53.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.624" endtime="20201029 18:15:53.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.622" endtime="20201029 18:15:53.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.621" endtime="20201029 18:15:53.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.264" endtime="20201029 18:15:53.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.264" endtime="20201029 18:15:53.647"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.666" endtime="20201029 18:15:53.691"></status>
</kw>
<msg timestamp="20201029 18:15:53.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.662" endtime="20201029 18:15:53.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.694" endtime="20201029 18:15:53.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.699" endtime="20201029 18:15:53.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.657" endtime="20201029 18:15:53.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.652" endtime="20201029 18:15:53.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.718" endtime="20201029 18:15:54.009"></status>
</kw>
<msg timestamp="20201029 18:15:54.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035235014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035286389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.715" endtime="20201029 18:15:54.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035235014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035286389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.013" endtime="20201029 18:15:54.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.021" endtime="20201029 18:15:54.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.710" endtime="20201029 18:15:54.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.706" endtime="20201029 18:15:54.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.028" level="INFO">${RESULT} = [{'diff': 5.137499999999934e-05}, {'diff': 5.112499999999909e-05}, {'diff': 5.125000000000268e-05}, {'diff': 5.209700000000095e-05}, {'diff': 5.1417000000004986e-05}, {'diff': 5.130600000000096e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:54.025" endtime="20201029 18:15:54.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.033" level="INFO">${ACCURACY} = {'diff': [5.137499999999934e-05, 5.112499999999909e-05, 5.125000000000268e-05, 5.209700000000095e-05, 5.1417000000004986e-05, 5.130600000000096e-05, 5.112499999999909e-05, 5.187499999999984e-05, 5.129...</msg>
<status status="PASS" starttime="20201029 18:15:54.029" endtime="20201029 18:15:54.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.038" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.036" endtime="20201029 18:15:54.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.040" level="INFO">VALUE: [5.137499999999934e-05, 5.112499999999909e-05, 5.125000000000268e-05, 5.209700000000095e-05, 5.1417000000004986e-05, 5.130600000000096e-05, 5.112499999999909e-05, 5.187499999999984e-05, 5.129200000000139e-05, 5.125000000000268e-05, 5.179100000000242e-05, 5.111099999999952e-05, 5.1721999999997104e-05, 5.122200000000354e-05, 5.209700000000095e-05, 5.187499999999984e-05, 5.180500000000199e-05, 5.187499999999984e-05, 5.1679999999998394e-05, 5.109699999999995e-05, 5.21669999999988e-05, 5.112500000000603e-05, 5.188900000000635e-05, 5.16669999999983e-05, 5.175000000000318e-05, 5.21669999999988e-05, 5.145899999999676e-05, 5.21669999999988e-05, 5.161100000000002e-05, 5.1945000000004626e-05, 5.13340000000001e-05, 5.215299999999923e-05, 5.1235999999996173e-05, 5.2165999999999324e-05, 5.130500000000149e-05, 5.1471999999996854e-05, 5.179200000000189e-05, 5.1679999999998394e-05, 5.130500000000149e-05, 5.1485999999996424e-05, 5.1221999999996604e-05, 5.213899999999966e-05, 5.16940000000049e-05, 5.212500000000009e-05, 5.1445000000004126e-05, 5.126399999999531e-05, 5.154200000000164e-05, 5.138899999999891e-05, 5.218099999999837e-05, 5.152799999999513e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.039" endtime="20201029 18:15:54.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.034" endtime="20201029 18:15:54.042"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.046" endtime="20201029 18:15:54.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.045" endtime="20201029 18:15:54.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.043" endtime="20201029 18:15:54.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.649" endtime="20201029 18:15:54.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.648" endtime="20201029 18:15:54.067"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.075" endtime="20201029 18:15:54.094"></status>
</kw>
<msg timestamp="20201029 18:15:54.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.074" endtime="20201029 18:15:54.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.095" endtime="20201029 18:15:54.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.098" endtime="20201029 18:15:54.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.071" endtime="20201029 18:15:54.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.069" endtime="20201029 18:15:54.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.107" endtime="20201029 18:15:54.393"></status>
</kw>
<msg timestamp="20201029 18:15:54.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019682694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019735236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.105" endtime="20201029 18:15:54.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019682694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019735236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.397" endtime="20201029 18:15:54.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.406" endtime="20201029 18:15:54.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.102" endtime="20201029 18:15:54.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.101" endtime="20201029 18:15:54.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.412" level="INFO">${RESULT} = [{'diff': 5.254199999999917e-05}, {'diff': 5.230500000000249e-05}, {'diff': 5.241699999999905e-05}, {'diff': 5.2485999999997424e-05}, {'diff': 5.244500000000166e-05}, {'diff': 5.236100000000077e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:54.409" endtime="20201029 18:15:54.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.417" level="INFO">${ACCURACY} = {'diff': [5.254199999999917e-05, 5.230500000000249e-05, 5.241699999999905e-05, 5.2485999999997424e-05, 5.244500000000166e-05, 5.236100000000077e-05, 5.291699999999955e-05, 5.279199999999942e-05, 5.230...</msg>
<status status="PASS" starttime="20201029 18:15:54.413" endtime="20201029 18:15:54.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.422" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.421" endtime="20201029 18:15:54.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.424" level="INFO">VALUE: [5.254199999999917e-05, 5.230500000000249e-05, 5.241699999999905e-05, 5.2485999999997424e-05, 5.244500000000166e-05, 5.236100000000077e-05, 5.291699999999955e-05, 5.279199999999942e-05, 5.230600000000196e-05, 5.262500000000059e-05, 5.31669999999998e-05, 5.28609999999978e-05, 5.269500000000191e-05, 5.2638000000000684e-05, 5.304200000000314e-05, 5.248700000000037e-05, 5.2429999999999144e-05, 5.3179999999999894e-05, 5.30280000000001e-05, 5.3179999999999894e-05, 5.25409999999997e-05, 5.263900000000016e-05, 5.255499999999927e-05, 5.295800000000225e-05, 5.255499999999927e-05, 5.311100000000152e-05, 5.311100000000152e-05, 5.26669999999993e-05, 5.254199999999917e-05, 5.212500000000009e-05, 5.257000000000178e-05, 5.236100000000077e-05, 5.318099999999937e-05, 5.234699999999773e-05, 5.318099999999937e-05, 5.275000000000071e-05, 5.244499999999819e-05, 5.225000000000021e-05, 5.236199999999677e-05, 5.223700000000012e-05, 5.28479999999977e-05, 5.284699999999823e-05, 5.229099999999945e-05, 5.245800000000175e-05, 5.237499999999687e-05, 5.2665999999999824e-05, 5.2721999999998104e-05, 5.298600000000139e-05, 5.3207999999999034e-05, 5.280500000000299e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.423" endtime="20201029 18:15:54.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.418" endtime="20201029 18:15:54.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.429" endtime="20201029 18:15:54.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.427" endtime="20201029 18:15:54.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.426" endtime="20201029 18:15:54.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.068" endtime="20201029 18:15:54.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.067" endtime="20201029 18:15:54.450"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.458" endtime="20201029 18:15:54.476"></status>
</kw>
<msg timestamp="20201029 18:15:54.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.457" endtime="20201029 18:15:54.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.478" endtime="20201029 18:15:54.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.480" endtime="20201029 18:15:54.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.454" endtime="20201029 18:15:54.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.452" endtime="20201029 18:15:54.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.489" endtime="20201029 18:15:54.776"></status>
</kw>
<msg timestamp="20201029 18:15:54.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.488" endtime="20201029 18:15:54.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.780" endtime="20201029 18:15:54.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.788" endtime="20201029 18:15:54.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.485" endtime="20201029 18:15:54.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.484" endtime="20201029 18:15:54.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.795" level="INFO">${RESULT} = [{'diff': 5.398600000000239e-05}, {'diff': 5.356999999999931e-05}, {'diff': 5.34869999999979e-05}, {'diff': 5.368099999999987e-05}, {'diff': 5.376300000000181e-05}, {'diff': 5.409699999999948e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:54.791" endtime="20201029 18:15:54.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.799" level="INFO">${ACCURACY} = {'diff': [5.398600000000239e-05, 5.356999999999931e-05, 5.34869999999979e-05, 5.368099999999987e-05, 5.376300000000181e-05, 5.409699999999948e-05, 5.350000000000146e-05, 5.3693999999999964e-05, 5.4152...</msg>
<status status="PASS" starttime="20201029 18:15:54.796" endtime="20201029 18:15:54.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.803" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.802" endtime="20201029 18:15:54.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.806" level="INFO">VALUE: [5.398600000000239e-05, 5.356999999999931e-05, 5.34869999999979e-05, 5.368099999999987e-05, 5.376300000000181e-05, 5.409699999999948e-05, 5.350000000000146e-05, 5.3693999999999964e-05, 5.4152000000001754e-05, 5.398600000000239e-05, 5.4180000000000894e-05, 5.372300000000205e-05, 5.336100000000177e-05, 5.322200000000207e-05, 5.387499999999837e-05, 5.330500000000002e-05, 5.368099999999987e-05, 5.3763999999997814e-05, 5.326400000000078e-05, 5.415300000000123e-05, 5.362499999999812e-05, 5.3749999999998244e-05, 5.373600000000214e-05, 5.330599999999949e-05, 5.355599999999974e-05, 5.40549999999973e-05, 5.333299999999916e-05, 5.3652000000001254e-05, 5.372299999999858e-05, 5.3680000000000394e-05, 5.3680000000000394e-05, 5.3944000000000214e-05, 5.413900000000166e-05, 5.4027999999997633e-05, 5.363900000000116e-05, 5.40549999999973e-05, 5.379099999999748e-05, 5.381999999999956e-05, 5.391700000000055e-05, 5.3430000000000144e-05, 5.405600000000024e-05, 5.344499999999919e-05, 5.381999999999956e-05, 5.3999999999998494e-05, 5.38609999999988e-05, 5.340300000000048e-05, 5.343099999999962e-05, 5.3249999999997744e-05, 5.318099999999937e-05, 5.311100000000152e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.804" endtime="20201029 18:15:54.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.800" endtime="20201029 18:15:54.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.810" endtime="20201029 18:15:54.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.809" endtime="20201029 18:15:54.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.808" endtime="20201029 18:15:54.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.451" endtime="20201029 18:15:54.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.450" endtime="20201029 18:15:54.831"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.840" endtime="20201029 18:15:54.859"></status>
</kw>
<msg timestamp="20201029 18:15:54.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.838" endtime="20201029 18:15:54.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.861" endtime="20201029 18:15:54.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.863" endtime="20201029 18:15:54.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.836" endtime="20201029 18:15:54.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.833" endtime="20201029 18:15:54.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.872" endtime="20201029 18:15:55.158"></status>
</kw>
<msg timestamp="20201029 18:15:55.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020530347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020584889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.871" endtime="20201029 18:15:55.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020530347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020584889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.162" endtime="20201029 18:15:55.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.170" endtime="20201029 18:15:55.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.868" endtime="20201029 18:15:55.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.867" endtime="20201029 18:15:55.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.177" level="INFO">${RESULT} = [{'diff': 5.4541999999997703e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.519499999999747e-05}, {'diff': 5.491700000000155e-05}, {'diff': 5.43609999999993e-05}, {'diff': 5.463900000000216e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:55.174" endtime="20201029 18:15:55.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.181" level="INFO">${ACCURACY} = {'diff': [5.4541999999997703e-05, 5.48609999999998e-05, 5.519499999999747e-05, 5.491700000000155e-05, 5.43609999999993e-05, 5.463900000000216e-05, 5.430600000000049e-05, 5.494500000000069e-05, 5.47499...</msg>
<status status="PASS" starttime="20201029 18:15:55.178" endtime="20201029 18:15:55.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.185" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.184" endtime="20201029 18:15:55.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.188" level="INFO">VALUE: [5.4541999999997703e-05, 5.48609999999998e-05, 5.519499999999747e-05, 5.491700000000155e-05, 5.43609999999993e-05, 5.463900000000216e-05, 5.430600000000049e-05, 5.494500000000069e-05, 5.4749999999999244e-05, 5.500000000000296e-05, 5.462500000000259e-05, 5.4249999999998744e-05, 5.480499999999805e-05, 5.509699999999701e-05, 5.5179999999998425e-05, 5.4485999999999424e-05, 5.480499999999805e-05, 5.484700000000023e-05, 5.480499999999805e-05, 5.4249999999998744e-05, 5.50280000000021e-05, 5.50280000000021e-05, 5.493100000000112e-05, 5.4735999999999674e-05, 5.465300000000173e-05, 5.432000000000006e-05, 5.4527999999998134e-05, 5.4235999999999174e-05, 5.484700000000023e-05, 5.518100000000137e-05, 5.476299999999934e-05, 5.511100000000005e-05, 5.4887999999999465e-05, 5.482000000000056e-05, 5.465299999999826e-05, 5.481899999999762e-05, 5.4416000000001574e-05, 5.4929999999998175e-05, 5.4735999999999674e-05, 5.4749999999999244e-05, 5.4513999999998564e-05, 5.500000000000296e-05, 5.4735999999999674e-05, 5.490300000000198e-05, 5.465299999999826e-05, 5.5207999999997565e-05, 5.511100000000005e-05, 5.4485999999999424e-05, 5.5027999999998634e-05, 5.487499999999937e-05]</msg>
<status status="PASS" starttime="20201029 18:15:55.187" endtime="20201029 18:15:55.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.182" endtime="20201029 18:15:55.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.194" endtime="20201029 18:15:55.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.192" endtime="20201029 18:15:55.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.191" endtime="20201029 18:15:55.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.832" endtime="20201029 18:15:55.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.831" endtime="20201029 18:15:55.214"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.223" endtime="20201029 18:15:55.241"></status>
</kw>
<msg timestamp="20201029 18:15:55.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.221" endtime="20201029 18:15:55.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.242" endtime="20201029 18:15:55.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.245" endtime="20201029 18:15:55.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.219" endtime="20201029 18:15:55.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.217" endtime="20201029 18:15:55.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.253" endtime="20201029 18:15:55.539"></status>
</kw>
<msg timestamp="20201029 18:15:55.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.252" endtime="20201029 18:15:55.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.543" endtime="20201029 18:15:55.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.551" endtime="20201029 18:15:55.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.250" endtime="20201029 18:15:55.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.248" endtime="20201029 18:15:55.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.558" level="INFO">${RESULT} = [{'diff': 5.537499999999987e-05}, {'diff': 5.6000000000000494e-05}, {'diff': 5.5929999999999175e-05}, {'diff': 5.6193999999998995e-05}, {'diff': 5.6194000000002464e-05}, {'diff': 5.537499999999987e-05...</msg>
<status status="PASS" starttime="20201029 18:15:55.555" endtime="20201029 18:15:55.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.563" level="INFO">${ACCURACY} = {'diff': [5.537499999999987e-05, 5.6000000000000494e-05, 5.5929999999999175e-05, 5.6193999999998995e-05, 5.6194000000002464e-05, 5.537499999999987e-05, 5.5749999999996774e-05, 5.583299999999819e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:15:55.559" endtime="20201029 18:15:55.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.567" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.566" endtime="20201029 18:15:55.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.570" level="INFO">VALUE: [5.537499999999987e-05, 5.6000000000000494e-05, 5.5929999999999175e-05, 5.6193999999998995e-05, 5.6194000000002464e-05, 5.537499999999987e-05, 5.5749999999996774e-05, 5.583299999999819e-05, 5.556900000000184e-05, 5.5750000000000244e-05, 5.511100000000005e-05, 5.580500000000252e-05, 5.606899999999887e-05, 5.593099999999865e-05, 5.611100000000105e-05, 5.605600000000224e-05, 5.590299999999951e-05, 5.530600000000149e-05, 5.6235999999997704e-05, 5.584700000000123e-05, 5.5805999999998523e-05, 5.5305999999998023e-05, 5.5236000000000174e-05, 5.5972000000001354e-05, 5.562500000000012e-05, 5.54869999999999e-05, 5.6014000000000064e-05, 5.537499999999987e-05, 5.604099999999973e-05, 5.5972000000001354e-05, 5.556900000000184e-05, 5.5486000000000424e-05, 5.5707999999998065e-05, 5.5944000000002214e-05, 5.561100000000055e-05, 5.5777999999999384e-05, 5.562500000000012e-05, 5.6041999999999204e-05, 5.5486000000000424e-05, 5.5791999999998954e-05, 5.5305999999998023e-05, 5.60410000000032e-05, 5.5777999999999384e-05, 5.586200000000027e-05, 5.5791999999998954e-05, 5.526299999999984e-05, 5.512499999999962e-05, 5.5763999999999814e-05, 5.5763999999999814e-05, 5.559700000000098e-05]</msg>
<status status="PASS" starttime="20201029 18:15:55.569" endtime="20201029 18:15:55.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.564" endtime="20201029 18:15:55.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.575" endtime="20201029 18:15:55.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.573" endtime="20201029 18:15:55.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.572" endtime="20201029 18:15:55.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.215" endtime="20201029 18:15:55.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.215" endtime="20201029 18:15:55.596"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.604" endtime="20201029 18:15:55.622"></status>
</kw>
<msg timestamp="20201029 18:15:55.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.603" endtime="20201029 18:15:55.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.624" endtime="20201029 18:15:55.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.626" endtime="20201029 18:15:55.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.600" endtime="20201029 18:15:55.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.598" endtime="20201029 18:15:55.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.635" endtime="20201029 18:15:55.923"></status>
</kw>
<msg timestamp="20201029 18:15:55.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019629444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.634" endtime="20201029 18:15:55.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019629444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.928" endtime="20201029 18:15:55.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.936" endtime="20201029 18:15:55.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.631" endtime="20201029 18:15:55.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.630" endtime="20201029 18:15:55.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.942" level="INFO">${RESULT} = [{'diff': 5.7083999999998913e-05}, {'diff': 5.633400000000163e-05}, {'diff': 5.6805999999999524e-05}, {'diff': 5.643099999999915e-05}, {'diff': 5.69870000000014e-05}, {'diff': 5.637500000000087e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:55.939" endtime="20201029 18:15:55.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.946" level="INFO">${ACCURACY} = {'diff': [5.7083999999998913e-05, 5.633400000000163e-05, 5.6805999999999524e-05, 5.643099999999915e-05, 5.69870000000014e-05, 5.637500000000087e-05, 5.6930000000000175e-05, 5.7042000000000204e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 18:15:55.943" endtime="20201029 18:15:55.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.951" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.950" endtime="20201029 18:15:55.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.953" level="INFO">VALUE: [5.7083999999998913e-05, 5.633400000000163e-05, 5.6805999999999524e-05, 5.643099999999915e-05, 5.69870000000014e-05, 5.637500000000087e-05, 5.6930000000000175e-05, 5.7042000000000204e-05, 5.643100000000262e-05, 5.6999999999998024e-05, 5.662500000000112e-05, 5.684699999999876e-05, 5.6693999999999495e-05, 5.6694000000002964e-05, 5.6235999999997704e-05, 5.6541999999999704e-05, 5.641699999999958e-05, 5.6986000000001924e-05, 5.694499999999922e-05, 5.6264000000000314e-05, 5.720899999999904e-05, 5.6805999999999524e-05, 5.633299999999869e-05, 5.688900000000094e-05, 5.6764000000000814e-05, 5.716700000000033e-05, 5.636200000000077e-05, 5.65549999999998e-05, 5.712499999999815e-05, 5.6679999999999925e-05, 5.6750000000001244e-05, 5.6472000000001854e-05, 5.6721999999998635e-05, 5.6943999999999745e-05, 5.6735999999998205e-05, 5.644500000000219e-05, 5.6930000000000175e-05, 5.6236000000001174e-05, 5.6471999999998385e-05, 5.66809999999994e-05, 5.6555999999999274e-05, 5.7013999999997594e-05, 5.6736000000001674e-05, 5.6569999999998843e-05, 5.662500000000112e-05, 5.6236000000001174e-05, 5.6486000000001424e-05, 5.690300000000051e-05, 5.655600000000274e-05, 5.623700000000065e-05]</msg>
<status status="PASS" starttime="20201029 18:15:55.952" endtime="20201029 18:15:55.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.947" endtime="20201029 18:15:55.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.958" endtime="20201029 18:15:55.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.957" endtime="20201029 18:15:55.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.956" endtime="20201029 18:15:55.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.597" endtime="20201029 18:15:55.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.596" endtime="20201029 18:15:55.979"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.987" endtime="20201029 18:15:56.009"></status>
</kw>
<msg timestamp="20201029 18:15:56.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.986" endtime="20201029 18:15:56.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.010" endtime="20201029 18:15:56.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.013" endtime="20201029 18:15:56.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.983" endtime="20201029 18:15:56.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.981" endtime="20201029 18:15:56.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.022" endtime="20201029 18:15:56.309"></status>
</kw>
<msg timestamp="20201029 18:15:56.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.020" endtime="20201029 18:15:56.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.313" endtime="20201029 18:15:56.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.321" endtime="20201029 18:15:56.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.018" endtime="20201029 18:15:56.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.016" endtime="20201029 18:15:56.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.327" level="INFO">${RESULT} = [{'diff': 5.788900000000194e-05}, {'diff': 5.740300000000101e-05}, {'diff': 5.762499999999865e-05}, {'diff': 5.788899999999847e-05}, {'diff': 5.8070000000000344e-05}, {'diff': 5.762499999999865e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:56.324" endtime="20201029 18:15:56.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.332" level="INFO">${ACCURACY} = {'diff': [5.788900000000194e-05, 5.740300000000101e-05, 5.762499999999865e-05, 5.788899999999847e-05, 5.8070000000000344e-05, 5.762499999999865e-05, 5.8042000000001204e-05, 5.7443999999996775e-05, 5.7...</msg>
<status status="PASS" starttime="20201029 18:15:56.328" endtime="20201029 18:15:56.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.336" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.335" endtime="20201029 18:15:56.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.338" level="INFO">VALUE: [5.788900000000194e-05, 5.740300000000101e-05, 5.762499999999865e-05, 5.788899999999847e-05, 5.8070000000000344e-05, 5.762499999999865e-05, 5.8042000000001204e-05, 5.7443999999996775e-05, 5.711200000000152e-05, 5.730499999999708e-05, 5.71809999999999e-05, 5.756900000000037e-05, 5.7500000000001994e-05, 5.7763999999998344e-05, 5.7985999999999455e-05, 5.731900000000012e-05, 5.805499999999783e-05, 5.7680000000000925e-05, 5.711100000000205e-05, 5.816700000000133e-05, 5.761100000000255e-05, 5.7999999999999025e-05, 5.81810000000009e-05, 5.761099999999908e-05, 5.7291999999996984e-05, 5.7735999999999205e-05, 5.8042000000001204e-05, 5.7763999999998344e-05, 5.7319999999999593e-05, 5.7138000000001715e-05, 5.7249999999998274e-05, 5.781900000000062e-05, 5.7499999999998525e-05, 5.7499999999998525e-05, 5.7680000000000925e-05, 5.7680000000000925e-05, 5.7500000000001994e-05, 5.816699999999786e-05, 5.7764000000001814e-05, 5.7500000000001994e-05, 5.7721999999999635e-05, 5.712500000000162e-05, 5.730500000000055e-05, 5.786099999999933e-05, 5.7306000000000024e-05, 5.809700000000001e-05, 5.818099999999743e-05, 5.7958000000000315e-05, 5.7750000000002244e-05, 5.78749999999989e-05]</msg>
<status status="PASS" starttime="20201029 18:15:56.337" endtime="20201029 18:15:56.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.332" endtime="20201029 18:15:56.341"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.344" endtime="20201029 18:15:56.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.343" endtime="20201029 18:15:56.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.341" endtime="20201029 18:15:56.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.980" endtime="20201029 18:15:56.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.979" endtime="20201029 18:15:56.365"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.373" endtime="20201029 18:15:56.393"></status>
</kw>
<msg timestamp="20201029 18:15:56.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.372" endtime="20201029 18:15:56.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.394" endtime="20201029 18:15:56.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.397" endtime="20201029 18:15:56.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.369" endtime="20201029 18:15:56.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.367" endtime="20201029 18:15:56.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.406" endtime="20201029 18:15:56.691"></status>
</kw>
<msg timestamp="20201029 18:15:56.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019701097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.404" endtime="20201029 18:15:56.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019701097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.696" endtime="20201029 18:15:56.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.704" endtime="20201029 18:15:56.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.402" endtime="20201029 18:15:56.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.400" endtime="20201029 18:15:56.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.710" level="INFO">${RESULT} = [{'diff': 5.833300000000069e-05}, {'diff': 5.884700000000076e-05}, {'diff': 5.8929999999998706e-05}, {'diff': 5.908299999999797e-05}, {'diff': 5.8985999999996985e-05}, {'diff': 5.9194000000001995e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:56.707" endtime="20201029 18:15:56.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.715" level="INFO">${ACCURACY} = {'diff': [5.833300000000069e-05, 5.884700000000076e-05, 5.8929999999998706e-05, 5.908299999999797e-05, 5.8985999999996985e-05, 5.9194000000001995e-05, 5.911100000000058e-05, 5.8264000000002314e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:15:56.711" endtime="20201029 18:15:56.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.720" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.719" endtime="20201029 18:15:56.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.722" level="INFO">VALUE: [5.833300000000069e-05, 5.884700000000076e-05, 5.8929999999998706e-05, 5.908299999999797e-05, 5.8985999999996985e-05, 5.9194000000001995e-05, 5.911100000000058e-05, 5.8264000000002314e-05, 5.8556000000001274e-05, 5.8485999999999955e-05, 5.9013999999999595e-05, 5.866700000000183e-05, 5.844500000000072e-05, 5.866700000000183e-05, 5.9235999999997235e-05, 5.847299999999986e-05, 5.840299999999854e-05, 5.8805999999998054e-05, 5.866699999999836e-05, 5.8514000000002564e-05, 5.856900000000137e-05, 5.854099999999876e-05, 5.8929999999998706e-05, 5.8763999999999345e-05, 5.831900000000112e-05, 5.8652000000002785e-05, 5.9027999999999164e-05, 5.8222000000000135e-05, 5.888899999999947e-05, 5.868099999999793e-05, 5.8972000000000885e-05, 5.9014000000003064e-05, 5.911100000000058e-05, 5.8471999999996915e-05, 5.8749999999999775e-05, 5.865300000000226e-05, 5.833300000000069e-05, 5.9098000000000483e-05, 5.8792000000001954e-05, 5.898699999999993e-05, 5.9179999999998956e-05, 5.898699999999993e-05, 5.906900000000187e-05, 5.836099999999983e-05, 5.9000000000000025e-05, 5.8499999999999525e-05, 5.877700000000291e-05, 5.880499999999858e-05, 5.8458000000000815e-05, 5.8679999999998456e-05]</msg>
<status status="PASS" starttime="20201029 18:15:56.721" endtime="20201029 18:15:56.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.716" endtime="20201029 18:15:56.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.727" endtime="20201029 18:15:56.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.726" endtime="20201029 18:15:56.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.724" endtime="20201029 18:15:56.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.366" endtime="20201029 18:15:56.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.365" endtime="20201029 18:15:56.748"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.756" endtime="20201029 18:15:56.775"></status>
</kw>
<msg timestamp="20201029 18:15:56.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.755" endtime="20201029 18:15:56.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.776" endtime="20201029 18:15:56.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.778" endtime="20201029 18:15:56.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.752" endtime="20201029 18:15:56.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.750" endtime="20201029 18:15:56.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.787" endtime="20201029 18:15:57.079"></status>
</kw>
<msg timestamp="20201029 18:15:57.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019509042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.786" endtime="20201029 18:15:57.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019509042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.083" endtime="20201029 18:15:57.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.091" endtime="20201029 18:15:57.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.783" endtime="20201029 18:15:57.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.782" endtime="20201029 18:15:57.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.098" level="INFO">${RESULT} = [{'diff': 5.990300000000004e-05}, {'diff': 5.9862000000000803e-05}, {'diff': 5.981900000000262e-05}, {'diff': 5.968099999999893e-05}, {'diff': 5.9764000000000345e-05}, {'diff': 5.9222000000001135e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:57.095" endtime="20201029 18:15:57.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.102" level="INFO">${ACCURACY} = {'diff': [5.990300000000004e-05, 5.9862000000000803e-05, 5.981900000000262e-05, 5.968099999999893e-05, 5.9764000000000345e-05, 5.9222000000001135e-05, 5.9679999999999456e-05, 5.905499999999883e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:15:57.099" endtime="20201029 18:15:57.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.106" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.105" endtime="20201029 18:15:57.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.109" level="INFO">VALUE: [5.990300000000004e-05, 5.9862000000000803e-05, 5.981900000000262e-05, 5.968099999999893e-05, 5.9764000000000345e-05, 5.9222000000001135e-05, 5.9679999999999456e-05, 5.905499999999883e-05, 5.9986000000001455e-05, 5.9929999999999706e-05, 5.9249999999996805e-05, 5.948700000000043e-05, 5.962500000000065e-05, 5.9555999999998804e-05, 6.0055999999999304e-05, 6.016699999999986e-05, 5.9263999999999845e-05, 6.0070000000002344e-05, 5.9985999999997985e-05, 5.9305999999998554e-05, 6.012499999999768e-05, 5.9570000000001844e-05, 5.966699999999936e-05, 5.927699999999994e-05, 5.9472000000001385e-05, 5.9415999999999636e-05, 5.930499999999908e-05, 5.933299999999822e-05, 5.9514000000000095e-05, 5.986099999999786e-05, 5.9736000000001205e-05, 5.9957999999998846e-05, 6.009699999999854e-05, 5.98750000000009e-05, 5.9721999999998165e-05, 5.9263999999999845e-05, 5.9694000000002495e-05, 5.9485999999997485e-05, 5.969500000000197e-05, 5.9777999999999915e-05, 5.961100000000108e-05, 5.9055999999998304e-05, 6.0055999999999304e-05, 5.991699999999961e-05, 5.9444000000002245e-05, 5.9750000000000775e-05, 5.922300000000061e-05, 5.988900000000047e-05, 6.0166000000000386e-05, 5.9416000000003105e-05]</msg>
<status status="PASS" starttime="20201029 18:15:57.108" endtime="20201029 18:15:57.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.103" endtime="20201029 18:15:57.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.114" endtime="20201029 18:15:57.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.112" endtime="20201029 18:15:57.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.111" endtime="20201029 18:15:57.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.749" endtime="20201029 18:15:57.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.748" endtime="20201029 18:15:57.134"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.143" endtime="20201029 18:15:57.162"></status>
</kw>
<msg timestamp="20201029 18:15:57.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.141" endtime="20201029 18:15:57.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.164" endtime="20201029 18:15:57.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.166" endtime="20201029 18:15:57.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.139" endtime="20201029 18:15:57.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.137" endtime="20201029 18:15:57.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.175" endtime="20201029 18:15:57.461"></status>
</kw>
<msg timestamp="20201029 18:15:57.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020385792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020446569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.174" endtime="20201029 18:15:57.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020385792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020446569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.465" endtime="20201029 18:15:57.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.473" endtime="20201029 18:15:57.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.171" endtime="20201029 18:15:57.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.170" endtime="20201029 18:15:57.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.480" level="INFO">${RESULT} = [{'diff': 6.077700000000144e-05}, {'diff': 6.0485999999998485e-05}, {'diff': 6.0750000000001775e-05}, {'diff': 6.06949999999995e-05}, {'diff': 6.044499999999925e-05}, {'diff': 6.0777999999997445e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:57.476" endtime="20201029 18:15:57.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.484" level="INFO">${ACCURACY} = {'diff': [6.077700000000144e-05, 6.0485999999998485e-05, 6.0750000000001775e-05, 6.06949999999995e-05, 6.044499999999925e-05, 6.0777999999997445e-05, 6.0278000000000415e-05, 6.088900000000147e-05, 6.0...</msg>
<status status="PASS" starttime="20201029 18:15:57.481" endtime="20201029 18:15:57.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.488" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.487" endtime="20201029 18:15:57.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.490" level="INFO">VALUE: [6.077700000000144e-05, 6.0485999999998485e-05, 6.0750000000001775e-05, 6.06949999999995e-05, 6.044499999999925e-05, 6.0777999999997445e-05, 6.0278000000000415e-05, 6.088900000000147e-05, 6.061099999999861e-05, 6.0486000000001955e-05, 6.0680000000000456e-05, 6.0471999999998916e-05, 6.030500000000008e-05, 6.062500000000165e-05, 6.093100000000018e-05, 6.0792000000000485e-05, 6.0819999999999624e-05, 6.094499999999975e-05, 6.10560000000003e-05, 6.037499999999793e-05, 6.0305999999999554e-05, 6.0334000000002164e-05, 6.0792000000000485e-05, 6.0500000000001525e-05, 6.034699999999879e-05, 6.0500000000001525e-05, 6.112500000000215e-05, 6.093100000000018e-05, 6.0819999999999624e-05, 6.034700000000226e-05, 6.0901999999998097e-05, 6.111099999999911e-05, 6.115199999999835e-05, 6.118000000000096e-05, 6.036100000000183e-05, 6.0472000000002385e-05, 6.0443999999999776e-05, 6.120899999999957e-05, 6.0735999999998735e-05, 6.10560000000003e-05, 6.0736000000002205e-05, 6.0319999999999124e-05, 6.0416000000000636e-05, 6.0555999999999804e-05, 6.086100000000233e-05, 6.045900000000229e-05, 6.0985999999998985e-05, 6.081900000000015e-05, 6.0278000000000415e-05, 6.091700000000061e-05]</msg>
<status status="PASS" starttime="20201029 18:15:57.489" endtime="20201029 18:15:57.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.485" endtime="20201029 18:15:57.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.496" endtime="20201029 18:15:57.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.495" endtime="20201029 18:15:57.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.494" endtime="20201029 18:15:57.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.135" endtime="20201029 18:15:57.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.135" endtime="20201029 18:15:57.517"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.525" endtime="20201029 18:15:57.544"></status>
</kw>
<msg timestamp="20201029 18:15:57.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.524" endtime="20201029 18:15:57.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.545" endtime="20201029 18:15:57.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.548" endtime="20201029 18:15:57.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.521" endtime="20201029 18:15:57.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.519" endtime="20201029 18:15:57.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.557" endtime="20201029 18:15:57.843"></status>
</kw>
<msg timestamp="20201029 18:15:57.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.555" endtime="20201029 18:15:57.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.848" endtime="20201029 18:15:57.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.856" endtime="20201029 18:15:57.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.553" endtime="20201029 18:15:57.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.551" endtime="20201029 18:15:57.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.862" level="INFO">${RESULT} = [{'diff': 6.195800000000085e-05}, {'diff': 6.129100000000151e-05}, {'diff': 6.136099999999936e-05}, {'diff': 6.20690000000014e-05}, {'diff': 6.205599999999784e-05}, {'diff': 6.184700000000029e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:57.859" endtime="20201029 18:15:57.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.867" level="INFO">${ACCURACY} = {'diff': [6.195800000000085e-05, 6.129100000000151e-05, 6.136099999999936e-05, 6.20690000000014e-05, 6.205599999999784e-05, 6.184700000000029e-05, 6.168100000000093e-05, 6.216700000000186e-05, 6.16109...</msg>
<status status="PASS" starttime="20201029 18:15:57.863" endtime="20201029 18:15:57.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.872" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.871" endtime="20201029 18:15:57.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.874" level="INFO">VALUE: [6.195800000000085e-05, 6.129100000000151e-05, 6.136099999999936e-05, 6.20690000000014e-05, 6.205599999999784e-05, 6.184700000000029e-05, 6.168100000000093e-05, 6.216700000000186e-05, 6.161099999999961e-05, 6.177799999999845e-05, 6.157000000000037e-05, 6.190299999999857e-05, 6.130499999999761e-05, 6.154199999999777e-05, 6.111099999999911e-05, 6.111099999999911e-05, 6.16950000000005e-05, 6.191699999999814e-05, 6.179199999999802e-05, 6.140300000000154e-05, 6.155500000000133e-05, 6.134699999999979e-05, 6.134699999999979e-05, 6.186099999999986e-05, 6.173599999999974e-05, 6.158300000000047e-05, 6.222200000000067e-05, 6.14300000000012e-05, 6.176400000000234e-05, 6.168100000000093e-05, 6.17499999999993e-05, 6.199999999999956e-05, 6.13339999999997e-05, 6.215300000000229e-05, 6.166700000000136e-05, 6.111100000000258e-05, 6.166700000000136e-05, 6.1582999999997e-05, 6.136099999999936e-05, 6.172299999999964e-05, 6.17499999999993e-05, 6.212499999999968e-05, 6.205500000000183e-05, 6.166599999999842e-05, 6.191600000000214e-05, 6.136199999999883e-05, 6.179200000000148e-05, 6.216700000000186e-05, 6.1888999999999e-05, 6.155500000000133e-05]</msg>
<status status="PASS" starttime="20201029 18:15:57.873" endtime="20201029 18:15:57.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.868" endtime="20201029 18:15:57.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.879" endtime="20201029 18:15:57.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.877" endtime="20201029 18:15:57.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.876" endtime="20201029 18:15:57.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.518" endtime="20201029 18:15:57.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.517" endtime="20201029 18:15:57.900"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.908" endtime="20201029 18:15:57.927"></status>
</kw>
<msg timestamp="20201029 18:15:57.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.907" endtime="20201029 18:15:57.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.928" endtime="20201029 18:15:57.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.930" endtime="20201029 18:15:57.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.904" endtime="20201029 18:15:57.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.902" endtime="20201029 18:15:57.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.939" endtime="20201029 18:15:58.226"></status>
</kw>
<msg timestamp="20201029 18:15:58.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019490917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019553208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.938" endtime="20201029 18:15:58.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019490917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019553208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.230" endtime="20201029 18:15:58.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.238" endtime="20201029 18:15:58.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.935" endtime="20201029 18:15:58.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.934" endtime="20201029 18:15:58.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.245" level="INFO">${RESULT} = [{'diff': 6.229099999999904e-05}, {'diff': 6.234700000000079e-05}, {'diff': 6.242999999999874e-05}, {'diff': 6.305499999999936e-05}, {'diff': 6.27500000000003e-05}, {'diff': 6.292999999999924e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:58.242" endtime="20201029 18:15:58.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.249" level="INFO">${ACCURACY} = {'diff': [6.229099999999904e-05, 6.234700000000079e-05, 6.242999999999874e-05, 6.305499999999936e-05, 6.27500000000003e-05, 6.292999999999924e-05, 6.305599999999884e-05, 6.257000000000137e-05, 6.29859...</msg>
<status status="PASS" starttime="20201029 18:15:58.246" endtime="20201029 18:15:58.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.253" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.252" endtime="20201029 18:15:58.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.256" level="INFO">VALUE: [6.229099999999904e-05, 6.234700000000079e-05, 6.242999999999874e-05, 6.305499999999936e-05, 6.27500000000003e-05, 6.292999999999924e-05, 6.305599999999884e-05, 6.257000000000137e-05, 6.298599999999752e-05, 6.241699999999864e-05, 6.23889999999995e-05, 6.284700000000129e-05, 6.244500000000125e-05, 6.241700000000211e-05, 6.263899999999975e-05, 6.298600000000099e-05, 6.262500000000018e-05, 6.29439999999988e-05, 6.234699999999732e-05, 6.27500000000003e-05, 6.280499999999911e-05, 6.305599999999884e-05, 6.315299999999982e-05, 6.304099999999979e-05, 6.281900000000215e-05, 6.30279999999997e-05, 6.27500000000003e-05, 6.318099999999896e-05, 6.230599999999809e-05, 6.222200000000067e-05, 6.267999999999899e-05, 6.23479999999968e-05, 6.248600000000049e-05, 6.3195000000002e-05, 6.288800000000053e-05, 6.213799999999978e-05, 6.311200000000058e-05, 6.293099999999871e-05, 6.301400000000013e-05, 6.309700000000154e-05, 6.286100000000086e-05, 6.301400000000013e-05, 6.273600000000074e-05, 6.287500000000043e-05, 6.266599999999942e-05, 6.261100000000061e-05, 6.293099999999871e-05, 6.232000000000112e-05, 6.307000000000187e-05, 6.229200000000198e-05]</msg>
<status status="PASS" starttime="20201029 18:15:58.254" endtime="20201029 18:15:58.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.250" endtime="20201029 18:15:58.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.261" endtime="20201029 18:15:58.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.259" endtime="20201029 18:15:58.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.258" endtime="20201029 18:15:58.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.900" endtime="20201029 18:15:58.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.900" endtime="20201029 18:15:58.281"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.290" endtime="20201029 18:15:58.309"></status>
</kw>
<msg timestamp="20201029 18:15:58.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.288" endtime="20201029 18:15:58.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.311" endtime="20201029 18:15:58.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.313" endtime="20201029 18:15:58.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.286" endtime="20201029 18:15:58.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.284" endtime="20201029 18:15:58.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.322" endtime="20201029 18:15:58.609"></status>
</kw>
<msg timestamp="20201029 18:15:58.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020394222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:58.321" endtime="20201029 18:15:58.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020394222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:58.613" endtime="20201029 18:15:58.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.621" endtime="20201029 18:15:58.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.318" endtime="20201029 18:15:58.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.316" endtime="20201029 18:15:58.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.628" level="INFO">${RESULT} = [{'diff': 6.377800000000045e-05}, {'diff': 6.386099999999839e-05}, {'diff': 6.40699999999994e-05}, {'diff': 6.336099999999789e-05}, {'diff': 6.330599999999909e-05}, {'diff': 6.368099999999946e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:58.625" endtime="20201029 18:15:58.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.632" level="INFO">${ACCURACY} = {'diff': [6.377800000000045e-05, 6.386099999999839e-05, 6.40699999999994e-05, 6.336099999999789e-05, 6.330599999999909e-05, 6.368099999999946e-05, 6.320799999999863e-05, 6.349999999999759e-05, 6.34589...</msg>
<status status="PASS" starttime="20201029 18:15:58.629" endtime="20201029 18:15:58.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.636" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.635" endtime="20201029 18:15:58.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.639" level="INFO">VALUE: [6.377800000000045e-05, 6.386099999999839e-05, 6.40699999999994e-05, 6.336099999999789e-05, 6.330599999999909e-05, 6.368099999999946e-05, 6.320799999999863e-05, 6.349999999999759e-05, 6.345899999999835e-05, 6.394499999999928e-05, 6.341699999999964e-05, 6.418099999999996e-05, 6.383399999999873e-05, 6.326400000000038e-05, 6.366599999999695e-05, 6.415199999999788e-05, 6.342999999999974e-05, 6.39439999999998e-05, 6.416600000000092e-05, 6.354199999999977e-05, 6.337500000000093e-05, 6.381899999999968e-05, 6.341600000000017e-05, 6.37219999999987e-05, 6.32500000000008e-05, 6.415299999999735e-05, 6.337499999999746e-05, 6.393099999999971e-05, 6.384800000000176e-05, 6.323600000000124e-05, 6.398599999999852e-05, 6.363800000000128e-05, 6.411100000000211e-05, 6.373599999999827e-05, 6.412499999999821e-05, 6.356899999999943e-05, 6.329100000000004e-05, 6.344400000000278e-05, 6.386099999999839e-05, 6.355499999999986e-05, 6.405599999999984e-05, 6.387499999999796e-05, 6.336100000000136e-05, 6.373599999999827e-05, 6.359700000000204e-05, 6.32500000000008e-05, 6.393099999999971e-05, 6.36950000000025e-05, 6.326400000000038e-05, 6.368099999999946e-05]</msg>
<status status="PASS" starttime="20201029 18:15:58.637" endtime="20201029 18:15:58.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.633" endtime="20201029 18:15:58.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.645" endtime="20201029 18:15:58.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.643" endtime="20201029 18:15:58.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.642" endtime="20201029 18:15:58.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.282" endtime="20201029 18:15:58.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.282" endtime="20201029 18:15:58.665"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.674" endtime="20201029 18:15:58.693"></status>
</kw>
<msg timestamp="20201029 18:15:58.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.672" endtime="20201029 18:15:58.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.695" endtime="20201029 18:15:58.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.697" endtime="20201029 18:15:58.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.670" endtime="20201029 18:15:58.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.668" endtime="20201029 18:15:58.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.706" endtime="20201029 18:15:58.993"></status>
</kw>
<msg timestamp="20201029 18:15:58.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.705" endtime="20201029 18:15:58.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.998" endtime="20201029 18:15:59.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.006" endtime="20201029 18:15:59.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.702" endtime="20201029 18:15:59.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.700" endtime="20201029 18:15:59.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.013" level="INFO">${RESULT} = [{'diff': 6.508399999999998e-05}, {'diff': 6.486099999999939e-05}, {'diff': 6.449999999999859e-05}, {'diff': 6.474999999999884e-05}, {'diff': 6.505500000000136e-05}, {'diff': 6.463799999999881e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:59.010" endtime="20201029 18:15:59.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.018" level="INFO">${ACCURACY} = {'diff': [6.508399999999998e-05, 6.486099999999939e-05, 6.449999999999859e-05, 6.474999999999884e-05, 6.505500000000136e-05, 6.463799999999881e-05, 6.481900000000068e-05, 6.500000000000256e-05, 6.5110...</msg>
<status status="PASS" starttime="20201029 18:15:59.014" endtime="20201029 18:15:59.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.023" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.022" endtime="20201029 18:15:59.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.025" level="INFO">VALUE: [6.508399999999998e-05, 6.486099999999939e-05, 6.449999999999859e-05, 6.474999999999884e-05, 6.505500000000136e-05, 6.463799999999881e-05, 6.481900000000068e-05, 6.500000000000256e-05, 6.511099999999964e-05, 6.426400000000138e-05, 6.484700000000329e-05, 6.466600000000142e-05, 6.483300000000025e-05, 6.44440000000003e-05, 6.513900000000225e-05, 6.462500000000218e-05, 6.45699999999999e-05, 6.445799999999988e-05, 6.474999999999884e-05, 6.42219999999992e-05, 6.437499999999846e-05, 6.519500000000053e-05, 6.426299999999843e-05, 6.504200000000127e-05, 6.42219999999992e-05, 6.442999999999727e-05, 6.449999999999859e-05, 6.481899999999721e-05, 6.461100000000261e-05, 6.473599999999927e-05, 6.423599999999877e-05, 6.443000000000074e-05, 6.443000000000074e-05, 6.50419999999978e-05, 6.412500000000168e-05, 6.482000000000016e-05, 6.455600000000034e-05, 6.498599999999952e-05, 6.462499999999871e-05, 6.448599999999902e-05, 6.436099999999889e-05, 6.444499999999978e-05, 6.487500000000243e-05, 6.469400000000056e-05, 6.441600000000117e-05, 6.450000000000206e-05, 6.499999999999909e-05, 6.481900000000068e-05, 6.429100000000104e-05, 6.451400000000163e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.024" endtime="20201029 18:15:59.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.019" endtime="20201029 18:15:59.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.031" endtime="20201029 18:15:59.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.029" endtime="20201029 18:15:59.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.028" endtime="20201029 18:15:59.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.666" endtime="20201029 18:15:59.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.666" endtime="20201029 18:15:59.051"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.060" endtime="20201029 18:15:59.080"></status>
</kw>
<msg timestamp="20201029 18:15:59.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.059" endtime="20201029 18:15:59.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.082" endtime="20201029 18:15:59.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.084" endtime="20201029 18:15:59.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.056" endtime="20201029 18:15:59.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.054" endtime="20201029 18:15:59.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.093" endtime="20201029 18:15:59.381"></status>
</kw>
<msg timestamp="20201029 18:15:59.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020286111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.092" endtime="20201029 18:15:59.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020286111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.385" endtime="20201029 18:15:59.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.394" endtime="20201029 18:15:59.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.089" endtime="20201029 18:15:59.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.087" endtime="20201029 18:15:59.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.401" level="INFO">${RESULT} = [{'diff': 6.519399999999759e-05}, {'diff': 6.567999999999852e-05}, {'diff': 6.598600000000052e-05}, {'diff': 6.536099999999989e-05}, {'diff': 6.541700000000164e-05}, {'diff': 6.618100000000196e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:59.397" endtime="20201029 18:15:59.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.405" level="INFO">${ACCURACY} = {'diff': [6.519399999999759e-05, 6.567999999999852e-05, 6.598600000000052e-05, 6.536099999999989e-05, 6.541700000000164e-05, 6.618100000000196e-05, 6.566700000000189e-05, 6.577799999999898e-05, 6.5806...</msg>
<status status="PASS" starttime="20201029 18:15:59.402" endtime="20201029 18:15:59.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.410" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.408" endtime="20201029 18:15:59.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.412" level="INFO">VALUE: [6.519399999999759e-05, 6.567999999999852e-05, 6.598600000000052e-05, 6.536099999999989e-05, 6.541700000000164e-05, 6.618100000000196e-05, 6.566700000000189e-05, 6.577799999999898e-05, 6.580600000000159e-05, 6.568099999999799e-05, 6.562499999999971e-05, 6.591700000000214e-05, 6.574999999999984e-05, 6.590300000000257e-05, 6.569399999999809e-05, 6.605499999999889e-05, 6.524999999999934e-05, 6.545800000000088e-05, 6.567999999999852e-05, 6.591699999999867e-05, 6.548600000000002e-05, 6.556900000000143e-05, 6.593100000000171e-05, 6.549999999999959e-05, 6.548600000000002e-05, 6.509700000000007e-05, 6.577799999999898e-05, 6.598600000000052e-05, 6.527799999999848e-05, 6.541699999999817e-05, 6.52090000000001e-05, 6.573600000000027e-05, 6.60419999999988e-05, 6.618099999999849e-05, 6.533400000000023e-05, 6.513799999999931e-05, 6.574999999999984e-05, 6.59159999999992e-05, 6.588899999999953e-05, 6.568000000000199e-05, 6.600000000000009e-05, 6.54440000000013e-05, 6.616699999999892e-05, 6.55700000000009e-05, 6.580599999999812e-05, 6.552799999999873e-05, 6.581999999999769e-05, 6.600000000000009e-05, 6.54029999999986e-05, 6.523699999999924e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.411" endtime="20201029 18:15:59.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.406" endtime="20201029 18:15:59.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.417" endtime="20201029 18:15:59.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.416" endtime="20201029 18:15:59.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.414" endtime="20201029 18:15:59.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.052" endtime="20201029 18:15:59.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.052" endtime="20201029 18:15:59.438"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.447" endtime="20201029 18:15:59.469"></status>
</kw>
<msg timestamp="20201029 18:15:59.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.445" endtime="20201029 18:15:59.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.471" endtime="20201029 18:15:59.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.473" endtime="20201029 18:15:59.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.443" endtime="20201029 18:15:59.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.441" endtime="20201029 18:15:59.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.483" endtime="20201029 18:15:59.769"></status>
</kw>
<msg timestamp="20201029 18:15:59.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023323833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023390667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.481" endtime="20201029 18:15:59.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023323833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023390667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.773" endtime="20201029 18:15:59.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.782" endtime="20201029 18:15:59.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.478" endtime="20201029 18:15:59.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.477" endtime="20201029 18:15:59.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.788" level="INFO">${RESULT} = [{'diff': 6.683400000000173e-05}, {'diff': 6.675000000000084e-05}, {'diff': 6.662500000000071e-05}, {'diff': 6.684799999999783e-05}, {'diff': 6.684700000000182e-05}, {'diff': 6.631899999999871e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:59.785" endtime="20201029 18:15:59.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.793" level="INFO">${ACCURACY} = {'diff': [6.683400000000173e-05, 6.675000000000084e-05, 6.662500000000071e-05, 6.684799999999783e-05, 6.684700000000182e-05, 6.631899999999871e-05, 6.706899999999946e-05, 6.692999999999977e-05, 6.6290...</msg>
<status status="PASS" starttime="20201029 18:15:59.789" endtime="20201029 18:15:59.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.797" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.796" endtime="20201029 18:15:59.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.800" level="INFO">VALUE: [6.683400000000173e-05, 6.675000000000084e-05, 6.662500000000071e-05, 6.684799999999783e-05, 6.684700000000182e-05, 6.631899999999871e-05, 6.706899999999946e-05, 6.692999999999977e-05, 6.629099999999957e-05, 6.645799999999841e-05, 6.636099999999742e-05, 6.681900000000268e-05, 6.681899999999921e-05, 6.684699999999835e-05, 6.62639999999999e-05, 6.65419999999993e-05, 6.644500000000178e-05, 6.684699999999835e-05, 6.669500000000203e-05, 6.705599999999937e-05, 6.674999999999737e-05, 6.693100000000271e-05, 6.702699999999728e-05, 6.702800000000023e-05, 6.70969999999986e-05, 6.648599999999755e-05, 6.625000000000034e-05, 6.679100000000007e-05, 6.627799999999948e-05, 6.629099999999957e-05, 6.651400000000016e-05, 6.623600000000077e-05, 6.706899999999946e-05, 6.673600000000127e-05, 6.613899999999978e-05, 6.661099999999767e-05, 6.719499999999906e-05, 6.674999999999737e-05, 6.711099999999817e-05, 6.655599999999887e-05, 6.63480000000008e-05, 6.719399999999959e-05, 6.647300000000092e-05, 6.669399999999909e-05, 6.686099999999792e-05, 6.687500000000096e-05, 6.719399999999959e-05, 6.669399999999909e-05, 6.712499999999774e-05, 6.692999999999977e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.798" endtime="20201029 18:15:59.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.793" endtime="20201029 18:15:59.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.806" endtime="20201029 18:15:59.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.804" endtime="20201029 18:15:59.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.803" endtime="20201029 18:15:59.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.439" endtime="20201029 18:15:59.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.438" endtime="20201029 18:15:59.827"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.836" endtime="20201029 18:15:59.854"></status>
</kw>
<msg timestamp="20201029 18:15:59.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.834" endtime="20201029 18:15:59.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.856" endtime="20201029 18:15:59.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.858" endtime="20201029 18:15:59.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.831" endtime="20201029 18:15:59.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.829" endtime="20201029 18:15:59.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.868" endtime="20201029 18:16:00.154"></status>
</kw>
<msg timestamp="20201029 18:16:00.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020184347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02025225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:59.866" endtime="20201029 18:16:00.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020184347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02025225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:00.158" endtime="20201029 18:16:00.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.166" endtime="20201029 18:16:00.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.863" endtime="20201029 18:16:00.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.862" endtime="20201029 18:16:00.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.173" level="INFO">${RESULT} = [{'diff': 6.79030000000011e-05}, {'diff': 6.738899999999756e-05}, {'diff': 6.759799999999858e-05}, {'diff': 6.774999999999837e-05}, {'diff': 6.78619999999984e-05}, {'diff': 6.736200000000137e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:00.170" endtime="20201029 18:16:00.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:00.178" level="INFO">${ACCURACY} = {'diff': [6.79030000000011e-05, 6.738899999999756e-05, 6.759799999999858e-05, 6.774999999999837e-05, 6.78619999999984e-05, 6.736200000000137e-05, 6.737499999999799e-05, 6.787500000000196e-05, 6.749999...</msg>
<status status="PASS" starttime="20201029 18:16:00.174" endtime="20201029 18:16:00.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.183" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:16:00.182" endtime="20201029 18:16:00.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.186" level="INFO">VALUE: [6.79030000000011e-05, 6.738899999999756e-05, 6.759799999999858e-05, 6.774999999999837e-05, 6.78619999999984e-05, 6.736200000000137e-05, 6.737499999999799e-05, 6.787500000000196e-05, 6.749999999999812e-05, 6.730500000000014e-05, 6.770799999999966e-05, 6.779100000000107e-05, 6.761099999999867e-05, 6.729200000000005e-05, 6.793100000000024e-05, 6.72640000000009e-05, 6.75969999999991e-05, 6.800000000000209e-05, 6.761099999999867e-05, 6.768099999999999e-05, 6.784699999999935e-05, 6.794499999999981e-05, 6.75420000000003e-05, 6.795799999999991e-05, 6.798699999999852e-05, 6.744399999999984e-05, 6.737500000000146e-05, 6.811099999999917e-05, 6.743000000000027e-05, 6.737499999999799e-05, 6.79160000000012e-05, 6.737500000000146e-05, 6.741700000000017e-05, 6.794399999999687e-05, 6.779199999999708e-05, 6.800000000000209e-05, 6.779200000000055e-05, 6.734699999999885e-05, 6.762500000000171e-05, 6.787500000000196e-05, 6.818100000000049e-05, 6.818100000000049e-05, 6.745799999999941e-05, 6.794400000000034e-05, 6.766600000000095e-05, 6.787500000000196e-05, 6.811099999999917e-05, 6.749999999999812e-05, 6.784699999999935e-05, 6.776399999999794e-05]</msg>
<status status="PASS" starttime="20201029 18:16:00.184" endtime="20201029 18:16:00.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.179" endtime="20201029 18:16:00.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.191" endtime="20201029 18:16:00.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.189" endtime="20201029 18:16:00.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.188" endtime="20201029 18:16:00.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.828" endtime="20201029 18:16:00.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.827" endtime="20201029 18:16:00.211"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.220" endtime="20201029 18:16:00.239"></status>
</kw>
<msg timestamp="20201029 18:16:00.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.219" endtime="20201029 18:16:00.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.241" endtime="20201029 18:16:00.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.243" endtime="20201029 18:16:00.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.216" endtime="20201029 18:16:00.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.214" endtime="20201029 18:16:00.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.253" endtime="20201029 18:16:00.540"></status>
</kw>
<msg timestamp="20201029 18:16:00.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020100222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.251" endtime="20201029 18:16:00.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020100222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.544" endtime="20201029 18:16:00.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.552" endtime="20201029 18:16:00.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.249" endtime="20201029 18:16:00.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.247" endtime="20201029 18:16:00.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.559" level="INFO">${RESULT} = [{'diff': 6.880599999999765e-05}, {'diff': 6.911100000000017e-05}, {'diff': 6.868100000000099e-05}, {'diff': 6.829100000000157e-05}, {'diff': 6.90840000000005e-05}, {'diff': 6.918099999999802e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:00.556" endtime="20201029 18:16:00.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:00.563" level="INFO">${ACCURACY} = {'diff': [6.880599999999765e-05, 6.911100000000017e-05, 6.868100000000099e-05, 6.829100000000157e-05, 6.90840000000005e-05, 6.918099999999802e-05, 6.898699999999952e-05, 6.895800000000091e-05, 6.82499...</msg>
<status status="PASS" starttime="20201029 18:16:00.560" endtime="20201029 18:16:00.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.568" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:16:00.567" endtime="20201029 18:16:00.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.571" level="INFO">VALUE: [6.880599999999765e-05, 6.911100000000017e-05, 6.868100000000099e-05, 6.829100000000157e-05, 6.90840000000005e-05, 6.918099999999802e-05, 6.898699999999952e-05, 6.895800000000091e-05, 6.824999999999887e-05, 6.886099999999992e-05, 6.916599999999898e-05, 6.838899999999856e-05, 6.836100000000289e-05, 6.858299999999706e-05, 6.899999999999962e-05, 6.905500000000189e-05, 6.837499999999899e-05, 6.883299999999731e-05, 6.879199999999808e-05, 6.834699999999985e-05, 6.824999999999887e-05, 6.902799999999876e-05, 6.830600000000062e-05, 6.884700000000035e-05, 6.813900000000178e-05, 6.909800000000008e-05, 6.862499999999924e-05, 6.859799999999958e-05, 6.87359999999998e-05, 6.917999999999855e-05, 6.838900000000203e-05, 6.834699999999985e-05, 6.865299999999838e-05, 6.868000000000152e-05, 6.837499999999899e-05, 6.85420000000013e-05, 6.825000000000234e-05, 6.899999999999962e-05, 6.82359999999993e-05, 6.85970000000001e-05, 6.890299999999863e-05, 6.855600000000087e-05, 6.90420000000018e-05, 6.832000000000019e-05, 6.843100000000074e-05, 6.887499999999949e-05, 6.877800000000198e-05, 6.89299999999983e-05, 6.865200000000238e-05, 6.881900000000121e-05]</msg>
<status status="PASS" starttime="20201029 18:16:00.569" endtime="20201029 18:16:00.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.564" endtime="20201029 18:16:00.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.634" endtime="20201029 18:16:00.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.632" endtime="20201029 18:16:00.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.631" endtime="20201029 18:16:00.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.212" endtime="20201029 18:16:00.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.212" endtime="20201029 18:16:00.655"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.664" endtime="20201029 18:16:00.683"></status>
</kw>
<msg timestamp="20201029 18:16:00.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.662" endtime="20201029 18:16:00.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.685" endtime="20201029 18:16:00.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.688" endtime="20201029 18:16:00.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.659" endtime="20201029 18:16:00.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.657" endtime="20201029 18:16:00.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.697" endtime="20201029 18:16:00.984"></status>
</kw>
<msg timestamp="20201029 18:16:00.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021162375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021231986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.696" endtime="20201029 18:16:00.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021162375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021231986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.988" endtime="20201029 18:16:00.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.997" endtime="20201029 18:16:00.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.693" endtime="20201029 18:16:00.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.691" endtime="20201029 18:16:00.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.003" level="INFO">${RESULT} = [{'diff': 6.961100000000067e-05}, {'diff': 6.913899999999931e-05}, {'diff': 6.922200000000073e-05}, {'diff': 6.930600000000162e-05}, {'diff': 6.979199999999908e-05}, {'diff': 6.961100000000067e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:01.000" endtime="20201029 18:16:01.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.008" level="INFO">${ACCURACY} = {'diff': [6.961100000000067e-05, 6.913899999999931e-05, 6.922200000000073e-05, 6.930600000000162e-05, 6.979199999999908e-05, 6.961100000000067e-05, 6.912499999999974e-05, 6.912499999999974e-05, 6.9264...</msg>
<status status="PASS" starttime="20201029 18:16:01.005" endtime="20201029 18:16:01.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.012" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.011" endtime="20201029 18:16:01.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.015" level="INFO">VALUE: [6.961100000000067e-05, 6.913899999999931e-05, 6.922200000000073e-05, 6.930600000000162e-05, 6.979199999999908e-05, 6.961100000000067e-05, 6.912499999999974e-05, 6.912499999999974e-05, 6.92640000000029e-05, 6.98620000000004e-05, 6.924999999999987e-05, 7.019399999999912e-05, 6.916699999999845e-05, 6.972199999999776e-05, 6.97360000000008e-05, 6.94169999999987e-05, 6.941599999999923e-05, 6.931900000000171e-05, 6.948599999999708e-05, 6.987500000000049e-05, 7.018100000000249e-05, 6.980600000000212e-05, 6.990299999999963e-05, 7.00559999999989e-05, 6.99169999999992e-05, 6.948599999999708e-05, 6.919400000000159e-05, 6.924999999999987e-05, 6.994499999999834e-05, 7.015199999999694e-05, 6.941599999999923e-05, 7.017999999999955e-05, 7.000000000000062e-05, 6.956900000000196e-05, 6.970800000000166e-05, 6.995799999999844e-05, 6.961100000000067e-05, 6.950000000000012e-05, 6.956899999999849e-05, 6.951399999999969e-05, 6.930599999999815e-05, 6.994500000000181e-05, 6.977799999999951e-05, 6.963899999999981e-05, 6.961100000000067e-05, 6.93619999999999e-05, 6.930600000000162e-05, 6.980600000000212e-05, 6.969399999999862e-05, 6.906899999999799e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.014" endtime="20201029 18:16:01.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.009" endtime="20201029 18:16:01.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.021" endtime="20201029 18:16:01.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.019" endtime="20201029 18:16:01.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.018" endtime="20201029 18:16:01.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.656" endtime="20201029 18:16:01.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.655" endtime="20201029 18:16:01.042"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.051" endtime="20201029 18:16:01.070"></status>
</kw>
<msg timestamp="20201029 18:16:01.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.049" endtime="20201029 18:16:01.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.071" endtime="20201029 18:16:01.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.074" endtime="20201029 18:16:01.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.047" endtime="20201029 18:16:01.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.044" endtime="20201029 18:16:01.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.084" endtime="20201029 18:16:01.369"></status>
</kw>
<msg timestamp="20201029 18:16:01.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.082" endtime="20201029 18:16:01.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.373" endtime="20201029 18:16:01.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.382" endtime="20201029 18:16:01.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.079" endtime="20201029 18:16:01.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.078" endtime="20201029 18:16:01.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.389" level="INFO">${RESULT} = [{'diff': 7.07230000000017e-05}, {'diff': 7.02629999999975e-05}, {'diff': 7.058299999999906e-05}, {'diff': 7.050000000000112e-05}, {'diff': 7.036100000000142e-05}, {'diff': 7.088900000000106e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:01.386" endtime="20201029 18:16:01.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.394" level="INFO">${ACCURACY} = {'diff': [7.07230000000017e-05, 7.02629999999975e-05, 7.058299999999906e-05, 7.050000000000112e-05, 7.036100000000142e-05, 7.088900000000106e-05, 7.063899999999734e-05, 7.09300000000003e-05, 7.0750000...</msg>
<status status="PASS" starttime="20201029 18:16:01.390" endtime="20201029 18:16:01.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.399" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.398" endtime="20201029 18:16:01.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.401" level="INFO">VALUE: [7.07230000000017e-05, 7.02629999999975e-05, 7.058299999999906e-05, 7.050000000000112e-05, 7.036100000000142e-05, 7.088900000000106e-05, 7.063899999999734e-05, 7.09300000000003e-05, 7.075000000000137e-05, 7.072199999999876e-05, 7.033299999999881e-05, 7.08049999999967e-05, 7.079200000000008e-05, 7.036099999999795e-05, 7.040300000000013e-05, 7.094499999999934e-05, 7.10559999999999e-05, 7.048600000000155e-05, 7.038800000000109e-05, 7.036100000000142e-05, 7.098600000000205e-05, 7.118000000000055e-05, 7.04299999999998e-05, 7.036100000000142e-05, 7.113900000000131e-05, 7.047200000000198e-05, 7.051400000000069e-05, 7.111100000000217e-05, 7.076400000000094e-05, 7.059699999999863e-05, 7.05559999999994e-05, 7.034699999999838e-05, 7.04169999999997e-05, 7.084699999999888e-05, 7.081999999999922e-05, 7.047199999999851e-05, 7.025000000000087e-05, 7.093099999999977e-05, 7.037500000000099e-05, 7.043000000000327e-05, 7.026400000000044e-05, 7.059699999999863e-05, 7.026399999999697e-05, 7.022200000000173e-05, 7.070799999999919e-05, 7.080500000000017e-05, 7.083400000000226e-05, 7.099999999999815e-05, 7.081999999999922e-05, 7.111100000000217e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.400" endtime="20201029 18:16:01.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.395" endtime="20201029 18:16:01.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.406" endtime="20201029 18:16:01.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.405" endtime="20201029 18:16:01.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.404" endtime="20201029 18:16:01.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.043" endtime="20201029 18:16:01.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.042" endtime="20201029 18:16:01.427"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.436" endtime="20201029 18:16:01.455"></status>
</kw>
<msg timestamp="20201029 18:16:01.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.434" endtime="20201029 18:16:01.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.457" endtime="20201029 18:16:01.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.459" endtime="20201029 18:16:01.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.432" endtime="20201029 18:16:01.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.430" endtime="20201029 18:16:01.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.469" endtime="20201029 18:16:01.755"></status>
</kw>
<msg timestamp="20201029 18:16:01.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020253903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.467" endtime="20201029 18:16:01.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020253903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.759" endtime="20201029 18:16:01.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.767" endtime="20201029 18:16:01.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.464" endtime="20201029 18:16:01.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.463" endtime="20201029 18:16:01.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.774" level="INFO">${RESULT} = [{'diff': 7.129200000000058e-05}, {'diff': 7.186099999999945e-05}, {'diff': 7.133399999999929e-05}, {'diff': 7.170800000000019e-05}, {'diff': 7.147299999999898e-05}, {'diff': 7.199999999999915e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:01.771" endtime="20201029 18:16:01.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.778" level="INFO">${ACCURACY} = {'diff': [7.129200000000058e-05, 7.186099999999945e-05, 7.133399999999929e-05, 7.170800000000019e-05, 7.147299999999898e-05, 7.199999999999915e-05, 7.19300000000013e-05, 7.154099999999788e-05, 7.19580...</msg>
<status status="PASS" starttime="20201029 18:16:01.775" endtime="20201029 18:16:01.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.783" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.782" endtime="20201029 18:16:01.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.786" level="INFO">VALUE: [7.129200000000058e-05, 7.186099999999945e-05, 7.133399999999929e-05, 7.170800000000019e-05, 7.147299999999898e-05, 7.199999999999915e-05, 7.19300000000013e-05, 7.154099999999788e-05, 7.195800000000044e-05, 7.21109999999997e-05, 7.180500000000117e-05, 7.144400000000037e-05, 7.125000000000187e-05, 7.16109999999992e-05, 7.138900000000156e-05, 7.190299999999816e-05, 7.116700000000045e-05, 7.187499999999902e-05, 7.173599999999933e-05, 7.194500000000034e-05, 7.147199999999951e-05, 7.138899999999809e-05, 7.143100000000027e-05, 7.138800000000209e-05, 7.213900000000231e-05, 7.158300000000006e-05, 7.198599999999958e-05, 7.184699999999988e-05, 7.194400000000087e-05, 7.19300000000013e-05, 7.166700000000095e-05, 7.168000000000105e-05, 7.12499999999984e-05, 7.140299999999766e-05, 7.184699999999988e-05, 7.176399999999847e-05, 7.193100000000077e-05, 7.15970000000031e-05, 7.176400000000194e-05, 7.129199999999711e-05, 7.147299999999898e-05, 7.177800000000151e-05, 7.218000000000155e-05, 7.184699999999988e-05, 7.170800000000019e-05, 7.148600000000255e-05, 7.12910000000011e-05, 7.194400000000087e-05, 7.187500000000249e-05, 7.21109999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.784" endtime="20201029 18:16:01.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.779" endtime="20201029 18:16:01.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.791" endtime="20201029 18:16:01.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.789" endtime="20201029 18:16:01.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.788" endtime="20201029 18:16:01.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.428" endtime="20201029 18:16:01.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.427" endtime="20201029 18:16:01.812"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.820" endtime="20201029 18:16:01.842"></status>
</kw>
<msg timestamp="20201029 18:16:01.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.819" endtime="20201029 18:16:01.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.843" endtime="20201029 18:16:01.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.846" endtime="20201029 18:16:01.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.816" endtime="20201029 18:16:01.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.814" endtime="20201029 18:16:01.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.855" endtime="20201029 18:16:02.142"></status>
</kw>
<msg timestamp="20201029 18:16:02.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021091778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021164722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.854" endtime="20201029 18:16:02.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021091778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021164722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.147" endtime="20201029 18:16:02.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.156" endtime="20201029 18:16:02.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.851" endtime="20201029 18:16:02.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.849" endtime="20201029 18:16:02.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:02.162" level="INFO">${RESULT} = [{'diff': 7.294400000000187e-05}, {'diff': 7.315199999999994e-05}, {'diff': 7.298600000000058e-05}, {'diff': 7.318100000000202e-05}, {'diff': 7.28049999999987e-05}, {'diff': 7.286100000000045e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:02.159" endtime="20201029 18:16:02.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:02.166" level="INFO">${ACCURACY} = {'diff': [7.294400000000187e-05, 7.315199999999994e-05, 7.298600000000058e-05, 7.318100000000202e-05, 7.28049999999987e-05, 7.286100000000045e-05, 7.236099999999995e-05, 7.287500000000002e-05, 7.24999...</msg>
<status status="PASS" starttime="20201029 18:16:02.163" endtime="20201029 18:16:02.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.171" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:16:02.170" endtime="20201029 18:16:02.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.173" level="INFO">VALUE: [7.294400000000187e-05, 7.315199999999994e-05, 7.298600000000058e-05, 7.318100000000202e-05, 7.28049999999987e-05, 7.286100000000045e-05, 7.236099999999995e-05, 7.287500000000002e-05, 7.249999999999965e-05, 7.227800000000201e-05, 7.269500000000109e-05, 7.304200000000233e-05, 7.236099999999995e-05, 7.215300000000188e-05, 7.282000000000122e-05, 7.312500000000027e-05, 7.283400000000079e-05, 7.22499999999994e-05, 7.283300000000131e-05, 7.233300000000081e-05, 7.287500000000002e-05, 7.286100000000045e-05, 7.319400000000212e-05, 7.318099999999855e-05, 7.273600000000033e-05, 7.238899999999909e-05, 7.279200000000208e-05, 7.24309999999978e-05, 7.268099999999805e-05, 7.302799999999929e-05, 7.311099999999723e-05, 7.300000000000015e-05, 7.227799999999854e-05, 7.22629999999995e-05, 7.297299999999701e-05, 7.27499999999999e-05, 7.237499999999952e-05, 7.242999999999833e-05, 7.29300000000023e-05, 7.223599999999983e-05, 7.2069000000001e-05, 7.237499999999952e-05, 7.23049999999982e-05, 7.220800000000069e-05, 7.269500000000109e-05, 7.254199999999836e-05, 7.24309999999978e-05, 7.291699999999873e-05, 7.304199999999886e-05, 7.225000000000287e-05]</msg>
<status status="PASS" starttime="20201029 18:16:02.172" endtime="20201029 18:16:02.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.167" endtime="20201029 18:16:02.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:02.179" endtime="20201029 18:16:02.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.178" endtime="20201029 18:16:02.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.176" endtime="20201029 18:16:02.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.812" endtime="20201029 18:16:02.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.812" endtime="20201029 18:16:02.200"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.208" endtime="20201029 18:16:02.231"></status>
</kw>
<msg timestamp="20201029 18:16:02.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.207" endtime="20201029 18:16:02.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.234" endtime="20201029 18:16:02.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.239" endtime="20201029 18:16:02.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.204" endtime="20201029 18:16:02.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.202" endtime="20201029 18:16:02.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.258" endtime="20201029 18:16:02.551"></status>
</kw>
<msg timestamp="20201029 18:16:02.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019618333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.255" endtime="20201029 18:16:02.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019618333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.556" endtime="20201029 18:16:02.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.564" endtime="20201029 18:16:02.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.249" endtime="20201029 18:16:02.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.246" endtime="20201029 18:16:02.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:02.570" level="INFO">${RESULT} = [{'diff': 7.413900000000084e-05}, {'diff': 7.350000000000065e-05}, {'diff': 7.416600000000051e-05}, {'diff': 7.405499999999995e-05}, {'diff': 7.405499999999995e-05}, {'diff': 7.323600000000083e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:02.567" endtime="20201029 18:16:02.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:02.575" level="INFO">${ACCURACY} = {'diff': [7.413900000000084e-05, 7.350000000000065e-05, 7.416600000000051e-05, 7.405499999999995e-05, 7.405499999999995e-05, 7.323600000000083e-05, 7.318099999999855e-05, 7.347199999999804e-05, 7.3555...</msg>
<status status="PASS" starttime="20201029 18:16:02.571" endtime="20201029 18:16:02.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.580" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:16:02.579" endtime="20201029 18:16:02.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.582" level="INFO">VALUE: [7.413900000000084e-05, 7.350000000000065e-05, 7.416600000000051e-05, 7.405499999999995e-05, 7.405499999999995e-05, 7.323600000000083e-05, 7.318099999999855e-05, 7.347199999999804e-05, 7.355599999999893e-05, 7.329199999999911e-05, 7.340200000000019e-05, 7.390300000000016e-05, 7.322299999999726e-05, 7.379199999999961e-05, 7.356899999999902e-05, 7.398600000000158e-05, 7.337500000000052e-05, 7.405499999999995e-05, 7.391600000000026e-05, 7.36110000000012e-05, 7.413900000000084e-05, 7.342999999999933e-05, 7.356899999999902e-05, 7.418000000000008e-05, 7.377800000000004e-05, 7.319500000000159e-05, 7.416699999999998e-05, 7.343100000000227e-05, 7.398600000000158e-05, 7.381999999999875e-05, 7.3763000000001e-05, 7.369399999999915e-05, 7.405499999999995e-05, 7.379100000000013e-05, 7.374999999999743e-05, 7.379100000000013e-05, 7.39439999999994e-05, 7.379100000000013e-05, 7.39439999999994e-05, 7.388900000000059e-05, 7.383400000000179e-05, 7.422299999999826e-05, 7.369499999999862e-05, 7.337500000000052e-05, 7.338900000000009e-05, 7.329199999999911e-05, 7.41249999999978e-05, 7.380599999999918e-05, 7.354199999999936e-05, 7.340299999999966e-05]</msg>
<status status="PASS" starttime="20201029 18:16:02.581" endtime="20201029 18:16:02.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.576" endtime="20201029 18:16:02.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:02.587" endtime="20201029 18:16:02.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.586" endtime="20201029 18:16:02.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.585" endtime="20201029 18:16:02.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.201" endtime="20201029 18:16:02.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.200" endtime="20201029 18:16:02.608"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.616" endtime="20201029 18:16:02.636"></status>
</kw>
<msg timestamp="20201029 18:16:02.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.615" endtime="20201029 18:16:02.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.638" endtime="20201029 18:16:02.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.640" endtime="20201029 18:16:02.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.612" endtime="20201029 18:16:02.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.610" endtime="20201029 18:16:02.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.649" endtime="20201029 18:16:02.936"></status>
</kw>
<msg timestamp="20201029 18:16:02.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019604236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.647" endtime="20201029 18:16:02.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019604236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.940" endtime="20201029 18:16:02.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.948" endtime="20201029 18:16:02.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.645" endtime="20201029 18:16:02.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.643" endtime="20201029 18:16:02.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:02.955" level="INFO">${RESULT} = [{'diff': 7.466700000000048e-05}, {'diff': 7.463900000000134e-05}, {'diff': 7.430600000000315e-05}, {'diff': 7.463899999999787e-05}, {'diff': 7.50830000000001e-05}, {'diff': 7.448600000000208e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:02.951" endtime="20201029 18:16:02.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:02.959" level="INFO">${ACCURACY} = {'diff': [7.466700000000048e-05, 7.463900000000134e-05, 7.430600000000315e-05, 7.463899999999787e-05, 7.50830000000001e-05, 7.448600000000208e-05, 7.423599999999836e-05, 7.433300000000281e-05, 7.51109...</msg>
<status status="PASS" starttime="20201029 18:16:02.956" endtime="20201029 18:16:02.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.963" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:16:02.962" endtime="20201029 18:16:02.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.966" level="INFO">VALUE: [7.466700000000048e-05, 7.463900000000134e-05, 7.430600000000315e-05, 7.463899999999787e-05, 7.50830000000001e-05, 7.448600000000208e-05, 7.423599999999836e-05, 7.433300000000281e-05, 7.511099999999923e-05, 7.462500000000177e-05, 7.507e-05, 7.476400000000147e-05, 7.430599999999968e-05, 7.511099999999923e-05, 7.487499999999855e-05, 7.454200000000036e-05, 7.4763999999998e-05, 7.481999999999975e-05, 7.429200000000011e-05, 7.462500000000177e-05, 7.44439999999999e-05, 7.473599999999886e-05, 7.499999999999868e-05, 7.513900000000184e-05, 7.511099999999923e-05, 7.48050000000007e-05, 7.518100000000055e-05, 7.445900000000241e-05, 7.498599999999911e-05, 7.44309999999998e-05, 7.51249999999988e-05, 7.466700000000048e-05, 7.487499999999855e-05, 7.462500000000177e-05, 7.46379999999984e-05, 7.481999999999975e-05, 7.461099999999873e-05, 7.473599999999886e-05, 7.433300000000281e-05, 7.449999999999818e-05, 7.431899999999977e-05, 7.486099999999898e-05, 7.50830000000001e-05, 7.438900000000109e-05, 7.46249999999983e-05, 7.50830000000001e-05, 7.504200000000086e-05, 7.455599999999993e-05, 7.461099999999873e-05, 7.436099999999848e-05]</msg>
<status status="PASS" starttime="20201029 18:16:02.964" endtime="20201029 18:16:02.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.960" endtime="20201029 18:16:02.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:02.970" endtime="20201029 18:16:02.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.969" endtime="20201029 18:16:02.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.968" endtime="20201029 18:16:02.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.609" endtime="20201029 18:16:02.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.608" endtime="20201029 18:16:02.991"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.000" endtime="20201029 18:16:03.023"></status>
</kw>
<msg timestamp="20201029 18:16:03.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.998" endtime="20201029 18:16:03.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.024" endtime="20201029 18:16:03.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.027" endtime="20201029 18:16:03.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.996" endtime="20201029 18:16:03.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.993" endtime="20201029 18:16:03.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.036" endtime="20201029 18:16:03.321"></status>
</kw>
<msg timestamp="20201029 18:16:03.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022719792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.034" endtime="20201029 18:16:03.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022719792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.326" endtime="20201029 18:16:03.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.334" endtime="20201029 18:16:03.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.032" endtime="20201029 18:16:03.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.030" endtime="20201029 18:16:03.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.340" level="INFO">${RESULT} = [{'diff': 7.559799999999964e-05}, {'diff': 7.611100000000023e-05}, {'diff': 7.580600000000118e-05}, {'diff': 7.530600000000068e-05}, {'diff': 7.58189999999978e-05}, {'diff': 7.548599999999961e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:03.337" endtime="20201029 18:16:03.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.345" level="INFO">${ACCURACY} = {'diff': [7.559799999999964e-05, 7.611100000000023e-05, 7.580600000000118e-05, 7.530600000000068e-05, 7.58189999999978e-05, 7.548599999999961e-05, 7.566699999999801e-05, 7.511099999999923e-05, 7.54299...</msg>
<status status="PASS" starttime="20201029 18:16:03.341" endtime="20201029 18:16:03.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.349" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.348" endtime="20201029 18:16:03.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.351" level="INFO">VALUE: [7.559799999999964e-05, 7.611100000000023e-05, 7.580600000000118e-05, 7.530600000000068e-05, 7.58189999999978e-05, 7.548599999999961e-05, 7.566699999999801e-05, 7.511099999999923e-05, 7.542999999999786e-05, 7.53050000000012e-05, 7.530499999999773e-05, 7.548599999999961e-05, 7.537499999999905e-05, 7.591700000000173e-05, 7.56249999999993e-05, 7.555599999999746e-05, 7.524999999999893e-05, 7.587499999999955e-05, 7.615200000000294e-05, 7.526299999999903e-05, 7.534799999999939e-05, 7.599999999999968e-05, 7.605499999999848e-05, 7.527799999999807e-05, 7.552800000000179e-05, 7.587499999999955e-05, 7.552800000000179e-05, 7.567999999999811e-05, 7.58050000000017e-05, 7.568100000000105e-05, 7.593099999999783e-05, 7.616700000000198e-05, 7.548599999999961e-05, 7.594500000000087e-05, 7.577800000000204e-05, 7.586099999999998e-05, 7.55700000000005e-05, 7.593000000000183e-05, 7.58189999999978e-05, 7.561099999999973e-05, 7.530499999999773e-05, 7.613899999999937e-05, 7.55830000000006e-05, 7.559700000000016e-05, 7.606900000000152e-05, 7.55700000000005e-05, 7.5763999999999e-05, 7.59310000000013e-05, 7.609700000000066e-05, 7.53890000000021e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.350" endtime="20201029 18:16:03.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.345" endtime="20201029 18:16:03.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.357" endtime="20201029 18:16:03.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.356" endtime="20201029 18:16:03.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.354" endtime="20201029 18:16:03.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.992" endtime="20201029 18:16:03.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.991" endtime="20201029 18:16:03.378"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.386" endtime="20201029 18:16:03.405"></status>
</kw>
<msg timestamp="20201029 18:16:03.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.385" endtime="20201029 18:16:03.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.407" endtime="20201029 18:16:03.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.409" endtime="20201029 18:16:03.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.382" endtime="20201029 18:16:03.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.380" endtime="20201029 18:16:03.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.418" endtime="20201029 18:16:03.703"></status>
</kw>
<msg timestamp="20201029 18:16:03.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019802903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.417" endtime="20201029 18:16:03.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019802903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.708" endtime="20201029 18:16:03.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.716" endtime="20201029 18:16:03.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.414" endtime="20201029 18:16:03.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.412" endtime="20201029 18:16:03.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.722" level="INFO">${RESULT} = [{'diff': 7.633400000000082e-05}, {'diff': 7.622200000000079e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.644500000000137e-05}, {'diff': 7.717999999999961e-05}, {'diff': 7.69440000000024e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:03.719" endtime="20201029 18:16:03.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.727" level="INFO">${ACCURACY} = {'diff': [7.633400000000082e-05, 7.622200000000079e-05, 7.675000000000043e-05, 7.644500000000137e-05, 7.717999999999961e-05, 7.69440000000024e-05, 7.694399999999893e-05, 7.693000000000283e-05, 7.65549...</msg>
<status status="PASS" starttime="20201029 18:16:03.723" endtime="20201029 18:16:03.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.732" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.731" endtime="20201029 18:16:03.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.734" level="INFO">VALUE: [7.633400000000082e-05, 7.622200000000079e-05, 7.675000000000043e-05, 7.644500000000137e-05, 7.717999999999961e-05, 7.69440000000024e-05, 7.694399999999893e-05, 7.693000000000283e-05, 7.655499999999898e-05, 7.659700000000116e-05, 7.650000000000018e-05, 7.637500000000005e-05, 7.651399999999975e-05, 7.64440000000019e-05, 7.647200000000104e-05, 7.681999999999828e-05, 7.645900000000094e-05, 7.686100000000098e-05, 7.630599999999821e-05, 7.722199999999832e-05, 7.716699999999951e-05, 7.636199999999996e-05, 7.691699999999926e-05, 7.627799999999907e-05, 7.715200000000047e-05, 7.702699999999688e-05, 7.717999999999961e-05, 7.623600000000036e-05, 7.71250000000008e-05, 7.713900000000037e-05, 7.684700000000141e-05, 7.665299999999944e-05, 7.62639999999995e-05, 7.641699999999876e-05, 7.637500000000005e-05, 7.624999999999993e-05, 7.686100000000098e-05, 7.718099999999908e-05, 7.638800000000015e-05, 7.637500000000005e-05, 7.698600000000111e-05, 7.656900000000202e-05, 7.661100000000073e-05, 7.64440000000019e-05, 7.641599999999929e-05, 7.679200000000261e-05, 7.656899999999855e-05, 7.656899999999855e-05, 7.609700000000066e-05, 7.670900000000119e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.733" endtime="20201029 18:16:03.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.728" endtime="20201029 18:16:03.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.739" endtime="20201029 18:16:03.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.738" endtime="20201029 18:16:03.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.737" endtime="20201029 18:16:03.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.379" endtime="20201029 18:16:03.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.378" endtime="20201029 18:16:03.760"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.768" endtime="20201029 18:16:03.788"></status>
</kw>
<msg timestamp="20201029 18:16:03.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.767" endtime="20201029 18:16:03.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.789" endtime="20201029 18:16:03.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.792" endtime="20201029 18:16:03.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.764" endtime="20201029 18:16:03.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.762" endtime="20201029 18:16:03.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.801" endtime="20201029 18:16:04.088"></status>
</kw>
<msg timestamp="20201029 18:16:04.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019516111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01959425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:03.799" endtime="20201029 18:16:04.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019516111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01959425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:04.092" endtime="20201029 18:16:04.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.100" endtime="20201029 18:16:04.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.797" endtime="20201029 18:16:04.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.795" endtime="20201029 18:16:04.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.107" level="INFO">${RESULT} = [{'diff': 7.813900000000137e-05}, {'diff': 7.802800000000082e-05}, {'diff': 7.79449999999994e-05}, {'diff': 7.797199999999907e-05}, {'diff': 7.749999999999771e-05}, {'diff': 7.769499999999915e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:04.103" endtime="20201029 18:16:04.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.111" level="INFO">${ACCURACY} = {'diff': [7.813900000000137e-05, 7.802800000000082e-05, 7.79449999999994e-05, 7.797199999999907e-05, 7.749999999999771e-05, 7.769499999999915e-05, 7.706999999999853e-05, 7.781999999999928e-05, 7.75689...</msg>
<status status="PASS" starttime="20201029 18:16:04.107" endtime="20201029 18:16:04.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.115" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.114" endtime="20201029 18:16:04.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.118" level="INFO">VALUE: [7.813900000000137e-05, 7.802800000000082e-05, 7.79449999999994e-05, 7.797199999999907e-05, 7.749999999999771e-05, 7.769499999999915e-05, 7.706999999999853e-05, 7.781999999999928e-05, 7.756899999999955e-05, 7.741699999999976e-05, 7.779100000000067e-05, 7.78189999999998e-05, 7.805500000000049e-05, 7.775000000000143e-05, 7.804200000000039e-05, 7.736100000000148e-05, 7.804200000000039e-05, 7.766700000000001e-05, 7.723600000000136e-05, 7.755599999999946e-05, 7.755599999999946e-05, 7.761099999999826e-05, 7.711100000000123e-05, 7.788900000000112e-05, 7.747300000000151e-05, 7.711099999999776e-05, 7.711099999999776e-05, 7.709700000000166e-05, 7.742999999999986e-05, 7.811099999999876e-05, 7.794399999999993e-05, 7.750000000000118e-05, 7.720799999999875e-05, 7.750000000000118e-05, 7.744500000000237e-05, 7.775000000000143e-05, 7.773600000000186e-05, 7.74030000000002e-05, 7.800000000000168e-05, 7.783299999999937e-05, 7.818100000000008e-05, 7.80129999999983e-05, 7.77770000000011e-05, 7.722200000000179e-05, 7.711100000000123e-05, 7.711100000000123e-05, 7.725000000000093e-05, 7.804200000000039e-05, 7.736100000000148e-05, 7.73189999999993e-05]</msg>
<status status="PASS" starttime="20201029 18:16:04.116" endtime="20201029 18:16:04.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.111" endtime="20201029 18:16:04.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.122" endtime="20201029 18:16:04.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.121" endtime="20201029 18:16:04.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.120" endtime="20201029 18:16:04.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.761" endtime="20201029 18:16:04.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.760" endtime="20201029 18:16:04.143"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.151" endtime="20201029 18:16:04.172"></status>
</kw>
<msg timestamp="20201029 18:16:04.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.150" endtime="20201029 18:16:04.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.174" endtime="20201029 18:16:04.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.176" endtime="20201029 18:16:04.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.147" endtime="20201029 18:16:04.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.145" endtime="20201029 18:16:04.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.187" endtime="20201029 18:16:04.472"></status>
</kw>
<msg timestamp="20201029 18:16:04.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020361806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.185" endtime="20201029 18:16:04.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020361806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.476" endtime="20201029 18:16:04.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.484" endtime="20201029 18:16:04.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.182" endtime="20201029 18:16:04.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.180" endtime="20201029 18:16:04.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.491" level="INFO">${RESULT} = [{'diff': 7.893000000000136e-05}, {'diff': 7.911099999999976e-05}, {'diff': 7.843099999999686e-05}, {'diff': 7.845899999999947e-05}, {'diff': 7.882000000000028e-05}, {'diff': 7.827800000000107e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:04.488" endtime="20201029 18:16:04.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.495" level="INFO">${ACCURACY} = {'diff': [7.893000000000136e-05, 7.911099999999976e-05, 7.843099999999686e-05, 7.845899999999947e-05, 7.882000000000028e-05, 7.827800000000107e-05, 7.884699999999994e-05, 7.865300000000144e-05, 7.8458...</msg>
<status status="PASS" starttime="20201029 18:16:04.492" endtime="20201029 18:16:04.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.499" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.498" endtime="20201029 18:16:04.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.502" level="INFO">VALUE: [7.893000000000136e-05, 7.911099999999976e-05, 7.843099999999686e-05, 7.845899999999947e-05, 7.882000000000028e-05, 7.827800000000107e-05, 7.884699999999994e-05, 7.865300000000144e-05, 7.845899999999947e-05, 7.891700000000126e-05, 7.911099999999976e-05, 7.900000000000268e-05, 7.862499999999883e-05, 7.902699999999888e-05, 7.919400000000118e-05, 7.90970000000002e-05, 7.887499999999908e-05, 7.906900000000106e-05, 7.880600000000071e-05, 7.898599999999964e-05, 7.887499999999908e-05, 7.86389999999984e-05, 7.84449999999999e-05, 7.912499999999933e-05, 7.880600000000071e-05, 7.85969999999997e-05, 7.906900000000106e-05, 7.825000000000193e-05, 7.855499999999752e-05, 7.876399999999853e-05, 7.904199999999792e-05, 7.87909999999982e-05, 7.847199999999957e-05, 7.868000000000111e-05, 7.847199999999957e-05, 7.844400000000043e-05, 7.857000000000003e-05, 7.898599999999964e-05, 7.882000000000028e-05, 7.843100000000033e-05, 7.904200000000139e-05, 7.900000000000268e-05, 7.861200000000221e-05, 7.837499999999858e-05, 7.893000000000136e-05, 7.836099999999901e-05, 7.888900000000212e-05, 7.847200000000304e-05, 7.906900000000106e-05, 7.865299999999797e-05]</msg>
<status status="PASS" starttime="20201029 18:16:04.500" endtime="20201029 18:16:04.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.496" endtime="20201029 18:16:04.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.508" endtime="20201029 18:16:04.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.506" endtime="20201029 18:16:04.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.505" endtime="20201029 18:16:04.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.144" endtime="20201029 18:16:04.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.143" endtime="20201029 18:16:04.528"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.537" endtime="20201029 18:16:04.557"></status>
</kw>
<msg timestamp="20201029 18:16:04.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.535" endtime="20201029 18:16:04.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.559" endtime="20201029 18:16:04.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.561" endtime="20201029 18:16:04.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.533" endtime="20201029 18:16:04.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.531" endtime="20201029 18:16:04.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.570" endtime="20201029 18:16:04.856"></status>
</kw>
<msg timestamp="20201029 18:16:04.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.569" endtime="20201029 18:16:04.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.860" endtime="20201029 18:16:04.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.868" endtime="20201029 18:16:04.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.566" endtime="20201029 18:16:04.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.564" endtime="20201029 18:16:04.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.874" level="INFO">${RESULT} = [{'diff': 8.011200000000024e-05}, {'diff': 7.969399999999821e-05}, {'diff': 7.976399999999953e-05}, {'diff': 7.92909999999987e-05}, {'diff': 7.991599999999932e-05}, {'diff': 7.937499999999958e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:04.871" endtime="20201029 18:16:04.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.879" level="INFO">${ACCURACY} = {'diff': [8.011200000000024e-05, 7.969399999999821e-05, 7.976399999999953e-05, 7.92909999999987e-05, 7.991599999999932e-05, 7.937499999999958e-05, 7.938899999999915e-05, 7.96389999999994e-05, 7.958300...</msg>
<status status="PASS" starttime="20201029 18:16:04.875" endtime="20201029 18:16:04.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.884" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.883" endtime="20201029 18:16:04.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.887" level="INFO">VALUE: [8.011200000000024e-05, 7.969399999999821e-05, 7.976399999999953e-05, 7.92909999999987e-05, 7.991599999999932e-05, 7.937499999999958e-05, 7.938899999999915e-05, 7.96389999999994e-05, 7.958300000000113e-05, 8.011100000000076e-05, 7.926399999999903e-05, 8.011100000000076e-05, 8.011100000000076e-05, 7.95970000000007e-05, 8.000000000000021e-05, 7.943099999999786e-05, 7.976399999999953e-05, 8.011200000000024e-05, 7.991599999999932e-05, 7.97909999999992e-05, 7.936100000000001e-05, 7.988899999999965e-05, 7.941599999999882e-05, 8.005499999999902e-05, 8.001399999999978e-05, 7.988900000000312e-05, 7.938900000000262e-05, 7.938899999999915e-05, 7.980599999999824e-05, 7.979199999999867e-05, 8.000000000000021e-05, 7.961100000000026e-05, 7.99450000000014e-05, 7.993100000000183e-05, 7.911199999999924e-05, 7.974999999999996e-05, 7.934699999999698e-05, 8.005500000000249e-05, 7.942999999999839e-05, 7.927800000000207e-05, 7.998600000000064e-05, 7.9458000000001e-05, 7.943100000000133e-05, 7.987500000000008e-05, 7.980600000000171e-05, 7.974999999999996e-05, 8.006999999999806e-05, 7.986199999999999e-05, 7.968000000000211e-05, 7.94169999999983e-05]</msg>
<status status="PASS" starttime="20201029 18:16:04.885" endtime="20201029 18:16:04.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.880" endtime="20201029 18:16:04.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.891" endtime="20201029 18:16:04.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.890" endtime="20201029 18:16:04.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.889" endtime="20201029 18:16:04.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.529" endtime="20201029 18:16:04.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.528" endtime="20201029 18:16:04.912"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.921" endtime="20201029 18:16:04.940"></status>
</kw>
<msg timestamp="20201029 18:16:04.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.919" endtime="20201029 18:16:04.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.942" endtime="20201029 18:16:04.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.944" endtime="20201029 18:16:04.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.917" endtime="20201029 18:16:04.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.914" endtime="20201029 18:16:04.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.953" endtime="20201029 18:16:05.241"></status>
</kw>
<msg timestamp="20201029 18:16:05.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.952" endtime="20201029 18:16:05.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.245" endtime="20201029 18:16:05.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.253" endtime="20201029 18:16:05.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.949" endtime="20201029 18:16:05.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.947" endtime="20201029 18:16:05.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.260" level="INFO">${RESULT} = [{'diff': 8.073600000000139e-05}, {'diff': 8.082000000000228e-05}, {'diff': 8.073600000000139e-05}, {'diff': 8.025000000000046e-05}, {'diff': 8.057000000000203e-05}, {'diff': 8.061100000000126e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:05.256" endtime="20201029 18:16:05.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.264" level="INFO">${ACCURACY} = {'diff': [8.073600000000139e-05, 8.082000000000228e-05, 8.073600000000139e-05, 8.025000000000046e-05, 8.057000000000203e-05, 8.061100000000126e-05, 8.069499999999868e-05, 8.119499999999918e-05, 8.0889...</msg>
<status status="PASS" starttime="20201029 18:16:05.260" endtime="20201029 18:16:05.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.268" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.267" endtime="20201029 18:16:05.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.271" level="INFO">VALUE: [8.073600000000139e-05, 8.082000000000228e-05, 8.073600000000139e-05, 8.025000000000046e-05, 8.057000000000203e-05, 8.061100000000126e-05, 8.069499999999868e-05, 8.119499999999918e-05, 8.088900000000065e-05, 8.106899999999959e-05, 8.104100000000045e-05, 8.092999999999989e-05, 8.037500000000058e-05, 8.104100000000045e-05, 8.055499999999952e-05, 8.075000000000096e-05, 8.100000000000121e-05, 8.105599999999949e-05, 8.119499999999918e-05, 8.049999999999724e-05, 8.037500000000058e-05, 8.070899999999825e-05, 8.084699999999848e-05, 8.087499999999762e-05, 8.075000000000096e-05, 8.104199999999992e-05, 8.069399999999921e-05, 8.104100000000045e-05, 8.065299999999997e-05, 8.061100000000126e-05, 8.092999999999989e-05, 8.031899999999884e-05, 8.079199999999967e-05, 8.120899999999875e-05, 8.054199999999942e-05, 8.057000000000203e-05, 8.036100000000101e-05, 8.113899999999744e-05, 8.11109999999983e-05, 8.09169999999998e-05, 8.069399999999921e-05, 8.06390000000004e-05, 8.104100000000045e-05, 8.069399999999921e-05, 8.105500000000002e-05, 8.098599999999817e-05, 8.036100000000101e-05, 8.012499999999687e-05, 8.080599999999924e-05, 8.100000000000121e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.269" endtime="20201029 18:16:05.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.265" endtime="20201029 18:16:05.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.275" endtime="20201029 18:16:05.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.274" endtime="20201029 18:16:05.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.273" endtime="20201029 18:16:05.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.913" endtime="20201029 18:16:05.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.912" endtime="20201029 18:16:05.296"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.305" endtime="20201029 18:16:05.325"></status>
</kw>
<msg timestamp="20201029 18:16:05.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.303" endtime="20201029 18:16:05.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.327" endtime="20201029 18:16:05.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.329" endtime="20201029 18:16:05.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.301" endtime="20201029 18:16:05.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.299" endtime="20201029 18:16:05.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.338" endtime="20201029 18:16:05.624"></status>
</kw>
<msg timestamp="20201029 18:16:05.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020445514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.337" endtime="20201029 18:16:05.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020445514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.628" endtime="20201029 18:16:05.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.636" endtime="20201029 18:16:05.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.334" endtime="20201029 18:16:05.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.332" endtime="20201029 18:16:05.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.643" level="INFO">${RESULT} = [{'diff': 8.162499999999837e-05}, {'diff': 8.105500000000002e-05}, {'diff': 8.141600000000082e-05}, {'diff': 8.11109999999983e-05}, {'diff': 8.205500000000102e-05}, {'diff': 8.190300000000122e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:05.640" endtime="20201029 18:16:05.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.647" level="INFO">${ACCURACY} = {'diff': [8.162499999999837e-05, 8.105500000000002e-05, 8.141600000000082e-05, 8.11109999999983e-05, 8.205500000000102e-05, 8.190300000000122e-05, 8.180500000000077e-05, 8.112499999999787e-05, 8.21810...</msg>
<status status="PASS" starttime="20201029 18:16:05.644" endtime="20201029 18:16:05.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.652" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.651" endtime="20201029 18:16:05.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.654" level="INFO">VALUE: [8.162499999999837e-05, 8.105500000000002e-05, 8.141600000000082e-05, 8.11109999999983e-05, 8.205500000000102e-05, 8.190300000000122e-05, 8.180500000000077e-05, 8.112499999999787e-05, 8.218100000000061e-05, 8.130599999999974e-05, 8.126400000000103e-05, 8.204200000000092e-05, 8.156999999999956e-05, 8.138900000000115e-05, 8.199999999999874e-05, 8.131899999999984e-05, 8.126400000000103e-05, 8.186100000000252e-05, 8.173600000000239e-05, 8.217999999999767e-05, 8.187499999999862e-05, 8.186099999999905e-05, 8.144399999999996e-05, 8.112499999999787e-05, 8.19589999999995e-05, 8.134700000000245e-05, 8.149999999999824e-05, 8.12780000000006e-05, 8.136100000000202e-05, 8.175000000000196e-05, 8.211200000000224e-05, 8.175000000000196e-05, 8.136099999999855e-05, 8.169400000000021e-05, 8.138899999999769e-05, 8.143000000000039e-05, 8.134700000000245e-05, 8.21109999999993e-05, 8.125000000000146e-05, 8.17780000000011e-05, 8.194499999999993e-05, 8.216700000000104e-05, 8.218100000000061e-05, 8.180600000000024e-05, 8.131999999999931e-05, 8.130500000000027e-05, 8.154200000000042e-05, 8.137499999999812e-05, 8.177799999999763e-05, 8.14719999999991e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.653" endtime="20201029 18:16:05.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.648" endtime="20201029 18:16:05.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.717" endtime="20201029 18:16:05.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.715" endtime="20201029 18:16:05.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.714" endtime="20201029 18:16:05.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.297" endtime="20201029 18:16:05.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.296" endtime="20201029 18:16:05.737"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.746" endtime="20201029 18:16:05.766"></status>
</kw>
<msg timestamp="20201029 18:16:05.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.744" endtime="20201029 18:16:05.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.767" endtime="20201029 18:16:05.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.770" endtime="20201029 18:16:05.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.742" endtime="20201029 18:16:05.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.740" endtime="20201029 18:16:05.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.779" endtime="20201029 18:16:06.094"></status>
</kw>
<msg timestamp="20201029 18:16:06.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019536986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019620181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.777" endtime="20201029 18:16:06.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019536986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019620181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.099" endtime="20201029 18:16:06.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.107" endtime="20201029 18:16:06.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.775" endtime="20201029 18:16:06.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.773" endtime="20201029 18:16:06.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.114" level="INFO">${RESULT} = [{'diff': 8.319500000000118e-05}, {'diff': 8.311099999999683e-05}, {'diff': 8.280600000000124e-05}, {'diff': 8.274999999999949e-05}, {'diff': 8.24720000000001e-05}, {'diff': 8.299999999999974e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:06.111" endtime="20201029 18:16:06.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.119" level="INFO">${ACCURACY} = {'diff': [8.319500000000118e-05, 8.311099999999683e-05, 8.280600000000124e-05, 8.274999999999949e-05, 8.24720000000001e-05, 8.299999999999974e-05, 8.240300000000172e-05, 8.255500000000152e-05, 8.24029...</msg>
<status status="PASS" starttime="20201029 18:16:06.115" endtime="20201029 18:16:06.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.124" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.123" endtime="20201029 18:16:06.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.126" level="INFO">VALUE: [8.319500000000118e-05, 8.311099999999683e-05, 8.280600000000124e-05, 8.274999999999949e-05, 8.24720000000001e-05, 8.299999999999974e-05, 8.240300000000172e-05, 8.255500000000152e-05, 8.240299999999826e-05, 8.273599999999992e-05, 8.29720000000006e-05, 8.316700000000204e-05, 8.276399999999906e-05, 8.266700000000154e-05, 8.21109999999993e-05, 8.28330000000009e-05, 8.230600000000074e-05, 8.256900000000109e-05, 8.281899999999787e-05, 8.237499999999912e-05, 8.312499999999987e-05, 8.272200000000035e-05, 8.312499999999987e-05, 8.319499999999772e-05, 8.2846999999997e-05, 8.213899999999844e-05, 8.252800000000185e-05, 8.262499999999937e-05, 8.273599999999992e-05, 8.243100000000086e-05, 8.229200000000117e-05, 8.259700000000023e-05, 8.213799999999896e-05, 8.248699999999914e-05, 8.274999999999949e-05, 8.305500000000202e-05, 8.24170000000013e-05, 8.313899999999944e-05, 8.26659999999986e-05, 8.273599999999992e-05, 8.245800000000053e-05, 8.236099999999955e-05, 8.293100000000136e-05, 8.288899999999919e-05, 8.227799999999813e-05, 8.280599999999777e-05, 8.319500000000118e-05, 8.236099999999955e-05, 8.22919999999977e-05, 8.31110000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.125" endtime="20201029 18:16:06.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.120" endtime="20201029 18:16:06.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.132" endtime="20201029 18:16:06.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.130" endtime="20201029 18:16:06.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.129" endtime="20201029 18:16:06.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.738" endtime="20201029 18:16:06.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.738" endtime="20201029 18:16:06.152"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.161" endtime="20201029 18:16:06.181"></status>
</kw>
<msg timestamp="20201029 18:16:06.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.160" endtime="20201029 18:16:06.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.182" endtime="20201029 18:16:06.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.185" endtime="20201029 18:16:06.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.157" endtime="20201029 18:16:06.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.155" endtime="20201029 18:16:06.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.194" endtime="20201029 18:16:06.482"></status>
</kw>
<msg timestamp="20201029 18:16:06.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020359903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.193" endtime="20201029 18:16:06.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020359903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.487" endtime="20201029 18:16:06.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.495" endtime="20201029 18:16:06.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.190" endtime="20201029 18:16:06.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.188" endtime="20201029 18:16:06.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.502" level="INFO">${RESULT} = [{'diff': 8.372199999999788e-05}, {'diff': 8.376400000000006e-05}, {'diff': 8.39309999999989e-05}, {'diff': 8.355600000000199e-05}, {'diff': 8.330599999999827e-05}, {'diff': 8.348600000000067e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:06.498" endtime="20201029 18:16:06.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.506" level="INFO">${ACCURACY} = {'diff': [8.372199999999788e-05, 8.376400000000006e-05, 8.39309999999989e-05, 8.355600000000199e-05, 8.330599999999827e-05, 8.348600000000067e-05, 8.408299999999869e-05, 8.412500000000087e-05, 8.36799...</msg>
<status status="PASS" starttime="20201029 18:16:06.503" endtime="20201029 18:16:06.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.511" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.510" endtime="20201029 18:16:06.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.513" level="INFO">VALUE: [8.372199999999788e-05, 8.376400000000006e-05, 8.39309999999989e-05, 8.355600000000199e-05, 8.330599999999827e-05, 8.348600000000067e-05, 8.408299999999869e-05, 8.412500000000087e-05, 8.367999999999917e-05, 8.417999999999967e-05, 8.391699999999933e-05, 8.356899999999862e-05, 8.394399999999899e-05, 8.387499999999715e-05, 8.398600000000117e-05, 8.332000000000131e-05, 8.330600000000174e-05, 8.350000000000024e-05, 8.350000000000024e-05, 8.326300000000009e-05, 8.388900000000019e-05, 8.404099999999998e-05, 8.336100000000055e-05, 8.331900000000184e-05, 8.358299999999819e-05, 8.41110000000013e-05, 8.394400000000246e-05, 8.330600000000174e-05, 8.330600000000174e-05, 8.338899999999969e-05, 8.363899999999994e-05, 8.366699999999908e-05, 8.36110000000008e-05, 8.387500000000062e-05, 8.327699999999966e-05, 8.34309999999984e-05, 8.338800000000021e-05, 8.334800000000045e-05, 8.341699999999883e-05, 8.322200000000085e-05, 8.387500000000062e-05, 8.340299999999926e-05, 8.359699999999776e-05, 8.398600000000117e-05, 8.355599999999852e-05, 8.377799999999963e-05, 8.326399999999956e-05, 8.344499999999797e-05, 8.362500000000037e-05, 8.326399999999956e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.512" endtime="20201029 18:16:06.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.507" endtime="20201029 18:16:06.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.518" endtime="20201029 18:16:06.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.517" endtime="20201029 18:16:06.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.516" endtime="20201029 18:16:06.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.153" endtime="20201029 18:16:06.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.153" endtime="20201029 18:16:06.539"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.548" endtime="20201029 18:16:06.571"></status>
</kw>
<msg timestamp="20201029 18:16:06.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.547" endtime="20201029 18:16:06.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.573" endtime="20201029 18:16:06.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.575" endtime="20201029 18:16:06.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.544" endtime="20201029 18:16:06.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.542" endtime="20201029 18:16:06.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.585" endtime="20201029 18:16:06.870"></status>
</kw>
<msg timestamp="20201029 18:16:06.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023386194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023470444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.583" endtime="20201029 18:16:06.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023386194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023470444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.875" endtime="20201029 18:16:06.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.883" endtime="20201029 18:16:06.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.581" endtime="20201029 18:16:06.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.579" endtime="20201029 18:16:06.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.890" level="INFO">${RESULT} = [{'diff': 8.425000000000099e-05}, {'diff': 8.426400000000056e-05}, {'diff': 8.427700000000066e-05}, {'diff': 8.493000000000042e-05}, {'diff': 8.483299999999944e-05}, {'diff': 8.455500000000005e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:06.887" endtime="20201029 18:16:06.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.894" level="INFO">${ACCURACY} = {'diff': [8.425000000000099e-05, 8.426400000000056e-05, 8.427700000000066e-05, 8.493000000000042e-05, 8.483299999999944e-05, 8.455500000000005e-05, 8.490300000000076e-05, 8.499999999999827e-05, 8.4250...</msg>
<status status="PASS" starttime="20201029 18:16:06.891" endtime="20201029 18:16:06.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.899" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.898" endtime="20201029 18:16:06.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.901" level="INFO">VALUE: [8.425000000000099e-05, 8.426400000000056e-05, 8.427700000000066e-05, 8.493000000000042e-05, 8.483299999999944e-05, 8.455500000000005e-05, 8.490300000000076e-05, 8.499999999999827e-05, 8.425000000000099e-05, 8.427800000000013e-05, 8.490300000000076e-05, 8.473600000000192e-05, 8.409799999999773e-05, 8.468099999999965e-05, 8.474999999999802e-05, 8.519400000000024e-05, 8.523599999999895e-05, 8.491599999999738e-05, 8.509699999999926e-05, 8.49859999999987e-05, 8.491700000000033e-05, 8.518000000000067e-05, 8.437500000000112e-05, 8.423600000000142e-05, 8.504200000000045e-05, 8.438900000000069e-05, 8.436100000000155e-05, 8.433399999999841e-05, 8.434799999999798e-05, 8.444499999999897e-05, 8.470799999999931e-05, 8.46110000000018e-05, 8.454100000000048e-05, 8.441600000000035e-05, 8.425000000000099e-05, 8.43469999999985e-05, 8.512500000000187e-05, 8.466700000000008e-05, 8.499999999999827e-05, 8.505600000000002e-05, 8.509799999999873e-05, 8.437500000000112e-05, 8.455599999999952e-05, 8.481999999999934e-05, 8.504200000000045e-05, 8.455599999999952e-05, 8.505500000000055e-05, 8.483299999999944e-05, 8.487499999999815e-05, 8.501399999999784e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.900" endtime="20201029 18:16:06.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.895" endtime="20201029 18:16:06.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.908" endtime="20201029 18:16:06.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.906" endtime="20201029 18:16:06.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.905" endtime="20201029 18:16:06.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.540" endtime="20201029 18:16:06.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.539" endtime="20201029 18:16:06.928"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.937" endtime="20201029 18:16:06.958"></status>
</kw>
<msg timestamp="20201029 18:16:06.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.936" endtime="20201029 18:16:06.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.959" endtime="20201029 18:16:06.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.962" endtime="20201029 18:16:06.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.933" endtime="20201029 18:16:06.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.931" endtime="20201029 18:16:06.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.971" endtime="20201029 18:16:07.257"></status>
</kw>
<msg timestamp="20201029 18:16:07.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020225542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.970" endtime="20201029 18:16:07.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020225542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.261" endtime="20201029 18:16:07.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.270" endtime="20201029 18:16:07.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.967" endtime="20201029 18:16:07.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.965" endtime="20201029 18:16:07.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.276" level="INFO">${RESULT} = [{'diff': 8.605599999999755e-05}, {'diff': 8.54310000000004e-05}, {'diff': 8.566700000000108e-05}, {'diff': 8.541700000000083e-05}, {'diff': 8.56119999999988e-05}, {'diff': 8.561099999999933e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:07.273" endtime="20201029 18:16:07.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.281" level="INFO">${ACCURACY} = {'diff': [8.605599999999755e-05, 8.54310000000004e-05, 8.566700000000108e-05, 8.541700000000083e-05, 8.56119999999988e-05, 8.561099999999933e-05, 8.599999999999927e-05, 8.545800000000006e-05, 8.580499...</msg>
<status status="PASS" starttime="20201029 18:16:07.277" endtime="20201029 18:16:07.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.286" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.285" endtime="20201029 18:16:07.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.288" level="INFO">VALUE: [8.605599999999755e-05, 8.54310000000004e-05, 8.566700000000108e-05, 8.541700000000083e-05, 8.56119999999988e-05, 8.561099999999933e-05, 8.599999999999927e-05, 8.545800000000006e-05, 8.580499999999783e-05, 8.61799999999982e-05, 8.57920000000012e-05, 8.526399999999809e-05, 8.572199999999988e-05, 8.54859999999992e-05, 8.538899999999822e-05, 8.554200000000095e-05, 8.615299999999854e-05, 8.54859999999992e-05, 8.580499999999783e-05, 8.566700000000108e-05, 8.526400000000156e-05, 8.602800000000188e-05, 8.56660000000016e-05, 8.531999999999984e-05, 8.53050000000008e-05, 8.591699999999786e-05, 8.552799999999791e-05, 8.511099999999883e-05, 8.604200000000145e-05, 8.577800000000163e-05, 8.568099999999718e-05, 8.541700000000083e-05, 8.537500000000212e-05, 8.56249999999989e-05, 8.600000000000274e-05, 8.604099999999851e-05, 8.619400000000124e-05, 8.53469999999995e-05, 8.53469999999995e-05, 8.616700000000158e-05, 8.574999999999902e-05, 8.597200000000013e-05, 8.558399999999966e-05, 8.611099999999983e-05, 8.557000000000009e-05, 8.525000000000199e-05, 8.538900000000169e-05, 8.56669999999976e-05, 8.572299999999936e-05, 8.562500000000237e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.287" endtime="20201029 18:16:07.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.282" endtime="20201029 18:16:07.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:07.293" endtime="20201029 18:16:07.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.292" endtime="20201029 18:16:07.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.291" endtime="20201029 18:16:07.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.929" endtime="20201029 18:16:07.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.929" endtime="20201029 18:16:07.314"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.322" endtime="20201029 18:16:07.343"></status>
</kw>
<msg timestamp="20201029 18:16:07.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.321" endtime="20201029 18:16:07.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.344" endtime="20201029 18:16:07.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.347" endtime="20201029 18:16:07.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.318" endtime="20201029 18:16:07.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.316" endtime="20201029 18:16:07.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.357" endtime="20201029 18:16:07.661"></status>
</kw>
<msg timestamp="20201029 18:16:07.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019756778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.354" endtime="20201029 18:16:07.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019756778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.665" endtime="20201029 18:16:07.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.673" endtime="20201029 18:16:07.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.352" endtime="20201029 18:16:07.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.350" endtime="20201029 18:16:07.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.680" level="INFO">${RESULT} = [{'diff': 8.63059999999978e-05}, {'diff': 8.719499999999825e-05}, {'diff': 8.683399999999744e-05}, {'diff': 8.622299999999986e-05}, {'diff': 8.637499999999965e-05}, {'diff': 8.609700000000026e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:07.677" endtime="20201029 18:16:07.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.684" level="INFO">${ACCURACY} = {'diff': [8.63059999999978e-05, 8.719499999999825e-05, 8.683399999999744e-05, 8.622299999999986e-05, 8.637499999999965e-05, 8.609700000000026e-05, 8.669399999999827e-05, 8.604100000000198e-05, 8.64720...</msg>
<status status="PASS" starttime="20201029 18:16:07.681" endtime="20201029 18:16:07.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.688" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.687" endtime="20201029 18:16:07.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.691" level="INFO">VALUE: [8.63059999999978e-05, 8.719499999999825e-05, 8.683399999999744e-05, 8.622299999999986e-05, 8.637499999999965e-05, 8.609700000000026e-05, 8.669399999999827e-05, 8.604100000000198e-05, 8.647200000000063e-05, 8.688899999999972e-05, 8.642999999999845e-05, 8.62920000000017e-05, 8.700000000000027e-05, 8.704199999999898e-05, 8.680600000000177e-05, 8.634699999999704e-05, 8.638899999999922e-05, 8.673600000000045e-05, 8.700000000000027e-05, 8.680600000000177e-05, 8.71250000000004e-05, 8.661100000000033e-05, 8.697200000000113e-05, 8.624999999999952e-05, 8.700000000000027e-05, 8.71669999999991e-05, 8.675000000000002e-05, 8.634799999999998e-05, 8.668100000000165e-05, 8.669499999999775e-05, 8.626400000000256e-05, 8.661100000000033e-05, 8.6847000000001e-05, 8.630600000000127e-05, 8.64860000000002e-05, 8.666700000000208e-05, 8.638899999999922e-05, 8.627799999999866e-05, 8.638900000000269e-05, 8.705499999999908e-05, 8.630499999999833e-05, 8.631900000000137e-05, 8.66669999999986e-05, 8.632000000000084e-05, 8.624999999999952e-05, 8.643099999999793e-05, 8.637499999999965e-05, 8.622299999999986e-05, 8.643000000000192e-05, 8.644399999999802e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.689" endtime="20201029 18:16:07.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.685" endtime="20201029 18:16:07.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:07.696" endtime="20201029 18:16:07.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.694" endtime="20201029 18:16:07.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.693" endtime="20201029 18:16:07.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.315" endtime="20201029 18:16:07.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.314" endtime="20201029 18:16:07.717"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.725" endtime="20201029 18:16:07.746"></status>
</kw>
<msg timestamp="20201029 18:16:07.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.723" endtime="20201029 18:16:07.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.747" endtime="20201029 18:16:07.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.750" endtime="20201029 18:16:07.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.721" endtime="20201029 18:16:07.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.719" endtime="20201029 18:16:07.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.759" endtime="20201029 18:16:08.044"></status>
</kw>
<msg timestamp="20201029 18:16:08.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02068925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020776889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:07.757" endtime="20201029 18:16:08.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02068925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020776889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:08.048" endtime="20201029 18:16:08.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.056" endtime="20201029 18:16:08.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.754" endtime="20201029 18:16:08.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.753" endtime="20201029 18:16:08.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.063" level="INFO">${RESULT} = [{'diff': 8.763900000000047e-05}, {'diff': 8.822199999999891e-05}, {'diff': 8.73059999999988e-05}, {'diff': 8.762499999999743e-05}, {'diff': 8.74860000000012e-05}, {'diff': 8.71250000000004e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:16:08.059" endtime="20201029 18:16:08.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.067" level="INFO">${ACCURACY} = {'diff': [8.763900000000047e-05, 8.822199999999891e-05, 8.73059999999988e-05, 8.762499999999743e-05, 8.74860000000012e-05, 8.71250000000004e-05, 8.800000000000127e-05, 8.73189999999989e-05, 8.79580000...</msg>
<status status="PASS" starttime="20201029 18:16:08.064" endtime="20201029 18:16:08.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.071" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.070" endtime="20201029 18:16:08.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.074" level="INFO">VALUE: [8.763900000000047e-05, 8.822199999999891e-05, 8.73059999999988e-05, 8.762499999999743e-05, 8.74860000000012e-05, 8.71250000000004e-05, 8.800000000000127e-05, 8.73189999999989e-05, 8.795800000000256e-05, 8.76669999999996e-05, 8.81250000000014e-05, 8.779100000000026e-05, 8.819399999999977e-05, 8.741699999999936e-05, 8.761099999999786e-05, 8.819499999999925e-05, 8.720900000000129e-05, 8.818099999999968e-05, 8.76250000000009e-05, 8.787499999999768e-05, 8.818099999999968e-05, 8.71250000000004e-05, 8.794399999999952e-05, 8.726400000000009e-05, 8.718099999999868e-05, 8.725000000000052e-05, 8.777800000000016e-05, 8.726400000000009e-05, 8.748599999999773e-05, 8.768100000000265e-05, 8.777800000000016e-05, 8.777800000000016e-05, 8.744500000000197e-05, 8.76669999999996e-05, 8.81670000000001e-05, 8.795800000000256e-05, 8.791699999999986e-05, 8.71250000000004e-05, 8.776400000000059e-05, 8.797200000000213e-05, 8.800000000000127e-05, 8.805500000000008e-05, 8.817999999999673e-05, 8.740299999999979e-05, 8.752799999999991e-05, 8.804199999999998e-05, 8.704199999999898e-05, 8.79860000000017e-05, 8.811099999999836e-05, 8.786099999999811e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.072" endtime="20201029 18:16:08.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.068" endtime="20201029 18:16:08.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.079" endtime="20201029 18:16:08.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.078" endtime="20201029 18:16:08.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.077" endtime="20201029 18:16:08.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.717" endtime="20201029 18:16:08.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.717" endtime="20201029 18:16:08.100"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.109" endtime="20201029 18:16:08.128"></status>
</kw>
<msg timestamp="20201029 18:16:08.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.107" endtime="20201029 18:16:08.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.130" endtime="20201029 18:16:08.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.132" endtime="20201029 18:16:08.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.105" endtime="20201029 18:16:08.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.102" endtime="20201029 18:16:08.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.141" endtime="20201029 18:16:08.427"></status>
</kw>
<msg timestamp="20201029 18:16:08.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019778944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.140" endtime="20201029 18:16:08.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019778944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.431" endtime="20201029 18:16:08.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.440" endtime="20201029 18:16:08.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.137" endtime="20201029 18:16:08.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.136" endtime="20201029 18:16:08.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.447" level="INFO">${RESULT} = [{'diff': 8.916599999999816e-05}, {'diff': 8.829200000000023e-05}, {'diff': 8.908399999999969e-05}, {'diff': 8.891700000000086e-05}, {'diff': 8.84449999999995e-05}, {'diff': 8.874999999999855e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:08.443" endtime="20201029 18:16:08.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.452" level="INFO">${ACCURACY} = {'diff': [8.916599999999816e-05, 8.829200000000023e-05, 8.908399999999969e-05, 8.891700000000086e-05, 8.84449999999995e-05, 8.874999999999855e-05, 8.852700000000144e-05, 8.879100000000126e-05, 8.91389...</msg>
<status status="PASS" starttime="20201029 18:16:08.448" endtime="20201029 18:16:08.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.457" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.455" endtime="20201029 18:16:08.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.459" level="INFO">VALUE: [8.916599999999816e-05, 8.829200000000023e-05, 8.908399999999969e-05, 8.891700000000086e-05, 8.84449999999995e-05, 8.874999999999855e-05, 8.852700000000144e-05, 8.879100000000126e-05, 8.91389999999985e-05, 8.874999999999855e-05, 8.875000000000202e-05, 8.872199999999941e-05, 8.91800000000012e-05, 8.904200000000098e-05, 8.907000000000012e-05, 8.830500000000033e-05, 8.855600000000005e-05, 8.911100000000283e-05, 8.81670000000001e-05, 8.86250000000019e-05, 8.900000000000227e-05, 8.843000000000045e-05, 8.898599999999923e-05, 8.917999999999773e-05, 8.876400000000159e-05, 8.834699999999904e-05, 8.918100000000068e-05, 8.825000000000152e-05, 8.918100000000068e-05, 8.865300000000104e-05, 8.886099999999911e-05, 8.843099999999993e-05, 8.905500000000108e-05, 8.88060000000003e-05, 8.901399999999837e-05, 8.906900000000065e-05, 8.843000000000045e-05, 8.886100000000258e-05, 8.905500000000108e-05, 8.901399999999837e-05, 8.891699999999739e-05, 8.904100000000151e-05, 8.831999999999937e-05, 8.86250000000019e-05, 8.874999999999855e-05, 8.91670000000011e-05, 8.912499999999893e-05, 8.876400000000159e-05, 8.83059999999998e-05, 8.86250000000019e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.458" endtime="20201029 18:16:08.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.453" endtime="20201029 18:16:08.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.464" endtime="20201029 18:16:08.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.463" endtime="20201029 18:16:08.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.461" endtime="20201029 18:16:08.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.101" endtime="20201029 18:16:08.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.100" endtime="20201029 18:16:08.485"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.494" endtime="20201029 18:16:08.514"></status>
</kw>
<msg timestamp="20201029 18:16:08.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.492" endtime="20201029 18:16:08.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.515" endtime="20201029 18:16:08.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.518" endtime="20201029 18:16:08.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.490" endtime="20201029 18:16:08.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.488" endtime="20201029 18:16:08.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.527" endtime="20201029 18:16:08.815"></status>
</kw>
<msg timestamp="20201029 18:16:08.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020361806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.526" endtime="20201029 18:16:08.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020361806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.819" endtime="20201029 18:16:08.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.827" endtime="20201029 18:16:08.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.523" endtime="20201029 18:16:08.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.521" endtime="20201029 18:16:08.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.834" level="INFO">${RESULT} = [{'diff': 8.962499999999943e-05}, {'diff': 8.99869999999997e-05}, {'diff': 8.967999999999823e-05}, {'diff': 8.930499999999786e-05}, {'diff': 8.98190000000014e-05}, {'diff': 9.001399999999937e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:08.831" endtime="20201029 18:16:08.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.838" level="INFO">${ACCURACY} = {'diff': [8.962499999999943e-05, 8.99869999999997e-05, 8.967999999999823e-05, 8.930499999999786e-05, 8.98190000000014e-05, 9.001399999999937e-05, 8.96250000000029e-05, 8.955600000000105e-05, 8.9931000...</msg>
<status status="PASS" starttime="20201029 18:16:08.835" endtime="20201029 18:16:08.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.843" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.842" endtime="20201029 18:16:08.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.846" level="INFO">VALUE: [8.962499999999943e-05, 8.99869999999997e-05, 8.967999999999823e-05, 8.930499999999786e-05, 8.98190000000014e-05, 9.001399999999937e-05, 8.96250000000029e-05, 8.955600000000105e-05, 8.993100000000143e-05, 8.995800000000109e-05, 8.93060000000008e-05, 8.98060000000013e-05, 9.006999999999765e-05, 8.937500000000265e-05, 9.016699999999864e-05, 8.98190000000014e-05, 9.005599999999808e-05, 8.963900000000247e-05, 9.006900000000165e-05, 8.930499999999786e-05, 8.954200000000148e-05, 8.941700000000136e-05, 8.976400000000259e-05, 8.968099999999771e-05, 8.911099999999936e-05, 8.938899999999875e-05, 8.986100000000011e-05, 8.988899999999925e-05, 8.96250000000029e-05, 8.962499999999943e-05, 8.929100000000176e-05, 9.006899999999818e-05, 8.972200000000041e-05, 8.979200000000173e-05, 8.980499999999836e-05, 8.911099999999936e-05, 8.958300000000072e-05, 8.923599999999948e-05, 8.926399999999862e-05, 8.937499999999918e-05, 8.929200000000123e-05, 8.959700000000029e-05, 8.979200000000173e-05, 8.958300000000072e-05, 8.93190000000009e-05, 8.94999999999993e-05, 8.923599999999948e-05, 8.994399999999805e-05, 9.002700000000294e-05, 8.930500000000133e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.844" endtime="20201029 18:16:08.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.839" endtime="20201029 18:16:08.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.851" endtime="20201029 18:16:08.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.849" endtime="20201029 18:16:08.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.848" endtime="20201029 18:16:08.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.486" endtime="20201029 18:16:08.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.485" endtime="20201029 18:16:08.871"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.881" endtime="20201029 18:16:08.902"></status>
</kw>
<msg timestamp="20201029 18:16:08.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.879" endtime="20201029 18:16:08.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.903" endtime="20201029 18:16:08.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.906" endtime="20201029 18:16:08.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.876" endtime="20201029 18:16:08.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.874" endtime="20201029 18:16:08.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.915" endtime="20201029 18:16:09.201"></status>
</kw>
<msg timestamp="20201029 18:16:09.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021193875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021284361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.914" endtime="20201029 18:16:09.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021193875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021284361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.205" endtime="20201029 18:16:09.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.214" endtime="20201029 18:16:09.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.911" endtime="20201029 18:16:09.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.909" endtime="20201029 18:16:09.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.220" level="INFO">${RESULT} = [{'diff': 9.048600000000073e-05}, {'diff': 9.036100000000061e-05}, {'diff': 9.033400000000094e-05}, {'diff': 9.074999999999708e-05}, {'diff': 9.095900000000157e-05}, {'diff': 9.080599999999883e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:09.217" endtime="20201029 18:16:09.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.225" level="INFO">${ACCURACY} = {'diff': [9.048600000000073e-05, 9.036100000000061e-05, 9.033400000000094e-05, 9.074999999999708e-05, 9.095900000000157e-05, 9.080599999999883e-05, 9.093099999999896e-05, 9.05000000000003e-05, 9.04299...</msg>
<status status="PASS" starttime="20201029 18:16:09.221" endtime="20201029 18:16:09.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.229" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.228" endtime="20201029 18:16:09.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.232" level="INFO">VALUE: [9.048600000000073e-05, 9.036100000000061e-05, 9.033400000000094e-05, 9.074999999999708e-05, 9.095900000000157e-05, 9.080599999999883e-05, 9.093099999999896e-05, 9.05000000000003e-05, 9.042999999999898e-05, 9.052699999999997e-05, 9.088900000000025e-05, 9.042999999999898e-05, 9.072199999999794e-05, 9.077799999999969e-05, 9.048600000000073e-05, 9.051399999999987e-05, 9.059700000000129e-05, 9.118100000000268e-05, 9.025000000000005e-05, 9.105599999999908e-05, 9.044499999999803e-05, 9.05000000000003e-05, 9.038899999999975e-05, 9.105499999999961e-05, 9.048600000000073e-05, 9.022199999999744e-05, 9.051399999999987e-05, 9.094400000000252e-05, 9.111100000000136e-05, 9.062500000000043e-05, 9.079200000000273e-05, 9.055600000000205e-05, 9.058399999999772e-05, 9.043099999999846e-05, 9.084700000000154e-05, 9.01389999999995e-05, 9.097299999999767e-05, 9.11390000000005e-05, 9.037500000000018e-05, 9.05000000000003e-05, 9.03190000000019e-05, 9.084700000000154e-05, 9.105499999999961e-05, 9.084699999999807e-05, 9.087500000000068e-05, 9.037500000000018e-05, 9.026399999999962e-05, 9.05130000000004e-05, 9.094499999999853e-05, 9.106999999999865e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.230" endtime="20201029 18:16:09.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.226" endtime="20201029 18:16:09.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.238" endtime="20201029 18:16:09.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.236" endtime="20201029 18:16:09.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.235" endtime="20201029 18:16:09.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.872" endtime="20201029 18:16:09.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.872" endtime="20201029 18:16:09.259"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.268" endtime="20201029 18:16:09.288"></status>
</kw>
<msg timestamp="20201029 18:16:09.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.266" endtime="20201029 18:16:09.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.290" endtime="20201029 18:16:09.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.292" endtime="20201029 18:16:09.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.264" endtime="20201029 18:16:09.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.262" endtime="20201029 18:16:09.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.302" endtime="20201029 18:16:09.588"></status>
</kw>
<msg timestamp="20201029 18:16:09.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020539375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020631278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.300" endtime="20201029 18:16:09.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020539375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020631278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.592" endtime="20201029 18:16:09.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.601" endtime="20201029 18:16:09.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.298" endtime="20201029 18:16:09.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.296" endtime="20201029 18:16:09.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.608" level="INFO">${RESULT} = [{'diff': 9.190300000000082e-05}, {'diff': 9.204200000000051e-05}, {'diff': 9.162499999999796e-05}, {'diff': 9.141699999999989e-05}, {'diff': 9.173600000000198e-05}, {'diff': 9.20000000000018e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:09.604" endtime="20201029 18:16:09.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.613" level="INFO">${ACCURACY} = {'diff': [9.190300000000082e-05, 9.204200000000051e-05, 9.162499999999796e-05, 9.141699999999989e-05, 9.173600000000198e-05, 9.20000000000018e-05, 9.197299999999867e-05, 9.148599999999826e-05, 9.20980...</msg>
<status status="PASS" starttime="20201029 18:16:09.609" endtime="20201029 18:16:09.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.618" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.617" endtime="20201029 18:16:09.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.620" level="INFO">VALUE: [9.190300000000082e-05, 9.204200000000051e-05, 9.162499999999796e-05, 9.141699999999989e-05, 9.173600000000198e-05, 9.20000000000018e-05, 9.197299999999867e-05, 9.148599999999826e-05, 9.209800000000226e-05, 9.162500000000143e-05, 9.130599999999933e-05, 9.186200000000158e-05, 9.212500000000193e-05, 9.159700000000229e-05, 9.1332999999999e-05, 9.177800000000069e-05, 9.144399999999955e-05, 9.166700000000014e-05, 9.205600000000008e-05, 9.115300000000007e-05, 9.179200000000026e-05, 9.140300000000032e-05, 9.187500000000168e-05, 9.213800000000202e-05, 9.219499999999978e-05, 9.179200000000026e-05, 9.176400000000112e-05, 9.125000000000105e-05, 9.147200000000216e-05, 9.206999999999965e-05, 9.193000000000048e-05, 9.205600000000008e-05, 9.219499999999978e-05, 9.218100000000021e-05, 9.184699999999907e-05, 9.168099999999971e-05, 9.120900000000182e-05, 9.18879999999983e-05, 9.149999999999783e-05, 9.197300000000214e-05, 9.1332999999999e-05, 9.161099999999839e-05, 9.140200000000084e-05, 9.1332999999999e-05, 9.131899999999943e-05, 9.143099999999946e-05, 9.187499999999821e-05, 9.158399999999872e-05, 9.158399999999872e-05, 9.111099999999789e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.619" endtime="20201029 18:16:09.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.614" endtime="20201029 18:16:09.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.625" endtime="20201029 18:16:09.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.624" endtime="20201029 18:16:09.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.623" endtime="20201029 18:16:09.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.260" endtime="20201029 18:16:09.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.259" endtime="20201029 18:16:09.646"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.655" endtime="20201029 18:16:09.676"></status>
</kw>
<msg timestamp="20201029 18:16:09.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.653" endtime="20201029 18:16:09.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.678" endtime="20201029 18:16:09.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.680" endtime="20201029 18:16:09.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.651" endtime="20201029 18:16:09.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.649" endtime="20201029 18:16:09.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.689" endtime="20201029 18:16:09.976"></status>
</kw>
<msg timestamp="20201029 18:16:09.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020231097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.688" endtime="20201029 18:16:09.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020231097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.980" endtime="20201029 18:16:09.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.988" endtime="20201029 18:16:09.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.685" endtime="20201029 18:16:09.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.683" endtime="20201029 18:16:09.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.995" level="INFO">${RESULT} = [{'diff': 9.2333e-05}, {'diff': 9.244399999999708e-05}, {'diff': 9.237499999999871e-05}, {'diff': 9.299999999999933e-05}, {'diff': 9.279200000000126e-05}, {'diff': 9.305499999999814e-05}, {'diff': 9.2...</msg>
<status status="PASS" starttime="20201029 18:16:09.992" endtime="20201029 18:16:09.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.000" level="INFO">${ACCURACY} = {'diff': [9.2333e-05, 9.244399999999708e-05, 9.237499999999871e-05, 9.299999999999933e-05, 9.279200000000126e-05, 9.305499999999814e-05, 9.236099999999914e-05, 9.298599999999976e-05, 9.226399999999815...</msg>
<status status="PASS" starttime="20201029 18:16:09.996" endtime="20201029 18:16:10.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.004" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.003" endtime="20201029 18:16:10.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.007" level="INFO">VALUE: [9.2333e-05, 9.244399999999708e-05, 9.237499999999871e-05, 9.299999999999933e-05, 9.279200000000126e-05, 9.305499999999814e-05, 9.236099999999914e-05, 9.298599999999976e-05, 9.226399999999815e-05, 9.273599999999951e-05, 9.267999999999776e-05, 9.305599999999761e-05, 9.245800000000012e-05, 9.304099999999857e-05, 9.28330000000005e-05, 9.24719999999997e-05, 9.263899999999853e-05, 9.312499999999946e-05, 9.313899999999903e-05, 9.308400000000022e-05, 9.269500000000028e-05, 9.2639000000002e-05, 9.265300000000157e-05, 9.230600000000033e-05, 9.31659999999987e-05, 9.283299999999703e-05, 9.26659999999982e-05, 9.288899999999878e-05, 9.256900000000068e-05, 9.292999999999801e-05, 9.224999999999858e-05, 9.244500000000003e-05, 9.23199999999999e-05, 9.249999999999883e-05, 9.311099999999989e-05, 9.262499999999896e-05, 9.276299999999918e-05, 9.279200000000126e-05, 9.3026999999999e-05, 9.30139999999989e-05, 9.254099999999807e-05, 9.261099999999939e-05, 9.262499999999896e-05, 9.322299999999992e-05, 9.279200000000126e-05, 9.273599999999951e-05, 9.224999999999858e-05, 9.241700000000089e-05, 9.234699999999957e-05, 9.304200000000151e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.005" endtime="20201029 18:16:10.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.000" endtime="20201029 18:16:10.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.012" endtime="20201029 18:16:10.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.010" endtime="20201029 18:16:10.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.009" endtime="20201029 18:16:10.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.647" endtime="20201029 18:16:10.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.647" endtime="20201029 18:16:10.033"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.042" endtime="20201029 18:16:10.065"></status>
</kw>
<msg timestamp="20201029 18:16:10.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.040" endtime="20201029 18:16:10.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.066" endtime="20201029 18:16:10.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.069" endtime="20201029 18:16:10.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.037" endtime="20201029 18:16:10.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.035" endtime="20201029 18:16:10.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.079" endtime="20201029 18:16:10.365"></status>
</kw>
<msg timestamp="20201029 18:16:10.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023496069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023589736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.077" endtime="20201029 18:16:10.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023496069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023589736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.369" endtime="20201029 18:16:10.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.378" endtime="20201029 18:16:10.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.074" endtime="20201029 18:16:10.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.072" endtime="20201029 18:16:10.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.385" level="INFO">${RESULT} = [{'diff': 9.366699999999867e-05}, {'diff': 9.398600000000076e-05}, {'diff': 9.356900000000168e-05}, {'diff': 9.330600000000133e-05}, {'diff': 9.354199999999854e-05}, {'diff': 9.40139999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:10.381" endtime="20201029 18:16:10.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.389" level="INFO">${ACCURACY} = {'diff': [9.366699999999867e-05, 9.398600000000076e-05, 9.356900000000168e-05, 9.330600000000133e-05, 9.354199999999854e-05, 9.40139999999999e-05, 9.338899999999928e-05, 9.334700000000057e-05, 9.41810...</msg>
<status status="PASS" starttime="20201029 18:16:10.386" endtime="20201029 18:16:10.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.393" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.392" endtime="20201029 18:16:10.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.396" level="INFO">VALUE: [9.366699999999867e-05, 9.398600000000076e-05, 9.356900000000168e-05, 9.330600000000133e-05, 9.354199999999854e-05, 9.40139999999999e-05, 9.338899999999928e-05, 9.334700000000057e-05, 9.418100000000221e-05, 9.361199999999986e-05, 9.330500000000186e-05, 9.380500000000236e-05, 9.38330000000015e-05, 9.349999999999983e-05, 9.369399999999833e-05, 9.342999999999851e-05, 9.362499999999996e-05, 9.387500000000021e-05, 9.375000000000008e-05, 9.343099999999799e-05, 9.312499999999946e-05, 9.375000000000008e-05, 9.367999999999876e-05, 9.369399999999833e-05, 9.38330000000015e-05, 9.356900000000168e-05, 9.34859999999968e-05, 9.42079999999984e-05, 9.362499999999996e-05, 9.338899999999928e-05, 9.340299999999885e-05, 9.349999999999983e-05, 9.40139999999999e-05, 9.361100000000039e-05, 9.39720000000012e-05, 9.388899999999978e-05, 9.329200000000176e-05, 9.326299999999968e-05, 9.359800000000029e-05, 9.312499999999946e-05, 9.343000000000198e-05, 9.311099999999989e-05, 9.342999999999851e-05, 9.326399999999915e-05, 9.397199999999772e-05, 9.405599999999861e-05, 9.324999999999958e-05, 9.354199999999854e-05, 9.33200000000009e-05, 9.354200000000201e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.395" endtime="20201029 18:16:10.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.390" endtime="20201029 18:16:10.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.402" endtime="20201029 18:16:10.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.400" endtime="20201029 18:16:10.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.399" endtime="20201029 18:16:10.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.034" endtime="20201029 18:16:10.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.033" endtime="20201029 18:16:10.423"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.432" endtime="20201029 18:16:10.453"></status>
</kw>
<msg timestamp="20201029 18:16:10.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.430" endtime="20201029 18:16:10.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.454" endtime="20201029 18:16:10.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.457" endtime="20201029 18:16:10.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.427" endtime="20201029 18:16:10.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.425" endtime="20201029 18:16:10.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.466" endtime="20201029 18:16:10.753"></status>
</kw>
<msg timestamp="20201029 18:16:10.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.465" endtime="20201029 18:16:10.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.757" endtime="20201029 18:16:10.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.765" endtime="20201029 18:16:10.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.462" endtime="20201029 18:16:10.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.460" endtime="20201029 18:16:10.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.772" level="INFO">${RESULT} = [{'diff': 9.520899999999888e-05}, {'diff': 9.486100000000164e-05}, {'diff': 9.472199999999847e-05}, {'diff': 9.483299999999903e-05}, {'diff': 9.487500000000121e-05}, {'diff': 9.463800000000105e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:10.769" endtime="20201029 18:16:10.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.777" level="INFO">${ACCURACY} = {'diff': [9.520899999999888e-05, 9.486100000000164e-05, 9.472199999999847e-05, 9.483299999999903e-05, 9.487500000000121e-05, 9.463800000000105e-05, 9.427799999999972e-05, 9.499999999999786e-05, 9.5041...</msg>
<status status="PASS" starttime="20201029 18:16:10.773" endtime="20201029 18:16:10.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.782" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.781" endtime="20201029 18:16:10.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.785" level="INFO">VALUE: [9.520899999999888e-05, 9.486100000000164e-05, 9.472199999999847e-05, 9.483299999999903e-05, 9.487500000000121e-05, 9.463800000000105e-05, 9.427799999999972e-05, 9.499999999999786e-05, 9.504100000000057e-05, 9.44859999999978e-05, 9.49859999999983e-05, 9.518099999999974e-05, 9.486100000000164e-05, 9.519499999999931e-05, 9.487500000000121e-05, 9.470899999999838e-05, 9.430600000000233e-05, 9.493099999999949e-05, 9.500000000000133e-05, 9.522199999999897e-05, 9.461100000000139e-05, 9.461100000000139e-05, 9.436099999999767e-05, 9.512499999999799e-05, 9.46660000000002e-05, 9.488900000000078e-05, 9.468099999999924e-05, 9.459799999999782e-05, 9.469399999999933e-05, 9.426400000000015e-05, 9.445899999999813e-05, 9.467999999999976e-05, 9.456900000000268e-05, 9.483400000000197e-05, 9.519399999999983e-05, 9.519399999999983e-05, 9.481899999999946e-05, 9.48469999999986e-05, 9.45140000000004e-05, 9.44720000000017e-05, 9.469500000000228e-05, 9.479199999999979e-05, 9.518099999999974e-05, 9.490300000000035e-05, 9.475000000000108e-05, 9.487500000000121e-05, 9.518000000000026e-05, 9.437500000000071e-05, 9.511100000000189e-05, 9.430499999999939e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.783" endtime="20201029 18:16:10.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.778" endtime="20201029 18:16:10.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.846" endtime="20201029 18:16:10.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.844" endtime="20201029 18:16:10.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.843" endtime="20201029 18:16:10.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.424" endtime="20201029 18:16:10.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.423" endtime="20201029 18:16:10.867"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.876" endtime="20201029 18:16:10.897"></status>
</kw>
<msg timestamp="20201029 18:16:10.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.874" endtime="20201029 18:16:10.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.898" endtime="20201029 18:16:10.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.901" endtime="20201029 18:16:10.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.871" endtime="20201029 18:16:10.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.869" endtime="20201029 18:16:10.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.910" endtime="20201029 18:16:11.198"></status>
</kw>
<msg timestamp="20201029 18:16:11.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020109708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.909" endtime="20201029 18:16:11.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020109708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.202" endtime="20201029 18:16:11.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.211" endtime="20201029 18:16:11.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.906" endtime="20201029 18:16:11.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.904" endtime="20201029 18:16:11.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.217" level="INFO">${RESULT} = [{'diff': 9.538900000000128e-05}, {'diff': 9.594500000000006e-05}, {'diff': 9.586099999999917e-05}, {'diff': 9.513900000000103e-05}, {'diff': 9.593000000000101e-05}, {'diff': 9.611099999999942e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:11.214" endtime="20201029 18:16:11.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.222" level="INFO">${ACCURACY} = {'diff': [9.538900000000128e-05, 9.594500000000006e-05, 9.586099999999917e-05, 9.513900000000103e-05, 9.593000000000101e-05, 9.611099999999942e-05, 9.579100000000132e-05, 9.604100000000157e-05, 9.6014...</msg>
<status status="PASS" starttime="20201029 18:16:11.218" endtime="20201029 18:16:11.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.226" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.225" endtime="20201029 18:16:11.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.229" level="INFO">VALUE: [9.538900000000128e-05, 9.594500000000006e-05, 9.586099999999917e-05, 9.513900000000103e-05, 9.593000000000101e-05, 9.611099999999942e-05, 9.579100000000132e-05, 9.604100000000157e-05, 9.60140000000019e-05, 9.600000000000233e-05, 9.595800000000015e-05, 9.55279999999975e-05, 9.605600000000061e-05, 9.574999999999861e-05, 9.605600000000061e-05, 9.590200000000187e-05, 9.577800000000122e-05, 9.526299999999821e-05, 9.561100000000239e-05, 9.556900000000021e-05, 9.593000000000101e-05, 9.552800000000097e-05, 9.605500000000114e-05, 9.526400000000115e-05, 9.522199999999897e-05, 9.618100000000074e-05, 9.537500000000171e-05, 9.62080000000004e-05, 9.59859999999993e-05, 9.576400000000165e-05, 9.569400000000033e-05, 9.520899999999888e-05, 9.538899999999781e-05, 9.559699999999935e-05, 9.541600000000094e-05, 9.541700000000042e-05, 9.602800000000147e-05, 9.561099999999892e-05, 9.558399999999925e-05, 9.593100000000049e-05, 9.599999999999886e-05, 9.594500000000006e-05, 9.569499999999981e-05, 9.579200000000079e-05, 9.574999999999861e-05, 9.531899999999996e-05, 9.558299999999978e-05, 9.538900000000128e-05, 9.61660000000017e-05, 9.541600000000094e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.227" endtime="20201029 18:16:11.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.223" endtime="20201029 18:16:11.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.234" endtime="20201029 18:16:11.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.232" endtime="20201029 18:16:11.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.231" endtime="20201029 18:16:11.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.868" endtime="20201029 18:16:11.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.867" endtime="20201029 18:16:11.255"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.264" endtime="20201029 18:16:11.286"></status>
</kw>
<msg timestamp="20201029 18:16:11.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.262" endtime="20201029 18:16:11.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.288" endtime="20201029 18:16:11.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.291" endtime="20201029 18:16:11.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.259" endtime="20201029 18:16:11.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.257" endtime="20201029 18:16:11.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.300" endtime="20201029 18:16:11.587"></status>
</kw>
<msg timestamp="20201029 18:16:11.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021230028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021326708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.298" endtime="20201029 18:16:11.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021230028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021326708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.591" endtime="20201029 18:16:11.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.600" endtime="20201029 18:16:11.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.296" endtime="20201029 18:16:11.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.294" endtime="20201029 18:16:11.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.606" level="INFO">${RESULT} = [{'diff': 9.66799999999983e-05}, {'diff': 9.637500000000271e-05}, {'diff': 9.676399999999918e-05}, {'diff': 9.661099999999992e-05}, {'diff': 9.709700000000085e-05}, {'diff': 9.674999999999961e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:11.603" endtime="20201029 18:16:11.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.611" level="INFO">${ACCURACY} = {'diff': [9.66799999999983e-05, 9.637500000000271e-05, 9.676399999999918e-05, 9.661099999999992e-05, 9.709700000000085e-05, 9.674999999999961e-05, 9.713899999999956e-05, 9.709700000000085e-05, 9.70419...</msg>
<status status="PASS" starttime="20201029 18:16:11.607" endtime="20201029 18:16:11.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.615" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.614" endtime="20201029 18:16:11.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.618" level="INFO">VALUE: [9.66799999999983e-05, 9.637500000000271e-05, 9.676399999999918e-05, 9.661099999999992e-05, 9.709700000000085e-05, 9.674999999999961e-05, 9.713899999999956e-05, 9.709700000000085e-05, 9.704199999999857e-05, 9.682000000000093e-05, 9.704199999999857e-05, 9.693100000000149e-05, 9.645799999999718e-05, 9.711199999999989e-05, 9.72080000000014e-05, 9.630500000000139e-05, 9.655499999999817e-05, 9.68059999999979e-05, 9.701399999999943e-05, 9.69860000000003e-05, 9.623599999999954e-05, 9.626400000000215e-05, 9.623599999999954e-05, 9.683299999999756e-05, 9.661099999999992e-05, 9.711100000000042e-05, 9.652800000000197e-05, 9.674999999999961e-05, 9.693000000000201e-05, 9.642999999999805e-05, 9.7027999999999e-05, 9.666599999999873e-05, 9.631900000000096e-05, 9.686100000000017e-05, 9.687499999999974e-05, 9.691699999999845e-05, 9.705599999999814e-05, 9.624999999999911e-05, 9.636099999999967e-05, 9.688799999999984e-05, 9.666700000000167e-05, 9.674999999999961e-05, 9.612500000000246e-05, 9.688899999999931e-05, 9.681900000000146e-05, 9.691699999999845e-05, 9.622199999999997e-05, 9.640299999999838e-05, 9.683299999999756e-05, 9.672200000000047e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.616" endtime="20201029 18:16:11.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.611" endtime="20201029 18:16:11.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.624" endtime="20201029 18:16:11.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.622" endtime="20201029 18:16:11.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.621" endtime="20201029 18:16:11.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.256" endtime="20201029 18:16:11.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.255" endtime="20201029 18:16:11.645"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.654" endtime="20201029 18:16:11.675"></status>
</kw>
<msg timestamp="20201029 18:16:11.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.652" endtime="20201029 18:16:11.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.676" endtime="20201029 18:16:11.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.679" endtime="20201029 18:16:11.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.649" endtime="20201029 18:16:11.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.647" endtime="20201029 18:16:11.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.688" endtime="20201029 18:16:11.974"></status>
</kw>
<msg timestamp="20201029 18:16:11.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020201556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.687" endtime="20201029 18:16:11.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020201556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.978" endtime="20201029 18:16:11.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.986" endtime="20201029 18:16:11.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.684" endtime="20201029 18:16:11.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.682" endtime="20201029 18:16:11.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.993" level="INFO">${RESULT} = [{'diff': 9.795800000000215e-05}, {'diff': 9.793100000000249e-05}, {'diff': 9.762500000000049e-05}, {'diff': 9.819500000000231e-05}, {'diff': 9.781899999999899e-05}, {'diff': 9.775000000000061e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:11.990" endtime="20201029 18:16:11.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.998" level="INFO">${ACCURACY} = {'diff': [9.795800000000215e-05, 9.793100000000249e-05, 9.762500000000049e-05, 9.819500000000231e-05, 9.781899999999899e-05, 9.775000000000061e-05, 9.773700000000052e-05, 9.730500000000239e-05, 9.7401...</msg>
<status status="PASS" starttime="20201029 18:16:11.994" endtime="20201029 18:16:11.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.003" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.002" endtime="20201029 18:16:12.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.006" level="INFO">VALUE: [9.795800000000215e-05, 9.793100000000249e-05, 9.762500000000049e-05, 9.819500000000231e-05, 9.781899999999899e-05, 9.775000000000061e-05, 9.773700000000052e-05, 9.730500000000239e-05, 9.74019999999999e-05, 9.741599999999948e-05, 9.725000000000011e-05, 9.78059999999989e-05, 9.811100000000142e-05, 9.726399999999968e-05, 9.81669999999997e-05, 9.808400000000175e-05, 9.800000000000086e-05, 9.800000000000086e-05, 9.777799999999975e-05, 9.761100000000092e-05, 9.805599999999914e-05, 9.712499999999999e-05, 9.816600000000023e-05, 9.800000000000086e-05, 9.744499999999809e-05, 9.730500000000239e-05, 9.776400000000018e-05, 9.744400000000208e-05, 9.762500000000049e-05, 9.750000000000036e-05, 9.740299999999938e-05, 9.74730000000007e-05, 9.787499999999727e-05, 9.755600000000211e-05, 9.818099999999927e-05, 9.74999999999969e-05, 9.727799999999925e-05, 9.806899999999924e-05, 9.765299999999963e-05, 9.738899999999981e-05, 9.811200000000089e-05, 9.79999999999974e-05, 9.743100000000199e-05, 9.768099999999877e-05, 9.790299999999988e-05, 9.741699999999895e-05, 9.783300000000203e-05, 9.787500000000074e-05, 9.781999999999846e-05, 9.726399999999968e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.004" endtime="20201029 18:16:12.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.999" endtime="20201029 18:16:12.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.011" endtime="20201029 18:16:12.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.009" endtime="20201029 18:16:12.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.008" endtime="20201029 18:16:12.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.646" endtime="20201029 18:16:12.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.645" endtime="20201029 18:16:12.032"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.041" endtime="20201029 18:16:12.061"></status>
</kw>
<msg timestamp="20201029 18:16:12.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.039" endtime="20201029 18:16:12.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.063" endtime="20201029 18:16:12.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.065" endtime="20201029 18:16:12.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.036" endtime="20201029 18:16:12.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.034" endtime="20201029 18:16:12.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.075" endtime="20201029 18:16:12.362"></status>
</kw>
<msg timestamp="20201029 18:16:12.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020364222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.073" endtime="20201029 18:16:12.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020364222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.367" endtime="20201029 18:16:12.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.375" endtime="20201029 18:16:12.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.070" endtime="20201029 18:16:12.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.069" endtime="20201029 18:16:12.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.382" level="INFO">${RESULT} = [{'diff': 9.894400000000012e-05}, {'diff': 9.881899999999999e-05}, {'diff': 9.893000000000055e-05}, {'diff': 9.875000000000161e-05}, {'diff': 9.89999999999984e-05}, {'diff': 9.825000000000111e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:12.379" endtime="20201029 18:16:12.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.386" level="INFO">${ACCURACY} = {'diff': [9.894400000000012e-05, 9.881899999999999e-05, 9.893000000000055e-05, 9.875000000000161e-05, 9.89999999999984e-05, 9.825000000000111e-05, 9.901399999999796e-05, 9.847199999999875e-05, 9.87089...</msg>
<status status="PASS" starttime="20201029 18:16:12.383" endtime="20201029 18:16:12.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.391" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.390" endtime="20201029 18:16:12.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.394" level="INFO">VALUE: [9.894400000000012e-05, 9.881899999999999e-05, 9.893000000000055e-05, 9.875000000000161e-05, 9.89999999999984e-05, 9.825000000000111e-05, 9.901399999999796e-05, 9.847199999999875e-05, 9.870899999999891e-05, 9.863800000000159e-05, 9.893100000000002e-05, 9.880500000000042e-05, 9.856899999999974e-05, 9.861100000000192e-05, 9.859800000000182e-05, 9.880500000000042e-05, 9.916699999999723e-05, 9.877799999999728e-05, 9.912500000000199e-05, 9.89999999999984e-05, 9.856999999999921e-05, 9.837500000000124e-05, 9.841699999999995e-05, 9.893000000000055e-05, 9.894400000000012e-05, 9.916599999999776e-05, 9.886100000000217e-05, 9.901399999999796e-05, 9.891700000000045e-05, 9.895899999999916e-05, 9.829199999999982e-05, 9.922299999999898e-05, 9.8721999999999e-05, 9.875000000000161e-05, 9.826400000000068e-05, 9.894500000000306e-05, 9.862500000000149e-05, 9.919400000000037e-05, 9.897199999999926e-05, 9.84860000000018e-05, 9.840300000000038e-05, 9.84860000000018e-05, 9.900000000000186e-05, 9.872300000000195e-05, 9.837499999999777e-05, 9.825000000000111e-05, 9.815300000000013e-05, 9.913900000000156e-05, 9.881999999999946e-05, 9.837500000000124e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.392" endtime="20201029 18:16:12.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.387" endtime="20201029 18:16:12.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.399" endtime="20201029 18:16:12.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.397" endtime="20201029 18:16:12.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.396" endtime="20201029 18:16:12.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.033" endtime="20201029 18:16:12.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.032" endtime="20201029 18:16:12.420"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.429" endtime="20201029 18:16:12.450"></status>
</kw>
<msg timestamp="20201029 18:16:12.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.427" endtime="20201029 18:16:12.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.452" endtime="20201029 18:16:12.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.454" endtime="20201029 18:16:12.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.424" endtime="20201029 18:16:12.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.422" endtime="20201029 18:16:12.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.464" endtime="20201029 18:16:12.750"></status>
</kw>
<msg timestamp="20201029 18:16:12.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021268625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021368875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.462" endtime="20201029 18:16:12.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021268625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021368875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.754" endtime="20201029 18:16:12.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.763" endtime="20201029 18:16:12.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.459" endtime="20201029 18:16:12.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.458" endtime="20201029 18:16:12.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.769" level="INFO">${RESULT} = [{'diff': 0.00010024999999999964}, {'diff': 9.906900000000024e-05}, {'diff': 9.912500000000199e-05}, {'diff': 9.913899999999809e-05}, {'diff': 9.929200000000082e-05}, {'diff': 9.940299999999791e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:12.766" endtime="20201029 18:16:12.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.774" level="INFO">${ACCURACY} = {'diff': [0.00010024999999999964, 9.906900000000024e-05, 9.912500000000199e-05, 9.913899999999809e-05, 9.929200000000082e-05, 9.940299999999791e-05, 9.994500000000059e-05, 9.929200000000082e-05, 0.000...</msg>
<status status="PASS" starttime="20201029 18:16:12.770" endtime="20201029 18:16:12.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.778" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.777" endtime="20201029 18:16:12.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.781" level="INFO">VALUE: [0.00010024999999999964, 9.906900000000024e-05, 9.912500000000199e-05, 9.913899999999809e-05, 9.929200000000082e-05, 9.940299999999791e-05, 9.994500000000059e-05, 9.929200000000082e-05, 0.00010005600000000114, 9.947299999999923e-05, 0.0001002220000000005, 9.968100000000077e-05, 9.979100000000185e-05, 9.969400000000087e-05, 9.956900000000074e-05, 9.970899999999991e-05, 9.937499999999877e-05, 9.976399999999871e-05, 9.984700000000013e-05, 9.982000000000046e-05, 9.96670000000012e-05, 9.974999999999914e-05, 9.958300000000031e-05, 9.961100000000292e-05, 9.95280000000015e-05, 0.00010002799999999853, 9.926400000000168e-05, 9.929099999999788e-05, 9.98479999999996e-05, 9.931900000000049e-05, 9.979199999999785e-05, 0.00010001399999999896, 9.984700000000013e-05, 9.93609999999992e-05, 9.951399999999846e-05, 9.93060000000004e-05, 9.966699999999773e-05, 9.930500000000092e-05, 9.974999999999914e-05, 9.979100000000185e-05, 9.998599999999983e-05, 9.937500000000224e-05, 9.966600000000173e-05, 9.995800000000069e-05, 0.00010004200000000157, 9.991699999999798e-05, 9.973599999999957e-05, 9.995800000000069e-05, 9.923599999999907e-05, 9.968100000000077e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.779" endtime="20201029 18:16:12.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.775" endtime="20201029 18:16:12.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.787" endtime="20201029 18:16:12.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.785" endtime="20201029 18:16:12.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.784" endtime="20201029 18:16:12.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.420" endtime="20201029 18:16:12.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.420" endtime="20201029 18:16:12.808"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.817" endtime="20201029 18:16:12.838"></status>
</kw>
<msg timestamp="20201029 18:16:12.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.815" endtime="20201029 18:16:12.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.840" endtime="20201029 18:16:12.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.842" endtime="20201029 18:16:12.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.813" endtime="20201029 18:16:12.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.810" endtime="20201029 18:16:12.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.852" endtime="20201029 18:16:13.138"></status>
</kw>
<msg timestamp="20201029 18:16:13.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020406667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020507167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.850" endtime="20201029 18:16:13.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020406667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020507167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.142" endtime="20201029 18:16:13.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.151" endtime="20201029 18:16:13.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.848" endtime="20201029 18:16:13.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.846" endtime="20201029 18:16:13.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.157" level="INFO">${RESULT} = [{'diff': 0.0001004999999999999}, {'diff': 0.00010013900000000256}, {'diff': 0.00010055600000000164}, {'diff': 0.00010056899999999827}, {'diff': 0.00010112500000000052}, {'diff': 0.0001002909999999988...</msg>
<status status="PASS" starttime="20201029 18:16:13.154" endtime="20201029 18:16:13.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.162" level="INFO">${ACCURACY} = {'diff': [0.0001004999999999999, 0.00010013900000000256, 0.00010055600000000164, 0.00010056899999999827, 0.00010112500000000052, 0.00010029099999999888, 0.00010044400000000162, 0.00010122199999999804,...</msg>
<status status="PASS" starttime="20201029 18:16:13.158" endtime="20201029 18:16:13.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.167" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.166" endtime="20201029 18:16:13.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.170" level="INFO">VALUE: [0.0001004999999999999, 0.00010013900000000256, 0.00010055600000000164, 0.00010056899999999827, 0.00010112500000000052, 0.00010029099999999888, 0.00010044400000000162, 0.00010122199999999804, 0.00010023600000000008, 0.00010029200000000182, 0.00010107000000000171, 0.00010057000000000121, 0.000101028000000003, 0.00010107000000000171, 0.00010119499999999837, 0.0001010419999999991, 0.00010065199999999969, 0.00010075000000000014, 0.00010073600000000058, 0.00010055500000000217, 0.00010093099999999855, 0.00010076399999999971, 0.00010034700000000063, 0.00010015300000000213, 0.00010073600000000058, 0.0001004999999999999, 0.00010037499999999977, 0.00010108299999999834, 0.0001010000000000004, 0.00010055500000000217, 0.00010055500000000217, 0.00010098600000000083, 0.00010048600000000033, 0.00010050000000000336, 0.00010106899999999877, 0.0001010419999999991, 0.00010088899999999984, 0.00010080599999999842, 0.0001011809999999988, 0.00010093099999999855, 0.00010062500000000002, 0.00010061100000000045, 0.00010042999999999858, 0.00010107000000000171, 0.00010033300000000106, 0.00010092999999999908, 0.00010038900000000281, 0.00010077799999999928, 0.00010041699999999848, 0.00010105599999999867]</msg>
<status status="PASS" starttime="20201029 18:16:13.168" endtime="20201029 18:16:13.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.163" endtime="20201029 18:16:13.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.175" endtime="20201029 18:16:13.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.173" endtime="20201029 18:16:13.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.172" endtime="20201029 18:16:13.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.809" endtime="20201029 18:16:13.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.808" endtime="20201029 18:16:13.196"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.205" endtime="20201029 18:16:13.225"></status>
</kw>
<msg timestamp="20201029 18:16:13.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.203" endtime="20201029 18:16:13.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.226" endtime="20201029 18:16:13.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.229" endtime="20201029 18:16:13.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.200" endtime="20201029 18:16:13.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.198" endtime="20201029 18:16:13.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.238" endtime="20201029 18:16:13.525"></status>
</kw>
<msg timestamp="20201029 18:16:13.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020160014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020261764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.237" endtime="20201029 18:16:13.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020160014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020261764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.529" endtime="20201029 18:16:13.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.538" endtime="20201029 18:16:13.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.234" endtime="20201029 18:16:13.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.232" endtime="20201029 18:16:13.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.544" level="INFO">${RESULT} = [{'diff': 0.00010175000000000115}, {'diff': 0.00010205599999999967}, {'diff': 0.0001018749999999978}, {'diff': 0.00010211099999999848}, {'diff': 0.00010225000000000165}, {'diff': 0.0001015689999999992...</msg>
<status status="PASS" starttime="20201029 18:16:13.541" endtime="20201029 18:16:13.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.548" level="INFO">${ACCURACY} = {'diff': [0.00010175000000000115, 0.00010205599999999967, 0.0001018749999999978, 0.00010211099999999848, 0.00010225000000000165, 0.00010156899999999927, 0.0001013619999999972, 0.00010112500000000052, ...</msg>
<status status="PASS" starttime="20201029 18:16:13.545" endtime="20201029 18:16:13.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.553" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.552" endtime="20201029 18:16:13.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.556" level="INFO">VALUE: [0.00010175000000000115, 0.00010205599999999967, 0.0001018749999999978, 0.00010211099999999848, 0.00010225000000000165, 0.00010156899999999927, 0.0001013619999999972, 0.00010112500000000052, 0.00010109699999999791, 0.0001020550000000002, 0.000101513999999997, 0.00010206899999999977, 0.00010142999999999958, 0.00010141699999999948, 0.00010140299999999991, 0.00010140299999999991, 0.00010113900000000009, 0.00010133399999999806, 0.00010186099999999823, 0.00010141700000000295, 0.00010197200000000226, 0.00010194399999999965, 0.00010155500000000317, 0.00010126400000000021, 0.00010186099999999823, 0.00010179199999999985, 0.00010187500000000127, 0.00010194499999999912, 0.00010199999999999793, 0.0001013199999999985, 0.00010148600000000133, 0.00010219499999999937, 0.0001020000000000014, 0.000101416, 0.00010216700000000023, 0.00010179100000000038, 0.00010190300000000041, 0.0001016939999999994, 0.00010186200000000117, 0.00010111100000000095, 0.00010126400000000021, 0.00010148599999999786, 0.00010163900000000059, 0.00010148599999999786, 0.00010219499999999937, 0.00010180599999999942, 0.00010216600000000076, 0.00010176400000000071, 0.00010127799999999978, 0.00010112500000000052]</msg>
<status status="PASS" starttime="20201029 18:16:13.554" endtime="20201029 18:16:13.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.549" endtime="20201029 18:16:13.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.561" endtime="20201029 18:16:13.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.559" endtime="20201029 18:16:13.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.558" endtime="20201029 18:16:13.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.196" endtime="20201029 18:16:13.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.196" endtime="20201029 18:16:13.581"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.590" endtime="20201029 18:16:13.615"></status>
</kw>
<msg timestamp="20201029 18:16:13.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.589" endtime="20201029 18:16:13.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.617" endtime="20201029 18:16:13.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.619" endtime="20201029 18:16:13.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.586" endtime="20201029 18:16:13.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.584" endtime="20201029 18:16:13.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.629" endtime="20201029 18:16:13.914"></status>
</kw>
<msg timestamp="20201029 18:16:13.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023330875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023433833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.627" endtime="20201029 18:16:13.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023330875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023433833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.918" endtime="20201029 18:16:13.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.926" endtime="20201029 18:16:13.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.624" endtime="20201029 18:16:13.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.623" endtime="20201029 18:16:13.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.933" level="INFO">${RESULT} = [{'diff': 0.00010295800000000022}, {'diff': 0.00010231900000000002}, {'diff': 0.00010244400000000015}, {'diff': 0.00010316700000000123}, {'diff': 0.00010237500000000177}, {'diff': 0.000102417000000000...</msg>
<status status="PASS" starttime="20201029 18:16:13.930" endtime="20201029 18:16:13.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.937" level="INFO">${ACCURACY} = {'diff': [0.00010295800000000022, 0.00010231900000000002, 0.00010244400000000015, 0.00010316700000000123, 0.00010237500000000177, 0.00010241700000000048, 0.00010272199999999954, 0.000102416000000001, ...</msg>
<status status="PASS" starttime="20201029 18:16:13.934" endtime="20201029 18:16:13.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.942" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.941" endtime="20201029 18:16:13.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.944" level="INFO">VALUE: [0.00010295800000000022, 0.00010231900000000002, 0.00010244400000000015, 0.00010316700000000123, 0.00010237500000000177, 0.00010241700000000048, 0.00010272199999999954, 0.000102416000000001, 0.00010320899999999994, 0.00010230599999999992, 0.00010293100000000055, 0.00010254100000000113, 0.00010302800000000154, 0.00010266599999999779, 0.00010215299999999719, 0.0001022359999999986, 0.00010280500000000095, 0.0001023749999999983, 0.00010230599999999992, 0.00010212500000000152, 0.00010263900000000159, 0.00010299999999999893, 0.00010255600000000017, 0.00010270799999999997, 0.00010270799999999997, 0.00010231900000000002, 0.00010244400000000015, 0.0001029160000000015, 0.00010238900000000134, 0.00010281900000000052, 0.00010293100000000055, 0.00010273600000000258, 0.00010269499999999987, 0.00010261100000000245, 0.00010229200000000035, 0.00010263899999999812, 0.00010308300000000034, 0.00010223699999999808, 0.00010215300000000066, 0.00010261099999999898, 0.00010318000000000133, 0.00010248599999999886, 0.00010231900000000002, 0.00010299999999999893, 0.00010276399999999825, 0.0001028749999999988, 0.00010308399999999981, 0.00010259799999999888, 0.00010312499999999905, 0.00010262500000000202]</msg>
<status status="PASS" starttime="20201029 18:16:13.943" endtime="20201029 18:16:13.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.938" endtime="20201029 18:16:13.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.950" endtime="20201029 18:16:13.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.949" endtime="20201029 18:16:13.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.948" endtime="20201029 18:16:13.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.582" endtime="20201029 18:16:13.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.582" endtime="20201029 18:16:13.971"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.980" endtime="20201029 18:16:14.002"></status>
</kw>
<msg timestamp="20201029 18:16:14.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.978" endtime="20201029 18:16:14.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.003" endtime="20201029 18:16:14.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.006" endtime="20201029 18:16:14.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.976" endtime="20201029 18:16:14.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.974" endtime="20201029 18:16:14.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.015" endtime="20201029 18:16:14.300"></status>
</kw>
<msg timestamp="20201029 18:16:14.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020084125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020187653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.014" endtime="20201029 18:16:14.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020084125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020187653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.305" endtime="20201029 18:16:14.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.313" endtime="20201029 18:16:14.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.011" endtime="20201029 18:16:14.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.009" endtime="20201029 18:16:14.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:14.320" level="INFO">${RESULT} = [{'diff': 0.00010352799999999857}, {'diff': 0.00010348599999999986}, {'diff': 0.00010412500000000005}, {'diff': 0.00010343100000000105}, {'diff': 0.00010341700000000148}, {'diff': 0.000103985999999996...</msg>
<status status="PASS" starttime="20201029 18:16:14.316" endtime="20201029 18:16:14.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:14.325" level="INFO">${ACCURACY} = {'diff': [0.00010352799999999857, 0.00010348599999999986, 0.00010412500000000005, 0.00010343100000000105, 0.00010341700000000148, 0.00010398599999999689, 0.00010406900000000177, 0.00010336099999999973...</msg>
<status status="PASS" starttime="20201029 18:16:14.321" endtime="20201029 18:16:14.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.331" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:16:14.329" endtime="20201029 18:16:14.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.333" level="INFO">VALUE: [0.00010352799999999857, 0.00010348599999999986, 0.00010412500000000005, 0.00010343100000000105, 0.00010341700000000148, 0.00010398599999999689, 0.00010406900000000177, 0.00010336099999999973, 0.00010379099999999891, 0.00010349999999999943, 0.00010349999999999943, 0.00010362499999999955, 0.00010407000000000124, 0.00010344500000000062, 0.00010355600000000117, 0.00010379200000000185, 0.00010401400000000297, 0.00010320800000000047, 0.00010372200000000054, 0.00010405499999999873, 0.00010405499999999873, 0.0001041940000000019, 0.0001033749999999993, 0.00010372300000000001, 0.00010398599999999689, 0.00010413900000000309, 0.00010366700000000173, 0.000103820000000001, 0.000103513999999999, 0.0001033619999999992, 0.00010326400000000222, 0.00010405499999999873, 0.000103416000000002, 0.00010394399999999818, 0.00010329200000000135, 0.00010358300000000084, 0.00010362499999999955, 0.00010330600000000092, 0.00010399999999999993, 0.0001036810000000013, 0.00010348599999999986, 0.00010358300000000084, 0.00010340299999999844, 0.00010312499999999905, 0.00010331900000000102, 0.00010420800000000147, 0.00010405499999999873, 0.00010331899999999755, 0.00010324999999999918, 0.0001037360000000001]</msg>
<status status="PASS" starttime="20201029 18:16:14.332" endtime="20201029 18:16:14.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.326" endtime="20201029 18:16:14.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.339" endtime="20201029 18:16:14.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.337" endtime="20201029 18:16:14.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.336" endtime="20201029 18:16:14.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.972" endtime="20201029 18:16:14.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.971" endtime="20201029 18:16:14.359"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.368" endtime="20201029 18:16:14.389"></status>
</kw>
<msg timestamp="20201029 18:16:14.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.367" endtime="20201029 18:16:14.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.391" endtime="20201029 18:16:14.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.393" endtime="20201029 18:16:14.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.364" endtime="20201029 18:16:14.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.362" endtime="20201029 18:16:14.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.403" endtime="20201029 18:16:14.689"></status>
</kw>
<msg timestamp="20201029 18:16:14.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.401" endtime="20201029 18:16:14.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.694" endtime="20201029 18:16:14.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.702" endtime="20201029 18:16:14.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.399" endtime="20201029 18:16:14.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.397" endtime="20201029 18:16:14.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:14.709" level="INFO">${RESULT} = [{'diff': 0.00010469500000000187}, {'diff': 0.0001050140000000005}, {'diff': 0.00010512500000000105}, {'diff': 0.00010441599999999954}, {'diff': 0.00010450000000000043}, {'diff': 0.0001041389999999996...</msg>
<status status="PASS" starttime="20201029 18:16:14.706" endtime="20201029 18:16:14.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:14.713" level="INFO">${ACCURACY} = {'diff': [0.00010469500000000187, 0.0001050140000000005, 0.00010512500000000105, 0.00010441599999999954, 0.00010450000000000043, 0.00010413899999999962, 0.00010454099999999966, 0.00010425000000000018,...</msg>
<status status="PASS" starttime="20201029 18:16:14.710" endtime="20201029 18:16:14.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.718" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:16:14.717" endtime="20201029 18:16:14.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.720" level="INFO">VALUE: [0.00010469500000000187, 0.0001050140000000005, 0.00010512500000000105, 0.00010441599999999954, 0.00010450000000000043, 0.00010413899999999962, 0.00010454099999999966, 0.00010425000000000018, 0.00010519399999999943, 0.00010518099999999933, 0.00010494499999999865, 0.00010520900000000194, 0.00010493099999999908, 0.00010427799999999932, 0.00010493100000000255, 0.00010445799999999825, 0.00010425000000000018, 0.00010499999999999746, 0.00010444399999999868, 0.00010502800000000007, 0.00010444399999999868, 0.000104820000000002, 0.00010455600000000217, 0.00010425000000000018, 0.00010431899999999855, 0.0001043750000000003, 0.00010477799999999982, 0.00010494399999999918, 0.00010520800000000247, 0.00010448600000000086, 0.00010486100000000123, 0.0001045689999999988, 0.00010480499999999948, 0.00010473599999999764, 0.00010461100000000098, 0.00010444500000000162, 0.00010461100000000098, 0.0001045559999999987, 0.0001051949999999989, 0.00010504199999999964, 0.00010501300000000102, 0.00010505499999999973, 0.00010433299999999812, 0.00010500000000000093, 0.00010508299999999887, 0.00010469500000000187, 0.00010516699999999976, 0.00010494500000000212, 0.00010457000000000174, 0.00010475000000000068]</msg>
<status status="PASS" starttime="20201029 18:16:14.719" endtime="20201029 18:16:14.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.714" endtime="20201029 18:16:14.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.725" endtime="20201029 18:16:14.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.724" endtime="20201029 18:16:14.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.722" endtime="20201029 18:16:14.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.360" endtime="20201029 18:16:14.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.360" endtime="20201029 18:16:14.746"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.755" endtime="20201029 18:16:14.777"></status>
</kw>
<msg timestamp="20201029 18:16:14.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.753" endtime="20201029 18:16:14.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.779" endtime="20201029 18:16:14.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.781" endtime="20201029 18:16:14.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.751" endtime="20201029 18:16:14.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.748" endtime="20201029 18:16:14.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.791" endtime="20201029 18:16:15.076"></status>
</kw>
<msg timestamp="20201029 18:16:15.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021139125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021244986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.789" endtime="20201029 18:16:15.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021139125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021244986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.080" endtime="20201029 18:16:15.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.088" endtime="20201029 18:16:15.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.786" endtime="20201029 18:16:15.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.785" endtime="20201029 18:16:15.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.095" level="INFO">${RESULT} = [{'diff': 0.00010586099999999876}, {'diff': 0.00010605500000000073}, {'diff': 0.00010577799999999735}, {'diff': 0.0001060140000000015}, {'diff': 0.00010579200000000039}, {'diff': 0.0001052780000000003...</msg>
<status status="PASS" starttime="20201029 18:16:15.092" endtime="20201029 18:16:15.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.099" level="INFO">${ACCURACY} = {'diff': [0.00010586099999999876, 0.00010605500000000073, 0.00010577799999999735, 0.0001060140000000015, 0.00010579200000000039, 0.00010527800000000032, 0.00010590200000000147, 0.00010618100000000033,...</msg>
<status status="PASS" starttime="20201029 18:16:15.096" endtime="20201029 18:16:15.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.104" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.103" endtime="20201029 18:16:15.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.106" level="INFO">VALUE: [0.00010586099999999876, 0.00010605500000000073, 0.00010577799999999735, 0.0001060140000000015, 0.00010579200000000039, 0.00010527800000000032, 0.00010590200000000147, 0.00010618100000000033, 0.0001053880000000014, 0.00010568000000000036, 0.00010555500000000023, 0.00010584699999999919, 0.00010568000000000036, 0.00010544399999999968, 0.00010588900000000137, 0.00010548599999999839, 0.00010526400000000075, 0.00010547300000000176, 0.00010597300000000226, 0.00010511200000000095, 0.00010594400000000018, 0.00010569399999999993, 0.00010579100000000091, 0.00010552800000000057, 0.00010565300000000069, 0.00010576400000000125, 0.00010590300000000094, 0.00010556999999999928, 0.0001055559999999997, 0.00010563900000000112, 0.00010583299999999962, 0.00010579200000000039, 0.00010601299999999855, 0.0001057360000000021, 0.00010604100000000116, 0.00010598600000000236, 0.00010577800000000082, 0.00010590300000000094, 0.00010586099999999876, 0.00010594499999999965, 0.00010522199999999857, 0.00010590300000000094, 0.00010587499999999833, 0.00010581899999999658, 0.0001055279999999971, 0.00010606999999999978, 0.00010544399999999968, 0.00010531899999999955, 0.00010604100000000116, 0.00010604099999999769]</msg>
<status status="PASS" starttime="20201029 18:16:15.105" endtime="20201029 18:16:15.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.100" endtime="20201029 18:16:15.109"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.112" endtime="20201029 18:16:15.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.111" endtime="20201029 18:16:15.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.110" endtime="20201029 18:16:15.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.747" endtime="20201029 18:16:15.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.746" endtime="20201029 18:16:15.133"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.142" endtime="20201029 18:16:15.163"></status>
</kw>
<msg timestamp="20201029 18:16:15.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.140" endtime="20201029 18:16:15.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.165" endtime="20201029 18:16:15.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.168" endtime="20201029 18:16:15.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.138" endtime="20201029 18:16:15.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.136" endtime="20201029 18:16:15.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.177" endtime="20201029 18:16:15.463"></status>
</kw>
<msg timestamp="20201029 18:16:15.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.175" endtime="20201029 18:16:15.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.467" endtime="20201029 18:16:15.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.475" endtime="20201029 18:16:15.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.173" endtime="20201029 18:16:15.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.171" endtime="20201029 18:16:15.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.482" level="INFO">${RESULT} = [{'diff': 0.00010715299999999872}, {'diff': 0.00010644500000000015}, {'diff': 0.00010709700000000044}, {'diff': 0.00010698599999999989}, {'diff': 0.00010643100000000058}, {'diff': 0.000107041999999998...</msg>
<status status="PASS" starttime="20201029 18:16:15.479" endtime="20201029 18:16:15.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.487" level="INFO">${ACCURACY} = {'diff': [0.00010715299999999872, 0.00010644500000000015, 0.00010709700000000044, 0.00010698599999999989, 0.00010643100000000058, 0.00010704199999999817, 0.00010657000000000028, 0.00010700000000000293...</msg>
<status status="PASS" starttime="20201029 18:16:15.483" endtime="20201029 18:16:15.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.492" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.491" endtime="20201029 18:16:15.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.494" level="INFO">VALUE: [0.00010715299999999872, 0.00010644500000000015, 0.00010709700000000044, 0.00010698599999999989, 0.00010643100000000058, 0.00010704199999999817, 0.00010657000000000028, 0.00010700000000000293, 0.00010665299999999822, 0.00010634699999999969, 0.00010677700000000234, 0.0001068889999999989, 0.0001070140000000025, 0.0001065690000000008, 0.00010623599999999914, 0.00010648599999999939, 0.0001070560000000012, 0.00010715199999999925, 0.00010707000000000078, 0.00010700000000000293, 0.0001067499999999992, 0.00010699999999999946, 0.000106208, 0.00010675000000000268, 0.00010692999999999814, 0.00010637499999999883, 0.0001071950000000009, 0.00010629200000000089, 0.00010720900000000047, 0.00010695900000000022, 0.00010712499999999958, 0.00010679200000000139, 0.00010644400000000068, 0.00010711100000000001, 0.00010665199999999875, 0.00010680500000000148, 0.00010699999999999946, 0.00010681900000000105, 0.00010630600000000046, 0.00010625000000000218, 0.0001062499999999987, 0.00010673599999999964, 0.00010699999999999946, 0.00010666699999999779, 0.00010669400000000093, 0.00010692999999999814, 0.00010692999999999814, 0.00010686099999999976, 0.00010686099999999976, 0.00010699999999999946]</msg>
<status status="PASS" starttime="20201029 18:16:15.493" endtime="20201029 18:16:15.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.488" endtime="20201029 18:16:15.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.499" endtime="20201029 18:16:15.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.498" endtime="20201029 18:16:15.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.497" endtime="20201029 18:16:15.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.134" endtime="20201029 18:16:15.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.133" endtime="20201029 18:16:15.520"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.529" endtime="20201029 18:16:15.550"></status>
</kw>
<msg timestamp="20201029 18:16:15.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.527" endtime="20201029 18:16:15.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.552" endtime="20201029 18:16:15.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.554" endtime="20201029 18:16:15.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.525" endtime="20201029 18:16:15.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.523" endtime="20201029 18:16:15.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.563" endtime="20201029 18:16:15.850"></status>
</kw>
<msg timestamp="20201029 18:16:15.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020256944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.562" endtime="20201029 18:16:15.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020256944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.855" endtime="20201029 18:16:15.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.863" endtime="20201029 18:16:15.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.559" endtime="20201029 18:16:15.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.557" endtime="20201029 18:16:15.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.870" level="INFO">${RESULT} = [{'diff': 0.00010805499999999926}, {'diff': 0.0001077500000000002}, {'diff': 0.00010812500000000058}, {'diff': 0.00010790299999999947}, {'diff': 0.00010787499999999686}, {'diff': 0.0001076389999999996...</msg>
<status status="PASS" starttime="20201029 18:16:15.866" endtime="20201029 18:16:15.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.874" level="INFO">${ACCURACY} = {'diff': [0.00010805499999999926, 0.0001077500000000002, 0.00010812500000000058, 0.00010790299999999947, 0.00010787499999999686, 0.00010763899999999965, 0.0001080699999999983, 0.00010744499999999768, ...</msg>
<status status="PASS" starttime="20201029 18:16:15.871" endtime="20201029 18:16:15.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.878" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.877" endtime="20201029 18:16:15.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.881" level="INFO">VALUE: [0.00010805499999999926, 0.0001077500000000002, 0.00010812500000000058, 0.00010790299999999947, 0.00010787499999999686, 0.00010763899999999965, 0.0001080699999999983, 0.00010744499999999768, 0.00010762500000000008, 0.00010756899999999833, 0.00010762500000000008, 0.0001073889999999994, 0.00010792999999999914, 0.0001073889999999994, 0.00010765299999999922, 0.00010734699999999722, 0.00010797200000000132, 0.00010762500000000008, 0.00010727799999999885, 0.00010743100000000158, 0.00010737499999999983, 0.0001072499999999997, 0.00010795799999999828, 0.00010819399999999896, 0.00010738900000000287, 0.0001078889999999999, 0.0001072219999999971, 0.0001078889999999999, 0.00010790300000000294, 0.00010744400000000168, 0.00010811100000000101, 0.00010712499999999958, 0.0001080560000000022, 0.00010800000000000046, 0.00010763800000000018, 0.00010794400000000218, 0.00010737499999999983, 0.00010780499999999901, 0.00010787499999999686, 0.00010780500000000248, 0.00010766699999999879, 0.00010780600000000196, 0.00010747200000000082, 0.00010791699999999904, 0.00010723600000000014, 0.00010749999999999996, 0.00010780599999999849, 0.00010780599999999849, 0.00010779100000000291, 0.00010763899999999965]</msg>
<status status="PASS" starttime="20201029 18:16:15.879" endtime="20201029 18:16:15.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.875" endtime="20201029 18:16:15.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.943" endtime="20201029 18:16:15.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.941" endtime="20201029 18:16:15.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.940" endtime="20201029 18:16:15.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.521" endtime="20201029 18:16:15.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.521" endtime="20201029 18:16:15.963"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.972" endtime="20201029 18:16:15.994"></status>
</kw>
<msg timestamp="20201029 18:16:15.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.971" endtime="20201029 18:16:15.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.996" endtime="20201029 18:16:15.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.998" endtime="20201029 18:16:16.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.968" endtime="20201029 18:16:16.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.966" endtime="20201029 18:16:16.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.008" endtime="20201029 18:16:16.294"></status>
</kw>
<msg timestamp="20201029 18:16:16.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021125306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021234264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.006" endtime="20201029 18:16:16.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021125306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021234264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.298" endtime="20201029 18:16:16.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.307" endtime="20201029 18:16:16.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.004" endtime="20201029 18:16:16.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.002" endtime="20201029 18:16:16.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:16.313" level="INFO">${RESULT} = [{'diff': 0.00010895799999999928}, {'diff': 0.00010916700000000029}, {'diff': 0.00010886100000000176}, {'diff': 0.00010837500000000083}, {'diff': 0.00010899999999999799}, {'diff': 0.000109055000000000...</msg>
<status status="PASS" starttime="20201029 18:16:16.310" endtime="20201029 18:16:16.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:16.317" level="INFO">${ACCURACY} = {'diff': [0.00010895799999999928, 0.00010916700000000029, 0.00010886100000000176, 0.00010837500000000083, 0.00010899999999999799, 0.00010905500000000026, 0.00010909699999999897, 0.00010862500000000108...</msg>
<status status="PASS" starttime="20201029 18:16:16.314" endtime="20201029 18:16:16.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.322" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:16:16.321" endtime="20201029 18:16:16.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.325" level="INFO">VALUE: [0.00010895799999999928, 0.00010916700000000029, 0.00010886100000000176, 0.00010837500000000083, 0.00010899999999999799, 0.00010905500000000026, 0.00010909699999999897, 0.00010862500000000108, 0.0001087219999999986, 0.00010879199999999992, 0.0001082500000000007, 0.0001083890000000004, 0.00010886099999999829, 0.00010837500000000083, 0.000109208999999999, 0.00010911099999999854, 0.00010882000000000253, 0.00010881899999999958, 0.00010863900000000065, 0.00010813899999999668, 0.00010873599999999817, 0.0001083890000000004, 0.00010857000000000228, 0.00010872200000000207, 0.00010915300000000072, 0.00010850000000000096, 0.00010875000000000121, 0.00010826400000000028, 0.00010899999999999799, 0.00010824999999999724, 0.0001083890000000004, 0.00010900000000000146, 0.00010880500000000001, 0.00010899999999999799, 0.00010862500000000108, 0.00010913900000000115, 0.00010873599999999817, 0.00010859699999999847, 0.00010918099999999986, 0.0001088890000000009, 0.00010841699999999954, 0.00010854100000000019, 0.00010833300000000212, 0.00010893000000000014, 0.00010829099999999994, 0.00010834700000000169, 0.00010855499999999976, 0.00010826400000000028, 0.00010812500000000058, 0.00010891700000000004]</msg>
<status status="PASS" starttime="20201029 18:16:16.323" endtime="20201029 18:16:16.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.318" endtime="20201029 18:16:16.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.332" endtime="20201029 18:16:16.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.329" endtime="20201029 18:16:16.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.328" endtime="20201029 18:16:16.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.964" endtime="20201029 18:16:16.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.964" endtime="20201029 18:16:16.355"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.367" endtime="20201029 18:16:16.388"></status>
</kw>
<msg timestamp="20201029 18:16:16.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.365" endtime="20201029 18:16:16.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.390" endtime="20201029 18:16:16.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.392" endtime="20201029 18:16:16.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.362" endtime="20201029 18:16:16.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.359" endtime="20201029 18:16:16.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.402" endtime="20201029 18:16:16.686"></status>
</kw>
<msg timestamp="20201029 18:16:16.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024586639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024696542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.400" endtime="20201029 18:16:16.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024586639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024696542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.690" endtime="20201029 18:16:16.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.698" endtime="20201029 18:16:16.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.397" endtime="20201029 18:16:16.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.396" endtime="20201029 18:16:16.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:16.705" level="INFO">${RESULT} = [{'diff': 0.000109902999999998}, {'diff': 0.00010949999999999849}, {'diff': 0.00010981900000000058}, {'diff': 0.00010963800000000218}, {'diff': 0.00010912499999999811}, {'diff': 0.00010912499999999811...</msg>
<status status="PASS" starttime="20201029 18:16:16.702" endtime="20201029 18:16:16.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:16.710" level="INFO">${ACCURACY} = {'diff': [0.000109902999999998, 0.00010949999999999849, 0.00010981900000000058, 0.00010963800000000218, 0.00010912499999999811, 0.00010912499999999811, 0.00010998600000000289, 0.00010980600000000049, ...</msg>
<status status="PASS" starttime="20201029 18:16:16.706" endtime="20201029 18:16:16.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.715" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:16:16.714" endtime="20201029 18:16:16.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.717" level="INFO">VALUE: [0.000109902999999998, 0.00010949999999999849, 0.00010981900000000058, 0.00010963800000000218, 0.00010912499999999811, 0.00010912499999999811, 0.00010998600000000289, 0.00010980600000000049, 0.00010937500000000183, 0.00010912500000000158, 0.00010994500000000018, 0.00010997199999999985, 0.00010937500000000183, 0.00010923699999999814, 0.0001095829999999999, 0.00010937499999999836, 0.00010980500000000101, 0.00010974999999999874, 0.00010980600000000049, 0.0001093890000000014, 0.0001095280000000011, 0.00010954100000000119, 0.00010958399999999938, 0.00010998599999999942, 0.00010944499999999968, 0.0001094020000000015, 0.00011012499999999911, 0.00010991700000000104, 0.00010968000000000089, 0.00011019399999999749, 0.00010937500000000183, 0.00010968100000000036, 0.00010973599999999917, 0.00010987500000000233, 0.00010998599999999942, 0.00010952699999999815, 0.00010912499999999811, 0.00010951299999999858, 0.00010926400000000128, 0.00010955500000000076, 0.00010949999999999849, 0.00010925000000000171, 0.00010930599999999999, 0.00010986099999999929, 0.00010975000000000221, 0.00010969499999999993, 0.00010976399999999831, 0.0001095699999999998, 0.00010931999999999956, 0.00010923599999999867]</msg>
<status status="PASS" starttime="20201029 18:16:16.716" endtime="20201029 18:16:16.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.711" endtime="20201029 18:16:16.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.722" endtime="20201029 18:16:16.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.721" endtime="20201029 18:16:16.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.720" endtime="20201029 18:16:16.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.357" endtime="20201029 18:16:16.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.356" endtime="20201029 18:16:16.743"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.752" endtime="20201029 18:16:16.773"></status>
</kw>
<msg timestamp="20201029 18:16:16.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.750" endtime="20201029 18:16:16.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.775" endtime="20201029 18:16:16.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.777" endtime="20201029 18:16:16.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.748" endtime="20201029 18:16:16.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.746" endtime="20201029 18:16:16.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.787" endtime="20201029 18:16:17.074"></status>
</kw>
<msg timestamp="20201029 18:16:17.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020097833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020208625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.785" endtime="20201029 18:16:17.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020097833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020208625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.078" endtime="20201029 18:16:17.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.086" endtime="20201029 18:16:17.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.782" endtime="20201029 18:16:17.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.781" endtime="20201029 18:16:17.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.093" level="INFO">${RESULT} = [{'diff': 0.00011079200000000192}, {'diff': 0.00011072199999999713}, {'diff': 0.00011024999999999924}, {'diff': 0.0001102220000000001}, {'diff': 0.00011013899999999868}, {'diff': 0.0001101669999999978...</msg>
<status status="PASS" starttime="20201029 18:16:17.090" endtime="20201029 18:16:17.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.097" level="INFO">${ACCURACY} = {'diff': [0.00011079200000000192, 0.00011072199999999713, 0.00011024999999999924, 0.0001102220000000001, 0.00011013899999999868, 0.00011016699999999782, 0.00011104200000000217, 0.00011055600000000124,...</msg>
<status status="PASS" starttime="20201029 18:16:17.094" endtime="20201029 18:16:17.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.102" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.101" endtime="20201029 18:16:17.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.104" level="INFO">VALUE: [0.00011079200000000192, 0.00011072199999999713, 0.00011024999999999924, 0.0001102220000000001, 0.00011013899999999868, 0.00011016699999999782, 0.00011104200000000217, 0.00011055600000000124, 0.00011097200000000085, 0.00011030500000000151, 0.00011043000000000164, 0.00011081900000000158, 0.0001105419999999982, 0.00011056900000000133, 0.00011040300000000197, 0.00011055599999999777, 0.00011087499999999986, 0.00011123600000000067, 0.00011109800000000045, 0.00011074999999999974, 0.00011063899999999918, 0.00011086100000000029, 0.00011055500000000176, 0.00011044400000000121, 0.00011112500000000011, 0.00011118100000000186, 0.00011097200000000085, 0.00011119500000000143, 0.0001105700000000008, 0.00011026400000000228, 0.00011080600000000149, 0.00011037499999999936, 0.00011050000000000296, 0.00011102699999999965, 0.00011083299999999768, 0.00011098600000000042, 0.00011066600000000232, 0.00011044400000000121, 0.00011076399999999931, 0.00011055599999999777, 0.00011062499999999961, 0.00011102699999999965, 0.00011099999999999999, 0.00011093100000000161, 0.00011038899999999893, 0.00011102699999999965, 0.00011031900000000108, 0.00011042999999999817, 0.00011119399999999849, 0.00011074999999999974]</msg>
<status status="PASS" starttime="20201029 18:16:17.103" endtime="20201029 18:16:17.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.098" endtime="20201029 18:16:17.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.110" endtime="20201029 18:16:17.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.108" endtime="20201029 18:16:17.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.107" endtime="20201029 18:16:17.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.744" endtime="20201029 18:16:17.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.743" endtime="20201029 18:16:17.130"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.139" endtime="20201029 18:16:17.164"></status>
</kw>
<msg timestamp="20201029 18:16:17.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.138" endtime="20201029 18:16:17.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.165" endtime="20201029 18:16:17.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.169" endtime="20201029 18:16:17.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.135" endtime="20201029 18:16:17.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.133" endtime="20201029 18:16:17.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.180" endtime="20201029 18:16:17.466"></status>
</kw>
<msg timestamp="20201029 18:16:17.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023268486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023379875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.178" endtime="20201029 18:16:17.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023268486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023379875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.471" endtime="20201029 18:16:17.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.479" endtime="20201029 18:16:17.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.176" endtime="20201029 18:16:17.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.174" endtime="20201029 18:16:17.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.486" level="INFO">${RESULT} = [{'diff': 0.00011138899999999993}, {'diff': 0.000111596999999998}, {'diff': 0.00011206899999999936}, {'diff': 0.00011126399999999981}, {'diff': 0.00011186100000000129}, {'diff': 0.00011179199999999945...</msg>
<status status="PASS" starttime="20201029 18:16:17.482" endtime="20201029 18:16:17.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.490" level="INFO">${ACCURACY} = {'diff': [0.00011138899999999993, 0.000111596999999998, 0.00011206899999999936, 0.00011126399999999981, 0.00011186100000000129, 0.00011179199999999945, 0.00011218099999999939, 0.00011173600000000117, ...</msg>
<status status="PASS" starttime="20201029 18:16:17.487" endtime="20201029 18:16:17.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.494" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.493" endtime="20201029 18:16:17.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.497" level="INFO">VALUE: [0.00011138899999999993, 0.000111596999999998, 0.00011206899999999936, 0.00011126399999999981, 0.00011186100000000129, 0.00011179199999999945, 0.00011218099999999939, 0.00011173600000000117, 0.00011125000000000024, 0.00011156999999999834, 0.00011197300000000132, 0.00011158299999999843, 0.00011161100000000104, 0.00011187500000000086, 0.00011170799999999856, 0.00011142999999999917, 0.00011175000000000074, 0.00011216699999999982, 0.00011133400000000113, 0.00011125000000000024, 0.00011205599999999927, 0.0001114029999999995, 0.00011195799999999881, 0.00011166599999999985, 0.00011200000000000099, 0.00011156899999999886, 0.00011216600000000035, 0.00011173600000000117, 0.00011173600000000117, 0.00011181899999999911, 0.00011208400000000188, 0.00011194500000000218, 0.00011187500000000086, 0.00011115199999999978, 0.00011205599999999927, 0.00011115300000000272, 0.00011143000000000264, 0.00011163900000000018, 0.00011180499999999954, 0.00011156899999999886, 0.00011175000000000074, 0.00011184700000000172, 0.00011112500000000011, 0.00011197300000000132, 0.00011151399999999659, 0.00011131999999999809, 0.00011201300000000108, 0.00011180499999999954, 0.00011144400000000221, 0.00011205500000000326]</msg>
<status status="PASS" starttime="20201029 18:16:17.495" endtime="20201029 18:16:17.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.491" endtime="20201029 18:16:17.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.503" endtime="20201029 18:16:17.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.501" endtime="20201029 18:16:17.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.500" endtime="20201029 18:16:17.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.131" endtime="20201029 18:16:17.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.131" endtime="20201029 18:16:17.523"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.532" endtime="20201029 18:16:17.554"></status>
</kw>
<msg timestamp="20201029 18:16:17.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.531" endtime="20201029 18:16:17.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.555" endtime="20201029 18:16:17.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.558" endtime="20201029 18:16:17.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.528" endtime="20201029 18:16:17.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.526" endtime="20201029 18:16:17.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.567" endtime="20201029 18:16:17.853"></status>
</kw>
<msg timestamp="20201029 18:16:17.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020075792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020188486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.566" endtime="20201029 18:16:17.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020075792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020188486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.857" endtime="20201029 18:16:17.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.865" endtime="20201029 18:16:17.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.563" endtime="20201029 18:16:17.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.561" endtime="20201029 18:16:17.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.872" level="INFO">${RESULT} = [{'diff': 0.00011269399999999999}, {'diff': 0.00011248599999999845}, {'diff': 0.00011225000000000124}, {'diff': 0.00011306999999999984}, {'diff': 0.00011213899999999721}, {'diff': 0.000112749999999998...</msg>
<status status="PASS" starttime="20201029 18:16:17.869" endtime="20201029 18:16:17.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.877" level="INFO">${ACCURACY} = {'diff': [0.00011269399999999999, 0.00011248599999999845, 0.00011225000000000124, 0.00011306999999999984, 0.00011213899999999721, 0.00011274999999999827, 0.00011262500000000161, 0.00011275000000000174...</msg>
<status status="PASS" starttime="20201029 18:16:17.873" endtime="20201029 18:16:17.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.882" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.881" endtime="20201029 18:16:17.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.884" level="INFO">VALUE: [0.00011269399999999999, 0.00011248599999999845, 0.00011225000000000124, 0.00011306999999999984, 0.00011213899999999721, 0.00011274999999999827, 0.00011262500000000161, 0.00011275000000000174, 0.00011237500000000136, 0.00011316599999999788, 0.00011262500000000161, 0.00011230500000000004, 0.0001122359999999982, 0.00011251400000000106, 0.00011225000000000124, 0.00011268099999999989, 0.00011261099999999857, 0.00011302700000000165, 0.00011225000000000124, 0.00011274999999999827, 0.00011248700000000139, 0.00011219499999999896, 0.00011261099999999857, 0.00011238900000000093, 0.00011227800000000038, 0.00011268000000000042, 0.00011224999999999777, 0.00011231999999999909, 0.00011236100000000179, 0.00011262499999999814, 0.00011318100000000039, 0.00011268099999999989, 0.00011244400000000321, 0.00011262499999999814, 0.00011276400000000131, 0.00011298600000000242, 0.00011229100000000047, 0.00011251400000000106, 0.00011277799999999741, 0.00011215300000000025, 0.00011280600000000002, 0.00011245900000000225, 0.00011224999999999777, 0.00011280500000000054, 0.00011254100000000072, 0.0001130969999999995, 0.00011283299999999968, 0.00011236099999999832, 0.00011251400000000106, 0.00011276400000000131]</msg>
<status status="PASS" starttime="20201029 18:16:17.883" endtime="20201029 18:16:17.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.878" endtime="20201029 18:16:17.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.889" endtime="20201029 18:16:17.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.888" endtime="20201029 18:16:17.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.887" endtime="20201029 18:16:17.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.524" endtime="20201029 18:16:17.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.524" endtime="20201029 18:16:17.910"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.919" endtime="20201029 18:16:17.940"></status>
</kw>
<msg timestamp="20201029 18:16:17.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.918" endtime="20201029 18:16:17.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.942" endtime="20201029 18:16:17.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.944" endtime="20201029 18:16:17.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.915" endtime="20201029 18:16:17.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.913" endtime="20201029 18:16:17.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.954" endtime="20201029 18:16:18.241"></status>
</kw>
<msg timestamp="20201029 18:16:18.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020231153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.952" endtime="20201029 18:16:18.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020231153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.245" endtime="20201029 18:16:18.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.253" endtime="20201029 18:16:18.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.950" endtime="20201029 18:16:18.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.948" endtime="20201029 18:16:18.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.260" level="INFO">${RESULT} = [{'diff': 0.00011411100000000007}, {'diff': 0.00011374999999999927}, {'diff': 0.00011349999999999902}, {'diff': 0.00011363899999999871}, {'diff': 0.00011406900000000136}, {'diff': 0.000113389000000001...</msg>
<status status="PASS" starttime="20201029 18:16:18.257" endtime="20201029 18:16:18.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.264" level="INFO">${ACCURACY} = {'diff': [0.00011411100000000007, 0.00011374999999999927, 0.00011349999999999902, 0.00011363899999999871, 0.00011406900000000136, 0.00011338900000000193, 0.00011366699999999785, 0.00011349999999999902...</msg>
<status status="PASS" starttime="20201029 18:16:18.261" endtime="20201029 18:16:18.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.269" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.268" endtime="20201029 18:16:18.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.271" level="INFO">VALUE: [0.00011411100000000007, 0.00011374999999999927, 0.00011349999999999902, 0.00011363899999999871, 0.00011406900000000136, 0.00011338900000000193, 0.00011366699999999785, 0.00011349999999999902, 0.00011336099999999932, 0.00011354199999999773, 0.00011338900000000193, 0.0001133749999999989, 0.00011411100000000007, 0.00011326399999999834, 0.00011330500000000104, 0.00011345800000000031, 0.00011391599999999863, 0.00011312500000000211, 0.00011311099999999907, 0.00011349999999999902, 0.00011338899999999846, 0.00011330600000000052, 0.00011347299999999935, 0.00011327800000000138, 0.00011398599999999995, 0.00011399999999999952, 0.00011416700000000182, 0.00011312499999999864, 0.00011416599999999888, 0.00011394399999999777, 0.00011333300000000018, 0.00011376399999999884, 0.00011361099999999957, 0.00011380600000000102, 0.00011333399999999966, 0.0001140420000000017, 0.00011380600000000102, 0.00011312499999999864, 0.00011324999999999877, 0.00011404099999999875, 0.00011341599999999813, 0.00011330500000000104, 0.00011313900000000168, 0.00011338899999999846, 0.0001135420000000012, 0.00011338900000000193, 0.0001138749999999994, 0.00011411100000000007, 0.0001138749999999994, 0.00011420800000000106]</msg>
<status status="PASS" starttime="20201029 18:16:18.270" endtime="20201029 18:16:18.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.265" endtime="20201029 18:16:18.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.276" endtime="20201029 18:16:18.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.275" endtime="20201029 18:16:18.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.274" endtime="20201029 18:16:18.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.911" endtime="20201029 18:16:18.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.910" endtime="20201029 18:16:18.297"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.306" endtime="20201029 18:16:18.328"></status>
</kw>
<msg timestamp="20201029 18:16:18.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.304" endtime="20201029 18:16:18.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.330" endtime="20201029 18:16:18.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.332" endtime="20201029 18:16:18.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.302" endtime="20201029 18:16:18.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.300" endtime="20201029 18:16:18.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.342" endtime="20201029 18:16:18.627"></status>
</kw>
<msg timestamp="20201029 18:16:18.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021198667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021313542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.340" endtime="20201029 18:16:18.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021198667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021313542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.632" endtime="20201029 18:16:18.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.640" endtime="20201029 18:16:18.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.338" endtime="20201029 18:16:18.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.336" endtime="20201029 18:16:18.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.647" level="INFO">${RESULT} = [{'diff': 0.0001148750000000004}, {'diff': 0.0001150559999999988}, {'diff': 0.00011481999999999812}, {'diff': 0.00011417999999999845}, {'diff': 0.00011463899999999971}, {'diff': 0.00011451399999999959...</msg>
<status status="PASS" starttime="20201029 18:16:18.643" endtime="20201029 18:16:18.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.651" level="INFO">${ACCURACY} = {'diff': [0.0001148750000000004, 0.0001150559999999988, 0.00011481999999999812, 0.00011417999999999845, 0.00011463899999999971, 0.00011451399999999959, 0.00011454099999999925, 0.00011479200000000245, ...</msg>
<status status="PASS" starttime="20201029 18:16:18.648" endtime="20201029 18:16:18.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.655" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.654" endtime="20201029 18:16:18.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.658" level="INFO">VALUE: [0.0001148750000000004, 0.0001150559999999988, 0.00011481999999999812, 0.00011417999999999845, 0.00011463899999999971, 0.00011451399999999959, 0.00011454099999999925, 0.00011479200000000245, 0.00011465299999999928, 0.00011430599999999805, 0.00011508400000000141, 0.00011486099999999735, 0.00011519499999999849, 0.00011427799999999891, 0.0001145689999999984, 0.00011483299999999821, 0.00011517999999999945, 0.00011484700000000125, 0.0001151109999999976, 0.00011448600000000045, 0.00011483299999999821, 0.00011447200000000088, 0.00011488899999999996, 0.00011445899999999731, 0.00011444500000000121, 0.0001150559999999988, 0.0001145420000000022, 0.00011444399999999827, 0.00011481899999999864, 0.00011484700000000125, 0.00011462500000000014, 0.00011519500000000196, 0.00011430600000000152, 0.0001140970000000005, 0.00011445899999999731, 0.0001144030000000025, 0.00011426299999999986, 0.00011501400000000009, 0.00011512499999999717, 0.00011519399999999902, 0.0001145689999999984, 0.00011502799999999966, 0.0001143749999999999, 0.00011519499999999849, 0.00011498600000000095, 0.00011429199999999848, 0.00011445900000000078, 0.00011448600000000045, 0.00011415200000000278, 0.00011451300000000011]</msg>
<status status="PASS" starttime="20201029 18:16:18.657" endtime="20201029 18:16:18.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.652" endtime="20201029 18:16:18.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.664" endtime="20201029 18:16:18.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.662" endtime="20201029 18:16:18.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.661" endtime="20201029 18:16:18.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.298" endtime="20201029 18:16:18.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.297" endtime="20201029 18:16:18.685"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.694" endtime="20201029 18:16:18.715"></status>
</kw>
<msg timestamp="20201029 18:16:18.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.692" endtime="20201029 18:16:18.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.716" endtime="20201029 18:16:18.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.719" endtime="20201029 18:16:18.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.689" endtime="20201029 18:16:18.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.687" endtime="20201029 18:16:18.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.728" endtime="20201029 18:16:19.014"></status>
</kw>
<msg timestamp="20201029 18:16:19.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020065278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020181222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.727" endtime="20201029 18:16:19.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020065278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020181222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.018" endtime="20201029 18:16:19.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.026" endtime="20201029 18:16:19.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.724" endtime="20201029 18:16:19.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.722" endtime="20201029 18:16:19.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.033" level="INFO">${RESULT} = [{'diff': 0.00011594399999999977}, {'diff': 0.00011581899999999964}, {'diff': 0.00011511100000000107}, {'diff': 0.000115388999999997}, {'diff': 0.00011618099999999992}, {'diff': 0.00011543099999999917...</msg>
<status status="PASS" starttime="20201029 18:16:19.030" endtime="20201029 18:16:19.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.038" level="INFO">${ACCURACY} = {'diff': [0.00011594399999999977, 0.00011581899999999964, 0.00011511100000000107, 0.000115388999999997, 0.00011618099999999992, 0.00011543099999999917, 0.00011590299999999706, 0.00011530600000000252, ...</msg>
<status status="PASS" starttime="20201029 18:16:19.034" endtime="20201029 18:16:19.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.043" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.042" endtime="20201029 18:16:19.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.045" level="INFO">VALUE: [0.00011594399999999977, 0.00011581899999999964, 0.00011511100000000107, 0.000115388999999997, 0.00011618099999999992, 0.00011543099999999917, 0.00011590299999999706, 0.00011530600000000252, 0.00011619400000000002, 0.00011622200000000263, 0.00011604100000000075, 0.00011563900000000071, 0.00011575000000000127, 0.0001161109999999986, 0.00011604200000000023, 0.00011618099999999992, 0.00011562499999999767, 0.00011548600000000145, 0.00011600000000000152, 0.00011512500000000064, 0.00011583299999999921, 0.00011608299999999946, 0.00011576400000000084, 0.00011566699999999985, 0.00011576400000000084, 0.00011569499999999899, 0.0001157499999999978, 0.0001155559999999993, 0.0001155559999999993, 0.00011568099999999942, 0.00011512500000000064, 0.00011581899999999964, 0.00011605500000000032, 0.00011549999999999755, 0.00011558300000000243, 0.00011573599999999823, 0.00011562500000000114, 0.00011559800000000148, 0.00011550000000000102, 0.00011531999999999862, 0.00011618099999999992, 0.00011619400000000002, 0.00011581899999999964, 0.00011525000000000077, 0.00011530499999999957, 0.0001155550000000033, 0.00011538900000000046, 0.00011523599999999773, 0.00011598600000000195, 0.00011594499999999924]</msg>
<status status="PASS" starttime="20201029 18:16:19.044" endtime="20201029 18:16:19.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.039" endtime="20201029 18:16:19.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.051" endtime="20201029 18:16:19.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.049" endtime="20201029 18:16:19.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.048" endtime="20201029 18:16:19.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.686" endtime="20201029 18:16:19.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.685" endtime="20201029 18:16:19.071"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.080" endtime="20201029 18:16:19.102"></status>
</kw>
<msg timestamp="20201029 18:16:19.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.079" endtime="20201029 18:16:19.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.104" endtime="20201029 18:16:19.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.107" endtime="20201029 18:16:19.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.076" endtime="20201029 18:16:19.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.074" endtime="20201029 18:16:19.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.116" endtime="20201029 18:16:19.402"></status>
</kw>
<msg timestamp="20201029 18:16:19.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020186431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020303056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.114" endtime="20201029 18:16:19.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020186431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020303056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.407" endtime="20201029 18:16:19.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.415" endtime="20201029 18:16:19.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.112" endtime="20201029 18:16:19.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.110" endtime="20201029 18:16:19.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.422" level="INFO">${RESULT} = [{'diff': 0.00011662499999999867}, {'diff': 0.00011702799999999819}, {'diff': 0.00011644400000000027}, {'diff': 0.00011649999999999855}, {'diff': 0.00011651399999999812}, {'diff': 0.000116929999999997...</msg>
<status status="PASS" starttime="20201029 18:16:19.419" endtime="20201029 18:16:19.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.426" level="INFO">${ACCURACY} = {'diff': [0.00011662499999999867, 0.00011702799999999819, 0.00011644400000000027, 0.00011649999999999855, 0.00011651399999999812, 0.00011692999999999773, 0.00011686099999999935, 0.0001162360000000022,...</msg>
<status status="PASS" starttime="20201029 18:16:19.423" endtime="20201029 18:16:19.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.431" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.430" endtime="20201029 18:16:19.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.433" level="INFO">VALUE: [0.00011662499999999867, 0.00011702799999999819, 0.00011644400000000027, 0.00011649999999999855, 0.00011651399999999812, 0.00011692999999999773, 0.00011686099999999935, 0.0001162360000000022, 0.00011637499999999842, 0.00011623599999999873, 0.00011677699999999847, 0.00011623700000000167, 0.00011701299999999915, 0.00011638900000000146, 0.00011641600000000113, 0.00011663800000000224, 0.00011699999999999905, 0.00011719400000000102, 0.00011623599999999873, 0.00011719500000000049, 0.00011643100000000017, 0.00011715299999999831, 0.00011712499999999917, 0.0001167629999999989, 0.00011719400000000102, 0.0001167629999999989, 0.00011658299999999996, 0.0001169300000000012, 0.00011637499999999842, 0.00011715299999999831, 0.0001171109999999996, 0.00011622199999999916, 0.00011686099999999935, 0.00011645899999999931, 0.000116291000000001, 0.00011698599999999948, 0.00011655500000000082, 0.00011695800000000034, 0.00011647199999999941, 0.00011720800000000059, 0.00011699999999999905, 0.0001169309999999972, 0.00011684699999999978, 0.0001164170000000006, 0.00011686100000000282, 0.00011695899999999981, 0.00011672299999999913, 0.0001170690000000009, 0.00011633299999999971, 0.00011704200000000123]</msg>
<status status="PASS" starttime="20201029 18:16:19.432" endtime="20201029 18:16:19.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.427" endtime="20201029 18:16:19.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.438" endtime="20201029 18:16:19.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.437" endtime="20201029 18:16:19.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.436" endtime="20201029 18:16:19.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.072" endtime="20201029 18:16:19.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.072" endtime="20201029 18:16:19.459"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.468" endtime="20201029 18:16:19.490"></status>
</kw>
<msg timestamp="20201029 18:16:19.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.467" endtime="20201029 18:16:19.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.492" endtime="20201029 18:16:19.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.494" endtime="20201029 18:16:19.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.464" endtime="20201029 18:16:19.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.462" endtime="20201029 18:16:19.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.504" endtime="20201029 18:16:19.790"></status>
</kw>
<msg timestamp="20201029 18:16:19.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021293361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021410833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.502" endtime="20201029 18:16:19.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021293361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021410833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.794" endtime="20201029 18:16:19.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.802" endtime="20201029 18:16:19.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.500" endtime="20201029 18:16:19.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.498" endtime="20201029 18:16:19.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.809" level="INFO">${RESULT} = [{'diff': 0.00011747200000000041}, {'diff': 0.00011772200000000066}, {'diff': 0.00011751399999999912}, {'diff': 0.00011797200000000091}, {'diff': 0.00011725000000000277}, {'diff': 0.000117291999999998...</msg>
<status status="PASS" starttime="20201029 18:16:19.805" endtime="20201029 18:16:19.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.813" level="INFO">${ACCURACY} = {'diff': [0.00011747200000000041, 0.00011772200000000066, 0.00011751399999999912, 0.00011797200000000091, 0.00011725000000000277, 0.00011729199999999801, 0.00011787499999999992, 0.00011772200000000066...</msg>
<status status="PASS" starttime="20201029 18:16:19.810" endtime="20201029 18:16:19.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.818" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.816" endtime="20201029 18:16:19.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.820" level="INFO">VALUE: [0.00011747200000000041, 0.00011772200000000066, 0.00011751399999999912, 0.00011797200000000091, 0.00011725000000000277, 0.00011729199999999801, 0.00011787499999999992, 0.00011772200000000066, 0.00011766700000000185, 0.00011712499999999917, 0.00011772200000000066, 0.00011795799999999787, 0.00011740300000000203, 0.000118082999999998, 0.00011819399999999855, 0.0001172499999999993, 0.00011798600000000048, 0.00011730500000000157, 0.00011818099999999845, 0.00011800000000000005, 0.00011773600000000023, 0.00011779099999999904, 0.00011780500000000207, 0.00011738900000000246, 0.00011817999999999898, 0.00011725000000000277, 0.00011798600000000048, 0.00011712500000000264, 0.00011730600000000105, 0.00011755500000000182, 0.00011744499999999727, 0.00011782000000000112, 0.00011730600000000105, 0.00011748599999999998, 0.0001179439999999983, 0.0001179300000000022, 0.00011749999999999955, 0.00011754200000000173, 0.00011773599999999676, 0.00011730600000000105, 0.00011800000000000005, 0.00011766599999999891, 0.00011709800000000298, 0.00011748699999999945, 0.00011712499999999917, 0.00011751400000000259, 0.00011713900000000221, 0.0001173049999999981, 0.00011752799999999869, 0.00011732000000000062]</msg>
<status status="PASS" starttime="20201029 18:16:19.819" endtime="20201029 18:16:19.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.814" endtime="20201029 18:16:19.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.826" endtime="20201029 18:16:19.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.825" endtime="20201029 18:16:19.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.823" endtime="20201029 18:16:19.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.460" endtime="20201029 18:16:19.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.459" endtime="20201029 18:16:19.847"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.856" endtime="20201029 18:16:19.877"></status>
</kw>
<msg timestamp="20201029 18:16:19.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.854" endtime="20201029 18:16:19.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.878" endtime="20201029 18:16:19.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.881" endtime="20201029 18:16:19.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.851" endtime="20201029 18:16:19.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.849" endtime="20201029 18:16:19.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.890" endtime="20201029 18:16:20.177"></status>
</kw>
<msg timestamp="20201029 18:16:20.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.889" endtime="20201029 18:16:20.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.182" endtime="20201029 18:16:20.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.190" endtime="20201029 18:16:20.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.886" endtime="20201029 18:16:20.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.884" endtime="20201029 18:16:20.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.197" level="INFO">${RESULT} = [{'diff': 0.00011872200000000166}, {'diff': 0.00011909700000000203}, {'diff': 0.00011830600000000205}, {'diff': 0.00011840299999999956}, {'diff': 0.00011883399999999822}, {'diff': 0.000118736000000001...</msg>
<status status="PASS" starttime="20201029 18:16:20.193" endtime="20201029 18:16:20.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.202" level="INFO">${ACCURACY} = {'diff': [0.00011872200000000166, 0.00011909700000000203, 0.00011830600000000205, 0.00011840299999999956, 0.00011883399999999822, 0.00011873600000000123, 0.00011887499999999745, 0.0001189309999999992,...</msg>
<status status="PASS" starttime="20201029 18:16:20.198" endtime="20201029 18:16:20.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.207" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.205" endtime="20201029 18:16:20.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.209" level="INFO">VALUE: [0.00011872200000000166, 0.00011909700000000203, 0.00011830600000000205, 0.00011840299999999956, 0.00011883399999999822, 0.00011873600000000123, 0.00011887499999999745, 0.0001189309999999992, 0.00011898599999999801, 0.00011862500000000067, 0.00011892999999999973, 0.00011919399999999955, 0.00011830599999999858, 0.00011874999999999733, 0.00011851399999999665, 0.00011895899999999834, 0.0001184309999999987, 0.0001189309999999992, 0.0001187500000000008, 0.00011916600000000041, 0.0001184439999999988, 0.0001182500000000003, 0.0001188890000000005, 0.00011863900000000024, 0.00011900000000000105, 0.00011901400000000062, 0.00011845800000000184, 0.00011887500000000092, 0.00011907000000000237, 0.00011916600000000041, 0.00011913900000000074, 0.00011906899999999943, 0.00011837500000000042, 0.0001184439999999988, 0.00011836099999999738, 0.00011913900000000074, 0.00011831999999999815, 0.00011901400000000062, 0.0001189309999999992, 0.0001187500000000008, 0.00011837500000000042, 0.00011855499999999936, 0.00011845800000000184, 0.00011865299999999981, 0.00011831899999999868, 0.0001191110000000016, 0.00011866699999999938, 0.00011894500000000224, 0.00011909799999999804, 0.00011847199999999794]</msg>
<status status="PASS" starttime="20201029 18:16:20.208" endtime="20201029 18:16:20.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.203" endtime="20201029 18:16:20.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.214" endtime="20201029 18:16:20.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.213" endtime="20201029 18:16:20.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.211" endtime="20201029 18:16:20.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.848" endtime="20201029 18:16:20.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.847" endtime="20201029 18:16:20.235"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.244" endtime="20201029 18:16:20.266"></status>
</kw>
<msg timestamp="20201029 18:16:20.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.242" endtime="20201029 18:16:20.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.267" endtime="20201029 18:16:20.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.270" endtime="20201029 18:16:20.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.240" endtime="20201029 18:16:20.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.237" endtime="20201029 18:16:20.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.279" endtime="20201029 18:16:20.567"></status>
</kw>
<msg timestamp="20201029 18:16:20.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020202972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0203225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:20.278" endtime="20201029 18:16:20.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020202972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0203225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:20.571" endtime="20201029 18:16:20.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.579" endtime="20201029 18:16:20.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.275" endtime="20201029 18:16:20.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.273" endtime="20201029 18:16:20.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.586" level="INFO">${RESULT} = [{'diff': 0.00011952800000000069}, {'diff': 0.00011979199999999704}, {'diff': 0.00011950000000000155}, {'diff': 0.0001200699999999999}, {'diff': 0.00011937499999999795}, {'diff': 0.0001194170000000001...</msg>
<status status="PASS" starttime="20201029 18:16:20.583" endtime="20201029 18:16:20.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.590" level="INFO">${ACCURACY} = {'diff': [0.00011952800000000069, 0.00011979199999999704, 0.00011950000000000155, 0.0001200699999999999, 0.00011937499999999795, 0.00011941700000000013, 0.00011979200000000051, 0.0001196249999999982, ...</msg>
<status status="PASS" starttime="20201029 18:16:20.587" endtime="20201029 18:16:20.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.595" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.594" endtime="20201029 18:16:20.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.597" level="INFO">VALUE: [0.00011952800000000069, 0.00011979199999999704, 0.00011950000000000155, 0.0001200699999999999, 0.00011937499999999795, 0.00011941700000000013, 0.00011979200000000051, 0.0001196249999999982, 0.00011997199999999944, 0.00011955500000000036, 0.00012019399999999708, 0.0001196249999999982, 0.00011968099999999995, 0.00011913900000000074, 0.00011912500000000117, 0.00011983399999999922, 0.00011980600000000008, 0.00011999999999999858, 0.00011915300000000031, 0.00011968099999999995, 0.00011983299999999975, 0.00011956899999999993, 0.0001200699999999999, 0.00011968099999999995, 0.00011923599999999826, 0.00011930599999999958, 0.00011940300000000056, 0.00011950000000000155, 0.00011991700000000063, 0.00011966700000000038, 0.00011948599999999851, 0.00011956899999999993, 0.00011993000000000073, 0.00011970799999999962, 0.00011980600000000008, 0.00012000000000000205, 0.00011931999999999915, 0.00011966700000000038, 0.00011983299999999975, 0.0001194309999999997, 0.00011963900000000124, 0.00011945899999999884, 0.0001193050000000001, 0.00012017999999999751, 0.0001198890000000015, 0.00011980600000000008, 0.00011997299999999891, 0.00011968099999999995, 0.00011965199999999787, 0.00011994499999999977]</msg>
<status status="PASS" starttime="20201029 18:16:20.596" endtime="20201029 18:16:20.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.591" endtime="20201029 18:16:20.599"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.602" endtime="20201029 18:16:20.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.601" endtime="20201029 18:16:20.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.600" endtime="20201029 18:16:20.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.236" endtime="20201029 18:16:20.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.235" endtime="20201029 18:16:20.623"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.632" endtime="20201029 18:16:20.659"></status>
</kw>
<msg timestamp="20201029 18:16:20.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.631" endtime="20201029 18:16:20.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.660" endtime="20201029 18:16:20.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.663" endtime="20201029 18:16:20.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.628" endtime="20201029 18:16:20.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.626" endtime="20201029 18:16:20.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.672" endtime="20201029 18:16:20.959"></status>
</kw>
<msg timestamp="20201029 18:16:20.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024977264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025098375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.671" endtime="20201029 18:16:20.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024977264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025098375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.963" endtime="20201029 18:16:20.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.971" endtime="20201029 18:16:20.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.668" endtime="20201029 18:16:20.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.666" endtime="20201029 18:16:20.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.978" level="INFO">${RESULT} = [{'diff': 0.00012111100000000014}, {'diff': 0.00012099999999999958}, {'diff': 0.00012074999999999933}, {'diff': 0.00012086099999999989}, {'diff': 0.00012056999999999693}, {'diff': 0.000120999999999999...</msg>
<status status="PASS" starttime="20201029 18:16:20.975" endtime="20201029 18:16:20.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.982" level="INFO">${ACCURACY} = {'diff': [0.00012111100000000014, 0.00012099999999999958, 0.00012074999999999933, 0.00012086099999999989, 0.00012056999999999693, 0.00012099999999999958, 0.00012106900000000143, 0.0001208189999999977,...</msg>
<status status="PASS" starttime="20201029 18:16:20.979" endtime="20201029 18:16:20.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.987" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.986" endtime="20201029 18:16:20.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.989" level="INFO">VALUE: [0.00012111100000000014, 0.00012099999999999958, 0.00012074999999999933, 0.00012086099999999989, 0.00012056999999999693, 0.00012099999999999958, 0.00012106900000000143, 0.0001208189999999977, 0.00012063900000000224, 0.00012063900000000224, 0.00012116599999999894, 0.00012105499999999839, 0.00012088899999999903, 0.0001210969999999971, 0.00012024999999999883, 0.00012015199999999837, 0.00012086099999999989, 0.00012099999999999958, 0.00012116599999999894, 0.00012099999999999958, 0.00012042999999999776, 0.00012069400000000105, 0.00012074999999999933, 0.00012049999999999908, 0.00012038899999999852, 0.00012055600000000083, 0.00012119500000000102, 0.00012099999999999958, 0.00012056900000000093, 0.0001203050000000011, 0.00012083299999999728, 0.00012061099999999964, 0.00012106899999999796, 0.00012101399999999915, 0.00012074999999999933, 0.00012072200000000019, 0.00012113899999999928, 0.00012055600000000083, 0.0001204029999999981, 0.0001208050000000016, 0.0001205700000000004, 0.00012086099999999989, 0.00012065199999999887, 0.00012069400000000105, 0.0001204440000000008, 0.00012058399999999997, 0.00012068099999999748, 0.00012119499999999755, 0.00012116700000000188, 0.00012080600000000108]</msg>
<status status="PASS" starttime="20201029 18:16:20.988" endtime="20201029 18:16:21.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.983" endtime="20201029 18:16:21.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:21.014" endtime="20201029 18:16:21.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.013" endtime="20201029 18:16:21.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.012" endtime="20201029 18:16:21.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.624" endtime="20201029 18:16:21.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.624" endtime="20201029 18:16:21.035"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.045" endtime="20201029 18:16:21.066"></status>
</kw>
<msg timestamp="20201029 18:16:21.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.043" endtime="20201029 18:16:21.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.067" endtime="20201029 18:16:21.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.070" endtime="20201029 18:16:21.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.040" endtime="20201029 18:16:21.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.038" endtime="20201029 18:16:21.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.079" endtime="20201029 18:16:21.365"></status>
</kw>
<msg timestamp="20201029 18:16:21.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021615444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.077" endtime="20201029 18:16:21.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021615444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.369" endtime="20201029 18:16:21.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.378" endtime="20201029 18:16:21.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.075" endtime="20201029 18:16:21.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.073" endtime="20201029 18:16:21.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:21.384" level="INFO">${RESULT} = [{'diff': 0.00012172200000000119}, {'diff': 0.00012150000000000008}, {'diff': 0.00012205600000000233}, {'diff': 0.0001217639999999999}, {'diff': 0.00012208299999999853}, {'diff': 0.0001217639999999999...</msg>
<status status="PASS" starttime="20201029 18:16:21.381" endtime="20201029 18:16:21.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:21.389" level="INFO">${ACCURACY} = {'diff': [0.00012172200000000119, 0.00012150000000000008, 0.00012205600000000233, 0.0001217639999999999, 0.00012208299999999853, 0.0001217639999999999, 0.00012123600000000026, 0.00012111100000000014, ...</msg>
<status status="PASS" starttime="20201029 18:16:21.385" endtime="20201029 18:16:21.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.394" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:16:21.393" endtime="20201029 18:16:21.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.397" level="INFO">VALUE: [0.00012172200000000119, 0.00012150000000000008, 0.00012205600000000233, 0.0001217639999999999, 0.00012208299999999853, 0.0001217639999999999, 0.00012123600000000026, 0.00012111100000000014, 0.00012205599999999886, 0.00012216699999999941, 0.00012208400000000147, 0.00012194500000000177, 0.0001221250000000007, 0.0001217639999999999, 0.00012198599999999754, 0.0001216250000000002, 0.00012159700000000107, 0.00012205499999999939, 0.00012158299999999803, 0.00012193099999999873, 0.00012197199999999797, 0.00012180599999999861, 0.00012116600000000241, 0.00012138800000000005, 0.00012211100000000114, 0.0001216250000000002, 0.00012138899999999953, 0.00012179199999999904, 0.00012199999999999711, 0.0001216250000000002, 0.00012159800000000054, 0.00012208400000000147, 0.00012187500000000046, 0.00012218099999999898, 0.00012195800000000187, 0.0001221799999999995, 0.00012187500000000046, 0.00012200000000000058, 0.0001211249999999997, 0.0001218189999999987, 0.0001214449999999978, 0.00012138899999999953, 0.00012122199999999722, 0.00012184800000000079, 0.00012205599999999886, 0.0001211379999999998, 0.00012204099999999982, 0.00012148600000000051, 0.00012187500000000046, 0.0001213189999999982]</msg>
<status status="PASS" starttime="20201029 18:16:21.395" endtime="20201029 18:16:21.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.390" endtime="20201029 18:16:21.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:21.402" endtime="20201029 18:16:21.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.400" endtime="20201029 18:16:21.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.399" endtime="20201029 18:16:21.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.036" endtime="20201029 18:16:21.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.036" endtime="20201029 18:16:21.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.188" endtime="20201029 18:16:21.423"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:42.113" endtime="20201029 18:16:21.423" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:59.166" endtime="20201029 18:16:21.427"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.482" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:16:21.491" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:16:22.520" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:16:21.481" endtime="20201029 18:16:22.521"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.524" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 18:16:22.522" endtime="20201029 18:16:23.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.480" endtime="20201029 18:16:23.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:23.532" endtime="20201029 18:16:23.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.528" endtime="20201029 18:16:23.727"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.742" endtime="20201029 18:16:23.765"></status>
</kw>
<msg timestamp="20201029 18:16:23.766" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.739" endtime="20201029 18:16:23.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.769" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.767" endtime="20201029 18:16:23.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.772" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:23.770" endtime="20201029 18:16:23.772"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:23.736" endtime="20201029 18:16:23.773"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:23.733" endtime="20201029 18:16:23.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.732" endtime="20201029 18:16:23.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:23.780" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:23.779" endtime="20201029 18:16:23.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.775" endtime="20201029 18:16:23.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.731" endtime="20201029 18:16:23.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.730" endtime="20201029 18:16:23.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.783" endtime="20201029 18:16:23.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.729" endtime="20201029 18:16:23.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.787" endtime="20201029 18:16:23.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.727" endtime="20201029 18:16:23.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.479" endtime="20201029 18:16:23.791"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:23.798" endtime="20201029 18:16:23.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.796" endtime="20201029 18:16:23.818"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.831" endtime="20201029 18:16:23.848"></status>
</kw>
<msg timestamp="20201029 18:16:23.849" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.830" endtime="20201029 18:16:23.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.850" endtime="20201029 18:16:23.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.856" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:23.853" endtime="20201029 18:16:23.856"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:23.827" endtime="20201029 18:16:23.857"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:23.824" endtime="20201029 18:16:23.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.823" endtime="20201029 18:16:23.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:23.861" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:23.861" endtime="20201029 18:16:23.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.858" endtime="20201029 18:16:23.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.822" endtime="20201029 18:16:23.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.822" endtime="20201029 18:16:23.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.863" endtime="20201029 18:16:23.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.820" endtime="20201029 18:16:23.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.819" endtime="20201029 18:16:23.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.795" endtime="20201029 18:16:23.866"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.874" endtime="20201029 18:16:30.001"></status>
</kw>
<msg timestamp="20201029 18:16:30.002" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.873" endtime="20201029 18:16:30.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.008" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.004" endtime="20201029 18:16:30.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.010" endtime="20201029 18:16:30.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.870" endtime="20201029 18:16:30.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.868" endtime="20201029 18:16:30.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.021" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:16:30.017" endtime="20201029 18:16:30.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.031" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:30.029" endtime="20201029 18:16:30.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.036" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:30.033" endtime="20201029 18:16:30.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.023" endtime="20201029 18:16:30.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.046" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:30.044" endtime="20201029 18:16:30.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.049" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:30.048" endtime="20201029 18:16:30.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.039" endtime="20201029 18:16:30.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.053" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:30.052" endtime="20201029 18:16:30.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.056" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:16:30.055" endtime="20201029 18:16:30.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.050" endtime="20201029 18:16:30.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.063" endtime="20201029 18:16:30.359"></status>
</kw>
<msg timestamp="20201029 18:16:30.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066304208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166395944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.061" endtime="20201029 18:16:30.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066304208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166395944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.363" endtime="20201029 18:16:30.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.370" endtime="20201029 18:16:30.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.059" endtime="20201029 18:16:30.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.057" endtime="20201029 18:16:30.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:30.377" level="INFO">${FILTERED} = [{'diff': 0.10009173599999999}, {'diff': 0.09994876399999997}, {'diff': 0.10000769399999998}, {'diff': 0.10000980500000001}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 18:16:30.374" endtime="20201029 18:16:30.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.381" level="INFO">${RESULT} = {'diff': [0.10009173599999999, 0.09994876399999997, 0.10000769399999998, 0.10000980500000001, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922...</msg>
<status status="PASS" starttime="20201029 18:16:30.378" endtime="20201029 18:16:30.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.385" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:30.384" endtime="20201029 18:16:30.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.387" level="INFO">VALUE: [0.10009173599999999, 0.09994876399999997, 0.10000769399999998, 0.10000980500000001, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000815299999988, 0.1000097080000002, 0.10000767999999982, 0.10000973600000007, 5.419999999922709e-07, 0.10000818000000011, 0.1000097219999998, 0.10000769399999987, 0.1000097080000002, 0.10000774999999962, 5.410000003536197e-07, 5.409999999095305e-07, 0.10000820899999985, 0.10000973600000007, 0.10001029100000025, 5.419999999922709e-07, 0.10000819399999994, 0.1000097219999998, 0.10000768000000004, 0.10000970799999997, 0.10000769399999987, 0.10000972200000025, 0.10000769399999987, 0.10000972200000025, 0.10000769399999987, 0.10000973599999963, 0.10000769400000031, 0.10000970799999997, 0.10000769399999943, 0.10000970799999997, 0.10000769400000031, 0.10000972200000025, 0.10000772199999997, 5.419999995481817e-07, 5.419999995481817e-07, 0.10000818100000064]</msg>
<status status="PASS" starttime="20201029 18:16:30.386" endtime="20201029 18:16:30.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.382" endtime="20201029 18:16:30.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.867" endtime="20201029 18:16:30.389"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:23.792" endtime="20201029 18:16:30.390" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:30.397" endtime="20201029 18:16:30.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.395" endtime="20201029 18:16:30.417"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.431" endtime="20201029 18:16:30.447"></status>
</kw>
<msg timestamp="20201029 18:16:30.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.429" endtime="20201029 18:16:30.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.450" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.448" endtime="20201029 18:16:30.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.453" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:30.451" endtime="20201029 18:16:30.453"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:30.426" endtime="20201029 18:16:30.454"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:30.423" endtime="20201029 18:16:30.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.422" endtime="20201029 18:16:30.455"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:30.459" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:30.458" endtime="20201029 18:16:30.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.456" endtime="20201029 18:16:30.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.421" endtime="20201029 18:16:30.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.420" endtime="20201029 18:16:30.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.461" endtime="20201029 18:16:30.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.419" endtime="20201029 18:16:30.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.417" endtime="20201029 18:16:30.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.394" endtime="20201029 18:16:30.463"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.472" endtime="20201029 18:16:36.598"></status>
</kw>
<msg timestamp="20201029 18:16:36.599" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.470" endtime="20201029 18:16:36.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.605" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.602" endtime="20201029 18:16:36.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.607" endtime="20201029 18:16:36.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.468" endtime="20201029 18:16:36.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.466" endtime="20201029 18:16:36.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.618" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:16:36.615" endtime="20201029 18:16:36.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.628" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:36.626" endtime="20201029 18:16:36.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.633" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:36.630" endtime="20201029 18:16:36.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.621" endtime="20201029 18:16:36.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.643" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:36.641" endtime="20201029 18:16:36.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.646" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:36.645" endtime="20201029 18:16:36.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.636" endtime="20201029 18:16:36.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.652" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:36.651" endtime="20201029 18:16:36.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.654" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:16:36.653" endtime="20201029 18:16:36.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.647" endtime="20201029 18:16:36.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.661" endtime="20201029 18:16:36.959"></status>
</kw>
<msg timestamp="20201029 18:16:36.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064641056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164737889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.660" endtime="20201029 18:16:36.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064641056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164737889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.963" endtime="20201029 18:16:36.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.970" endtime="20201029 18:16:36.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.657" endtime="20201029 18:16:36.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.655" endtime="20201029 18:16:36.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:36.977" level="INFO">${FILTERED} = [{'diff': 0.100096833}, {'diff': 0.09994487500000002}, {'diff': 0.10003399999999996}, {'diff': 0.09998172200000005}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999...</msg>
<status status="PASS" starttime="20201029 18:16:36.974" endtime="20201029 18:16:36.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.981" level="INFO">${RESULT} = {'diff': [0.100096833, 0.09994487500000002, 0.10003399999999996, 0.09998172200000005, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07,...</msg>
<status status="PASS" starttime="20201029 18:16:36.978" endtime="20201029 18:16:36.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.985" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:36.984" endtime="20201029 18:16:36.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.988" level="INFO">VALUE: [0.100096833, 0.09994487500000002, 0.10003399999999996, 0.09998172200000005, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100009236, 5.410000001315751e-07, 0.10001022299999995, 0.10000869500000009, 0.10000770900000022, 0.10000873700000001, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.1000092079999999, 0.1000077079999997, 0.10000877799999941, 0.10000922199999973, 0.1000077079999997, 0.10000873599999949, 0.1000096939999997, 0.1000086799999993, 0.10000768000000004, 0.1000087780000003, 0.1000091800000007]</msg>
<status status="PASS" starttime="20201029 18:16:36.987" endtime="20201029 18:16:36.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.982" endtime="20201029 18:16:36.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.464" endtime="20201029 18:16:36.990"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:30.391" endtime="20201029 18:16:36.990" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.998" endtime="20201029 18:16:37.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.996" endtime="20201029 18:16:37.018"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.031" endtime="20201029 18:16:37.050"></status>
</kw>
<msg timestamp="20201029 18:16:37.051" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.030" endtime="20201029 18:16:37.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.053" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.052" endtime="20201029 18:16:37.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.056" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:37.054" endtime="20201029 18:16:37.057"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:37.027" endtime="20201029 18:16:37.057"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:37.025" endtime="20201029 18:16:37.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.023" endtime="20201029 18:16:37.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:37.062" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:37.061" endtime="20201029 18:16:37.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.059" endtime="20201029 18:16:37.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.022" endtime="20201029 18:16:37.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.022" endtime="20201029 18:16:37.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.064" endtime="20201029 18:16:37.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.020" endtime="20201029 18:16:37.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.019" endtime="20201029 18:16:37.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.994" endtime="20201029 18:16:37.067"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.075" endtime="20201029 18:16:43.195"></status>
</kw>
<msg timestamp="20201029 18:16:43.195" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.073" endtime="20201029 18:16:43.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.198" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.196" endtime="20201029 18:16:43.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.199" endtime="20201029 18:16:43.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.071" endtime="20201029 18:16:43.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.069" endtime="20201029 18:16:43.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.206" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:16:43.203" endtime="20201029 18:16:43.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.210" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:43.209" endtime="20201029 18:16:43.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.212" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:43.211" endtime="20201029 18:16:43.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.207" endtime="20201029 18:16:43.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.217" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:43.216" endtime="20201029 18:16:43.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.219" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:43.218" endtime="20201029 18:16:43.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.214" endtime="20201029 18:16:43.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.224" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:43.223" endtime="20201029 18:16:43.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.226" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:16:43.225" endtime="20201029 18:16:43.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.221" endtime="20201029 18:16:43.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.234" endtime="20201029 18:16:43.539"></status>
</kw>
<msg timestamp="20201029 18:16:43.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066555181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166688069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.232" endtime="20201029 18:16:43.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066555181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166688069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.543" endtime="20201029 18:16:43.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.549" endtime="20201029 18:16:43.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.230" endtime="20201029 18:16:43.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.228" endtime="20201029 18:16:43.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:43.556" level="INFO">${FILTERED} = [{'diff': 0.10013288799999999}, {'diff': 0.10004116699999999}, {'diff': 0.09987901399999999}, {'diff': 0.10000873600000004}, {'diff': 0.10000924999999994}, {'diff': 5.419999999922709e-07}, {'diff': 5....</msg>
<status status="PASS" starttime="20201029 18:16:43.553" endtime="20201029 18:16:43.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.563" level="INFO">${RESULT} = {'diff': [0.10013288799999999, 0.10004116699999999, 0.09987901399999999, 0.10000873600000004, 0.10000924999999994, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000926399999999, 0.100009236, 0.100...</msg>
<status status="PASS" starttime="20201029 18:16:43.557" endtime="20201029 18:16:43.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.567" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:43.566" endtime="20201029 18:16:43.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.570" level="INFO">VALUE: [0.10013288799999999, 0.10004116699999999, 0.09987901399999999, 0.10000873600000004, 0.10000924999999994, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000926399999999, 0.100009236, 0.10000872199999988, 0.100009236, 0.10000869400000001, 0.10000869400000001, 0.10000869400000001, 0.10000870800000006, 0.10000870799999984, 0.10000870800000028, 0.10000870799999984, 0.10000870799999984, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.100009236, 5.419999999922709e-07, 0.10000922199999973, 0.10000873600000038, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919400000008, 5.409999994654413e-07, 5.410000003536197e-07, 0.10000922299999981, 0.10000873599999949, 0.100009236, 0.10000926400000054]</msg>
<status status="PASS" starttime="20201029 18:16:43.568" endtime="20201029 18:16:43.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.564" endtime="20201029 18:16:43.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.067" endtime="20201029 18:16:43.571"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:36.992" endtime="20201029 18:16:43.572" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:43.579" endtime="20201029 18:16:43.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.577" endtime="20201029 18:16:43.599"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.612" endtime="20201029 18:16:43.637"></status>
</kw>
<msg timestamp="20201029 18:16:43.638" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.610" endtime="20201029 18:16:43.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.645" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.640" endtime="20201029 18:16:43.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.648" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:43.646" endtime="20201029 18:16:43.649"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:43.608" endtime="20201029 18:16:43.649"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:43.605" endtime="20201029 18:16:43.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.604" endtime="20201029 18:16:43.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:43.654" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:43.653" endtime="20201029 18:16:43.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.651" endtime="20201029 18:16:43.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.603" endtime="20201029 18:16:43.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.602" endtime="20201029 18:16:43.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.656" endtime="20201029 18:16:43.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.601" endtime="20201029 18:16:43.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.599" endtime="20201029 18:16:43.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.576" endtime="20201029 18:16:43.659"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.669" endtime="20201029 18:16:49.796"></status>
</kw>
<msg timestamp="20201029 18:16:49.797" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.667" endtime="20201029 18:16:49.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.803" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.799" endtime="20201029 18:16:49.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.805" endtime="20201029 18:16:49.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.664" endtime="20201029 18:16:49.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.661" endtime="20201029 18:16:49.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:49.817" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:16:49.812" endtime="20201029 18:16:49.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.826" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:49.824" endtime="20201029 18:16:49.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.831" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:49.829" endtime="20201029 18:16:49.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.819" endtime="20201029 18:16:49.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.841" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:49.839" endtime="20201029 18:16:49.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.846" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:49.843" endtime="20201029 18:16:49.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.834" endtime="20201029 18:16:49.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.856" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:49.854" endtime="20201029 18:16:49.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.860" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:16:49.858" endtime="20201029 18:16:49.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.849" endtime="20201029 18:16:49.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.876" endtime="20201029 18:16:50.165"></status>
</kw>
<msg timestamp="20201029 18:16:50.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079564083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.179791625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.873" endtime="20201029 18:16:50.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079564083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.179791625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.169" endtime="20201029 18:16:50.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.176" endtime="20201029 18:16:50.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.867" endtime="20201029 18:16:50.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.864" endtime="20201029 18:16:50.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:50.183" level="INFO">${FILTERED} = [{'diff': 0.10022754200000002}, {'diff': 0.10004823600000001}, {'diff': 0.09978013900000005}, {'diff': 0.10000968099999996}, {'diff': 0.10000772200000002}, {'diff': 0.100008722}, {'diff': 0.1000097079...</msg>
<status status="PASS" starttime="20201029 18:16:50.180" endtime="20201029 18:16:50.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:50.187" level="INFO">${RESULT} = {'diff': [0.10022754200000002, 0.10004823600000001, 0.09978013900000005, 0.10000968099999996, 0.10000772200000002, 0.100008722, 0.10000970799999997, 0.10000869400000001, 0.10000768100000001, 0.1000087...</msg>
<status status="PASS" starttime="20201029 18:16:50.184" endtime="20201029 18:16:50.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.191" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:50.190" endtime="20201029 18:16:50.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.194" level="INFO">VALUE: [0.10022754200000002, 0.10004823600000001, 0.09978013900000005, 0.10000968099999996, 0.10000772200000002, 0.100008722, 0.10000970799999997, 0.10000869400000001, 0.10000768100000001, 0.10000876399999992, 5.419999999922709e-07, 0.1000082229999999, 5.410000001315751e-07, 5.419999999922709e-07, 0.10000819500000002, 5.419999999922709e-07, 0.10000920800000013, 0.1000077079999997, 0.10000879200000012, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.410000003536197e-07, 0.10000919500000016, 0.10000970900000006, 0.10000869500000009, 0.10000769399999987, 0.10000870800000028, 0.1000097499999999, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000915300000024, 0.10000772300000005, 5.410000003536197e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10001022199999987, 0.10000868100000027, 0.10000773599999935, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201029 18:16:50.192" endtime="20201029 18:16:50.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.188" endtime="20201029 18:16:50.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.659" endtime="20201029 18:16:50.195"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:43.574" endtime="20201029 18:16:50.196" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:50.202" endtime="20201029 18:16:50.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.201" endtime="20201029 18:16:50.222"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.235" endtime="20201029 18:16:50.253"></status>
</kw>
<msg timestamp="20201029 18:16:50.253" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.233" endtime="20201029 18:16:50.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.256" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.254" endtime="20201029 18:16:50.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.259" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:50.257" endtime="20201029 18:16:50.259"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:50.231" endtime="20201029 18:16:50.260"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:50.228" endtime="20201029 18:16:50.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.227" endtime="20201029 18:16:50.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:50.265" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:50.264" endtime="20201029 18:16:50.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.262" endtime="20201029 18:16:50.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.226" endtime="20201029 18:16:50.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.226" endtime="20201029 18:16:50.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.267" endtime="20201029 18:16:50.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.224" endtime="20201029 18:16:50.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.223" endtime="20201029 18:16:50.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.200" endtime="20201029 18:16:50.270"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.280" endtime="20201029 18:16:56.406"></status>
</kw>
<msg timestamp="20201029 18:16:56.407" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.279" endtime="20201029 18:16:56.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.412" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.409" endtime="20201029 18:16:56.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.414" endtime="20201029 18:16:56.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.276" endtime="20201029 18:16:56.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.273" endtime="20201029 18:16:56.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:56.426" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:16:56.421" endtime="20201029 18:16:56.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.435" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:56.432" endtime="20201029 18:16:56.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.439" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:56.437" endtime="20201029 18:16:56.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.428" endtime="20201029 18:16:56.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.450" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:56.448" endtime="20201029 18:16:56.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.454" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:56.452" endtime="20201029 18:16:56.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.443" endtime="20201029 18:16:56.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.464" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:56.462" endtime="20201029 18:16:56.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.468" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:16:56.467" endtime="20201029 18:16:56.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.458" endtime="20201029 18:16:56.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.483" endtime="20201029 18:16:56.774"></status>
</kw>
<msg timestamp="20201029 18:16:56.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067497375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167839014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:56.480" endtime="20201029 18:16:56.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067497375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167839014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:56.778" endtime="20201029 18:16:56.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.784" endtime="20201029 18:16:56.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.475" endtime="20201029 18:16:56.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.471" endtime="20201029 18:16:56.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:56.791" level="INFO">${FILTERED} = [{'diff': 0.10034163900000001}, {'diff': 5.42000000047782e-07}, {'diff': 5.419999999922709e-07}, {'diff': 0.100007236}, {'diff': 0.10000869400000001}, {'diff': 0.10000874999999998}, {'diff': 5.4199999...</msg>
<status status="PASS" starttime="20201029 18:16:56.788" endtime="20201029 18:16:56.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:56.794" level="INFO">${RESULT} = {'diff': [0.10034163900000001, 5.42000000047782e-07, 5.419999999922709e-07, 0.100007236, 0.10000869400000001, 0.10000874999999998, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000927799999992, 5....</msg>
<status status="PASS" starttime="20201029 18:16:56.792" endtime="20201029 18:16:56.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.799" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:56.798" endtime="20201029 18:16:56.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.801" level="INFO">VALUE: [0.10034163900000001, 5.42000000047782e-07, 5.419999999922709e-07, 0.100007236, 0.10000869400000001, 0.10000874999999998, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000927799999992, 5.409999999095305e-07, 5.409999999095305e-07, 5.410000001315751e-07, 5.410000001315751e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000922200000018, 0.10000870799999984, 0.10000876400000003, 0.10000920800000035, 0.10000869400000001, 0.10000872199999966, 5.409999999095305e-07, 5.410000003536197e-07, 0.10000920899999999, 5.419999999922709e-07, 0.100009236, 0.10000870800000028, 0.10000872199999966, 5.419999999922709e-07, 0.10000919500000016, 0.10000869399999956, 0.10000870799999984, 0.10000922200000062, 0.10000870799999984, 0.1000087780000003, 0.10000922200000062, 0.10000868000000018, 0.10000869500000054]</msg>
<status status="PASS" starttime="20201029 18:16:56.800" endtime="20201029 18:16:56.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.795" endtime="20201029 18:16:56.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.271" endtime="20201029 18:16:56.803"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:50.197" endtime="20201029 18:16:56.803" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:56.809" endtime="20201029 18:16:56.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.808" endtime="20201029 18:16:56.829"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.843" endtime="20201029 18:16:56.861"></status>
</kw>
<msg timestamp="20201029 18:16:56.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.842" endtime="20201029 18:16:56.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.864" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.863" endtime="20201029 18:16:56.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.867" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:56.865" endtime="20201029 18:16:56.867"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:56.839" endtime="20201029 18:16:56.868"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:56.836" endtime="20201029 18:16:56.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.834" endtime="20201029 18:16:56.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:56.873" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:56.872" endtime="20201029 18:16:56.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.870" endtime="20201029 18:16:56.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.834" endtime="20201029 18:16:56.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.833" endtime="20201029 18:16:56.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.874" endtime="20201029 18:16:56.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.832" endtime="20201029 18:16:56.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.830" endtime="20201029 18:16:56.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.807" endtime="20201029 18:16:56.877"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.885" endtime="20201029 18:17:03.005"></status>
</kw>
<msg timestamp="20201029 18:17:03.005" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.883" endtime="20201029 18:17:03.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.008" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.006" endtime="20201029 18:17:03.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.009" endtime="20201029 18:17:03.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.881" endtime="20201029 18:17:03.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.879" endtime="20201029 18:17:03.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:03.014" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:17:03.012" endtime="20201029 18:17:03.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.018" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:03.017" endtime="20201029 18:17:03.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.020" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:03.019" endtime="20201029 18:17:03.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.015" endtime="20201029 18:17:03.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.025" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:03.024" endtime="20201029 18:17:03.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.027" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:03.026" endtime="20201029 18:17:03.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.022" endtime="20201029 18:17:03.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.031" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:03.030" endtime="20201029 18:17:03.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.033" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:17:03.033" endtime="20201029 18:17:03.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.028" endtime="20201029 18:17:03.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.042" endtime="20201029 18:17:03.344"></status>
</kw>
<msg timestamp="20201029 18:17:03.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065035806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165524736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.041" endtime="20201029 18:17:03.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065035806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165524736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.348" endtime="20201029 18:17:03.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.355" endtime="20201029 18:17:03.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.038" endtime="20201029 18:17:03.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.035" endtime="20201029 18:17:03.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:03.361" level="INFO">${FILTERED} = [{'diff': 0.10048893}, {'diff': 5.419999999922709e-07}, {'diff': 0.09947137499999997}, {'diff': 5.419999999922709e-07}, {'diff': 0.100009236}, {'diff': 0.100008722}, {'diff': 5.419999999922709e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:03.358" endtime="20201029 18:17:03.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:03.365" level="INFO">${RESULT} = {'diff': [0.10048893, 5.419999999922709e-07, 0.09947137499999997, 5.419999999922709e-07, 0.100009236, 0.100008722, 5.419999999922709e-07, 5.409999999095305e-07, 0.10000922199999995, 0.1000087080000000...</msg>
<status status="PASS" starttime="20201029 18:17:03.362" endtime="20201029 18:17:03.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.370" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:03.369" endtime="20201029 18:17:03.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.372" level="INFO">VALUE: [0.10048893, 5.419999999922709e-07, 0.09947137499999997, 5.419999999922709e-07, 0.100009236, 0.100008722, 5.419999999922709e-07, 5.409999999095305e-07, 0.10000922199999995, 0.10000870800000006, 0.10000930600000002, 5.410000001315751e-07, 5.410000001315751e-07, 5.409999999095305e-07, 0.10000922199999995, 0.1000087220000001, 5.419999999922709e-07, 0.10000924999999983, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000922300000026, 0.10000870899999992, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.10000924999999983, 0.100009236, 0.10000868099999982, 0.10000870800000028, 0.10000870800000028, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 0.10000922299999981, 0.10000873599999949, 5.420000004363601e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201029 18:17:03.371" endtime="20201029 18:17:03.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.366" endtime="20201029 18:17:03.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.877" endtime="20201029 18:17:03.374"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:56.805" endtime="20201029 18:17:03.374" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:16:21.438" endtime="20201029 18:17:03.381"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:14:08.563" endtime="20201029 18:17:03.415"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
