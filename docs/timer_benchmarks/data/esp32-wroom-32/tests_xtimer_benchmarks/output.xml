<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 15:51:18.339" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.998" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:19.007" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:20.040" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:18.996" endtime="20201030 15:51:20.041"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.044" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 15:51:20.042" endtime="20201030 15:51:21.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.993" endtime="20201030 15:51:21.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.052" endtime="20201030 15:51:21.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.048" endtime="20201030 15:51:21.270"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.300" endtime="20201030 15:51:21.322"></status>
</kw>
<msg timestamp="20201030 15:51:21.322" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.298" endtime="20201030 15:51:21.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.325" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.324" endtime="20201030 15:51:21.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.329" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:21.327" endtime="20201030 15:51:21.330"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:21.291" endtime="20201030 15:51:21.331"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:21.286" endtime="20201030 15:51:21.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.283" endtime="20201030 15:51:21.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:21.339" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:21.338" endtime="20201030 15:51:21.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.334" endtime="20201030 15:51:21.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.282" endtime="20201030 15:51:21.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.279" endtime="20201030 15:51:21.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.340" endtime="20201030 15:51:21.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.276" endtime="20201030 15:51:21.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.343" endtime="20201030 15:51:21.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.271" endtime="20201030 15:51:21.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.991" endtime="20201030 15:51:21.346"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.353" endtime="20201030 15:51:21.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.350" endtime="20201030 15:51:21.373"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.387" endtime="20201030 15:51:21.405"></status>
</kw>
<msg timestamp="20201030 15:51:21.405" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.385" endtime="20201030 15:51:21.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.408" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.406" endtime="20201030 15:51:21.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.411" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:21.409" endtime="20201030 15:51:21.411"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:21.383" endtime="20201030 15:51:21.412"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:21.380" endtime="20201030 15:51:21.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.378" endtime="20201030 15:51:21.413"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:21.417" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:21.416" endtime="20201030 15:51:21.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.414" endtime="20201030 15:51:21.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.377" endtime="20201030 15:51:21.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.377" endtime="20201030 15:51:21.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.419" endtime="20201030 15:51:21.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.375" endtime="20201030 15:51:21.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.374" endtime="20201030 15:51:21.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.349" endtime="20201030 15:51:21.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.429" endtime="20201030 15:51:21.442"></status>
</kw>
<msg timestamp="20201030 15:51:21.442" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.427" endtime="20201030 15:51:21.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.444" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.443" endtime="20201030 15:51:21.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.446" endtime="20201030 15:51:21.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.424" endtime="20201030 15:51:21.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.422" endtime="20201030 15:51:21.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.452" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:51:21.451" endtime="20201030 15:51:21.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.454" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 15:51:21.453" endtime="20201030 15:51:21.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.449" endtime="20201030 15:51:21.455"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:21.346" endtime="20201030 15:51:21.455" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:18.506" endtime="20201030 15:51:21.458"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.510" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:21.518" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:22.586" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:21.509" endtime="20201030 15:51:22.586"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.590" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 15:51:22.588" endtime="20201030 15:51:23.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.507" endtime="20201030 15:51:23.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.596" endtime="20201030 15:51:23.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.593" endtime="20201030 15:51:23.845"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.863" endtime="20201030 15:51:23.886"></status>
</kw>
<msg timestamp="20201030 15:51:23.887" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.861" endtime="20201030 15:51:23.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.889" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.888" endtime="20201030 15:51:23.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.893" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:23.891" endtime="20201030 15:51:23.893"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:23.857" endtime="20201030 15:51:23.894"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:23.854" endtime="20201030 15:51:23.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.852" endtime="20201030 15:51:23.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:23.898" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:23.897" endtime="20201030 15:51:23.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.895" endtime="20201030 15:51:23.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.850" endtime="20201030 15:51:23.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.850" endtime="20201030 15:51:23.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.900" endtime="20201030 15:51:23.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.848" endtime="20201030 15:51:23.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.903" endtime="20201030 15:51:23.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.846" endtime="20201030 15:51:23.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.506" endtime="20201030 15:51:23.905"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.912" endtime="20201030 15:51:23.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.909" endtime="20201030 15:51:23.932"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.945" endtime="20201030 15:51:23.961"></status>
</kw>
<msg timestamp="20201030 15:51:23.961" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.943" endtime="20201030 15:51:23.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.964" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.963" endtime="20201030 15:51:23.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.967" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:23.965" endtime="20201030 15:51:23.968"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:23.941" endtime="20201030 15:51:23.968"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:23.938" endtime="20201030 15:51:23.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.937" endtime="20201030 15:51:23.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:23.973" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:23.972" endtime="20201030 15:51:23.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.970" endtime="20201030 15:51:23.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.936" endtime="20201030 15:51:23.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.936" endtime="20201030 15:51:23.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.975" endtime="20201030 15:51:23.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.934" endtime="20201030 15:51:23.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.933" endtime="20201030 15:51:23.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.908" endtime="20201030 15:51:23.978"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.986" endtime="20201030 15:51:24.002"></status>
</kw>
<msg timestamp="20201030 15:51:24.002" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.985" endtime="20201030 15:51:24.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.005" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.003" endtime="20201030 15:51:24.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.006" endtime="20201030 15:51:24.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.982" endtime="20201030 15:51:24.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.980" endtime="20201030 15:51:24.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.015" endtime="20201030 15:51:24.285"></status>
</kw>
<msg timestamp="20201030 15:51:24.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064459875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064468653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.013" endtime="20201030 15:51:24.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064459875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064468653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.288" endtime="20201030 15:51:24.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.294" endtime="20201030 15:51:24.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.011" endtime="20201030 15:51:24.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.009" endtime="20201030 15:51:24.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.300" level="INFO">${RESULT} = [{'diff': 8.778000000000952e-06}, {'diff': 8.542000000000272e-06}, {'diff': 1.0333000000001258e-05}, {'diff': 6.403000000002046e-06}, {'diff': 5.2499999999983116e-06}, {'diff': 6.597000000010955e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:24.297" endtime="20201030 15:51:24.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:24.303" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.778000000000952e-06, 8.542000000000272e-06, 1.0333000000001258e-05, 6.403000000002046e-06, 5.2499999999983116e-06, 6.597000000010955e-06, 4.583000000002446e-06, 1.0889000000000038e-05, 7.7...</msg>
<status status="PASS" starttime="20201030 15:51:24.301" endtime="20201030 15:51:24.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.308" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:24.307" endtime="20201030 15:51:24.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.310" level="INFO">VALUE: [8.778000000000952e-06, 8.542000000000272e-06, 1.0333000000001258e-05, 6.403000000002046e-06, 5.2499999999983116e-06, 6.597000000010955e-06, 4.583000000002446e-06, 1.0889000000000038e-05, 7.707999999995163e-06, 8.708999999995637e-06, 6.7779999999989515e-06, 9.833000000000758e-06, 9.971999999996983e-06, 7.332999999998258e-06, 6.096999999996577e-06, 6.972000000007861e-06, 7.972000000008861e-06, 7.195000000001506e-06, 7.513000000000658e-06, 4.583000000002446e-06, 8.611000000005586e-06, 7.76400000000732e-06, 1.0346999999993889e-05, 9.263999999994943e-06, 8.194000000003032e-06]</msg>
<status status="PASS" starttime="20201030 15:51:24.309" endtime="20201030 15:51:24.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.304" endtime="20201030 15:51:24.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.314" endtime="20201030 15:51:24.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.313" endtime="20201030 15:51:24.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.312" endtime="20201030 15:51:24.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.979" endtime="20201030 15:51:24.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.979" endtime="20201030 15:51:24.335"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.344" endtime="20201030 15:51:24.358"></status>
</kw>
<msg timestamp="20201030 15:51:24.359" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.342" endtime="20201030 15:51:24.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.361" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.360" endtime="20201030 15:51:24.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.362" endtime="20201030 15:51:24.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.339" endtime="20201030 15:51:24.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.337" endtime="20201030 15:51:24.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.371" endtime="20201030 15:51:24.641"></status>
</kw>
<msg timestamp="20201030 15:51:24.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018665694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018674181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.370" endtime="20201030 15:51:24.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018665694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018674181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.644" endtime="20201030 15:51:24.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.649" endtime="20201030 15:51:24.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.367" endtime="20201030 15:51:24.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.365" endtime="20201030 15:51:24.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.655" level="INFO">${RESULT} = [{'diff': 8.487000000001466e-06}, {'diff': 8.3340000000022e-06}, {'diff': 8.721999999999203e-06}, {'diff': 6.763999999999382e-06}, {'diff': 7.2219999999977025e-06}, {'diff': 8.569999999999411e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:24.653" endtime="20201030 15:51:24.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:24.659" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.487000000001466e-06, 8.3340000000022e-06, 8.721999999999203e-06, 6.763999999999382e-06, 7.2219999999977025e-06, 8.569999999999411e-06, 9.902999999998607e-06, 7.832999999998758e-06, 4.34699...</msg>
<status status="PASS" starttime="20201030 15:51:24.656" endtime="20201030 15:51:24.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.663" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:24.662" endtime="20201030 15:51:24.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.666" level="INFO">VALUE: [8.487000000001466e-06, 8.3340000000022e-06, 8.721999999999203e-06, 6.763999999999382e-06, 7.2219999999977025e-06, 8.569999999999411e-06, 9.902999999998607e-06, 7.832999999998758e-06, 4.346999999998297e-06, 1.0972000000001453e-05, 8.402999999997107e-06, 6.028000000001671e-06, 8.459000000002326e-06, 9.028000000001202e-06, 9.915999999998704e-06, 8.472000000002422e-06, 7.347000000001297e-06, 7.263999999999882e-06, 1.0652999999999357e-05, 5.833000000000227e-06, 1.0415999999999204e-05, 8.166000000000423e-06, 7.319000000002157e-06, 6.416999999998146e-06, 9.458999999999856e-06]</msg>
<status status="PASS" starttime="20201030 15:51:24.664" endtime="20201030 15:51:24.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.660" endtime="20201030 15:51:24.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.670" endtime="20201030 15:51:24.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.669" endtime="20201030 15:51:24.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.667" endtime="20201030 15:51:24.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.336" endtime="20201030 15:51:24.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.335" endtime="20201030 15:51:24.691"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.700" endtime="20201030 15:51:24.715"></status>
</kw>
<msg timestamp="20201030 15:51:24.715" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.697" endtime="20201030 15:51:24.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.717" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.716" endtime="20201030 15:51:24.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.719" endtime="20201030 15:51:24.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.695" endtime="20201030 15:51:24.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.693" endtime="20201030 15:51:24.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.728" endtime="20201030 15:51:24.998"></status>
</kw>
<msg timestamp="20201030 15:51:24.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018581181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018587958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.726" endtime="20201030 15:51:25.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018581181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018587958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.001" endtime="20201030 15:51:25.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.006" endtime="20201030 15:51:25.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.724" endtime="20201030 15:51:25.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.722" endtime="20201030 15:51:25.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.012" level="INFO">${RESULT} = [{'diff': 6.777000000002947e-06}, {'diff': 1.0207999999997663e-05}, {'diff': 7.583999999997981e-06}, {'diff': 8.528000000000702e-06}, {'diff': 8.542000000000272e-06}, {'diff': 7.707999999998633e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:25.010" endtime="20201030 15:51:25.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:25.015" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.777000000002947e-06, 1.0207999999997663e-05, 7.583999999997981e-06, 8.528000000000702e-06, 8.542000000000272e-06, 7.707999999998633e-06, 7.527999999999702e-06, 8.09800000000152e-06, 7.5140...</msg>
<status status="PASS" starttime="20201030 15:51:25.013" endtime="20201030 15:51:25.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.020" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:25.019" endtime="20201030 15:51:25.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.022" level="INFO">VALUE: [6.777000000002947e-06, 1.0207999999997663e-05, 7.583999999997981e-06, 8.528000000000702e-06, 8.542000000000272e-06, 7.707999999998633e-06, 7.527999999999702e-06, 8.09800000000152e-06, 7.514000000000132e-06, 7.750000000000812e-06, 6.526999999999228e-06, 1.0082999999997538e-05, 7.165999999999423e-06, 6.8329999999977575e-06, 4.832999999999227e-06, 6.151999999998853e-06, 8.014000000000632e-06, 6.360999999999867e-06, 1.1514000000000663e-05, 8.972000000002922e-06, 8.777999999997482e-06, 6.5279999999987015e-06, 8.721999999999203e-06, 6.2090000000000756e-06, 6.861000000000367e-06]</msg>
<status status="PASS" starttime="20201030 15:51:25.021" endtime="20201030 15:51:25.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.017" endtime="20201030 15:51:25.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.027" endtime="20201030 15:51:25.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.025" endtime="20201030 15:51:25.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.024" endtime="20201030 15:51:25.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.692" endtime="20201030 15:51:25.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.692" endtime="20201030 15:51:25.048"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.056" endtime="20201030 15:51:25.071"></status>
</kw>
<msg timestamp="20201030 15:51:25.072" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.054" endtime="20201030 15:51:25.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.074" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.073" endtime="20201030 15:51:25.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.075" endtime="20201030 15:51:25.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.051" endtime="20201030 15:51:25.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.050" endtime="20201030 15:51:25.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.084" endtime="20201030 15:51:25.353"></status>
</kw>
<msg timestamp="20201030 15:51:25.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018544097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018553806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.083" endtime="20201030 15:51:25.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018544097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018553806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.356" endtime="20201030 15:51:25.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.361" endtime="20201030 15:51:25.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.080" endtime="20201030 15:51:25.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.078" endtime="20201030 15:51:25.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.367" level="INFO">${RESULT} = [{'diff': 9.709000000000106e-06}, {'diff': 7.0829999999980076e-06}, {'diff': 7.527999999999702e-06}, {'diff': 7.485999999997522e-06}, {'diff': 1.0027999999998732e-05}, {'diff': 1.0040999999998829e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:25.365" endtime="20201030 15:51:25.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:25.371" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.709000000000106e-06, 7.0829999999980076e-06, 7.527999999999702e-06, 7.485999999997522e-06, 1.0027999999998732e-05, 1.0040999999998829e-05, 1.0277999999998982e-05, 6.485999999999992e-06, 4....</msg>
<status status="PASS" starttime="20201030 15:51:25.368" endtime="20201030 15:51:25.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.375" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:25.374" endtime="20201030 15:51:25.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.378" level="INFO">VALUE: [9.709000000000106e-06, 7.0829999999980076e-06, 7.527999999999702e-06, 7.485999999997522e-06, 1.0027999999998732e-05, 1.0040999999998829e-05, 1.0277999999998982e-05, 6.485999999999992e-06, 4.222999999997645e-06, 7.263999999999882e-06, 8.778000000000952e-06, 6.222000000000172e-06, 9.221999999999703e-06, 9.486999999998996e-06, 1.0348000000000301e-05, 8.221999999998703e-06, 4.972000000002391e-06, 6.9719999999974525e-06, 9.222999999999176e-06, 5.569000000000407e-06, 7.458000000001852e-06, 9.903000000002077e-06, 1.0930999999998747e-05, 6.9730000000003955e-06, 6.9169999999986465e-06]</msg>
<status status="PASS" starttime="20201030 15:51:25.376" endtime="20201030 15:51:25.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.372" endtime="20201030 15:51:25.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.382" endtime="20201030 15:51:25.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.381" endtime="20201030 15:51:25.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.379" endtime="20201030 15:51:25.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.048" endtime="20201030 15:51:25.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.048" endtime="20201030 15:51:25.403"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.412" endtime="20201030 15:51:25.427"></status>
</kw>
<msg timestamp="20201030 15:51:25.427" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.409" endtime="20201030 15:51:25.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.430" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.428" endtime="20201030 15:51:25.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.431" endtime="20201030 15:51:25.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.407" endtime="20201030 15:51:25.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.405" endtime="20201030 15:51:25.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.440" endtime="20201030 15:51:25.710"></status>
</kw>
<msg timestamp="20201030 15:51:25.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018569972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018577986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.438" endtime="20201030 15:51:25.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018569972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018577986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.713" endtime="20201030 15:51:25.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.718" endtime="20201030 15:51:25.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.436" endtime="20201030 15:51:25.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.434" endtime="20201030 15:51:25.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.724" level="INFO">${RESULT} = [{'diff': 8.014000000000632e-06}, {'diff': 7.959000000001826e-06}, {'diff': 7.959000000001826e-06}, {'diff': 7.639000000000257e-06}, {'diff': 7.151999999999853e-06}, {'diff': 5.153000000000796e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:25.721" endtime="20201030 15:51:25.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:25.727" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.014000000000632e-06, 7.959000000001826e-06, 7.959000000001826e-06, 7.639000000000257e-06, 7.151999999999853e-06, 5.153000000000796e-06, 6.638999999999257e-06, 8.083000000002477e-06, 1.1139...</msg>
<status status="PASS" starttime="20201030 15:51:25.725" endtime="20201030 15:51:25.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.732" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:25.731" endtime="20201030 15:51:25.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.734" level="INFO">VALUE: [8.014000000000632e-06, 7.959000000001826e-06, 7.959000000001826e-06, 7.639000000000257e-06, 7.151999999999853e-06, 5.153000000000796e-06, 6.638999999999257e-06, 8.083000000002477e-06, 1.1139000000000288e-05, 6.763999999999382e-06, 9.471999999999953e-06, 7.1529999999993266e-06, 8.097000000002047e-06, 7.208000000001602e-06, 7.333000000001727e-06, 6.6669999999983964e-06, 5.278000000000921e-06, 8.971999999999453e-06, 9.777999999998482e-06, 5.778000000001421e-06, 8.846999999999328e-06, 8.305999999999591e-06, 1.1166999999999427e-05, 6.763999999999382e-06, 7.4169999999991465e-06]</msg>
<status status="PASS" starttime="20201030 15:51:25.733" endtime="20201030 15:51:25.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.728" endtime="20201030 15:51:25.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.739" endtime="20201030 15:51:25.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.737" endtime="20201030 15:51:25.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.736" endtime="20201030 15:51:25.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.404" endtime="20201030 15:51:25.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.403" endtime="20201030 15:51:25.760"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.769" endtime="20201030 15:51:25.783"></status>
</kw>
<msg timestamp="20201030 15:51:25.783" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.766" endtime="20201030 15:51:25.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.786" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.784" endtime="20201030 15:51:25.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.787" endtime="20201030 15:51:25.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.763" endtime="20201030 15:51:25.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.762" endtime="20201030 15:51:25.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.796" endtime="20201030 15:51:26.066"></status>
</kw>
<msg timestamp="20201030 15:51:26.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018622125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018632111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.794" endtime="20201030 15:51:26.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018622125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018632111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.069" endtime="20201030 15:51:26.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.075" endtime="20201030 15:51:26.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.792" endtime="20201030 15:51:26.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.790" endtime="20201030 15:51:26.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.083" level="INFO">${RESULT} = [{'diff': 9.986000000000023e-06}, {'diff': 6.847000000000797e-06}, {'diff': 5.846999999999797e-06}, {'diff': 5.527999999997701e-06}, {'diff': 1.0223000000000176e-05}, {'diff': 5.973000000002865e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:26.081" endtime="20201030 15:51:26.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:26.087" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.986000000000023e-06, 6.847000000000797e-06, 5.846999999999797e-06, 5.527999999997701e-06, 1.0223000000000176e-05, 5.973000000002865e-06, 9.014000000001632e-06, 8.957999999999883e-06, 5.402...</msg>
<status status="PASS" starttime="20201030 15:51:26.084" endtime="20201030 15:51:26.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.091" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:26.090" endtime="20201030 15:51:26.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.094" level="INFO">VALUE: [9.986000000000023e-06, 6.847000000000797e-06, 5.846999999999797e-06, 5.527999999997701e-06, 1.0223000000000176e-05, 5.973000000002865e-06, 9.014000000001632e-06, 8.957999999999883e-06, 5.402999999997576e-06, 9.959000000000356e-06, 9.847000000000328e-06, 1.0458000000001383e-05, 7.236000000000742e-06, 9.834000000000231e-06, 7.097000000001047e-06, 7.333999999997731e-06, 8.527999999997232e-06, 6.097000000000047e-06, 7.832999999998758e-06, 7.486000000000992e-06, 6.6529999999988265e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.027999999997732e-06, 6.874999999999937e-06]</msg>
<status status="PASS" starttime="20201030 15:51:26.092" endtime="20201030 15:51:26.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.087" endtime="20201030 15:51:26.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.098" endtime="20201030 15:51:26.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.097" endtime="20201030 15:51:26.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.095" endtime="20201030 15:51:26.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.761" endtime="20201030 15:51:26.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.760" endtime="20201030 15:51:26.119"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.128" endtime="20201030 15:51:26.142"></status>
</kw>
<msg timestamp="20201030 15:51:26.142" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.126" endtime="20201030 15:51:26.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.145" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.143" endtime="20201030 15:51:26.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.146" endtime="20201030 15:51:26.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.123" endtime="20201030 15:51:26.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.121" endtime="20201030 15:51:26.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.155" endtime="20201030 15:51:26.422"></status>
</kw>
<msg timestamp="20201030 15:51:26.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018950264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018956889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.153" endtime="20201030 15:51:26.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018950264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018956889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.425" endtime="20201030 15:51:26.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.430" endtime="20201030 15:51:26.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.151" endtime="20201030 15:51:26.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.149" endtime="20201030 15:51:26.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.436" level="INFO">${RESULT} = [{'diff': 6.624999999999687e-06}, {'diff': 9.139000000001757e-06}, {'diff': 7.903000000000077e-06}, {'diff': 7.083000000001477e-06}, {'diff': 1.0472000000000953e-05}, {'diff': 7.348000000000771e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:26.433" endtime="20201030 15:51:26.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:26.439" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.624999999999687e-06, 9.139000000001757e-06, 7.903000000000077e-06, 7.083000000001477e-06, 1.0472000000000953e-05, 7.348000000000771e-06, 6.4729999999998955e-06, 6.513999999999132e-06, 8.76...</msg>
<status status="PASS" starttime="20201030 15:51:26.437" endtime="20201030 15:51:26.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.449" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:26.448" endtime="20201030 15:51:26.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.452" level="INFO">VALUE: [6.624999999999687e-06, 9.139000000001757e-06, 7.903000000000077e-06, 7.083000000001477e-06, 1.0472000000000953e-05, 7.348000000000771e-06, 6.4729999999998955e-06, 6.513999999999132e-06, 8.763999999997912e-06, 9.860999999999898e-06, 9.055000000000868e-06, 7.652999999999827e-06, 8.528000000000702e-06, 7.417000000002616e-06, 7.582999999998508e-06, 5.278000000000921e-06, 1.1957999999999414e-05, 1.1416999999999677e-05, 5.152999999997326e-06, 8.902000000001603e-06, 7.332999999998258e-06, 8.333999999998731e-06, 8.207999999999133e-06, 7.1669999999988965e-06, 6.9169999999986465e-06]</msg>
<status status="PASS" starttime="20201030 15:51:26.450" endtime="20201030 15:51:26.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.440" endtime="20201030 15:51:26.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.456" endtime="20201030 15:51:26.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.455" endtime="20201030 15:51:26.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.453" endtime="20201030 15:51:26.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.120" endtime="20201030 15:51:26.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.120" endtime="20201030 15:51:26.477"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.487" endtime="20201030 15:51:26.501"></status>
</kw>
<msg timestamp="20201030 15:51:26.502" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.483" endtime="20201030 15:51:26.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.504" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.503" endtime="20201030 15:51:26.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.505" endtime="20201030 15:51:26.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.481" endtime="20201030 15:51:26.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.479" endtime="20201030 15:51:26.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.514" endtime="20201030 15:51:26.780"></status>
</kw>
<msg timestamp="20201030 15:51:26.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020025472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.513" endtime="20201030 15:51:26.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020025472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.783" endtime="20201030 15:51:26.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.788" endtime="20201030 15:51:26.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.510" endtime="20201030 15:51:26.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.508" endtime="20201030 15:51:26.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.794" level="INFO">${RESULT} = [{'diff': 7.582999999998508e-06}, {'diff': 6.097000000000047e-06}, {'diff': 8.637999999998314e-06}, {'diff': 8.610999999998648e-06}, {'diff': 1.0347000000000828e-05}, {'diff': 6.070000000000381e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:26.792" endtime="20201030 15:51:26.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:26.797" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.582999999998508e-06, 6.097000000000047e-06, 8.637999999998314e-06, 8.610999999998648e-06, 1.0347000000000828e-05, 6.070000000000381e-06, 9.403000000001577e-06, 8.667000000000397e-06, 1.133...</msg>
<status status="PASS" starttime="20201030 15:51:26.795" endtime="20201030 15:51:26.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.802" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:26.801" endtime="20201030 15:51:26.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.805" level="INFO">VALUE: [7.582999999998508e-06, 6.097000000000047e-06, 8.637999999998314e-06, 8.610999999998648e-06, 1.0347000000000828e-05, 6.070000000000381e-06, 9.403000000001577e-06, 8.667000000000397e-06, 1.1332999999998788e-05, 7.986000000001492e-06, 1.1416000000000204e-05, 9.028000000001202e-06, 1.0388999999999537e-05, 1.0415999999999204e-05, 8.639000000001257e-06, 6.749999999999812e-06, 4.722000000002141e-06, 6.972999999996926e-06, 7.944999999998786e-06, 9.680000000001493e-06, 8.083000000002477e-06, 8.223000000001646e-06, 8.209000000002076e-06, 8.542000000000272e-06, 7.013999999999632e-06]</msg>
<status status="PASS" starttime="20201030 15:51:26.803" endtime="20201030 15:51:26.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.798" endtime="20201030 15:51:26.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.809" endtime="20201030 15:51:26.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.807" endtime="20201030 15:51:26.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.806" endtime="20201030 15:51:26.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.478" endtime="20201030 15:51:26.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.477" endtime="20201030 15:51:26.830"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.837" endtime="20201030 15:51:26.852"></status>
</kw>
<msg timestamp="20201030 15:51:26.853" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.836" endtime="20201030 15:51:26.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.855" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.854" endtime="20201030 15:51:26.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.856" endtime="20201030 15:51:26.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.833" endtime="20201030 15:51:26.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.832" endtime="20201030 15:51:26.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.865" endtime="20201030 15:51:27.133"></status>
</kw>
<msg timestamp="20201030 15:51:27.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018364264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018373931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.864" endtime="20201030 15:51:27.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018364264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018373931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.135" endtime="20201030 15:51:27.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.141" endtime="20201030 15:51:27.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.861" endtime="20201030 15:51:27.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.860" endtime="20201030 15:51:27.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:27.147" level="INFO">${RESULT} = [{'diff': 9.666999999997927e-06}, {'diff': 7.847000000001797e-06}, {'diff': 6.097000000000047e-06}, {'diff': 7.2079999999981326e-06}, {'diff': 9.652999999998357e-06}, {'diff': 8.097999999998051e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:27.144" endtime="20201030 15:51:27.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:27.150" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.666999999997927e-06, 7.847000000001797e-06, 6.097000000000047e-06, 7.2079999999981326e-06, 9.652999999998357e-06, 8.097999999998051e-06, 5.264000000001351e-06, 8.375000000001437e-06, 5.471...</msg>
<status status="PASS" starttime="20201030 15:51:27.148" endtime="20201030 15:51:27.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.154" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:27.153" endtime="20201030 15:51:27.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.157" level="INFO">VALUE: [9.666999999997927e-06, 7.847000000001797e-06, 6.097000000000047e-06, 7.2079999999981326e-06, 9.652999999998357e-06, 8.097999999998051e-06, 5.264000000001351e-06, 8.375000000001437e-06, 5.471999999999422e-06, 8.957999999999883e-06, 7.348000000000771e-06, 5.8889999999985065e-06, 6.597000000000547e-06, 9.167000000000897e-06, 6.777000000002947e-06, 6.915999999999173e-06, 6.722000000000672e-06, 9.874999999999468e-06, 6.972000000000922e-06, 8.444999999999286e-06, 8.944000000000313e-06, 6.222000000000172e-06, 5.278000000000921e-06, 9.083999999999481e-06, 7.889000000000507e-06]</msg>
<status status="PASS" starttime="20201030 15:51:27.156" endtime="20201030 15:51:27.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.151" endtime="20201030 15:51:27.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.161" endtime="20201030 15:51:27.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.160" endtime="20201030 15:51:27.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.159" endtime="20201030 15:51:27.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.831" endtime="20201030 15:51:27.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.830" endtime="20201030 15:51:27.182"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.192" endtime="20201030 15:51:27.205"></status>
</kw>
<msg timestamp="20201030 15:51:27.206" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.189" endtime="20201030 15:51:27.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.208" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.207" endtime="20201030 15:51:27.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.209" endtime="20201030 15:51:27.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.186" endtime="20201030 15:51:27.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.185" endtime="20201030 15:51:27.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.218" endtime="20201030 15:51:27.515"></status>
</kw>
<msg timestamp="20201030 15:51:27.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019330653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019341306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.217" endtime="20201030 15:51:27.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019330653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019341306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.524" endtime="20201030 15:51:27.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.538" endtime="20201030 15:51:27.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.214" endtime="20201030 15:51:27.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.213" endtime="20201030 15:51:27.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:27.556" level="INFO">${RESULT} = [{'diff': 1.0652999999999357e-05}, {'diff': 9.833999999996762e-06}, {'diff': 6.097000000000047e-06}, {'diff': 9.930000000001743e-06}, {'diff': 9.137999999998814e-06}, {'diff': 1.1195000000002037e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:27.553" endtime="20201030 15:51:27.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:27.560" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0652999999999357e-05, 9.833999999996762e-06, 6.097000000000047e-06, 9.930000000001743e-06, 9.137999999998814e-06, 1.1195000000002037e-05, 1.0527999999999232e-05, 7.527999999999702e-06, 8.0...</msg>
<status status="PASS" starttime="20201030 15:51:27.557" endtime="20201030 15:51:27.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.566" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:27.564" endtime="20201030 15:51:27.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.569" level="INFO">VALUE: [1.0652999999999357e-05, 9.833999999996762e-06, 6.097000000000047e-06, 9.930000000001743e-06, 9.137999999998814e-06, 1.1195000000002037e-05, 1.0527999999999232e-05, 7.527999999999702e-06, 8.097000000002047e-06, 5.000000000001531e-06, 7.527000000000228e-06, 7.652999999999827e-06, 9.249999999998842e-06, 8.736000000002242e-06, 8.722999999998676e-06, 8.819999999999661e-06, 5.651999999998353e-06, 7.208000000001602e-06, 6.638999999999257e-06, 7.847000000001797e-06, 6.291999999998021e-06, 7.652999999999827e-06, 8.708999999999106e-06, 6.7779999999989515e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201030 15:51:27.567" endtime="20201030 15:51:27.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.561" endtime="20201030 15:51:27.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.575" endtime="20201030 15:51:27.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.573" endtime="20201030 15:51:27.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.571" endtime="20201030 15:51:27.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.183" endtime="20201030 15:51:27.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.183" endtime="20201030 15:51:27.597"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.607" endtime="20201030 15:51:27.622"></status>
</kw>
<msg timestamp="20201030 15:51:27.622" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.604" endtime="20201030 15:51:27.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.625" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.623" endtime="20201030 15:51:27.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.626" endtime="20201030 15:51:27.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.601" endtime="20201030 15:51:27.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.599" endtime="20201030 15:51:27.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.636" endtime="20201030 15:51:27.900"></status>
</kw>
<msg timestamp="20201030 15:51:27.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020893764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020898653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.634" endtime="20201030 15:51:27.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020893764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020898653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.903" endtime="20201030 15:51:27.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.909" endtime="20201030 15:51:27.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.632" endtime="20201030 15:51:27.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.630" endtime="20201030 15:51:27.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:27.915" level="INFO">${RESULT} = [{'diff': 4.889000000000976e-06}, {'diff': 6.430999999997716e-06}, {'diff': 1.0290999999999079e-05}, {'diff': 6.305999999997591e-06}, {'diff': 7.097000000001047e-06}, {'diff': 8.153000000000327e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:27.913" endtime="20201030 15:51:27.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:27.919" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.889000000000976e-06, 6.430999999997716e-06, 1.0290999999999079e-05, 6.305999999997591e-06, 7.097000000001047e-06, 8.153000000000327e-06, 8.028000000000202e-06, 9.458000000000383e-06, 7.568...</msg>
<status status="PASS" starttime="20201030 15:51:27.916" endtime="20201030 15:51:27.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.923" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:27.922" endtime="20201030 15:51:27.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.926" level="INFO">VALUE: [4.889000000000976e-06, 6.430999999997716e-06, 1.0290999999999079e-05, 6.305999999997591e-06, 7.097000000001047e-06, 8.153000000000327e-06, 8.028000000000202e-06, 9.458000000000383e-06, 7.568999999998938e-06, 8.292000000000022e-06, 1.1222000000001703e-05, 1.0347000000000828e-05, 7.889000000000507e-06, 7.0829999999980076e-06, 7.0969999999975775e-06, 8.278000000000452e-06, 9.292000000001022e-06, 7.958999999998356e-06, 8.333999999998731e-06, 5.708000000000102e-06, 6.7079999999976325e-06, 8.389000000001007e-06, 7.1529999999993266e-06, 7.958000000002352e-06, 7.000000000000062e-06]</msg>
<status status="PASS" starttime="20201030 15:51:27.924" endtime="20201030 15:51:27.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.920" endtime="20201030 15:51:27.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.931" endtime="20201030 15:51:27.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.929" endtime="20201030 15:51:27.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.928" endtime="20201030 15:51:27.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.597" endtime="20201030 15:51:27.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.597" endtime="20201030 15:51:27.951"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.961" endtime="20201030 15:51:27.974"></status>
</kw>
<msg timestamp="20201030 15:51:27.975" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.958" endtime="20201030 15:51:27.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.978" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.976" endtime="20201030 15:51:27.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.979" endtime="20201030 15:51:27.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.955" endtime="20201030 15:51:27.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.954" endtime="20201030 15:51:27.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.988" endtime="20201030 15:51:28.256"></status>
</kw>
<msg timestamp="20201030 15:51:28.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019240389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019252028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.987" endtime="20201030 15:51:28.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019240389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019252028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.259" endtime="20201030 15:51:28.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.265" endtime="20201030 15:51:28.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.984" endtime="20201030 15:51:28.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.982" endtime="20201030 15:51:28.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.271" level="INFO">${RESULT} = [{'diff': 1.1639000000000788e-05}, {'diff': 7.582999999998508e-06}, {'diff': 6.347000000000297e-06}, {'diff': 8.513999999997662e-06}, {'diff': 7.209000000001076e-06}, {'diff': 6.360999999999867e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:28.268" endtime="20201030 15:51:28.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:28.274" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1639000000000788e-05, 7.582999999998508e-06, 6.347000000000297e-06, 8.513999999997662e-06, 7.209000000001076e-06, 6.360999999999867e-06, 4.9999999999980616e-06, 1.0388999999999537e-05, 9.6...</msg>
<status status="PASS" starttime="20201030 15:51:28.272" endtime="20201030 15:51:28.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.278" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:28.277" endtime="20201030 15:51:28.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.281" level="INFO">VALUE: [1.1639000000000788e-05, 7.582999999998508e-06, 6.347000000000297e-06, 8.513999999997662e-06, 7.209000000001076e-06, 6.360999999999867e-06, 4.9999999999980616e-06, 1.0388999999999537e-05, 9.694000000001063e-06, 7.777999999999952e-06, 8.389000000001007e-06, 6.097000000000047e-06, 8.083000000002477e-06, 8.402000000001103e-06, 9.222999999999176e-06, 8.457999999999383e-06, 7.611000000001117e-06, 8.096999999998578e-06, 7.832999999998758e-06, 8.014000000000632e-06, 6.291999999998021e-06, 1.1846999999998858e-05, 6.834000000000701e-06, 8.278000000000452e-06, 7.179999999998993e-06]</msg>
<status status="PASS" starttime="20201030 15:51:28.279" endtime="20201030 15:51:28.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.275" endtime="20201030 15:51:28.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.285" endtime="20201030 15:51:28.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.284" endtime="20201030 15:51:28.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.283" endtime="20201030 15:51:28.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.952" endtime="20201030 15:51:28.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.952" endtime="20201030 15:51:28.306"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.315" endtime="20201030 15:51:28.328"></status>
</kw>
<msg timestamp="20201030 15:51:28.329" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.312" endtime="20201030 15:51:28.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.331" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.330" endtime="20201030 15:51:28.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.332" endtime="20201030 15:51:28.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.310" endtime="20201030 15:51:28.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.308" endtime="20201030 15:51:28.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.342" endtime="20201030 15:51:28.610"></status>
</kw>
<msg timestamp="20201030 15:51:28.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018578375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018587569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.340" endtime="20201030 15:51:28.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018578375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018587569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.613" endtime="20201030 15:51:28.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.618" endtime="20201030 15:51:28.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.337" endtime="20201030 15:51:28.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.336" endtime="20201030 15:51:28.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.624" level="INFO">${RESULT} = [{'diff': 9.194000000000563e-06}, {'diff': 9.083000000000008e-06}, {'diff': 1.0027999999998732e-05}, {'diff': 6.708000000001102e-06}, {'diff': 6.736000000000242e-06}, {'diff': 8.568999999999938e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:28.622" endtime="20201030 15:51:28.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:28.627" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.194000000000563e-06, 9.083000000000008e-06, 1.0027999999998732e-05, 6.708000000001102e-06, 6.736000000000242e-06, 8.568999999999938e-06, 9.471999999999953e-06, 1.0444999999997817e-05, 1.04...</msg>
<status status="PASS" starttime="20201030 15:51:28.625" endtime="20201030 15:51:28.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.632" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:28.631" endtime="20201030 15:51:28.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.634" level="INFO">VALUE: [9.194000000000563e-06, 9.083000000000008e-06, 1.0027999999998732e-05, 6.708000000001102e-06, 6.736000000000242e-06, 8.568999999999938e-06, 9.471999999999953e-06, 1.0444999999997817e-05, 1.0459000000000857e-05, 7.402000000000103e-06, 5.846999999999797e-06, 7.762999999997439e-06, 6.347000000000297e-06, 6.888999999999507e-06, 1.0027999999998732e-05, 1.0276999999999509e-05, 6.276999999998978e-06, 1.1333000000002258e-05, 8.847999999998801e-06, 6.2229999999996455e-06, 9.777999999998482e-06, 7.652999999999827e-06, 9.526999999998759e-06, 6.4029999999985765e-06, 6.208000000000602e-06]</msg>
<status status="PASS" starttime="20201030 15:51:28.633" endtime="20201030 15:51:28.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.628" endtime="20201030 15:51:28.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.639" endtime="20201030 15:51:28.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.637" endtime="20201030 15:51:28.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.636" endtime="20201030 15:51:28.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.307" endtime="20201030 15:51:28.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.306" endtime="20201030 15:51:28.660"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.669" endtime="20201030 15:51:28.682"></status>
</kw>
<msg timestamp="20201030 15:51:28.683" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.666" endtime="20201030 15:51:28.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.685" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.684" endtime="20201030 15:51:28.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.686" endtime="20201030 15:51:28.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.664" endtime="20201030 15:51:28.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.662" endtime="20201030 15:51:28.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.696" endtime="20201030 15:51:28.979"></status>
</kw>
<msg timestamp="20201030 15:51:28.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018636653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018644736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.694" endtime="20201030 15:51:28.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018636653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018644736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.982" endtime="20201030 15:51:28.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.987" endtime="20201030 15:51:28.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.691" endtime="20201030 15:51:28.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.690" endtime="20201030 15:51:28.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.993" level="INFO">${RESULT} = [{'diff': 8.082999999999008e-06}, {'diff': 8.792000000000522e-06}, {'diff': 1.1528000000000233e-05}, {'diff': 4.389000000000476e-06}, {'diff': 8.152000000000853e-06}, {'diff': 9.167000000000897e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:28.990" endtime="20201030 15:51:28.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:28.996" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.082999999999008e-06, 8.792000000000522e-06, 1.1528000000000233e-05, 4.389000000000476e-06, 8.152000000000853e-06, 9.167000000000897e-06, 8.249999999997842e-06, 9.153000000001327e-06, 9.250...</msg>
<status status="PASS" starttime="20201030 15:51:28.994" endtime="20201030 15:51:28.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.000" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:28.999" endtime="20201030 15:51:29.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.003" level="INFO">VALUE: [8.082999999999008e-06, 8.792000000000522e-06, 1.1528000000000233e-05, 4.389000000000476e-06, 8.152000000000853e-06, 9.167000000000897e-06, 8.249999999997842e-06, 9.153000000001327e-06, 9.250000000002312e-06, 7.985999999998022e-06, 9.458000000000383e-06, 5.790999999998048e-06, 1.1068999999998969e-05, 1.0846999999997858e-05, 6.7919999999985214e-06, 5.721999999999672e-06, 9.624999999999218e-06, 7.0279999999992016e-06, 5.819000000000657e-06, 8.58400000000245e-06, 1.1083000000002008e-05, 5.027000000001197e-06, 9.403000000001577e-06, 8.458999999998856e-06, 1.0361000000000398e-05]</msg>
<status status="PASS" starttime="20201030 15:51:29.002" endtime="20201030 15:51:29.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.997" endtime="20201030 15:51:29.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.008" endtime="20201030 15:51:29.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.006" endtime="20201030 15:51:29.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.005" endtime="20201030 15:51:29.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.661" endtime="20201030 15:51:29.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.660" endtime="20201030 15:51:29.029"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.037" endtime="20201030 15:51:29.051"></status>
</kw>
<msg timestamp="20201030 15:51:29.052" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.035" endtime="20201030 15:51:29.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.054" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.053" endtime="20201030 15:51:29.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.055" endtime="20201030 15:51:29.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.032" endtime="20201030 15:51:29.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.031" endtime="20201030 15:51:29.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.065" endtime="20201030 15:51:29.335"></status>
</kw>
<msg timestamp="20201030 15:51:29.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018648292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018655, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:29.063" endtime="20201030 15:51:29.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018648292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018655, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:29.338" endtime="20201030 15:51:29.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.343" endtime="20201030 15:51:29.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.060" endtime="20201030 15:51:29.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.059" endtime="20201030 15:51:29.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:29.349" level="INFO">${RESULT} = [{'diff': 6.708000000001102e-06}, {'diff': 6.736000000000242e-06}, {'diff': 8.278000000000452e-06}, {'diff': 6.944000000001782e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.638999999999257e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:29.347" endtime="20201030 15:51:29.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:29.352" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.708000000001102e-06, 6.736000000000242e-06, 8.278000000000452e-06, 6.944000000001782e-06, 6.028000000001671e-06, 6.638999999999257e-06, 6.833999999997231e-06, 5.582999999999977e-06, 1.0138...</msg>
<status status="PASS" starttime="20201030 15:51:29.350" endtime="20201030 15:51:29.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.357" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:29.355" endtime="20201030 15:51:29.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.359" level="INFO">VALUE: [6.708000000001102e-06, 6.736000000000242e-06, 8.278000000000452e-06, 6.944000000001782e-06, 6.028000000001671e-06, 6.638999999999257e-06, 6.833999999997231e-06, 5.582999999999977e-06, 1.0138999999999287e-05, 9.777999999998482e-06, 5.403000000001046e-06, 6.903000000002546e-06, 8.223000000001646e-06, 6.584000000000451e-06, 5.278000000000921e-06, 9.527999999998232e-06, 9.027000000001728e-06, 6.7219999999972024e-06, 6.9169999999986465e-06, 9.694000000001063e-06, 5.8339999999997005e-06, 9.667000000001397e-06, 5.096999999999047e-06, 7.4719999999979525e-06, 6.388999999999007e-06]</msg>
<status status="PASS" starttime="20201030 15:51:29.358" endtime="20201030 15:51:29.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.353" endtime="20201030 15:51:29.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.364" endtime="20201030 15:51:29.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.362" endtime="20201030 15:51:29.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.361" endtime="20201030 15:51:29.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.029" endtime="20201030 15:51:29.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.029" endtime="20201030 15:51:29.385"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.394" endtime="20201030 15:51:29.408"></status>
</kw>
<msg timestamp="20201030 15:51:29.408" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.391" endtime="20201030 15:51:29.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.411" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.409" endtime="20201030 15:51:29.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.412" endtime="20201030 15:51:29.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.389" endtime="20201030 15:51:29.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.387" endtime="20201030 15:51:29.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.421" endtime="20201030 15:51:29.688"></status>
</kw>
<msg timestamp="20201030 15:51:29.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018811069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018820083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.420" endtime="20201030 15:51:29.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018811069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018820083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.691" endtime="20201030 15:51:29.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.697" endtime="20201030 15:51:29.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.417" endtime="20201030 15:51:29.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.415" endtime="20201030 15:51:29.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:29.703" level="INFO">${RESULT} = [{'diff': 9.014000000001632e-06}, {'diff': 5.971999999999922e-06}, {'diff': 7.736000000001242e-06}, {'diff': 9.764000000002382e-06}, {'diff': 6.195000000000506e-06}, {'diff': 1.1084000000001482e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:29.700" endtime="20201030 15:51:29.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:29.706" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.014000000001632e-06, 5.971999999999922e-06, 7.736000000001242e-06, 9.764000000002382e-06, 6.195000000000506e-06, 1.1084000000001482e-05, 6.541000000002267e-06, 1.0193999999998093e-05, 7.77...</msg>
<status status="PASS" starttime="20201030 15:51:29.704" endtime="20201030 15:51:29.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.710" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:29.709" endtime="20201030 15:51:29.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.712" level="INFO">VALUE: [9.014000000001632e-06, 5.971999999999922e-06, 7.736000000001242e-06, 9.764000000002382e-06, 6.195000000000506e-06, 1.1084000000001482e-05, 6.541000000002267e-06, 1.0193999999998093e-05, 7.777000000000478e-06, 7.138999999999757e-06, 4.707999999999102e-06, 8.902999999997607e-06, 1.0889000000000038e-05, 8.819000000000188e-06, 8.832999999999758e-06, 7.903000000000077e-06, 8.208000000002602e-06, 9.333999999999731e-06, 7.903000000000077e-06, 6.736000000000242e-06, 9.527999999998232e-06, 1.1778000000000483e-05, 5.235999999998742e-06, 5.665999999997923e-06, 9.569000000000938e-06]</msg>
<status status="PASS" starttime="20201030 15:51:29.711" endtime="20201030 15:51:29.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.707" endtime="20201030 15:51:29.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.717" endtime="20201030 15:51:29.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.716" endtime="20201030 15:51:29.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.715" endtime="20201030 15:51:29.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.385" endtime="20201030 15:51:29.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.385" endtime="20201030 15:51:29.738"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.747" endtime="20201030 15:51:29.762"></status>
</kw>
<msg timestamp="20201030 15:51:29.762" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.745" endtime="20201030 15:51:29.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.765" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.763" endtime="20201030 15:51:29.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.766" endtime="20201030 15:51:29.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.742" endtime="20201030 15:51:29.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.740" endtime="20201030 15:51:29.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.775" endtime="20201030 15:51:30.043"></status>
</kw>
<msg timestamp="20201030 15:51:30.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018743167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018749583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.773" endtime="20201030 15:51:30.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018743167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018749583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.046" endtime="20201030 15:51:30.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.051" endtime="20201030 15:51:30.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.771" endtime="20201030 15:51:30.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.769" endtime="20201030 15:51:30.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:30.057" level="INFO">${RESULT} = [{'diff': 6.415999999998673e-06}, {'diff': 6.444000000001282e-06}, {'diff': 7.013999999999632e-06}, {'diff': 9.930999999997747e-06}, {'diff': 5.846999999999797e-06}, {'diff': 7.8340000000017e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:30.055" endtime="20201030 15:51:30.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:30.060" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.415999999998673e-06, 6.444000000001282e-06, 7.013999999999632e-06, 9.930999999997747e-06, 5.846999999999797e-06, 7.8340000000017e-06, 9.417000000001147e-06, 8.208000000002602e-06, 7.318999...</msg>
<status status="PASS" starttime="20201030 15:51:30.058" endtime="20201030 15:51:30.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.065" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:30.064" endtime="20201030 15:51:30.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.067" level="INFO">VALUE: [6.415999999998673e-06, 6.444000000001282e-06, 7.013999999999632e-06, 9.930999999997747e-06, 5.846999999999797e-06, 7.8340000000017e-06, 9.417000000001147e-06, 8.208000000002602e-06, 7.318999999998688e-06, 8.832999999999758e-06, 8.458999999998856e-06, 9.152999999997857e-06, 1.1568999999999469e-05, 1.0972000000001453e-05, 5.806000000000561e-06, 9.903000000002077e-06, 1.0513999999999663e-05, 7.957999999998883e-06, 7.569999999998411e-06, 8.097000000002047e-06, 9.333000000000258e-06, 7.8340000000017e-06, 9.026999999998259e-06, 7.527000000000228e-06, 9.208999999999606e-06]</msg>
<status status="PASS" starttime="20201030 15:51:30.066" endtime="20201030 15:51:30.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.061" endtime="20201030 15:51:30.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.072" endtime="20201030 15:51:30.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.070" endtime="20201030 15:51:30.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.069" endtime="20201030 15:51:30.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.739" endtime="20201030 15:51:30.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.739" endtime="20201030 15:51:30.093"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.102" endtime="20201030 15:51:30.116"></status>
</kw>
<msg timestamp="20201030 15:51:30.116" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.099" endtime="20201030 15:51:30.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.119" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.117" endtime="20201030 15:51:30.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.120" endtime="20201030 15:51:30.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.096" endtime="20201030 15:51:30.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.095" endtime="20201030 15:51:30.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.129" endtime="20201030 15:51:30.402"></status>
</kw>
<msg timestamp="20201030 15:51:30.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018662194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018670153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.127" endtime="20201030 15:51:30.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018662194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018670153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.405" endtime="20201030 15:51:30.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.411" endtime="20201030 15:51:30.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.125" endtime="20201030 15:51:30.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.123" endtime="20201030 15:51:30.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:30.417" level="INFO">${RESULT} = [{'diff': 7.958999999998356e-06}, {'diff': 8.041000000000298e-06}, {'diff': 1.0277999999998982e-05}, {'diff': 1.0264000000002882e-05}, {'diff': 6.014000000002101e-06}, {'diff': 8.236000000001742e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:30.414" endtime="20201030 15:51:30.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:30.420" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.958999999998356e-06, 8.041000000000298e-06, 1.0277999999998982e-05, 1.0264000000002882e-05, 6.014000000002101e-06, 8.236000000001742e-06, 1.0777000000000009e-05, 6.472000000000422e-06, 7.6...</msg>
<status status="PASS" starttime="20201030 15:51:30.418" endtime="20201030 15:51:30.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.424" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:30.423" endtime="20201030 15:51:30.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.426" level="INFO">VALUE: [7.958999999998356e-06, 8.041000000000298e-06, 1.0277999999998982e-05, 1.0264000000002882e-05, 6.014000000002101e-06, 8.236000000001742e-06, 1.0777000000000009e-05, 6.472000000000422e-06, 7.666999999999397e-06, 6.388999999999007e-06, 7.2779999999994516e-06, 4.832999999999227e-06, 7.208000000001602e-06, 4.596999999998547e-06, 9.458999999999856e-06, 8.028000000000202e-06, 8.332999999999258e-06, 8.389000000001007e-06, 9.277000000001978e-06, 1.0611000000000648e-05, 6.9719999999974525e-06, 6.888999999999507e-06, 7.013999999999632e-06, 6.6669999999983964e-06, 6.583000000000977e-06]</msg>
<status status="PASS" starttime="20201030 15:51:30.425" endtime="20201030 15:51:30.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.421" endtime="20201030 15:51:30.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.431" endtime="20201030 15:51:30.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.430" endtime="20201030 15:51:30.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.428" endtime="20201030 15:51:30.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.093" endtime="20201030 15:51:30.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.093" endtime="20201030 15:51:30.452"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.461" endtime="20201030 15:51:30.475"></status>
</kw>
<msg timestamp="20201030 15:51:30.475" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.458" endtime="20201030 15:51:30.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.478" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.477" endtime="20201030 15:51:30.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.479" endtime="20201030 15:51:30.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.456" endtime="20201030 15:51:30.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.454" endtime="20201030 15:51:30.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.488" endtime="20201030 15:51:30.757"></status>
</kw>
<msg timestamp="20201030 15:51:30.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018670611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018676097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.487" endtime="20201030 15:51:30.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018670611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018676097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.760" endtime="20201030 15:51:30.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.765" endtime="20201030 15:51:30.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.484" endtime="20201030 15:51:30.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.482" endtime="20201030 15:51:30.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:30.771" level="INFO">${RESULT} = [{'diff': 5.485999999998992e-06}, {'diff': 9.708000000000633e-06}, {'diff': 1.0889000000000038e-05}, {'diff': 7.791000000000048e-06}, {'diff': 6.944999999997786e-06}, {'diff': 9.847000000000328e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:30.768" endtime="20201030 15:51:30.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:30.774" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.485999999998992e-06, 9.708000000000633e-06, 1.0889000000000038e-05, 7.791000000000048e-06, 6.944999999997786e-06, 9.847000000000328e-06, 5.068999999999907e-06, 6.792000000001991e-06, 8.000...</msg>
<status status="PASS" starttime="20201030 15:51:30.772" endtime="20201030 15:51:30.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.778" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:30.777" endtime="20201030 15:51:30.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.781" level="INFO">VALUE: [5.485999999998992e-06, 9.708000000000633e-06, 1.0889000000000038e-05, 7.791000000000048e-06, 6.944999999997786e-06, 9.847000000000328e-06, 5.068999999999907e-06, 6.792000000001991e-06, 8.000000000001062e-06, 7.763999999996912e-06, 8.709000000002576e-06, 1.0236000000000273e-05, 8.847000000002797e-06, 8.639000000001257e-06, 7.819999999998661e-06, 8.528000000000702e-06, 1.0013999999999162e-05, 5.457999999999852e-06, 9.847000000000328e-06, 8.235999999998272e-06, 9.291999999997552e-06, 7.320000000001631e-06, 5.902000000002072e-06, 9.833000000000758e-06, 6.151999999998853e-06]</msg>
<status status="PASS" starttime="20201030 15:51:30.779" endtime="20201030 15:51:30.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.775" endtime="20201030 15:51:30.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.786" endtime="20201030 15:51:30.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.784" endtime="20201030 15:51:30.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.782" endtime="20201030 15:51:30.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.453" endtime="20201030 15:51:30.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.452" endtime="20201030 15:51:30.806"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.817" endtime="20201030 15:51:30.831"></status>
</kw>
<msg timestamp="20201030 15:51:30.832" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.813" endtime="20201030 15:51:30.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.834" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.833" endtime="20201030 15:51:30.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.836" endtime="20201030 15:51:30.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.810" endtime="20201030 15:51:30.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.808" endtime="20201030 15:51:30.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.845" endtime="20201030 15:51:31.113"></status>
</kw>
<msg timestamp="20201030 15:51:31.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020493847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020500361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.843" endtime="20201030 15:51:31.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020493847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020500361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.116" endtime="20201030 15:51:31.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.122" endtime="20201030 15:51:31.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.841" endtime="20201030 15:51:31.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.839" endtime="20201030 15:51:31.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:31.128" level="INFO">${RESULT} = [{'diff': 6.514000000002601e-06}, {'diff': 9.528000000001702e-06}, {'diff': 6.401999999999103e-06}, {'diff': 7.5969999999980775e-06}, {'diff': 8.347000000002297e-06}, {'diff': 7.2779999999994516e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:31.125" endtime="20201030 15:51:31.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:31.131" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.514000000002601e-06, 9.528000000001702e-06, 6.401999999999103e-06, 7.5969999999980775e-06, 8.347000000002297e-06, 7.2779999999994516e-06, 1.0958000000001883e-05, 1.0082999999997538e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:51:31.129" endtime="20201030 15:51:31.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.135" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:31.134" endtime="20201030 15:51:31.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.137" level="INFO">VALUE: [6.514000000002601e-06, 9.528000000001702e-06, 6.401999999999103e-06, 7.5969999999980775e-06, 8.347000000002297e-06, 7.2779999999994516e-06, 1.0958000000001883e-05, 1.0082999999997538e-05, 5.444000000000282e-06, 6.7079999999976325e-06, 1.0013999999999162e-05, 1.0402999999999107e-05, 6.333000000000727e-06, 8.111000000001617e-06, 5.332999999999727e-06, 8.375000000001437e-06, 8.653000000000827e-06, 7.5969999999980775e-06, 7.903000000000077e-06, 1.0151999999999384e-05, 7.056000000001811e-06, 1.0597999999997082e-05, 7.514000000000132e-06, 1.0957999999998413e-05, 7.347000000001297e-06]</msg>
<status status="PASS" starttime="20201030 15:51:31.136" endtime="20201030 15:51:31.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.132" endtime="20201030 15:51:31.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.142" endtime="20201030 15:51:31.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.141" endtime="20201030 15:51:31.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.139" endtime="20201030 15:51:31.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.807" endtime="20201030 15:51:31.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.807" endtime="20201030 15:51:31.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.978" endtime="20201030 15:51:31.163"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:23.906" endtime="20201030 15:51:31.164" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.171" endtime="20201030 15:51:31.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.169" endtime="20201030 15:51:31.191"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.205" endtime="20201030 15:51:31.221"></status>
</kw>
<msg timestamp="20201030 15:51:31.222" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.203" endtime="20201030 15:51:31.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.224" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.223" endtime="20201030 15:51:31.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.227" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:31.226" endtime="20201030 15:51:31.228"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:31.201" endtime="20201030 15:51:31.229"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:31.198" endtime="20201030 15:51:31.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.197" endtime="20201030 15:51:31.229"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:31.234" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:31.233" endtime="20201030 15:51:31.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.230" endtime="20201030 15:51:31.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.196" endtime="20201030 15:51:31.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.195" endtime="20201030 15:51:31.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.235" endtime="20201030 15:51:31.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.193" endtime="20201030 15:51:31.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.192" endtime="20201030 15:51:31.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.168" endtime="20201030 15:51:31.239"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.248" endtime="20201030 15:51:31.264"></status>
</kw>
<msg timestamp="20201030 15:51:31.264" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.246" endtime="20201030 15:51:31.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.267" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.265" endtime="20201030 15:51:31.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.268" endtime="20201030 15:51:31.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.243" endtime="20201030 15:51:31.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.242" endtime="20201030 15:51:31.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.278" endtime="20201030 15:51:31.569"></status>
</kw>
<msg timestamp="20201030 15:51:31.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06704025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067042014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:31.276" endtime="20201030 15:51:31.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06704025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067042014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:31.574" endtime="20201030 15:51:31.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.584" endtime="20201030 15:51:31.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.273" endtime="20201030 15:51:31.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.271" endtime="20201030 15:51:31.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:31.591" level="INFO">${RESULT} = [{'diff': 1.76400000000132e-06}, {'diff': 1.7770000000083552e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-06...</msg>
<status status="PASS" starttime="20201030 15:51:31.587" endtime="20201030 15:51:31.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:31.595" level="INFO">${OVERHEAD} = {'diff': [1.76400000000132e-06, 1.7770000000083552e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999883025e-06, 1.7359999999883025e-06, ...</msg>
<status status="PASS" starttime="20201030 15:51:31.592" endtime="20201030 15:51:31.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.599" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:31.598" endtime="20201030 15:51:31.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.602" level="INFO">VALUE: [1.76400000000132e-06, 1.7770000000083552e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999883025e-06, 1.7359999999883025e-06, 1.7219999999956714e-06, 1.7920000000004599e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999883025e-06, 1.7499999999948113e-06, 1.7780000000078289e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7780000000078289e-06, 1.7359999999883025e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.722999999995145e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.777999999993951e-06, 1.7360000000021802e-06, 1.7359999999883025e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7220000000095492e-06, 1.6949999999960053e-06, 1.7220000000095492e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7920000000004599e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999883025e-06, 1.7360000000021802e-06, 1.6530000000042344e-06, 1.777999999993951e-06]</msg>
<status status="PASS" starttime="20201030 15:51:31.600" endtime="20201030 15:51:31.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.596" endtime="20201030 15:51:31.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.607" endtime="20201030 15:51:31.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.605" endtime="20201030 15:51:31.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.604" endtime="20201030 15:51:31.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.240" endtime="20201030 15:51:31.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.240" endtime="20201030 15:51:31.627"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.637" endtime="20201030 15:51:31.651"></status>
</kw>
<msg timestamp="20201030 15:51:31.652" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.635" endtime="20201030 15:51:31.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.726" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.653" endtime="20201030 15:51:31.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.728" endtime="20201030 15:51:31.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.631" endtime="20201030 15:51:31.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.630" endtime="20201030 15:51:31.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.749" endtime="20201030 15:51:32.061"></status>
</kw>
<msg timestamp="20201030 15:51:32.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019383222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019384986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.745" endtime="20201030 15:51:32.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019383222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019384986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.065" endtime="20201030 15:51:32.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.074" endtime="20201030 15:51:32.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.739" endtime="20201030 15:51:32.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.736" endtime="20201030 15:51:32.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.081" level="INFO">${RESULT} = [{'diff': 1.76400000000132e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7499999999982807e-06...</msg>
<status status="PASS" starttime="20201030 15:51:32.078" endtime="20201030 15:51:32.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:32.085" level="INFO">${OVERHEAD} = {'diff': [1.76400000000132e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, ...</msg>
<status status="PASS" starttime="20201030 15:51:32.082" endtime="20201030 15:51:32.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.091" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:32.089" endtime="20201030 15:51:32.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.093" level="INFO">VALUE: [1.76400000000132e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.723000000002084e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.7500000000017502e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7370000000016539e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 15:51:32.092" endtime="20201030 15:51:32.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.086" endtime="20201030 15:51:32.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.098" endtime="20201030 15:51:32.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.096" endtime="20201030 15:51:32.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.095" endtime="20201030 15:51:32.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.628" endtime="20201030 15:51:32.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.628" endtime="20201030 15:51:32.119"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.127" endtime="20201030 15:51:32.143"></status>
</kw>
<msg timestamp="20201030 15:51:32.143" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.125" endtime="20201030 15:51:32.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.146" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.145" endtime="20201030 15:51:32.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.147" endtime="20201030 15:51:32.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.123" endtime="20201030 15:51:32.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.121" endtime="20201030 15:51:32.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.157" endtime="20201030 15:51:32.445"></status>
</kw>
<msg timestamp="20201030 15:51:32.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018971806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018973528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.155" endtime="20201030 15:51:32.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018971806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018973528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.449" endtime="20201030 15:51:32.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.457" endtime="20201030 15:51:32.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.153" endtime="20201030 15:51:32.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.151" endtime="20201030 15:51:32.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.464" level="INFO">${RESULT} = [{'diff': 1.7219999999991409e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.76400000000132e-06}, {'diff': 1.723000000002084e-06}, {'diff': 1.7360000000021802e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:32.461" endtime="20201030 15:51:32.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:32.469" level="INFO">${OVERHEAD} = {'diff': [1.7219999999991409e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:51:32.465" endtime="20201030 15:51:32.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.473" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:32.472" endtime="20201030 15:51:32.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.476" level="INFO">VALUE: [1.7219999999991409e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7779999999974205e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.6950000000029442e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7370000000016539e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7080000000030404e-06, 1.7359999999987108e-06, 1.6660000000008612e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7369999999981844e-06, 1.7089999999990446e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7219999999991409e-06]</msg>
<status status="PASS" starttime="20201030 15:51:32.474" endtime="20201030 15:51:32.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.470" endtime="20201030 15:51:32.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.480" endtime="20201030 15:51:32.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.479" endtime="20201030 15:51:32.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.477" endtime="20201030 15:51:32.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.120" endtime="20201030 15:51:32.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.119" endtime="20201030 15:51:32.501"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.509" endtime="20201030 15:51:32.525"></status>
</kw>
<msg timestamp="20201030 15:51:32.525" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.508" endtime="20201030 15:51:32.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.527" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.526" endtime="20201030 15:51:32.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.529" endtime="20201030 15:51:32.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.505" endtime="20201030 15:51:32.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.503" endtime="20201030 15:51:32.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.538" endtime="20201030 15:51:32.845"></status>
</kw>
<msg timestamp="20201030 15:51:32.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018396556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018398278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.536" endtime="20201030 15:51:32.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018396556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018398278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.849" endtime="20201030 15:51:32.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.857" endtime="20201030 15:51:32.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.533" endtime="20201030 15:51:32.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.532" endtime="20201030 15:51:32.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.865" level="INFO">${RESULT} = [{'diff': 1.7219999999991409e-06}, {'diff': 1.7369999999981844e-06}, {'diff': 1.6800000000004311e-06}, {'diff': 1.7229999999986145e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7359999999987108e-...</msg>
<status status="PASS" starttime="20201030 15:51:32.862" endtime="20201030 15:51:32.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:32.869" level="INFO">${OVERHEAD} = {'diff': [1.7219999999991409e-06, 1.7369999999981844e-06, 1.6800000000004311e-06, 1.7229999999986145e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7500000000017502e-06...</msg>
<status status="PASS" starttime="20201030 15:51:32.866" endtime="20201030 15:51:32.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.873" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:32.872" endtime="20201030 15:51:32.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.875" level="INFO">VALUE: [1.7219999999991409e-06, 1.7369999999981844e-06, 1.6800000000004311e-06, 1.7229999999986145e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.6800000000004311e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7769999999979469e-06, 1.7369999999981844e-06, 1.7779999999974205e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7229999999986145e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.6949999999994747e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 15:51:32.874" endtime="20201030 15:51:32.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.870" endtime="20201030 15:51:32.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.880" endtime="20201030 15:51:32.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.878" endtime="20201030 15:51:32.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.877" endtime="20201030 15:51:32.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.502" endtime="20201030 15:51:32.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.501" endtime="20201030 15:51:32.901"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.909" endtime="20201030 15:51:32.925"></status>
</kw>
<msg timestamp="20201030 15:51:32.925" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.907" endtime="20201030 15:51:32.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.927" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.926" endtime="20201030 15:51:32.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.929" endtime="20201030 15:51:32.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.905" endtime="20201030 15:51:32.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.903" endtime="20201030 15:51:32.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.939" endtime="20201030 15:51:33.224"></status>
</kw>
<msg timestamp="20201030 15:51:33.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018401597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018403333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.937" endtime="20201030 15:51:33.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018401597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018403333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.229" endtime="20201030 15:51:33.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.237" endtime="20201030 15:51:33.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.934" endtime="20201030 15:51:33.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.933" endtime="20201030 15:51:33.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.244" level="INFO">${RESULT} = [{'diff': 1.7360000000021802e-06}, {'diff': 1.7499999999982807e-06}, {'diff': 1.77800000000089e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7920000000004599e-06...</msg>
<status status="PASS" starttime="20201030 15:51:33.240" endtime="20201030 15:51:33.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:33.248" level="INFO">${OVERHEAD} = {'diff': [1.7360000000021802e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7920000000004599e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, ...</msg>
<status status="PASS" starttime="20201030 15:51:33.245" endtime="20201030 15:51:33.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.252" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:33.251" endtime="20201030 15:51:33.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.254" level="INFO">VALUE: [1.7360000000021802e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7920000000004599e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7779999999974205e-06, 1.7369999999981844e-06, 1.7219999999991409e-06, 1.7089999999990446e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7219999999991409e-06]</msg>
<status status="PASS" starttime="20201030 15:51:33.253" endtime="20201030 15:51:33.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.249" endtime="20201030 15:51:33.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.260" endtime="20201030 15:51:33.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.259" endtime="20201030 15:51:33.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.257" endtime="20201030 15:51:33.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.902" endtime="20201030 15:51:33.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.901" endtime="20201030 15:51:33.281"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.289" endtime="20201030 15:51:33.304"></status>
</kw>
<msg timestamp="20201030 15:51:33.304" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.287" endtime="20201030 15:51:33.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.306" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.305" endtime="20201030 15:51:33.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.307" endtime="20201030 15:51:33.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.285" endtime="20201030 15:51:33.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.283" endtime="20201030 15:51:33.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.317" endtime="20201030 15:51:33.596"></status>
</kw>
<msg timestamp="20201030 15:51:33.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018227764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0182295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:33.315" endtime="20201030 15:51:33.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018227764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0182295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:33.601" endtime="20201030 15:51:33.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.610" endtime="20201030 15:51:33.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.312" endtime="20201030 15:51:33.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.311" endtime="20201030 15:51:33.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.616" level="INFO">${RESULT} = [{'diff': 1.7359999999987108e-06}, {'diff': 1.6950000000029442e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7499999999982807e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7499999999982807e-...</msg>
<status status="PASS" starttime="20201030 15:51:33.613" endtime="20201030 15:51:33.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:33.621" level="INFO">${OVERHEAD} = {'diff': [1.7359999999987108e-06, 1.6950000000029442e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7499999999982807e-06...</msg>
<status status="PASS" starttime="20201030 15:51:33.617" endtime="20201030 15:51:33.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.625" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:33.624" endtime="20201030 15:51:33.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.628" level="INFO">VALUE: [1.7359999999987108e-06, 1.6950000000029442e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.7229999999986145e-06, 1.7229999999986145e-06, 1.8060000000000298e-06, 1.6529999999972955e-06, 1.707999999999571e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.8060000000000298e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.6670000000003349e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.709000000002514e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.6800000000004311e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201030 15:51:33.626" endtime="20201030 15:51:33.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.622" endtime="20201030 15:51:33.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.633" endtime="20201030 15:51:33.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.631" endtime="20201030 15:51:33.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.630" endtime="20201030 15:51:33.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.282" endtime="20201030 15:51:33.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.281" endtime="20201030 15:51:33.653"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.661" endtime="20201030 15:51:33.677"></status>
</kw>
<msg timestamp="20201030 15:51:33.677" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.660" endtime="20201030 15:51:33.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.681" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.679" endtime="20201030 15:51:33.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.682" endtime="20201030 15:51:33.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.657" endtime="20201030 15:51:33.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.656" endtime="20201030 15:51:33.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.695" endtime="20201030 15:51:33.982"></status>
</kw>
<msg timestamp="20201030 15:51:33.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017996792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017998542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.692" endtime="20201030 15:51:33.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017996792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017998542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.986" endtime="20201030 15:51:33.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.995" endtime="20201030 15:51:33.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.688" endtime="20201030 15:51:33.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.686" endtime="20201030 15:51:33.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.002" level="INFO">${RESULT} = [{'diff': 1.7499999999982807e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.77800000000089e-06}, {'diff': 1.723000000002084e-06}, {'diff': 1.7499999999982807e-06}, {'diff': 1.7360000000021802e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:33.999" endtime="20201030 15:51:34.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:34.006" level="INFO">${OVERHEAD} = {'diff': [1.7499999999982807e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.723000000002084e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:51:34.003" endtime="20201030 15:51:34.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.010" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:34.009" endtime="20201030 15:51:34.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.013" level="INFO">VALUE: [1.7499999999982807e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.723000000002084e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.819000000000126e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.694000000000001e-06, 1.7369999999981844e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7229999999986145e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.709000000002514e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7369999999981844e-06, 1.7769999999979469e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 15:51:34.011" endtime="20201030 15:51:34.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.007" endtime="20201030 15:51:34.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.018" endtime="20201030 15:51:34.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.016" endtime="20201030 15:51:34.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.015" endtime="20201030 15:51:34.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.654" endtime="20201030 15:51:34.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.654" endtime="20201030 15:51:34.039"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.046" endtime="20201030 15:51:34.062"></status>
</kw>
<msg timestamp="20201030 15:51:34.062" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.045" endtime="20201030 15:51:34.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.064" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.063" endtime="20201030 15:51:34.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.066" endtime="20201030 15:51:34.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.042" endtime="20201030 15:51:34.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.041" endtime="20201030 15:51:34.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.075" endtime="20201030 15:51:34.362"></status>
</kw>
<msg timestamp="20201030 15:51:34.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017995556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.074" endtime="20201030 15:51:34.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017995556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.366" endtime="20201030 15:51:34.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.375" endtime="20201030 15:51:34.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.071" endtime="20201030 15:51:34.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.070" endtime="20201030 15:51:34.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.382" level="INFO">${RESULT} = [{'diff': 1.7369999999981844e-06}, {'diff': 1.762999999998377e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.77800000000089e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:34.379" endtime="20201030 15:51:34.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:34.388" level="INFO">${OVERHEAD} = {'diff': [1.7369999999981844e-06, 1.762999999998377e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:51:34.383" endtime="20201030 15:51:34.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.392" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:34.391" endtime="20201030 15:51:34.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.395" level="INFO">VALUE: [1.7369999999981844e-06, 1.762999999998377e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7370000000016539e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.6670000000003349e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7219999999991409e-06]</msg>
<status status="PASS" starttime="20201030 15:51:34.393" endtime="20201030 15:51:34.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.389" endtime="20201030 15:51:34.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.404" endtime="20201030 15:51:34.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.403" endtime="20201030 15:51:34.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.401" endtime="20201030 15:51:34.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.039" endtime="20201030 15:51:34.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.039" endtime="20201030 15:51:34.425"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.433" endtime="20201030 15:51:34.448"></status>
</kw>
<msg timestamp="20201030 15:51:34.449" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.431" endtime="20201030 15:51:34.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.451" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.450" endtime="20201030 15:51:34.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.452" endtime="20201030 15:51:34.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.429" endtime="20201030 15:51:34.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.427" endtime="20201030 15:51:34.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.461" endtime="20201030 15:51:34.750"></status>
</kw>
<msg timestamp="20201030 15:51:34.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017870611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017872347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.460" endtime="20201030 15:51:34.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017870611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017872347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.754" endtime="20201030 15:51:34.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.762" endtime="20201030 15:51:34.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.457" endtime="20201030 15:51:34.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.455" endtime="20201030 15:51:34.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.769" level="INFO">${RESULT} = [{'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7360000000021802e-...</msg>
<status status="PASS" starttime="20201030 15:51:34.766" endtime="20201030 15:51:34.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:34.774" level="INFO">${OVERHEAD} = {'diff': [1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7920000000004599e-06...</msg>
<status status="PASS" starttime="20201030 15:51:34.770" endtime="20201030 15:51:34.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.778" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:34.777" endtime="20201030 15:51:34.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.780" level="INFO">VALUE: [1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7920000000004599e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.709000000002514e-06, 1.6949999999994747e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.8049999999970867e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7920000000004599e-06, 1.707999999999571e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7779999999974205e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201030 15:51:34.779" endtime="20201030 15:51:34.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.775" endtime="20201030 15:51:34.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.785" endtime="20201030 15:51:34.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.784" endtime="20201030 15:51:34.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.783" endtime="20201030 15:51:34.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.426" endtime="20201030 15:51:34.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.425" endtime="20201030 15:51:34.806"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.814" endtime="20201030 15:51:34.828"></status>
</kw>
<msg timestamp="20201030 15:51:34.829" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.812" endtime="20201030 15:51:34.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.831" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.830" endtime="20201030 15:51:34.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.832" endtime="20201030 15:51:34.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.810" endtime="20201030 15:51:34.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.808" endtime="20201030 15:51:34.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.841" endtime="20201030 15:51:35.130"></status>
</kw>
<msg timestamp="20201030 15:51:35.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017843236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017844986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.840" endtime="20201030 15:51:35.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017843236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017844986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.135" endtime="20201030 15:51:35.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.143" endtime="20201030 15:51:35.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.837" endtime="20201030 15:51:35.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.835" endtime="20201030 15:51:35.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.151" level="INFO">${RESULT} = [{'diff': 1.7500000000017502e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7369999999981844e-06}, {'diff': 1.7369999999981844e-...</msg>
<status status="PASS" starttime="20201030 15:51:35.147" endtime="20201030 15:51:35.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:35.155" level="INFO">${OVERHEAD} = {'diff': [1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7369999999981844e-06, 1.7360000000021802e-06, 1.7359999999987108e-06...</msg>
<status status="PASS" starttime="20201030 15:51:35.152" endtime="20201030 15:51:35.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.159" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:35.158" endtime="20201030 15:51:35.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.162" level="INFO">VALUE: [1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7369999999981844e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.6659999999973918e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.7360000000021802e-06, 1.6950000000029442e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.77800000000089e-06]</msg>
<status status="PASS" starttime="20201030 15:51:35.160" endtime="20201030 15:51:35.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.156" endtime="20201030 15:51:35.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.168" endtime="20201030 15:51:35.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.166" endtime="20201030 15:51:35.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.164" endtime="20201030 15:51:35.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.807" endtime="20201030 15:51:35.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.806" endtime="20201030 15:51:35.190"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.198" endtime="20201030 15:51:35.214"></status>
</kw>
<msg timestamp="20201030 15:51:35.215" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.197" endtime="20201030 15:51:35.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.217" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.216" endtime="20201030 15:51:35.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.218" endtime="20201030 15:51:35.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.194" endtime="20201030 15:51:35.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.192" endtime="20201030 15:51:35.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.230" endtime="20201030 15:51:35.514"></status>
</kw>
<msg timestamp="20201030 15:51:35.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01928175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0192835, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:35.227" endtime="20201030 15:51:35.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01928175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0192835, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:35.518" endtime="20201030 15:51:35.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.527" endtime="20201030 15:51:35.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.224" endtime="20201030 15:51:35.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.223" endtime="20201030 15:51:35.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.533" level="INFO">${RESULT} = [{'diff': 1.7499999999982807e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7370000000016539e-...</msg>
<status status="PASS" starttime="20201030 15:51:35.530" endtime="20201030 15:51:35.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:35.537" level="INFO">${OVERHEAD} = {'diff': [1.7499999999982807e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7360000000021802e-06...</msg>
<status status="PASS" starttime="20201030 15:51:35.534" endtime="20201030 15:51:35.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.542" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:35.540" endtime="20201030 15:51:35.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.544" level="INFO">VALUE: [1.7499999999982807e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7499999999982807e-06, 1.7220000000026103e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.6949999999994747e-06, 1.7219999999991409e-06, 1.7370000000016539e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7229999999986145e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7369999999981844e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7229999999986145e-06, 1.6950000000029442e-06, 1.7499999999982807e-06, 1.7219999999991409e-06]</msg>
<status status="PASS" starttime="20201030 15:51:35.543" endtime="20201030 15:51:35.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.538" endtime="20201030 15:51:35.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.550" endtime="20201030 15:51:35.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.548" endtime="20201030 15:51:35.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.547" endtime="20201030 15:51:35.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.191" endtime="20201030 15:51:35.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.190" endtime="20201030 15:51:35.571"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.578" endtime="20201030 15:51:35.594"></status>
</kw>
<msg timestamp="20201030 15:51:35.594" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.577" endtime="20201030 15:51:35.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.597" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.595" endtime="20201030 15:51:35.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.598" endtime="20201030 15:51:35.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.574" endtime="20201030 15:51:35.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.573" endtime="20201030 15:51:35.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.607" endtime="20201030 15:51:35.895"></status>
</kw>
<msg timestamp="20201030 15:51:35.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017840167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017841931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.605" endtime="20201030 15:51:35.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017840167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017841931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.900" endtime="20201030 15:51:35.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.908" endtime="20201030 15:51:35.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.603" endtime="20201030 15:51:35.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.601" endtime="20201030 15:51:35.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.914" level="INFO">${RESULT} = [{'diff': 1.7639999999978506e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.76400000000132e-06}, {'diff': 1.7920000000004599e-06}, {'diff': 1.7499999999982807e-06...</msg>
<status status="PASS" starttime="20201030 15:51:35.911" endtime="20201030 15:51:35.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:35.919" level="INFO">${OVERHEAD} = {'diff': [1.7639999999978506e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7920000000004599e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, ...</msg>
<status status="PASS" starttime="20201030 15:51:35.915" endtime="20201030 15:51:35.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.923" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:35.922" endtime="20201030 15:51:35.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.926" level="INFO">VALUE: [1.7639999999978506e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7920000000004599e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.653000000000765e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.6800000000004311e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7370000000016539e-06, 1.7369999999981844e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7089999999990446e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7500000000017502e-06, 1.6949999999994747e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7500000000017502e-06]</msg>
<status status="PASS" starttime="20201030 15:51:35.925" endtime="20201030 15:51:35.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.920" endtime="20201030 15:51:35.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.931" endtime="20201030 15:51:35.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.929" endtime="20201030 15:51:35.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.928" endtime="20201030 15:51:35.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.571" endtime="20201030 15:51:35.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.571" endtime="20201030 15:51:35.952"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.959" endtime="20201030 15:51:35.974"></status>
</kw>
<msg timestamp="20201030 15:51:35.974" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.958" endtime="20201030 15:51:35.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.977" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.976" endtime="20201030 15:51:35.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.978" endtime="20201030 15:51:35.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.955" endtime="20201030 15:51:35.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.954" endtime="20201030 15:51:35.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.987" endtime="20201030 15:51:36.277"></status>
</kw>
<msg timestamp="20201030 15:51:36.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017939431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017941181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.985" endtime="20201030 15:51:36.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017939431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017941181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.281" endtime="20201030 15:51:36.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.290" endtime="20201030 15:51:36.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.983" endtime="20201030 15:51:36.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.981" endtime="20201030 15:51:36.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.297" level="INFO">${RESULT} = [{'diff': 1.7500000000017502e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7360000000021802e-...</msg>
<status status="PASS" starttime="20201030 15:51:36.294" endtime="20201030 15:51:36.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:36.301" level="INFO">${OVERHEAD} = {'diff': [1.7500000000017502e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06...</msg>
<status status="PASS" starttime="20201030 15:51:36.298" endtime="20201030 15:51:36.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.305" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:36.304" endtime="20201030 15:51:36.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.308" level="INFO">VALUE: [1.7500000000017502e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7770000000014163e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7370000000016539e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201030 15:51:36.307" endtime="20201030 15:51:36.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.302" endtime="20201030 15:51:36.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.314" endtime="20201030 15:51:36.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.312" endtime="20201030 15:51:36.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.311" endtime="20201030 15:51:36.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.952" endtime="20201030 15:51:36.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.952" endtime="20201030 15:51:36.335"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.343" endtime="20201030 15:51:36.359"></status>
</kw>
<msg timestamp="20201030 15:51:36.359" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.341" endtime="20201030 15:51:36.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.363" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.361" endtime="20201030 15:51:36.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.365" endtime="20201030 15:51:36.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.339" endtime="20201030 15:51:36.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.337" endtime="20201030 15:51:36.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.381" endtime="20201030 15:51:36.663"></status>
</kw>
<msg timestamp="20201030 15:51:36.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018284722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018286486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.379" endtime="20201030 15:51:36.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018284722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018286486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.668" endtime="20201030 15:51:36.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.676" endtime="20201030 15:51:36.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.375" endtime="20201030 15:51:36.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.372" endtime="20201030 15:51:36.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.683" level="INFO">${RESULT} = [{'diff': 1.76400000000132e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.76400000000132e-06}, {'diff': 1.7229999999986145e-06}, {'diff': 1.7499999999982807e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:36.679" endtime="20201030 15:51:36.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:36.687" level="INFO">${OVERHEAD} = {'diff': [1.76400000000132e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7229999999986145e-06, 1.7499999999982807e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:51:36.684" endtime="20201030 15:51:36.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.691" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:36.690" endtime="20201030 15:51:36.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.693" level="INFO">VALUE: [1.76400000000132e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7229999999986145e-06, 1.7499999999982807e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.7369999999981844e-06, 1.6670000000003349e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.7779999999974205e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7229999999986145e-06]</msg>
<status status="PASS" starttime="20201030 15:51:36.692" endtime="20201030 15:51:36.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.688" endtime="20201030 15:51:36.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.705" endtime="20201030 15:51:36.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.703" endtime="20201030 15:51:36.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.702" endtime="20201030 15:51:36.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.336" endtime="20201030 15:51:36.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.335" endtime="20201030 15:51:36.726"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.733" endtime="20201030 15:51:36.749"></status>
</kw>
<msg timestamp="20201030 15:51:36.749" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.732" endtime="20201030 15:51:36.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.751" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.750" endtime="20201030 15:51:36.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.753" endtime="20201030 15:51:36.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.729" endtime="20201030 15:51:36.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.728" endtime="20201030 15:51:36.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.762" endtime="20201030 15:51:37.050"></status>
</kw>
<msg timestamp="20201030 15:51:37.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017909472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017911208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.760" endtime="20201030 15:51:37.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017909472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017911208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.054" endtime="20201030 15:51:37.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.063" endtime="20201030 15:51:37.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.757" endtime="20201030 15:51:37.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.756" endtime="20201030 15:51:37.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.069" level="INFO">${RESULT} = [{'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7229999999986145e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-...</msg>
<status status="PASS" starttime="20201030 15:51:37.066" endtime="20201030 15:51:37.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:37.074" level="INFO">${OVERHEAD} = {'diff': [1.7360000000021802e-06, 1.7360000000021802e-06, 1.7229999999986145e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7360000000021802e-06...</msg>
<status status="PASS" starttime="20201030 15:51:37.070" endtime="20201030 15:51:37.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.078" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:37.077" endtime="20201030 15:51:37.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.081" level="INFO">VALUE: [1.7360000000021802e-06, 1.7360000000021802e-06, 1.7229999999986145e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.6800000000004311e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.7089999999990446e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.694000000000001e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7639999999978506e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.6670000000003349e-06]</msg>
<status status="PASS" starttime="20201030 15:51:37.080" endtime="20201030 15:51:37.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.075" endtime="20201030 15:51:37.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.086" endtime="20201030 15:51:37.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.084" endtime="20201030 15:51:37.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.083" endtime="20201030 15:51:37.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.726" endtime="20201030 15:51:37.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.726" endtime="20201030 15:51:37.107"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.114" endtime="20201030 15:51:37.130"></status>
</kw>
<msg timestamp="20201030 15:51:37.130" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.113" endtime="20201030 15:51:37.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.133" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.131" endtime="20201030 15:51:37.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.134" endtime="20201030 15:51:37.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.110" endtime="20201030 15:51:37.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.109" endtime="20201030 15:51:37.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.143" endtime="20201030 15:51:37.432"></status>
</kw>
<msg timestamp="20201030 15:51:37.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017927208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017929014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.141" endtime="20201030 15:51:37.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017927208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017929014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.436" endtime="20201030 15:51:37.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.444" endtime="20201030 15:51:37.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.139" endtime="20201030 15:51:37.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.137" endtime="20201030 15:51:37.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.452" level="INFO">${RESULT} = [{'diff': 1.8060000000000298e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7360000000021802e-...</msg>
<status status="PASS" starttime="20201030 15:51:37.449" endtime="20201030 15:51:37.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:37.456" level="INFO">${OVERHEAD} = {'diff': [1.8060000000000298e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.6809999999999048e-06...</msg>
<status status="PASS" starttime="20201030 15:51:37.453" endtime="20201030 15:51:37.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.460" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:37.459" endtime="20201030 15:51:37.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.463" level="INFO">VALUE: [1.8060000000000298e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.6809999999999048e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.6800000000004311e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7639999999978506e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7369999999981844e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.723000000002084e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7080000000030404e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.7220000000026103e-06, 1.7779999999974205e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7229999999986145e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 15:51:37.461" endtime="20201030 15:51:37.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.457" endtime="20201030 15:51:37.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.467" endtime="20201030 15:51:37.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.466" endtime="20201030 15:51:37.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.465" endtime="20201030 15:51:37.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.107" endtime="20201030 15:51:37.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.107" endtime="20201030 15:51:37.488"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.496" endtime="20201030 15:51:37.511"></status>
</kw>
<msg timestamp="20201030 15:51:37.512" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.495" endtime="20201030 15:51:37.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.514" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.513" endtime="20201030 15:51:37.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.515" endtime="20201030 15:51:37.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.492" endtime="20201030 15:51:37.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.490" endtime="20201030 15:51:37.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.525" endtime="20201030 15:51:37.807"></status>
</kw>
<msg timestamp="20201030 15:51:37.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018119306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018121056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.524" endtime="20201030 15:51:37.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018119306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018121056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.811" endtime="20201030 15:51:37.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.819" endtime="20201030 15:51:37.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.521" endtime="20201030 15:51:37.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.519" endtime="20201030 15:51:37.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.826" level="INFO">${RESULT} = [{'diff': 1.7499999999982807e-06}, {'diff': 1.707999999999571e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.77800000000089e-06}, {'diff': 1.7359999999987108e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:37.823" endtime="20201030 15:51:37.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:37.830" level="INFO">${OVERHEAD} = {'diff': [1.7499999999982807e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7...</msg>
<status status="PASS" starttime="20201030 15:51:37.827" endtime="20201030 15:51:37.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.834" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:37.833" endtime="20201030 15:51:37.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.837" level="INFO">VALUE: [1.7499999999982807e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7779999999974205e-06, 1.7370000000016539e-06, 1.7500000000017502e-06, 1.7920000000004599e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7370000000016539e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7219999999991409e-06, 1.723000000002084e-06, 1.7359999999987108e-06, 1.6949999999994747e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.6669999999968654e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 15:51:37.835" endtime="20201030 15:51:37.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.831" endtime="20201030 15:51:37.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.844" endtime="20201030 15:51:37.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.843" endtime="20201030 15:51:37.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.842" endtime="20201030 15:51:37.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.489" endtime="20201030 15:51:37.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.489" endtime="20201030 15:51:37.865"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.873" endtime="20201030 15:51:37.888"></status>
</kw>
<msg timestamp="20201030 15:51:37.888" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.871" endtime="20201030 15:51:37.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.891" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.889" endtime="20201030 15:51:37.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.892" endtime="20201030 15:51:37.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.869" endtime="20201030 15:51:37.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.867" endtime="20201030 15:51:37.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.901" endtime="20201030 15:51:38.191"></status>
</kw>
<msg timestamp="20201030 15:51:38.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017901639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017903375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.899" endtime="20201030 15:51:38.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017901639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017903375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.195" endtime="20201030 15:51:38.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.203" endtime="20201030 15:51:38.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.897" endtime="20201030 15:51:38.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.895" endtime="20201030 15:51:38.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.210" level="INFO">${RESULT} = [{'diff': 1.7359999999987108e-06}, {'diff': 1.723000000002084e-06}, {'diff': 1.7499999999982807e-06}, {'diff': 1.707999999999571e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7360000000021802e-06...</msg>
<status status="PASS" starttime="20201030 15:51:38.207" endtime="20201030 15:51:38.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:38.215" level="INFO">${OVERHEAD} = {'diff': [1.7359999999987108e-06, 1.723000000002084e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, ...</msg>
<status status="PASS" starttime="20201030 15:51:38.211" endtime="20201030 15:51:38.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.219" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:38.218" endtime="20201030 15:51:38.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.221" level="INFO">VALUE: [1.7359999999987108e-06, 1.723000000002084e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7909999999975168e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.6809999999999048e-06, 1.7219999999991409e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 15:51:38.220" endtime="20201030 15:51:38.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.216" endtime="20201030 15:51:38.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.226" endtime="20201030 15:51:38.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.225" endtime="20201030 15:51:38.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.224" endtime="20201030 15:51:38.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.866" endtime="20201030 15:51:38.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.865" endtime="20201030 15:51:38.247"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.255" endtime="20201030 15:51:38.271"></status>
</kw>
<msg timestamp="20201030 15:51:38.271" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.253" endtime="20201030 15:51:38.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.273" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.272" endtime="20201030 15:51:38.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.275" endtime="20201030 15:51:38.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.251" endtime="20201030 15:51:38.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.249" endtime="20201030 15:51:38.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.283" endtime="20201030 15:51:38.566"></status>
</kw>
<msg timestamp="20201030 15:51:38.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018101056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018102792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.282" endtime="20201030 15:51:38.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018101056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018102792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.571" endtime="20201030 15:51:38.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.579" endtime="20201030 15:51:38.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.279" endtime="20201030 15:51:38.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.278" endtime="20201030 15:51:38.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.586" level="INFO">${RESULT} = [{'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.77800000000089e-06}, {'diff': 1.7370000000016539e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7360000000021802e-06...</msg>
<status status="PASS" starttime="20201030 15:51:38.583" endtime="20201030 15:51:38.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:38.591" level="INFO">${OVERHEAD} = {'diff': [1.7359999999987108e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7370000000016539e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, ...</msg>
<status status="PASS" starttime="20201030 15:51:38.587" endtime="20201030 15:51:38.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.595" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:38.594" endtime="20201030 15:51:38.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.597" level="INFO">VALUE: [1.7359999999987108e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7370000000016539e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.694000000000001e-06, 1.7369999999981844e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7770000000014163e-06, 1.7229999999986145e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 15:51:38.596" endtime="20201030 15:51:38.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.591" endtime="20201030 15:51:38.599"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.604" endtime="20201030 15:51:38.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.602" endtime="20201030 15:51:38.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.600" endtime="20201030 15:51:38.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.248" endtime="20201030 15:51:38.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.248" endtime="20201030 15:51:38.625"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.635" endtime="20201030 15:51:38.651"></status>
</kw>
<msg timestamp="20201030 15:51:38.651" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.633" endtime="20201030 15:51:38.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.654" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.652" endtime="20201030 15:51:38.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.655" endtime="20201030 15:51:38.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.631" endtime="20201030 15:51:38.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.628" endtime="20201030 15:51:38.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.665" endtime="20201030 15:51:38.947"></status>
</kw>
<msg timestamp="20201030 15:51:38.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.664" endtime="20201030 15:51:38.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.951" endtime="20201030 15:51:38.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.959" endtime="20201030 15:51:38.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.661" endtime="20201030 15:51:38.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.659" endtime="20201030 15:51:38.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.966" level="INFO">${RESULT} = [{'diff': 1.7219999999991409e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7370000000016539e-06}, {'diff': 1.7370000000016539e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7360000000021802e-...</msg>
<status status="PASS" starttime="20201030 15:51:38.963" endtime="20201030 15:51:38.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:38.970" level="INFO">${OVERHEAD} = {'diff': [1.7219999999991409e-06, 1.7219999999991409e-06, 1.7370000000016539e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7499999999982807e-06...</msg>
<status status="PASS" starttime="20201030 15:51:38.967" endtime="20201030 15:51:38.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.974" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:38.973" endtime="20201030 15:51:38.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.977" level="INFO">VALUE: [1.7219999999991409e-06, 1.7219999999991409e-06, 1.7370000000016539e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.8060000000000298e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 15:51:38.975" endtime="20201030 15:51:38.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.971" endtime="20201030 15:51:38.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.982" endtime="20201030 15:51:39.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.981" endtime="20201030 15:51:39.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.980" endtime="20201030 15:51:39.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.626" endtime="20201030 15:51:39.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.626" endtime="20201030 15:51:39.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.239" endtime="20201030 15:51:39.003"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:31.165" endtime="20201030 15:51:39.004" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.010" endtime="20201030 15:51:39.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.009" endtime="20201030 15:51:39.030"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.043" endtime="20201030 15:51:39.061"></status>
</kw>
<msg timestamp="20201030 15:51:39.062" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.042" endtime="20201030 15:51:39.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.064" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.063" endtime="20201030 15:51:39.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.067" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:39.065" endtime="20201030 15:51:39.068"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:39.039" endtime="20201030 15:51:39.068"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:39.037" endtime="20201030 15:51:39.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.036" endtime="20201030 15:51:39.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:39.073" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:39.072" endtime="20201030 15:51:39.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.070" endtime="20201030 15:51:39.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.035" endtime="20201030 15:51:39.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.034" endtime="20201030 15:51:39.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.075" endtime="20201030 15:51:39.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.033" endtime="20201030 15:51:39.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.031" endtime="20201030 15:51:39.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.008" endtime="20201030 15:51:39.077"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.087" endtime="20201030 15:51:39.108"></status>
</kw>
<msg timestamp="20201030 15:51:39.109" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.085" endtime="20201030 15:51:39.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.111" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.110" endtime="20201030 15:51:39.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.113" endtime="20201030 15:51:39.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.082" endtime="20201030 15:51:39.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.080" endtime="20201030 15:51:39.115"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.117" endtime="20201030 15:51:39.119"></status>
</kw>
<msg timestamp="20201030 15:51:39.119" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:51:39.116" endtime="20201030 15:51:39.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.124" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:39.122" endtime="20201030 15:51:39.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.126" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:39.125" endtime="20201030 15:51:39.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.120" endtime="20201030 15:51:39.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.130" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:39.129" endtime="20201030 15:51:39.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.132" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:39.131" endtime="20201030 15:51:39.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.127" endtime="20201030 15:51:39.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.140" endtime="20201030 15:51:39.428"></status>
</kw>
<msg timestamp="20201030 15:51:39.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066711889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066750417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.138" endtime="20201030 15:51:39.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066711889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066750417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.432" endtime="20201030 15:51:39.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.441" endtime="20201030 15:51:39.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.136" endtime="20201030 15:51:39.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.134" endtime="20201030 15:51:39.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.447" level="INFO">${RESULT} = [{'diff': 3.852800000000989e-05}, {'diff': 8.05600000000628e-06}, {'diff': 8.05600000000628e-06}, {'diff': 8.05600000000628e-06}, {'diff': 8.055000000006807e-06}, {'diff': 8.041999999999772e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:39.444" endtime="20201030 15:51:39.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:39.452" level="INFO">${OVERHEAD} = {'diff': [3.852800000000989e-05, 8.05600000000628e-06, 8.05600000000628e-06, 8.05600000000628e-06, 8.055000000006807e-06, 8.041999999999772e-06, 8.05600000000628e-06, 8.041999999999772e-06, 8.02800000...</msg>
<status status="PASS" starttime="20201030 15:51:39.448" endtime="20201030 15:51:39.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.457" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:39.456" endtime="20201030 15:51:39.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.459" level="INFO">VALUE: [3.852800000000989e-05, 8.05600000000628e-06, 8.05600000000628e-06, 8.05600000000628e-06, 8.055000000006807e-06, 8.041999999999772e-06, 8.05600000000628e-06, 8.041999999999772e-06, 8.02800000000714e-06, 8.041999999999772e-06, 8.054999999992929e-06, 8.014000000000632e-06, 8.069999999998911e-06, 8.097999999998051e-06, 8.041999999999772e-06, 7.999999999994123e-06, 8.069999999998911e-06, 8.041000000000298e-06, 8.027999999993263e-06, 8.055000000006807e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.05600000000628e-06, 7.999999999994123e-06, 8.055000000006807e-06, 8.027999999993263e-06, 8.124999999997717e-06, 7.999999999994123e-06, 8.097999999998051e-06, 8.05600000000628e-06, 8.02800000000714e-06, 8.041999999999772e-06, 8.08400000000542e-06, 8.054999999992929e-06, 8.041999999999772e-06, 8.054999999992929e-06, 8.055000000006807e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.055999999992403e-06, 8.055000000006807e-06, 8.000000000008e-06, 8.041000000000298e-06, 8.068999999999438e-06, 7.999999999994123e-06, 8.041000000000298e-06, 8.083000000005947e-06]</msg>
<status status="PASS" starttime="20201030 15:51:39.458" endtime="20201030 15:51:39.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.453" endtime="20201030 15:51:39.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.464" endtime="20201030 15:51:39.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.463" endtime="20201030 15:51:39.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.462" endtime="20201030 15:51:39.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.078" endtime="20201030 15:51:39.485"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:39.005" endtime="20201030 15:51:39.485" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.492" endtime="20201030 15:51:39.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.491" endtime="20201030 15:51:39.512"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.525" endtime="20201030 15:51:39.543"></status>
</kw>
<msg timestamp="20201030 15:51:39.543" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.523" endtime="20201030 15:51:39.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.546" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.544" endtime="20201030 15:51:39.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.550" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:39.547" endtime="20201030 15:51:39.550"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:39.521" endtime="20201030 15:51:39.551"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:39.518" endtime="20201030 15:51:39.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.517" endtime="20201030 15:51:39.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:39.555" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:39.554" endtime="20201030 15:51:39.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.552" endtime="20201030 15:51:39.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.516" endtime="20201030 15:51:39.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.516" endtime="20201030 15:51:39.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.557" endtime="20201030 15:51:39.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.514" endtime="20201030 15:51:39.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.513" endtime="20201030 15:51:39.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.489" endtime="20201030 15:51:39.560"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.568" endtime="20201030 15:51:39.637"></status>
</kw>
<msg timestamp="20201030 15:51:39.637" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.566" endtime="20201030 15:51:39.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.640" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.638" endtime="20201030 15:51:39.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.641" endtime="20201030 15:51:39.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.564" endtime="20201030 15:51:39.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.562" endtime="20201030 15:51:39.644"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.646" endtime="20201030 15:51:39.648"></status>
</kw>
<msg timestamp="20201030 15:51:39.648" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:51:39.645" endtime="20201030 15:51:39.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.652" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:39.651" endtime="20201030 15:51:39.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.654" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:39.653" endtime="20201030 15:51:39.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.649" endtime="20201030 15:51:39.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.659" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:39.658" endtime="20201030 15:51:39.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.661" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:39.660" endtime="20201030 15:51:39.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.656" endtime="20201030 15:51:39.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.668" endtime="20201030 15:51:39.960"></status>
</kw>
<msg timestamp="20201030 15:51:39.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066885236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066919306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.667" endtime="20201030 15:51:39.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066885236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066919306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.964" endtime="20201030 15:51:39.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.972" endtime="20201030 15:51:39.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.664" endtime="20201030 15:51:39.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.662" endtime="20201030 15:51:39.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.978" level="INFO">${RESULT} = [{'diff': 3.406999999999716e-05}, {'diff': 3.418100000000812e-05}, {'diff': 3.418100000000812e-05}, {'diff': 3.416700000000161e-05}, {'diff': 3.419500000000075e-05}, {'diff': 3.419400000000128e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:39.975" endtime="20201030 15:51:39.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:39.982" level="INFO">${OVERHEAD} = {'diff': [3.406999999999716e-05, 3.418100000000812e-05, 3.418100000000812e-05, 3.416700000000161e-05, 3.419500000000075e-05, 3.419400000000128e-05, 3.420799999999391e-05, 3.418100000000812e-05, 3.4181...</msg>
<status status="PASS" starttime="20201030 15:51:39.979" endtime="20201030 15:51:39.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.987" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:39.986" endtime="20201030 15:51:39.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.989" level="INFO">VALUE: [3.406999999999716e-05, 3.418100000000812e-05, 3.418100000000812e-05, 3.416700000000161e-05, 3.419500000000075e-05, 3.419400000000128e-05, 3.420799999999391e-05, 3.418100000000812e-05, 3.418100000000812e-05, 3.4194999999986875e-05, 3.4180999999994244e-05, 3.419500000000075e-05, 3.419500000000075e-05, 3.416700000000161e-05, 3.419400000000128e-05, 3.417999999999477e-05, 3.416700000000161e-05, 3.423600000000693e-05, 3.418100000000812e-05, 3.419500000000075e-05, 3.417999999999477e-05, 3.416700000000161e-05, 3.419400000000128e-05, 3.418000000000865e-05, 3.419400000000128e-05, 3.420799999999391e-05, 3.416599999998826e-05, 3.419400000000128e-05, 3.4124999999995964e-05, 3.4180999999994244e-05, 3.419400000000128e-05, 3.417999999999477e-05, 3.419500000000075e-05, 3.420900000000726e-05, 3.419400000000128e-05, 3.416600000000214e-05, 3.4152999999995104e-05, 3.416700000000161e-05, 3.419400000000128e-05, 3.418100000000812e-05, 3.418000000000865e-05, 3.4180999999994244e-05, 3.416600000000214e-05, 3.4180999999994244e-05, 3.416700000000161e-05, 3.4208999999993384e-05, 3.4166999999987735e-05, 3.417999999999477e-05, 3.417999999999477e-05, 3.4180999999994244e-05]</msg>
<status status="PASS" starttime="20201030 15:51:39.988" endtime="20201030 15:51:39.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.983" endtime="20201030 15:51:39.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.994" endtime="20201030 15:51:40.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.993" endtime="20201030 15:51:40.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.992" endtime="20201030 15:51:40.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.560" endtime="20201030 15:51:40.015"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:39.487" endtime="20201030 15:51:40.016" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.022" endtime="20201030 15:51:40.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.021" endtime="20201030 15:51:40.042"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.056" endtime="20201030 15:51:40.072"></status>
</kw>
<msg timestamp="20201030 15:51:40.073" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.055" endtime="20201030 15:51:40.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.076" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.074" endtime="20201030 15:51:40.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.079" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:40.077" endtime="20201030 15:51:40.079"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:40.052" endtime="20201030 15:51:40.080"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:40.050" endtime="20201030 15:51:40.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.048" endtime="20201030 15:51:40.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:40.084" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:40.083" endtime="20201030 15:51:40.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.081" endtime="20201030 15:51:40.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.047" endtime="20201030 15:51:40.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.046" endtime="20201030 15:51:40.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.086" endtime="20201030 15:51:40.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.045" endtime="20201030 15:51:40.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.043" endtime="20201030 15:51:40.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.020" endtime="20201030 15:51:40.089"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.097" endtime="20201030 15:51:40.294"></status>
</kw>
<msg timestamp="20201030 15:51:40.294" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.095" endtime="20201030 15:51:40.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.297" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.295" endtime="20201030 15:51:40.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.298" endtime="20201030 15:51:40.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.093" endtime="20201030 15:51:40.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.091" endtime="20201030 15:51:40.301"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.303" endtime="20201030 15:51:40.305"></status>
</kw>
<msg timestamp="20201030 15:51:40.305" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:51:40.302" endtime="20201030 15:51:40.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.310" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:40.308" endtime="20201030 15:51:40.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.312" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:40.311" endtime="20201030 15:51:40.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.306" endtime="20201030 15:51:40.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.317" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:40.316" endtime="20201030 15:51:40.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.320" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:40.319" endtime="20201030 15:51:40.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.314" endtime="20201030 15:51:40.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.327" endtime="20201030 15:51:40.631"></status>
</kw>
<msg timestamp="20201030 15:51:40.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067806167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067870889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.325" endtime="20201030 15:51:40.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067806167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067870889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.635" endtime="20201030 15:51:40.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.643" endtime="20201030 15:51:40.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.323" endtime="20201030 15:51:40.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.321" endtime="20201030 15:51:40.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:40.650" level="INFO">${RESULT} = [{'diff': 6.472200000000317e-05}, {'diff': 6.434700000000626e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.443100000000368e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.43750000000054e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:40.647" endtime="20201030 15:51:40.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:40.654" level="INFO">${OVERHEAD} = {'diff': [6.472200000000317e-05, 6.434700000000626e-05, 6.436099999999889e-05, 6.443100000000368e-05, 6.436099999999889e-05, 6.43750000000054e-05, 6.433399999999923e-05, 6.436099999999889e-05, 6.43609...</msg>
<status status="PASS" starttime="20201030 15:51:40.651" endtime="20201030 15:51:40.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.659" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:40.658" endtime="20201030 15:51:40.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.662" level="INFO">VALUE: [6.472200000000317e-05, 6.434700000000626e-05, 6.436099999999889e-05, 6.443100000000368e-05, 6.436099999999889e-05, 6.43750000000054e-05, 6.433399999999923e-05, 6.436099999999889e-05, 6.436099999999889e-05, 6.437499999999152e-05, 6.431900000000712e-05, 6.436099999999889e-05, 6.436099999999889e-05, 6.434700000000626e-05, 6.434800000000573e-05, 6.433399999999923e-05, 6.43750000000054e-05, 6.436199999998449e-05, 6.434700000002014e-05, 6.434700000002014e-05, 6.43200000000066e-05, 6.43750000000054e-05, 6.433299999999975e-05, 6.436100000001277e-05, 6.436100000001277e-05, 6.434800000001961e-05, 6.434699999999238e-05, 6.437499999997764e-05, 6.426399999998056e-05, 6.436100000001277e-05, 6.434699999999238e-05, 6.430600000001396e-05, 6.434699999999238e-05, 6.434699999999238e-05, 6.43750000000054e-05, 6.434699999999238e-05, 6.434700000002014e-05, 6.434800000001961e-05, 6.434699999999238e-05, 6.436100000001277e-05, 6.434800000001961e-05, 6.436099999998501e-05, 6.436100000001277e-05, 6.434699999999238e-05, 6.426400000000831e-05, 6.434699999999238e-05, 6.436100000001277e-05, 6.437499999997764e-05, 6.430600000001396e-05, 6.433299999999975e-05]</msg>
<status status="PASS" starttime="20201030 15:51:40.661" endtime="20201030 15:51:40.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.655" endtime="20201030 15:51:40.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.667" endtime="20201030 15:51:40.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.665" endtime="20201030 15:51:40.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.664" endtime="20201030 15:51:40.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.089" endtime="20201030 15:51:40.687"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:40.017" endtime="20201030 15:51:40.688" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.695" endtime="20201030 15:51:40.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.693" endtime="20201030 15:51:40.715"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.727" endtime="20201030 15:51:40.745"></status>
</kw>
<msg timestamp="20201030 15:51:40.746" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.726" endtime="20201030 15:51:40.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.749" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.747" endtime="20201030 15:51:40.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.752" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:40.750" endtime="20201030 15:51:40.752"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:40.723" endtime="20201030 15:51:40.753"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:40.721" endtime="20201030 15:51:40.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.720" endtime="20201030 15:51:40.754"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:40.757" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:40.757" endtime="20201030 15:51:40.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.754" endtime="20201030 15:51:40.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.719" endtime="20201030 15:51:40.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.718" endtime="20201030 15:51:40.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.759" endtime="20201030 15:51:40.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.717" endtime="20201030 15:51:40.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.715" endtime="20201030 15:51:40.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.692" endtime="20201030 15:51:40.762"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.773" endtime="20201030 15:51:40.796"></status>
</kw>
<msg timestamp="20201030 15:51:40.797" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.772" endtime="20201030 15:51:40.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.799" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.798" endtime="20201030 15:51:40.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.801" endtime="20201030 15:51:40.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.766" endtime="20201030 15:51:40.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.764" endtime="20201030 15:51:40.803"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.806" endtime="20201030 15:51:40.807"></status>
</kw>
<msg timestamp="20201030 15:51:40.808" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:51:40.804" endtime="20201030 15:51:40.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.812" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:40.811" endtime="20201030 15:51:40.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.814" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:40.813" endtime="20201030 15:51:40.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.808" endtime="20201030 15:51:40.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.818" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:40.817" endtime="20201030 15:51:40.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.820" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:40.819" endtime="20201030 15:51:40.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.815" endtime="20201030 15:51:40.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.827" endtime="20201030 15:51:41.112"></status>
</kw>
<msg timestamp="20201030 15:51:41.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069193847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069195403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.826" endtime="20201030 15:51:41.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069193847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069195403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.116" endtime="20201030 15:51:41.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.124" endtime="20201030 15:51:41.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.823" endtime="20201030 15:51:41.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.822" endtime="20201030 15:51:41.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.131" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5420000000071488e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.6109999999985858e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.514000000008009e-06...</msg>
<status status="PASS" starttime="20201030 15:51:41.128" endtime="20201030 15:51:41.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:41.137" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.6109999999985858e-06, 1.5550000000003061e-06, 1.514000000008009e-06, 1.5410000000076751e-06, 1.5279999999867622e-06, ...</msg>
<status status="PASS" starttime="20201030 15:51:41.132" endtime="20201030 15:51:41.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.142" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:41.141" endtime="20201030 15:51:41.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.145" level="INFO">VALUE: [1.5559999999997798e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.6109999999985858e-06, 1.5550000000003061e-06, 1.514000000008009e-06, 1.5410000000076751e-06, 1.5279999999867622e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.4720000000023603e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5410000000076751e-06, 1.569000000006815e-06, 1.5420000000071488e-06, 1.5420000000071488e-06, 1.5700000000062886e-06, 1.5410000000076751e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5410000000076751e-06, 1.5550000000003061e-06, 1.4719999999884825e-06, 1.52800000000064e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.514000000008009e-06, 1.5420000000071488e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.5000000000015001e-06, 1.5550000000003061e-06]</msg>
<status status="PASS" starttime="20201030 15:51:41.143" endtime="20201030 15:51:41.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.138" endtime="20201030 15:51:41.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.151" endtime="20201030 15:51:41.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.149" endtime="20201030 15:51:41.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.148" endtime="20201030 15:51:41.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.762" endtime="20201030 15:51:41.172"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:40.689" endtime="20201030 15:51:41.173" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.180" endtime="20201030 15:51:41.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.178" endtime="20201030 15:51:41.200"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.213" endtime="20201030 15:51:41.231"></status>
</kw>
<msg timestamp="20201030 15:51:41.231" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.211" endtime="20201030 15:51:41.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.234" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.232" endtime="20201030 15:51:41.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.237" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:41.235" endtime="20201030 15:51:41.237"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:41.209" endtime="20201030 15:51:41.238"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:41.206" endtime="20201030 15:51:41.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.205" endtime="20201030 15:51:41.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:41.242" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:41.242" endtime="20201030 15:51:41.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.239" endtime="20201030 15:51:41.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.204" endtime="20201030 15:51:41.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.204" endtime="20201030 15:51:41.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.244" endtime="20201030 15:51:41.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.202" endtime="20201030 15:51:41.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.200" endtime="20201030 15:51:41.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.177" endtime="20201030 15:51:41.247"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.255" endtime="20201030 15:51:41.325"></status>
</kw>
<msg timestamp="20201030 15:51:41.325" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.254" endtime="20201030 15:51:41.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.327" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.326" endtime="20201030 15:51:41.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.329" endtime="20201030 15:51:41.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.251" endtime="20201030 15:51:41.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.249" endtime="20201030 15:51:41.332"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.334" endtime="20201030 15:51:41.335"></status>
</kw>
<msg timestamp="20201030 15:51:41.336" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:51:41.332" endtime="20201030 15:51:41.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.340" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:41.339" endtime="20201030 15:51:41.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.342" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:41.341" endtime="20201030 15:51:41.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.337" endtime="20201030 15:51:41.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.347" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:41.346" endtime="20201030 15:51:41.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.349" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:41.348" endtime="20201030 15:51:41.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.343" endtime="20201030 15:51:41.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.356" endtime="20201030 15:51:41.647"></status>
</kw>
<msg timestamp="20201030 15:51:41.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066785167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066794056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.355" endtime="20201030 15:51:41.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066785167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066794056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.651" endtime="20201030 15:51:41.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.659" endtime="20201030 15:51:41.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.352" endtime="20201030 15:51:41.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.350" endtime="20201030 15:51:41.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.666" level="INFO">${RESULT} = [{'diff': 8.888999999998037e-06}, {'diff': 8.875000000005406e-06}, {'diff': 8.889000000011915e-06}, {'diff': 8.887999999998564e-06}, {'diff': 8.874999999991529e-06}, {'diff': 8.875000000005406e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:41.663" endtime="20201030 15:51:41.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:41.670" level="INFO">${OVERHEAD} = {'diff': [8.888999999998037e-06, 8.875000000005406e-06, 8.889000000011915e-06, 8.887999999998564e-06, 8.874999999991529e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.901999999991195e-06, 8.9449...</msg>
<status status="PASS" starttime="20201030 15:51:41.667" endtime="20201030 15:51:41.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.675" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:41.674" endtime="20201030 15:51:41.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.678" level="INFO">VALUE: [8.888999999998037e-06, 8.875000000005406e-06, 8.889000000011915e-06, 8.887999999998564e-06, 8.874999999991529e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.901999999991195e-06, 8.944999999996317e-06, 8.889000000011915e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.847000000006267e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.917000000011055e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.971999999995983e-06, 8.861999999998371e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.902999999990668e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.944000000010721e-06, 8.902999999990668e-06, 8.888999999998037e-06, 8.889000000011915e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.888000000012442e-06, 8.874999999991529e-06, 8.860999999998898e-06, 8.902999999990668e-06, 8.874999999991529e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06]</msg>
<status status="PASS" starttime="20201030 15:51:41.676" endtime="20201030 15:51:41.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.671" endtime="20201030 15:51:41.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.683" endtime="20201030 15:51:41.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.681" endtime="20201030 15:51:41.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.680" endtime="20201030 15:51:41.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.247" endtime="20201030 15:51:41.703"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:41.174" endtime="20201030 15:51:41.704" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.711" endtime="20201030 15:51:41.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.710" endtime="20201030 15:51:41.731"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.745" endtime="20201030 15:51:41.762"></status>
</kw>
<msg timestamp="20201030 15:51:41.762" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.744" endtime="20201030 15:51:41.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.766" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.764" endtime="20201030 15:51:41.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.770" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:41.767" endtime="20201030 15:51:41.770"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:41.741" endtime="20201030 15:51:41.771"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:41.739" endtime="20201030 15:51:41.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.737" endtime="20201030 15:51:41.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:41.776" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:41.776" endtime="20201030 15:51:41.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.774" endtime="20201030 15:51:41.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.736" endtime="20201030 15:51:41.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.735" endtime="20201030 15:51:41.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.778" endtime="20201030 15:51:41.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.734" endtime="20201030 15:51:41.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.732" endtime="20201030 15:51:41.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.709" endtime="20201030 15:51:41.782"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.793" endtime="20201030 15:51:41.995"></status>
</kw>
<msg timestamp="20201030 15:51:41.996" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.791" endtime="20201030 15:51:41.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.001" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.998" endtime="20201030 15:51:42.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.005" endtime="20201030 15:51:42.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.788" endtime="20201030 15:51:42.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.785" endtime="20201030 15:51:42.010"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.015" endtime="20201030 15:51:42.018"></status>
</kw>
<msg timestamp="20201030 15:51:42.019" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:51:42.012" endtime="20201030 15:51:42.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.027" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:42.025" endtime="20201030 15:51:42.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.031" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:42.029" endtime="20201030 15:51:42.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.020" endtime="20201030 15:51:42.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.043" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:42.039" endtime="20201030 15:51:42.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.047" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:42.045" endtime="20201030 15:51:42.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.034" endtime="20201030 15:51:42.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.062" endtime="20201030 15:51:42.354"></status>
</kw>
<msg timestamp="20201030 15:51:42.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076035694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076052069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.060" endtime="20201030 15:51:42.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076035694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076052069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.358" endtime="20201030 15:51:42.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.366" endtime="20201030 15:51:42.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.056" endtime="20201030 15:51:42.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.051" endtime="20201030 15:51:42.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:42.372" level="INFO">${RESULT} = [{'diff': 1.637499999999903e-05}, {'diff': 1.6333999999992854e-05}, {'diff': 1.637499999999903e-05}, {'diff': 1.637499999999903e-05}, {'diff': 1.637499999999903e-05}, {'diff': 1.637499999999903e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:42.369" endtime="20201030 15:51:42.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:42.377" level="INFO">${OVERHEAD} = {'diff': [1.637499999999903e-05, 1.6333999999992854e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.638899999999166e-05, 1.640...</msg>
<status status="PASS" starttime="20201030 15:51:42.373" endtime="20201030 15:51:42.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.381" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:42.380" endtime="20201030 15:51:42.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.384" level="INFO">VALUE: [1.637499999999903e-05, 1.6333999999992854e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.638899999999166e-05, 1.640299999999817e-05, 1.637499999999903e-05, 1.6445000000003818e-05, 1.637499999999903e-05, 1.6445000000003818e-05, 1.6389000000005538e-05, 1.6388999999977782e-05, 1.633300000000726e-05, 1.6389000000005538e-05, 1.6388999999977782e-05, 1.6389000000005538e-05, 1.6388000000006064e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.63200000000141e-05, 1.6361000000020276e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.640299999999817e-05, 1.6389000000005538e-05, 1.6417000000018556e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.637499999998515e-05, 1.6389000000005538e-05, 1.634699999999989e-05, 1.6389000000005538e-05, 1.6332999999979503e-05, 1.6375000000012907e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.638799999997831e-05, 1.640299999999817e-05, 1.638799999997831e-05, 1.6375000000012907e-05, 1.6305999999993714e-05, 1.637499999998515e-05, 1.6389000000005538e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.6389000000005538e-05]</msg>
<status status="PASS" starttime="20201030 15:51:42.382" endtime="20201030 15:51:42.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.377" endtime="20201030 15:51:42.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.389" endtime="20201030 15:51:42.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.388" endtime="20201030 15:51:42.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.387" endtime="20201030 15:51:42.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.782" endtime="20201030 15:51:42.411"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:41.706" endtime="20201030 15:51:42.412" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.420" endtime="20201030 15:51:42.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.418" endtime="20201030 15:51:42.441"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.454" endtime="20201030 15:51:42.472"></status>
</kw>
<msg timestamp="20201030 15:51:42.472" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.453" endtime="20201030 15:51:42.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.475" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.474" endtime="20201030 15:51:42.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.478" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:42.476" endtime="20201030 15:51:42.478"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:42.450" endtime="20201030 15:51:42.479"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:42.448" endtime="20201030 15:51:42.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.446" endtime="20201030 15:51:42.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:42.484" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:42.483" endtime="20201030 15:51:42.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.481" endtime="20201030 15:51:42.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.446" endtime="20201030 15:51:42.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.445" endtime="20201030 15:51:42.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.485" endtime="20201030 15:51:42.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.444" endtime="20201030 15:51:42.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.442" endtime="20201030 15:51:42.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.417" endtime="20201030 15:51:42.488"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.492" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:42.500" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:43.572" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:42.490" endtime="20201030 15:51:43.573"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.576" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 15:51:43.574" endtime="20201030 15:51:44.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.489" endtime="20201030 15:51:44.579"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.604" endtime="20201030 15:51:44.618"></status>
</kw>
<msg timestamp="20201030 15:51:44.619" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.598" endtime="20201030 15:51:44.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.624" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.621" endtime="20201030 15:51:44.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.627" endtime="20201030 15:51:44.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.592" endtime="20201030 15:51:44.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.588" endtime="20201030 15:51:44.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.646" endtime="20201030 15:51:44.937"></status>
</kw>
<msg timestamp="20201030 15:51:44.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.773698625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.089888861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.643" endtime="20201030 15:51:44.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.773698625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.089888861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.941" endtime="20201030 15:51:44.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.950" endtime="20201030 15:51:44.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.638" endtime="20201030 15:51:44.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.634" endtime="20201030 15:51:44.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:44.956" level="INFO">${PHILIP_RES} = [{'diff': 0.31619023599999996}, {'diff': 5.224999999997593e-05}, {'diff': 8.084000000074809e-06}, {'diff': 8.069999999804622e-06}, {'diff': 8.069000000165971e-06}, {'diff': 8.082999999992069e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:44.953" endtime="20201030 15:51:44.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.962" level="INFO">${RESULT} = {'diff': [0.31619023599999996, 5.224999999997593e-05, 8.084000000074809e-06, 8.069999999804622e-06, 8.069000000165971e-06, 8.082999999992069e-06, 8.068999999721882e-06, 8.082999999992069e-06, 8.084000...</msg>
<status status="PASS" starttime="20201030 15:51:44.957" endtime="20201030 15:51:44.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.966" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:44.965" endtime="20201030 15:51:44.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.968" level="INFO">VALUE: [0.31619023599999996, 5.224999999997593e-05, 8.084000000074809e-06, 8.069999999804622e-06, 8.069000000165971e-06, 8.082999999992069e-06, 8.068999999721882e-06, 8.082999999992069e-06, 8.084000000074809e-06, 8.082999999992069e-06, 8.082999999992069e-06, 8.069000000165971e-06, 8.12499999991445e-06, 8.084000000074809e-06, 8.070000000248712e-06, 8.069000000165971e-06, 8.096999999818166e-06, 8.069000000165971e-06, 8.084000000074809e-06, 8.02799999988224e-06, 8.082999999992069e-06, 8.069000000165971e-06, 8.082999999992069e-06, 8.138999999740548e-06, 8.084000000074809e-06, 8.069000000165971e-06, 8.02799999988224e-06, 8.069000000165971e-06, 8.153000000010735e-06, 8.070000000248712e-06, 8.082999999992069e-06, 8.082999999992069e-06, 8.082999999992069e-06, 8.082999999992069e-06, 8.069999999804622e-06, 8.096999999818166e-06, 8.082999999992069e-06, 8.068999999721882e-06, 8.070000000248712e-06, 8.084000000074809e-06, 8.111000000088353e-06, 8.082999999992069e-06, 8.069000000165971e-06, 8.082999999992069e-06, 8.069999999804622e-06, 8.08399999963072e-06, 8.082999999992069e-06, 8.082999999992069e-06, 8.082999999992069e-06, 8.055999999978525e-06, 8.084000000074809e-06]</msg>
<status status="PASS" starttime="20201030 15:51:44.967" endtime="20201030 15:51:44.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.962" endtime="20201030 15:51:44.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.973" endtime="20201030 15:51:44.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.971" endtime="20201030 15:51:44.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.970" endtime="20201030 15:51:44.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.582" endtime="20201030 15:51:44.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.581" endtime="20201030 15:51:44.994"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.003" endtime="20201030 15:51:45.014"></status>
</kw>
<msg timestamp="20201030 15:51:45.015" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.001" endtime="20201030 15:51:45.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.017" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.016" endtime="20201030 15:51:45.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.018" endtime="20201030 15:51:45.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.998" endtime="20201030 15:51:45.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.996" endtime="20201030 15:51:45.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.027" endtime="20201030 15:51:45.314"></status>
</kw>
<msg timestamp="20201030 15:51:45.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018326444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018339583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.026" endtime="20201030 15:51:45.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018326444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018339583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.318" endtime="20201030 15:51:45.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.326" endtime="20201030 15:51:45.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.023" endtime="20201030 15:51:45.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.021" endtime="20201030 15:51:45.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:45.333" level="INFO">${PHILIP_RES} = [{'diff': 1.3138999999998818e-05}, {'diff': 1.2582999999996569e-05}, {'diff': 1.2597999999999082e-05}, {'diff': 1.2625000000002218e-05}, {'diff': 1.2597999999999082e-05}, {'diff': 1.2610999999999178e-...</msg>
<status status="PASS" starttime="20201030 15:51:45.330" endtime="20201030 15:51:45.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.338" level="INFO">${RESULT} = {'diff': [1.3138999999998818e-05, 1.2582999999996569e-05, 1.2597999999999082e-05, 1.2625000000002218e-05, 1.2597999999999082e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2583000000000039e-05...</msg>
<status status="PASS" starttime="20201030 15:51:45.334" endtime="20201030 15:51:45.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.343" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:45.342" endtime="20201030 15:51:45.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.345" level="INFO">VALUE: [1.3138999999998818e-05, 1.2582999999996569e-05, 1.2597999999999082e-05, 1.2625000000002218e-05, 1.2597999999999082e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2681000000000497e-05, 1.2624999999998748e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2612000000002122e-05, 1.2637999999998845e-05, 1.2680000000001024e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2653000000001358e-05, 1.2638999999998318e-05, 1.2596999999999609e-05, 1.2611000000002648e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2611999999998652e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2625000000002218e-05, 1.2638999999998318e-05, 1.2583000000000039e-05, 1.2638999999998318e-05, 1.2596999999999609e-05, 1.2639000000001788e-05, 1.2611000000002648e-05, 1.2610999999999178e-05, 1.2611999999998652e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2542000000000803e-05, 1.2611000000002648e-05, 1.2624999999998748e-05, 1.2610999999999178e-05, 1.2695000000000067e-05, 1.2610999999999178e-05, 1.2597000000003078e-05, 1.2610999999999178e-05, 1.2597999999999082e-05, 1.2624999999998748e-05, 1.2611999999998652e-05]</msg>
<status status="PASS" starttime="20201030 15:51:45.344" endtime="20201030 15:51:45.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.339" endtime="20201030 15:51:45.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.350" endtime="20201030 15:51:45.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.348" endtime="20201030 15:51:45.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.347" endtime="20201030 15:51:45.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.995" endtime="20201030 15:51:45.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.994" endtime="20201030 15:51:45.371"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.380" endtime="20201030 15:51:45.391"></status>
</kw>
<msg timestamp="20201030 15:51:45.391" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.378" endtime="20201030 15:51:45.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.394" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.392" endtime="20201030 15:51:45.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.395" endtime="20201030 15:51:45.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.375" endtime="20201030 15:51:45.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.373" endtime="20201030 15:51:45.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.410" endtime="20201030 15:51:45.705"></status>
</kw>
<msg timestamp="20201030 15:51:45.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018307056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018325347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.406" endtime="20201030 15:51:45.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018307056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018325347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.709" endtime="20201030 15:51:45.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.717" endtime="20201030 15:51:45.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.401" endtime="20201030 15:51:45.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.398" endtime="20201030 15:51:45.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:45.724" level="INFO">${PHILIP_RES} = [{'diff': 1.829100000000014e-05}, {'diff': 1.7750000000000404e-05}, {'diff': 1.7750000000000404e-05}, {'diff': 1.7750000000000404e-05}, {'diff': 1.777700000000007e-05}, {'diff': 1.7777999999999544e-05...</msg>
<status status="PASS" starttime="20201030 15:51:45.721" endtime="20201030 15:51:45.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.728" level="INFO">${RESULT} = {'diff': [1.829100000000014e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.777700000000007e-05, 1.7777999999999544e-05, 1.7763999999999974e-05, 1.7777999999999544e-05, ...</msg>
<status status="PASS" starttime="20201030 15:51:45.725" endtime="20201030 15:51:45.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.732" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:45.731" endtime="20201030 15:51:45.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.735" level="INFO">VALUE: [1.829100000000014e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.777700000000007e-05, 1.7777999999999544e-05, 1.7763999999999974e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.7791999999999114e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.776299999999703e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.7792000000002584e-05, 1.7763999999999974e-05, 1.7792000000002584e-05, 1.7805999999998684e-05, 1.780499999999921e-05, 1.780499999999921e-05, 1.780499999999921e-05, 1.7709000000001168e-05, 1.76950000000016e-05, 1.7735999999997365e-05, 1.7777999999999544e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.7735999999997365e-05, 1.7763999999999974e-05]</msg>
<status status="PASS" starttime="20201030 15:51:45.734" endtime="20201030 15:51:45.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.729" endtime="20201030 15:51:45.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.740" endtime="20201030 15:51:45.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.739" endtime="20201030 15:51:45.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.737" endtime="20201030 15:51:45.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.372" endtime="20201030 15:51:45.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.371" endtime="20201030 15:51:45.761"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.770" endtime="20201030 15:51:45.781"></status>
</kw>
<msg timestamp="20201030 15:51:45.782" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.768" endtime="20201030 15:51:45.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.784" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.783" endtime="20201030 15:51:45.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.785" endtime="20201030 15:51:45.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.765" endtime="20201030 15:51:45.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.763" endtime="20201030 15:51:45.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.794" endtime="20201030 15:51:46.080"></status>
</kw>
<msg timestamp="20201030 15:51:46.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018861569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018885625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.793" endtime="20201030 15:51:46.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018861569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018885625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.084" endtime="20201030 15:51:46.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.092" endtime="20201030 15:51:46.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.790" endtime="20201030 15:51:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.788" endtime="20201030 15:51:46.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:46.099" level="INFO">${PHILIP_RES} = [{'diff': 2.4055999999997996e-05}, {'diff': 2.3527999999998356e-05}, {'diff': 2.3526999999998882e-05}, {'diff': 2.3513999999998786e-05}, {'diff': 2.358300000000063e-05}, {'diff': 2.3541999999997926e-0...</msg>
<status status="PASS" starttime="20201030 15:51:46.096" endtime="20201030 15:51:46.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.103" level="INFO">${RESULT} = {'diff': [2.4055999999997996e-05, 2.3527999999998356e-05, 2.3526999999998882e-05, 2.3513999999998786e-05, 2.358300000000063e-05, 2.3541999999997926e-05, 2.3584000000000105e-05, 2.3513999999998786e-05,...</msg>
<status status="PASS" starttime="20201030 15:51:46.100" endtime="20201030 15:51:46.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.111" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:46.106" endtime="20201030 15:51:46.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.113" level="INFO">VALUE: [2.4055999999997996e-05, 2.3527999999998356e-05, 2.3526999999998882e-05, 2.3513999999998786e-05, 2.358300000000063e-05, 2.3541999999997926e-05, 2.3584000000000105e-05, 2.3513999999998786e-05, 2.3526999999998882e-05, 2.3500000000002685e-05, 2.3527999999998356e-05, 2.3542000000001395e-05, 2.3513999999998786e-05, 2.3513999999998786e-05, 2.3514000000002255e-05, 2.3527999999998356e-05, 2.3527999999998356e-05, 2.3513999999998786e-05, 2.3527999999998356e-05, 2.351300000000278e-05, 2.3526999999998882e-05, 2.3527999999998356e-05, 2.3542000000001395e-05, 2.3527999999998356e-05, 2.354100000000192e-05, 2.3526999999998882e-05, 2.3527999999998356e-05, 2.356900000000106e-05, 2.3527999999998356e-05, 2.3500000000002685e-05, 2.3540999999998452e-05, 2.3527999999998356e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.3528000000001825e-05, 2.3528000000001825e-05, 2.355500000000149e-05, 2.3528000000001825e-05, 2.3513999999998786e-05, 2.3514000000002255e-05, 2.3527999999998356e-05, 2.3526999999998882e-05, 2.3514000000002255e-05, 2.3527999999998356e-05, 2.3556000000000965e-05, 2.3513999999998786e-05, 2.3541999999997926e-05, 2.3528000000001825e-05, 2.3513999999998786e-05, 2.3528000000001825e-05]</msg>
<status status="PASS" starttime="20201030 15:51:46.112" endtime="20201030 15:51:46.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.104" endtime="20201030 15:51:46.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.118" endtime="20201030 15:51:46.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.117" endtime="20201030 15:51:46.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.116" endtime="20201030 15:51:46.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.762" endtime="20201030 15:51:46.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.761" endtime="20201030 15:51:46.139"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.148" endtime="20201030 15:51:46.159"></status>
</kw>
<msg timestamp="20201030 15:51:46.159" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.146" endtime="20201030 15:51:46.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.162" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.160" endtime="20201030 15:51:46.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.163" endtime="20201030 15:51:46.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.144" endtime="20201030 15:51:46.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.142" endtime="20201030 15:51:46.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.172" endtime="20201030 15:51:46.459"></status>
</kw>
<msg timestamp="20201030 15:51:46.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018193972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018224403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.170" endtime="20201030 15:51:46.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018193972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018224403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.465" endtime="20201030 15:51:46.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.475" endtime="20201030 15:51:46.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.168" endtime="20201030 15:51:46.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.166" endtime="20201030 15:51:46.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:46.482" level="INFO">${PHILIP_RES} = [{'diff': 3.0431000000000902e-05}, {'diff': 2.9874999999998653e-05}, {'diff': 2.9903000000001262e-05}, {'diff': 2.9874999999998653e-05}, {'diff': 2.9931000000000402e-05}, {'diff': 2.9903000000001262e-...</msg>
<status status="PASS" starttime="20201030 15:51:46.479" endtime="20201030 15:51:46.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.488" level="INFO">${RESULT} = {'diff': [3.0431000000000902e-05, 2.9874999999998653e-05, 2.9903000000001262e-05, 2.9874999999998653e-05, 2.9931000000000402e-05, 2.9903000000001262e-05, 2.9903000000001262e-05, 2.988800000000222e-05,...</msg>
<status status="PASS" starttime="20201030 15:51:46.483" endtime="20201030 15:51:46.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.495" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:46.494" endtime="20201030 15:51:46.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.498" level="INFO">VALUE: [3.0431000000000902e-05, 2.9874999999998653e-05, 2.9903000000001262e-05, 2.9874999999998653e-05, 2.9931000000000402e-05, 2.9903000000001262e-05, 2.9903000000001262e-05, 2.988800000000222e-05, 2.9903000000001262e-05, 2.9889000000001692e-05, 2.9889000000001692e-05, 2.9903000000001262e-05, 2.9846999999999513e-05, 2.9903000000001262e-05, 2.9875000000002122e-05, 2.9902000000001788e-05, 2.9875000000002122e-05, 2.9917000000000832e-05, 2.9916000000001358e-05, 2.9888999999998223e-05, 2.9917000000000832e-05, 2.9860999999999083e-05, 2.9916999999997362e-05, 2.990199999999832e-05, 2.9875000000002122e-05, 2.9902999999997792e-05, 2.990199999999832e-05, 2.9930999999996932e-05, 2.9902999999997792e-05, 2.990199999999832e-05, 2.994499999999997e-05, 2.990199999999832e-05, 2.9916999999997362e-05, 2.9888999999998223e-05, 2.990199999999832e-05, 2.9902999999997792e-05, 2.9903000000001262e-05, 2.9860999999999083e-05, 2.9874999999998653e-05, 2.9902000000001788e-05, 2.9917000000000832e-05, 2.9931000000000402e-05, 2.9889000000001692e-05, 2.9903000000001262e-05, 2.997299999999911e-05, 2.9903000000001262e-05, 2.9903000000001262e-05, 2.9916000000001358e-05, 2.9944000000000498e-05, 2.9903000000001262e-05]</msg>
<status status="PASS" starttime="20201030 15:51:46.496" endtime="20201030 15:51:46.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.489" endtime="20201030 15:51:46.500"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.504" endtime="20201030 15:51:46.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.502" endtime="20201030 15:51:46.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.501" endtime="20201030 15:51:46.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.140" endtime="20201030 15:51:46.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.139" endtime="20201030 15:51:46.524"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.533" endtime="20201030 15:51:46.544"></status>
</kw>
<msg timestamp="20201030 15:51:46.545" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.532" endtime="20201030 15:51:46.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.547" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.546" endtime="20201030 15:51:46.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.548" endtime="20201030 15:51:46.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.529" endtime="20201030 15:51:46.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.527" endtime="20201030 15:51:46.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.558" endtime="20201030 15:51:46.843"></status>
</kw>
<msg timestamp="20201030 15:51:46.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017958431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017995889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.556" endtime="20201030 15:51:46.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017958431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017995889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.847" endtime="20201030 15:51:46.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.855" endtime="20201030 15:51:46.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.553" endtime="20201030 15:51:46.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.552" endtime="20201030 15:51:46.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:46.863" level="INFO">${PHILIP_RES} = [{'diff': 3.745800000000063e-05}, {'diff': 3.6903000000001324e-05}, {'diff': 3.6889000000001754e-05}, {'diff': 3.6888999999998284e-05}, {'diff': 3.6917000000000894e-05}, {'diff': 3.690200000000185e-05...</msg>
<status status="PASS" starttime="20201030 15:51:46.860" endtime="20201030 15:51:46.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.867" level="INFO">${RESULT} = {'diff': [3.745800000000063e-05, 3.6903000000001324e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6917000000000894e-05, 3.690200000000185e-05, 3.6888999999998284e-05, 3.6888999999998284e-05, ...</msg>
<status status="PASS" starttime="20201030 15:51:46.864" endtime="20201030 15:51:46.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.872" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:46.871" endtime="20201030 15:51:46.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.874" level="INFO">VALUE: [3.745800000000063e-05, 3.6903000000001324e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6917000000000894e-05, 3.690200000000185e-05, 3.6888999999998284e-05, 3.6888999999998284e-05, 3.690200000000185e-05, 3.6875000000002184e-05, 3.6874999999998714e-05, 3.6888999999998284e-05, 3.6917000000000894e-05, 3.6874999999998714e-05, 3.6888999999998284e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.683399999999948e-05, 3.6902999999997854e-05, 3.6861000000002614e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.695800000000013e-05, 3.6889000000001754e-05, 3.6819000000000435e-05, 3.6874999999998714e-05, 3.6889000000001754e-05, 3.6903000000001324e-05, 3.6888999999998284e-05, 3.693000000000099e-05, 3.6889000000001754e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6903000000001324e-05, 3.6889000000001754e-05, 3.688799999999881e-05, 3.6917000000000894e-05, 3.6889000000001754e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.6874999999998714e-05, 3.695800000000013e-05, 3.6875000000002184e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.690199999999838e-05, 3.6889000000001754e-05, 3.6860999999999144e-05]</msg>
<status status="PASS" starttime="20201030 15:51:46.873" endtime="20201030 15:51:46.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.868" endtime="20201030 15:51:46.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.887" endtime="20201030 15:51:46.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.885" endtime="20201030 15:51:46.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.884" endtime="20201030 15:51:46.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.525" endtime="20201030 15:51:46.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.525" endtime="20201030 15:51:46.908"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.916" endtime="20201030 15:51:46.930"></status>
</kw>
<msg timestamp="20201030 15:51:46.931" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.914" endtime="20201030 15:51:46.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.933" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.932" endtime="20201030 15:51:46.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.934" endtime="20201030 15:51:46.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.912" endtime="20201030 15:51:46.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.910" endtime="20201030 15:51:46.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.944" endtime="20201030 15:51:47.229"></status>
</kw>
<msg timestamp="20201030 15:51:47.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018763361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018808375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.942" endtime="20201030 15:51:47.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018763361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018808375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.233" endtime="20201030 15:51:47.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.242" endtime="20201030 15:51:47.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.940" endtime="20201030 15:51:47.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.938" endtime="20201030 15:51:47.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:47.248" level="INFO">${PHILIP_RES} = [{'diff': 4.501399999999947e-05}, {'diff': 4.451400000000244e-05}, {'diff': 4.44999999999994e-05}, {'diff': 4.448599999999983e-05}, {'diff': 4.455600000000115e-05}, {'diff': 4.448599999999983e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:47.245" endtime="20201030 15:51:47.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.253" level="INFO">${RESULT} = {'diff': [4.501399999999947e-05, 4.451400000000244e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.455600000000115e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.4486999999999305e-05, 4.4472...</msg>
<status status="PASS" starttime="20201030 15:51:47.249" endtime="20201030 15:51:47.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.257" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:47.256" endtime="20201030 15:51:47.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.259" level="INFO">VALUE: [4.501399999999947e-05, 4.451400000000244e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.455600000000115e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.4486999999999305e-05, 4.4472999999999735e-05, 4.4459000000000165e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.44860000000033e-05, 4.447200000000026e-05, 4.4486999999999305e-05, 4.4487000000002774e-05, 4.448599999999983e-05, 4.45129999999995e-05, 4.450000000000287e-05, 4.454099999999864e-05, 4.447200000000026e-05, 4.451400000000244e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.445799999999722e-05, 4.447200000000026e-05, 4.44999999999994e-05, 4.455600000000115e-05, 4.44999999999994e-05, 4.447200000000026e-05, 4.4583000000000816e-05, 4.448599999999983e-05, 4.4417000000001455e-05, 4.448599999999983e-05, 4.452800000000201e-05, 4.44999999999994e-05, 4.447200000000026e-05]</msg>
<status status="PASS" starttime="20201030 15:51:47.258" endtime="20201030 15:51:47.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.253" endtime="20201030 15:51:47.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.265" endtime="20201030 15:51:47.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.264" endtime="20201030 15:51:47.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.263" endtime="20201030 15:51:47.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.909" endtime="20201030 15:51:47.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.908" endtime="20201030 15:51:47.286"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.294" endtime="20201030 15:51:47.307"></status>
</kw>
<msg timestamp="20201030 15:51:47.308" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.293" endtime="20201030 15:51:47.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.310" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.309" endtime="20201030 15:51:47.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.311" endtime="20201030 15:51:47.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.290" endtime="20201030 15:51:47.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.288" endtime="20201030 15:51:47.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.320" endtime="20201030 15:51:47.609"></status>
</kw>
<msg timestamp="20201030 15:51:47.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017835778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017888931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.319" endtime="20201030 15:51:47.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017835778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017888931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.613" endtime="20201030 15:51:47.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.621" endtime="20201030 15:51:47.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.316" endtime="20201030 15:51:47.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.314" endtime="20201030 15:51:47.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:47.630" level="INFO">${PHILIP_RES} = [{'diff': 5.315300000000023e-05}, {'diff': 5.2707999999998534e-05}, {'diff': 5.269499999999844e-05}, {'diff': 5.2679999999999394e-05}, {'diff': 5.269499999999844e-05}, {'diff': 5.263900000000016e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:47.625" endtime="20201030 15:51:47.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.640" level="INFO">${RESULT} = {'diff': [5.315300000000023e-05, 5.2707999999998534e-05, 5.269499999999844e-05, 5.2679999999999394e-05, 5.269499999999844e-05, 5.263900000000016e-05, 5.269499999999844e-05, 5.2679999999999394e-05, 5.2...</msg>
<status status="PASS" starttime="20201030 15:51:47.632" endtime="20201030 15:51:47.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.649" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:47.647" endtime="20201030 15:51:47.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.654" level="INFO">VALUE: [5.315300000000023e-05, 5.2707999999998534e-05, 5.269499999999844e-05, 5.2679999999999394e-05, 5.269499999999844e-05, 5.263900000000016e-05, 5.269499999999844e-05, 5.2679999999999394e-05, 5.272300000000105e-05, 5.265299999999973e-05, 5.2693999999998964e-05, 5.265299999999973e-05, 5.2679999999999394e-05, 5.269500000000191e-05, 5.2708000000002e-05, 5.277799999999985e-05, 5.272200000000157e-05, 5.270900000000148e-05, 5.2708000000002e-05, 5.2707999999998534e-05, 5.2693999999998964e-05, 5.2707999999998534e-05, 5.270899999999801e-05, 5.265299999999973e-05, 5.270899999999801e-05, 5.2679999999999394e-05, 5.26669999999993e-05, 5.2707999999998534e-05, 5.268100000000234e-05, 5.266700000000277e-05, 5.2708000000002e-05, 5.270900000000148e-05, 5.263900000000016e-05, 5.270900000000148e-05, 5.2708000000002e-05, 5.265299999999973e-05, 5.272200000000157e-05, 5.2708000000002e-05, 5.270900000000148e-05, 5.2721999999998104e-05, 5.272299999999758e-05, 5.263900000000016e-05, 5.270899999999801e-05, 5.2707999999998534e-05, 5.263900000000016e-05, 5.2693999999998964e-05, 5.2693999999998964e-05, 5.263899999999669e-05, 5.2708000000002e-05, 5.270900000000148e-05]</msg>
<status status="PASS" starttime="20201030 15:51:47.651" endtime="20201030 15:51:47.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.642" endtime="20201030 15:51:47.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.665" endtime="20201030 15:51:47.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.661" endtime="20201030 15:51:47.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.659" endtime="20201030 15:51:47.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.287" endtime="20201030 15:51:47.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.286" endtime="20201030 15:51:47.689"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.706" endtime="20201030 15:51:47.723"></status>
</kw>
<msg timestamp="20201030 15:51:47.724" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.703" endtime="20201030 15:51:47.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.729" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.726" endtime="20201030 15:51:47.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.730" endtime="20201030 15:51:47.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.698" endtime="20201030 15:51:47.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.694" endtime="20201030 15:51:47.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.739" endtime="20201030 15:51:48.024"></status>
</kw>
<msg timestamp="20201030 15:51:48.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031072819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031134903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.738" endtime="20201030 15:51:48.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031072819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031134903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.029" endtime="20201030 15:51:48.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.037" endtime="20201030 15:51:48.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.735" endtime="20201030 15:51:48.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.733" endtime="20201030 15:51:48.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:48.044" level="INFO">${PHILIP_RES} = [{'diff': 6.208399999999697e-05}, {'diff': 6.15560000000008e-05}, {'diff': 6.152800000000166e-05}, {'diff': 6.152699999999872e-05}, {'diff': 6.154199999999777e-05}, {'diff': 6.15279999999982e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:48.041" endtime="20201030 15:51:48.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.049" level="INFO">${RESULT} = {'diff': [6.208399999999697e-05, 6.15560000000008e-05, 6.152800000000166e-05, 6.152699999999872e-05, 6.154199999999777e-05, 6.15279999999982e-05, 6.152800000000513e-05, 6.15279999999982e-05, 6.1541999...</msg>
<status status="PASS" starttime="20201030 15:51:48.045" endtime="20201030 15:51:48.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.053" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:48.052" endtime="20201030 15:51:48.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.055" level="INFO">VALUE: [6.208399999999697e-05, 6.15560000000008e-05, 6.152800000000166e-05, 6.152699999999872e-05, 6.154199999999777e-05, 6.15279999999982e-05, 6.152800000000513e-05, 6.15279999999982e-05, 6.154199999999777e-05, 6.152699999999872e-05, 6.154199999999777e-05, 6.154199999999777e-05, 6.154199999999777e-05, 6.151400000000556e-05, 6.15420000000047e-05, 6.148599999999949e-05, 6.154199999999777e-05, 6.15550000000048e-05, 6.149999999999906e-05, 6.156899999999743e-05, 6.154199999999777e-05, 6.15420000000047e-05, 6.15279999999982e-05, 6.152699999999872e-05, 6.15279999999982e-05, 6.152800000000513e-05, 6.154199999999777e-05, 6.15279999999982e-05, 6.152800000000513e-05, 6.152800000000513e-05, 6.161099999999614e-05, 6.151399999999863e-05, 6.151400000000556e-05, 6.154199999999777e-05, 6.15279999999982e-05, 6.15420000000047e-05, 6.152800000000513e-05, 6.152699999999872e-05, 6.15279999999982e-05, 6.147299999999939e-05, 6.151400000000556e-05, 6.15279999999982e-05, 6.15279999999982e-05, 6.15420000000047e-05, 6.151299999999915e-05, 6.145899999999982e-05, 6.161100000000308e-05, 6.151400000000556e-05, 6.154199999999777e-05, 6.151399999999863e-05]</msg>
<status status="PASS" starttime="20201030 15:51:48.054" endtime="20201030 15:51:48.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.049" endtime="20201030 15:51:48.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.060" endtime="20201030 15:51:48.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.059" endtime="20201030 15:51:48.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.058" endtime="20201030 15:51:48.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.691" endtime="20201030 15:51:48.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.690" endtime="20201030 15:51:48.081"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.089" endtime="20201030 15:51:48.103"></status>
</kw>
<msg timestamp="20201030 15:51:48.103" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.088" endtime="20201030 15:51:48.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.106" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.104" endtime="20201030 15:51:48.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.107" endtime="20201030 15:51:48.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.085" endtime="20201030 15:51:48.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.083" endtime="20201030 15:51:48.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.116" endtime="20201030 15:51:48.402"></status>
</kw>
<msg timestamp="20201030 15:51:48.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018597778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018669264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.114" endtime="20201030 15:51:48.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018597778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018669264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.406" endtime="20201030 15:51:48.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.414" endtime="20201030 15:51:48.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.112" endtime="20201030 15:51:48.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.110" endtime="20201030 15:51:48.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:48.421" level="INFO">${PHILIP_RES} = [{'diff': 7.148600000000255e-05}, {'diff': 7.093100000000324e-05}, {'diff': 7.098599999999858e-05}, {'diff': 7.097200000000248e-05}, {'diff': 7.098600000000205e-05}, {'diff': 7.097199999999901e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:48.417" endtime="20201030 15:51:48.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.425" level="INFO">${RESULT} = {'diff': [7.148600000000255e-05, 7.093100000000324e-05, 7.098599999999858e-05, 7.097200000000248e-05, 7.098600000000205e-05, 7.097199999999901e-05, 7.098599999999858e-05, 7.095900000000238e-05, 7.0972...</msg>
<status status="PASS" starttime="20201030 15:51:48.422" endtime="20201030 15:51:48.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.429" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:48.428" endtime="20201030 15:51:48.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.432" level="INFO">VALUE: [7.148600000000255e-05, 7.093100000000324e-05, 7.098599999999858e-05, 7.097200000000248e-05, 7.098600000000205e-05, 7.097199999999901e-05, 7.098599999999858e-05, 7.095900000000238e-05, 7.097299999999848e-05, 7.095799999999944e-05, 7.094399999999987e-05, 7.09170000000002e-05, 7.095799999999944e-05, 7.094499999999934e-05, 7.097300000000195e-05, 7.097199999999901e-05, 7.101400000000119e-05, 7.097199999999901e-05, 7.094499999999934e-05, 7.098600000000205e-05, 7.095899999999891e-05, 7.102799999999729e-05, 7.095800000000291e-05, 7.098599999999858e-05, 7.095799999999944e-05, 7.101299999999824e-05, 7.095900000000238e-05, 7.098599999999858e-05, 7.098599999999858e-05, 7.101399999999772e-05, 7.097199999999901e-05, 7.102800000000076e-05, 7.097300000000195e-05, 7.095900000000238e-05, 7.098599999999858e-05, 7.095799999999944e-05, 7.095799999999944e-05, 7.094499999999934e-05, 7.095899999999891e-05, 7.098599999999858e-05, 7.098600000000205e-05, 7.095799999999944e-05, 7.093099999999977e-05, 7.097199999999901e-05, 7.094499999999934e-05, 7.097299999999848e-05, 7.095799999999944e-05, 7.102800000000076e-05, 7.095799999999944e-05, 7.097199999999901e-05]</msg>
<status status="PASS" starttime="20201030 15:51:48.430" endtime="20201030 15:51:48.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.426" endtime="20201030 15:51:48.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.437" endtime="20201030 15:51:48.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.436" endtime="20201030 15:51:48.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.435" endtime="20201030 15:51:48.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.082" endtime="20201030 15:51:48.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.081" endtime="20201030 15:51:48.458"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.466" endtime="20201030 15:51:48.479"></status>
</kw>
<msg timestamp="20201030 15:51:48.480" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.465" endtime="20201030 15:51:48.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.482" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.481" endtime="20201030 15:51:48.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.483" endtime="20201030 15:51:48.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.462" endtime="20201030 15:51:48.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.460" endtime="20201030 15:51:48.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.492" endtime="20201030 15:51:48.780"></status>
</kw>
<msg timestamp="20201030 15:51:48.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017780431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017861972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.491" endtime="20201030 15:51:48.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017780431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017861972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.784" endtime="20201030 15:51:48.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.792" endtime="20201030 15:51:48.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.488" endtime="20201030 15:51:48.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.487" endtime="20201030 15:51:48.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:48.799" level="INFO">${PHILIP_RES} = [{'diff': 8.154100000000095e-05}, {'diff': 8.102800000000035e-05}, {'diff': 8.102700000000088e-05}, {'diff': 8.101400000000078e-05}, {'diff': 8.102800000000035e-05}, {'diff': 8.105500000000002e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:48.796" endtime="20201030 15:51:48.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.804" level="INFO">${RESULT} = {'diff': [8.154100000000095e-05, 8.102800000000035e-05, 8.102700000000088e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.105500000000002e-05, 8.105599999999949e-05, 8.102800000000035e-05, 8.1014...</msg>
<status status="PASS" starttime="20201030 15:51:48.800" endtime="20201030 15:51:48.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.808" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:48.807" endtime="20201030 15:51:48.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.811" level="INFO">VALUE: [8.154100000000095e-05, 8.102800000000035e-05, 8.102700000000088e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.105500000000002e-05, 8.105599999999949e-05, 8.102800000000035e-05, 8.101400000000078e-05, 8.100000000000121e-05, 8.101399999999731e-05, 8.105599999999949e-05, 8.100000000000121e-05, 8.101299999999784e-05, 8.102800000000035e-05, 8.101400000000078e-05, 8.101399999999731e-05, 8.102800000000035e-05, 8.100000000000121e-05, 8.098599999999817e-05, 8.101400000000078e-05, 8.10130000000013e-05, 8.102799999999688e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.101400000000078e-05, 8.104100000000045e-05, 8.09719999999986e-05, 8.102800000000035e-05, 8.10130000000013e-05, 8.101399999999731e-05, 8.105500000000002e-05, 8.104100000000045e-05, 8.101399999999731e-05, 8.102800000000035e-05, 8.104199999999992e-05, 8.101399999999731e-05, 8.102700000000088e-05, 8.101400000000078e-05, 8.099999999999774e-05, 8.105599999999949e-05, 8.100000000000121e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.095799999999903e-05, 8.100000000000121e-05, 8.10130000000013e-05, 8.102800000000035e-05]</msg>
<status status="PASS" starttime="20201030 15:51:48.809" endtime="20201030 15:51:48.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.805" endtime="20201030 15:51:48.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.816" endtime="20201030 15:51:48.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.814" endtime="20201030 15:51:48.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.813" endtime="20201030 15:51:48.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.459" endtime="20201030 15:51:48.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.458" endtime="20201030 15:51:48.836"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.845" endtime="20201030 15:51:48.859"></status>
</kw>
<msg timestamp="20201030 15:51:48.859" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.843" endtime="20201030 15:51:48.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.862" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.860" endtime="20201030 15:51:48.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.863" endtime="20201030 15:51:48.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.841" endtime="20201030 15:51:48.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.839" endtime="20201030 15:51:48.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.872" endtime="20201030 15:51:49.162"></status>
</kw>
<msg timestamp="20201030 15:51:49.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017896028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01798825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:48.870" endtime="20201030 15:51:49.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017896028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01798825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:49.171" endtime="20201030 15:51:49.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.190" endtime="20201030 15:51:49.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.868" endtime="20201030 15:51:49.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.866" endtime="20201030 15:51:49.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:49.205" level="INFO">${PHILIP_RES} = [{'diff': 9.222199999999944e-05}, {'diff': 9.169499999999928e-05}, {'diff': 9.168099999999971e-05}, {'diff': 9.168099999999971e-05}, {'diff': 9.165300000000057e-05}, {'diff': 9.168099999999971e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:49.199" endtime="20201030 15:51:49.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.214" level="INFO">${RESULT} = {'diff': [9.222199999999944e-05, 9.169499999999928e-05, 9.168099999999971e-05, 9.168099999999971e-05, 9.165300000000057e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.172199999999894e-05, 9.1680...</msg>
<status status="PASS" starttime="20201030 15:51:49.207" endtime="20201030 15:51:49.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.223" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:49.221" endtime="20201030 15:51:49.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.229" level="INFO">VALUE: [9.222199999999944e-05, 9.169499999999928e-05, 9.168099999999971e-05, 9.168099999999971e-05, 9.165300000000057e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.172199999999894e-05, 9.168000000000023e-05, 9.169499999999928e-05, 9.16939999999998e-05, 9.169499999999928e-05, 9.172200000000241e-05, 9.168099999999971e-05, 9.16939999999998e-05, 9.169499999999928e-05, 9.167999999999676e-05, 9.170899999999885e-05, 9.16939999999998e-05, 9.166700000000014e-05, 9.170799999999937e-05, 9.168099999999971e-05, 9.16939999999998e-05, 9.169400000000327e-05, 9.168000000000023e-05, 9.166700000000014e-05, 9.166700000000014e-05, 9.168000000000023e-05, 9.170799999999937e-05, 9.16939999999998e-05, 9.172200000000241e-05, 9.165300000000057e-05, 9.168099999999971e-05, 9.16939999999998e-05, 9.168099999999971e-05, 9.16939999999998e-05, 9.170900000000232e-05, 9.170799999999937e-05, 9.1639000000001e-05, 9.175000000000155e-05, 9.168100000000318e-05, 9.16939999999998e-05, 9.173700000000146e-05, 9.16939999999998e-05, 9.168099999999971e-05, 9.16939999999998e-05, 9.175000000000155e-05, 9.166700000000014e-05, 9.165300000000057e-05, 9.168099999999971e-05]</msg>
<status status="PASS" starttime="20201030 15:51:49.226" endtime="20201030 15:51:49.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.216" endtime="20201030 15:51:49.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.239" endtime="20201030 15:51:49.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.236" endtime="20201030 15:51:49.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.233" endtime="20201030 15:51:49.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.837" endtime="20201030 15:51:49.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.837" endtime="20201030 15:51:49.261"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.269" endtime="20201030 15:51:49.285"></status>
</kw>
<msg timestamp="20201030 15:51:49.286" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.268" endtime="20201030 15:51:49.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.288" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.287" endtime="20201030 15:51:49.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.289" endtime="20201030 15:51:49.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.265" endtime="20201030 15:51:49.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.263" endtime="20201030 15:51:49.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.298" endtime="20201030 15:51:49.584"></status>
</kw>
<msg timestamp="20201030 15:51:49.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018832903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018936403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.297" endtime="20201030 15:51:49.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018832903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018936403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.589" endtime="20201030 15:51:49.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.597" endtime="20201030 15:51:49.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.294" endtime="20201030 15:51:49.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.292" endtime="20201030 15:51:49.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:49.603" level="INFO">${PHILIP_RES} = [{'diff': 0.00010349999999999943}, {'diff': 0.00010295800000000022}, {'diff': 0.00010295800000000022}, {'diff': 0.00010298599999999936}, {'diff': 0.00010297199999999979}, {'diff': 0.000102944000000000...</msg>
<status status="PASS" starttime="20201030 15:51:49.600" endtime="20201030 15:51:49.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.607" level="INFO">${RESULT} = {'diff': [0.00010349999999999943, 0.00010295800000000022, 0.00010295800000000022, 0.00010298599999999936, 0.00010297199999999979, 0.00010294400000000065, 0.00010293100000000055, 0.00010297199999999979...</msg>
<status status="PASS" starttime="20201030 15:51:49.604" endtime="20201030 15:51:49.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.612" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:49.611" endtime="20201030 15:51:49.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.614" level="INFO">VALUE: [0.00010349999999999943, 0.00010295800000000022, 0.00010295800000000022, 0.00010298599999999936, 0.00010297199999999979, 0.00010294400000000065, 0.00010293100000000055, 0.00010297199999999979, 0.00010295800000000022, 0.00010295800000000022, 0.00010297199999999979, 0.00010295899999999969, 0.00010288900000000184, 0.00010295899999999969, 0.00010299999999999893, 0.00010297199999999979, 0.00010295800000000022, 0.00010297199999999979, 0.00010297199999999979, 0.00010295899999999969, 0.00010294400000000065, 0.00010294500000000012, 0.00010294400000000065, 0.00010297299999999926, 0.00010302799999999807, 0.00010302800000000154, 0.00010295800000000022, 0.00010295899999999969, 0.00010301400000000197, 0.00010294500000000012, 0.00010297199999999979, 0.00010295899999999969, 0.00010295800000000022, 0.00010294500000000012, 0.00010293000000000108, 0.00010297299999999926, 0.00010294399999999718, 0.00010295899999999969, 0.00010295800000000022, 0.00010291700000000098, 0.00010293000000000108, 0.00010297199999999979, 0.00010295800000000022, 0.00010295800000000022, 0.00010293000000000108, 0.0001030139999999985, 0.00010297199999999979, 0.00010295899999999969, 0.00010295800000000022, 0.00010295800000000022]</msg>
<status status="PASS" starttime="20201030 15:51:49.613" endtime="20201030 15:51:49.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.608" endtime="20201030 15:51:49.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.622" endtime="20201030 15:51:49.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.621" endtime="20201030 15:51:49.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.619" endtime="20201030 15:51:49.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.261" endtime="20201030 15:51:49.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.261" endtime="20201030 15:51:49.643"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.651" endtime="20201030 15:51:49.667"></status>
</kw>
<msg timestamp="20201030 15:51:49.667" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.650" endtime="20201030 15:51:49.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.670" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.668" endtime="20201030 15:51:49.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.671" endtime="20201030 15:51:49.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.647" endtime="20201030 15:51:49.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.645" endtime="20201030 15:51:49.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.680" endtime="20201030 15:51:49.966"></status>
</kw>
<msg timestamp="20201030 15:51:49.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01788925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018004625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:49.679" endtime="20201030 15:51:49.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01788925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018004625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:49.970" endtime="20201030 15:51:49.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.979" endtime="20201030 15:51:49.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.676" endtime="20201030 15:51:49.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.674" endtime="20201030 15:51:49.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:49.985" level="INFO">${PHILIP_RES} = [{'diff': 0.0001153750000000009}, {'diff': 0.00011486100000000082}, {'diff': 0.00011484700000000125}, {'diff': 0.00011484800000000073}, {'diff': 0.00011483299999999821}, {'diff': 0.0001148330000000016...</msg>
<status status="PASS" starttime="20201030 15:51:49.982" endtime="20201030 15:51:49.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.990" level="INFO">${RESULT} = {'diff': [0.0001153750000000009, 0.00011486100000000082, 0.00011484700000000125, 0.00011484800000000073, 0.00011483299999999821, 0.00011483300000000168, 0.00011484800000000073, 0.00011484699999999778,...</msg>
<status status="PASS" starttime="20201030 15:51:49.986" endtime="20201030 15:51:49.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.994" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:49.993" endtime="20201030 15:51:49.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.997" level="INFO">VALUE: [0.0001153750000000009, 0.00011486100000000082, 0.00011484700000000125, 0.00011484800000000073, 0.00011483299999999821, 0.00011483300000000168, 0.00011484800000000073, 0.00011484699999999778, 0.00011488899999999996, 0.00011483300000000168, 0.00011484700000000125, 0.00011482000000000159, 0.00011483299999999821, 0.00011484700000000125, 0.0001147909999999995, 0.00011483299999999821, 0.00011484800000000073, 0.00011486100000000082, 0.00011484700000000125, 0.0001147909999999995, 0.00011484699999999778, 0.00011484800000000073, 0.00011484700000000125, 0.00011486100000000082, 0.00011483299999999821, 0.00011484700000000125, 0.00011479200000000245, 0.00011486100000000082, 0.00011481999999999812, 0.00011484700000000125, 0.00011481900000000211, 0.00011484800000000073, 0.00011486099999999735, 0.00011484700000000125, 0.00011486100000000082, 0.00011484700000000125, 0.00011484799999999726, 0.00011484700000000125, 0.00011484700000000125, 0.00011481900000000211, 0.00011484699999999778, 0.00011484800000000073, 0.00011484700000000125, 0.00011484700000000125, 0.00011484699999999778, 0.00011488899999999996, 0.00011484800000000073, 0.00011484700000000125, 0.00011486100000000082, 0.00011484699999999778]</msg>
<status status="PASS" starttime="20201030 15:51:49.995" endtime="20201030 15:51:49.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.991" endtime="20201030 15:51:49.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.002" endtime="20201030 15:51:50.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.000" endtime="20201030 15:51:50.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.999" endtime="20201030 15:51:50.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.644" endtime="20201030 15:51:50.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.643" endtime="20201030 15:51:50.022"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.031" endtime="20201030 15:51:50.047"></status>
</kw>
<msg timestamp="20201030 15:51:50.048" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.029" endtime="20201030 15:51:50.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.050" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.049" endtime="20201030 15:51:50.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.051" endtime="20201030 15:51:50.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.027" endtime="20201030 15:51:50.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.025" endtime="20201030 15:51:50.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.060" endtime="20201030 15:51:50.346"></status>
</kw>
<msg timestamp="20201030 15:51:50.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017869333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017997208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.059" endtime="20201030 15:51:50.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017869333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017997208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.350" endtime="20201030 15:51:50.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.358" endtime="20201030 15:51:50.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.056" endtime="20201030 15:51:50.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.054" endtime="20201030 15:51:50.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.366" level="INFO">${PHILIP_RES} = [{'diff': 0.00012787499999999952}, {'diff': 0.00012736100000000292}, {'diff': 0.00012734699999999988}, {'diff': 0.00012734800000000282}, {'diff': 0.00012734699999999988}, {'diff': 0.000127346999999999...</msg>
<status status="PASS" starttime="20201030 15:51:50.363" endtime="20201030 15:51:50.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.370" level="INFO">${RESULT} = {'diff': [0.00012787499999999952, 0.00012736100000000292, 0.00012734699999999988, 0.00012734800000000282, 0.00012734699999999988, 0.00012734699999999988, 0.00012736099999999945, 0.00012737499999999902...</msg>
<status status="PASS" starttime="20201030 15:51:50.367" endtime="20201030 15:51:50.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.374" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.373" endtime="20201030 15:51:50.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.377" level="INFO">VALUE: [0.00012787499999999952, 0.00012736100000000292, 0.00012734699999999988, 0.00012734800000000282, 0.00012734699999999988, 0.00012734699999999988, 0.00012736099999999945, 0.00012737499999999902, 0.0001273620000000024, 0.00012736099999999945, 0.00012734699999999988, 0.00012737500000000249, 0.00012736099999999945, 0.00012734799999999935, 0.00012737499999999902, 0.00012737500000000249, 0.00012736099999999945, 0.00012734699999999988, 0.00012734699999999988, 0.00012736099999999945, 0.00012729200000000107, 0.00012729200000000107, 0.0001273620000000024, 0.00012734699999999988, 0.00012734699999999988, 0.00012736099999999945, 0.00012734699999999988, 0.00012733399999999978, 0.00012734699999999988, 0.00012736099999999945, 0.00012734800000000282, 0.00012733399999999978, 0.00012733399999999978, 0.00012734699999999988, 0.00012736100000000292, 0.00012736099999999945, 0.00012734699999999988, 0.0001273200000000002, 0.00012734699999999988, 0.0001273330000000003, 0.00012734699999999988, 0.00012734699999999988, 0.00012734699999999988, 0.00012740299999999816, 0.00012734699999999988, 0.00012734699999999988, 0.00012734799999999935, 0.00012727700000000203, 0.0001273330000000003, 0.0001273889999999986]</msg>
<status status="PASS" starttime="20201030 15:51:50.375" endtime="20201030 15:51:50.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.371" endtime="20201030 15:51:50.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.382" endtime="20201030 15:51:50.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.380" endtime="20201030 15:51:50.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.379" endtime="20201030 15:51:50.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.023" endtime="20201030 15:51:50.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.023" endtime="20201030 15:51:50.402"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.412" endtime="20201030 15:51:50.430"></status>
</kw>
<msg timestamp="20201030 15:51:50.431" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.410" endtime="20201030 15:51:50.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.433" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.432" endtime="20201030 15:51:50.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.434" endtime="20201030 15:51:50.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.407" endtime="20201030 15:51:50.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.405" endtime="20201030 15:51:50.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.443" endtime="20201030 15:51:50.730"></status>
</kw>
<msg timestamp="20201030 15:51:50.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.442" endtime="20201030 15:51:50.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.734" endtime="20201030 15:51:50.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.742" endtime="20201030 15:51:50.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.439" endtime="20201030 15:51:50.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.437" endtime="20201030 15:51:50.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.749" level="INFO">${PHILIP_RES} = [{'diff': 0.00014097199999999963}, {'diff': 0.00014044399999999999}, {'diff': 0.0001404859999999987}, {'diff': 0.0001404859999999987}, {'diff': 0.00014038799999999824}, {'diff': 0.00014048600000000216...</msg>
<status status="PASS" starttime="20201030 15:51:50.745" endtime="20201030 15:51:50.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.753" level="INFO">${RESULT} = {'diff': [0.00014097199999999963, 0.00014044399999999999, 0.0001404859999999987, 0.0001404859999999987, 0.00014038799999999824, 0.00014048600000000216, 0.0001404590000000025, 0.0001404309999999999, 0....</msg>
<status status="PASS" starttime="20201030 15:51:50.750" endtime="20201030 15:51:50.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.757" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.756" endtime="20201030 15:51:50.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.759" level="INFO">VALUE: [0.00014097199999999963, 0.00014044399999999999, 0.0001404859999999987, 0.0001404859999999987, 0.00014038799999999824, 0.00014048600000000216, 0.0001404590000000025, 0.0001404309999999999, 0.0001404590000000025, 0.00014047199999999913, 0.00014045799999999956, 0.00014044399999999999, 0.00014044399999999999, 0.00014045799999999956, 0.00014045799999999956, 0.0001404720000000026, 0.00014040200000000128, 0.00014054200000000044, 0.00014047199999999913, 0.00014041700000000032, 0.00014045899999999903, 0.00014045899999999903, 0.00014045799999999956, 0.0001404309999999999, 0.00014045799999999956, 0.00014047199999999913, 0.00014044399999999999, 0.00014049999999999827, 0.00014045799999999956, 0.0001405140000000013, 0.00014045899999999903, 0.00014045800000000302, 0.00014044500000000293, 0.0001404590000000025, 0.00014045899999999903, 0.00014047199999999913, 0.00014047199999999913, 0.00014045799999999956, 0.00014045800000000302, 0.00014045799999999956, 0.00014054200000000044, 0.0001404720000000026, 0.0001404859999999987, 0.00014045799999999956, 0.00014044499999999946, 0.00014049999999999827, 0.00014041700000000032, 0.00014045799999999956, 0.00014045799999999956, 0.00014048600000000216]</msg>
<status status="PASS" starttime="20201030 15:51:50.758" endtime="20201030 15:51:50.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.753" endtime="20201030 15:51:50.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.765" endtime="20201030 15:51:50.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.764" endtime="20201030 15:51:50.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.763" endtime="20201030 15:51:50.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.403" endtime="20201030 15:51:50.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.403" endtime="20201030 15:51:50.786"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.794" endtime="20201030 15:51:50.812"></status>
</kw>
<msg timestamp="20201030 15:51:50.812" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.793" endtime="20201030 15:51:50.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.815" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.813" endtime="20201030 15:51:50.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.816" endtime="20201030 15:51:50.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.790" endtime="20201030 15:51:50.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.788" endtime="20201030 15:51:50.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.825" endtime="20201030 15:51:51.110"></status>
</kw>
<msg timestamp="20201030 15:51:51.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017825444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017980222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.823" endtime="20201030 15:51:51.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017825444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017980222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.115" endtime="20201030 15:51:51.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.123" endtime="20201030 15:51:51.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.821" endtime="20201030 15:51:51.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.819" endtime="20201030 15:51:51.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.129" level="INFO">${PHILIP_RES} = [{'diff': 0.00015477800000000125}, {'diff': 0.00015420799999999943}, {'diff': 0.00015418099999999976}, {'diff': 0.0001542500000000016}, {'diff': 0.00015418099999999976}, {'diff': 0.0001541660000000007...</msg>
<status status="PASS" starttime="20201030 15:51:51.126" endtime="20201030 15:51:51.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.134" level="INFO">${RESULT} = {'diff': [0.00015477800000000125, 0.00015420799999999943, 0.00015418099999999976, 0.0001542500000000016, 0.00015418099999999976, 0.00015416600000000072, 0.00015418099999999976, 0.00015420799999999943,...</msg>
<status status="PASS" starttime="20201030 15:51:51.130" endtime="20201030 15:51:51.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.139" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.138" endtime="20201030 15:51:51.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.141" level="INFO">VALUE: [0.00015477800000000125, 0.00015420799999999943, 0.00015418099999999976, 0.0001542500000000016, 0.00015418099999999976, 0.00015416600000000072, 0.00015418099999999976, 0.00015420799999999943, 0.00015419499999999933, 0.00015418099999999976, 0.00015418099999999976, 0.00015419399999999986, 0.00015419399999999986, 0.00015418099999999976, 0.00015413800000000158, 0.00015418099999999976, 0.00015419399999999986, 0.00015409700000000234, 0.0001541800000000003, 0.00015418100000000323, 0.00015419399999999986, 0.00015418099999999976, 0.0001541800000000003, 0.00015419499999999933, 0.0001542080000000029, 0.00015412500000000148, 0.0001542089999999989, 0.0001541670000000002, 0.00015413900000000105, 0.00015419399999999986, 0.00015418099999999976, 0.0001541800000000003, 0.00015415300000000062, 0.00015424999999999814, 0.00015419499999999933, 0.00015424999999999814, 0.00015418099999999976, 0.00015419399999999986, 0.0001542089999999989, 0.00015419399999999986, 0.00015418100000000323, 0.00015419399999999986, 0.00015415299999999715, 0.00015420799999999943, 0.00015418099999999976, 0.00015418099999999976, 0.00015416600000000072, 0.00015419499999999933, 0.00015412499999999801, 0.0001542089999999989]</msg>
<status status="PASS" starttime="20201030 15:51:51.140" endtime="20201030 15:51:51.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.135" endtime="20201030 15:51:51.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.146" endtime="20201030 15:51:51.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.145" endtime="20201030 15:51:51.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.143" endtime="20201030 15:51:51.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.787" endtime="20201030 15:51:51.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.786" endtime="20201030 15:51:51.167"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.175" endtime="20201030 15:51:51.194"></status>
</kw>
<msg timestamp="20201030 15:51:51.194" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.174" endtime="20201030 15:51:51.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.196" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.195" endtime="20201030 15:51:51.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.198" endtime="20201030 15:51:51.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.171" endtime="20201030 15:51:51.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.169" endtime="20201030 15:51:51.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.207" endtime="20201030 15:51:51.494"></status>
</kw>
<msg timestamp="20201030 15:51:51.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017869556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018038611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.205" endtime="20201030 15:51:51.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017869556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018038611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.499" endtime="20201030 15:51:51.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.507" endtime="20201030 15:51:51.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.203" endtime="20201030 15:51:51.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.201" endtime="20201030 15:51:51.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.514" level="INFO">${PHILIP_RES} = [{'diff': 0.00016905499999999782}, {'diff': 0.00016852799999999765}, {'diff': 0.00016852800000000112}, {'diff': 0.00016852799999999765}, {'diff': 0.00016851400000000155}, {'diff': 0.000168528000000001...</msg>
<status status="PASS" starttime="20201030 15:51:51.511" endtime="20201030 15:51:51.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.518" level="INFO">${RESULT} = {'diff': [0.00016905499999999782, 0.00016852799999999765, 0.00016852800000000112, 0.00016852799999999765, 0.00016851400000000155, 0.00016852800000000112, 0.00016847199999999937, 0.00016851400000000155...</msg>
<status status="PASS" starttime="20201030 15:51:51.515" endtime="20201030 15:51:51.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.523" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.522" endtime="20201030 15:51:51.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.525" level="INFO">VALUE: [0.00016905499999999782, 0.00016852799999999765, 0.00016852800000000112, 0.00016852799999999765, 0.00016851400000000155, 0.00016852800000000112, 0.00016847199999999937, 0.00016851400000000155, 0.00016852799999999765, 0.00016851400000000155, 0.00016851400000000155, 0.00016851399999999808, 0.00016852800000000112, 0.00016856900000000036, 0.00016852799999999765, 0.0001685969999999995, 0.00016852700000000165, 0.0001685129999999986, 0.00016852700000000165, 0.0001684579999999998, 0.00016852699999999818, 0.00016852800000000112, 0.00016852799999999765, 0.00016852800000000112, 0.0001684999999999985, 0.00016852799999999765, 0.00016852800000000112, 0.0001684999999999985, 0.00016852799999999765, 0.00016852800000000112, 0.00016852799999999765, 0.00016851400000000155, 0.00016852800000000112, 0.00016851399999999808, 0.0001685420000000007, 0.00016851399999999808, 0.00016851399999999808, 0.00016854100000000122, 0.00016852799999999765, 0.00016851300000000208, 0.00016855600000000026, 0.00016852699999999818, 0.00016854100000000122, 0.00016852699999999818, 0.00016852699999999818, 0.0001685420000000007, 0.0001684999999999985, 0.0001684579999999998, 0.00016852800000000112, 0.00016854199999999722]</msg>
<status status="PASS" starttime="20201030 15:51:51.524" endtime="20201030 15:51:51.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.519" endtime="20201030 15:51:51.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.530" endtime="20201030 15:51:51.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.529" endtime="20201030 15:51:51.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.527" endtime="20201030 15:51:51.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.168" endtime="20201030 15:51:51.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.167" endtime="20201030 15:51:51.551"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.559" endtime="20201030 15:51:51.579"></status>
</kw>
<msg timestamp="20201030 15:51:51.580" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.558" endtime="20201030 15:51:51.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.582" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.581" endtime="20201030 15:51:51.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.583" endtime="20201030 15:51:51.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.555" endtime="20201030 15:51:51.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.553" endtime="20201030 15:51:51.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.593" endtime="20201030 15:51:51.878"></status>
</kw>
<msg timestamp="20201030 15:51:51.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018678264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018862319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.591" endtime="20201030 15:51:51.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018678264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018862319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.883" endtime="20201030 15:51:51.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.891" endtime="20201030 15:51:51.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.589" endtime="20201030 15:51:51.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.587" endtime="20201030 15:51:51.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.897" level="INFO">${PHILIP_RES} = [{'diff': 0.00018405499999999894}, {'diff': 0.00018355600000000138}, {'diff': 0.00018348600000000007}, {'diff': 0.00018348600000000007}, {'diff': 0.00018347199999999703}, {'diff': 0.000183458999999996...</msg>
<status status="PASS" starttime="20201030 15:51:51.894" endtime="20201030 15:51:51.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.901" level="INFO">${RESULT} = {'diff': [0.00018405499999999894, 0.00018355600000000138, 0.00018348600000000007, 0.00018348600000000007, 0.00018347199999999703, 0.00018345899999999693, 0.00018345799999999746, 0.00018347299999999997...</msg>
<status status="PASS" starttime="20201030 15:51:51.898" endtime="20201030 15:51:51.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.906" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.905" endtime="20201030 15:51:51.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.908" level="INFO">VALUE: [0.00018405499999999894, 0.00018355600000000138, 0.00018348600000000007, 0.00018348600000000007, 0.00018347199999999703, 0.00018345899999999693, 0.00018345799999999746, 0.00018347299999999997, 0.00018345800000000093, 0.0001834720000000005, 0.00018343000000000179, 0.0001834720000000005, 0.00018340199999999918, 0.0001834590000000004, 0.00018348600000000007, 0.00018354200000000181, 0.00018348600000000007, 0.00018345799999999746, 0.00018347299999999997, 0.00018355599999999792, 0.0001834720000000005, 0.00018344400000000136, 0.00018344500000000083, 0.00018349999999999964, 0.00018348600000000007, 0.00018349999999999964, 0.00018349999999999964, 0.00018349999999999964, 0.00018345799999999746, 0.00018347299999999997, 0.00018347199999999703, 0.0001834720000000005, 0.0001834720000000005, 0.00018348600000000007, 0.00018349999999999964, 0.0001834720000000005, 0.00018348600000000007, 0.00018349999999999964, 0.00018348699999999954, 0.0001834720000000005, 0.00018347299999999997, 0.00018347199999999703, 0.00018348600000000007, 0.0001834720000000005, 0.00018348600000000007, 0.00018348600000000007, 0.00018349999999999964, 0.0001834720000000005, 0.00018345800000000093, 0.00018348699999999954]</msg>
<status status="PASS" starttime="20201030 15:51:51.907" endtime="20201030 15:51:51.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.902" endtime="20201030 15:51:51.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.919" endtime="20201030 15:51:51.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.918" endtime="20201030 15:51:51.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.916" endtime="20201030 15:51:51.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.552" endtime="20201030 15:51:51.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.551" endtime="20201030 15:51:51.940"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.948" endtime="20201030 15:51:51.968"></status>
</kw>
<msg timestamp="20201030 15:51:51.968" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.947" endtime="20201030 15:51:51.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.971" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.970" endtime="20201030 15:51:51.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.972" endtime="20201030 15:51:51.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.944" endtime="20201030 15:51:51.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.942" endtime="20201030 15:51:51.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.981" endtime="20201030 15:51:52.266"></status>
</kw>
<msg timestamp="20201030 15:51:52.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017858569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018058194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.980" endtime="20201030 15:51:52.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017858569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018058194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.270" endtime="20201030 15:51:52.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.278" endtime="20201030 15:51:52.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.977" endtime="20201030 15:51:52.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.975" endtime="20201030 15:51:52.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.285" level="INFO">${PHILIP_RES} = [{'diff': 0.00019962499999999841}, {'diff': 0.00019904199999999997}, {'diff': 0.0001990410000000005}, {'diff': 0.00019906899999999964}, {'diff': 0.00019905599999999954}, {'diff': 0.0001990280000000004...</msg>
<status status="PASS" starttime="20201030 15:51:52.282" endtime="20201030 15:51:52.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.290" level="INFO">${RESULT} = {'diff': [0.00019962499999999841, 0.00019904199999999997, 0.0001990410000000005, 0.00019906899999999964, 0.00019905599999999954, 0.0001990280000000004, 0.00019902700000000093, 0.00019904199999999997, ...</msg>
<status status="PASS" starttime="20201030 15:51:52.286" endtime="20201030 15:51:52.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.294" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.293" endtime="20201030 15:51:52.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.297" level="INFO">VALUE: [0.00019962499999999841, 0.00019904199999999997, 0.0001990410000000005, 0.00019906899999999964, 0.00019905599999999954, 0.0001990280000000004, 0.00019902700000000093, 0.00019904199999999997, 0.00019904199999999997, 0.00019902799999999693, 0.00019908399999999868, 0.00019902699999999746, 0.00019906899999999964, 0.00019900000000000126, 0.0001990280000000004, 0.00019904099999999703, 0.0001990280000000004, 0.00019904199999999997, 0.00019904199999999997, 0.00019901400000000083, 0.00019904199999999997, 0.00019904199999999997, 0.00019904199999999997, 0.0001990410000000005, 0.00019904199999999997, 0.00019905599999999954, 0.0001990280000000004, 0.0001990280000000004, 0.00019902799999999693, 0.00019905599999999954, 0.0001990829999999992, 0.00019905599999999954, 0.00019902699999999746, 0.00019904199999999997, 0.00019904199999999997, 0.00019905599999999954, 0.00019905500000000007, 0.00019904199999999997, 0.00019904199999999997, 0.00019898599999999822, 0.0001990410000000005, 0.0001990410000000005, 0.0001990829999999992, 0.00019904199999999997, 0.0001990410000000005, 0.0001990410000000005, 0.0001990280000000004, 0.00019904199999999997, 0.00019905599999999954, 0.00019902700000000093]</msg>
<status status="PASS" starttime="20201030 15:51:52.295" endtime="20201030 15:51:52.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.291" endtime="20201030 15:51:52.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.302" endtime="20201030 15:51:52.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.300" endtime="20201030 15:51:52.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.299" endtime="20201030 15:51:52.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.941" endtime="20201030 15:51:52.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.940" endtime="20201030 15:51:52.322"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.331" endtime="20201030 15:51:52.352"></status>
</kw>
<msg timestamp="20201030 15:51:52.353" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.329" endtime="20201030 15:51:52.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.355" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.354" endtime="20201030 15:51:52.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.356" endtime="20201030 15:51:52.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.327" endtime="20201030 15:51:52.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.325" endtime="20201030 15:51:52.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.365" endtime="20201030 15:51:52.650"></status>
</kw>
<msg timestamp="20201030 15:51:52.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017938069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018153819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.364" endtime="20201030 15:51:52.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017938069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018153819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.655" endtime="20201030 15:51:52.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.663" endtime="20201030 15:51:52.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.361" endtime="20201030 15:51:52.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.359" endtime="20201030 15:51:52.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.670" level="INFO">${PHILIP_RES} = [{'diff': 0.00021575000000000066}, {'diff': 0.00021522199999999755}, {'diff': 0.00021522200000000102}, {'diff': 0.00021522200000000102}, {'diff': 0.00021520899999999746}, {'diff': 0.000215236000000000...</msg>
<status status="PASS" starttime="20201030 15:51:52.667" endtime="20201030 15:51:52.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.674" level="INFO">${RESULT} = {'diff': [0.00021575000000000066, 0.00021522199999999755, 0.00021522200000000102, 0.00021522200000000102, 0.00021520899999999746, 0.0002152360000000006, 0.00021519500000000136, 0.00021527800000000277,...</msg>
<status status="PASS" starttime="20201030 15:51:52.671" endtime="20201030 15:51:52.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.679" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.678" endtime="20201030 15:51:52.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.681" level="INFO">VALUE: [0.00021575000000000066, 0.00021522199999999755, 0.00021522200000000102, 0.00021522200000000102, 0.00021520899999999746, 0.0002152360000000006, 0.00021519500000000136, 0.00021527800000000277, 0.00021520900000000093, 0.0002152360000000006, 0.00021522299999999703, 0.00021520900000000093, 0.00021520900000000093, 0.00021525000000000016, 0.00021522200000000102, 0.0002152360000000006, 0.00021522200000000102, 0.00021520799999999798, 0.00021522200000000102, 0.00021522200000000102, 0.00021522199999999755, 0.00021527699999999983, 0.00021520800000000145, 0.0002152779999999993, 0.00021520800000000145, 0.0002151810000000018, 0.00021520799999999798, 0.0002152360000000006, 0.00021520800000000145, 0.00021520799999999798, 0.00021522200000000102, 0.00021522200000000102, 0.00021522199999999755, 0.00021520799999999798, 0.00021518000000000231, 0.00021522199999999755, 0.00021522200000000102, 0.00021522200000000102, 0.00021522199999999755, 0.0002152640000000032, 0.00021522200000000102, 0.00021522200000000102, 0.00021522200000000102, 0.00021522200000000102, 0.00021520800000000145, 0.0002152360000000006, 0.00021520800000000145, 0.00021522200000000102, 0.00021526399999999973, 0.00021519500000000136]</msg>
<status status="PASS" starttime="20201030 15:51:52.680" endtime="20201030 15:51:52.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.675" endtime="20201030 15:51:52.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.686" endtime="20201030 15:51:52.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.685" endtime="20201030 15:51:52.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.684" endtime="20201030 15:51:52.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.323" endtime="20201030 15:51:52.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.323" endtime="20201030 15:51:52.707"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.715" endtime="20201030 15:51:52.737"></status>
</kw>
<msg timestamp="20201030 15:51:52.738" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.714" endtime="20201030 15:51:52.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.740" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.739" endtime="20201030 15:51:52.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.742" endtime="20201030 15:51:52.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.711" endtime="20201030 15:51:52.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.709" endtime="20201030 15:51:52.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.751" endtime="20201030 15:51:53.036"></status>
</kw>
<msg timestamp="20201030 15:51:53.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018650236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018882764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.749" endtime="20201030 15:51:53.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018650236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018882764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.041" endtime="20201030 15:51:53.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.049" endtime="20201030 15:51:53.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.746" endtime="20201030 15:51:53.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.745" endtime="20201030 15:51:53.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.055" level="INFO">${PHILIP_RES} = [{'diff': 0.0002325279999999992}, {'diff': 0.00023195900000000033}, {'diff': 0.00023199999999999957}, {'diff': 0.00023200000000000304}, {'diff': 0.00023199999999999957}, {'diff': 0.0002319999999999995...</msg>
<status status="PASS" starttime="20201030 15:51:53.052" endtime="20201030 15:51:53.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.059" level="INFO">${RESULT} = {'diff': [0.0002325279999999992, 0.00023195900000000033, 0.00023199999999999957, 0.00023200000000000304, 0.00023199999999999957, 0.00023199999999999957, 0.00023199999999999957, 0.00023201399999999914,...</msg>
<status status="PASS" starttime="20201030 15:51:53.056" endtime="20201030 15:51:53.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.064" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.063" endtime="20201030 15:51:53.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.066" level="INFO">VALUE: [0.0002325279999999992, 0.00023195900000000033, 0.00023199999999999957, 0.00023200000000000304, 0.00023199999999999957, 0.00023199999999999957, 0.00023199999999999957, 0.00023201399999999914, 0.00023199999999999957, 0.00023201399999999914, 0.00023197200000000043, 0.00023199999999999957, 0.00023199999999999957, 0.00023201399999999914, 0.0002320279999999987, 0.00023199999999999957, 0.00023198699999999947, 0.00023199999999999957, 0.0002320279999999987, 0.00023199999999999957, 0.0002319579999999974, 0.00023199999999999957, 0.000231986, 0.00023199999999999957, 0.000231986, 0.0002320409999999988, 0.00023199999999999957, 0.00023197200000000043, 0.00023199999999999957, 0.00023199999999999957, 0.00023201399999999914, 0.00023202800000000218, 0.00023201399999999914, 0.00023204199999999828, 0.00023201399999999914, 0.00023201399999999914, 0.0002320690000000014, 0.00023201399999999914, 0.0002320140000000026, 0.00023199999999999957, 0.00023199999999999957, 0.00023201399999999914, 0.0002320140000000026, 0.0002320279999999987, 0.00023201399999999914, 0.00023202800000000218, 0.00023199999999999957, 0.00023200000000000304, 0.00023202699999999923, 0.0002320129999999962]</msg>
<status status="PASS" starttime="20201030 15:51:53.065" endtime="20201030 15:51:53.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.060" endtime="20201030 15:51:53.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.074" endtime="20201030 15:51:53.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.073" endtime="20201030 15:51:53.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.072" endtime="20201030 15:51:53.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.708" endtime="20201030 15:51:53.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.707" endtime="20201030 15:51:53.095"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.103" endtime="20201030 15:51:53.126"></status>
</kw>
<msg timestamp="20201030 15:51:53.127" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.102" endtime="20201030 15:51:53.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.129" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.128" endtime="20201030 15:51:53.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.131" endtime="20201030 15:51:53.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.099" endtime="20201030 15:51:53.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.097" endtime="20201030 15:51:53.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.140" endtime="20201030 15:51:53.426"></status>
</kw>
<msg timestamp="20201030 15:51:53.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017869042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018118986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.138" endtime="20201030 15:51:53.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017869042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018118986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.430" endtime="20201030 15:51:53.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.438" endtime="20201030 15:51:53.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.135" endtime="20201030 15:51:53.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.134" endtime="20201030 15:51:53.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.445" level="INFO">${PHILIP_RES} = [{'diff': 0.0002499439999999985}, {'diff': 0.0002494169999999983}, {'diff': 0.0002494309999999979}, {'diff': 0.0002494030000000022}, {'diff': 0.00024938899999999917}, {'diff': 0.0002493749999999996}, ...</msg>
<status status="PASS" starttime="20201030 15:51:53.442" endtime="20201030 15:51:53.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.450" level="INFO">${RESULT} = {'diff': [0.0002499439999999985, 0.0002494169999999983, 0.0002494309999999979, 0.0002494030000000022, 0.00024938899999999917, 0.0002493749999999996, 0.00024938899999999917, 0.00024940199999999926, 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:53.446" endtime="20201030 15:51:53.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.454" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.453" endtime="20201030 15:51:53.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.456" level="INFO">VALUE: [0.0002499439999999985, 0.0002494169999999983, 0.0002494309999999979, 0.0002494030000000022, 0.00024938899999999917, 0.0002493749999999996, 0.00024938899999999917, 0.00024940199999999926, 0.00024940199999999926, 0.00024940299999999874, 0.0002494030000000022, 0.00024938899999999917, 0.00024940299999999874, 0.00024948600000000015, 0.00024943100000000135, 0.00024938900000000264, 0.00024940200000000273, 0.00024945799999999754, 0.00024947300000000006, 0.00024947300000000006, 0.0002494169999999983, 0.0002494030000000022, 0.0002494030000000022, 0.0002494309999999979, 0.0002494169999999983, 0.00024934700000000046, 0.00024940199999999926, 0.00024934700000000046, 0.0002494030000000022, 0.0002494169999999983, 0.00024938899999999917, 0.0002493749999999996, 0.0002494030000000022, 0.0002494030000000022, 0.0002494299999999984, 0.0002493879999999997, 0.00024940199999999926, 0.00024940299999999874, 0.00024938900000000264, 0.0002494170000000018, 0.0002494450000000009, 0.00024938899999999917, 0.00024940299999999874, 0.00024940200000000273, 0.0002494160000000023, 0.00024940199999999926, 0.00024945799999999754, 0.0002494169999999983, 0.0002494590000000005, 0.00024941699999999484]</msg>
<status status="PASS" starttime="20201030 15:51:53.455" endtime="20201030 15:51:53.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.451" endtime="20201030 15:51:53.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.462" endtime="20201030 15:51:53.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.460" endtime="20201030 15:51:53.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.459" endtime="20201030 15:51:53.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.096" endtime="20201030 15:51:53.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.095" endtime="20201030 15:51:53.482"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.491" endtime="20201030 15:51:53.514"></status>
</kw>
<msg timestamp="20201030 15:51:53.515" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.489" endtime="20201030 15:51:53.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.517" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.516" endtime="20201030 15:51:53.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.518" endtime="20201030 15:51:53.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.487" endtime="20201030 15:51:53.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.485" endtime="20201030 15:51:53.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.527" endtime="20201030 15:51:53.815"></status>
</kw>
<msg timestamp="20201030 15:51:53.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017926056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:53.526" endtime="20201030 15:51:53.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017926056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:53.819" endtime="20201030 15:51:53.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.827" endtime="20201030 15:51:53.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.523" endtime="20201030 15:51:53.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.522" endtime="20201030 15:51:53.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.834" level="INFO">${PHILIP_RES} = [{'diff': 0.00026794399999999913}, {'diff': 0.00026745899999999767}, {'diff': 0.000267431000000002}, {'diff': 0.00026743099999999853}, {'diff': 0.00026741700000000243}, {'diff': 0.00026741699999999896...</msg>
<status status="PASS" starttime="20201030 15:51:53.831" endtime="20201030 15:51:53.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.838" level="INFO">${RESULT} = {'diff': [0.00026794399999999913, 0.00026745899999999767, 0.000267431000000002, 0.00026743099999999853, 0.00026741700000000243, 0.00026741699999999896, 0.000267431000000002, 0.0002673610000000007, 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:53.835" endtime="20201030 15:51:53.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.842" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.841" endtime="20201030 15:51:53.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.844" level="INFO">VALUE: [0.00026794399999999913, 0.00026745899999999767, 0.000267431000000002, 0.00026743099999999853, 0.00026741700000000243, 0.00026741699999999896, 0.000267431000000002, 0.0002673610000000007, 0.00026745800000000167, 0.00026745899999999767, 0.00026744500000000157, 0.0002673470000000011, 0.000267431000000002, 0.00026743099999999853, 0.000267431000000002, 0.00026741699999999896, 0.00026741700000000243, 0.00026741699999999896, 0.0002674300000000025, 0.00026741699999999896, 0.0002674440000000021, 0.0002674029999999994, 0.0002674300000000025, 0.0002674019999999999, 0.0002673470000000011, 0.00026742999999999906, 0.0002674159999999995, 0.00026744399999999863, 0.0002674300000000025, 0.0002674159999999995, 0.0002674300000000025, 0.0002674019999999999, 0.0002674029999999994, 0.0002674159999999995, 0.0002674159999999995, 0.0002674860000000008, 0.0002674440000000021, 0.00026742999999999906, 0.0002674159999999995, 0.0002674029999999994, 0.00026742999999999906, 0.00026741699999999896, 0.000267431000000002, 0.0002673610000000007, 0.0002674029999999994, 0.0002674449999999981, 0.00026744500000000504, 0.00026743099999999853, 0.0002674029999999994, 0.0002674029999999994]</msg>
<status status="PASS" starttime="20201030 15:51:53.843" endtime="20201030 15:51:53.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.839" endtime="20201030 15:51:53.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.850" endtime="20201030 15:51:53.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.848" endtime="20201030 15:51:53.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.847" endtime="20201030 15:51:53.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.483" endtime="20201030 15:51:53.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.483" endtime="20201030 15:51:53.870"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.879" endtime="20201030 15:51:53.905"></status>
</kw>
<msg timestamp="20201030 15:51:53.905" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.877" endtime="20201030 15:51:53.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.908" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.906" endtime="20201030 15:51:53.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.909" endtime="20201030 15:51:53.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.875" endtime="20201030 15:51:53.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.873" endtime="20201030 15:51:53.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.918" endtime="20201030 15:51:54.206"></status>
</kw>
<msg timestamp="20201030 15:51:54.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018697514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018984083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.916" endtime="20201030 15:51:54.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018697514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018984083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.215" endtime="20201030 15:51:54.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.233" endtime="20201030 15:51:54.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.914" endtime="20201030 15:51:54.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.912" endtime="20201030 15:51:54.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.247" level="INFO">${PHILIP_RES} = [{'diff': 0.0002865690000000004}, {'diff': 0.00028605500000000034}, {'diff': 0.0002860559999999998}, {'diff': 0.0002860559999999998}, {'diff': 0.00028604200000000024}, {'diff': 0.00028604200000000024}...</msg>
<status status="PASS" starttime="20201030 15:51:54.240" endtime="20201030 15:51:54.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.256" level="INFO">${RESULT} = {'diff': [0.0002865690000000004, 0.00028605500000000034, 0.0002860559999999998, 0.0002860559999999998, 0.00028604200000000024, 0.00028604200000000024, 0.0002860829999999995, 0.00028605500000000034, 0....</msg>
<status status="PASS" starttime="20201030 15:51:54.249" endtime="20201030 15:51:54.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.265" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.262" endtime="20201030 15:51:54.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.270" level="INFO">VALUE: [0.0002865690000000004, 0.00028605500000000034, 0.0002860559999999998, 0.0002860559999999998, 0.00028604200000000024, 0.00028604200000000024, 0.0002860829999999995, 0.00028605500000000034, 0.00028604200000000024, 0.0002860560000000033, 0.0002860559999999998, 0.00028605500000000034, 0.0002860689999999999, 0.00028604100000000077, 0.0002860559999999998, 0.0002860699999999994, 0.0002860559999999998, 0.00028605500000000034, 0.00028605500000000034, 0.00028605500000000034, 0.0002860559999999998, 0.00028602800000000067, 0.0002860559999999998, 0.00028608399999999895, 0.00028609699999999905, 0.0002860409999999973, 0.00028604200000000024, 0.00028604200000000024, 0.0002860699999999994, 0.0002860559999999998, 0.0002860409999999973, 0.00028604100000000077, 0.0002860560000000033, 0.0002860559999999998, 0.0002860979999999985, 0.00028604200000000024, 0.00028605500000000034, 0.00028605500000000034, 0.0002860559999999998, 0.0002860559999999998, 0.00028609699999999905, 0.0002860559999999998, 0.00028605500000000034, 0.00028605500000000034, 0.00028602800000000067, 0.0002860559999999998, 0.00028602800000000067, 0.0002860700000000063, 0.0002860140000000011, 0.00028600000000000153]</msg>
<status status="PASS" starttime="20201030 15:51:54.267" endtime="20201030 15:51:54.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.257" endtime="20201030 15:51:54.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.282" endtime="20201030 15:51:54.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.279" endtime="20201030 15:51:54.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.276" endtime="20201030 15:51:54.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.871" endtime="20201030 15:51:54.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.871" endtime="20201030 15:51:54.303"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.312" endtime="20201030 15:51:54.338"></status>
</kw>
<msg timestamp="20201030 15:51:54.338" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.310" endtime="20201030 15:51:54.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.341" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.339" endtime="20201030 15:51:54.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.342" endtime="20201030 15:51:54.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.307" endtime="20201030 15:51:54.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.306" endtime="20201030 15:51:54.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.351" endtime="20201030 15:51:54.637"></status>
</kw>
<msg timestamp="20201030 15:51:54.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017872625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018178458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.349" endtime="20201030 15:51:54.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017872625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018178458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.641" endtime="20201030 15:51:54.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.649" endtime="20201030 15:51:54.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.347" endtime="20201030 15:51:54.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.345" endtime="20201030 15:51:54.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.656" level="INFO">${PHILIP_RES} = [{'diff': 0.0003058330000000019}, {'diff': 0.0003053060000000017}, {'diff': 0.00030530499999999877}, {'diff': 0.000305264000000003}, {'diff': 0.0003053339999999974}, {'diff': 0.0003052919999999987}, {...</msg>
<status status="PASS" starttime="20201030 15:51:54.652" endtime="20201030 15:51:54.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.660" level="INFO">${RESULT} = {'diff': [0.0003058330000000019, 0.0003053060000000017, 0.00030530499999999877, 0.000305264000000003, 0.0003053339999999974, 0.0003052919999999987, 0.00030529200000000214, 0.0003052779999999991, 0.000...</msg>
<status status="PASS" starttime="20201030 15:51:54.656" endtime="20201030 15:51:54.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.665" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.664" endtime="20201030 15:51:54.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.667" level="INFO">VALUE: [0.0003058330000000019, 0.0003053060000000017, 0.00030530499999999877, 0.000305264000000003, 0.0003053339999999974, 0.0003052919999999987, 0.00030529200000000214, 0.0003052779999999991, 0.0003052919999999987, 0.00030530500000000224, 0.0003052779999999991, 0.0003053330000000014, 0.0003052780000000026, 0.0003052909999999992, 0.0003052779999999991, 0.00030529200000000214, 0.0003052919999999987, 0.0003052919999999987, 0.00030529200000000214, 0.0003052919999999987, 0.0003052909999999992, 0.0003052779999999991, 0.0003052909999999992, 0.0003052779999999991, 0.00030529100000000267, 0.00030524999999999997, 0.0003052919999999987, 0.00030530499999999877, 0.0003052360000000004, 0.00030522199999999736, 0.0003052779999999991, 0.0003052909999999992, 0.0003052780000000026, 0.00030530499999999877, 0.0003052360000000004, 0.0003052779999999991, 0.0003052779999999991, 0.0003052919999999987, 0.0003052780000000026, 0.0003052779999999991, 0.0003053050000000057, 0.00030526399999999954, 0.0003052909999999992, 0.00030532000000000475, 0.0003052779999999991, 0.0003052779999999991, 0.0003052919999999987, 0.0003052919999999987, 0.0003052360000000004, 0.0003052909999999992]</msg>
<status status="PASS" starttime="20201030 15:51:54.666" endtime="20201030 15:51:54.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.661" endtime="20201030 15:51:54.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.672" endtime="20201030 15:51:54.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.671" endtime="20201030 15:51:54.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.670" endtime="20201030 15:51:54.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.304" endtime="20201030 15:51:54.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.304" endtime="20201030 15:51:54.693"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.702" endtime="20201030 15:51:54.728"></status>
</kw>
<msg timestamp="20201030 15:51:54.728" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.700" endtime="20201030 15:51:54.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.731" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.730" endtime="20201030 15:51:54.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.732" endtime="20201030 15:51:54.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.697" endtime="20201030 15:51:54.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.695" endtime="20201030 15:51:54.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.741" endtime="20201030 15:51:55.034"></status>
</kw>
<msg timestamp="20201030 15:51:55.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017992778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018318431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.740" endtime="20201030 15:51:55.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017992778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018318431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.044" endtime="20201030 15:51:55.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.062" endtime="20201030 15:51:55.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.737" endtime="20201030 15:51:55.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.735" endtime="20201030 15:51:55.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.076" level="INFO">${PHILIP_RES} = [{'diff': 0.00032565299999999867}, {'diff': 0.0003251519999999987}, {'diff': 0.0003250830000000003}, {'diff': 0.00032515300000000164}, {'diff': 0.00032506999999999675}, {'diff': 0.00032515299999999817...</msg>
<status status="PASS" starttime="20201030 15:51:55.069" endtime="20201030 15:51:55.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.085" level="INFO">${RESULT} = {'diff': [0.00032565299999999867, 0.0003251519999999987, 0.0003250830000000003, 0.00032515300000000164, 0.00032506999999999675, 0.00032515299999999817, 0.00032517999999999783, 0.0003251519999999987, 0...</msg>
<status status="PASS" starttime="20201030 15:51:55.078" endtime="20201030 15:51:55.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.094" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.091" endtime="20201030 15:51:55.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.099" level="INFO">VALUE: [0.00032565299999999867, 0.0003251519999999987, 0.0003250830000000003, 0.00032515300000000164, 0.00032506999999999675, 0.00032515299999999817, 0.00032517999999999783, 0.0003251519999999987, 0.00032519500000000034, 0.00032513900000000207, 0.00032513900000000207, 0.00032511099999999946, 0.00032516599999999826, 0.000325124999999999, 0.00032515300000000164, 0.00032513900000000207, 0.0003251250000000025, 0.00032513900000000207, 0.0003251389999999986, 0.0003251379999999991, 0.0003251389999999986, 0.00032513900000000207, 0.00032515300000000164, 0.00032513900000000207, 0.0003251389999999986, 0.000325124999999999, 0.0003251389999999986, 0.00032515300000000164, 0.00032513900000000207, 0.0003251250000000025, 0.0003251800000000013, 0.000325124999999999, 0.0003251389999999986, 0.0003251389999999986, 0.000325124999999999, 0.0003251250000000025, 0.00032519400000000087, 0.00032513799999999565, 0.0003252089999999999, 0.00032515300000000164, 0.0003251389999999951, 0.0003251250000000025, 0.00032513799999999565, 0.0003251380000000026, 0.00032513900000000207, 0.00032513900000000207, 0.00032513900000000207, 0.00032515300000000164, 0.00032515200000000216, 0.00032512499999999556]</msg>
<status status="PASS" starttime="20201030 15:51:55.096" endtime="20201030 15:51:55.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.086" endtime="20201030 15:51:55.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.109" endtime="20201030 15:51:55.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.106" endtime="20201030 15:51:55.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.104" endtime="20201030 15:51:55.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.694" endtime="20201030 15:51:55.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.693" endtime="20201030 15:51:55.131"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.139" endtime="20201030 15:51:55.168"></status>
</kw>
<msg timestamp="20201030 15:51:55.169" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.137" endtime="20201030 15:51:55.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.171" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.170" endtime="20201030 15:51:55.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.172" endtime="20201030 15:51:55.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.135" endtime="20201030 15:51:55.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.133" endtime="20201030 15:51:55.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.181" endtime="20201030 15:51:55.466"></status>
</kw>
<msg timestamp="20201030 15:51:55.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018820458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019166597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.180" endtime="20201030 15:51:55.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018820458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019166597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.470" endtime="20201030 15:51:55.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.478" endtime="20201030 15:51:55.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.177" endtime="20201030 15:51:55.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.176" endtime="20201030 15:51:55.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.485" level="INFO">${PHILIP_RES} = [{'diff': 0.0003461389999999988}, {'diff': 0.0003456119999999986}, {'diff': 0.0003456249999999987}, {'diff': 0.00034559699999999957}, {'diff': 0.00034559799999999904}, {'diff': 0.0003456249999999987},...</msg>
<status status="PASS" starttime="20201030 15:51:55.482" endtime="20201030 15:51:55.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.489" level="INFO">${RESULT} = {'diff': [0.0003461389999999988, 0.0003456119999999986, 0.0003456249999999987, 0.00034559699999999957, 0.00034559799999999904, 0.0003456249999999987, 0.00034561099999999914, 0.00034559699999999957, 0....</msg>
<status status="PASS" starttime="20201030 15:51:55.486" endtime="20201030 15:51:55.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.493" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.492" endtime="20201030 15:51:55.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.496" level="INFO">VALUE: [0.0003461389999999988, 0.0003456119999999986, 0.0003456249999999987, 0.00034559699999999957, 0.00034559799999999904, 0.0003456249999999987, 0.00034561099999999914, 0.00034559699999999957, 0.0003456110000000026, 0.000345583, 0.0003456670000000009, 0.00034559699999999957, 0.00034561099999999914, 0.00034561099999999914, 0.00034559799999999904, 0.00034559699999999957, 0.00034559699999999957, 0.00034559799999999904, 0.000345583, 0.000345583, 0.0003456119999999986, 0.0003456250000000022, 0.0003456110000000026, 0.0003456670000000009, 0.00034559699999999957, 0.0003456669999999974, 0.000345583, 0.00034559699999999957, 0.00034559699999999957, 0.00034561099999999914, 0.0003456249999999987, 0.00034559699999999957, 0.00034561099999999914, 0.0003456110000000026, 0.00034561099999999567, 0.00034559700000000304, 0.00034561099999999567, 0.0003456250000000022, 0.00034561099999999567, 0.0003456120000000021, 0.0003456250000000022, 0.0003456250000000022, 0.0003456120000000021, 0.0003455969999999961, 0.00034559700000000304, 0.0003455979999999956, 0.00034559700000000304, 0.0003455969999999961, 0.0003456110000000026, 0.0003455969999999961]</msg>
<status status="PASS" starttime="20201030 15:51:55.494" endtime="20201030 15:51:55.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.490" endtime="20201030 15:51:55.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.502" endtime="20201030 15:51:55.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.500" endtime="20201030 15:51:55.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.499" endtime="20201030 15:51:55.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.131" endtime="20201030 15:51:55.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.131" endtime="20201030 15:51:55.522"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.531" endtime="20201030 15:51:55.560"></status>
</kw>
<msg timestamp="20201030 15:51:55.561" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.529" endtime="20201030 15:51:55.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.563" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.562" endtime="20201030 15:51:55.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.564" endtime="20201030 15:51:55.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.527" endtime="20201030 15:51:55.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.525" endtime="20201030 15:51:55.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.573" endtime="20201030 15:51:55.869"></status>
</kw>
<msg timestamp="20201030 15:51:55.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017864167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.572" endtime="20201030 15:51:55.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017864167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.878" endtime="20201030 15:51:55.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.896" endtime="20201030 15:51:55.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.569" endtime="20201030 15:51:55.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.567" endtime="20201030 15:51:55.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.910" level="INFO">${PHILIP_RES} = [{'diff': 0.0003672220000000004}, {'diff': 0.00036663900000000194}, {'diff': 0.00036668100000000065}, {'diff': 0.00036668100000000065}, {'diff': 0.00036668100000000065}, {'diff': 0.0003667080000000003...</msg>
<status status="PASS" starttime="20201030 15:51:55.903" endtime="20201030 15:51:55.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.920" level="INFO">${RESULT} = {'diff': [0.0003672220000000004, 0.00036663900000000194, 0.00036668100000000065, 0.00036668100000000065, 0.00036668100000000065, 0.0003667080000000003, 0.00036663800000000246, 0.0003667080000000003, 0...</msg>
<status status="PASS" starttime="20201030 15:51:55.912" endtime="20201030 15:51:55.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.925" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.924" endtime="20201030 15:51:55.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.927" level="INFO">VALUE: [0.0003672220000000004, 0.00036663900000000194, 0.00036668100000000065, 0.00036668100000000065, 0.00036668100000000065, 0.0003667080000000003, 0.00036663800000000246, 0.0003667080000000003, 0.00036669400000000074, 0.00036668000000000117, 0.00036669400000000074, 0.0003666950000000002, 0.00036668100000000065, 0.0003666670000000011, 0.00036668100000000065, 0.00036668100000000065, 0.00036666599999999813, 0.00036668000000000117, 0.00036668000000000117, 0.00036669400000000074, 0.00036668000000000117, 0.0003666950000000002, 0.0003666950000000002, 0.0003666669999999976, 0.0003666669999999976, 0.0003666809999999972, 0.00036669399999999727, 0.00036669400000000074, 0.0003667219999999999, 0.00036669399999999727, 0.00036669400000000074, 0.0003666670000000011, 0.0003666950000000002, 0.00036668100000000065, 0.0003666670000000011, 0.00036667999999999423, 0.00036669400000000074, 0.0003667639999999986, 0.00036667999999999423, 0.00036666599999999466, 0.00036667999999999423, 0.00036668100000000065, 0.0003666809999999937, 0.0003666809999999937, 0.0003666809999999937, 0.0003666939999999938, 0.0003667080000000003, 0.0003667080000000003, 0.0003667639999999986, 0.00036667999999999423]</msg>
<status status="PASS" starttime="20201030 15:51:55.926" endtime="20201030 15:51:55.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.921" endtime="20201030 15:51:55.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.932" endtime="20201030 15:51:55.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.931" endtime="20201030 15:51:55.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.930" endtime="20201030 15:51:55.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.523" endtime="20201030 15:51:55.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.523" endtime="20201030 15:51:55.953"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.961" endtime="20201030 15:51:55.992"></status>
</kw>
<msg timestamp="20201030 15:51:55.992" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.960" endtime="20201030 15:51:55.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.994" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.993" endtime="20201030 15:51:55.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.995" endtime="20201030 15:51:55.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.957" endtime="20201030 15:51:55.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.955" endtime="20201030 15:51:55.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.005" endtime="20201030 15:51:56.291"></status>
</kw>
<msg timestamp="20201030 15:51:56.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017854681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018243569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.003" endtime="20201030 15:51:56.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017854681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018243569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.295" endtime="20201030 15:51:56.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.303" endtime="20201030 15:51:56.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.001" endtime="20201030 15:51:56.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.999" endtime="20201030 15:51:56.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:56.310" level="INFO">${PHILIP_RES} = [{'diff': 0.00038888800000000043}, {'diff': 0.00038837499999999983}, {'diff': 0.00038837499999999983}, {'diff': 0.0003883889999999994}, {'diff': 0.00038841599999999907}, {'diff': 0.0003883889999999994...</msg>
<status status="PASS" starttime="20201030 15:51:56.307" endtime="20201030 15:51:56.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:56.314" level="INFO">${RESULT} = {'diff': [0.00038888800000000043, 0.00038837499999999983, 0.00038837499999999983, 0.0003883889999999994, 0.00038841599999999907, 0.0003883889999999994, 0.0003883889999999994, 0.00038836199999999974, 0...</msg>
<status status="PASS" starttime="20201030 15:51:56.311" endtime="20201030 15:51:56.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.318" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:56.317" endtime="20201030 15:51:56.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.320" level="INFO">VALUE: [0.00038888800000000043, 0.00038837499999999983, 0.00038837499999999983, 0.0003883889999999994, 0.00038841599999999907, 0.0003883889999999994, 0.0003883889999999994, 0.00038836199999999974, 0.00038837499999999983, 0.0003883889999999994, 0.00038837499999999983, 0.0003884439999999982, 0.00038844500000000115, 0.00038836100000000026, 0.00038837499999999983, 0.00038837499999999983, 0.00038836100000000026, 0.0003883470000000007, 0.00038837499999999983, 0.00038837499999999983, 0.00038837499999999983, 0.0003883469999999972, 0.00038836100000000026, 0.0003883889999999994, 0.00038836100000000026, 0.00038837499999999983, 0.0003883889999999994, 0.00038840299999999897, 0.00038840300000000244, 0.00038836100000000026, 0.00038837499999999983, 0.00038840199999999603, 0.00038837499999999636, 0.00038841600000000254, 0.0003883750000000033, 0.0003883750000000033, 0.0003883750000000033, 0.00038837499999999636, 0.00038838899999999593, 0.0003883609999999968, 0.00038838900000000287, 0.00038834700000000416, 0.00038836100000000373, 0.0003883620000000032, 0.00038837499999999636, 0.0003883479999999967, 0.00038837499999999636, 0.00038836100000000373, 0.0003883750000000033, 0.000388319000000005]</msg>
<status status="PASS" starttime="20201030 15:51:56.319" endtime="20201030 15:51:56.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.315" endtime="20201030 15:51:56.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.325" endtime="20201030 15:51:56.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.324" endtime="20201030 15:51:56.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.323" endtime="20201030 15:51:56.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.954" endtime="20201030 15:51:56.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.953" endtime="20201030 15:51:56.346"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.355" endtime="20201030 15:51:56.387"></status>
</kw>
<msg timestamp="20201030 15:51:56.387" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.353" endtime="20201030 15:51:56.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.390" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.389" endtime="20201030 15:51:56.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.391" endtime="20201030 15:51:56.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.351" endtime="20201030 15:51:56.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.349" endtime="20201030 15:51:56.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.400" endtime="20201030 15:51:56.697"></status>
</kw>
<msg timestamp="20201030 15:51:56.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018807153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019218278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.399" endtime="20201030 15:51:56.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018807153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019218278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.706" endtime="20201030 15:51:56.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.724" endtime="20201030 15:51:56.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.396" endtime="20201030 15:51:56.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.394" endtime="20201030 15:51:56.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:56.734" level="INFO">${PHILIP_RES} = [{'diff': 0.0004111249999999983}, {'diff': 0.00041068000000000007}, {'diff': 0.0004106660000000005}, {'diff': 0.000410667}, {'diff': 0.00041069399999999964}, {'diff': 0.000410667}, {'diff': 0.00041068...</msg>
<status status="PASS" starttime="20201030 15:51:56.731" endtime="20201030 15:51:56.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:56.738" level="INFO">${RESULT} = {'diff': [0.0004111249999999983, 0.00041068000000000007, 0.0004106660000000005, 0.000410667, 0.00041069399999999964, 0.000410667, 0.00041068099999999955, 0.00041068000000000007, 0.00041068099999999955...</msg>
<status status="PASS" starttime="20201030 15:51:56.735" endtime="20201030 15:51:56.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.743" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:56.742" endtime="20201030 15:51:56.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.745" level="INFO">VALUE: [0.0004111249999999983, 0.00041068000000000007, 0.0004106660000000005, 0.000410667, 0.00041069399999999964, 0.000410667, 0.00041068099999999955, 0.00041068000000000007, 0.00041068099999999955, 0.00041070900000000216, 0.00041061099999999823, 0.0004106949999999991, 0.000410667, 0.00041068000000000007, 0.00041068099999999955, 0.00041069399999999964, 0.000410667, 0.00041068099999999955, 0.00041068000000000007, 0.000410681000000003, 0.000410681000000003, 0.00041068000000000007, 0.0004106949999999991, 0.00041068000000000007, 0.000410667, 0.0004107089999999987, 0.0004106660000000005, 0.000410681000000003, 0.0004106950000000026, 0.0004106520000000044, 0.0004106390000000043, 0.00041068000000000354, 0.00041068000000000354, 0.0004106249999999978, 0.00041068000000000354, 0.0004106939999999962, 0.0004106809999999961, 0.0004106799999999966, 0.0004106809999999961, 0.00041069499999999565, 0.00041066599999999703, 0.0004106809999999961, 0.0004106939999999962, 0.0004106249999999978, 0.0004106669999999965, 0.0004106940000000031, 0.0004105840000000055, 0.0004106950000000026, 0.00041066600000000397, 0.00041066700000000345]</msg>
<status status="PASS" starttime="20201030 15:51:56.744" endtime="20201030 15:51:56.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.739" endtime="20201030 15:51:56.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.753" endtime="20201030 15:51:56.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.752" endtime="20201030 15:51:56.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.751" endtime="20201030 15:51:56.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.347" endtime="20201030 15:51:56.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.346" endtime="20201030 15:51:56.774"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.782" endtime="20201030 15:51:56.815"></status>
</kw>
<msg timestamp="20201030 15:51:56.815" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.781" endtime="20201030 15:51:56.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.818" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.816" endtime="20201030 15:51:56.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.819" endtime="20201030 15:51:56.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.778" endtime="20201030 15:51:56.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.776" endtime="20201030 15:51:56.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.828" endtime="20201030 15:51:57.114"></status>
</kw>
<msg timestamp="20201030 15:51:57.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017817111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01825125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:56.826" endtime="20201030 15:51:57.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017817111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01825125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:57.118" endtime="20201030 15:51:57.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.126" endtime="20201030 15:51:57.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.824" endtime="20201030 15:51:57.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.822" endtime="20201030 15:51:57.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.132" level="INFO">${PHILIP_RES} = [{'diff': 0.00043413900000000005}, {'diff': 0.0004335690000000017}, {'diff': 0.0004335699999999977}, {'diff': 0.000433625}, {'diff': 0.00043359700000000084}, {'diff': 0.00043359700000000084}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:51:57.129" endtime="20201030 15:51:57.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.137" level="INFO">${RESULT} = {'diff': [0.00043413900000000005, 0.0004335690000000017, 0.0004335699999999977, 0.000433625, 0.00043359700000000084, 0.00043359700000000084, 0.00043358400000000075, 0.00043354199999999857, 0.000433583...</msg>
<status status="PASS" starttime="20201030 15:51:57.133" endtime="20201030 15:51:57.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.142" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.141" endtime="20201030 15:51:57.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.144" level="INFO">VALUE: [0.00043413900000000005, 0.0004335690000000017, 0.0004335699999999977, 0.000433625, 0.00043359700000000084, 0.00043359700000000084, 0.00043358400000000075, 0.00043354199999999857, 0.0004335830000000013, 0.0004335830000000013, 0.0004335700000000012, 0.0004335829999999978, 0.00043359700000000084, 0.0004336110000000004, 0.00043358400000000075, 0.0004335969999999974, 0.0004335969999999974, 0.0004335690000000017, 0.00043358400000000075, 0.0004335699999999977, 0.0004335969999999974, 0.00043359700000000084, 0.0004335700000000012, 0.0004335830000000013, 0.0004335829999999978, 0.0004335969999999974, 0.0004335700000000012, 0.0004335830000000013, 0.0004335970000000043, 0.00043359700000000084, 0.00043358400000000075, 0.0004335839999999938, 0.00043359700000000084, 0.00043359700000000084, 0.00043358400000000075, 0.0004335830000000013, 0.00043363899999999955, 0.0004335830000000013, 0.00043359700000000084, 0.00043359700000000084, 0.00043359700000000084, 0.0004336110000000004, 0.0004335980000000003, 0.0004335830000000013, 0.00043356899999999476, 0.00043359700000000084, 0.00043358400000000075, 0.0004335700000000012, 0.0004335830000000013, 0.0004335969999999939]</msg>
<status status="PASS" starttime="20201030 15:51:57.143" endtime="20201030 15:51:57.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.138" endtime="20201030 15:51:57.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.154" endtime="20201030 15:51:57.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.153" endtime="20201030 15:51:57.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.152" endtime="20201030 15:51:57.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.775" endtime="20201030 15:51:57.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.774" endtime="20201030 15:51:57.175"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.184" endtime="20201030 15:51:57.218"></status>
</kw>
<msg timestamp="20201030 15:51:57.218" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.182" endtime="20201030 15:51:57.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.221" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.219" endtime="20201030 15:51:57.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.222" endtime="20201030 15:51:57.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.179" endtime="20201030 15:51:57.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.177" endtime="20201030 15:51:57.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.231" endtime="20201030 15:51:57.534"></status>
</kw>
<msg timestamp="20201030 15:51:57.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01787075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018328389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:57.229" endtime="20201030 15:51:57.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01787075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018328389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:57.541" endtime="20201030 15:51:57.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.549" endtime="20201030 15:51:57.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.227" endtime="20201030 15:51:57.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.225" endtime="20201030 15:51:57.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.555" level="INFO">${PHILIP_RES} = [{'diff': 0.00045763899999999927}, {'diff': 0.00045709700000000006}, {'diff': 0.00045711099999999963}, {'diff': 0.00045709799999999953}, {'diff': 0.0004570560000000008}, {'diff': 0.0004571249999999992...</msg>
<status status="PASS" starttime="20201030 15:51:57.552" endtime="20201030 15:51:57.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.559" level="INFO">${RESULT} = {'diff': [0.00045763899999999927, 0.00045709700000000006, 0.00045711099999999963, 0.00045709799999999953, 0.0004570560000000008, 0.0004571249999999992, 0.0004571249999999992, 0.0004571249999999992, 0....</msg>
<status status="PASS" starttime="20201030 15:51:57.556" endtime="20201030 15:51:57.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.564" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.563" endtime="20201030 15:51:57.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.566" level="INFO">VALUE: [0.00045763899999999927, 0.00045709700000000006, 0.00045711099999999963, 0.00045709799999999953, 0.0004570560000000008, 0.0004571249999999992, 0.0004571249999999992, 0.0004571249999999992, 0.00045708399999999996, 0.00045712500000000267, 0.00045713900000000224, 0.00045712500000000267, 0.00045709799999999953, 0.0004571249999999992, 0.0004571249999999992, 0.0004571249999999992, 0.00045709799999999953, 0.00045711099999999963, 0.00045712500000000267, 0.00045709700000000006, 0.0004571249999999992, 0.00045711099999999963, 0.0004571110000000031, 0.0004571670000000014, 0.0004571530000000018, 0.00045711099999999963, 0.0004571249999999992, 0.00045711099999999616, 0.00045702699999999874, 0.00045702800000000515, 0.00045713900000000224, 0.0004571110000000031, 0.00045712499999999573, 0.0004571950000000005, 0.00045711099999999616, 0.00045712500000000267, 0.000457082999999997, 0.00045712500000000267, 0.00045711099999999616, 0.0004571110000000031, 0.0004571670000000014, 0.0004571110000000031, 0.00045712499999999573, 0.00045719400000000104, 0.00045709700000000353, 0.0004570969999999966, 0.00045709700000000353, 0.00045712499999999573, 0.00045712500000000267, 0.00045712499999999573]</msg>
<status status="PASS" starttime="20201030 15:51:57.565" endtime="20201030 15:51:57.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.560" endtime="20201030 15:51:57.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.571" endtime="20201030 15:51:57.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.570" endtime="20201030 15:51:57.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.569" endtime="20201030 15:51:57.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.176" endtime="20201030 15:51:57.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.175" endtime="20201030 15:51:57.592"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.600" endtime="20201030 15:51:57.637"></status>
</kw>
<msg timestamp="20201030 15:51:57.637" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.599" endtime="20201030 15:51:57.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.640" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.638" endtime="20201030 15:51:57.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.641" endtime="20201030 15:51:57.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.596" endtime="20201030 15:51:57.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.594" endtime="20201030 15:51:57.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.650" endtime="20201030 15:51:57.935"></status>
</kw>
<msg timestamp="20201030 15:51:57.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018688236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019170014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.648" endtime="20201030 15:51:57.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018688236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019170014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.940" endtime="20201030 15:51:57.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.948" endtime="20201030 15:51:57.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.646" endtime="20201030 15:51:57.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.644" endtime="20201030 15:51:57.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.954" level="INFO">${PHILIP_RES} = [{'diff': 0.0004817779999999987}, {'diff': 0.00048119400000000076}, {'diff': 0.0004812630000000026}, {'diff': 0.00048123599999999947}, {'diff': 0.0004812640000000021}, {'diff': 0.00048133300000000045}...</msg>
<status status="PASS" starttime="20201030 15:51:57.951" endtime="20201030 15:51:57.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.958" level="INFO">${RESULT} = {'diff': [0.0004817779999999987, 0.00048119400000000076, 0.0004812630000000026, 0.00048123599999999947, 0.0004812640000000021, 0.00048133300000000045, 0.00048124999999999904, 0.0004812640000000021, 0....</msg>
<status status="PASS" starttime="20201030 15:51:57.955" endtime="20201030 15:51:57.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.963" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.962" endtime="20201030 15:51:57.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.965" level="INFO">VALUE: [0.0004817779999999987, 0.00048119400000000076, 0.0004812630000000026, 0.00048123599999999947, 0.0004812640000000021, 0.00048133300000000045, 0.00048124999999999904, 0.0004812640000000021, 0.00048120800000000033, 0.0004812639999999986, 0.00048127800000000165, 0.00048120800000000033, 0.00048124999999999904, 0.0004812500000000025, 0.00048124999999999904, 0.00048129199999999775, 0.0004812640000000021, 0.00048123599999999947, 0.00048124999999999904, 0.0004812640000000021, 0.00048124999999999904, 0.00048124999999999904, 0.00048124999999999904, 0.00048124999999999904, 0.0004812640000000021, 0.00048127800000000165, 0.0004812640000000021, 0.00048124999999999557, 0.00048124999999999557, 0.0004812640000000021, 0.00048127800000000165, 0.00048127800000000165, 0.00048126399999999514, 0.00048126399999999514, 0.0004812770000000022, 0.0004811950000000037, 0.0004812640000000021, 0.0004812500000000025, 0.00048120899999999633, 0.000481235999999996, 0.0004812640000000021, 0.0004812640000000021, 0.0004812500000000025, 0.00048124999999999557, 0.00048126399999999514, 0.0004812640000000021, 0.0004813060000000008, 0.0004812500000000025, 0.0004812080000000038, 0.00048124999999999557]</msg>
<status status="PASS" starttime="20201030 15:51:57.964" endtime="20201030 15:51:57.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.959" endtime="20201030 15:51:57.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.971" endtime="20201030 15:51:57.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.969" endtime="20201030 15:51:57.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.968" endtime="20201030 15:51:57.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.593" endtime="20201030 15:51:57.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.592" endtime="20201030 15:51:57.992"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.000" endtime="20201030 15:51:58.037"></status>
</kw>
<msg timestamp="20201030 15:51:58.038" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.999" endtime="20201030 15:51:58.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.040" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.039" endtime="20201030 15:51:58.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.041" endtime="20201030 15:51:58.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.996" endtime="20201030 15:51:58.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.994" endtime="20201030 15:51:58.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.050" endtime="20201030 15:51:58.350"></status>
</kw>
<msg timestamp="20201030 15:51:58.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018143069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018649597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.049" endtime="20201030 15:51:58.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018143069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018649597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.354" endtime="20201030 15:51:58.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.362" endtime="20201030 15:51:58.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.046" endtime="20201030 15:51:58.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.044" endtime="20201030 15:51:58.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:58.369" level="INFO">${PHILIP_RES} = [{'diff': 0.0005065279999999991}, {'diff': 0.0005059999999999995}, {'diff': 0.0005060139999999991}, {'diff': 0.0005060139999999991}, {'diff': 0.000506000000000003}, {'diff': 0.0005060140000000025}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:58.365" endtime="20201030 15:51:58.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.373" level="INFO">${RESULT} = {'diff': [0.0005065279999999991, 0.0005059999999999995, 0.0005060139999999991, 0.0005060139999999991, 0.000506000000000003, 0.0005060140000000025, 0.0005059859999999999, 0.0005060550000000018, 0.00050...</msg>
<status status="PASS" starttime="20201030 15:51:58.370" endtime="20201030 15:51:58.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.378" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:58.377" endtime="20201030 15:51:58.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.380" level="INFO">VALUE: [0.0005065279999999991, 0.0005059999999999995, 0.0005060139999999991, 0.0005060139999999991, 0.000506000000000003, 0.0005060140000000025, 0.0005059859999999999, 0.0005060550000000018, 0.0005059579999999973, 0.0005059870000000029, 0.0005060139999999991, 0.0005060139999999991, 0.0005059999999999995, 0.0005060139999999991, 0.0005059999999999995, 0.0005059999999999995, 0.0005060139999999991, 0.0005060269999999992, 0.0005059999999999995, 0.0005060139999999991, 0.0005059720000000004, 0.0005060140000000025, 0.000506000000000003, 0.0005060129999999996, 0.0005060139999999991, 0.0005059869999999994, 0.0005060559999999978, 0.0005059999999999995, 0.0005060280000000056, 0.0005060129999999996, 0.0005059859999999999, 0.0005060129999999996, 0.0005060420000000052, 0.0005059859999999999, 0.0005059999999999995, 0.0005060409999999987, 0.0005059449999999938, 0.0005060139999999991, 0.0005059859999999999, 0.0005060129999999996, 0.0005060139999999991, 0.0005059999999999995, 0.0005060139999999991, 0.0005059859999999999, 0.0005059859999999999, 0.0005059859999999999, 0.0005060139999999991, 0.0005060279999999986, 0.0005059999999999995, 0.0005060420000000052]</msg>
<status status="PASS" starttime="20201030 15:51:58.379" endtime="20201030 15:51:58.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.374" endtime="20201030 15:51:58.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.385" endtime="20201030 15:51:58.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.384" endtime="20201030 15:51:58.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.383" endtime="20201030 15:51:58.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.992" endtime="20201030 15:51:58.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.992" endtime="20201030 15:51:58.406"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.414" endtime="20201030 15:51:58.452"></status>
</kw>
<msg timestamp="20201030 15:51:58.453" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.413" endtime="20201030 15:51:58.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.455" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.454" endtime="20201030 15:51:58.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.456" endtime="20201030 15:51:58.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.410" endtime="20201030 15:51:58.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.408" endtime="20201030 15:51:58.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.466" endtime="20201030 15:51:58.762"></status>
</kw>
<msg timestamp="20201030 15:51:58.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017907681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018439569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.464" endtime="20201030 15:51:58.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017907681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018439569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.766" endtime="20201030 15:51:58.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.774" endtime="20201030 15:51:58.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.461" endtime="20201030 15:51:58.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.460" endtime="20201030 15:51:58.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:58.781" level="INFO">${PHILIP_RES} = [{'diff': 0.0005318879999999977}, {'diff': 0.000531346999999998}, {'diff': 0.000531361000000001}, {'diff': 0.000531346999999998}, {'diff': 0.000531361000000001}, {'diff': 0.0005314029999999997}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:51:58.778" endtime="20201030 15:51:58.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.785" level="INFO">${RESULT} = {'diff': [0.0005318879999999977, 0.000531346999999998, 0.000531361000000001, 0.000531346999999998, 0.000531361000000001, 0.0005314029999999997, 0.0005313189999999988, 0.0005313890000000002, 0.00053136...</msg>
<status status="PASS" starttime="20201030 15:51:58.782" endtime="20201030 15:51:58.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.790" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:58.789" endtime="20201030 15:51:58.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.792" level="INFO">VALUE: [0.0005318879999999977, 0.000531346999999998, 0.000531361000000001, 0.000531346999999998, 0.000531361000000001, 0.0005314029999999997, 0.0005313189999999988, 0.0005313890000000002, 0.0005313620000000005, 0.0005313890000000002, 0.0005313189999999988, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.000531361000000001, 0.0005313620000000005, 0.0005313890000000002, 0.0005314029999999997, 0.0005313890000000002, 0.0005313749999999971, 0.0005313750000000006, 0.0005313470000000015, 0.000531361000000001, 0.000531361000000001, 0.0005313620000000005, 0.000531361000000001, 0.0005313750000000006, 0.0005313890000000002, 0.0005313620000000005, 0.0005313750000000006, 0.0005313750000000006, 0.0005314169999999993, 0.0005313890000000002, 0.0005313750000000006, 0.0005314029999999997, 0.0005313609999999941, 0.000531443999999999, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.0005314029999999997, 0.000531361000000001, 0.000531361000000001, 0.000531361000000001, 0.0005313340000000014, 0.0005313190000000023]</msg>
<status status="PASS" starttime="20201030 15:51:58.791" endtime="20201030 15:51:58.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.786" endtime="20201030 15:51:58.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.797" endtime="20201030 15:51:58.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.796" endtime="20201030 15:51:58.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.795" endtime="20201030 15:51:58.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.407" endtime="20201030 15:51:58.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.406" endtime="20201030 15:51:58.818"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.827" endtime="20201030 15:51:58.867"></status>
</kw>
<msg timestamp="20201030 15:51:58.867" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.826" endtime="20201030 15:51:58.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.870" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.868" endtime="20201030 15:51:58.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.871" endtime="20201030 15:51:58.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.823" endtime="20201030 15:51:58.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.821" endtime="20201030 15:51:58.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.880" endtime="20201030 15:51:59.165"></status>
</kw>
<msg timestamp="20201030 15:51:59.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020042444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.878" endtime="20201030 15:51:59.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020042444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.169" endtime="20201030 15:51:59.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.177" endtime="20201030 15:51:59.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.876" endtime="20201030 15:51:59.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.874" endtime="20201030 15:51:59.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:59.184" level="INFO">${PHILIP_RES} = [{'diff': 0.0005578749999999993}, {'diff': 0.0005572920000000009}, {'diff': 0.0005573339999999996}, {'diff': 0.0005573609999999993}, {'diff': 0.0005573330000000001}, {'diff': 0.0005573469999999997}, {...</msg>
<status status="PASS" starttime="20201030 15:51:59.181" endtime="20201030 15:51:59.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.188" level="INFO">${RESULT} = {'diff': [0.0005578749999999993, 0.0005572920000000009, 0.0005573339999999996, 0.0005573609999999993, 0.0005573330000000001, 0.0005573469999999997, 0.0005573469999999997, 0.0005573469999999997, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:51:59.185" endtime="20201030 15:51:59.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.192" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:59.191" endtime="20201030 15:51:59.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.195" level="INFO">VALUE: [0.0005578749999999993, 0.0005572920000000009, 0.0005573339999999996, 0.0005573609999999993, 0.0005573330000000001, 0.0005573469999999997, 0.0005573469999999997, 0.0005573469999999997, 0.0005573619999999987, 0.0005573470000000032, 0.0005573609999999993, 0.0005573330000000001, 0.0005573190000000006, 0.0005573469999999997, 0.0005572639999999983, 0.0005573619999999987, 0.0005573470000000032, 0.0005573330000000001, 0.0005573190000000006, 0.0005573469999999997, 0.0005573609999999993, 0.0005573479999999992, 0.0005572640000000018, 0.00055732, 0.0005573609999999993, 0.0005573469999999997, 0.0005573330000000001, 0.0005573469999999997, 0.0005573619999999987, 0.0005573469999999997, 0.0005573469999999997, 0.0005573469999999997, 0.0005574170000000045, 0.0005573469999999997, 0.0005573479999999992, 0.0005573609999999993, 0.0005573609999999993, 0.0005573469999999997, 0.0005573469999999997, 0.000557305000000001, 0.0005573609999999993, 0.00055732, 0.0005573060000000005, 0.0005573609999999993, 0.0005573469999999997, 0.0005573330000000001, 0.0005573749999999988, 0.0005573339999999996, 0.0005573889999999984, 0.0005573469999999997]</msg>
<status status="PASS" starttime="20201030 15:51:59.193" endtime="20201030 15:51:59.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.189" endtime="20201030 15:51:59.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.200" endtime="20201030 15:51:59.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.199" endtime="20201030 15:51:59.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.198" endtime="20201030 15:51:59.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.819" endtime="20201030 15:51:59.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.819" endtime="20201030 15:51:59.221"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.230" endtime="20201030 15:51:59.269"></status>
</kw>
<msg timestamp="20201030 15:51:59.270" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.228" endtime="20201030 15:51:59.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.272" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.271" endtime="20201030 15:51:59.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.273" endtime="20201030 15:51:59.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.225" endtime="20201030 15:51:59.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.223" endtime="20201030 15:51:59.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.282" endtime="20201030 15:51:59.569"></status>
</kw>
<msg timestamp="20201030 15:51:59.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017860778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01844525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:59.281" endtime="20201030 15:51:59.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017860778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01844525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:59.573" endtime="20201030 15:51:59.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.581" endtime="20201030 15:51:59.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.278" endtime="20201030 15:51:59.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.277" endtime="20201030 15:51:59.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:59.588" level="INFO">${PHILIP_RES} = [{'diff': 0.0005844719999999991}, {'diff': 0.0005839169999999998}, {'diff': 0.0005839439999999994}, {'diff': 0.000583959000000002}, {'diff': 0.0005839169999999998}, {'diff': 0.0005839160000000003}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:59.585" endtime="20201030 15:51:59.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.593" level="INFO">${RESULT} = {'diff': [0.0005844719999999991, 0.0005839169999999998, 0.0005839439999999994, 0.000583959000000002, 0.0005839169999999998, 0.0005839160000000003, 0.0005839449999999989, 0.0005840000000000012, 0.00058...</msg>
<status status="PASS" starttime="20201030 15:51:59.589" endtime="20201030 15:51:59.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.597" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:59.596" endtime="20201030 15:51:59.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.599" level="INFO">VALUE: [0.0005844719999999991, 0.0005839169999999998, 0.0005839439999999994, 0.000583959000000002, 0.0005839169999999998, 0.0005839160000000003, 0.0005839449999999989, 0.0005840000000000012, 0.0005839299999999999, 0.0005839310000000028, 0.0005839439999999994, 0.0005839309999999993, 0.0005839309999999993, 0.0005839160000000003, 0.0005839310000000028, 0.0005839440000000029, 0.000583957999999999, 0.0005839309999999993, 0.0005839439999999994, 0.0005838890000000006, 0.0005839030000000002, 0.0005838750000000011, 0.0005839309999999959, 0.0005839580000000025, 0.0005839159999999968, 0.0005839450000000024, 0.0005839300000000033, 0.0005839299999999964, 0.0005839310000000028, 0.000583943999999996, 0.0005839029999999967, 0.0005839310000000028, 0.000583943999999996, 0.0005839310000000028, 0.0005839860000000016, 0.0005839440000000029, 0.000583959000000002, 0.0005839719999999951, 0.0005839730000000015, 0.0005839449999999954, 0.0005839300000000033, 0.0005839449999999954, 0.000583972000000002, 0.000583972000000002, 0.0005838889999999972, 0.0005839440000000029, 0.0005839579999999955, 0.0005839450000000024, 0.0005839440000000029, 0.0005839449999999954]</msg>
<status status="PASS" starttime="20201030 15:51:59.598" endtime="20201030 15:51:59.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.594" endtime="20201030 15:51:59.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.604" endtime="20201030 15:51:59.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.603" endtime="20201030 15:51:59.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.602" endtime="20201030 15:51:59.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.222" endtime="20201030 15:51:59.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.221" endtime="20201030 15:51:59.625"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.634" endtime="20201030 15:51:59.676"></status>
</kw>
<msg timestamp="20201030 15:51:59.677" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.632" endtime="20201030 15:51:59.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.679" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.678" endtime="20201030 15:51:59.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.680" endtime="20201030 15:51:59.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.629" endtime="20201030 15:51:59.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.627" endtime="20201030 15:51:59.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.689" endtime="20201030 15:52:00.005"></status>
</kw>
<msg timestamp="20201030 15:52:00.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017894444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018506111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.688" endtime="20201030 15:52:00.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017894444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018506111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.009" endtime="20201030 15:52:00.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.017" endtime="20201030 15:52:00.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.685" endtime="20201030 15:52:00.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.683" endtime="20201030 15:52:00.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:00.024" level="INFO">${PHILIP_RES} = [{'diff': 0.0006116669999999998}, {'diff': 0.0006111390000000001}, {'diff': 0.000611208000000002}, {'diff': 0.0006111389999999967}, {'diff': 0.0006111529999999997}, {'diff': 0.0006111669999999993}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:00.021" endtime="20201030 15:52:00.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.028" level="INFO">${RESULT} = {'diff': [0.0006116669999999998, 0.0006111390000000001, 0.000611208000000002, 0.0006111389999999967, 0.0006111529999999997, 0.0006111669999999993, 0.0006111520000000002, 0.0006111390000000001, 0.00061...</msg>
<status status="PASS" starttime="20201030 15:52:00.025" endtime="20201030 15:52:00.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.032" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:00.031" endtime="20201030 15:52:00.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.035" level="INFO">VALUE: [0.0006116669999999998, 0.0006111390000000001, 0.000611208000000002, 0.0006111389999999967, 0.0006111529999999997, 0.0006111669999999993, 0.0006111520000000002, 0.0006111390000000001, 0.0006111390000000001, 0.0006111250000000006, 0.0006111250000000006, 0.0006111660000000033, 0.0006111529999999997, 0.0006111390000000001, 0.0006110829999999984, 0.000611208999999998, 0.000611096999999998, 0.0006111250000000006, 0.0006111529999999997, 0.000611111000000001, 0.0006111390000000001, 0.0006111389999999967, 0.000611096999999998, 0.0006111390000000036, 0.0006111530000000032, 0.0006111519999999968, 0.0006111660000000033, 0.0006111390000000036, 0.0006111389999999967, 0.0006111530000000032, 0.000611125000000004, 0.0006111389999999967, 0.0006111390000000036, 0.0006111390000000036, 0.0006111529999999962, 0.0006112220000000015, 0.0006111530000000032, 0.0006111389999999967, 0.0006111529999999962, 0.0006111530000000032, 0.0006111389999999967, 0.0006111799999999959, 0.0006110689999999988, 0.0006111249999999971, 0.0006111659999999963, 0.0006111530000000032, 0.0006111389999999967, 0.0006110689999999988, 0.000611125000000004, 0.0006111110000000045]</msg>
<status status="PASS" starttime="20201030 15:52:00.033" endtime="20201030 15:52:00.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.029" endtime="20201030 15:52:00.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.040" endtime="20201030 15:52:00.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.038" endtime="20201030 15:52:00.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.037" endtime="20201030 15:52:00.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.626" endtime="20201030 15:52:00.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.625" endtime="20201030 15:52:00.060"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.069" endtime="20201030 15:52:00.113"></status>
</kw>
<msg timestamp="20201030 15:52:00.113" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.067" endtime="20201030 15:52:00.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.116" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.114" endtime="20201030 15:52:00.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.117" endtime="20201030 15:52:00.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.065" endtime="20201030 15:52:00.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.063" endtime="20201030 15:52:00.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.126" endtime="20201030 15:52:00.411"></status>
</kw>
<msg timestamp="20201030 15:52:00.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018732597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.124" endtime="20201030 15:52:00.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018732597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.415" endtime="20201030 15:52:00.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.423" endtime="20201030 15:52:00.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.122" endtime="20201030 15:52:00.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.120" endtime="20201030 15:52:00.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:00.430" level="INFO">${PHILIP_RES} = [{'diff': 0.0006394859999999981}, {'diff': 0.000638958000000002}, {'diff': 0.0006389579999999985}, {'diff': 0.0006389579999999985}, {'diff': 0.0006389440000000024}, {'diff': 0.0006389720000000015}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:00.426" endtime="20201030 15:52:00.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.434" level="INFO">${RESULT} = {'diff': [0.0006394859999999981, 0.000638958000000002, 0.0006389579999999985, 0.0006389579999999985, 0.0006389440000000024, 0.0006389720000000015, 0.0006390419999999994, 0.0006389450000000019, 0.00063...</msg>
<status status="PASS" starttime="20201030 15:52:00.431" endtime="20201030 15:52:00.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.438" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:00.437" endtime="20201030 15:52:00.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.440" level="INFO">VALUE: [0.0006394859999999981, 0.000638958000000002, 0.0006389579999999985, 0.0006389579999999985, 0.0006389440000000024, 0.0006389720000000015, 0.0006390419999999994, 0.0006389450000000019, 0.0006389720000000015, 0.0006389579999999985, 0.0006389579999999985, 0.0006389579999999985, 0.000638958000000002, 0.0006389309999999988, 0.0006389579999999985, 0.0006389590000000014, 0.0006389860000000011, 0.0006390419999999994, 0.000638958000000002, 0.0006389160000000033, 0.000638958000000002, 0.000638958000000002, 0.0006389859999999942, 0.0006389859999999942, 0.000638973000000001, 0.0006389450000000019, 0.0006389450000000019, 0.000638958000000002, 0.000638958000000002, 0.0006389720000000015, 0.0006389719999999946, 0.000638957999999995, 0.0006389590000000014, 0.0006389310000000023, 0.0006389590000000014, 0.0006389450000000019, 0.000638958000000002, 0.000638957999999995, 0.0006389159999999963, 0.0006389720000000015, 0.0006389860000000011, 0.000638958000000002, 0.0006389590000000014, 0.0006389029999999962, 0.0006389449999999949, 0.000638957999999995, 0.0006389439999999955, 0.0006389720000000015, 0.000638958000000002, 0.000638958000000002]</msg>
<status status="PASS" starttime="20201030 15:52:00.439" endtime="20201030 15:52:00.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.434" endtime="20201030 15:52:00.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.449" endtime="20201030 15:52:00.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.447" endtime="20201030 15:52:00.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.446" endtime="20201030 15:52:00.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.061" endtime="20201030 15:52:00.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.061" endtime="20201030 15:52:00.469"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.478" endtime="20201030 15:52:00.523"></status>
</kw>
<msg timestamp="20201030 15:52:00.524" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.476" endtime="20201030 15:52:00.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.526" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.525" endtime="20201030 15:52:00.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.527" endtime="20201030 15:52:00.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.474" endtime="20201030 15:52:00.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.472" endtime="20201030 15:52:00.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.536" endtime="20201030 15:52:00.838"></status>
</kw>
<msg timestamp="20201030 15:52:00.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017903167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018571097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.535" endtime="20201030 15:52:00.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017903167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018571097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.842" endtime="20201030 15:52:00.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.850" endtime="20201030 15:52:00.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.532" endtime="20201030 15:52:00.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.530" endtime="20201030 15:52:00.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:00.856" level="INFO">${PHILIP_RES} = [{'diff': 0.0006679300000000006}, {'diff': 0.0006673889999999974}, {'diff': 0.000667402999999997}, {'diff': 0.0006673889999999974}, {'diff': 0.0006673750000000013}, {'diff': 0.0006673479999999982}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:00.853" endtime="20201030 15:52:00.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.861" level="INFO">${RESULT} = {'diff': [0.0006679300000000006, 0.0006673889999999974, 0.000667402999999997, 0.0006673889999999974, 0.0006673750000000013, 0.0006673479999999982, 0.0006673890000000009, 0.0006673750000000013, 0.00066...</msg>
<status status="PASS" starttime="20201030 15:52:00.857" endtime="20201030 15:52:00.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.866" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:00.865" endtime="20201030 15:52:00.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.868" level="INFO">VALUE: [0.0006679300000000006, 0.0006673889999999974, 0.000667402999999997, 0.0006673889999999974, 0.0006673750000000013, 0.0006673479999999982, 0.0006673890000000009, 0.0006673750000000013, 0.0006674579999999992, 0.0006674030000000004, 0.0006673750000000013, 0.0006674300000000001, 0.0006673889999999974, 0.000667402999999997, 0.0006673889999999974, 0.0006674590000000022, 0.0006674440000000031, 0.0006674030000000004, 0.0006673890000000009, 0.0006674169999999965, 0.000667319999999999, 0.0006674030000000039, 0.0006673890000000043, 0.0006674030000000039, 0.0006674590000000022, 0.0006673750000000048, 0.0006673750000000048, 0.0006674030000000039, 0.0006674030000000039, 0.0006673609999999983, 0.0006673889999999974, 0.0006673469999999987, 0.000667319999999999, 0.000667402999999997, 0.0006673749999999978, 0.0006673749999999978, 0.0006673889999999974, 0.0006673749999999978, 0.0006673889999999974, 0.0006673889999999974, 0.0006674439999999962, 0.0006673469999999987, 0.0006673750000000048, 0.0006673469999999987, 0.0006673749999999978, 0.0006673469999999987, 0.0006674030000000039, 0.0006673750000000048, 0.0006673750000000048, 0.0006673750000000048]</msg>
<status status="PASS" starttime="20201030 15:52:00.867" endtime="20201030 15:52:00.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.862" endtime="20201030 15:52:00.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.873" endtime="20201030 15:52:00.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.872" endtime="20201030 15:52:00.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.870" endtime="20201030 15:52:00.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.470" endtime="20201030 15:52:00.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.470" endtime="20201030 15:52:00.894"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.902" endtime="20201030 15:52:00.948"></status>
</kw>
<msg timestamp="20201030 15:52:00.949" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.901" endtime="20201030 15:52:00.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.951" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.950" endtime="20201030 15:52:00.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.952" endtime="20201030 15:52:00.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.898" endtime="20201030 15:52:00.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.896" endtime="20201030 15:52:00.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.962" endtime="20201030 15:52:01.248"></status>
</kw>
<msg timestamp="20201030 15:52:01.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017919347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018616278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.960" endtime="20201030 15:52:01.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017919347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018616278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.252" endtime="20201030 15:52:01.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.260" endtime="20201030 15:52:01.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.957" endtime="20201030 15:52:01.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.956" endtime="20201030 15:52:01.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:01.267" level="INFO">${PHILIP_RES} = [{'diff': 0.0006969310000000013}, {'diff': 0.0006964019999999987}, {'diff': 0.0006964310000000008}, {'diff': 0.0006963469999999999}, {'diff': 0.0006964169999999978}, {'diff': 0.0006964030000000017}, {...</msg>
<status status="PASS" starttime="20201030 15:52:01.264" endtime="20201030 15:52:01.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.271" level="INFO">${RESULT} = {'diff': [0.0006969310000000013, 0.0006964019999999987, 0.0006964310000000008, 0.0006963469999999999, 0.0006964169999999978, 0.0006964030000000017, 0.0006964310000000008, 0.0006964720000000001, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:52:01.268" endtime="20201030 15:52:01.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.275" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:01.274" endtime="20201030 15:52:01.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.277" level="INFO">VALUE: [0.0006969310000000013, 0.0006964019999999987, 0.0006964310000000008, 0.0006963469999999999, 0.0006964169999999978, 0.0006964030000000017, 0.0006964310000000008, 0.0006964720000000001, 0.0006964169999999978, 0.0006964170000000013, 0.0006964300000000014, 0.0006964310000000008, 0.0006964299999999979, 0.0006964310000000008, 0.0006964300000000014, 0.0006964310000000008, 0.0006964580000000005, 0.0006964589999999965, 0.0006964299999999979, 0.0006964170000000047, 0.000696458000000004, 0.0006964299999999979, 0.0006964309999999974, 0.0006963749999999991, 0.0006964029999999982, 0.0006964720000000035, 0.0006964170000000047, 0.0006964300000000048, 0.0006964450000000039, 0.0006964309999999974, 0.0006964299999999979, 0.0006964309999999974, 0.0006964439999999975, 0.0006964170000000047, 0.0006963469999999999, 0.0006964170000000047, 0.0006964019999999987, 0.0006963609999999995, 0.0006964299999999979, 0.0006964309999999974, 0.0006965000000000027, 0.0006964720000000035, 0.0006964170000000047, 0.0006964299999999979, 0.0006964169999999978, 0.0006964719999999966, 0.0006964309999999974, 0.0006964299999999979, 0.0006964310000000043, 0.0006964030000000052]</msg>
<status status="PASS" starttime="20201030 15:52:01.276" endtime="20201030 15:52:01.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.271" endtime="20201030 15:52:01.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.282" endtime="20201030 15:52:01.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.281" endtime="20201030 15:52:01.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.280" endtime="20201030 15:52:01.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.895" endtime="20201030 15:52:01.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.894" endtime="20201030 15:52:01.303"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.312" endtime="20201030 15:52:01.360"></status>
</kw>
<msg timestamp="20201030 15:52:01.361" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.310" endtime="20201030 15:52:01.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.363" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.362" endtime="20201030 15:52:01.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.364" endtime="20201030 15:52:01.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.307" endtime="20201030 15:52:01.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.305" endtime="20201030 15:52:01.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.378" endtime="20201030 15:52:01.675"></status>
</kw>
<msg timestamp="20201030 15:52:01.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018762014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019488625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.375" endtime="20201030 15:52:01.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018762014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019488625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.680" endtime="20201030 15:52:01.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.688" endtime="20201030 15:52:01.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.369" endtime="20201030 15:52:01.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.367" endtime="20201030 15:52:01.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:01.695" level="INFO">${PHILIP_RES} = [{'diff': 0.0007266109999999985}, {'diff': 0.0007260840000000018}, {'diff': 0.0007260969999999985}, {'diff': 0.0007260839999999984}, {'diff': 0.0007260690000000028}, {'diff': 0.0007260839999999984}, {...</msg>
<status status="PASS" starttime="20201030 15:52:01.691" endtime="20201030 15:52:01.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.699" level="INFO">${RESULT} = {'diff': [0.0007266109999999985, 0.0007260840000000018, 0.0007260969999999985, 0.0007260839999999984, 0.0007260690000000028, 0.0007260839999999984, 0.0007260969999999985, 0.0007260700000000023, 0.0007...</msg>
<status status="PASS" starttime="20201030 15:52:01.696" endtime="20201030 15:52:01.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.703" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:01.702" endtime="20201030 15:52:01.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.706" level="INFO">VALUE: [0.0007266109999999985, 0.0007260840000000018, 0.0007260969999999985, 0.0007260839999999984, 0.0007260690000000028, 0.0007260839999999984, 0.0007260969999999985, 0.0007260700000000023, 0.0007260829999999989, 0.0007260559999999992, 0.0007260689999999993, 0.0007260839999999984, 0.0007260689999999993, 0.0007260829999999989, 0.0007260689999999993, 0.0007260700000000023, 0.0007260829999999954, 0.0007260839999999949, 0.0007260830000000024, 0.0007260970000000019, 0.0007260559999999958, 0.0007261110000000015, 0.0007260700000000023, 0.0007260829999999954, 0.0007260700000000023, 0.0007260830000000024, 0.0007260699999999953, 0.0007260830000000024, 0.0007260980000000014, 0.0007260829999999954, 0.0007260700000000023, 0.000726014000000004, 0.0007260839999999949, 0.0007260970000000019, 0.0007260280000000036, 0.0007260829999999954, 0.0007260830000000024, 0.0007260550000000032, 0.0007260829999999954, 0.0007260830000000024, 0.0007260690000000028, 0.0007260970000000019, 0.0007260829999999954, 0.0007260840000000018, 0.0007260689999999959, 0.0007260829999999954, 0.0007260420000000031, 0.0007260700000000023, 0.0007260829999999954, 0.0007260840000000018]</msg>
<status status="PASS" starttime="20201030 15:52:01.705" endtime="20201030 15:52:01.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.700" endtime="20201030 15:52:01.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.712" endtime="20201030 15:52:01.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.711" endtime="20201030 15:52:01.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.709" endtime="20201030 15:52:01.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.304" endtime="20201030 15:52:01.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.303" endtime="20201030 15:52:01.733"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.742" endtime="20201030 15:52:01.797"></status>
</kw>
<msg timestamp="20201030 15:52:01.797" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.740" endtime="20201030 15:52:01.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.800" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.798" endtime="20201030 15:52:01.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.801" endtime="20201030 15:52:01.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.737" endtime="20201030 15:52:01.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.735" endtime="20201030 15:52:01.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.810" endtime="20201030 15:52:02.098"></status>
</kw>
<msg timestamp="20201030 15:52:02.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023906083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024662944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.808" endtime="20201030 15:52:02.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023906083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024662944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.103" endtime="20201030 15:52:02.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.111" endtime="20201030 15:52:02.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.806" endtime="20201030 15:52:02.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.804" endtime="20201030 15:52:02.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:02.118" level="INFO">${PHILIP_RES} = [{'diff': 0.0007568609999999976}, {'diff': 0.0007563330000000014}, {'diff': 0.0007563340000000009}, {'diff': 0.000756347000000001}, {'diff': 0.0007563480000000004}, {'diff': 0.0007563329999999979}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:02.115" endtime="20201030 15:52:02.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.123" level="INFO">${RESULT} = {'diff': [0.0007568609999999976, 0.0007563330000000014, 0.0007563340000000009, 0.000756347000000001, 0.0007563480000000004, 0.0007563329999999979, 0.0007563469999999975, 0.0007563200000000013, 0.00075...</msg>
<status status="PASS" starttime="20201030 15:52:02.119" endtime="20201030 15:52:02.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.127" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:02.126" endtime="20201030 15:52:02.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.130" level="INFO">VALUE: [0.0007568609999999976, 0.0007563330000000014, 0.0007563340000000009, 0.000756347000000001, 0.0007563480000000004, 0.0007563329999999979, 0.0007563469999999975, 0.0007563200000000013, 0.000756347000000001, 0.0007563480000000039, 0.0007563329999999979, 0.0007563330000000049, 0.000756347999999997, 0.0007563470000000044, 0.0007563609999999971, 0.0007563189999999984, 0.0007563470000000044, 0.0007564169999999953, 0.0007562919999999987, 0.0007563469999999975, 0.0007562639999999995, 0.000756361000000004, 0.0007564029999999958, 0.0007563330000000049, 0.0007563469999999975, 0.0007563330000000049, 0.0007563609999999971, 0.0007564169999999953, 0.0007563330000000049, 0.0007563339999999974, 0.0007563050000000057, 0.0007563329999999979, 0.0007563339999999974, 0.0007563469999999975, 0.0007563469999999975, 0.0007563190000000053, 0.0007563889999999962, 0.0007562779999999991, 0.0007563469999999975, 0.0007563749999999966, 0.0007563330000000049, 0.0007563469999999975, 0.0007564170000000023, 0.0007563469999999975, 0.0007563469999999975, 0.0007563469999999975, 0.0007563469999999975, 0.000756347999999997, 0.0007563190000000053, 0.0007563609999999971]</msg>
<status status="PASS" starttime="20201030 15:52:02.128" endtime="20201030 15:52:02.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.124" endtime="20201030 15:52:02.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.135" endtime="20201030 15:52:02.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.133" endtime="20201030 15:52:02.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.132" endtime="20201030 15:52:02.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.734" endtime="20201030 15:52:02.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.733" endtime="20201030 15:52:02.156"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.165" endtime="20201030 15:52:02.217"></status>
</kw>
<msg timestamp="20201030 15:52:02.219" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.163" endtime="20201030 15:52:02.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.224" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.221" endtime="20201030 15:52:02.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.226" endtime="20201030 15:52:02.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.160" endtime="20201030 15:52:02.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.158" endtime="20201030 15:52:02.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.247" endtime="20201030 15:52:02.541"></status>
</kw>
<msg timestamp="20201030 15:52:02.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018517667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019305417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.243" endtime="20201030 15:52:02.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018517667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019305417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.545" endtime="20201030 15:52:02.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.553" endtime="20201030 15:52:02.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.237" endtime="20201030 15:52:02.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.234" endtime="20201030 15:52:02.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:02.560" level="INFO">${PHILIP_RES} = [{'diff': 0.0007877499999999968}, {'diff': 0.000787208000000001}, {'diff': 0.0007872499999999998}, {'diff': 0.0007872220000000006}, {'diff': 0.0007872220000000006}, {'diff': 0.0007872230000000001}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:02.557" endtime="20201030 15:52:02.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.564" level="INFO">${RESULT} = {'diff': [0.0007877499999999968, 0.000787208000000001, 0.0007872499999999998, 0.0007872220000000006, 0.0007872220000000006, 0.0007872230000000001, 0.0007872360000000002, 0.0007872220000000006, 0.00078...</msg>
<status status="PASS" starttime="20201030 15:52:02.561" endtime="20201030 15:52:02.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.569" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:02.568" endtime="20201030 15:52:02.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.571" level="INFO">VALUE: [0.0007877499999999968, 0.000787208000000001, 0.0007872499999999998, 0.0007872220000000006, 0.0007872220000000006, 0.0007872230000000001, 0.0007872360000000002, 0.0007872220000000006, 0.0007872220000000006, 0.000787195000000001, 0.0007872359999999967, 0.000787193999999998, 0.0007872220000000006, 0.0007872220000000006, 0.0007872230000000001, 0.0007872220000000006, 0.0007872080000000045, 0.0007872220000000041, 0.000787209000000004, 0.0007872920000000019, 0.0007872219999999971, 0.000787193999999998, 0.0007872219999999971, 0.0007872360000000037, 0.0007872220000000041, 0.0007872360000000037, 0.0007871809999999979, 0.0007872229999999966, 0.0007872079999999976, 0.0007872219999999971, 0.0007872220000000041, 0.0007872220000000041, 0.0007872229999999966, 0.0007872079999999976, 0.0007872079999999976, 0.0007872359999999967, 0.0007872230000000036, 0.0007872360000000037, 0.0007872080000000045, 0.0007872079999999976, 0.0007872369999999962, 0.000787291999999995, 0.0007872359999999967, 0.0007871389999999992, 0.0007872220000000041, 0.0007872780000000024, 0.0007872219999999971, 0.0007871799999999984, 0.0007872499999999963, 0.0007872230000000036]</msg>
<status status="PASS" starttime="20201030 15:52:02.570" endtime="20201030 15:52:02.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.565" endtime="20201030 15:52:02.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.577" endtime="20201030 15:52:02.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.575" endtime="20201030 15:52:02.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.574" endtime="20201030 15:52:02.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.157" endtime="20201030 15:52:02.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.156" endtime="20201030 15:52:02.597"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.606" endtime="20201030 15:52:02.660"></status>
</kw>
<msg timestamp="20201030 15:52:02.661" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.605" endtime="20201030 15:52:02.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.663" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.662" endtime="20201030 15:52:02.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.664" endtime="20201030 15:52:02.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.602" endtime="20201030 15:52:02.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.600" endtime="20201030 15:52:02.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.674" endtime="20201030 15:52:02.969"></status>
</kw>
<msg timestamp="20201030 15:52:02.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019458319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020277556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.672" endtime="20201030 15:52:02.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019458319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020277556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.973" endtime="20201030 15:52:02.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.982" endtime="20201030 15:52:02.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.670" endtime="20201030 15:52:02.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.668" endtime="20201030 15:52:02.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:02.989" level="INFO">${PHILIP_RES} = [{'diff': 0.000819236999999997}, {'diff': 0.0008187219999999974}, {'diff': 0.000818735999999997}, {'diff': 0.0008187089999999973}, {'diff': 0.0008187089999999973}, {'diff': 0.0008187090000000008}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:02.985" endtime="20201030 15:52:02.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.997" level="INFO">${RESULT} = {'diff': [0.000819236999999997, 0.0008187219999999974, 0.000818735999999997, 0.0008187089999999973, 0.0008187089999999973, 0.0008187090000000008, 0.0008187360000000005, 0.0008186950000000012, 0.000818...</msg>
<status status="PASS" starttime="20201030 15:52:02.990" endtime="20201030 15:52:02.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.007" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:03.005" endtime="20201030 15:52:03.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.012" level="INFO">VALUE: [0.000819236999999997, 0.0008187219999999974, 0.000818735999999997, 0.0008187089999999973, 0.0008187089999999973, 0.0008187090000000008, 0.0008187360000000005, 0.0008186950000000012, 0.0008187220000000009, 0.000818652999999999, 0.0008186940000000018, 0.0008187220000000009, 0.0008187360000000005, 0.0008187080000000013, 0.0008187079999999944, 0.0008187220000000009, 0.0008186939999999948, 0.0008187220000000009, 0.0008187080000000013, 0.0008187220000000009, 0.0008187220000000009, 0.0008187230000000004, 0.0008186950000000012, 0.0008187090000000008, 0.0008186669999999951, 0.0008186950000000012, 0.0008186950000000012, 0.0008187080000000013, 0.0008186940000000018, 0.00081875, 0.0008187220000000009, 0.0008187080000000013, 0.0008187220000000009, 0.0008187080000000013, 0.00081875, 0.0008187079999999944, 0.0008186800000000022, 0.0008186939999999948, 0.0008187220000000009, 0.0008186949999999943, 0.0008186950000000012, 0.0008187230000000004, 0.0008187090000000008, 0.0008187369999999999, 0.0008187230000000004, 0.0008187360000000005, 0.00081875, 0.0008187220000000009, 0.0008187080000000013, 0.0008187080000000013]</msg>
<status status="PASS" starttime="20201030 15:52:03.009" endtime="20201030 15:52:03.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.999" endtime="20201030 15:52:03.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.025" endtime="20201030 15:52:03.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.022" endtime="20201030 15:52:03.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.019" endtime="20201030 15:52:03.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.598" endtime="20201030 15:52:03.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.598" endtime="20201030 15:52:03.050"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.069" endtime="20201030 15:52:03.125"></status>
</kw>
<msg timestamp="20201030 15:52:03.126" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.066" endtime="20201030 15:52:03.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.129" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.127" endtime="20201030 15:52:03.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.130" endtime="20201030 15:52:03.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.060" endtime="20201030 15:52:03.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.055" endtime="20201030 15:52:03.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.139" endtime="20201030 15:52:03.429"></status>
</kw>
<msg timestamp="20201030 15:52:03.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033366694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034218014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.137" endtime="20201030 15:52:03.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033366694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034218014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.433" endtime="20201030 15:52:03.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.441" endtime="20201030 15:52:03.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.135" endtime="20201030 15:52:03.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.133" endtime="20201030 15:52:03.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:03.448" level="INFO">${PHILIP_RES} = [{'diff': 0.0008513199999999957}, {'diff': 0.000850792000000003}, {'diff': 0.000850791999999996}, {'diff': 0.0008507640000000039}, {'diff': 0.000850791999999996}, {'diff': 0.0008508200000000021}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:03.445" endtime="20201030 15:52:03.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.453" level="INFO">${RESULT} = {'diff': [0.0008513199999999957, 0.000850792000000003, 0.000850791999999996, 0.0008507640000000039, 0.000850791999999996, 0.0008508200000000021, 0.0008508049999999961, 0.0008507640000000039, 0.0008508...</msg>
<status status="PASS" starttime="20201030 15:52:03.449" endtime="20201030 15:52:03.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.458" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:03.457" endtime="20201030 15:52:03.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.460" level="INFO">VALUE: [0.0008513199999999957, 0.000850792000000003, 0.000850791999999996, 0.0008507640000000039, 0.000850791999999996, 0.0008508200000000021, 0.0008508049999999961, 0.0008507640000000039, 0.0008508330000000022, 0.0008508750000000009, 0.0008507910000000035, 0.000850791999999996, 0.0008508190000000027, 0.000850776999999997, 0.000850792000000003, 0.0008508469999999949, 0.000850792000000003, 0.0008508049999999961, 0.0008508200000000021, 0.0008508329999999953, 0.0008508330000000022, 0.0008508059999999956, 0.0008508190000000027, 0.0008508200000000021, 0.0008508190000000027, 0.0008508200000000021, 0.0008508060000000026, 0.0008507499999999973, 0.0008508750000000009, 0.0008508050000000031, 0.0008508199999999952, 0.0008508059999999956, 0.000850792000000003, 0.0008507779999999965, 0.0008508470000000018, 0.0008508199999999883, 0.0008508190000000027, 0.0008508200000000021, 0.0008508190000000027, 0.0008508329999999953, 0.0008508059999999956, 0.000850776999999997, 0.0008508200000000021, 0.0008507499999999973, 0.0008508470000000018, 0.0008508190000000027, 0.0008508200000000021, 0.0008508190000000027, 0.0008508049999999961, 0.0008508059999999956]</msg>
<status status="PASS" starttime="20201030 15:52:03.459" endtime="20201030 15:52:03.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.454" endtime="20201030 15:52:03.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.465" endtime="20201030 15:52:03.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.464" endtime="20201030 15:52:03.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.463" endtime="20201030 15:52:03.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.052" endtime="20201030 15:52:03.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.051" endtime="20201030 15:52:03.486"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.495" endtime="20201030 15:52:03.551"></status>
</kw>
<msg timestamp="20201030 15:52:03.551" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.493" endtime="20201030 15:52:03.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.554" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.552" endtime="20201030 15:52:03.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.555" endtime="20201030 15:52:03.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.491" endtime="20201030 15:52:03.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.489" endtime="20201030 15:52:03.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.564" endtime="20201030 15:52:03.866"></status>
</kw>
<msg timestamp="20201030 15:52:03.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018367333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019251444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.563" endtime="20201030 15:52:03.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018367333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019251444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.875" endtime="20201030 15:52:03.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.893" endtime="20201030 15:52:03.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.560" endtime="20201030 15:52:03.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.558" endtime="20201030 15:52:03.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:03.903" level="INFO">${PHILIP_RES} = [{'diff': 0.0008841109999999999}, {'diff': 0.000883542000000001}, {'diff': 0.0008834589999999996}, {'diff': 0.0008835280000000015}, {'diff': 0.0008835139999999984}, {'diff': 0.0008835269999999985}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:03.900" endtime="20201030 15:52:03.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.907" level="INFO">${RESULT} = {'diff': [0.0008841109999999999, 0.000883542000000001, 0.0008834589999999996, 0.0008835280000000015, 0.0008835139999999984, 0.0008835269999999985, 0.0008835410000000016, 0.0008834999999999989, 0.00088...</msg>
<status status="PASS" starttime="20201030 15:52:03.904" endtime="20201030 15:52:03.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.912" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:03.911" endtime="20201030 15:52:03.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.914" level="INFO">VALUE: [0.0008841109999999999, 0.000883542000000001, 0.0008834589999999996, 0.0008835280000000015, 0.0008835139999999984, 0.0008835269999999985, 0.0008835410000000016, 0.0008834999999999989, 0.0008835560000000006, 0.0008835139999999984, 0.0008834859999999993, 0.0008835280000000015, 0.0008835140000000019, 0.0008835280000000015, 0.000883513999999995, 0.0008834719999999963, 0.0008835140000000019, 0.000883542000000001, 0.0008835560000000006, 0.000883513999999995, 0.0008835279999999945, 0.0008835140000000019, 0.000883542000000001, 0.000883527000000002, 0.0008835550000000011, 0.0008835409999999946, 0.0008835269999999951, 0.0008835410000000016, 0.000883542000000001, 0.0008835700000000002, 0.0008835700000000002, 0.000883513999999995, 0.0008835279999999945, 0.000883542000000001, 0.000883542000000001, 0.0008835140000000019, 0.0008835269999999951, 0.0008835549999999942, 0.0008835280000000015, 0.0008835280000000015, 0.0008835280000000015, 0.0008834860000000028, 0.0008835280000000015, 0.0008835280000000015, 0.0008835690000000007, 0.0008835280000000015, 0.0008835129999999955, 0.0008835690000000007, 0.0008835700000000002, 0.0008835279999999945]</msg>
<status status="PASS" starttime="20201030 15:52:03.913" endtime="20201030 15:52:03.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.908" endtime="20201030 15:52:03.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.919" endtime="20201030 15:52:03.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.917" endtime="20201030 15:52:03.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.916" endtime="20201030 15:52:03.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.487" endtime="20201030 15:52:03.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.486" endtime="20201030 15:52:03.940"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.948" endtime="20201030 15:52:04.007"></status>
</kw>
<msg timestamp="20201030 15:52:04.008" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.947" endtime="20201030 15:52:04.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.010" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.009" endtime="20201030 15:52:04.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.011" endtime="20201030 15:52:04.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.944" endtime="20201030 15:52:04.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.942" endtime="20201030 15:52:04.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.020" endtime="20201030 15:52:04.305"></status>
</kw>
<msg timestamp="20201030 15:52:04.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018700375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019617736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.019" endtime="20201030 15:52:04.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018700375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019617736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.310" endtime="20201030 15:52:04.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.318" endtime="20201030 15:52:04.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.016" endtime="20201030 15:52:04.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.015" endtime="20201030 15:52:04.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:04.324" level="INFO">${PHILIP_RES} = [{'diff': 0.0009173609999999985}, {'diff': 0.0009168620000000009}, {'diff': 0.0009168610000000015}, {'diff': 0.0009169309999999993}, {'diff': 0.0009168469999999984}, {'diff': 0.0009169030000000002}, {...</msg>
<status status="PASS" starttime="20201030 15:52:04.321" endtime="20201030 15:52:04.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.328" level="INFO">${RESULT} = {'diff': [0.0009173609999999985, 0.0009168620000000009, 0.0009168610000000015, 0.0009169309999999993, 0.0009168469999999984, 0.0009169030000000002, 0.000916860999999998, 0.000916860999999998, 0.000916...</msg>
<status status="PASS" starttime="20201030 15:52:04.325" endtime="20201030 15:52:04.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.332" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:04.331" endtime="20201030 15:52:04.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.335" level="INFO">VALUE: [0.0009173609999999985, 0.0009168620000000009, 0.0009168610000000015, 0.0009169309999999993, 0.0009168469999999984, 0.0009169030000000002, 0.000916860999999998, 0.000916860999999998, 0.0009168890000000006, 0.0009168610000000015, 0.0009168610000000015, 0.0009168470000000019, 0.0009168610000000015, 0.000916860999999998, 0.000916860999999998, 0.0009168469999999984, 0.000916860999999998, 0.0009168610000000049, 0.0009168339999999983, 0.0009168610000000049, 0.0009168749999999976, 0.0009168750000000045, 0.000916860999999998, 0.000916860999999998, 0.0009169030000000036, 0.0009168889999999971, 0.0009168890000000041, 0.0009168469999999984, 0.0009168750000000045, 0.0009168469999999984, 0.0009168470000000054, 0.000916860999999998, 0.0009168330000000058, 0.000916860999999998, 0.000916860999999998, 0.000916860999999998, 0.000916860999999998, 0.0009168339999999983, 0.000916860999999998, 0.0009168610000000049, 0.0009168469999999984, 0.0009168480000000048, 0.0009169169999999963, 0.0009169440000000029, 0.0009168329999999988, 0.0009168749999999976, 0.0009168199999999987, 0.0009168479999999979, 0.000916860999999991, 0.0009168469999999984]</msg>
<status status="PASS" starttime="20201030 15:52:04.333" endtime="20201030 15:52:04.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.329" endtime="20201030 15:52:04.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.343" endtime="20201030 15:52:04.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.341" endtime="20201030 15:52:04.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.340" endtime="20201030 15:52:04.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.941" endtime="20201030 15:52:04.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.940" endtime="20201030 15:52:04.364"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.372" endtime="20201030 15:52:04.431"></status>
</kw>
<msg timestamp="20201030 15:52:04.432" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.370" endtime="20201030 15:52:04.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.434" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.433" endtime="20201030 15:52:04.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.435" endtime="20201030 15:52:04.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.368" endtime="20201030 15:52:04.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.366" endtime="20201030 15:52:04.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.444" endtime="20201030 15:52:04.746"></status>
</kw>
<msg timestamp="20201030 15:52:04.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017708194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018659528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.443" endtime="20201030 15:52:04.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017708194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018659528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.750" endtime="20201030 15:52:04.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.758" endtime="20201030 15:52:04.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.440" endtime="20201030 15:52:04.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.438" endtime="20201030 15:52:04.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:04.765" level="INFO">${PHILIP_RES} = [{'diff': 0.0009513340000000016}, {'diff': 0.0009507780000000028}, {'diff': 0.000950804999999999}, {'diff': 0.0009508189999999986}, {'diff': 0.0009507909999999994}, {'diff': 0.000950819000000002}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:04.762" endtime="20201030 15:52:04.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.770" level="INFO">${RESULT} = {'diff': [0.0009513340000000016, 0.0009507780000000028, 0.000950804999999999, 0.0009508189999999986, 0.0009507909999999994, 0.000950819000000002, 0.0009508329999999982, 0.0009508059999999985, 0.000950...</msg>
<status status="PASS" starttime="20201030 15:52:04.766" endtime="20201030 15:52:04.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.774" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:04.773" endtime="20201030 15:52:04.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.776" level="INFO">VALUE: [0.0009513340000000016, 0.0009507780000000028, 0.000950804999999999, 0.0009508189999999986, 0.0009507909999999994, 0.000950819000000002, 0.0009508329999999982, 0.0009508059999999985, 0.0009507919999999989, 0.0009507920000000024, 0.0009507909999999994, 0.0009507919999999989, 0.0009507919999999989, 0.0009508200000000015, 0.0009507919999999989, 0.0009508189999999986, 0.000950805000000006, 0.0009507909999999994, 0.000950804999999999, 0.0009507359999999937, 0.0009507779999999993, 0.000950820000000005, 0.0009508339999999976, 0.0009507909999999994, 0.0009507909999999994, 0.0009507919999999989, 0.0009507919999999989, 0.0009508199999999981, 0.0009508059999999985, 0.0009507920000000059, 0.0009508189999999986, 0.0009507919999999989, 0.0009508199999999981, 0.0009507919999999989, 0.0009508060000000054, 0.0009507360000000006, 0.0009507909999999994, 0.0009507909999999994, 0.0009508059999999985, 0.0009508059999999985, 0.0009507919999999989, 0.0009508199999999981, 0.0009508190000000055, 0.0009507639999999998, 0.000950804999999999, 0.000950737000000007, 0.000950820000000005, 0.0009508749999999899, 0.0009507779999999993, 0.000950804999999999]</msg>
<status status="PASS" starttime="20201030 15:52:04.775" endtime="20201030 15:52:04.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.770" endtime="20201030 15:52:04.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.781" endtime="20201030 15:52:04.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.780" endtime="20201030 15:52:04.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.779" endtime="20201030 15:52:04.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.365" endtime="20201030 15:52:04.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.364" endtime="20201030 15:52:04.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.579" endtime="20201030 15:52:04.802"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:42.414" endtime="20201030 15:52:04.803" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:21.463" endtime="20201030 15:52:04.812"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.881" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:52:04.889" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:52:05.888" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:52:04.880" endtime="20201030 15:52:05.888"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.891" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 15:52:05.890" endtime="20201030 15:52:06.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.878" endtime="20201030 15:52:06.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.899" endtime="20201030 15:52:07.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.895" endtime="20201030 15:52:07.136"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.148" endtime="20201030 15:52:07.168"></status>
</kw>
<msg timestamp="20201030 15:52:07.169" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.147" endtime="20201030 15:52:07.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.171" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.170" endtime="20201030 15:52:07.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.174" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:07.172" endtime="20201030 15:52:07.174"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:07.144" endtime="20201030 15:52:07.175"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:07.142" endtime="20201030 15:52:07.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.141" endtime="20201030 15:52:07.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:07.180" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:07.179" endtime="20201030 15:52:07.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.177" endtime="20201030 15:52:07.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.140" endtime="20201030 15:52:07.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.139" endtime="20201030 15:52:07.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.183" endtime="20201030 15:52:07.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.138" endtime="20201030 15:52:07.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.185" endtime="20201030 15:52:07.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.136" endtime="20201030 15:52:07.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.877" endtime="20201030 15:52:07.188"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.194" endtime="20201030 15:52:07.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.192" endtime="20201030 15:52:07.218"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.235" endtime="20201030 15:52:07.251"></status>
</kw>
<msg timestamp="20201030 15:52:07.252" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.233" endtime="20201030 15:52:07.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.254" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.253" endtime="20201030 15:52:07.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.257" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:07.256" endtime="20201030 15:52:07.258"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:07.231" endtime="20201030 15:52:07.258"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:07.225" endtime="20201030 15:52:07.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.224" endtime="20201030 15:52:07.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:07.263" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:07.262" endtime="20201030 15:52:07.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.260" endtime="20201030 15:52:07.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.223" endtime="20201030 15:52:07.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.222" endtime="20201030 15:52:07.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.265" endtime="20201030 15:52:07.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.221" endtime="20201030 15:52:07.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.219" endtime="20201030 15:52:07.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.191" endtime="20201030 15:52:07.268"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.278" endtime="20201030 15:52:07.295"></status>
</kw>
<msg timestamp="20201030 15:52:07.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.277" endtime="20201030 15:52:07.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.297" endtime="20201030 15:52:07.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.300" endtime="20201030 15:52:07.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.273" endtime="20201030 15:52:07.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.271" endtime="20201030 15:52:07.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.309" endtime="20201030 15:52:07.603"></status>
</kw>
<msg timestamp="20201030 15:52:07.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074052944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074081847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.307" endtime="20201030 15:52:07.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074052944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074081847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.607" endtime="20201030 15:52:07.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.616" endtime="20201030 15:52:07.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.304" endtime="20201030 15:52:07.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.303" endtime="20201030 15:52:07.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.623" level="INFO">${RESULT} = [{'diff': 2.890300000001067e-05}, {'diff': 2.6939999999975317e-06}, {'diff': 3.195000000011383e-06}, {'diff': 2.7220000000105493e-06}, {'diff': 2.7080000000040405e-06}, {'diff': 2.7219999999966715e-06...</msg>
<status status="PASS" starttime="20201030 15:52:07.619" endtime="20201030 15:52:07.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.627" level="INFO">${ACCURACY} = {'diff': [2.890300000001067e-05, 2.6939999999975317e-06, 3.195000000011383e-06, 2.7220000000105493e-06, 2.7080000000040405e-06, 2.7219999999966715e-06, 3.209000000004014e-06, 2.7359999999893025e-06, 2...</msg>
<status status="PASS" starttime="20201030 15:52:07.624" endtime="20201030 15:52:07.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.632" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.631" endtime="20201030 15:52:07.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.635" level="INFO">VALUE: [2.890300000001067e-05, 2.6939999999975317e-06, 3.195000000011383e-06, 2.7220000000105493e-06, 2.7080000000040405e-06, 2.7219999999966715e-06, 3.209000000004014e-06, 2.7359999999893025e-06, 2.7220000000105493e-06, 2.7080000000040405e-06, 3.2080000000045406e-06, 3.209000000004014e-06, 2.7080000000040405e-06, 3.2080000000045406e-06, 2.709000000003514e-06, 3.2229999999966452e-06, 3.209000000004014e-06, 2.7080000000040405e-06, 2.7080000000040405e-06, 2.6809999999904965e-06, 3.2080000000045406e-06, 3.2080000000045406e-06, 3.2079999999906628e-06, 3.2219999999971716e-06, 3.2219999999971716e-06, 3.2080000000045406e-06, 2.7079999999901627e-06, 2.7360000000031803e-06, 3.1949999999975054e-06, 3.707999999991163e-06, 2.7080000000040405e-06, 3.2080000000045406e-06, 3.209000000004014e-06, 3.2079999999906628e-06, 3.2219999999971716e-06, 2.7639999999884424e-06, 3.209000000004014e-06, 3.237000000003154e-06, 3.1810000000048744e-06, 3.1949999999975054e-06, 3.7080000000050406e-06, 2.723000000010023e-06, 2.6800000000049007e-06, 3.2080000000045406e-06, 2.6949999999970053e-06, 3.2219999999971716e-06, 3.2080000000045406e-06, 3.209000000004014e-06, 3.1809999999909966e-06, 2.7080000000040405e-06]</msg>
<status status="PASS" starttime="20201030 15:52:07.633" endtime="20201030 15:52:07.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.628" endtime="20201030 15:52:07.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.639" endtime="20201030 15:52:07.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.637" endtime="20201030 15:52:07.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.636" endtime="20201030 15:52:07.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.269" endtime="20201030 15:52:07.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.269" endtime="20201030 15:52:07.660"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.669" endtime="20201030 15:52:07.686"></status>
</kw>
<msg timestamp="20201030 15:52:07.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.667" endtime="20201030 15:52:07.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.687" endtime="20201030 15:52:07.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.690" endtime="20201030 15:52:07.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.664" endtime="20201030 15:52:07.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.662" endtime="20201030 15:52:07.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.705" endtime="20201030 15:52:07.993"></status>
</kw>
<msg timestamp="20201030 15:52:07.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019927111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019931806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.704" endtime="20201030 15:52:07.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019927111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019931806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.997" endtime="20201030 15:52:08.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.006" endtime="20201030 15:52:08.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.701" endtime="20201030 15:52:08.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.699" endtime="20201030 15:52:08.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.012" level="INFO">${RESULT} = [{'diff': 4.6949999999990055e-06}, {'diff': 3.708000000001571e-06}, {'diff': 4.208000000002071e-06}, {'diff': 4.207999999998602e-06}, {'diff': 3.722000000001141e-06}, {'diff': 3.709000000001045e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:08.009" endtime="20201030 15:52:08.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.018" level="INFO">${ACCURACY} = {'diff': [4.6949999999990055e-06, 3.708000000001571e-06, 4.208000000002071e-06, 4.207999999998602e-06, 3.722000000001141e-06, 3.709000000001045e-06, 3.6949999999980054e-06, 4.223000000001115e-06, 4.22...</msg>
<status status="PASS" starttime="20201030 15:52:08.013" endtime="20201030 15:52:08.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.022" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.021" endtime="20201030 15:52:08.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.025" level="INFO">VALUE: [4.6949999999990055e-06, 3.708000000001571e-06, 4.208000000002071e-06, 4.207999999998602e-06, 3.722000000001141e-06, 3.709000000001045e-06, 3.6949999999980054e-06, 4.223000000001115e-06, 4.222000000001641e-06, 4.152999999999796e-06, 3.7079999999981017e-06, 4.207999999998602e-06, 4.209000000001545e-06, 3.7079999999981017e-06, 4.194000000002501e-06, 3.667000000002335e-06, 3.709000000001045e-06, 3.708000000001571e-06, 4.722000000002141e-06, 3.693999999998532e-06, 4.207999999998602e-06, 3.7079999999981017e-06, 4.221999999998172e-06, 4.223000000001115e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.695000000001475e-06, 3.7779999999994207e-06, 4.250000000000781e-06, 3.693999999998532e-06, 4.222000000001641e-06, 3.722000000001141e-06, 4.222000000001641e-06, 3.693999999998532e-06, 4.722000000002141e-06, 4.207999999998602e-06, 4.194000000002501e-06, 4.2359999999977416e-06, 3.708000000001571e-06, 3.708000000001571e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.209000000001545e-06, 4.223000000001115e-06, 3.708000000001571e-06, 4.207999999998602e-06, 4.207999999998602e-06, 3.708000000001571e-06, 4.179999999999462e-06, 4.209000000001545e-06]</msg>
<status status="PASS" starttime="20201030 15:52:08.023" endtime="20201030 15:52:08.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.019" endtime="20201030 15:52:08.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.029" endtime="20201030 15:52:08.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.028" endtime="20201030 15:52:08.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.026" endtime="20201030 15:52:08.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.661" endtime="20201030 15:52:08.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.660" endtime="20201030 15:52:08.050"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.058" endtime="20201030 15:52:08.076"></status>
</kw>
<msg timestamp="20201030 15:52:08.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.057" endtime="20201030 15:52:08.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.078" endtime="20201030 15:52:08.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.081" endtime="20201030 15:52:08.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.054" endtime="20201030 15:52:08.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.052" endtime="20201030 15:52:08.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.090" endtime="20201030 15:52:08.379"></status>
</kw>
<msg timestamp="20201030 15:52:08.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019375458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019380167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.088" endtime="20201030 15:52:08.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019375458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019380167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.383" endtime="20201030 15:52:08.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.391" endtime="20201030 15:52:08.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.086" endtime="20201030 15:52:08.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.084" endtime="20201030 15:52:08.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.398" level="INFO">${RESULT} = [{'diff': 4.7089999999985754e-06}, {'diff': 5.236999999998215e-06}, {'diff': 4.721999999998672e-06}, {'diff': 4.708000000002571e-06}, {'diff': 5.180000000000462e-06}, {'diff': 4.736000000001711e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:08.394" endtime="20201030 15:52:08.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.402" level="INFO">${ACCURACY} = {'diff': [4.7089999999985754e-06, 5.236999999998215e-06, 4.721999999998672e-06, 4.708000000002571e-06, 5.180000000000462e-06, 4.736000000001711e-06, 4.709000000002045e-06, 5.223000000002115e-06, 4.736...</msg>
<status status="PASS" starttime="20201030 15:52:08.399" endtime="20201030 15:52:08.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.406" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.405" endtime="20201030 15:52:08.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.409" level="INFO">VALUE: [4.7089999999985754e-06, 5.236999999998215e-06, 4.721999999998672e-06, 4.708000000002571e-06, 5.180000000000462e-06, 4.736000000001711e-06, 4.709000000002045e-06, 5.223000000002115e-06, 4.736000000001711e-06, 4.721999999998672e-06, 5.221999999999172e-06, 4.709000000002045e-06, 5.2089999999990755e-06, 5.250000000001781e-06, 4.722000000002141e-06, 4.708000000002571e-06, 4.722999999998145e-06, 4.7089999999985754e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 4.721999999998672e-06, 5.194000000000032e-06, 4.695000000002475e-06, 4.721999999998672e-06, 5.194000000000032e-06, 5.152000000001322e-06, 5.235999999998742e-06, 5.209000000002545e-06, 5.222999999998645e-06, 5.1799999999969926e-06, 5.221999999999172e-06, 5.194000000000032e-06, 5.209000000002545e-06, 4.7089999999985754e-06, 4.722999999998145e-06, 5.278000000000921e-06, 4.764000000000851e-06, 4.750000000001281e-06, 4.7089999999985754e-06, 4.707999999999102e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 5.194000000000032e-06, 5.722000000003141e-06, 4.778000000000421e-06, 5.708000000000102e-06, 5.153000000000796e-06, 4.693999999999532e-06, 5.152999999997326e-06]</msg>
<status status="PASS" starttime="20201030 15:52:08.407" endtime="20201030 15:52:08.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.403" endtime="20201030 15:52:08.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.413" endtime="20201030 15:52:08.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.412" endtime="20201030 15:52:08.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.411" endtime="20201030 15:52:08.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.051" endtime="20201030 15:52:08.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.050" endtime="20201030 15:52:08.434"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.445" endtime="20201030 15:52:08.463"></status>
</kw>
<msg timestamp="20201030 15:52:08.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.442" endtime="20201030 15:52:08.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.465" endtime="20201030 15:52:08.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.467" endtime="20201030 15:52:08.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.438" endtime="20201030 15:52:08.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.436" endtime="20201030 15:52:08.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.476" endtime="20201030 15:52:08.761"></status>
</kw>
<msg timestamp="20201030 15:52:08.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022692097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.475" endtime="20201030 15:52:08.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022692097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.765" endtime="20201030 15:52:08.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.773" endtime="20201030 15:52:08.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.472" endtime="20201030 15:52:08.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.470" endtime="20201030 15:52:08.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.780" level="INFO">${RESULT} = [{'diff': 6.235999999999742e-06}, {'diff': 5.694000000000532e-06}, {'diff': 5.695000000000006e-06}, {'diff': 5.695000000000006e-06}, {'diff': 5.721999999999672e-06}, {'diff': 6.208000000000602e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:08.777" endtime="20201030 15:52:08.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.784" level="INFO">${ACCURACY} = {'diff': [6.235999999999742e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.721999999999672e-06, 6.208000000000602e-06, 6.235999999999742e-06, 5.721999999999672e-06, 5.7089...</msg>
<status status="PASS" starttime="20201030 15:52:08.781" endtime="20201030 15:52:08.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.789" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.788" endtime="20201030 15:52:08.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.791" level="INFO">VALUE: [6.235999999999742e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.721999999999672e-06, 6.208000000000602e-06, 6.235999999999742e-06, 5.721999999999672e-06, 5.7089999999995755e-06, 5.708000000000102e-06, 5.708000000000102e-06, 6.153000000001796e-06, 5.7229999999991454e-06, 6.2079999999971325e-06, 6.1389999999987566e-06, 6.291000000002017e-06, 5.721999999999672e-06, 5.7089999999995755e-06, 5.721999999999672e-06, 6.153000000001796e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 5.695000000000006e-06, 6.208000000000602e-06, 5.7089999999995755e-06, 5.7089999999995755e-06, 6.222000000000172e-06, 5.694000000000532e-06, 6.2090000000000756e-06, 6.194999999997036e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 5.708000000000102e-06, 6.665999999998923e-06, 5.708000000000102e-06, 5.709000000003045e-06, 6.1939999999975626e-06, 6.2090000000000756e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.222000000000172e-06, 5.694000000000532e-06, 5.7089999999995755e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 5.681000000000436e-06, 6.235999999999742e-06]</msg>
<status status="PASS" starttime="20201030 15:52:08.790" endtime="20201030 15:52:08.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.785" endtime="20201030 15:52:08.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.797" endtime="20201030 15:52:08.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.795" endtime="20201030 15:52:08.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.794" endtime="20201030 15:52:08.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.435" endtime="20201030 15:52:08.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.434" endtime="20201030 15:52:08.818"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.827" endtime="20201030 15:52:08.842"></status>
</kw>
<msg timestamp="20201030 15:52:08.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.825" endtime="20201030 15:52:08.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.843" endtime="20201030 15:52:08.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.846" endtime="20201030 15:52:08.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.823" endtime="20201030 15:52:08.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.820" endtime="20201030 15:52:08.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.855" endtime="20201030 15:52:09.138"></status>
</kw>
<msg timestamp="20201030 15:52:09.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:08.853" endtime="20201030 15:52:09.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:09.142" endtime="20201030 15:52:09.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.151" endtime="20201030 15:52:09.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.851" endtime="20201030 15:52:09.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.849" endtime="20201030 15:52:09.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.157" level="INFO">${RESULT} = [{'diff': 6.7219999999972024e-06}, {'diff': 6.695000000001006e-06}, {'diff': 6.708000000001102e-06}, {'diff': 7.236000000000742e-06}, {'diff': 7.194000000002032e-06}, {'diff': 6.709000000000576e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:09.154" endtime="20201030 15:52:09.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.162" level="INFO">${ACCURACY} = {'diff': [6.7219999999972024e-06, 6.695000000001006e-06, 6.708000000001102e-06, 7.236000000000742e-06, 7.194000000002032e-06, 6.709000000000576e-06, 7.193999999998563e-06, 7.222000000001172e-06, 7.195...</msg>
<status status="PASS" starttime="20201030 15:52:09.158" endtime="20201030 15:52:09.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.167" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.166" endtime="20201030 15:52:09.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.171" level="INFO">VALUE: [6.7219999999972024e-06, 6.695000000001006e-06, 6.708000000001102e-06, 7.236000000000742e-06, 7.194000000002032e-06, 6.709000000000576e-06, 7.193999999998563e-06, 7.222000000001172e-06, 7.195000000001506e-06, 6.679999999998493e-06, 7.138999999999757e-06, 6.708999999997106e-06, 6.681000000001436e-06, 6.722000000000672e-06, 7.236000000000742e-06, 7.693999999999063e-06, 7.263999999999882e-06, 7.2079999999981326e-06, 6.694000000001532e-06, 7.222000000001172e-06, 7.209000000001076e-06, 6.708000000001102e-06, 6.7219999999972024e-06, 7.208000000001602e-06, 6.709000000000576e-06, 7.263999999999882e-06, 6.708000000001102e-06, 6.693999999998063e-06, 6.736000000000242e-06, 6.6669999999983964e-06, 6.695000000001006e-06, 7.179999999998993e-06, 6.708000000001102e-06, 6.709000000000576e-06, 7.222000000001172e-06, 7.195000000001506e-06, 6.7079999999976325e-06, 6.7779999999989515e-06, 7.208000000001602e-06, 7.236000000000742e-06, 7.2219999999977025e-06, 6.651999999999353e-06, 7.263999999999882e-06, 7.2219999999977025e-06, 7.263999999999882e-06, 7.2079999999981326e-06, 7.250000000000312e-06, 7.195000000001506e-06, 6.7230000000001455e-06, 7.2370000000002155e-06]</msg>
<status status="PASS" starttime="20201030 15:52:09.168" endtime="20201030 15:52:09.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.163" endtime="20201030 15:52:09.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.180" endtime="20201030 15:52:09.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.177" endtime="20201030 15:52:09.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.175" endtime="20201030 15:52:09.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.818" endtime="20201030 15:52:09.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.818" endtime="20201030 15:52:09.206"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.226" endtime="20201030 15:52:09.251"></status>
</kw>
<msg timestamp="20201030 15:52:09.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.221" endtime="20201030 15:52:09.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.256" endtime="20201030 15:52:09.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.263" endtime="20201030 15:52:09.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.215" endtime="20201030 15:52:09.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.211" endtime="20201030 15:52:09.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.277" endtime="20201030 15:52:09.566"></status>
</kw>
<msg timestamp="20201030 15:52:09.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037487875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037495569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.276" endtime="20201030 15:52:09.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037487875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037495569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.570" endtime="20201030 15:52:09.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.579" endtime="20201030 15:52:09.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.273" endtime="20201030 15:52:09.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.271" endtime="20201030 15:52:09.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.585" level="INFO">${RESULT} = [{'diff': 7.694000000002532e-06}, {'diff': 8.222000000002172e-06}, {'diff': 8.250000000001312e-06}, {'diff': 8.722999999995207e-06}, {'diff': 8.222000000002172e-06}, {'diff': 8.222000000002172e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:09.582" endtime="20201030 15:52:09.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.590" level="INFO">${ACCURACY} = {'diff': [7.694000000002532e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.722999999995207e-06, 8.222000000002172e-06, 8.222000000002172e-06, 7.694000000002532e-06, 7.722999999994207e-06, 8.1799...</msg>
<status status="PASS" starttime="20201030 15:52:09.586" endtime="20201030 15:52:09.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.594" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.593" endtime="20201030 15:52:09.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.596" level="INFO">VALUE: [7.694000000002532e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.722999999995207e-06, 8.222000000002172e-06, 8.222000000002172e-06, 7.694000000002532e-06, 7.722999999994207e-06, 8.179999999996523e-06, 8.722999999995207e-06, 7.777000000000478e-06, 7.722000000001672e-06, 7.694999999995067e-06, 7.708000000002102e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.222000000002172e-06, 8.207999999995663e-06, 7.694999999995067e-06, 7.707999999995163e-06, 8.207999999995663e-06, 7.708000000002102e-06, 8.222000000002172e-06, 7.694999999995067e-06, 8.222999999994707e-06, 8.250000000001312e-06, 7.708000000002102e-06, 7.721999999994733e-06, 8.180000000003462e-06, 7.722000000001672e-06, 8.209000000002076e-06, 7.708000000002102e-06, 7.693999999995593e-06, 7.722000000001672e-06, 7.709000000001576e-06, 8.223000000001646e-06, 8.207999999995663e-06, 8.166000000003892e-06, 7.737000000000716e-06, 8.208000000002602e-06, 8.124999999997717e-06, 7.695000000002006e-06, 7.695000000002006e-06, 8.207999999995663e-06, 8.194000000003032e-06, 7.653000000003296e-06, 8.193999999996093e-06, 8.209000000002076e-06, 7.708000000002102e-06]</msg>
<status status="PASS" starttime="20201030 15:52:09.595" endtime="20201030 15:52:09.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.590" endtime="20201030 15:52:09.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.602" endtime="20201030 15:52:09.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.600" endtime="20201030 15:52:09.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.599" endtime="20201030 15:52:09.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.207" endtime="20201030 15:52:09.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.206" endtime="20201030 15:52:09.622"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.631" endtime="20201030 15:52:09.650"></status>
</kw>
<msg timestamp="20201030 15:52:09.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.629" endtime="20201030 15:52:09.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.651" endtime="20201030 15:52:09.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.654" endtime="20201030 15:52:09.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.627" endtime="20201030 15:52:09.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.625" endtime="20201030 15:52:09.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.663" endtime="20201030 15:52:09.957"></status>
</kw>
<msg timestamp="20201030 15:52:09.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020419014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.661" endtime="20201030 15:52:09.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020419014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.967" endtime="20201030 15:52:09.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.992" endtime="20201030 15:52:09.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.659" endtime="20201030 15:52:10.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.657" endtime="20201030 15:52:10.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.017" level="INFO">${RESULT} = [{'diff': 9.208000000000133e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:10.006" endtime="20201030 15:52:10.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.032" level="INFO">${ACCURACY} = {'diff': [9.208000000000133e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.721999999999203e-06, 9.195000000000036e-06, 9.2219...</msg>
<status status="PASS" starttime="20201030 15:52:10.020" endtime="20201030 15:52:10.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.048" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.044" endtime="20201030 15:52:10.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.058" level="INFO">VALUE: [9.208000000000133e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.721999999999203e-06, 9.195000000000036e-06, 9.221999999999703e-06, 9.195000000000036e-06, 8.707999999999633e-06, 9.194000000000563e-06, 9.138999999998287e-06, 9.250000000002312e-06, 8.709000000002576e-06, 9.235999999999273e-06, 9.235999999999273e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.707999999999633e-06, 9.208000000000133e-06, 9.208999999999606e-06, 9.693999999997593e-06, 9.139000000001757e-06, 9.153000000001327e-06, 8.749999999998342e-06, 9.195000000000036e-06, 9.208000000000133e-06, 9.221999999999703e-06, 8.708999999999106e-06, 8.723000000002146e-06, 8.680000000000493e-06, 9.208000000000133e-06, 8.721999999999203e-06, 8.694999999999536e-06, 9.180999999996997e-06, 9.208999999999606e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.708999999999106e-06, 9.221999999999703e-06, 8.721999999999203e-06, 8.723000000002146e-06, 9.208000000000133e-06, 8.707999999999633e-06, 8.723000000002146e-06, 8.653000000000827e-06, 8.723000000002146e-06, 9.735999999999773e-06]</msg>
<status status="PASS" starttime="20201030 15:52:10.053" endtime="20201030 15:52:10.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.036" endtime="20201030 15:52:10.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.075" endtime="20201030 15:52:10.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.070" endtime="20201030 15:52:10.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.067" endtime="20201030 15:52:10.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.623" endtime="20201030 15:52:10.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.623" endtime="20201030 15:52:10.097"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.106" endtime="20201030 15:52:10.124"></status>
</kw>
<msg timestamp="20201030 15:52:10.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.104" endtime="20201030 15:52:10.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.125" endtime="20201030 15:52:10.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.128" endtime="20201030 15:52:10.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.102" endtime="20201030 15:52:10.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.099" endtime="20201030 15:52:10.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.137" endtime="20201030 15:52:10.424"></status>
</kw>
<msg timestamp="20201030 15:52:10.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020063736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.136" endtime="20201030 15:52:10.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020063736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.428" endtime="20201030 15:52:10.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.436" endtime="20201030 15:52:10.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.133" endtime="20201030 15:52:10.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.131" endtime="20201030 15:52:10.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.443" level="INFO">${RESULT} = [{'diff': 1.0208000000001133e-05}, {'diff': 1.0207999999997663e-05}, {'diff': 9.695000000000537e-06}, {'diff': 9.708000000000633e-06}, {'diff': 1.0276999999999509e-05}, {'diff': 1.0194999999997567e-05...</msg>
<status status="PASS" starttime="20201030 15:52:10.440" endtime="20201030 15:52:10.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.448" level="INFO">${ACCURACY} = {'diff': [1.0208000000001133e-05, 1.0207999999997663e-05, 9.695000000000537e-06, 9.708000000000633e-06, 1.0276999999999509e-05, 1.0194999999997567e-05, 9.709000000000106e-06, 1.0236999999999746e-05, 9...</msg>
<status status="PASS" starttime="20201030 15:52:10.444" endtime="20201030 15:52:10.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.453" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.452" endtime="20201030 15:52:10.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.456" level="INFO">VALUE: [1.0208000000001133e-05, 1.0207999999997663e-05, 9.695000000000537e-06, 9.708000000000633e-06, 1.0276999999999509e-05, 1.0194999999997567e-05, 9.709000000000106e-06, 1.0236999999999746e-05, 9.722999999999676e-06, 1.0222000000000703e-05, 9.708000000000633e-06, 9.722000000000203e-06, 1.0236000000000273e-05, 9.709000000000106e-06, 1.0208000000001133e-05, 1.0249999999999843e-05, 1.0209000000000606e-05, 9.722999999999676e-06, 9.722999999999676e-06, 9.777999999998482e-06, 1.0222000000000703e-05, 9.707999999997163e-06, 9.709000000000106e-06, 9.722000000000203e-06, 1.0223000000000176e-05, 1.0208000000001133e-05, 1.0750000000000343e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0207999999997663e-05, 1.0152999999998857e-05, 1.0208000000001133e-05, 1.0722000000001203e-05, 9.735999999999773e-06, 1.0222999999996707e-05, 1.0223000000000176e-05, 1.0249999999999843e-05, 1.0194999999997567e-05, 9.694000000001063e-06, 9.637999999999314e-06, 9.722000000000203e-06, 1.0236000000000273e-05, 9.694000000001063e-06, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0193999999998093e-05, 9.694000000001063e-06, 9.708000000000633e-06, 9.680999999997497e-06]</msg>
<status status="PASS" starttime="20201030 15:52:10.454" endtime="20201030 15:52:10.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.449" endtime="20201030 15:52:10.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.461" endtime="20201030 15:52:10.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.460" endtime="20201030 15:52:10.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.458" endtime="20201030 15:52:10.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.098" endtime="20201030 15:52:10.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.097" endtime="20201030 15:52:10.482"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.491" endtime="20201030 15:52:10.507"></status>
</kw>
<msg timestamp="20201030 15:52:10.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.489" endtime="20201030 15:52:10.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.508" endtime="20201030 15:52:10.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.511" endtime="20201030 15:52:10.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.487" endtime="20201030 15:52:10.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.484" endtime="20201030 15:52:10.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.521" endtime="20201030 15:52:10.808"></status>
</kw>
<msg timestamp="20201030 15:52:10.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019958486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019969722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.519" endtime="20201030 15:52:10.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019958486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019969722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.812" endtime="20201030 15:52:10.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.821" endtime="20201030 15:52:10.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.516" endtime="20201030 15:52:10.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.514" endtime="20201030 15:52:10.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.828" level="INFO">${RESULT} = [{'diff': 1.1235999999997803e-05}, {'diff': 1.1722000000002203e-05}, {'diff': 1.1721999999998733e-05}, {'diff': 1.1722999999998207e-05}, {'diff': 1.0707999999998163e-05}, {'diff': 1.1207999999998663e-...</msg>
<status status="PASS" starttime="20201030 15:52:10.824" endtime="20201030 15:52:10.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.832" level="INFO">${ACCURACY} = {'diff': [1.1235999999997803e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.0707999999998163e-05, 1.1207999999998663e-05, 1.1236000000001273e-05, 1.1167000000002897e-05...</msg>
<status status="PASS" starttime="20201030 15:52:10.829" endtime="20201030 15:52:10.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.837" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.836" endtime="20201030 15:52:10.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.839" level="INFO">VALUE: [1.1235999999997803e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.0707999999998163e-05, 1.1207999999998663e-05, 1.1236000000001273e-05, 1.1167000000002897e-05, 1.0722000000001203e-05, 1.1708999999998637e-05, 1.0722000000001203e-05, 1.1277000000000509e-05, 1.0709000000001107e-05, 1.0707999999998163e-05, 1.0777999999999482e-05, 1.0707999999998163e-05, 1.0707999999998163e-05, 1.0708000000001633e-05, 1.1721999999998733e-05, 1.0708999999997637e-05, 1.1193999999999094e-05, 1.0722000000001203e-05, 1.1207999999998663e-05, 1.1193999999999094e-05, 1.1222000000001703e-05, 1.1250000000000843e-05, 1.0709000000001107e-05, 1.0693999999998594e-05, 1.1193999999999094e-05, 1.1208000000002133e-05, 1.1250000000000843e-05, 1.1208000000002133e-05, 1.0722000000001203e-05, 1.0707999999998163e-05, 1.0722000000001203e-05, 1.1221999999998233e-05, 1.1236000000001273e-05, 1.1208000000002133e-05, 1.0708999999997637e-05, 1.1194999999998567e-05, 1.0707999999998163e-05, 1.0694000000002063e-05, 1.1194000000002563e-05, 1.1209000000001607e-05, 1.1207999999998663e-05, 1.0721999999997733e-05, 1.0666999999998927e-05, 1.0693999999998594e-05, 1.0708000000001633e-05, 1.0777999999999482e-05]</msg>
<status status="PASS" starttime="20201030 15:52:10.838" endtime="20201030 15:52:10.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.833" endtime="20201030 15:52:10.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.845" endtime="20201030 15:52:10.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.843" endtime="20201030 15:52:10.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.842" endtime="20201030 15:52:10.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.483" endtime="20201030 15:52:10.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.482" endtime="20201030 15:52:10.866"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.875" endtime="20201030 15:52:10.893"></status>
</kw>
<msg timestamp="20201030 15:52:10.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.873" endtime="20201030 15:52:10.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.895" endtime="20201030 15:52:10.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.897" endtime="20201030 15:52:10.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.870" endtime="20201030 15:52:10.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.868" endtime="20201030 15:52:10.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.908" endtime="20201030 15:52:11.195"></status>
</kw>
<msg timestamp="20201030 15:52:11.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021165042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021176681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.906" endtime="20201030 15:52:11.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021165042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021176681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.200" endtime="20201030 15:52:11.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.208" endtime="20201030 15:52:11.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.903" endtime="20201030 15:52:11.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.901" endtime="20201030 15:52:11.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.215" level="INFO">${RESULT} = [{'diff': 1.1639000000000788e-05}, {'diff': 1.1708999999998637e-05}, {'diff': 1.2207999999999664e-05}, {'diff': 1.2223000000002177e-05}, {'diff': 1.2221999999999233e-05}, {'diff': 1.2207999999999664e-...</msg>
<status status="PASS" starttime="20201030 15:52:11.212" endtime="20201030 15:52:11.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.220" level="INFO">${ACCURACY} = {'diff': [1.1639000000000788e-05, 1.1708999999998637e-05, 1.2207999999999664e-05, 1.2223000000002177e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.1707999999999164e-05, 1.2708000000000164e-05...</msg>
<status status="PASS" starttime="20201030 15:52:11.216" endtime="20201030 15:52:11.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.224" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.223" endtime="20201030 15:52:11.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.227" level="INFO">VALUE: [1.1639000000000788e-05, 1.1708999999998637e-05, 1.2207999999999664e-05, 1.2223000000002177e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.1707999999999164e-05, 1.2708000000000164e-05, 1.2194000000000094e-05, 1.1693999999999594e-05, 1.1680000000000024e-05, 1.2153000000000858e-05, 1.2221999999999233e-05, 1.2208999999999137e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.2207999999999664e-05, 1.1735999999998303e-05, 1.1764000000000913e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2194999999999567e-05, 1.1723000000001677e-05, 1.2194999999999567e-05, 1.1694999999999067e-05, 1.1735999999998303e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.2207999999999664e-05, 1.1707999999999164e-05, 1.1736000000001773e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.2207999999999664e-05, 1.2165999999997484e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.1680000000000024e-05, 1.2722999999999207e-05, 1.1666999999999927e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2153000000000858e-05, 1.2208999999999137e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.225" endtime="20201030 15:52:11.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.220" endtime="20201030 15:52:11.229"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.233" endtime="20201030 15:52:11.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.232" endtime="20201030 15:52:11.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.230" endtime="20201030 15:52:11.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.867" endtime="20201030 15:52:11.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.866" endtime="20201030 15:52:11.254"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.263" endtime="20201030 15:52:11.281"></status>
</kw>
<msg timestamp="20201030 15:52:11.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.261" endtime="20201030 15:52:11.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.283" endtime="20201030 15:52:11.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.285" endtime="20201030 15:52:11.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.259" endtime="20201030 15:52:11.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.256" endtime="20201030 15:52:11.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.294" endtime="20201030 15:52:11.580"></status>
</kw>
<msg timestamp="20201030 15:52:11.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.293" endtime="20201030 15:52:11.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.585" endtime="20201030 15:52:11.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.593" endtime="20201030 15:52:11.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.290" endtime="20201030 15:52:11.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.288" endtime="20201030 15:52:11.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.600" level="INFO">${RESULT} = [{'diff': 1.3208000000000664e-05}, {'diff': 1.3722000000000734e-05}, {'diff': 1.3222000000000234e-05}, {'diff': 1.2681000000000497e-05}, {'diff': 1.3222000000000234e-05}, {'diff': 1.3208000000000664e-...</msg>
<status status="PASS" starttime="20201030 15:52:11.597" endtime="20201030 15:52:11.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.605" level="INFO">${ACCURACY} = {'diff': [1.3208000000000664e-05, 1.3722000000000734e-05, 1.3222000000000234e-05, 1.2681000000000497e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3222000000000234e-05...</msg>
<status status="PASS" starttime="20201030 15:52:11.601" endtime="20201030 15:52:11.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.610" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.609" endtime="20201030 15:52:11.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.613" level="INFO">VALUE: [1.3208000000000664e-05, 1.3722000000000734e-05, 1.3222000000000234e-05, 1.2681000000000497e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3209000000000137e-05, 1.3193999999997624e-05, 1.3708000000001164e-05, 1.2721999999999734e-05, 1.3222000000000234e-05, 1.2722999999999207e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.2750000000002343e-05, 1.2721999999999734e-05, 1.3209000000000137e-05, 1.3166999999997958e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3209000000000137e-05, 1.3194000000001094e-05, 1.3209000000000137e-05, 1.3195000000000567e-05, 1.3236999999999277e-05, 1.2695000000000067e-05, 1.3249999999999373e-05, 1.3194000000001094e-05, 1.3222000000000234e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.3222000000000234e-05, 1.3278000000001983e-05, 1.2721999999999734e-05, 1.3723000000000207e-05, 1.2722000000003203e-05, 1.3209000000000137e-05, 1.2707999999996694e-05, 1.3222000000000234e-05, 1.3209000000000137e-05, 1.3708000000001164e-05, 1.2694000000000594e-05, 1.3222999999999707e-05, 1.2721999999999734e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.2681000000000497e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.611" endtime="20201030 15:52:11.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.606" endtime="20201030 15:52:11.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.618" endtime="20201030 15:52:11.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.616" endtime="20201030 15:52:11.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.615" endtime="20201030 15:52:11.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.255" endtime="20201030 15:52:11.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.254" endtime="20201030 15:52:11.640"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.653" endtime="20201030 15:52:11.671"></status>
</kw>
<msg timestamp="20201030 15:52:11.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.650" endtime="20201030 15:52:11.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.673" endtime="20201030 15:52:11.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.676" endtime="20201030 15:52:11.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.647" endtime="20201030 15:52:11.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.644" endtime="20201030 15:52:11.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.685" endtime="20201030 15:52:11.977"></status>
</kw>
<msg timestamp="20201030 15:52:11.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025734778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025749, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:11.683" endtime="20201030 15:52:11.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025734778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025749, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:11.982" endtime="20201030 15:52:11.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.990" endtime="20201030 15:52:11.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.681" endtime="20201030 15:52:11.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.679" endtime="20201030 15:52:11.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.997" level="INFO">${RESULT} = [{'diff': 1.4222000000001234e-05}, {'diff': 1.4195000000001567e-05}, {'diff': 1.3736999999999777e-05}, {'diff': 1.3736000000000304e-05}, {'diff': 1.3708000000001164e-05}, {'diff': 1.3736000000000304e-...</msg>
<status status="PASS" starttime="20201030 15:52:11.994" endtime="20201030 15:52:11.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.001" level="INFO">${ACCURACY} = {'diff': [1.4222000000001234e-05, 1.4195000000001567e-05, 1.3736999999999777e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.3749999999999873e-05...</msg>
<status status="PASS" starttime="20201030 15:52:11.998" endtime="20201030 15:52:12.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.006" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.005" endtime="20201030 15:52:12.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.009" level="INFO">VALUE: [1.4222000000001234e-05, 1.4195000000001567e-05, 1.3736999999999777e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.3749999999999873e-05, 1.3722000000000734e-05, 1.3777999999999013e-05, 1.3707999999997694e-05, 1.4208000000001664e-05, 1.3722000000000734e-05, 1.3749999999999873e-05, 1.4221999999997764e-05, 1.4208000000001664e-05, 1.3722000000000734e-05, 1.3709000000000637e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.4207999999998194e-05, 1.4222000000001234e-05, 1.3694000000001594e-05, 1.4195000000001567e-05, 1.4749999999997404e-05, 1.4222000000001234e-05, 1.4707999999998694e-05, 1.3651999999999415e-05, 1.3749999999999873e-05, 1.4208000000001664e-05, 1.3723000000000207e-05, 1.4222000000001234e-05, 1.4693999999999124e-05, 1.3638999999999318e-05, 1.3749999999999873e-05, 1.4193999999998624e-05, 1.3722000000000734e-05, 1.3709000000000637e-05, 1.4236000000000804e-05, 1.4207999999998194e-05, 1.3707999999997694e-05, 1.4236000000000804e-05, 1.3708999999997168e-05, 1.4223000000000707e-05, 1.4222000000001234e-05, 1.3680000000002024e-05, 1.4209000000001137e-05, 1.4223000000000707e-05, 1.4208999999997668e-05, 1.4209000000001137e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.007" endtime="20201030 15:52:12.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.002" endtime="20201030 15:52:12.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.014" endtime="20201030 15:52:12.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.012" endtime="20201030 15:52:12.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.011" endtime="20201030 15:52:12.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.641" endtime="20201030 15:52:12.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.640" endtime="20201030 15:52:12.035"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.044" endtime="20201030 15:52:12.061"></status>
</kw>
<msg timestamp="20201030 15:52:12.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.042" endtime="20201030 15:52:12.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.062" endtime="20201030 15:52:12.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.065" endtime="20201030 15:52:12.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.040" endtime="20201030 15:52:12.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.037" endtime="20201030 15:52:12.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.074" endtime="20201030 15:52:12.360"></status>
</kw>
<msg timestamp="20201030 15:52:12.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021029375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021044569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.073" endtime="20201030 15:52:12.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021029375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021044569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.365" endtime="20201030 15:52:12.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.374" endtime="20201030 15:52:12.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.070" endtime="20201030 15:52:12.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.068" endtime="20201030 15:52:12.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.380" level="INFO">${RESULT} = [{'diff': 1.5193999999999624e-05}, {'diff': 1.5221999999998764e-05}, {'diff': 1.5208999999998668e-05}, {'diff': 1.5208999999998668e-05}, {'diff': 1.4721999999998264e-05}, {'diff': 1.4721999999998264e-...</msg>
<status status="PASS" starttime="20201030 15:52:12.377" endtime="20201030 15:52:12.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.385" level="INFO">${ACCURACY} = {'diff': [1.5193999999999624e-05, 1.5221999999998764e-05, 1.5208999999998668e-05, 1.5208999999998668e-05, 1.4721999999998264e-05, 1.4721999999998264e-05, 1.4694999999998598e-05, 1.5179999999996585e-05...</msg>
<status status="PASS" starttime="20201030 15:52:12.381" endtime="20201030 15:52:12.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.389" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.388" endtime="20201030 15:52:12.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.393" level="INFO">VALUE: [1.5193999999999624e-05, 1.5221999999998764e-05, 1.5208999999998668e-05, 1.5208999999998668e-05, 1.4721999999998264e-05, 1.4721999999998264e-05, 1.4694999999998598e-05, 1.5179999999996585e-05, 1.5221999999998764e-05, 1.4639000000000318e-05, 1.4722000000001734e-05, 1.4708999999998168e-05, 1.5707999999999694e-05, 1.5223000000001707e-05, 1.4708000000002164e-05, 1.4736000000001304e-05, 1.4707999999998694e-05, 1.5264000000000943e-05, 1.4735999999997834e-05, 1.5707999999999694e-05, 1.5194999999999098e-05, 1.4721999999998264e-05, 1.5708000000003164e-05, 1.5208999999998668e-05, 1.4681000000002498e-05, 1.4679999999999555e-05, 1.5221999999998764e-05, 1.5207999999999194e-05, 1.4722000000001734e-05, 1.5222000000002234e-05, 1.4708000000002164e-05, 1.5264000000000943e-05, 1.5207999999999194e-05, 1.563900000000132e-05, 1.4707999999998694e-05, 1.4722000000001734e-05, 1.4723000000001207e-05, 1.5194999999999098e-05, 1.5263999999997474e-05, 1.4708999999998168e-05, 1.5236000000001804e-05, 1.5222999999998238e-05, 1.5209000000002137e-05, 1.5208999999998668e-05, 1.4693999999999124e-05, 1.4707999999998694e-05, 1.5194000000003094e-05, 1.4694000000002594e-05, 1.5165999999997015e-05, 1.5208999999998668e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.391" endtime="20201030 15:52:12.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.386" endtime="20201030 15:52:12.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.398" endtime="20201030 15:52:12.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.397" endtime="20201030 15:52:12.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.395" endtime="20201030 15:52:12.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.036" endtime="20201030 15:52:12.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.035" endtime="20201030 15:52:12.419"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.428" endtime="20201030 15:52:12.446"></status>
</kw>
<msg timestamp="20201030 15:52:12.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.426" endtime="20201030 15:52:12.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.447" endtime="20201030 15:52:12.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.450" endtime="20201030 15:52:12.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.424" endtime="20201030 15:52:12.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.422" endtime="20201030 15:52:12.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.459" endtime="20201030 15:52:12.745"></status>
</kw>
<msg timestamp="20201030 15:52:12.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020123611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.458" endtime="20201030 15:52:12.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020123611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.751" endtime="20201030 15:52:12.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.762" endtime="20201030 15:52:12.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.455" endtime="20201030 15:52:12.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.453" endtime="20201030 15:52:12.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.772" level="INFO">${RESULT} = [{'diff': 1.6249999999998904e-05}, {'diff': 1.5708000000003164e-05}, {'diff': 1.6194000000000625e-05}, {'diff': 1.6208000000000194e-05}, {'diff': 1.5764000000001444e-05}, {'diff': 1.5681000000000028e-...</msg>
<status status="PASS" starttime="20201030 15:52:12.767" endtime="20201030 15:52:12.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.777" level="INFO">${ACCURACY} = {'diff': [1.6249999999998904e-05, 1.5708000000003164e-05, 1.6194000000000625e-05, 1.6208000000000194e-05, 1.5764000000001444e-05, 1.5681000000000028e-05, 1.6250000000002374e-05, 1.5707999999999694e-05...</msg>
<status status="PASS" starttime="20201030 15:52:12.773" endtime="20201030 15:52:12.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.782" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.781" endtime="20201030 15:52:12.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.785" level="INFO">VALUE: [1.6249999999998904e-05, 1.5708000000003164e-05, 1.6194000000000625e-05, 1.6208000000000194e-05, 1.5764000000001444e-05, 1.5681000000000028e-05, 1.6250000000002374e-05, 1.5707999999999694e-05, 1.6208999999999668e-05, 1.6222999999999238e-05, 1.5708999999999168e-05, 1.5707999999999694e-05, 1.6708000000000695e-05, 1.5709000000002638e-05, 1.5721999999999264e-05, 1.5694000000000125e-05, 1.5721999999999264e-05, 1.6249999999998904e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.6208000000000194e-05, 1.6180000000001055e-05, 1.6209000000003138e-05, 1.5694999999999598e-05, 1.5721999999999264e-05, 1.616700000000096e-05, 1.6208000000000194e-05, 1.6223000000002707e-05, 1.6735999999999834e-05, 1.5735999999998834e-05, 1.6235999999999334e-05, 1.5749999999998404e-05, 1.6208000000000194e-05, 1.666700000000146e-05, 1.5707999999999694e-05, 1.6722000000000264e-05, 1.5736000000002304e-05, 1.6208000000000194e-05, 1.665299999999842e-05, 1.5707999999999694e-05, 1.616699999999749e-05, 1.6194000000000625e-05, 1.6221999999999764e-05, 1.566699999999699e-05, 1.6208999999999668e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.5694999999999598e-05, 1.565300000000089e-05, 1.6194000000000625e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.783" endtime="20201030 15:52:12.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.778" endtime="20201030 15:52:12.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.794" endtime="20201030 15:52:12.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.793" endtime="20201030 15:52:12.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.791" endtime="20201030 15:52:12.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.420" endtime="20201030 15:52:12.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.419" endtime="20201030 15:52:12.815"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.824" endtime="20201030 15:52:12.842"></status>
</kw>
<msg timestamp="20201030 15:52:12.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.822" endtime="20201030 15:52:12.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.844" endtime="20201030 15:52:12.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.846" endtime="20201030 15:52:12.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.820" endtime="20201030 15:52:12.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.818" endtime="20201030 15:52:12.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.856" endtime="20201030 15:52:13.145"></status>
</kw>
<msg timestamp="20201030 15:52:13.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.854" endtime="20201030 15:52:13.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.149" endtime="20201030 15:52:13.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.158" endtime="20201030 15:52:13.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.851" endtime="20201030 15:52:13.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.850" endtime="20201030 15:52:13.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.165" level="INFO">${RESULT} = [{'diff': 1.7236000000000334e-05}, {'diff': 1.7223000000000238e-05}, {'diff': 1.7209000000000668e-05}, {'diff': 1.7209000000000668e-05}, {'diff': 1.7209000000000668e-05}, {'diff': 1.7208000000001195e-...</msg>
<status status="PASS" starttime="20201030 15:52:13.161" endtime="20201030 15:52:13.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.169" level="INFO">${ACCURACY} = {'diff': [1.7236000000000334e-05, 1.7223000000000238e-05, 1.7209000000000668e-05, 1.7209000000000668e-05, 1.7209000000000668e-05, 1.7208000000001195e-05, 1.7207999999997725e-05, 1.6708000000000695e-05...</msg>
<status status="PASS" starttime="20201030 15:52:13.166" endtime="20201030 15:52:13.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.174" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.172" endtime="20201030 15:52:13.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.176" level="INFO">VALUE: [1.7236000000000334e-05, 1.7223000000000238e-05, 1.7209000000000668e-05, 1.7209000000000668e-05, 1.7209000000000668e-05, 1.7208000000001195e-05, 1.7207999999997725e-05, 1.6708000000000695e-05, 1.6709000000000168e-05, 1.6722000000000264e-05, 1.7222000000000764e-05, 1.7236000000000334e-05, 1.7221999999997295e-05, 1.772299999999727e-05, 1.7221999999997295e-05, 1.6722000000000264e-05, 1.6708000000000695e-05, 1.7208000000001195e-05, 1.6695000000000598e-05, 1.7735999999997365e-05, 1.6722999999999738e-05, 1.7222000000000764e-05, 1.7222000000000764e-05, 1.668099999999756e-05, 1.7209000000000668e-05, 1.7223000000000238e-05, 1.6722000000000264e-05, 1.7236000000000334e-05, 1.7222000000000764e-05, 1.6722000000000264e-05, 1.7222000000000764e-05, 1.7207999999997725e-05, 1.6749999999999404e-05, 1.7236000000000334e-05, 1.7209000000000668e-05, 1.7694000000002125e-05, 1.7222000000000764e-05, 1.7207999999997725e-05, 1.7194000000001625e-05, 1.72089999999972e-05, 1.6709000000000168e-05, 1.7208000000001195e-05, 1.6709000000000168e-05, 1.6695000000000598e-05, 1.6722000000000264e-05, 1.7223000000000238e-05, 1.7222000000000764e-05, 1.6708000000000695e-05, 1.6695000000000598e-05, 1.6708000000000695e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.175" endtime="20201030 15:52:13.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.170" endtime="20201030 15:52:13.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.181" endtime="20201030 15:52:13.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.180" endtime="20201030 15:52:13.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.179" endtime="20201030 15:52:13.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.816" endtime="20201030 15:52:13.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.815" endtime="20201030 15:52:13.202"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.211" endtime="20201030 15:52:13.228"></status>
</kw>
<msg timestamp="20201030 15:52:13.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.210" endtime="20201030 15:52:13.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.229" endtime="20201030 15:52:13.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.232" endtime="20201030 15:52:13.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.207" endtime="20201030 15:52:13.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.205" endtime="20201030 15:52:13.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.241" endtime="20201030 15:52:13.527"></status>
</kw>
<msg timestamp="20201030 15:52:13.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020910083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020928306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.240" endtime="20201030 15:52:13.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020910083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020928306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.531" endtime="20201030 15:52:13.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.540" endtime="20201030 15:52:13.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.237" endtime="20201030 15:52:13.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.235" endtime="20201030 15:52:13.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.547" level="INFO">${RESULT} = [{'diff': 1.8223000000001238e-05}, {'diff': 1.8221999999998295e-05}, {'diff': 1.7722000000001265e-05}, {'diff': 1.8221999999998295e-05}, {'diff': 1.768100000000203e-05}, {'diff': 1.7707999999998225e-0...</msg>
<status status="PASS" starttime="20201030 15:52:13.543" endtime="20201030 15:52:13.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.551" level="INFO">${ACCURACY} = {'diff': [1.8223000000001238e-05, 1.8221999999998295e-05, 1.7722000000001265e-05, 1.8221999999998295e-05, 1.768100000000203e-05, 1.7707999999998225e-05, 1.818099999999906e-05, 1.77089999999977e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:52:13.548" endtime="20201030 15:52:13.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.556" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.555" endtime="20201030 15:52:13.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.558" level="INFO">VALUE: [1.8223000000001238e-05, 1.8221999999998295e-05, 1.7722000000001265e-05, 1.8221999999998295e-05, 1.768100000000203e-05, 1.7707999999998225e-05, 1.818099999999906e-05, 1.77089999999977e-05, 1.8264000000000474e-05, 1.777700000000007e-05, 1.7708000000001695e-05, 1.7735999999997365e-05, 1.8236000000001334e-05, 1.8236000000001334e-05, 1.8223000000001238e-05, 1.7750000000000404e-05, 1.7736000000000834e-05, 1.7722000000001265e-05, 1.8207999999998725e-05, 1.87089999999987e-05, 1.8207999999998725e-05, 1.769499999999813e-05, 1.769499999999813e-05, 1.7709000000001168e-05, 1.7693999999998655e-05, 1.8194000000002625e-05, 1.82089999999982e-05, 1.8208000000002195e-05, 1.8707999999999225e-05, 1.7736000000000834e-05, 1.7736000000000834e-05, 1.8208000000002195e-05, 1.772299999999727e-05, 1.7708000000001695e-05, 1.8236000000001334e-05, 1.8722000000002265e-05, 1.8707999999999225e-05, 1.7723000000000738e-05, 1.772299999999727e-05, 1.8222000000001765e-05, 1.8221999999998295e-05, 1.8166000000000015e-05, 1.8209000000001668e-05, 1.7707999999998225e-05, 1.8221999999998295e-05, 1.7722000000001265e-05, 1.8207999999998725e-05, 1.82089999999982e-05, 1.8223000000001238e-05, 1.8207999999998725e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.557" endtime="20201030 15:52:13.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.552" endtime="20201030 15:52:13.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.564" endtime="20201030 15:52:13.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.563" endtime="20201030 15:52:13.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.562" endtime="20201030 15:52:13.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.203" endtime="20201030 15:52:13.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.203" endtime="20201030 15:52:13.585"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.594" endtime="20201030 15:52:13.612"></status>
</kw>
<msg timestamp="20201030 15:52:13.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.593" endtime="20201030 15:52:13.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.613" endtime="20201030 15:52:13.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.616" endtime="20201030 15:52:13.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.590" endtime="20201030 15:52:13.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.588" endtime="20201030 15:52:13.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.625" endtime="20201030 15:52:13.910"></status>
</kw>
<msg timestamp="20201030 15:52:13.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020003417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020023097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.624" endtime="20201030 15:52:13.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020003417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020023097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.914" endtime="20201030 15:52:13.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.924" endtime="20201030 15:52:13.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.621" endtime="20201030 15:52:13.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.619" endtime="20201030 15:52:13.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.931" level="INFO">${RESULT} = [{'diff': 1.9680000000001086e-05}, {'diff': 1.8707999999999225e-05}, {'diff': 1.8750000000001404e-05}, {'diff': 1.8721999999998795e-05}, {'diff': 1.92089999999992e-05}, {'diff': 1.922299999999877e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:13.928" endtime="20201030 15:52:13.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.938" level="INFO">${ACCURACY} = {'diff': [1.9680000000001086e-05, 1.8707999999999225e-05, 1.8750000000001404e-05, 1.8721999999998795e-05, 1.92089999999992e-05, 1.922299999999877e-05, 1.919499999999963e-05, 1.866699999999999e-05, 1.8...</msg>
<status status="PASS" starttime="20201030 15:52:13.933" endtime="20201030 15:52:13.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.943" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.942" endtime="20201030 15:52:13.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.946" level="INFO">VALUE: [1.9680000000001086e-05, 1.8707999999999225e-05, 1.8750000000001404e-05, 1.8721999999998795e-05, 1.92089999999992e-05, 1.922299999999877e-05, 1.919499999999963e-05, 1.866699999999999e-05, 1.8735999999998365e-05, 1.9278000000001044e-05, 1.868099999999956e-05, 1.8723000000001738e-05, 1.9264000000001474e-05, 1.87089999999987e-05, 1.9207999999999725e-05, 1.9264000000001474e-05, 1.9194000000000155e-05, 1.868099999999956e-05, 1.8749999999997935e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.9250000000001904e-05, 1.9249999999998435e-05, 1.9778000000001544e-05, 1.872299999999827e-05, 1.869499999999913e-05, 1.8735999999998365e-05, 1.87089999999987e-05, 1.922299999999877e-05, 1.87089999999987e-05, 1.9221999999999295e-05, 1.8723000000001738e-05, 1.8721999999998795e-05, 1.9721999999999795e-05, 1.9235999999998865e-05, 1.9207999999999725e-05, 1.873699999999784e-05, 1.8722000000002265e-05, 1.8721999999998795e-05, 1.9221999999999295e-05, 1.8778000000000544e-05, 1.8707999999999225e-05, 1.9207999999999725e-05, 1.8721999999998795e-05, 1.8721999999998795e-05, 1.9221999999999295e-05, 1.91950000000031e-05, 1.8707999999999225e-05, 1.9236000000002335e-05, 1.8721999999998795e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.945" endtime="20201030 15:52:13.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.939" endtime="20201030 15:52:13.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.953" endtime="20201030 15:52:13.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.951" endtime="20201030 15:52:13.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.949" endtime="20201030 15:52:13.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.586" endtime="20201030 15:52:13.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.585" endtime="20201030 15:52:13.974"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.983" endtime="20201030 15:52:13.999"></status>
</kw>
<msg timestamp="20201030 15:52:13.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.981" endtime="20201030 15:52:13.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.000" endtime="20201030 15:52:14.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.003" endtime="20201030 15:52:14.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.979" endtime="20201030 15:52:14.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.976" endtime="20201030 15:52:14.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.012" endtime="20201030 15:52:14.300"></status>
</kw>
<msg timestamp="20201030 15:52:14.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.011" endtime="20201030 15:52:14.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.305" endtime="20201030 15:52:14.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.313" endtime="20201030 15:52:14.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.008" endtime="20201030 15:52:14.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.006" endtime="20201030 15:52:14.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.320" level="INFO">${RESULT} = [{'diff': 2.0708000000001225e-05}, {'diff': 2.019500000000063e-05}, {'diff': 2.0193999999997686e-05}, {'diff': 2.0708000000001225e-05}, {'diff': 1.9708000000000225e-05}, {'diff': 2.0222000000000295e-0...</msg>
<status status="PASS" starttime="20201030 15:52:14.317" endtime="20201030 15:52:14.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.324" level="INFO">${ACCURACY} = {'diff': [2.0708000000001225e-05, 2.019500000000063e-05, 2.0193999999997686e-05, 2.0708000000001225e-05, 1.9708000000000225e-05, 2.0222000000000295e-05, 2.0722000000000795e-05, 2.0208000000000725e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:14.321" endtime="20201030 15:52:14.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.329" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.328" endtime="20201030 15:52:14.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.332" level="INFO">VALUE: [2.0708000000001225e-05, 2.019500000000063e-05, 2.0193999999997686e-05, 2.0708000000001225e-05, 1.9708000000000225e-05, 2.0222000000000295e-05, 2.0722000000000795e-05, 2.0208000000000725e-05, 2.0222000000000295e-05, 1.969500000000013e-05, 2.0235999999999865e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 1.9694000000000655e-05, 2.02090000000002e-05, 1.9707999999996756e-05, 1.97089999999997e-05, 2.02090000000002e-05, 1.9735999999999365e-05, 2.0208000000000725e-05, 2.0694000000001656e-05, 2.019499999999716e-05, 1.9721999999999795e-05, 1.9694000000000655e-05, 2.0235999999999865e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 2.0222000000000295e-05, 2.0208000000000725e-05, 2.066700000000199e-05, 1.9721999999999795e-05, 2.0778000000002544e-05, 2.019499999999716e-05, 1.9693999999997186e-05, 1.9693999999997186e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.972299999999927e-05, 1.97089999999997e-05, 1.9708000000000225e-05, 1.9708000000000225e-05, 2.0263999999999005e-05, 2.0235999999999865e-05, 1.9708000000000225e-05, 2.0208000000000725e-05, 1.9721999999999795e-05, 2.015300000000192e-05, 2.0208000000000725e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.330" endtime="20201030 15:52:14.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.325" endtime="20201030 15:52:14.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.337" endtime="20201030 15:52:14.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.335" endtime="20201030 15:52:14.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.334" endtime="20201030 15:52:14.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.975" endtime="20201030 15:52:14.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.974" endtime="20201030 15:52:14.358"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.367" endtime="20201030 15:52:14.384"></status>
</kw>
<msg timestamp="20201030 15:52:14.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.365" endtime="20201030 15:52:14.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.386" endtime="20201030 15:52:14.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.388" endtime="20201030 15:52:14.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.363" endtime="20201030 15:52:14.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.360" endtime="20201030 15:52:14.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.398" endtime="20201030 15:52:14.684"></status>
</kw>
<msg timestamp="20201030 15:52:14.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021133819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021154542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.396" endtime="20201030 15:52:14.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021133819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021154542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.689" endtime="20201030 15:52:14.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.697" endtime="20201030 15:52:14.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.393" endtime="20201030 15:52:14.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.392" endtime="20201030 15:52:14.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.704" level="INFO">${RESULT} = [{'diff': 2.07229999999968e-05}, {'diff': 2.1207999999998256e-05}, {'diff': 2.0763999999999505e-05}, {'diff': 2.0763999999999505e-05}, {'diff': 2.07090000000007e-05}, {'diff': 2.0736000000000365e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:14.701" endtime="20201030 15:52:14.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.708" level="INFO">${ACCURACY} = {'diff': [2.07229999999968e-05, 2.1207999999998256e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.07090000000007e-05, 2.0736000000000365e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:14.705" endtime="20201030 15:52:14.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.713" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.712" endtime="20201030 15:52:14.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.716" level="INFO">VALUE: [2.07229999999968e-05, 2.1207999999998256e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.07090000000007e-05, 2.0736000000000365e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2.0707999999997756e-05, 2.1236000000000865e-05, 2.07090000000007e-05, 2.0707999999997756e-05, 2.1207999999998256e-05, 2.1236000000000865e-05, 2.1221999999997826e-05, 2.1208000000001725e-05, 2.1221999999997826e-05, 2.12090000000012e-05, 2.1222000000001295e-05, 2.0763999999999505e-05, 2.070899999999723e-05, 2.0708000000001225e-05, 2.1208000000001725e-05, 2.12090000000012e-05, 2.0722000000000795e-05, 2.12090000000012e-05, 2.07090000000007e-05, 2.1236000000000865e-05, 2.1208000000001725e-05, 2.1207999999998256e-05, 2.169499999999866e-05, 2.122300000000077e-05, 2.122300000000077e-05, 2.0708000000001225e-05, 2.1208000000001725e-05, 2.070899999999723e-05, 2.0679999999998616e-05, 2.122300000000077e-05, 2.122300000000077e-05, 2.1291999999999145e-05, 2.1221999999997826e-05, 2.129099999999967e-05, 2.07229999999968e-05, 2.1235999999997396e-05, 2.0736000000000365e-05, 2.0707999999997756e-05, 2.069500000000113e-05, 2.0722000000000795e-05, 2.0708000000001225e-05, 2.122300000000077e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.714" endtime="20201030 15:52:14.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.709" endtime="20201030 15:52:14.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.722" endtime="20201030 15:52:14.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.720" endtime="20201030 15:52:14.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.719" endtime="20201030 15:52:14.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.359" endtime="20201030 15:52:14.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.358" endtime="20201030 15:52:14.743"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.752" endtime="20201030 15:52:14.768"></status>
</kw>
<msg timestamp="20201030 15:52:14.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.750" endtime="20201030 15:52:14.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.770" endtime="20201030 15:52:14.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.772" endtime="20201030 15:52:14.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.747" endtime="20201030 15:52:14.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.745" endtime="20201030 15:52:14.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.782" endtime="20201030 15:52:15.068"></status>
</kw>
<msg timestamp="20201030 15:52:15.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020022042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02004425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:14.780" endtime="20201030 15:52:15.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020022042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02004425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:15.073" endtime="20201030 15:52:15.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.081" endtime="20201030 15:52:15.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.778" endtime="20201030 15:52:15.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.776" endtime="20201030 15:52:15.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.088" level="INFO">${RESULT} = [{'diff': 2.2207999999999256e-05}, {'diff': 2.219499999999916e-05}, {'diff': 2.2221999999998826e-05}, {'diff': 2.17090000000017e-05}, {'diff': 2.1707999999998756e-05}, {'diff': 2.1679999999999616e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:15.085" endtime="20201030 15:52:15.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.093" level="INFO">${ACCURACY} = {'diff': [2.2207999999999256e-05, 2.219499999999916e-05, 2.2221999999998826e-05, 2.17090000000017e-05, 2.1707999999998756e-05, 2.1679999999999616e-05, 2.2222000000002295e-05, 2.166700000000299e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:15.089" endtime="20201030 15:52:15.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.098" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.097" endtime="20201030 15:52:15.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.101" level="INFO">VALUE: [2.2207999999999256e-05, 2.219499999999916e-05, 2.2221999999998826e-05, 2.17090000000017e-05, 2.1707999999998756e-05, 2.1679999999999616e-05, 2.2222000000002295e-05, 2.166700000000299e-05, 2.226300000000153e-05, 2.222300000000177e-05, 2.2221999999998826e-05, 2.1707999999998756e-05, 2.1708000000002226e-05, 2.2707999999999756e-05, 2.1721999999998326e-05, 2.1694000000002656e-05, 2.2221999999998826e-05, 2.2152000000000976e-05, 2.2222000000002295e-05, 2.1708000000002226e-05, 2.17090000000017e-05, 2.1721999999998326e-05, 2.172300000000127e-05, 2.2235999999998396e-05, 2.2235999999998396e-05, 2.2221999999998826e-05, 2.1721999999998326e-05, 2.1778000000000075e-05, 2.1707999999998756e-05, 2.2193999999999686e-05, 2.2207999999999256e-05, 2.2249999999997966e-05, 2.2222000000002295e-05, 2.166699999999952e-05, 2.2764000000001505e-05, 2.2250000000001435e-05, 2.2208000000002726e-05, 2.1707999999998756e-05, 2.2236000000001865e-05, 2.219500000000263e-05, 2.22229999999983e-05, 2.1707999999998756e-05, 2.1707999999998756e-05, 2.2721999999999326e-05, 2.2236000000001865e-05, 2.1764000000000505e-05, 2.220899999999873e-05, 2.1721999999998326e-05, 2.2207999999999256e-05, 2.2236000000001865e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.099" endtime="20201030 15:52:15.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.094" endtime="20201030 15:52:15.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.106" endtime="20201030 15:52:15.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.104" endtime="20201030 15:52:15.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.103" endtime="20201030 15:52:15.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.743" endtime="20201030 15:52:15.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.743" endtime="20201030 15:52:15.127"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.136" endtime="20201030 15:52:15.153"></status>
</kw>
<msg timestamp="20201030 15:52:15.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.134" endtime="20201030 15:52:15.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.155" endtime="20201030 15:52:15.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.157" endtime="20201030 15:52:15.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.132" endtime="20201030 15:52:15.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.129" endtime="20201030 15:52:15.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.167" endtime="20201030 15:52:15.454"></status>
</kw>
<msg timestamp="20201030 15:52:15.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020249264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:15.165" endtime="20201030 15:52:15.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020249264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:15.459" endtime="20201030 15:52:15.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.467" endtime="20201030 15:52:15.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.163" endtime="20201030 15:52:15.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.161" endtime="20201030 15:52:15.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.474" level="INFO">${RESULT} = [{'diff': 2.2735999999998896e-05}, {'diff': 2.270899999999923e-05}, {'diff': 2.2721999999999326e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.266700000000052e-05...</msg>
<status status="PASS" starttime="20201030 15:52:15.471" endtime="20201030 15:52:15.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.479" level="INFO">${ACCURACY} = {'diff': [2.2735999999998896e-05, 2.270899999999923e-05, 2.2721999999999326e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.266700000000052e-05, 2.320899999999973e-05, 2.32229999999993e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 15:52:15.475" endtime="20201030 15:52:15.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.483" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.482" endtime="20201030 15:52:15.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.486" level="INFO">VALUE: [2.2735999999998896e-05, 2.270899999999923e-05, 2.2721999999999326e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.266700000000052e-05, 2.320899999999973e-05, 2.32229999999993e-05, 2.2707999999999756e-05, 2.3249999999998966e-05, 2.3194000000000686e-05, 2.3222000000003296e-05, 2.320899999999973e-05, 2.2722000000002796e-05, 2.370900000000023e-05, 2.3276999999998632e-05, 2.3722000000000326e-05, 2.3221999999999826e-05, 2.2721999999999326e-05, 2.3193999999997217e-05, 2.2721999999999326e-05, 2.319500000000016e-05, 2.266700000000052e-05, 2.2722000000002796e-05, 2.2707999999999756e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.3235999999999396e-05, 2.270899999999923e-05, 2.318100000000059e-05, 2.32229999999993e-05, 2.37229999999998e-05, 2.3221999999999826e-05, 2.2778000000001075e-05, 2.2735999999998896e-05, 2.316700000000102e-05, 2.32229999999993e-05, 2.3208000000000256e-05, 2.3235999999999396e-05, 2.3694000000001186e-05, 2.3236000000002865e-05, 2.2694000000000186e-05, 2.2707999999999756e-05, 2.3221999999999826e-05, 2.2707999999999756e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.320899999999973e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.485" endtime="20201030 15:52:15.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.480" endtime="20201030 15:52:15.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.491" endtime="20201030 15:52:15.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.490" endtime="20201030 15:52:15.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.489" endtime="20201030 15:52:15.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.128" endtime="20201030 15:52:15.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.127" endtime="20201030 15:52:15.512"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.521" endtime="20201030 15:52:15.538"></status>
</kw>
<msg timestamp="20201030 15:52:15.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.520" endtime="20201030 15:52:15.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.539" endtime="20201030 15:52:15.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.542" endtime="20201030 15:52:15.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.517" endtime="20201030 15:52:15.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.515" endtime="20201030 15:52:15.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.551" endtime="20201030 15:52:15.838"></status>
</kw>
<msg timestamp="20201030 15:52:15.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021071139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021095333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.550" endtime="20201030 15:52:15.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021071139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021095333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.842" endtime="20201030 15:52:15.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.851" endtime="20201030 15:52:15.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.547" endtime="20201030 15:52:15.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.545" endtime="20201030 15:52:15.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.858" level="INFO">${RESULT} = [{'diff': 2.4194000000001686e-05}, {'diff': 2.3708000000000756e-05}, {'diff': 2.4221999999997357e-05}, {'diff': 2.3735999999999896e-05}, {'diff': 2.370900000000023e-05}, {'diff': 2.419500000000116e-05...</msg>
<status status="PASS" starttime="20201030 15:52:15.854" endtime="20201030 15:52:15.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.862" level="INFO">${ACCURACY} = {'diff': [2.4194000000001686e-05, 2.3708000000000756e-05, 2.4221999999997357e-05, 2.3735999999999896e-05, 2.370900000000023e-05, 2.419500000000116e-05, 2.3722000000000326e-05, 2.3762999999999562e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:15.859" endtime="20201030 15:52:15.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.867" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.866" endtime="20201030 15:52:15.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.869" level="INFO">VALUE: [2.4194000000001686e-05, 2.3708000000000756e-05, 2.4221999999997357e-05, 2.3735999999999896e-05, 2.370900000000023e-05, 2.419500000000116e-05, 2.3722000000000326e-05, 2.3762999999999562e-05, 2.4222000000000826e-05, 2.370900000000023e-05, 2.3735999999999896e-05, 2.423699999999987e-05, 2.42230000000003e-05, 2.4236000000000396e-05, 2.4194000000001686e-05, 2.3722000000000326e-05, 2.4207999999997787e-05, 2.4736000000000896e-05, 2.4222000000000826e-05, 2.420900000000073e-05, 2.4221999999997357e-05, 2.4222000000000826e-05, 2.4222000000000826e-05, 2.4222000000000826e-05, 2.3708000000000756e-05, 2.3708000000000756e-05, 2.4222000000000826e-05, 2.3722000000000326e-05, 2.3722000000000326e-05, 2.4222000000000826e-05, 2.420900000000073e-05, 2.4208000000001256e-05, 2.4208000000001256e-05, 2.4236000000000396e-05, 2.3735999999999896e-05, 2.369500000000066e-05, 2.42230000000003e-05, 2.419499999999769e-05, 2.4208000000001256e-05, 2.366699999999805e-05, 2.3707999999997287e-05, 2.3708000000000756e-05, 2.416700000000202e-05, 2.420900000000073e-05, 2.4222000000000826e-05, 2.4207999999997787e-05, 2.3722000000000326e-05, 2.4194000000001686e-05, 2.42230000000003e-05, 2.3791999999998176e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.868" endtime="20201030 15:52:15.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.863" endtime="20201030 15:52:15.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.875" endtime="20201030 15:52:15.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.874" endtime="20201030 15:52:15.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.873" endtime="20201030 15:52:15.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.513" endtime="20201030 15:52:15.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.512" endtime="20201030 15:52:15.896"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.905" endtime="20201030 15:52:15.923"></status>
</kw>
<msg timestamp="20201030 15:52:15.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.904" endtime="20201030 15:52:15.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.924" endtime="20201030 15:52:15.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.927" endtime="20201030 15:52:15.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.901" endtime="20201030 15:52:15.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.899" endtime="20201030 15:52:15.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.937" endtime="20201030 15:52:16.224"></status>
</kw>
<msg timestamp="20201030 15:52:16.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020326889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.935" endtime="20201030 15:52:16.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020326889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.229" endtime="20201030 15:52:16.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.237" endtime="20201030 15:52:16.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.932" endtime="20201030 15:52:16.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.931" endtime="20201030 15:52:16.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.244" level="INFO">${RESULT} = [{'diff': 2.4721999999997857e-05}, {'diff': 2.5179999999999647e-05}, {'diff': 2.468100000000209e-05}, {'diff': 2.5193999999999217e-05}, {'diff': 2.5193999999999217e-05}, {'diff': 2.523700000000087e-05...</msg>
<status status="PASS" starttime="20201030 15:52:16.241" endtime="20201030 15:52:16.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.250" level="INFO">${ACCURACY} = {'diff': [2.4721999999997857e-05, 2.5179999999999647e-05, 2.468100000000209e-05, 2.5193999999999217e-05, 2.5193999999999217e-05, 2.523700000000087e-05, 2.4735999999997427e-05, 2.5207999999998787e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:16.245" endtime="20201030 15:52:16.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.254" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.253" endtime="20201030 15:52:16.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.257" level="INFO">VALUE: [2.4721999999997857e-05, 2.5179999999999647e-05, 2.468100000000209e-05, 2.5193999999999217e-05, 2.5193999999999217e-05, 2.523700000000087e-05, 2.4735999999997427e-05, 2.5207999999998787e-05, 2.4736000000000896e-05, 2.5208000000002256e-05, 2.4721999999997857e-05, 2.5207999999998787e-05, 2.520899999999826e-05, 2.5222000000001826e-05, 2.4693999999998717e-05, 2.5207999999998787e-05, 2.513900000000041e-05, 2.5222000000001826e-05, 2.52230000000013e-05, 2.4722000000001326e-05, 2.470899999999776e-05, 2.5208000000002256e-05, 2.4722000000001326e-05, 2.4708000000001756e-05, 2.4708000000001756e-05, 2.470899999999776e-05, 2.4707999999998287e-05, 2.5235999999997927e-05, 2.470900000000123e-05, 2.520900000000173e-05, 2.4722000000001326e-05, 2.520899999999826e-05, 2.518099999999912e-05, 2.5193999999999217e-05, 2.4736000000000896e-05, 2.519499999999869e-05, 2.5207999999998787e-05, 2.4707999999998287e-05, 2.5250000000000966e-05, 2.4708000000001756e-05, 2.4707999999998287e-05, 2.513900000000041e-05, 2.47230000000008e-05, 2.4750000000000466e-05, 2.4721999999997857e-05, 2.4708000000001756e-05, 2.570899999999876e-05, 2.5221999999998357e-05, 2.5207999999998787e-05, 2.4722000000001326e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.255" endtime="20201030 15:52:16.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.251" endtime="20201030 15:52:16.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.262" endtime="20201030 15:52:16.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.261" endtime="20201030 15:52:16.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.259" endtime="20201030 15:52:16.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.897" endtime="20201030 15:52:16.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.896" endtime="20201030 15:52:16.283"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.292" endtime="20201030 15:52:16.309"></status>
</kw>
<msg timestamp="20201030 15:52:16.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.291" endtime="20201030 15:52:16.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.311" endtime="20201030 15:52:16.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.314" endtime="20201030 15:52:16.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.288" endtime="20201030 15:52:16.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.286" endtime="20201030 15:52:16.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.323" endtime="20201030 15:52:16.613"></status>
</kw>
<msg timestamp="20201030 15:52:16.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020245167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020271389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.321" endtime="20201030 15:52:16.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020245167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020271389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.617" endtime="20201030 15:52:16.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.626" endtime="20201030 15:52:16.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.319" endtime="20201030 15:52:16.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.317" endtime="20201030 15:52:16.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.633" level="INFO">${RESULT} = [{'diff': 2.6221999999999357e-05}, {'diff': 2.6207999999999787e-05}, {'diff': 2.5693999999999717e-05}, {'diff': 2.6180000000000647e-05}, {'diff': 2.572299999999833e-05}, {'diff': 2.6221999999999357e-0...</msg>
<status status="PASS" starttime="20201030 15:52:16.629" endtime="20201030 15:52:16.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.637" level="INFO">${ACCURACY} = {'diff': [2.6221999999999357e-05, 2.6207999999999787e-05, 2.5693999999999717e-05, 2.6180000000000647e-05, 2.572299999999833e-05, 2.6221999999999357e-05, 2.6208000000003256e-05, 2.620899999999926e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:16.634" endtime="20201030 15:52:16.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.642" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.640" endtime="20201030 15:52:16.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.644" level="INFO">VALUE: [2.6221999999999357e-05, 2.6207999999999787e-05, 2.5693999999999717e-05, 2.6180000000000647e-05, 2.572299999999833e-05, 2.6221999999999357e-05, 2.6208000000003256e-05, 2.620899999999926e-05, 2.5721999999998857e-05, 2.5707999999999287e-05, 2.6749999999998997e-05, 2.6777999999998137e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.5707999999999287e-05, 2.570900000000223e-05, 2.6207999999999787e-05, 2.620899999999926e-05, 2.6708000000000287e-05, 2.6721999999999857e-05, 2.6235999999998927e-05, 2.619499999999969e-05, 2.5693999999999717e-05, 2.6207999999999787e-05, 2.5721999999998857e-05, 2.6207999999999787e-05, 2.5707999999999287e-05, 2.6194000000000217e-05, 2.6250000000001966e-05, 2.6235999999998927e-05, 2.57230000000018e-05, 2.5721999999998857e-05, 2.5735999999998427e-05, 2.5736000000001896e-05, 2.6236000000002396e-05, 2.57230000000018e-05, 2.6207999999999787e-05, 2.5721999999998857e-05, 2.5721999999998857e-05, 2.616700000000055e-05, 2.6221999999999357e-05, 2.6207999999999787e-05, 2.620899999999926e-05, 2.620899999999926e-05, 2.5735999999998427e-05, 2.569499999999919e-05, 2.6207999999999787e-05, 2.570899999999876e-05, 2.620900000000273e-05, 2.623700000000187e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.643" endtime="20201030 15:52:16.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.638" endtime="20201030 15:52:16.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.650" endtime="20201030 15:52:16.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.648" endtime="20201030 15:52:16.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.647" endtime="20201030 15:52:16.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.284" endtime="20201030 15:52:16.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.284" endtime="20201030 15:52:16.670"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.680" endtime="20201030 15:52:16.698"></status>
</kw>
<msg timestamp="20201030 15:52:16.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.678" endtime="20201030 15:52:16.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.700" endtime="20201030 15:52:16.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.703" endtime="20201030 15:52:16.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.675" endtime="20201030 15:52:16.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.673" endtime="20201030 15:52:16.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.712" endtime="20201030 15:52:16.999"></status>
</kw>
<msg timestamp="20201030 15:52:17.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021130125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021156847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.710" endtime="20201030 15:52:17.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021130125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021156847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.004" endtime="20201030 15:52:17.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.012" endtime="20201030 15:52:17.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.708" endtime="20201030 15:52:17.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.706" endtime="20201030 15:52:17.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.019" level="INFO">${RESULT} = [{'diff': 2.6721999999999857e-05}, {'diff': 2.7208000000000787e-05}, {'diff': 2.6694000000000717e-05}, {'diff': 2.6721999999999857e-05}, {'diff': 2.672299999999933e-05}, {'diff': 2.722299999999983e-05...</msg>
<status status="PASS" starttime="20201030 15:52:17.016" endtime="20201030 15:52:17.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.024" level="INFO">${ACCURACY} = {'diff': [2.6721999999999857e-05, 2.7208000000000787e-05, 2.6694000000000717e-05, 2.6721999999999857e-05, 2.672299999999933e-05, 2.722299999999983e-05, 2.716699999999808e-05, 2.6776999999998663e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:17.020" endtime="20201030 15:52:17.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.028" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.027" endtime="20201030 15:52:17.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.031" level="INFO">VALUE: [2.6721999999999857e-05, 2.7208000000000787e-05, 2.6694000000000717e-05, 2.6721999999999857e-05, 2.672299999999933e-05, 2.722299999999983e-05, 2.716699999999808e-05, 2.6776999999998663e-05, 2.7235999999999927e-05, 2.766699999999858e-05, 2.666700000000105e-05, 2.670899999999976e-05, 2.7208000000000787e-05, 2.6708000000000287e-05, 2.6694000000000717e-05, 2.6721999999999857e-05, 2.7736000000000427e-05, 2.67230000000028e-05, 2.6708000000000287e-05, 2.669500000000019e-05, 2.6708000000000287e-05, 2.7179999999998178e-05, 2.6721999999999857e-05, 2.7235999999999927e-05, 2.6708000000000287e-05, 2.7208000000000787e-05, 2.6708000000000287e-05, 2.6708000000000287e-05, 2.7222000000000357e-05, 2.7222000000000357e-05, 2.6721999999999857e-05, 2.766700000000205e-05, 2.718100000000112e-05, 2.6721999999999857e-05, 2.7207999999997318e-05, 2.6694000000000717e-05, 2.6707999999996818e-05, 2.6721999999999857e-05, 2.720900000000026e-05, 2.7179999999998178e-05, 2.7235999999999927e-05, 2.6721999999999857e-05, 2.6721999999999857e-05, 2.722299999999983e-05, 2.720900000000026e-05, 2.672299999999933e-05, 2.7222000000000357e-05, 2.7194000000001217e-05, 2.7222000000000357e-05, 2.719500000000069e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.030" endtime="20201030 15:52:17.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.025" endtime="20201030 15:52:17.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.037" endtime="20201030 15:52:17.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.036" endtime="20201030 15:52:17.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.034" endtime="20201030 15:52:17.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.671" endtime="20201030 15:52:17.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.671" endtime="20201030 15:52:17.058"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.067" endtime="20201030 15:52:17.085"></status>
</kw>
<msg timestamp="20201030 15:52:17.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.065" endtime="20201030 15:52:17.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.086" endtime="20201030 15:52:17.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.089" endtime="20201030 15:52:17.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.063" endtime="20201030 15:52:17.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.061" endtime="20201030 15:52:17.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.099" endtime="20201030 15:52:17.384"></status>
</kw>
<msg timestamp="20201030 15:52:17.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020217806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020246028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.097" endtime="20201030 15:52:17.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020217806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020246028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.389" endtime="20201030 15:52:17.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.397" endtime="20201030 15:52:17.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.094" endtime="20201030 15:52:17.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.092" endtime="20201030 15:52:17.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.404" level="INFO">${RESULT} = [{'diff': 2.8221999999997888e-05}, {'diff': 2.8221999999997888e-05}, {'diff': 2.8207999999998318e-05}, {'diff': 2.7722000000000857e-05}, {'diff': 2.769500000000119e-05}, {'diff': 2.772300000000033e-05...</msg>
<status status="PASS" starttime="20201030 15:52:17.401" endtime="20201030 15:52:17.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.410" level="INFO">${ACCURACY} = {'diff': [2.8221999999997888e-05, 2.8221999999997888e-05, 2.8207999999998318e-05, 2.7722000000000857e-05, 2.769500000000119e-05, 2.772300000000033e-05, 2.820900000000126e-05, 2.768100000000162e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:17.405" endtime="20201030 15:52:17.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.414" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.413" endtime="20201030 15:52:17.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.417" level="INFO">VALUE: [2.8221999999997888e-05, 2.8221999999997888e-05, 2.8207999999998318e-05, 2.7722000000000857e-05, 2.769500000000119e-05, 2.772300000000033e-05, 2.820900000000126e-05, 2.768100000000162e-05, 2.8708000000002287e-05, 2.8222000000001357e-05, 2.7707999999997818e-05, 2.772300000000033e-05, 2.820899999999779e-05, 2.82370000000004e-05, 2.818099999999865e-05, 2.8207999999998318e-05, 2.820900000000126e-05, 2.8208000000001787e-05, 2.822300000000083e-05, 2.770900000000076e-05, 2.7722000000000857e-05, 2.8222000000001357e-05, 2.7708000000001287e-05, 2.8208000000001787e-05, 2.8236000000000927e-05, 2.8208000000001787e-05, 2.770900000000076e-05, 2.7722000000000857e-05, 2.8736000000001427e-05, 2.7749999999999997e-05, 2.8207999999998318e-05, 2.8208000000001787e-05, 2.8249999999997027e-05, 2.7721999999997388e-05, 2.8194000000002217e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7708000000001287e-05, 2.8222000000001357e-05, 2.769500000000119e-05, 2.7721999999997388e-05, 2.7707999999997818e-05, 2.8138999999999942e-05, 2.819499999999822e-05, 2.870899999999829e-05, 2.8222000000001357e-05, 2.8264000000000067e-05, 2.7707999999997818e-05, 2.820899999999779e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.415" endtime="20201030 15:52:17.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.411" endtime="20201030 15:52:17.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.422" endtime="20201030 15:52:17.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.421" endtime="20201030 15:52:17.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.419" endtime="20201030 15:52:17.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.059" endtime="20201030 15:52:17.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.058" endtime="20201030 15:52:17.443"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.452" endtime="20201030 15:52:17.468"></status>
</kw>
<msg timestamp="20201030 15:52:17.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.450" endtime="20201030 15:52:17.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.470" endtime="20201030 15:52:17.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.473" endtime="20201030 15:52:17.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.448" endtime="20201030 15:52:17.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.445" endtime="20201030 15:52:17.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.482" endtime="20201030 15:52:17.770"></status>
</kw>
<msg timestamp="20201030 15:52:17.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020123556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020152236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.480" endtime="20201030 15:52:17.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020123556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020152236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.775" endtime="20201030 15:52:17.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.783" endtime="20201030 15:52:17.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.478" endtime="20201030 15:52:17.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.476" endtime="20201030 15:52:17.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.790" level="INFO">${RESULT} = [{'diff': 2.8679999999999678e-05}, {'diff': 2.870899999999829e-05}, {'diff': 2.8722000000001857e-05}, {'diff': 2.9249999999998028e-05}, {'diff': 2.9235999999998458e-05}, {'diff': 2.8708000000002287e-0...</msg>
<status status="PASS" starttime="20201030 15:52:17.787" endtime="20201030 15:52:17.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.795" level="INFO">${ACCURACY} = {'diff': [2.8679999999999678e-05, 2.870899999999829e-05, 2.8722000000001857e-05, 2.9249999999998028e-05, 2.9235999999998458e-05, 2.8708000000002287e-05, 2.919499999999922e-05, 2.868100000000262e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:17.791" endtime="20201030 15:52:17.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.799" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.798" endtime="20201030 15:52:17.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.802" level="INFO">VALUE: [2.8679999999999678e-05, 2.870899999999829e-05, 2.8722000000001857e-05, 2.9249999999998028e-05, 2.9235999999998458e-05, 2.8708000000002287e-05, 2.919499999999922e-05, 2.868100000000262e-05, 2.92370000000014e-05, 2.9250000000001497e-05, 2.8708000000002287e-05, 2.9721999999999388e-05, 2.9207999999999318e-05, 2.9193999999999748e-05, 2.8721999999998388e-05, 2.8707999999998818e-05, 2.870899999999829e-05, 2.8707999999998818e-05, 2.9207999999999318e-05, 2.9207999999999318e-05, 2.9707999999999818e-05, 2.8750000000000997e-05, 2.92370000000014e-05, 2.870900000000176e-05, 2.9207999999999318e-05, 2.8721999999998388e-05, 2.919499999999922e-05, 2.972299999999886e-05, 2.9208000000002787e-05, 2.870900000000176e-05, 2.8707999999998818e-05, 2.8736000000001427e-05, 2.8693999999999248e-05, 2.872300000000133e-05, 2.9624999999998403e-05, 2.9207999999999318e-05, 2.9167000000000082e-05, 2.9208000000002787e-05, 2.9208000000002787e-05, 2.920899999999879e-05, 2.9235999999998458e-05, 2.87370000000009e-05, 2.9707999999999818e-05, 2.9236000000001927e-05, 2.9221999999998888e-05, 2.9221999999998888e-05, 2.919499999999922e-05, 2.870899999999829e-05, 2.920899999999879e-05, 2.8721999999998388e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.800" endtime="20201030 15:52:17.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.795" endtime="20201030 15:52:17.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.811" endtime="20201030 15:52:17.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.810" endtime="20201030 15:52:17.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.809" endtime="20201030 15:52:17.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.444" endtime="20201030 15:52:17.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.443" endtime="20201030 15:52:17.832"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.841" endtime="20201030 15:52:17.859"></status>
</kw>
<msg timestamp="20201030 15:52:17.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.840" endtime="20201030 15:52:17.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.860" endtime="20201030 15:52:17.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.863" endtime="20201030 15:52:17.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.837" endtime="20201030 15:52:17.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.835" endtime="20201030 15:52:17.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.872" endtime="20201030 15:52:18.158"></status>
</kw>
<msg timestamp="20201030 15:52:18.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021177472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021207167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.871" endtime="20201030 15:52:18.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021177472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021207167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.163" endtime="20201030 15:52:18.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.171" endtime="20201030 15:52:18.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.868" endtime="20201030 15:52:18.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.866" endtime="20201030 15:52:18.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.178" level="INFO">${RESULT} = [{'diff': 2.969499999999972e-05}, {'diff': 3.022299999999936e-05}, {'diff': 2.972299999999886e-05}, {'diff': 2.9792000000000707e-05}, {'diff': 3.0181000000000652e-05}, {'diff': 3.019500000000022e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:18.175" endtime="20201030 15:52:18.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.183" level="INFO">${ACCURACY} = {'diff': [2.969499999999972e-05, 3.022299999999936e-05, 2.972299999999886e-05, 2.9792000000000707e-05, 3.0181000000000652e-05, 3.019500000000022e-05, 3.022299999999936e-05, 3.020899999999979e-05, 2.97...</msg>
<status status="PASS" starttime="20201030 15:52:18.179" endtime="20201030 15:52:18.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.187" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.186" endtime="20201030 15:52:18.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.190" level="INFO">VALUE: [2.969499999999972e-05, 3.022299999999936e-05, 2.972299999999886e-05, 2.9792000000000707e-05, 3.0181000000000652e-05, 3.019500000000022e-05, 3.022299999999936e-05, 3.020899999999979e-05, 2.9721999999999388e-05, 2.9721999999999388e-05, 2.9707999999999818e-05, 2.9722000000002857e-05, 3.019399999999728e-05, 3.022299999999936e-05, 2.970899999999929e-05, 2.9721999999999388e-05, 3.0221999999999888e-05, 3.072200000000039e-05, 3.0221999999999888e-05, 3.0221999999999888e-05, 3.0221999999999888e-05, 3.023699999999893e-05, 2.9735999999998958e-05, 2.9721999999999388e-05, 2.9777999999997667e-05, 3.020899999999979e-05, 3.022300000000283e-05, 3.0235999999999458e-05, 3.022299999999936e-05, 3.0221999999999888e-05, 3.0221999999999888e-05, 3.0208000000000318e-05, 3.0221999999999888e-05, 2.9707999999999818e-05, 3.0236000000002927e-05, 3.0152999999998042e-05, 3.0221999999999888e-05, 3.0208000000000318e-05, 2.9707999999999818e-05, 2.9778000000001137e-05, 3.0221999999999888e-05, 2.97370000000019e-05, 2.9694000000000248e-05, 3.020799999999685e-05, 2.9736000000002427e-05, 3.0208000000000318e-05, 3.0208000000000318e-05, 3.020899999999979e-05, 2.973699999999843e-05, 3.0235999999999458e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.189" endtime="20201030 15:52:18.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.183" endtime="20201030 15:52:18.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.196" endtime="20201030 15:52:18.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.194" endtime="20201030 15:52:18.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.193" endtime="20201030 15:52:18.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.833" endtime="20201030 15:52:18.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.833" endtime="20201030 15:52:18.217"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.226" endtime="20201030 15:52:18.242"></status>
</kw>
<msg timestamp="20201030 15:52:18.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.224" endtime="20201030 15:52:18.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.243" endtime="20201030 15:52:18.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.246" endtime="20201030 15:52:18.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.222" endtime="20201030 15:52:18.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.219" endtime="20201030 15:52:18.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.255" endtime="20201030 15:52:18.541"></status>
</kw>
<msg timestamp="20201030 15:52:18.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020088153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020119347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.254" endtime="20201030 15:52:18.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020088153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020119347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.545" endtime="20201030 15:52:18.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.554" endtime="20201030 15:52:18.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.251" endtime="20201030 15:52:18.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.249" endtime="20201030 15:52:18.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.561" level="INFO">${RESULT} = [{'diff': 3.119399999999828e-05}, {'diff': 3.070900000000029e-05}, {'diff': 3.120799999999785e-05}, {'diff': 3.122200000000089e-05}, {'diff': 3.122200000000089e-05}, {'diff': 3.070900000000029e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:18.557" endtime="20201030 15:52:18.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.566" level="INFO">${ACCURACY} = {'diff': [3.119399999999828e-05, 3.070900000000029e-05, 3.120799999999785e-05, 3.122200000000089e-05, 3.122200000000089e-05, 3.070900000000029e-05, 3.070900000000029e-05, 3.070800000000082e-05, 3.0695...</msg>
<status status="PASS" starttime="20201030 15:52:18.562" endtime="20201030 15:52:18.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.571" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.570" endtime="20201030 15:52:18.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.573" level="INFO">VALUE: [3.119399999999828e-05, 3.070900000000029e-05, 3.120799999999785e-05, 3.122200000000089e-05, 3.122200000000089e-05, 3.070900000000029e-05, 3.070900000000029e-05, 3.070800000000082e-05, 3.069500000000072e-05, 3.072200000000039e-05, 3.120799999999785e-05, 3.116699999999861e-05, 3.066599999999864e-05, 3.073599999999996e-05, 3.066600000000211e-05, 3.072200000000039e-05, 3.070800000000082e-05, 3.1138e-05, 3.122200000000089e-05, 3.120799999999785e-05, 3.069400000000125e-05, 3.120900000000079e-05, 3.068099999999768e-05, 3.074999999999953e-05, 3.073599999999996e-05, 3.122200000000089e-05, 3.066700000000158e-05, 3.070800000000082e-05, 3.122200000000089e-05, 3.120800000000132e-05, 3.070800000000082e-05, 3.123600000000046e-05, 3.073599999999996e-05, 3.116699999999861e-05, 3.119500000000122e-05, 3.122200000000089e-05, 3.120900000000079e-05, 3.069399999999778e-05, 3.119500000000122e-05, 3.117999999999871e-05, 3.119500000000122e-05, 3.072200000000039e-05, 3.113899999999947e-05, 3.072200000000039e-05, 3.120800000000132e-05, 3.070900000000029e-05, 3.066699999999811e-05, 3.120799999999785e-05, 3.072200000000039e-05, 3.072299999999986e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.572" endtime="20201030 15:52:18.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.567" endtime="20201030 15:52:18.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.579" endtime="20201030 15:52:18.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.577" endtime="20201030 15:52:18.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.576" endtime="20201030 15:52:18.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.218" endtime="20201030 15:52:18.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.217" endtime="20201030 15:52:18.599"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.609" endtime="20201030 15:52:18.628"></status>
</kw>
<msg timestamp="20201030 15:52:18.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.607" endtime="20201030 15:52:18.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.630" endtime="20201030 15:52:18.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.632" endtime="20201030 15:52:18.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.604" endtime="20201030 15:52:18.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.602" endtime="20201030 15:52:18.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.642" endtime="20201030 15:52:18.929"></status>
</kw>
<msg timestamp="20201030 15:52:18.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.640" endtime="20201030 15:52:18.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.934" endtime="20201030 15:52:18.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.942" endtime="20201030 15:52:18.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.637" endtime="20201030 15:52:18.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.636" endtime="20201030 15:52:18.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.949" level="INFO">${RESULT} = [{'diff': 5.713899999999772e-05}, {'diff': 3.4902999999999323e-05}, {'diff': 3.4832999999998004e-05}, {'diff': 3.545799999999863e-05}, {'diff': 3.473600000000049e-05}, {'diff': 3.4888999999999754e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:18.946" endtime="20201030 15:52:18.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.954" level="INFO">${ACCURACY} = {'diff': [5.713899999999772e-05, 3.4902999999999323e-05, 3.4832999999998004e-05, 3.545799999999863e-05, 3.473600000000049e-05, 3.4888999999999754e-05, 3.522200000000142e-05, 3.554199999999952e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 15:52:18.950" endtime="20201030 15:52:18.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.958" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.957" endtime="20201030 15:52:18.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.961" level="INFO">VALUE: [5.713899999999772e-05, 3.4902999999999323e-05, 3.4832999999998004e-05, 3.545799999999863e-05, 3.473600000000049e-05, 3.4888999999999754e-05, 3.522200000000142e-05, 3.554199999999952e-05, 3.494499999999803e-05, 3.502799999999945e-05, 3.492999999999899e-05, 3.475000000000006e-05, 3.530599999999884e-05, 3.5389000000000254e-05, 3.498600000000074e-05, 3.504199999999902e-05, 3.473599999999702e-05, 3.5333000000001974e-05, 3.469399999999831e-05, 3.54719999999982e-05, 3.54719999999982e-05, 3.568000000000321e-05, 3.4888999999999754e-05, 3.523600000000099e-05, 3.543000000000296e-05, 3.49580000000016e-05, 3.5582999999998755e-05, 3.516599999999967e-05, 3.477800000000267e-05, 3.448600000000024e-05, 3.545799999999863e-05, 3.469399999999831e-05, 3.5166999999999143e-05, 3.515300000000304e-05, 3.477800000000267e-05, 3.472300000000039e-05, 3.523600000000099e-05, 3.529199999999927e-05, 3.5139000000000004e-05, 3.523700000000046e-05, 3.5416999999999393e-05, 3.483399999999748e-05, 3.545900000000157e-05, 3.5402999999999823e-05, 3.4833000000001474e-05, 3.545900000000157e-05, 3.541599999999992e-05, 3.5013000000000405e-05, 3.522200000000142e-05, 3.469400000000178e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.959" endtime="20201030 15:52:18.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.954" endtime="20201030 15:52:18.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.966" endtime="20201030 15:52:18.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.965" endtime="20201030 15:52:18.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.963" endtime="20201030 15:52:18.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.600" endtime="20201030 15:52:18.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.600" endtime="20201030 15:52:18.987"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.996" endtime="20201030 15:52:19.015"></status>
</kw>
<msg timestamp="20201030 15:52:19.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.995" endtime="20201030 15:52:19.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.016" endtime="20201030 15:52:19.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.019" endtime="20201030 15:52:19.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.992" endtime="20201030 15:52:19.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.990" endtime="20201030 15:52:19.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.030" endtime="20201030 15:52:19.317"></status>
</kw>
<msg timestamp="20201030 15:52:19.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021178792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021215014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.028" endtime="20201030 15:52:19.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021178792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021215014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.321" endtime="20201030 15:52:19.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.330" endtime="20201030 15:52:19.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.025" endtime="20201030 15:52:19.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.023" endtime="20201030 15:52:19.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.337" level="INFO">${RESULT} = [{'diff': 3.622200000000242e-05}, {'diff': 3.5889000000000754e-05}, {'diff': 3.569499999999878e-05}, {'diff': 3.5889000000000754e-05}, {'diff': 3.623699999999799e-05}, {'diff': 3.622299999999842e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:19.333" endtime="20201030 15:52:19.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.341" level="INFO">${ACCURACY} = {'diff': [3.622200000000242e-05, 3.5889000000000754e-05, 3.569499999999878e-05, 3.5889000000000754e-05, 3.623699999999799e-05, 3.622299999999842e-05, 3.654200000000052e-05, 3.569499999999878e-05, 3.65...</msg>
<status status="PASS" starttime="20201030 15:52:19.338" endtime="20201030 15:52:19.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.346" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.345" endtime="20201030 15:52:19.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.348" level="INFO">VALUE: [3.622200000000242e-05, 3.5889000000000754e-05, 3.569499999999878e-05, 3.5889000000000754e-05, 3.623699999999799e-05, 3.622299999999842e-05, 3.654200000000052e-05, 3.569499999999878e-05, 3.652800000000095e-05, 3.619399999999981e-05, 3.5889000000000754e-05, 3.6361000000002114e-05, 3.64589999999991e-05, 3.6596999999999325e-05, 3.6388999999997784e-05, 3.567999999999974e-05, 3.590200000000085e-05, 3.6332999999999505e-05, 3.6167000000000143e-05, 3.6403000000000824e-05, 3.579199999999977e-05, 3.645799999999963e-05, 3.599999999999784e-05, 3.5889000000000754e-05, 3.644400000000006e-05, 3.57780000000002e-05, 3.6361000000002114e-05, 3.633399999999898e-05, 3.655600000000009e-05, 3.595799999999913e-05, 3.651399999999791e-05, 3.651399999999791e-05, 3.647299999999867e-05, 3.6153000000000574e-05, 3.584800000000152e-05, 3.575000000000106e-05, 3.661200000000184e-05, 3.581999999999891e-05, 3.5776999999997255e-05, 3.640199999999788e-05, 3.620799999999938e-05, 3.590200000000085e-05, 3.6026999999997505e-05, 3.663800000000203e-05, 3.6096999999998824e-05, 3.595799999999913e-05, 3.5832999999999005e-05, 3.6346999999999074e-05, 3.6638999999998034e-05, 3.6346999999999074e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.347" endtime="20201030 15:52:19.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.342" endtime="20201030 15:52:19.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.354" endtime="20201030 15:52:19.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.353" endtime="20201030 15:52:19.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.352" endtime="20201030 15:52:19.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.988" endtime="20201030 15:52:19.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.987" endtime="20201030 15:52:19.375"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.384" endtime="20201030 15:52:19.402"></status>
</kw>
<msg timestamp="20201030 15:52:19.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.383" endtime="20201030 15:52:19.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.404" endtime="20201030 15:52:19.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.406" endtime="20201030 15:52:19.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.380" endtime="20201030 15:52:19.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.378" endtime="20201030 15:52:19.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.416" endtime="20201030 15:52:19.702"></status>
</kw>
<msg timestamp="20201030 15:52:19.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020171306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020208056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.414" endtime="20201030 15:52:19.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020171306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020208056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.706" endtime="20201030 15:52:19.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.715" endtime="20201030 15:52:19.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.412" endtime="20201030 15:52:19.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.410" endtime="20201030 15:52:19.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.722" level="INFO">${RESULT} = [{'diff': 3.674999999999859e-05}, {'diff': 3.7374999999999214e-05}, {'diff': 3.7666999999998174e-05}, {'diff': 3.670899999999935e-05}, {'diff': 3.7125000000002434e-05}, {'diff': 3.6846999999999575e-05...</msg>
<status status="PASS" starttime="20201030 15:52:19.718" endtime="20201030 15:52:19.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.727" level="INFO">${ACCURACY} = {'diff': [3.674999999999859e-05, 3.7374999999999214e-05, 3.7666999999998174e-05, 3.670899999999935e-05, 3.7125000000002434e-05, 3.6846999999999575e-05, 3.675000000000206e-05, 3.758400000000023e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:52:19.723" endtime="20201030 15:52:19.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.732" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.730" endtime="20201030 15:52:19.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.734" level="INFO">VALUE: [3.674999999999859e-05, 3.7374999999999214e-05, 3.7666999999998174e-05, 3.670899999999935e-05, 3.7125000000002434e-05, 3.6846999999999575e-05, 3.675000000000206e-05, 3.758400000000023e-05, 3.72780000000017e-05, 3.7445000000000533e-05, 3.688800000000228e-05, 3.7512999999999436e-05, 3.720799999999691e-05, 3.6833000000000005e-05, 3.6888999999998284e-05, 3.7347000000000075e-05, 3.720800000000038e-05, 3.729200000000127e-05, 3.749999999999934e-05, 3.6903000000001324e-05, 3.7360999999999644e-05, 3.649999999999834e-05, 3.7417000000001394e-05, 3.7181000000000713e-05, 3.751399999999891e-05, 3.722199999999995e-05, 3.6861000000002614e-05, 3.7653000000002074e-05, 3.7402999999998354e-05, 3.702799999999798e-05, 3.7611000000003364e-05, 3.72780000000017e-05, 3.684799999999905e-05, 3.702799999999798e-05, 3.701399999999841e-05, 3.754200000000152e-05, 3.74590000000001e-05, 3.7290999999998325e-05, 3.6833000000000005e-05, 3.669400000000031e-05, 3.6777000000001725e-05, 3.673600000000249e-05, 3.7096999999999825e-05, 3.727799999999823e-05, 3.672199999999945e-05, 3.6819000000000435e-05, 3.7582999999997285e-05, 3.680600000000034e-05, 3.723600000000299e-05, 3.7152999999998104e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.733" endtime="20201030 15:52:19.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.728" endtime="20201030 15:52:19.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.739" endtime="20201030 15:52:19.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.738" endtime="20201030 15:52:19.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.737" endtime="20201030 15:52:19.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.376" endtime="20201030 15:52:19.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.376" endtime="20201030 15:52:19.760"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.769" endtime="20201030 15:52:19.787"></status>
</kw>
<msg timestamp="20201030 15:52:19.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.768" endtime="20201030 15:52:19.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.789" endtime="20201030 15:52:19.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.792" endtime="20201030 15:52:19.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.765" endtime="20201030 15:52:19.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.763" endtime="20201030 15:52:19.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.801" endtime="20201030 15:52:20.091"></status>
</kw>
<msg timestamp="20201030 15:52:20.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020226625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.800" endtime="20201030 15:52:20.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020226625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.096" endtime="20201030 15:52:20.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.105" endtime="20201030 15:52:20.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.797" endtime="20201030 15:52:20.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.795" endtime="20201030 15:52:20.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.111" level="INFO">${RESULT} = [{'diff': 3.8166999999998674e-05}, {'diff': 3.7762999999999686e-05}, {'diff': 3.7653000000002074e-05}, {'diff': 3.822300000000042e-05}, {'diff': 3.784800000000005e-05}, {'diff': 3.8152999999999104e-05...</msg>
<status status="PASS" starttime="20201030 15:52:20.108" endtime="20201030 15:52:20.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.116" level="INFO">${ACCURACY} = {'diff': [3.8166999999998674e-05, 3.7762999999999686e-05, 3.7653000000002074e-05, 3.822300000000042e-05, 3.784800000000005e-05, 3.8152999999999104e-05, 3.808400000000073e-05, 3.8083000000001255e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:52:20.112" endtime="20201030 15:52:20.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.120" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.119" endtime="20201030 15:52:20.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.123" level="INFO">VALUE: [3.8166999999998674e-05, 3.7762999999999686e-05, 3.7653000000002074e-05, 3.822300000000042e-05, 3.784800000000005e-05, 3.8152999999999104e-05, 3.808400000000073e-05, 3.8083000000001255e-05, 3.865200000000013e-05, 3.7861000000000145e-05, 3.7874999999999714e-05, 3.7762999999999686e-05, 3.791599999999895e-05, 3.8388999999999784e-05, 3.826400000000313e-05, 3.822300000000042e-05, 3.801399999999941e-05, 3.7902999999998854e-05, 3.79859999999968e-05, 3.822200000000095e-05, 3.8667000000002644e-05, 3.8195000000001283e-05, 3.8694999999998314e-05, 3.8152999999999104e-05, 3.783400000000048e-05, 3.773600000000002e-05, 3.854199999999905e-05, 3.8209000000000853e-05, 3.8444999999998064e-05, 3.851399999999991e-05, 3.802799999999898e-05, 3.8430999999998494e-05, 3.8458999999997634e-05, 3.867999999999927e-05, 3.770900000000035e-05, 3.7790999999998826e-05, 3.7888999999999284e-05, 3.8639000000000034e-05, 3.820800000000138e-05, 3.8596999999997855e-05, 3.801400000000288e-05, 3.8347000000001075e-05, 3.7888999999999284e-05, 3.77780000000022e-05, 3.82919999999988e-05, 3.795800000000113e-05, 3.8582999999998285e-05, 3.8083000000001255e-05, 3.834799999999708e-05, 3.8583000000001755e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.121" endtime="20201030 15:52:20.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.117" endtime="20201030 15:52:20.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.128" endtime="20201030 15:52:20.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.127" endtime="20201030 15:52:20.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.125" endtime="20201030 15:52:20.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.761" endtime="20201030 15:52:20.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.761" endtime="20201030 15:52:20.149"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.158" endtime="20201030 15:52:20.176"></status>
</kw>
<msg timestamp="20201030 15:52:20.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.156" endtime="20201030 15:52:20.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.178" endtime="20201030 15:52:20.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.181" endtime="20201030 15:52:20.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.154" endtime="20201030 15:52:20.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.152" endtime="20201030 15:52:20.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.190" endtime="20201030 15:52:20.476"></status>
</kw>
<msg timestamp="20201030 15:52:20.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021002444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021041847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.189" endtime="20201030 15:52:20.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021002444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021041847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.480" endtime="20201030 15:52:20.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.489" endtime="20201030 15:52:20.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.186" endtime="20201030 15:52:20.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.184" endtime="20201030 15:52:20.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.496" level="INFO">${RESULT} = [{'diff': 3.9403000000000354e-05}, {'diff': 3.923600000000152e-05}, {'diff': 3.9333000000002505e-05}, {'diff': 3.8902999999999854e-05}, {'diff': 3.876400000000016e-05}, {'diff': 3.9388999999997315e-05...</msg>
<status status="PASS" starttime="20201030 15:52:20.492" endtime="20201030 15:52:20.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.500" level="INFO">${ACCURACY} = {'diff': [3.9403000000000354e-05, 3.923600000000152e-05, 3.9333000000002505e-05, 3.8902999999999854e-05, 3.876400000000016e-05, 3.9388999999997315e-05, 3.943000000000002e-05, 3.9166999999999674e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:52:20.497" endtime="20201030 15:52:20.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.505" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.504" endtime="20201030 15:52:20.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.507" level="INFO">VALUE: [3.9403000000000354e-05, 3.923600000000152e-05, 3.9333000000002505e-05, 3.8902999999999854e-05, 3.876400000000016e-05, 3.9388999999997315e-05, 3.943000000000002e-05, 3.9166999999999674e-05, 3.877799999999973e-05, 3.857000000000166e-05, 3.872199999999798e-05, 3.9583000000002755e-05, 3.9153000000000104e-05, 3.920800000000238e-05, 3.908400000000173e-05, 3.877799999999973e-05, 3.931999999999894e-05, 3.9139000000000534e-05, 3.8959000000001603e-05, 3.9472999999998204e-05, 3.933400000000198e-05, 3.949999999999787e-05, 3.9444999999999064e-05, 3.94720000000022e-05, 3.870800000000188e-05, 3.947199999999873e-05, 3.875000000000059e-05, 3.8846999999998105e-05, 3.8790999999999826e-05, 3.945799999999916e-05, 3.9568999999999716e-05, 3.9347000000002075e-05, 3.904199999999955e-05, 3.92919999999998e-05, 3.9082999999998785e-05, 3.8861000000001145e-05, 3.8889000000000284e-05, 3.883400000000148e-05, 3.8681000000002214e-05, 3.9180999999999244e-05, 3.9403000000000354e-05, 3.874999999999712e-05, 3.9472999999998204e-05, 3.9111000000001395e-05, 3.902799999999998e-05, 3.872199999999798e-05, 3.9082999999998785e-05, 3.9389000000000784e-05, 3.901400000000041e-05, 3.899999999999737e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.506" endtime="20201030 15:52:20.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.501" endtime="20201030 15:52:20.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.514" endtime="20201030 15:52:20.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.512" endtime="20201030 15:52:20.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.511" endtime="20201030 15:52:20.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.150" endtime="20201030 15:52:20.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.149" endtime="20201030 15:52:20.534"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.543" endtime="20201030 15:52:20.562"></status>
</kw>
<msg timestamp="20201030 15:52:20.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.542" endtime="20201030 15:52:20.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.563" endtime="20201030 15:52:20.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.566" endtime="20201030 15:52:20.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.539" endtime="20201030 15:52:20.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.537" endtime="20201030 15:52:20.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.575" endtime="20201030 15:52:20.861"></status>
</kw>
<msg timestamp="20201030 15:52:20.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020147014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02018725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:20.574" endtime="20201030 15:52:20.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020147014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02018725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:20.865" endtime="20201030 15:52:20.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.874" endtime="20201030 15:52:20.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.571" endtime="20201030 15:52:20.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.569" endtime="20201030 15:52:20.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.881" level="INFO">${RESULT} = [{'diff': 4.023599999999905e-05}, {'diff': 4.0388999999998315e-05}, {'diff': 4.0403000000001354e-05}, {'diff': 4.018000000000077e-05}, {'diff': 3.997199999999923e-05}, {'diff': 4.026400000000166e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:20.878" endtime="20201030 15:52:20.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.886" level="INFO">${ACCURACY} = {'diff': [4.023599999999905e-05, 4.0388999999998315e-05, 4.0403000000001354e-05, 4.018000000000077e-05, 3.997199999999923e-05, 4.026400000000166e-05, 4.0402999999997885e-05, 3.956999999999919e-05, 4.0...</msg>
<status status="PASS" starttime="20201030 15:52:20.882" endtime="20201030 15:52:20.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.891" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.890" endtime="20201030 15:52:20.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.894" level="INFO">VALUE: [4.023599999999905e-05, 4.0388999999998315e-05, 4.0403000000001354e-05, 4.018000000000077e-05, 3.997199999999923e-05, 4.026400000000166e-05, 4.0402999999997885e-05, 3.956999999999919e-05, 4.0458999999999634e-05, 4.005600000000012e-05, 4.04859999999993e-05, 4.0458999999999634e-05, 4.024999999999862e-05, 4.024999999999862e-05, 4.025000000000209e-05, 4.0041000000001076e-05, 3.9903000000000854e-05, 4.0512999999998967e-05, 4.01660000000012e-05, 4.0445000000000064e-05, 4.0276999999998286e-05, 4.0346999999999605e-05, 4.016599999999773e-05, 3.969399999999984e-05, 3.972199999999898e-05, 4.0596999999999855e-05, 4.024999999999862e-05, 3.9889000000001285e-05, 4.052800000000148e-05, 4.0276999999998286e-05, 4.002800000000098e-05, 3.9832999999999535e-05, 4.0389000000001785e-05, 3.9860999999998675e-05, 4.022199999999948e-05, 3.980599999999987e-05, 4.033399999999951e-05, 4.002799999999751e-05, 4.034800000000255e-05, 3.983399999999901e-05, 4.0346999999999605e-05, 4.0333000000000035e-05, 4.0139000000001535e-05, 3.997199999999923e-05, 3.999999999999837e-05, 3.994400000000009e-05, 3.993000000000052e-05, 4.0639000000002035e-05, 4.0096999999999355e-05, 4.0139000000001535e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.892" endtime="20201030 15:52:20.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.887" endtime="20201030 15:52:20.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.899" endtime="20201030 15:52:20.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.897" endtime="20201030 15:52:20.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.896" endtime="20201030 15:52:20.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.535" endtime="20201030 15:52:20.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.535" endtime="20201030 15:52:20.920"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.929" endtime="20201030 15:52:20.947"></status>
</kw>
<msg timestamp="20201030 15:52:20.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.927" endtime="20201030 15:52:20.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.949" endtime="20201030 15:52:20.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.951" endtime="20201030 15:52:20.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.924" endtime="20201030 15:52:20.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.922" endtime="20201030 15:52:20.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.961" endtime="20201030 15:52:21.247"></status>
</kw>
<msg timestamp="20201030 15:52:21.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020180653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.959" endtime="20201030 15:52:21.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020180653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.252" endtime="20201030 15:52:21.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.261" endtime="20201030 15:52:21.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.956" endtime="20201030 15:52:21.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.955" endtime="20201030 15:52:21.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.268" level="INFO">${RESULT} = [{'diff': 4.1097000000000355e-05}, {'diff': 4.1652999999999135e-05}, {'diff': 4.0903000000001855e-05}, {'diff': 4.0888999999998815e-05}, {'diff': 4.11799999999983e-05}, {'diff': 4.1526999999999537e-05...</msg>
<status status="PASS" starttime="20201030 15:52:21.264" endtime="20201030 15:52:21.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.272" level="INFO">${ACCURACY} = {'diff': [4.1097000000000355e-05, 4.1652999999999135e-05, 4.0903000000001855e-05, 4.0888999999998815e-05, 4.11799999999983e-05, 4.1526999999999537e-05, 4.082000000000044e-05, 4.095800000000066e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:21.269" endtime="20201030 15:52:21.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.277" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.276" endtime="20201030 15:52:21.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.279" level="INFO">VALUE: [4.1097000000000355e-05, 4.1652999999999135e-05, 4.0903000000001855e-05, 4.0888999999998815e-05, 4.11799999999983e-05, 4.1526999999999537e-05, 4.082000000000044e-05, 4.095800000000066e-05, 4.1290999999998856e-05, 4.1138999999999065e-05, 4.140199999999941e-05, 4.1374999999999745e-05, 4.126399999999919e-05, 4.1361000000000175e-05, 4.0860999999999675e-05, 4.0903000000001855e-05, 4.1388999999999315e-05, 4.145799999999769e-05, 4.099999999999937e-05, 4.1083000000000786e-05, 4.105599999999765e-05, 4.099999999999937e-05, 4.131999999999747e-05, 4.1374999999999745e-05, 4.119400000000134e-05, 4.152800000000248e-05, 4.0903000000001855e-05, 4.0722999999999454e-05, 4.126399999999919e-05, 4.0708999999999884e-05, 4.081999999999697e-05, 4.123600000000005e-05, 4.1540999999999106e-05, 4.1139000000002535e-05, 4.149999999999987e-05, 4.07920000000013e-05, 4.092999999999805e-05, 4.1388999999999315e-05, 4.1416999999998455e-05, 4.1596999999997386e-05, 4.102800000000198e-05, 4.076399999999869e-05, 4.09859999999998e-05, 4.144399999999812e-05, 4.1583000000001286e-05, 4.1666999999998705e-05, 4.083400000000001e-05, 4.1638999999999565e-05, 4.154200000000205e-05, 4.102799999999851e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.278" endtime="20201030 15:52:21.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.273" endtime="20201030 15:52:21.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.284" endtime="20201030 15:52:21.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.283" endtime="20201030 15:52:21.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.282" endtime="20201030 15:52:21.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.921" endtime="20201030 15:52:21.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.920" endtime="20201030 15:52:21.305"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.314" endtime="20201030 15:52:21.333"></status>
</kw>
<msg timestamp="20201030 15:52:21.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.313" endtime="20201030 15:52:21.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.335" endtime="20201030 15:52:21.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.338" endtime="20201030 15:52:21.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.310" endtime="20201030 15:52:21.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.308" endtime="20201030 15:52:21.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.347" endtime="20201030 15:52:21.632"></status>
</kw>
<msg timestamp="20201030 15:52:21.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021048153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021090611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.346" endtime="20201030 15:52:21.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021048153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021090611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.637" endtime="20201030 15:52:21.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.645" endtime="20201030 15:52:21.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.343" endtime="20201030 15:52:21.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.341" endtime="20201030 15:52:21.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.652" level="INFO">${RESULT} = [{'diff': 4.245799999999869e-05}, {'diff': 4.1694999999997845e-05}, {'diff': 4.250000000000087e-05}, {'diff': 4.19860000000008e-05}, {'diff': 4.2333000000002036e-05}, {'diff': 4.21799999999993e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:21.649" endtime="20201030 15:52:21.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.657" level="INFO">${ACCURACY} = {'diff': [4.245799999999869e-05, 4.1694999999997845e-05, 4.250000000000087e-05, 4.19860000000008e-05, 4.2333000000002036e-05, 4.21799999999993e-05, 4.176300000000022e-05, 4.2125000000000495e-05, 4.266...</msg>
<status status="PASS" starttime="20201030 15:52:21.653" endtime="20201030 15:52:21.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.661" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.660" endtime="20201030 15:52:21.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.664" level="INFO">VALUE: [4.245799999999869e-05, 4.1694999999997845e-05, 4.250000000000087e-05, 4.19860000000008e-05, 4.2333000000002036e-05, 4.21799999999993e-05, 4.176300000000022e-05, 4.2125000000000495e-05, 4.266600000000023e-05, 4.2639000000000565e-05, 4.227799999999976e-05, 4.220800000000191e-05, 4.1819000000001966e-05, 4.2554999999999676e-05, 4.230600000000237e-05, 4.220799999999844e-05, 4.172199999999751e-05, 4.231999999999847e-05, 4.2346999999998136e-05, 4.1916999999998955e-05, 4.1973000000000704e-05, 4.225000000000062e-05, 4.2680999999999275e-05, 4.202799999999951e-05, 4.1874999999996776e-05, 4.2166999999999205e-05, 4.2458999999998165e-05, 4.241599999999998e-05, 4.2444999999998595e-05, 4.2097000000001356e-05, 4.1791000000002826e-05, 4.2097000000001356e-05, 4.2360999999997706e-05, 4.1861000000000675e-05, 4.180600000000187e-05, 4.2111000000000925e-05, 4.1638999999999565e-05, 4.226400000000019e-05, 4.2653000000000135e-05, 4.2666999999999705e-05, 4.251400000000044e-05, 4.244399999999912e-05, 4.2624999999997526e-05, 4.173600000000055e-05, 4.2610999999997956e-05, 4.1888999999999815e-05, 4.251399999999697e-05, 4.2318999999998996e-05, 4.1708999999997415e-05, 4.2402999999999885e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.663" endtime="20201030 15:52:21.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.657" endtime="20201030 15:52:21.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.670" endtime="20201030 15:52:21.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.669" endtime="20201030 15:52:21.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.667" endtime="20201030 15:52:21.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.306" endtime="20201030 15:52:21.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.306" endtime="20201030 15:52:21.691"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.700" endtime="20201030 15:52:21.719"></status>
</kw>
<msg timestamp="20201030 15:52:21.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.699" endtime="20201030 15:52:21.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.720" endtime="20201030 15:52:21.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.723" endtime="20201030 15:52:21.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.696" endtime="20201030 15:52:21.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.694" endtime="20201030 15:52:21.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.732" endtime="20201030 15:52:22.019"></status>
</kw>
<msg timestamp="20201030 15:52:22.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020181722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.731" endtime="20201030 15:52:22.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020181722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.023" endtime="20201030 15:52:22.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.032" endtime="20201030 15:52:22.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.728" endtime="20201030 15:52:22.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.726" endtime="20201030 15:52:22.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.039" level="INFO">${RESULT} = [{'diff': 4.277800000000026e-05}, {'diff': 4.270799999999894e-05}, {'diff': 4.2832999999999066e-05}, {'diff': 4.295799999999919e-05}, {'diff': 4.3153000000000635e-05}, {'diff': 4.3610999999998956e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:22.035" endtime="20201030 15:52:22.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.044" level="INFO">${ACCURACY} = {'diff': [4.277800000000026e-05, 4.270799999999894e-05, 4.2832999999999066e-05, 4.295799999999919e-05, 4.3153000000000635e-05, 4.3610999999998956e-05, 4.277799999999679e-05, 4.3096999999998886e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:22.040" endtime="20201030 15:52:22.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.049" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.047" endtime="20201030 15:52:22.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.051" level="INFO">VALUE: [4.277800000000026e-05, 4.270799999999894e-05, 4.2832999999999066e-05, 4.295799999999919e-05, 4.3153000000000635e-05, 4.3610999999998956e-05, 4.277799999999679e-05, 4.3096999999998886e-05, 4.272199999999851e-05, 4.3318999999999996e-05, 4.277799999999679e-05, 4.326400000000119e-05, 4.2902999999996916e-05, 4.357000000000319e-05, 4.2889000000000815e-05, 4.326399999999772e-05, 4.341599999999751e-05, 4.3639000000001565e-05, 4.283400000000201e-05, 4.3209000000002384e-05, 4.3068999999999746e-05, 4.31800000000003e-05, 4.301400000000094e-05, 4.316599999999726e-05, 4.273600000000155e-05, 4.345799999999969e-05, 4.351399999999797e-05, 4.3124999999998026e-05, 4.3332999999999566e-05, 4.322199999999901e-05, 4.272199999999851e-05, 4.2846999999998636e-05, 4.3653000000001135e-05, 4.3347000000002606e-05, 4.3332999999999566e-05, 4.3097000000002356e-05, 4.327800000000076e-05, 4.306999999999922e-05, 4.358399999999929e-05, 4.347199999999926e-05, 4.3237000000001524e-05, 4.2973000000001704e-05, 4.3124999999998026e-05, 4.2666999999999705e-05, 4.315200000000116e-05, 4.3096999999998886e-05, 4.3125000000001495e-05, 4.3346999999999136e-05, 4.329200000000033e-05, 4.3305000000000426e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.050" endtime="20201030 15:52:22.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.045" endtime="20201030 15:52:22.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.056" endtime="20201030 15:52:22.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.055" endtime="20201030 15:52:22.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.054" endtime="20201030 15:52:22.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.692" endtime="20201030 15:52:22.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.691" endtime="20201030 15:52:22.077"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.087" endtime="20201030 15:52:22.105"></status>
</kw>
<msg timestamp="20201030 15:52:22.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.085" endtime="20201030 15:52:22.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.107" endtime="20201030 15:52:22.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.110" endtime="20201030 15:52:22.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.082" endtime="20201030 15:52:22.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.080" endtime="20201030 15:52:22.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.119" endtime="20201030 15:52:22.406"></status>
</kw>
<msg timestamp="20201030 15:52:22.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02034475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:22.117" endtime="20201030 15:52:22.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02034475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:22.410" endtime="20201030 15:52:22.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.419" endtime="20201030 15:52:22.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.115" endtime="20201030 15:52:22.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.113" endtime="20201030 15:52:22.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.426" level="INFO">${RESULT} = [{'diff': 4.444400000000112e-05}, {'diff': 4.44999999999994e-05}, {'diff': 4.374999999999865e-05}, {'diff': 4.454199999999811e-05}, {'diff': 4.377799999999779e-05}, {'diff': 4.3874999999998776e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:22.422" endtime="20201030 15:52:22.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.430" level="INFO">${ACCURACY} = {'diff': [4.444400000000112e-05, 4.44999999999994e-05, 4.374999999999865e-05, 4.454199999999811e-05, 4.377799999999779e-05, 4.3874999999998776e-05, 4.4403000000001885e-05, 4.459799999999986e-05, 4.402...</msg>
<status status="PASS" starttime="20201030 15:52:22.427" endtime="20201030 15:52:22.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.435" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.434" endtime="20201030 15:52:22.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.437" level="INFO">VALUE: [4.444400000000112e-05, 4.44999999999994e-05, 4.374999999999865e-05, 4.454199999999811e-05, 4.377799999999779e-05, 4.3874999999998776e-05, 4.4403000000001885e-05, 4.459799999999986e-05, 4.402800000000151e-05, 4.402799999999804e-05, 4.433400000000004e-05, 4.456999999999725e-05, 4.4375000000002746e-05, 4.4610999999999956e-05, 4.444399999999765e-05, 4.4153000000001635e-05, 4.419400000000087e-05, 4.395800000000019e-05, 4.4403000000001885e-05, 4.393000000000105e-05, 4.4638999999999096e-05, 4.3917000000000955e-05, 4.4624999999999526e-05, 4.3861000000002676e-05, 4.454199999999811e-05, 4.4138999999998596e-05, 4.447200000000026e-05, 4.4417000000001455e-05, 4.4153000000001635e-05, 4.3958999999999665e-05, 4.3708999999999415e-05, 4.402799999999804e-05, 4.4222999999999485e-05, 4.409799999999936e-05, 4.405600000000065e-05, 4.404199999999761e-05, 4.422200000000001e-05, 4.465199999999919e-05, 4.4333000000000566e-05, 4.373599999999908e-05, 4.3860999999999206e-05, 4.402799999999804e-05, 4.4638999999999096e-05, 4.395800000000019e-05, 4.451400000000244e-05, 4.402800000000151e-05, 4.4360999999999706e-05, 4.420800000000044e-05, 4.4083000000000316e-05, 4.424999999999915e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.436" endtime="20201030 15:52:22.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.431" endtime="20201030 15:52:22.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.443" endtime="20201030 15:52:22.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.441" endtime="20201030 15:52:22.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.440" endtime="20201030 15:52:22.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.078" endtime="20201030 15:52:22.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.078" endtime="20201030 15:52:22.463"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.473" endtime="20201030 15:52:22.492"></status>
</kw>
<msg timestamp="20201030 15:52:22.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.471" endtime="20201030 15:52:22.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.493" endtime="20201030 15:52:22.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.496" endtime="20201030 15:52:22.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.468" endtime="20201030 15:52:22.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.466" endtime="20201030 15:52:22.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.505" endtime="20201030 15:52:22.795"></status>
</kw>
<msg timestamp="20201030 15:52:22.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021113139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021158333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.504" endtime="20201030 15:52:22.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021113139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021158333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.804" endtime="20201030 15:52:22.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.823" endtime="20201030 15:52:22.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.501" endtime="20201030 15:52:22.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.499" endtime="20201030 15:52:22.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.837" level="INFO">${RESULT} = [{'diff': 4.519400000000187e-05}, {'diff': 4.495799999999772e-05}, {'diff': 4.516599999999926e-05}, {'diff': 4.527799999999929e-05}, {'diff': 4.527699999999982e-05}, {'diff': 4.530499999999896e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:22.830" endtime="20201030 15:52:22.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.846" level="INFO">${ACCURACY} = {'diff': [4.519400000000187e-05, 4.495799999999772e-05, 4.516599999999926e-05, 4.527799999999929e-05, 4.527699999999982e-05, 4.530499999999896e-05, 4.472200000000051e-05, 4.5666999999999236e-05, 4.472...</msg>
<status status="PASS" starttime="20201030 15:52:22.839" endtime="20201030 15:52:22.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.855" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.853" endtime="20201030 15:52:22.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.861" level="INFO">VALUE: [4.519400000000187e-05, 4.495799999999772e-05, 4.516599999999926e-05, 4.527799999999929e-05, 4.527699999999982e-05, 4.530499999999896e-05, 4.472200000000051e-05, 4.5666999999999236e-05, 4.472200000000051e-05, 4.4902999999998916e-05, 4.5138999999999596e-05, 4.4916999999998486e-05, 4.53329999999981e-05, 4.4833000000001066e-05, 4.5388999999999846e-05, 4.473600000000008e-05, 4.5209000000000915e-05, 4.5639000000000096e-05, 4.536099999999724e-05, 4.573600000000108e-05, 4.55000000000004e-05, 4.534799999999714e-05, 4.48329999999976e-05, 4.558399999999782e-05, 4.520799999999797e-05, 4.5583000000001817e-05, 4.551399999999997e-05, 4.473600000000008e-05, 4.470800000000094e-05, 4.51939999999984e-05, 4.4847000000000636e-05, 4.5111000000000456e-05, 4.55000000000004e-05, 4.531899999999853e-05, 4.558299999999835e-05, 4.551399999999997e-05, 4.547199999999779e-05, 4.502799999999904e-05, 4.4847000000000636e-05, 4.530599999999843e-05, 4.4931000000001525e-05, 4.5388999999999846e-05, 4.454200000000158e-05, 4.5416999999998986e-05, 4.534800000000061e-05, 4.4847000000000636e-05, 4.501399999999947e-05, 4.519400000000187e-05, 4.527699999999982e-05, 4.5138999999999596e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.858" endtime="20201030 15:52:22.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.848" endtime="20201030 15:52:22.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.879" endtime="20201030 15:52:22.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.875" endtime="20201030 15:52:22.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.873" endtime="20201030 15:52:22.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.464" endtime="20201030 15:52:22.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.464" endtime="20201030 15:52:22.900"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.909" endtime="20201030 15:52:22.927"></status>
</kw>
<msg timestamp="20201030 15:52:22.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.907" endtime="20201030 15:52:22.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.928" endtime="20201030 15:52:22.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.931" endtime="20201030 15:52:22.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.905" endtime="20201030 15:52:22.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.903" endtime="20201030 15:52:22.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.940" endtime="20201030 15:52:23.226"></status>
</kw>
<msg timestamp="20201030 15:52:23.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019767806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.939" endtime="20201030 15:52:23.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019767806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.231" endtime="20201030 15:52:23.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.239" endtime="20201030 15:52:23.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.936" endtime="20201030 15:52:23.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.934" endtime="20201030 15:52:23.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.246" level="INFO">${RESULT} = [{'diff': 4.6472999999998266e-05}, {'diff': 4.5889000000000346e-05}, {'diff': 4.638899999999738e-05}, {'diff': 4.5959000000001665e-05}, {'diff': 4.6416999999999986e-05}, {'diff': 4.663799999999815e-05...</msg>
<status status="PASS" starttime="20201030 15:52:23.243" endtime="20201030 15:52:23.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.252" level="INFO">${ACCURACY} = {'diff': [4.6472999999998266e-05, 4.5889000000000346e-05, 4.638899999999738e-05, 4.5959000000001665e-05, 4.6416999999999986e-05, 4.663799999999815e-05, 4.622199999999854e-05, 4.5847000000001636e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:52:23.247" endtime="20201030 15:52:23.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.256" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.255" endtime="20201030 15:52:23.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.259" level="INFO">VALUE: [4.6472999999998266e-05, 4.5889000000000346e-05, 4.638899999999738e-05, 4.5959000000001665e-05, 4.6416999999999986e-05, 4.663799999999815e-05, 4.622199999999854e-05, 4.5847000000001636e-05, 4.656899999999978e-05, 4.638800000000137e-05, 4.6153000000000166e-05, 4.663800000000162e-05, 4.636099999999824e-05, 4.656899999999978e-05, 4.577799999999979e-05, 4.602800000000004e-05, 4.6653000000000666e-05, 4.572199999999804e-05, 4.647199999999879e-05, 4.629199999999986e-05, 4.608299999999885e-05, 4.56939999999989e-05, 4.626399999999725e-05, 4.652800000000054e-05, 4.604199999999961e-05, 4.6445000000002595e-05, 4.5944999999998626e-05, 4.5916999999999486e-05, 4.6403000000000416e-05, 4.604100000000014e-05, 4.6347000000002136e-05, 4.622200000000201e-05, 4.591599999999654e-05, 4.597200000000176e-05, 4.659699999999892e-05, 4.626400000000072e-05, 4.597200000000176e-05, 4.577799999999979e-05, 4.659699999999892e-05, 4.6139000000000596e-05, 4.6653000000000666e-05, 4.6597000000002387e-05, 4.611099999999799e-05, 4.599999999999743e-05, 4.60000000000009e-05, 4.597199999999829e-05, 4.601400000000047e-05, 4.5972999999997766e-05, 4.654200000000011e-05, 4.605499999999971e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.257" endtime="20201030 15:52:23.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.252" endtime="20201030 15:52:23.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.264" endtime="20201030 15:52:23.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.262" endtime="20201030 15:52:23.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.261" endtime="20201030 15:52:23.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.901" endtime="20201030 15:52:23.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.900" endtime="20201030 15:52:23.285"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.294" endtime="20201030 15:52:23.312"></status>
</kw>
<msg timestamp="20201030 15:52:23.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.293" endtime="20201030 15:52:23.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.314" endtime="20201030 15:52:23.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.316" endtime="20201030 15:52:23.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.290" endtime="20201030 15:52:23.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.288" endtime="20201030 15:52:23.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.326" endtime="20201030 15:52:23.621"></status>
</kw>
<msg timestamp="20201030 15:52:23.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020289181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020336042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.324" endtime="20201030 15:52:23.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020289181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020336042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.631" endtime="20201030 15:52:23.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.651" endtime="20201030 15:52:23.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.322" endtime="20201030 15:52:23.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.320" endtime="20201030 15:52:23.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.665" level="INFO">${RESULT} = [{'diff': 4.686099999999874e-05}, {'diff': 4.702800000000104e-05}, {'diff': 4.7208999999999446e-05}, {'diff': 4.716599999999779e-05}, {'diff': 4.734699999999967e-05}, {'diff': 4.704100000000114e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:23.658" endtime="20201030 15:52:23.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.675" level="INFO">${ACCURACY} = {'diff': [4.686099999999874e-05, 4.702800000000104e-05, 4.7208999999999446e-05, 4.716599999999779e-05, 4.734699999999967e-05, 4.704100000000114e-05, 4.680500000000046e-05, 4.711099999999899e-05, 4.752...</msg>
<status status="PASS" starttime="20201030 15:52:23.667" endtime="20201030 15:52:23.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.685" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.682" endtime="20201030 15:52:23.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.690" level="INFO">VALUE: [4.686099999999874e-05, 4.702800000000104e-05, 4.7208999999999446e-05, 4.716599999999779e-05, 4.734699999999967e-05, 4.704100000000114e-05, 4.680500000000046e-05, 4.711099999999899e-05, 4.752800000000154e-05, 4.738899999999838e-05, 4.670799999999947e-05, 4.673599999999861e-05, 4.677799999999732e-05, 4.731899999999706e-05, 4.697199999999929e-05, 4.758300000000035e-05, 4.672200000000251e-05, 4.683399999999907e-05, 4.724999999999868e-05, 4.736199999999871e-05, 4.7208999999999446e-05, 4.706999999999975e-05, 4.75000000000024e-05, 4.720799999999997e-05, 4.7139000000001596e-05, 4.734699999999967e-05, 4.695799999999972e-05, 4.75269999999986e-05, 4.70000000000019e-05, 4.729100000000139e-05, 4.680599999999993e-05, 4.748599999999936e-05, 4.7403000000001416e-05, 4.7667000000001236e-05, 4.676399999999775e-05, 4.701400000000147e-05, 4.720799999999997e-05, 4.676399999999775e-05, 4.747199999999979e-05, 4.7194999999999876e-05, 4.679200000000036e-05, 4.674999999999818e-05, 4.702799999999757e-05, 4.754200000000111e-05, 4.7458999999999696e-05, 4.711099999999899e-05, 4.720799999999997e-05, 4.743000000000108e-05, 4.762499999999906e-05, 4.726299999999878e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.687" endtime="20201030 15:52:23.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.677" endtime="20201030 15:52:23.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.701" endtime="20201030 15:52:23.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.698" endtime="20201030 15:52:23.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.695" endtime="20201030 15:52:23.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.286" endtime="20201030 15:52:23.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.285" endtime="20201030 15:52:23.722"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.731" endtime="20201030 15:52:23.750"></status>
</kw>
<msg timestamp="20201030 15:52:23.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.729" endtime="20201030 15:52:23.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.752" endtime="20201030 15:52:23.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.754" endtime="20201030 15:52:23.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.726" endtime="20201030 15:52:23.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.724" endtime="20201030 15:52:23.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.764" endtime="20201030 15:52:24.049"></status>
</kw>
<msg timestamp="20201030 15:52:24.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021063847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021112236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.762" endtime="20201030 15:52:24.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021063847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021112236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.053" endtime="20201030 15:52:24.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.062" endtime="20201030 15:52:24.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.759" endtime="20201030 15:52:24.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.758" endtime="20201030 15:52:24.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.068" level="INFO">${RESULT} = [{'diff': 4.838899999999938e-05}, {'diff': 4.797199999999682e-05}, {'diff': 4.834700000000067e-05}, {'diff': 4.845799999999775e-05}, {'diff': 4.802700000000257e-05}, {'diff': 4.861100000000049e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:24.065" endtime="20201030 15:52:24.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.072" level="INFO">${ACCURACY} = {'diff': [4.838899999999938e-05, 4.797199999999682e-05, 4.834700000000067e-05, 4.845799999999775e-05, 4.802700000000257e-05, 4.861100000000049e-05, 4.80269999999991e-05, 4.852800000000254e-05, 4.78889...</msg>
<status status="PASS" starttime="20201030 15:52:24.069" endtime="20201030 15:52:24.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.077" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.076" endtime="20201030 15:52:24.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.079" level="INFO">VALUE: [4.838899999999938e-05, 4.797199999999682e-05, 4.834700000000067e-05, 4.845799999999775e-05, 4.802700000000257e-05, 4.861100000000049e-05, 4.80269999999991e-05, 4.852800000000254e-05, 4.788899999999888e-05, 4.788899999999888e-05, 4.848600000000036e-05, 4.795800000000072e-05, 4.81529999999987e-05, 4.772200000000004e-05, 4.809700000000042e-05, 4.7889000000002346e-05, 4.827799999999882e-05, 4.855599999999821e-05, 4.7875000000002776e-05, 4.804200000000161e-05, 4.776399999999875e-05, 4.799999999999943e-05, 4.834800000000014e-05, 4.773600000000308e-05, 4.8639000000003096e-05, 4.791600000000201e-05, 4.777699999999885e-05, 4.85269999999996e-05, 4.783299999999713e-05, 4.847200000000079e-05, 4.858299999999788e-05, 4.838899999999938e-05, 4.797200000000029e-05, 4.854199999999864e-05, 4.790299999999845e-05, 4.795799999999725e-05, 4.8153000000002166e-05, 4.772200000000004e-05, 4.809700000000042e-05, 4.833400000000057e-05, 4.8459000000000696e-05, 4.816699999999827e-05, 4.7708999999999946e-05, 4.805600000000118e-05, 4.838899999999938e-05, 4.824999999999968e-05, 4.815200000000269e-05, 4.831899999999806e-05, 4.811099999999999e-05, 4.85269999999996e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.078" endtime="20201030 15:52:24.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.073" endtime="20201030 15:52:24.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.085" endtime="20201030 15:52:24.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.084" endtime="20201030 15:52:24.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.082" endtime="20201030 15:52:24.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.723" endtime="20201030 15:52:24.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.722" endtime="20201030 15:52:24.106"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.115" endtime="20201030 15:52:24.133"></status>
</kw>
<msg timestamp="20201030 15:52:24.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.113" endtime="20201030 15:52:24.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.134" endtime="20201030 15:52:24.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.137" endtime="20201030 15:52:24.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.111" endtime="20201030 15:52:24.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.108" endtime="20201030 15:52:24.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.146" endtime="20201030 15:52:24.438"></status>
</kw>
<msg timestamp="20201030 15:52:24.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019690153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.144" endtime="20201030 15:52:24.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019690153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.447" endtime="20201030 15:52:24.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.466" endtime="20201030 15:52:24.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.142" endtime="20201030 15:52:24.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.140" endtime="20201030 15:52:24.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.480" level="INFO">${RESULT} = [{'diff': 4.887499999999684e-05}, {'diff': 4.924999999999721e-05}, {'diff': 4.938900000000038e-05}, {'diff': 4.884700000000117e-05}, {'diff': 4.9014e-05}, {'diff': 4.95270000000006e-05}, {'diff': 4.93...</msg>
<status status="PASS" starttime="20201030 15:52:24.473" endtime="20201030 15:52:24.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.490" level="INFO">${ACCURACY} = {'diff': [4.887499999999684e-05, 4.924999999999721e-05, 4.938900000000038e-05, 4.884700000000117e-05, 4.9014e-05, 4.95270000000006e-05, 4.934799999999767e-05, 4.934800000000114e-05, 4.884700000000117e...</msg>
<status status="PASS" starttime="20201030 15:52:24.482" endtime="20201030 15:52:24.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.499" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.497" endtime="20201030 15:52:24.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.505" level="INFO">VALUE: [4.887499999999684e-05, 4.924999999999721e-05, 4.938900000000038e-05, 4.884700000000117e-05, 4.9014e-05, 4.95270000000006e-05, 4.934799999999767e-05, 4.934800000000114e-05, 4.884700000000117e-05, 4.963900000000063e-05, 4.936100000000124e-05, 4.966600000000029e-05, 4.929199999999939e-05, 4.867999999999886e-05, 4.944399999999918e-05, 4.927799999999982e-05, 4.966699999999977e-05, 4.879199999999889e-05, 4.918099999999884e-05, 4.854199999999864e-05, 4.966699999999977e-05, 4.880600000000193e-05, 4.869499999999791e-05, 4.933400000000157e-05, 4.868099999999834e-05, 4.962500000000106e-05, 4.900000000000043e-05, 4.944499999999866e-05, 4.959800000000139e-05, 4.952800000000007e-05, 4.931899999999906e-05, 4.959700000000192e-05, 4.965200000000072e-05, 4.931900000000253e-05, 4.908299999999838e-05, 4.8707999999998e-05, 4.963900000000063e-05, 4.959799999999792e-05, 4.931899999999906e-05, 4.920800000000197e-05, 4.954199999999964e-05, 4.941699999999952e-05, 4.909700000000142e-05, 4.907000000000175e-05, 4.879200000000236e-05, 4.849999999999993e-05, 4.9473000000001266e-05, 4.9167000000002736e-05, 4.888899999999988e-05, 4.959799999999792e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.502" endtime="20201030 15:52:24.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.492" endtime="20201030 15:52:24.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.513" endtime="20201030 15:52:24.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.511" endtime="20201030 15:52:24.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.509" endtime="20201030 15:52:24.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.107" endtime="20201030 15:52:24.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.106" endtime="20201030 15:52:24.533"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.542" endtime="20201030 15:52:24.560"></status>
</kw>
<msg timestamp="20201030 15:52:24.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.540" endtime="20201030 15:52:24.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.562" endtime="20201030 15:52:24.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.564" endtime="20201030 15:52:24.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.538" endtime="20201030 15:52:24.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.536" endtime="20201030 15:52:24.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.573" endtime="20201030 15:52:24.860"></status>
</kw>
<msg timestamp="20201030 15:52:24.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019531556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.572" endtime="20201030 15:52:24.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019531556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.864" endtime="20201030 15:52:24.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.873" endtime="20201030 15:52:24.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.569" endtime="20201030 15:52:24.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.568" endtime="20201030 15:52:24.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.879" level="INFO">${RESULT} = [{'diff': 4.994499999999916e-05}, {'diff': 4.970899999999848e-05}, {'diff': 5.0415999999997574e-05}, {'diff': 4.981899999999956e-05}, {'diff': 5.0665999999997824e-05}, {'diff': 5.015200000000122e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:24.876" endtime="20201030 15:52:24.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.884" level="INFO">${ACCURACY} = {'diff': [4.994499999999916e-05, 4.970899999999848e-05, 5.0415999999997574e-05, 4.981899999999956e-05, 5.0665999999997824e-05, 5.015200000000122e-05, 5.058299999999988e-05, 4.981899999999956e-05, 4.97...</msg>
<status status="PASS" starttime="20201030 15:52:24.880" endtime="20201030 15:52:24.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.888" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.887" endtime="20201030 15:52:24.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.890" level="INFO">VALUE: [4.994499999999916e-05, 4.970899999999848e-05, 5.0415999999997574e-05, 4.981899999999956e-05, 5.0665999999997824e-05, 5.015200000000122e-05, 5.058299999999988e-05, 4.981899999999956e-05, 4.976400000000075e-05, 5.041700000000052e-05, 5.063900000000163e-05, 5.040300000000095e-05, 5.045799999999975e-05, 5.034700000000267e-05, 5.041700000000052e-05, 4.969399999999943e-05, 4.994499999999916e-05, 5.044499999999966e-05, 5.008400000000232e-05, 5.05140000000015e-05, 5.03339999999991e-05, 5.008399999999885e-05, 4.973600000000161e-05, 5.036199999999824e-05, 4.977800000000032e-05, 5.0415999999997574e-05, 5.045799999999975e-05, 5.062499999999859e-05, 4.986099999999827e-05, 5.033299999999963e-05, 5.026400000000125e-05, 5.015299999999723e-05, 4.995799999999925e-05, 4.990300000000045e-05, 5.048599999999889e-05, 4.977799999999685e-05, 5.02079999999995e-05, 4.994499999999916e-05, 5.040300000000095e-05, 4.959699999999845e-05, 5.016700000000027e-05, 4.976400000000075e-05, 5.025000000000168e-05, 4.988900000000088e-05, 5.019399999999993e-05, 5.0151999999997754e-05, 5.033299999999963e-05, 5.0652000000001723e-05, 5.058299999999988e-05, 5.044400000000018e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.889" endtime="20201030 15:52:24.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.884" endtime="20201030 15:52:24.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.895" endtime="20201030 15:52:24.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.894" endtime="20201030 15:52:24.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.893" endtime="20201030 15:52:24.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.534" endtime="20201030 15:52:24.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.534" endtime="20201030 15:52:24.916"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.925" endtime="20201030 15:52:24.944"></status>
</kw>
<msg timestamp="20201030 15:52:24.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.923" endtime="20201030 15:52:24.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.946" endtime="20201030 15:52:24.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.949" endtime="20201030 15:52:24.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.921" endtime="20201030 15:52:24.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.919" endtime="20201030 15:52:24.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.958" endtime="20201030 15:52:25.249"></status>
</kw>
<msg timestamp="20201030 15:52:25.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.956" endtime="20201030 15:52:25.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.258" endtime="20201030 15:52:25.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.277" endtime="20201030 15:52:25.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.953" endtime="20201030 15:52:25.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.952" endtime="20201030 15:52:25.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.291" level="INFO">${RESULT} = [{'diff': 5.08339999999996e-05}, {'diff': 5.115299999999823e-05}, {'diff': 5.137500000000281e-05}, {'diff': 5.151399999999903e-05}, {'diff': 5.147200000000032e-05}, {'diff': 5.08469999999997e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:25.284" endtime="20201030 15:52:25.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.300" level="INFO">${ACCURACY} = {'diff': [5.08339999999996e-05, 5.115299999999823e-05, 5.137500000000281e-05, 5.151399999999903e-05, 5.147200000000032e-05, 5.08469999999997e-05, 5.10409999999982e-05, 5.072199999999957e-05, 5.1389000...</msg>
<status status="PASS" starttime="20201030 15:52:25.293" endtime="20201030 15:52:25.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.309" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.307" endtime="20201030 15:52:25.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.314" level="INFO">VALUE: [5.08339999999996e-05, 5.115299999999823e-05, 5.137500000000281e-05, 5.151399999999903e-05, 5.147200000000032e-05, 5.08469999999997e-05, 5.10409999999982e-05, 5.072199999999957e-05, 5.138900000000238e-05, 5.0708e-05, 5.119400000000093e-05, 5.145800000000075e-05, 5.0943999999997214e-05, 5.090299999999798e-05, 5.148599999999989e-05, 5.127799999999835e-05, 5.082000000000003e-05, 5.108300000000038e-05, 5.077800000000132e-05, 5.102800000000157e-05, 5.079200000000089e-05, 5.144500000000066e-05, 5.090300000000145e-05, 5.152699999999913e-05, 5.08469999999997e-05, 5.0708e-05, 5.1401999999999004e-05, 5.152699999999913e-05, 5.122200000000007e-05, 5.116600000000179e-05, 5.149999999999946e-05, 5.165299999999873e-05, 5.097199999999982e-05, 5.0708e-05, 5.076400000000175e-05, 5.084700000000317e-05, 5.105599999999724e-05, 5.066700000000077e-05, 5.165299999999873e-05, 5.108399999999985e-05, 5.158400000000035e-05, 5.163899999999916e-05, 5.088900000000188e-05, 5.101399999999853e-05, 5.0943999999997214e-05, 5.15270000000026e-05, 5.129099999999845e-05, 5.144400000000118e-05, 5.12080000000005e-05, 5.083300000000013e-05]</msg>
<status status="PASS" starttime="20201030 15:52:25.311" endtime="20201030 15:52:25.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.302" endtime="20201030 15:52:25.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.323" endtime="20201030 15:52:25.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.322" endtime="20201030 15:52:25.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.321" endtime="20201030 15:52:25.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.917" endtime="20201030 15:52:25.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.916" endtime="20201030 15:52:25.344"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.353" endtime="20201030 15:52:25.371"></status>
</kw>
<msg timestamp="20201030 15:52:25.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.351" endtime="20201030 15:52:25.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.372" endtime="20201030 15:52:25.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.375" endtime="20201030 15:52:25.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.349" endtime="20201030 15:52:25.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.346" endtime="20201030 15:52:25.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.384" endtime="20201030 15:52:25.668"></status>
</kw>
<msg timestamp="20201030 15:52:25.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.382" endtime="20201030 15:52:25.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.673" endtime="20201030 15:52:25.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.681" endtime="20201030 15:52:25.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.380" endtime="20201030 15:52:25.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.378" endtime="20201030 15:52:25.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.687" level="INFO">${RESULT} = [{'diff': 5.183299999999766e-05}, {'diff': 5.234699999999773e-05}, {'diff': 5.233300000000163e-05}, {'diff': 5.229199999999892e-05}, {'diff': 5.243100000000209e-05}, {'diff': 5.1957999999997784e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:25.684" endtime="20201030 15:52:25.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.692" level="INFO">${ACCURACY} = {'diff': [5.183299999999766e-05, 5.234699999999773e-05, 5.233300000000163e-05, 5.229199999999892e-05, 5.243100000000209e-05, 5.1957999999997784e-05, 5.20279999999991e-05, 5.25279999999996e-05, 5.17220...</msg>
<status status="PASS" starttime="20201030 15:52:25.688" endtime="20201030 15:52:25.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.697" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.696" endtime="20201030 15:52:25.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.700" level="INFO">VALUE: [5.183299999999766e-05, 5.234699999999773e-05, 5.233300000000163e-05, 5.229199999999892e-05, 5.243100000000209e-05, 5.1957999999997784e-05, 5.20279999999991e-05, 5.25279999999996e-05, 5.172200000000057e-05, 5.174999999999971e-05, 5.211099999999705e-05, 5.258400000000135e-05, 5.202699999999963e-05, 5.232000000000153e-05, 5.215299999999923e-05, 5.2235999999997174e-05, 5.190300000000245e-05, 5.208399999999738e-05, 5.205600000000171e-05, 5.197200000000082e-05, 5.233299999999816e-05, 5.263900000000016e-05, 5.230500000000249e-05, 5.2179999999998894e-05, 5.227799999999935e-05, 5.206899999999834e-05, 5.219400000000193e-05, 5.236100000000077e-05, 5.20279999999991e-05, 5.226399999999978e-05, 5.213899999999966e-05, 5.255500000000274e-05, 5.252800000000307e-05, 5.19730000000003e-05, 5.176399999999928e-05, 5.236200000000024e-05, 5.255599999999874e-05, 5.1901999999999504e-05, 5.2249999999996743e-05, 5.258299999999841e-05, 5.1652000000002724e-05, 5.238899999999991e-05, 5.229200000000239e-05, 5.191699999999855e-05, 5.25279999999996e-05, 5.223600000000064e-05, 5.247200000000132e-05, 5.208300000000138e-05, 5.241700000000252e-05, 5.244499999999819e-05]</msg>
<status status="PASS" starttime="20201030 15:52:25.698" endtime="20201030 15:52:25.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.693" endtime="20201030 15:52:25.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.704" endtime="20201030 15:52:25.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.703" endtime="20201030 15:52:25.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.702" endtime="20201030 15:52:25.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.345" endtime="20201030 15:52:25.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.344" endtime="20201030 15:52:25.725"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.734" endtime="20201030 15:52:25.752"></status>
</kw>
<msg timestamp="20201030 15:52:25.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.732" endtime="20201030 15:52:25.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.754" endtime="20201030 15:52:25.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.756" endtime="20201030 15:52:25.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.730" endtime="20201030 15:52:25.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.727" endtime="20201030 15:52:25.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.765" endtime="20201030 15:52:26.054"></status>
</kw>
<msg timestamp="20201030 15:52:26.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019463431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019516583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.764" endtime="20201030 15:52:26.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019463431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019516583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.059" endtime="20201030 15:52:26.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.067" endtime="20201030 15:52:26.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.761" endtime="20201030 15:52:26.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.760" endtime="20201030 15:52:26.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.074" level="INFO">${RESULT} = [{'diff': 5.3152000000000754e-05}, {'diff': 5.3166000000000324e-05}, {'diff': 5.313900000000066e-05}, {'diff': 5.330500000000002e-05}, {'diff': 5.315300000000023e-05}, {'diff': 5.31669999999998e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:26.070" endtime="20201030 15:52:26.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.078" level="INFO">${ACCURACY} = {'diff': [5.3152000000000754e-05, 5.3166000000000324e-05, 5.313900000000066e-05, 5.330500000000002e-05, 5.315300000000023e-05, 5.31669999999998e-05, 5.3471999999998854e-05, 5.276400000000028e-05, 5.35...</msg>
<status status="PASS" starttime="20201030 15:52:26.075" endtime="20201030 15:52:26.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.082" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.081" endtime="20201030 15:52:26.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.085" level="INFO">VALUE: [5.3152000000000754e-05, 5.3166000000000324e-05, 5.313900000000066e-05, 5.330500000000002e-05, 5.315300000000023e-05, 5.31669999999998e-05, 5.3471999999998854e-05, 5.276400000000028e-05, 5.3513999999997564e-05, 5.326400000000078e-05, 5.337500000000134e-05, 5.287499999999737e-05, 5.322200000000207e-05, 5.283399999999813e-05, 5.311100000000152e-05, 5.338900000000091e-05, 5.345899999999876e-05, 5.357000000000278e-05, 5.356900000000331e-05, 5.290299999999998e-05, 5.326300000000131e-05, 5.369500000000291e-05, 5.297200000000182e-05, 5.300000000000096e-05, 5.2929999999999644e-05, 5.283300000000213e-05, 5.2721999999998104e-05, 5.277799999999985e-05, 5.25279999999996e-05, 5.309700000000195e-05, 5.333299999999916e-05, 5.3443999999999714e-05, 5.309700000000195e-05, 5.336200000000124e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.337499999999787e-05, 5.30280000000001e-05, 5.320900000000198e-05, 5.312500000000109e-05, 5.281999999999856e-05, 5.28470000000017e-05, 5.336100000000177e-05, 5.288900000000041e-05, 5.2902000000000504e-05, 5.36670000000003e-05, 5.329199999999992e-05, 5.268100000000234e-05, 5.331899999999959e-05, 5.306899999999934e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.083" endtime="20201030 15:52:26.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.079" endtime="20201030 15:52:26.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.090" endtime="20201030 15:52:26.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.088" endtime="20201030 15:52:26.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.087" endtime="20201030 15:52:26.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.726" endtime="20201030 15:52:26.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.725" endtime="20201030 15:52:26.110"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.119" endtime="20201030 15:52:26.140"></status>
</kw>
<msg timestamp="20201030 15:52:26.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.118" endtime="20201030 15:52:26.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.142" endtime="20201030 15:52:26.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.144" endtime="20201030 15:52:26.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.115" endtime="20201030 15:52:26.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.113" endtime="20201030 15:52:26.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.154" endtime="20201030 15:52:26.440"></status>
</kw>
<msg timestamp="20201030 15:52:26.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021011403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021065653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.152" endtime="20201030 15:52:26.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021011403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021065653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.445" endtime="20201030 15:52:26.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.453" endtime="20201030 15:52:26.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.149" endtime="20201030 15:52:26.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.148" endtime="20201030 15:52:26.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.460" level="INFO">${RESULT} = [{'diff': 5.4249999999998744e-05}, {'diff': 5.38479999999987e-05}, {'diff': 5.412499999999862e-05}, {'diff': 5.443100000000062e-05}, {'diff': 5.3735999999998674e-05}, {'diff': 5.433399999999963e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:26.456" endtime="20201030 15:52:26.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.464" level="INFO">${ACCURACY} = {'diff': [5.4249999999998744e-05, 5.38479999999987e-05, 5.412499999999862e-05, 5.443100000000062e-05, 5.3735999999998674e-05, 5.433399999999963e-05, 5.402699999999816e-05, 5.444500000000019e-05, 5.452...</msg>
<status status="PASS" starttime="20201030 15:52:26.461" endtime="20201030 15:52:26.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.468" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.467" endtime="20201030 15:52:26.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.471" level="INFO">VALUE: [5.4249999999998744e-05, 5.38479999999987e-05, 5.412499999999862e-05, 5.443100000000062e-05, 5.3735999999998674e-05, 5.433399999999963e-05, 5.402699999999816e-05, 5.444500000000019e-05, 5.452699999999866e-05, 5.409699999999948e-05, 5.3944000000000214e-05, 5.441700000000105e-05, 5.4443999999997245e-05, 5.43609999999993e-05, 5.380499999999705e-05, 5.433300000000016e-05, 5.391700000000055e-05, 5.461100000000302e-05, 5.4208000000000034e-05, 5.394499999999969e-05, 5.443100000000062e-05, 5.437499999999887e-05, 5.376400000000128e-05, 5.38479999999987e-05, 5.370899999999901e-05, 5.444500000000019e-05, 5.375000000000171e-05, 5.401300000000206e-05, 5.4165999999997855e-05, 5.397200000000282e-05, 5.4651999999998785e-05, 5.4415999999998105e-05, 5.4249999999998744e-05, 5.4235999999999174e-05, 5.384699999999923e-05, 5.434699999999973e-05, 5.438900000000191e-05, 5.3693999999999964e-05, 5.426400000000178e-05, 5.376400000000128e-05, 5.4458000000000284e-05, 5.433399999999963e-05, 5.4180000000000894e-05, 5.373699999999815e-05, 5.408399999999938e-05, 5.458399999999988e-05, 5.38609999999988e-05, 5.387499999999837e-05, 5.459699999999998e-05, 5.3693999999999964e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.469" endtime="20201030 15:52:26.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.465" endtime="20201030 15:52:26.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.479" endtime="20201030 15:52:26.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.476" endtime="20201030 15:52:26.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.474" endtime="20201030 15:52:26.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.111" endtime="20201030 15:52:26.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.111" endtime="20201030 15:52:26.500"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.509" endtime="20201030 15:52:26.528"></status>
</kw>
<msg timestamp="20201030 15:52:26.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.507" endtime="20201030 15:52:26.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.530" endtime="20201030 15:52:26.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.532" endtime="20201030 15:52:26.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.505" endtime="20201030 15:52:26.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.503" endtime="20201030 15:52:26.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.541" endtime="20201030 15:52:26.827"></status>
</kw>
<msg timestamp="20201030 15:52:26.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019674889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.540" endtime="20201030 15:52:26.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019674889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.831" endtime="20201030 15:52:26.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.839" endtime="20201030 15:52:26.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.537" endtime="20201030 15:52:26.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.535" endtime="20201030 15:52:26.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.846" level="INFO">${RESULT} = [{'diff': 5.5236000000000174e-05}, {'diff': 5.480600000000099e-05}, {'diff': 5.504200000000167e-05}, {'diff': 5.4901999999999035e-05}, {'diff': 5.554200000000217e-05}, {'diff': 5.565299999999926e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:26.843" endtime="20201030 15:52:26.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.851" level="INFO">${ACCURACY} = {'diff': [5.5236000000000174e-05, 5.480600000000099e-05, 5.504200000000167e-05, 5.4901999999999035e-05, 5.554200000000217e-05, 5.565299999999926e-05, 5.495900000000026e-05, 5.480499999999805e-05, 5.52...</msg>
<status status="PASS" starttime="20201030 15:52:26.847" endtime="20201030 15:52:26.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.856" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.855" endtime="20201030 15:52:26.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.858" level="INFO">VALUE: [5.5236000000000174e-05, 5.480600000000099e-05, 5.504200000000167e-05, 5.4901999999999035e-05, 5.554200000000217e-05, 5.565299999999926e-05, 5.495900000000026e-05, 5.480499999999805e-05, 5.526299999999984e-05, 5.4985999999999924e-05, 5.5429999999998675e-05, 5.5652000000003254e-05, 5.4722000000000104e-05, 5.4930000000001644e-05, 5.5166000000002324e-05, 5.530500000000202e-05, 5.479200000000142e-05, 5.4999999999999494e-05, 5.511100000000005e-05, 5.509700000000048e-05, 5.505599999999777e-05, 5.527800000000235e-05, 5.482000000000056e-05, 5.540299999999901e-05, 5.545900000000076e-05, 5.541700000000205e-05, 5.5305999999998023e-05, 5.561099999999708e-05, 5.494500000000069e-05, 5.4972000000000354e-05, 5.511100000000005e-05, 5.554099999999923e-05, 5.5486000000000424e-05, 5.490299999999851e-05, 5.50280000000021e-05, 5.513899999999919e-05, 5.508300000000091e-05, 5.538899999999944e-05, 5.484699999999676e-05, 5.5207999999997565e-05, 5.5277999999998884e-05, 5.5027999999998634e-05, 5.4999999999999494e-05, 5.518100000000137e-05, 5.520900000000051e-05, 5.563900000000316e-05, 5.5693999999998495e-05, 5.562500000000012e-05, 5.481999999999709e-05, 5.511100000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.857" endtime="20201030 15:52:26.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.852" endtime="20201030 15:52:26.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.863" endtime="20201030 15:52:26.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.862" endtime="20201030 15:52:26.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.860" endtime="20201030 15:52:26.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.501" endtime="20201030 15:52:26.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.501" endtime="20201030 15:52:26.884"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.892" endtime="20201030 15:52:26.911"></status>
</kw>
<msg timestamp="20201030 15:52:26.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.891" endtime="20201030 15:52:26.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.912" endtime="20201030 15:52:26.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.915" endtime="20201030 15:52:26.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.888" endtime="20201030 15:52:26.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.886" endtime="20201030 15:52:26.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.924" endtime="20201030 15:52:27.212"></status>
</kw>
<msg timestamp="20201030 15:52:27.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.922" endtime="20201030 15:52:27.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.216" endtime="20201030 15:52:27.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.225" endtime="20201030 15:52:27.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.920" endtime="20201030 15:52:27.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.918" endtime="20201030 15:52:27.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.231" level="INFO">${RESULT} = [{'diff': 5.6250000000000744e-05}, {'diff': 5.663900000000069e-05}, {'diff': 5.6041999999999204e-05}, {'diff': 5.584700000000123e-05}, {'diff': 5.595900000000126e-05}, {'diff': 5.5986000000000924e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:27.228" endtime="20201030 15:52:27.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.235" level="INFO">${ACCURACY} = {'diff': [5.6250000000000744e-05, 5.663900000000069e-05, 5.6041999999999204e-05, 5.584700000000123e-05, 5.595900000000126e-05, 5.5986000000000924e-05, 5.563899999999969e-05, 5.6027999999999634e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:27.232" endtime="20201030 15:52:27.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.240" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.239" endtime="20201030 15:52:27.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.242" level="INFO">VALUE: [5.6250000000000744e-05, 5.663900000000069e-05, 5.6041999999999204e-05, 5.584700000000123e-05, 5.595900000000126e-05, 5.5986000000000924e-05, 5.563899999999969e-05, 5.6027999999999634e-05, 5.607000000000181e-05, 5.6165999999999855e-05, 5.6222000000001604e-05, 5.580499999999905e-05, 5.5915999999999605e-05, 5.5694000000001964e-05, 5.6514000000000564e-05, 5.604099999999973e-05, 5.640300000000001e-05, 5.6429999999999675e-05, 5.659700000000198e-05, 5.609699999999801e-05, 5.6027999999999634e-05, 5.6264000000000314e-05, 5.58749999999969e-05, 5.5707999999998065e-05, 5.6222000000001604e-05, 5.632000000000206e-05, 5.662500000000112e-05, 5.558399999999741e-05, 5.665300000000026e-05, 5.588899999999994e-05, 5.6014000000000064e-05, 5.6401999999997066e-05, 5.6486000000001424e-05, 5.63610000000013e-05, 5.638900000000044e-05, 5.608300000000191e-05, 5.63610000000013e-05, 5.6528000000000134e-05, 5.6513999999997094e-05, 5.6528000000000134e-05, 5.6207999999998565e-05, 5.608299999999844e-05, 5.659700000000198e-05, 5.608399999999791e-05, 5.645900000000176e-05, 5.6319999999998593e-05, 5.640300000000001e-05, 5.629099999999998e-05, 5.6235999999997704e-05, 5.643099999999915e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.241" endtime="20201030 15:52:27.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.236" endtime="20201030 15:52:27.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.247" endtime="20201030 15:52:27.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.246" endtime="20201030 15:52:27.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.244" endtime="20201030 15:52:27.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.885" endtime="20201030 15:52:27.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.884" endtime="20201030 15:52:27.268"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.276" endtime="20201030 15:52:27.296"></status>
</kw>
<msg timestamp="20201030 15:52:27.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.275" endtime="20201030 15:52:27.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.297" endtime="20201030 15:52:27.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.300" endtime="20201030 15:52:27.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.272" endtime="20201030 15:52:27.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.270" endtime="20201030 15:52:27.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.309" endtime="20201030 15:52:27.595"></status>
</kw>
<msg timestamp="20201030 15:52:27.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020364847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.308" endtime="20201030 15:52:27.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020364847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.600" endtime="20201030 15:52:27.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.608" endtime="20201030 15:52:27.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.305" endtime="20201030 15:52:27.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.303" endtime="20201030 15:52:27.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.615" level="INFO">${RESULT} = [{'diff': 5.744500000000319e-05}, {'diff': 5.754100000000123e-05}, {'diff': 5.7528000000001134e-05}, {'diff': 5.6735999999998205e-05}, {'diff': 5.690300000000051e-05}, {'diff': 5.7444000000000245e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:27.611" endtime="20201030 15:52:27.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.619" level="INFO">${ACCURACY} = {'diff': [5.744500000000319e-05, 5.754100000000123e-05, 5.7528000000001134e-05, 5.6735999999998205e-05, 5.690300000000051e-05, 5.7444000000000245e-05, 5.7651999999998316e-05, 5.7207999999999565e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:52:27.616" endtime="20201030 15:52:27.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.623" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.622" endtime="20201030 15:52:27.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.626" level="INFO">VALUE: [5.744500000000319e-05, 5.754100000000123e-05, 5.7528000000001134e-05, 5.6735999999998205e-05, 5.690300000000051e-05, 5.7444000000000245e-05, 5.7651999999998316e-05, 5.7207999999999565e-05, 5.681899999999962e-05, 5.7416000000001105e-05, 5.7278000000000884e-05, 5.763899999999822e-05, 5.7485999999998955e-05, 5.740299999999754e-05, 5.690300000000051e-05, 5.706899999999987e-05, 5.711100000000205e-05, 5.743099999999668e-05, 5.690300000000051e-05, 5.745899999999929e-05, 5.747299999999886e-05, 5.7333999999999163e-05, 5.711099999999858e-05, 5.676299999999787e-05, 5.7387999999998496e-05, 5.731900000000012e-05, 5.6721999999998635e-05, 5.6721999999998635e-05, 5.7264000000001314e-05, 5.709699999999901e-05, 5.7264000000001314e-05, 5.6693999999999495e-05, 5.716700000000033e-05, 5.7263999999997844e-05, 5.6805999999999524e-05, 5.7236000000002174e-05, 5.738899999999797e-05, 5.759800000000245e-05, 5.713899999999772e-05, 5.7236000000002174e-05, 5.683400000000213e-05, 5.7151999999997816e-05, 5.6957999999999315e-05, 5.730500000000055e-05, 5.7500000000001994e-05, 5.7444000000000245e-05, 5.713900000000119e-05, 5.7444000000000245e-05, 5.7221999999999135e-05, 5.6791999999999954e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.624" endtime="20201030 15:52:27.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.620" endtime="20201030 15:52:27.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.631" endtime="20201030 15:52:27.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.630" endtime="20201030 15:52:27.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.629" endtime="20201030 15:52:27.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.269" endtime="20201030 15:52:27.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.268" endtime="20201030 15:52:27.652"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.661" endtime="20201030 15:52:27.680"></status>
</kw>
<msg timestamp="20201030 15:52:27.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.659" endtime="20201030 15:52:27.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.682" endtime="20201030 15:52:27.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.684" endtime="20201030 15:52:27.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.657" endtime="20201030 15:52:27.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.655" endtime="20201030 15:52:27.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.693" endtime="20201030 15:52:27.979"></status>
</kw>
<msg timestamp="20201030 15:52:27.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019572181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.691" endtime="20201030 15:52:27.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019572181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.983" endtime="20201030 15:52:27.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.991" endtime="20201030 15:52:27.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.689" endtime="20201030 15:52:27.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.687" endtime="20201030 15:52:27.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.998" level="INFO">${RESULT} = [{'diff': 5.809700000000001e-05}, {'diff': 5.7806000000000524e-05}, {'diff': 5.866699999999836e-05}, {'diff': 5.786099999999933e-05}, {'diff': 5.8028000000001634e-05}, {'diff': 5.8542000000001704e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:27.995" endtime="20201030 15:52:27.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.003" level="INFO">${ACCURACY} = {'diff': [5.809700000000001e-05, 5.7806000000000524e-05, 5.866699999999836e-05, 5.786099999999933e-05, 5.8028000000001634e-05, 5.8542000000001704e-05, 5.8070000000000344e-05, 5.772300000000258e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:27.999" endtime="20201030 15:52:28.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.008" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.007" endtime="20201030 15:52:28.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.010" level="INFO">VALUE: [5.809700000000001e-05, 5.7806000000000524e-05, 5.866699999999836e-05, 5.786099999999933e-05, 5.8028000000001634e-05, 5.8542000000001704e-05, 5.8070000000000344e-05, 5.772300000000258e-05, 5.8263999999998844e-05, 5.8165999999998386e-05, 5.7901999999998566e-05, 5.827700000000241e-05, 5.783300000000019e-05, 5.7971999999999885e-05, 5.783300000000019e-05, 5.83749999999994e-05, 5.7971999999999885e-05, 5.863899999999922e-05, 5.815300000000176e-05, 5.7958000000000315e-05, 5.8542000000001704e-05, 5.8263999999998844e-05, 5.8194999999997e-05, 5.8249999999999275e-05, 5.7736000000002674e-05, 5.8263999999998844e-05, 5.793100000000065e-05, 5.790300000000151e-05, 5.784699999999976e-05, 5.788899999999847e-05, 5.8208000000000565e-05, 5.8014000000002064e-05, 5.7721999999999635e-05, 5.791700000000108e-05, 5.8249999999999275e-05, 5.7985999999999455e-05, 5.859699999999704e-05, 5.8499999999999525e-05, 5.858300000000094e-05, 5.8472000000000385e-05, 5.783300000000019e-05, 5.784700000000323e-05, 5.8570000000000844e-05, 5.815300000000176e-05, 5.8027999999998164e-05, 5.815299999999829e-05, 5.8013999999998594e-05, 5.7916000000001605e-05, 5.8013999999998594e-05, 5.859699999999704e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.009" endtime="20201030 15:52:28.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.004" endtime="20201030 15:52:28.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.021" endtime="20201030 15:52:28.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.019" endtime="20201030 15:52:28.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.018" endtime="20201030 15:52:28.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.653" endtime="20201030 15:52:28.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.653" endtime="20201030 15:52:28.042"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.050" endtime="20201030 15:52:28.069"></status>
</kw>
<msg timestamp="20201030 15:52:28.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.049" endtime="20201030 15:52:28.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.071" endtime="20201030 15:52:28.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.073" endtime="20201030 15:52:28.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.046" endtime="20201030 15:52:28.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.044" endtime="20201030 15:52:28.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.082" endtime="20201030 15:52:28.368"></status>
</kw>
<msg timestamp="20201030 15:52:28.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019581278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.081" endtime="20201030 15:52:28.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019581278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.373" endtime="20201030 15:52:28.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.381" endtime="20201030 15:52:28.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.078" endtime="20201030 15:52:28.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.076" endtime="20201030 15:52:28.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.387" level="INFO">${RESULT} = [{'diff': 5.890299999999904e-05}, {'diff': 5.8777999999998914e-05}, {'diff': 5.938899999999997e-05}, {'diff': 5.8708000000001065e-05}, {'diff': 5.9070000000001344e-05}, {'diff': 5.9278000000002884e-05...</msg>
<status status="PASS" starttime="20201030 15:52:28.384" endtime="20201030 15:52:28.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.392" level="INFO">${ACCURACY} = {'diff': [5.890299999999904e-05, 5.8777999999998914e-05, 5.938899999999997e-05, 5.8708000000001065e-05, 5.9070000000001344e-05, 5.9278000000002884e-05, 5.959700000000151e-05, 5.9652000000000316e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:52:28.388" endtime="20201030 15:52:28.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.396" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.395" endtime="20201030 15:52:28.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.399" level="INFO">VALUE: [5.890299999999904e-05, 5.8777999999998914e-05, 5.938899999999997e-05, 5.8708000000001065e-05, 5.9070000000001344e-05, 5.9278000000002884e-05, 5.959700000000151e-05, 5.9652000000000316e-05, 5.8722000000000635e-05, 5.8763999999999345e-05, 5.891699999999861e-05, 5.88749999999999e-05, 5.965299999999979e-05, 5.9193999999998526e-05, 5.870900000000054e-05, 5.913899999999972e-05, 5.86949999999975e-05, 5.9235999999997235e-05, 5.9056000000001774e-05, 5.9348000000000734e-05, 5.9041999999998734e-05, 5.9027999999999164e-05, 5.9429999999999206e-05, 5.8820000000001094e-05, 5.955499999999933e-05, 5.911100000000058e-05, 5.908299999999797e-05, 5.93750000000004e-05, 5.9514000000000095e-05, 5.966699999999936e-05, 5.890299999999904e-05, 5.913899999999972e-05, 5.9458000000001815e-05, 5.8791999999998484e-05, 5.9056000000001774e-05, 5.9457999999998346e-05, 5.965299999999979e-05, 5.8777999999998914e-05, 5.8556000000001274e-05, 5.947299999999739e-05, 5.8848000000000233e-05, 5.8986000000000455e-05, 5.948700000000043e-05, 5.884700000000076e-05, 5.902699999999969e-05, 5.8721999999997165e-05, 5.8986000000000455e-05, 5.893100000000165e-05, 5.890299999999904e-05, 5.931900000000212e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.397" endtime="20201030 15:52:28.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.392" endtime="20201030 15:52:28.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.404" endtime="20201030 15:52:28.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.402" endtime="20201030 15:52:28.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.401" endtime="20201030 15:52:28.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.042" endtime="20201030 15:52:28.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.042" endtime="20201030 15:52:28.424"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.433" endtime="20201030 15:52:28.453"></status>
</kw>
<msg timestamp="20201030 15:52:28.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.431" endtime="20201030 15:52:28.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.455" endtime="20201030 15:52:28.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.457" endtime="20201030 15:52:28.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.429" endtime="20201030 15:52:28.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.427" endtime="20201030 15:52:28.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.466" endtime="20201030 15:52:28.752"></status>
</kw>
<msg timestamp="20201030 15:52:28.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020408597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020468417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.465" endtime="20201030 15:52:28.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020408597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020468417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.757" endtime="20201030 15:52:28.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.765" endtime="20201030 15:52:28.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.462" endtime="20201030 15:52:28.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.460" endtime="20201030 15:52:28.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.772" level="INFO">${RESULT} = [{'diff': 5.9819999999998624e-05}, {'diff': 6.0457999999999346e-05}, {'diff': 5.9833999999998194e-05}, {'diff': 6.040300000000054e-05}, {'diff': 5.966700000000283e-05}, {'diff': 6.0542000000000235e-05...</msg>
<status status="PASS" starttime="20201030 15:52:28.769" endtime="20201030 15:52:28.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.776" level="INFO">${ACCURACY} = {'diff': [5.9819999999998624e-05, 6.0457999999999346e-05, 5.9833999999998194e-05, 6.040300000000054e-05, 5.966700000000283e-05, 6.0542000000000235e-05, 5.9929999999999706e-05, 6.012500000000115e-05, 6...</msg>
<status status="PASS" starttime="20201030 15:52:28.773" endtime="20201030 15:52:28.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.780" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.779" endtime="20201030 15:52:28.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.783" level="INFO">VALUE: [5.9819999999998624e-05, 6.0457999999999346e-05, 5.9833999999998194e-05, 6.040300000000054e-05, 5.966700000000283e-05, 6.0542000000000235e-05, 5.9929999999999706e-05, 6.012500000000115e-05, 6.0138000000001246e-05, 6.040300000000054e-05, 6.0430000000000206e-05, 5.9777999999999915e-05, 6.058299999999947e-05, 6.0278000000000415e-05, 5.9777999999999915e-05, 6.015299999999682e-05, 5.9722000000001635e-05, 5.9777999999999915e-05, 5.991699999999961e-05, 5.986100000000133e-05, 6.0584000000002414e-05, 6.015300000000029e-05, 6.0347999999998264e-05, 6.0249999999997805e-05, 5.9763999999996875e-05, 6.0542000000000235e-05, 5.984700000000176e-05, 6.0152000000000816e-05, 5.9708000000002065e-05, 6.043099999999968e-05, 6.066700000000036e-05, 6.065299999999732e-05, 6.0514000000001095e-05, 6.0291999999999984e-05, 6.058300000000294e-05, 5.9943999999999276e-05, 5.986100000000133e-05, 5.9791999999999484e-05, 5.986100000000133e-05, 6.0612000000001554e-05, 5.972299999999764e-05, 6.0583999999998944e-05, 6.0014000000000595e-05, 5.9749999999997305e-05, 5.970900000000154e-05, 6.006900000000287e-05, 5.983299999999872e-05, 5.9957999999998846e-05, 6.0291999999999984e-05, 6.0278000000000415e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.781" endtime="20201030 15:52:28.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.777" endtime="20201030 15:52:28.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.789" endtime="20201030 15:52:28.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.787" endtime="20201030 15:52:28.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.786" endtime="20201030 15:52:28.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.425" endtime="20201030 15:52:28.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.425" endtime="20201030 15:52:28.809"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.818" endtime="20201030 15:52:28.837"></status>
</kw>
<msg timestamp="20201030 15:52:28.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.816" endtime="20201030 15:52:28.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.839" endtime="20201030 15:52:28.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.841" endtime="20201030 15:52:28.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.814" endtime="20201030 15:52:28.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.812" endtime="20201030 15:52:28.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.850" endtime="20201030 15:52:29.136"></status>
</kw>
<msg timestamp="20201030 15:52:29.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01956025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019621528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:28.849" endtime="20201030 15:52:29.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01956025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019621528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:29.140" endtime="20201030 15:52:29.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.149" endtime="20201030 15:52:29.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.846" endtime="20201030 15:52:29.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.844" endtime="20201030 15:52:29.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.155" level="INFO">${RESULT} = [{'diff': 6.127799999999795e-05}, {'diff': 6.1000000000002025e-05}, {'diff': 6.154200000000123e-05}, {'diff': 6.148599999999949e-05}, {'diff': 6.108399999999944e-05}, {'diff': 6.077700000000144e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:29.152" endtime="20201030 15:52:29.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.160" level="INFO">${ACCURACY} = {'diff': [6.127799999999795e-05, 6.1000000000002025e-05, 6.154200000000123e-05, 6.148599999999949e-05, 6.108399999999944e-05, 6.077700000000144e-05, 6.131899999999718e-05, 6.136099999999936e-05, 6.126...</msg>
<status status="PASS" starttime="20201030 15:52:29.156" endtime="20201030 15:52:29.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.165" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.164" endtime="20201030 15:52:29.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.168" level="INFO">VALUE: [6.127799999999795e-05, 6.1000000000002025e-05, 6.154200000000123e-05, 6.148599999999949e-05, 6.108399999999944e-05, 6.077700000000144e-05, 6.131899999999718e-05, 6.136099999999936e-05, 6.126399999999838e-05, 6.12080000000001e-05, 6.084699999999929e-05, 6.15140000000021e-05, 6.112500000000215e-05, 6.090300000000104e-05, 6.12499999999988e-05, 6.130600000000055e-05, 6.140300000000154e-05, 6.086099999999886e-05, 6.155500000000133e-05, 6.109799999999901e-05, 6.0985999999998985e-05, 6.104200000000073e-05, 6.152800000000166e-05, 6.077700000000144e-05, 6.163800000000275e-05, 6.117999999999749e-05, 6.131900000000065e-05, 6.084699999999929e-05, 6.127700000000194e-05, 6.159700000000004e-05, 6.151399999999863e-05, 6.116700000000086e-05, 6.140300000000154e-05, 6.0957999999999846e-05, 6.127799999999795e-05, 6.147199999999992e-05, 6.141700000000111e-05, 6.115299999999782e-05, 6.1028000000001165e-05, 6.113900000000172e-05, 6.140300000000154e-05, 6.0999999999998555e-05, 6.126399999999838e-05, 6.111099999999911e-05, 6.12080000000001e-05, 6.105500000000083e-05, 6.129100000000151e-05, 6.145800000000035e-05, 6.159700000000004e-05, 6.0721999999999166e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.167" endtime="20201030 15:52:29.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.161" endtime="20201030 15:52:29.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.174" endtime="20201030 15:52:29.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.172" endtime="20201030 15:52:29.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.171" endtime="20201030 15:52:29.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.810" endtime="20201030 15:52:29.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.810" endtime="20201030 15:52:29.195"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.203" endtime="20201030 15:52:29.224"></status>
</kw>
<msg timestamp="20201030 15:52:29.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.202" endtime="20201030 15:52:29.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.225" endtime="20201030 15:52:29.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.228" endtime="20201030 15:52:29.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.199" endtime="20201030 15:52:29.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.197" endtime="20201030 15:52:29.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.237" endtime="20201030 15:52:29.523"></status>
</kw>
<msg timestamp="20201030 15:52:29.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.235" endtime="20201030 15:52:29.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.527" endtime="20201030 15:52:29.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.536" endtime="20201030 15:52:29.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.233" endtime="20201030 15:52:29.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.231" endtime="20201030 15:52:29.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.542" level="INFO">${RESULT} = [{'diff': 6.179199999999802e-05}, {'diff': 6.23340000000007e-05}, {'diff': 6.215300000000229e-05}, {'diff': 6.24019999999996e-05}, {'diff': 6.213900000000272e-05}, {'diff': 6.251399999999963e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:29.539" endtime="20201030 15:52:29.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.546" level="INFO">${ACCURACY} = {'diff': [6.179199999999802e-05, 6.23340000000007e-05, 6.215300000000229e-05, 6.24019999999996e-05, 6.213900000000272e-05, 6.251399999999963e-05, 6.245800000000135e-05, 6.23889999999995e-05, 6.2374999...</msg>
<status status="PASS" starttime="20201030 15:52:29.543" endtime="20201030 15:52:29.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.551" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.550" endtime="20201030 15:52:29.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.553" level="INFO">VALUE: [6.179199999999802e-05, 6.23340000000007e-05, 6.215300000000229e-05, 6.24019999999996e-05, 6.213900000000272e-05, 6.251399999999963e-05, 6.245800000000135e-05, 6.23889999999995e-05, 6.237499999999993e-05, 6.194400000000128e-05, 6.24439999999983e-05, 6.177800000000191e-05, 6.237499999999993e-05, 6.229200000000198e-05, 6.191700000000161e-05, 6.168100000000093e-05, 6.199999999999956e-05, 6.184799999999976e-05, 6.22499999999998e-05, 6.197200000000042e-05, 6.245900000000082e-05, 6.172200000000017e-05, 6.186099999999986e-05, 6.1888999999999e-05, 6.213899999999925e-05, 6.259700000000104e-05, 6.169400000000103e-05, 6.20829999999975e-05, 6.223600000000024e-05, 6.218100000000143e-05, 6.240299999999907e-05, 6.1888999999999e-05, 6.251399999999963e-05, 6.23889999999995e-05, 6.199999999999956e-05, 6.243100000000168e-05, 6.17499999999993e-05, 6.237499999999993e-05, 6.22219999999972e-05, 6.168000000000146e-05, 6.263899999999975e-05, 6.181900000000115e-05, 6.226400000000284e-05, 6.233299999999775e-05, 6.22219999999972e-05, 6.169400000000103e-05, 6.206899999999793e-05, 6.208300000000097e-05, 6.25560000000018e-05, 6.17080000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.552" endtime="20201030 15:52:29.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.547" endtime="20201030 15:52:29.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.558" endtime="20201030 15:52:29.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.557" endtime="20201030 15:52:29.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.556" endtime="20201030 15:52:29.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.195" endtime="20201030 15:52:29.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.195" endtime="20201030 15:52:29.579"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.588" endtime="20201030 15:52:29.608"></status>
</kw>
<msg timestamp="20201030 15:52:29.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.586" endtime="20201030 15:52:29.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.609" endtime="20201030 15:52:29.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.612" endtime="20201030 15:52:29.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.584" endtime="20201030 15:52:29.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.581" endtime="20201030 15:52:29.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.621" endtime="20201030 15:52:29.908"></status>
</kw>
<msg timestamp="20201030 15:52:29.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020466222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020529069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.619" endtime="20201030 15:52:29.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020466222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020529069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.912" endtime="20201030 15:52:29.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.921" endtime="20201030 15:52:29.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.617" endtime="20201030 15:52:29.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.615" endtime="20201030 15:52:29.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.927" level="INFO">${RESULT} = [{'diff': 6.284700000000129e-05}, {'diff': 6.334700000000179e-05}, {'diff': 6.301400000000013e-05}, {'diff': 6.304099999999979e-05}, {'diff': 6.354199999999977e-05}, {'diff': 6.295800000000185e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:29.924" endtime="20201030 15:52:29.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.931" level="INFO">${ACCURACY} = {'diff': [6.284700000000129e-05, 6.334700000000179e-05, 6.301400000000013e-05, 6.304099999999979e-05, 6.354199999999977e-05, 6.295800000000185e-05, 6.370900000000207e-05, 6.330600000000255e-05, 6.2916...</msg>
<status status="PASS" starttime="20201030 15:52:29.928" endtime="20201030 15:52:29.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.936" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.935" endtime="20201030 15:52:29.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.938" level="INFO">VALUE: [6.284700000000129e-05, 6.334700000000179e-05, 6.301400000000013e-05, 6.304099999999979e-05, 6.354199999999977e-05, 6.295800000000185e-05, 6.370900000000207e-05, 6.330600000000255e-05, 6.291699999999914e-05, 6.26950000000015e-05, 6.276399999999988e-05, 6.27219999999977e-05, 6.329199999999952e-05, 6.331999999999866e-05, 6.326400000000038e-05, 6.329100000000004e-05, 6.32080000000021e-05, 6.313900000000025e-05, 6.337500000000093e-05, 6.29439999999988e-05, 6.359700000000204e-05, 6.333399999999823e-05, 6.269399999999856e-05, 6.27219999999977e-05, 6.30279999999997e-05, 6.336100000000136e-05, 6.281899999999868e-05, 6.30829999999985e-05, 6.301400000000013e-05, 6.347199999999845e-05, 6.302800000000316e-05, 6.365300000000032e-05, 6.35280000000002e-05, 6.334700000000179e-05, 6.32630000000009e-05, 6.283300000000172e-05, 6.301400000000013e-05, 6.306899999999893e-05, 6.342999999999974e-05, 6.298600000000099e-05, 6.337500000000093e-05, 6.331899999999918e-05, 6.358300000000247e-05, 6.2889e-05, 6.32500000000008e-05, 6.355599999999934e-05, 6.282000000000162e-05, 6.327799999999995e-05, 6.33890000000005e-05, 6.320900000000157e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.937" endtime="20201030 15:52:29.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.932" endtime="20201030 15:52:29.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.944" endtime="20201030 15:52:29.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.942" endtime="20201030 15:52:29.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.941" endtime="20201030 15:52:29.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.580" endtime="20201030 15:52:29.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.579" endtime="20201030 15:52:29.965"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.973" endtime="20201030 15:52:29.992"></status>
</kw>
<msg timestamp="20201030 15:52:29.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.972" endtime="20201030 15:52:29.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.993" endtime="20201030 15:52:29.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.996" endtime="20201030 15:52:29.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.969" endtime="20201030 15:52:29.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.967" endtime="20201030 15:52:29.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.005" endtime="20201030 15:52:30.290"></status>
</kw>
<msg timestamp="20201030 15:52:30.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019603347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.003" endtime="20201030 15:52:30.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019603347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.294" endtime="20201030 15:52:30.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.303" endtime="20201030 15:52:30.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.001" endtime="20201030 15:52:30.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.999" endtime="20201030 15:52:30.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.309" level="INFO">${RESULT} = [{'diff': 6.4583e-05}, {'diff': 6.409700000000254e-05}, {'diff': 6.409699999999907e-05}, {'diff': 6.383399999999873e-05}, {'diff': 6.395800000000285e-05}, {'diff': 6.429199999999705e-05}, {'diff': 6.4...</msg>
<status status="PASS" starttime="20201030 15:52:30.306" endtime="20201030 15:52:30.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.314" level="INFO">${ACCURACY} = {'diff': [6.4583e-05, 6.409700000000254e-05, 6.409699999999907e-05, 6.383399999999873e-05, 6.395800000000285e-05, 6.429199999999705e-05, 6.427800000000095e-05, 6.409700000000254e-05, 6.426400000000138...</msg>
<status status="PASS" starttime="20201030 15:52:30.310" endtime="20201030 15:52:30.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.319" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.318" endtime="20201030 15:52:30.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.321" level="INFO">VALUE: [6.4583e-05, 6.409700000000254e-05, 6.409699999999907e-05, 6.383399999999873e-05, 6.395800000000285e-05, 6.429199999999705e-05, 6.427800000000095e-05, 6.409700000000254e-05, 6.426400000000138e-05, 6.398599999999852e-05, 6.377800000000045e-05, 6.415300000000082e-05, 6.45699999999999e-05, 6.445899999999935e-05, 6.440300000000107e-05, 6.38479999999983e-05, 6.42500000000018e-05, 6.413900000000125e-05, 6.419400000000006e-05, 6.415199999999788e-05, 6.4276999999998e-05, 6.437500000000193e-05, 6.404099999999732e-05, 6.40280000000007e-05, 6.387499999999796e-05, 6.406899999999993e-05, 6.459699999999957e-05, 6.418099999999996e-05, 6.409700000000254e-05, 6.387500000000143e-05, 6.409800000000201e-05, 6.411200000000158e-05, 6.468000000000099e-05, 6.404100000000079e-05, 6.433299999999975e-05, 6.416600000000092e-05, 6.386099999999839e-05, 6.4276999999998e-05, 6.40280000000007e-05, 6.415300000000082e-05, 6.42639999999979e-05, 6.40829999999995e-05, 6.424999999999834e-05, 6.468100000000046e-05, 6.436099999999889e-05, 6.370799999999913e-05, 6.427800000000095e-05, 6.42089999999991e-05, 6.366699999999989e-05, 6.397299999999842e-05]</msg>
<status status="PASS" starttime="20201030 15:52:30.320" endtime="20201030 15:52:30.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.315" endtime="20201030 15:52:30.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.326" endtime="20201030 15:52:30.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.325" endtime="20201030 15:52:30.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.324" endtime="20201030 15:52:30.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.965" endtime="20201030 15:52:30.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.965" endtime="20201030 15:52:30.347"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.356" endtime="20201030 15:52:30.375"></status>
</kw>
<msg timestamp="20201030 15:52:30.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.354" endtime="20201030 15:52:30.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.376" endtime="20201030 15:52:30.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.379" endtime="20201030 15:52:30.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.352" endtime="20201030 15:52:30.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.350" endtime="20201030 15:52:30.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.387" endtime="20201030 15:52:30.677"></status>
</kw>
<msg timestamp="20201030 15:52:30.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019716972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.386" endtime="20201030 15:52:30.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019716972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.681" endtime="20201030 15:52:30.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.689" endtime="20201030 15:52:30.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.383" endtime="20201030 15:52:30.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.382" endtime="20201030 15:52:30.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.696" level="INFO">${RESULT} = [{'diff': 6.498599999999952e-05}, {'diff': 6.541699999999817e-05}, {'diff': 6.565300000000232e-05}, {'diff': 6.541699999999817e-05}, {'diff': 6.49440000000008e-05}, {'diff': 6.565300000000232e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:30.693" endtime="20201030 15:52:30.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.700" level="INFO">${ACCURACY} = {'diff': [6.498599999999952e-05, 6.541699999999817e-05, 6.565300000000232e-05, 6.541699999999817e-05, 6.49440000000008e-05, 6.565300000000232e-05, 6.49440000000008e-05, 6.513900000000225e-05, 6.536199...</msg>
<status status="PASS" starttime="20201030 15:52:30.697" endtime="20201030 15:52:30.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.704" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.703" endtime="20201030 15:52:30.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.707" level="INFO">VALUE: [6.498599999999952e-05, 6.541699999999817e-05, 6.565300000000232e-05, 6.541699999999817e-05, 6.49440000000008e-05, 6.565300000000232e-05, 6.49440000000008e-05, 6.513900000000225e-05, 6.536199999999937e-05, 6.490300000000157e-05, 6.519500000000053e-05, 6.526299999999943e-05, 6.554100000000229e-05, 6.479100000000154e-05, 6.512499999999921e-05, 6.547200000000045e-05, 6.52500000000028e-05, 6.498599999999952e-05, 6.54440000000013e-05, 6.568100000000146e-05, 6.49029999999981e-05, 6.565299999999885e-05, 6.491700000000114e-05, 6.474999999999884e-05, 6.52220000000002e-05, 6.483300000000025e-05, 6.552799999999873e-05, 6.49159999999982e-05, 6.513899999999878e-05, 6.529099999999857e-05, 6.542999999999827e-05, 6.498599999999952e-05, 6.549999999999959e-05, 6.551399999999916e-05, 6.529199999999805e-05, 6.47639999999984e-05, 6.50419999999978e-05, 6.52500000000028e-05, 6.54440000000013e-05, 6.469500000000003e-05, 6.53890000000025e-05, 6.54029999999986e-05, 6.551399999999916e-05, 6.548700000000296e-05, 6.52090000000001e-05, 6.472300000000264e-05, 6.469500000000003e-05, 6.559700000000057e-05, 6.484700000000329e-05, 6.498599999999952e-05]</msg>
<status status="PASS" starttime="20201030 15:52:30.705" endtime="20201030 15:52:30.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.701" endtime="20201030 15:52:30.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.712" endtime="20201030 15:52:30.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.710" endtime="20201030 15:52:30.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.709" endtime="20201030 15:52:30.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.348" endtime="20201030 15:52:30.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.347" endtime="20201030 15:52:30.732"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.741" endtime="20201030 15:52:30.761"></status>
</kw>
<msg timestamp="20201030 15:52:30.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.739" endtime="20201030 15:52:30.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.763" endtime="20201030 15:52:30.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.765" endtime="20201030 15:52:30.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.737" endtime="20201030 15:52:30.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.735" endtime="20201030 15:52:30.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.774" endtime="20201030 15:52:31.059"></status>
</kw>
<msg timestamp="20201030 15:52:31.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020331153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020397389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.773" endtime="20201030 15:52:31.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020331153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020397389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.063" endtime="20201030 15:52:31.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.072" endtime="20201030 15:52:31.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.770" endtime="20201030 15:52:31.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.768" endtime="20201030 15:52:31.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.078" level="INFO">${RESULT} = [{'diff': 6.62359999999973e-05}, {'diff': 6.594399999999834e-05}, {'diff': 6.659800000000105e-05}, {'diff': 6.629199999999905e-05}, {'diff': 6.572300000000017e-05}, {'diff': 6.595899999999738e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:31.075" endtime="20201030 15:52:31.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.082" level="INFO">${ACCURACY} = {'diff': [6.62359999999973e-05, 6.594399999999834e-05, 6.659800000000105e-05, 6.629199999999905e-05, 6.572300000000017e-05, 6.595899999999738e-05, 6.663900000000028e-05, 6.577800000000245e-05, 6.63470...</msg>
<status status="PASS" starttime="20201030 15:52:31.079" endtime="20201030 15:52:31.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.087" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.086" endtime="20201030 15:52:31.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.089" level="INFO">VALUE: [6.62359999999973e-05, 6.594399999999834e-05, 6.659800000000105e-05, 6.629199999999905e-05, 6.572300000000017e-05, 6.595899999999738e-05, 6.663900000000028e-05, 6.577800000000245e-05, 6.634700000000132e-05, 6.644399999999884e-05, 6.62220000000012e-05, 6.60280000000027e-05, 6.659700000000157e-05, 6.580499999999864e-05, 6.630500000000261e-05, 6.654200000000277e-05, 6.579199999999855e-05, 6.647199999999798e-05, 6.652799999999973e-05, 6.60280000000027e-05, 6.577800000000245e-05, 6.666699999999942e-05, 6.64029999999996e-05, 6.597200000000095e-05, 6.643100000000221e-05, 6.647199999999798e-05, 6.650000000000059e-05, 6.576299999999993e-05, 6.597200000000095e-05, 6.64159999999997e-05, 6.633300000000175e-05, 6.595800000000138e-05, 6.665299999999985e-05, 6.597199999999748e-05, 6.625000000000034e-05, 6.630599999999862e-05, 6.60280000000027e-05, 6.579199999999855e-05, 6.591699999999867e-05, 6.608400000000098e-05, 6.64159999999997e-05, 6.569499999999756e-05, 6.608299999999803e-05, 6.62220000000012e-05, 6.576299999999993e-05, 6.651400000000016e-05, 6.619399999999859e-05, 6.620799999999816e-05, 6.62220000000012e-05, 6.652799999999973e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.088" endtime="20201030 15:52:31.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.083" endtime="20201030 15:52:31.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.095" endtime="20201030 15:52:31.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.094" endtime="20201030 15:52:31.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.092" endtime="20201030 15:52:31.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.733" endtime="20201030 15:52:31.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.733" endtime="20201030 15:52:31.116"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.124" endtime="20201030 15:52:31.144"></status>
</kw>
<msg timestamp="20201030 15:52:31.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.123" endtime="20201030 15:52:31.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.145" endtime="20201030 15:52:31.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.148" endtime="20201030 15:52:31.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.120" endtime="20201030 15:52:31.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.118" endtime="20201030 15:52:31.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.157" endtime="20201030 15:52:31.443"></status>
</kw>
<msg timestamp="20201030 15:52:31.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.155" endtime="20201030 15:52:31.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.447" endtime="20201030 15:52:31.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.455" endtime="20201030 15:52:31.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.153" endtime="20201030 15:52:31.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.151" endtime="20201030 15:52:31.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.462" level="INFO">${RESULT} = [{'diff': 6.720899999999863e-05}, {'diff': 6.666699999999942e-05}, {'diff': 6.74030000000006e-05}, {'diff': 6.695899999999838e-05}, {'diff': 6.666699999999942e-05}, {'diff': 6.740299999999713e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:31.459" endtime="20201030 15:52:31.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.467" level="INFO">${ACCURACY} = {'diff': [6.720899999999863e-05, 6.666699999999942e-05, 6.74030000000006e-05, 6.695899999999838e-05, 6.666699999999942e-05, 6.740299999999713e-05, 6.754100000000082e-05, 6.670800000000213e-05, 6.73469...</msg>
<status status="PASS" starttime="20201030 15:52:31.463" endtime="20201030 15:52:31.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.471" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.470" endtime="20201030 15:52:31.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.474" level="INFO">VALUE: [6.720899999999863e-05, 6.666699999999942e-05, 6.74030000000006e-05, 6.695899999999838e-05, 6.666699999999942e-05, 6.740299999999713e-05, 6.754100000000082e-05, 6.670800000000213e-05, 6.734699999999885e-05, 6.751400000000116e-05, 6.715300000000035e-05, 6.734699999999885e-05, 6.70419999999998e-05, 6.670799999999866e-05, 6.683299999999878e-05, 6.662500000000071e-05, 6.766700000000042e-05, 6.682000000000216e-05, 6.743100000000321e-05, 6.722199999999873e-05, 6.695899999999838e-05, 6.70700000000024e-05, 6.765199999999791e-05, 6.747199999999898e-05, 6.734699999999885e-05, 6.75969999999991e-05, 6.681899999999921e-05, 6.738900000000103e-05, 6.692999999999977e-05, 6.684700000000182e-05, 6.697199999999848e-05, 6.673600000000127e-05, 6.677799999999998e-05, 6.659700000000157e-05, 6.729200000000005e-05, 6.733400000000223e-05, 6.730599999999962e-05, 6.700000000000109e-05, 6.67220000000017e-05, 6.74160000000007e-05, 6.737499999999799e-05, 6.730500000000014e-05, 6.748600000000202e-05, 6.754100000000082e-05, 6.747199999999898e-05, 6.70839999999985e-05, 6.72640000000009e-05, 6.722199999999873e-05, 6.718099999999949e-05, 6.701400000000066e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.472" endtime="20201030 15:52:31.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.468" endtime="20201030 15:52:31.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.479" endtime="20201030 15:52:31.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.477" endtime="20201030 15:52:31.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.476" endtime="20201030 15:52:31.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.117" endtime="20201030 15:52:31.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.116" endtime="20201030 15:52:31.500"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.508" endtime="20201030 15:52:31.528"></status>
</kw>
<msg timestamp="20201030 15:52:31.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.506" endtime="20201030 15:52:31.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.530" endtime="20201030 15:52:31.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.532" endtime="20201030 15:52:31.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.504" endtime="20201030 15:52:31.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.502" endtime="20201030 15:52:31.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.541" endtime="20201030 15:52:31.829"></status>
</kw>
<msg timestamp="20201030 15:52:31.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01970475, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:52:31.540" endtime="20201030 15:52:31.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01970475, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:52:31.833" endtime="20201030 15:52:31.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.841" endtime="20201030 15:52:31.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.537" endtime="20201030 15:52:31.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.535" endtime="20201030 15:52:31.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.848" level="INFO">${RESULT} = [{'diff': 6.774999999999837e-05}, {'diff': 6.802800000000123e-05}, {'diff': 6.844500000000031e-05}, {'diff': 6.847199999999998e-05}, {'diff': 6.795900000000285e-05}, {'diff': 6.840299999999813e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:31.845" endtime="20201030 15:52:31.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.852" level="INFO">${ACCURACY} = {'diff': [6.774999999999837e-05, 6.802800000000123e-05, 6.844500000000031e-05, 6.847199999999998e-05, 6.795900000000285e-05, 6.840299999999813e-05, 6.769499999999956e-05, 6.832000000000019e-05, 6.7874...</msg>
<status status="PASS" starttime="20201030 15:52:31.849" endtime="20201030 15:52:31.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.856" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.855" endtime="20201030 15:52:31.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.859" level="INFO">VALUE: [6.774999999999837e-05, 6.802800000000123e-05, 6.844500000000031e-05, 6.847199999999998e-05, 6.795900000000285e-05, 6.840299999999813e-05, 6.769499999999956e-05, 6.832000000000019e-05, 6.787499999999849e-05, 6.843099999999727e-05, 6.861099999999967e-05, 6.84299999999978e-05, 6.840299999999813e-05, 6.806900000000046e-05, 6.818000000000102e-05, 6.84030000000016e-05, 6.798599999999905e-05, 6.787499999999849e-05, 6.797199999999948e-05, 6.806999999999994e-05, 6.783399999999926e-05, 6.784799999999883e-05, 6.82229999999992e-05, 6.77229999999987e-05, 6.811100000000264e-05, 6.854100000000182e-05, 6.852699999999878e-05, 6.804099999999785e-05, 6.865300000000185e-05, 6.784699999999935e-05, 6.840299999999813e-05, 6.80420000000008e-05, 6.85420000000013e-05, 6.795799999999991e-05, 6.833300000000028e-05, 6.80839999999995e-05, 6.776399999999794e-05, 6.820899999999963e-05, 6.802800000000123e-05, 6.806999999999994e-05, 6.8584e-05, 6.783299999999978e-05, 6.847199999999998e-05, 6.79160000000012e-05, 6.805500000000089e-05, 6.780500000000064e-05, 6.800000000000209e-05, 6.830600000000062e-05, 6.818100000000049e-05, 6.84030000000016e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.857" endtime="20201030 15:52:31.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.853" endtime="20201030 15:52:31.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.864" endtime="20201030 15:52:31.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.862" endtime="20201030 15:52:31.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.861" endtime="20201030 15:52:31.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.500" endtime="20201030 15:52:31.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.500" endtime="20201030 15:52:31.884"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.893" endtime="20201030 15:52:31.913"></status>
</kw>
<msg timestamp="20201030 15:52:31.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.892" endtime="20201030 15:52:31.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.915" endtime="20201030 15:52:31.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.917" endtime="20201030 15:52:31.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.889" endtime="20201030 15:52:31.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.887" endtime="20201030 15:52:31.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.927" endtime="20201030 15:52:32.213"></status>
</kw>
<msg timestamp="20201030 15:52:32.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020422069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020491014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.925" endtime="20201030 15:52:32.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020422069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020491014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.217" endtime="20201030 15:52:32.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.226" endtime="20201030 15:52:32.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.922" endtime="20201030 15:52:32.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.921" endtime="20201030 15:52:32.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.232" level="INFO">${RESULT} = [{'diff': 6.894499999999734e-05}, {'diff': 6.966699999999895e-05}, {'diff': 6.963899999999981e-05}, {'diff': 6.898600000000005e-05}, {'diff': 6.95420000000023e-05}, {'diff': 6.947200000000098e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:32.229" endtime="20201030 15:52:32.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.236" level="INFO">${ACCURACY} = {'diff': [6.894499999999734e-05, 6.966699999999895e-05, 6.963899999999981e-05, 6.898600000000005e-05, 6.95420000000023e-05, 6.947200000000098e-05, 6.915299999999888e-05, 6.943099999999827e-05, 6.88329...</msg>
<status status="PASS" starttime="20201030 15:52:32.233" endtime="20201030 15:52:32.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.241" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.240" endtime="20201030 15:52:32.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.243" level="INFO">VALUE: [6.894499999999734e-05, 6.966699999999895e-05, 6.963899999999981e-05, 6.898600000000005e-05, 6.95420000000023e-05, 6.947200000000098e-05, 6.915299999999888e-05, 6.943099999999827e-05, 6.883299999999731e-05, 6.936099999999695e-05, 6.95970000000011e-05, 6.937499999999999e-05, 6.890299999999863e-05, 6.89160000000022e-05, 6.902799999999876e-05, 6.929199999999858e-05, 6.958300000000153e-05, 6.884700000000035e-05, 6.920799999999769e-05, 6.884700000000035e-05, 6.901399999999919e-05, 6.89030000000021e-05, 6.919500000000106e-05, 6.930499999999867e-05, 6.918000000000202e-05, 6.948600000000055e-05, 6.952699999999978e-05, 6.945799999999794e-05, 6.963899999999981e-05, 6.937499999999999e-05, 6.940299999999913e-05, 6.912499999999974e-05, 6.87640000000024e-05, 6.920900000000063e-05, 6.937499999999999e-05, 6.902800000000223e-05, 6.934800000000033e-05, 6.961200000000015e-05, 6.877699999999903e-05, 6.954099999999935e-05, 6.884700000000035e-05, 6.923599999999683e-05, 6.895800000000091e-05, 6.941599999999923e-05, 6.908300000000103e-05, 6.965299999999938e-05, 6.952799999999926e-05, 6.870799999999719e-05, 6.884700000000035e-05, 6.930599999999815e-05]</msg>
<status status="PASS" starttime="20201030 15:52:32.242" endtime="20201030 15:52:32.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.237" endtime="20201030 15:52:32.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.249" endtime="20201030 15:52:32.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.247" endtime="20201030 15:52:32.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.246" endtime="20201030 15:52:32.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.885" endtime="20201030 15:52:32.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.885" endtime="20201030 15:52:32.270"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.278" endtime="20201030 15:52:32.297"></status>
</kw>
<msg timestamp="20201030 15:52:32.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.277" endtime="20201030 15:52:32.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.299" endtime="20201030 15:52:32.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.301" endtime="20201030 15:52:32.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.274" endtime="20201030 15:52:32.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.272" endtime="20201030 15:52:32.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.311" endtime="20201030 15:52:32.596"></status>
</kw>
<msg timestamp="20201030 15:52:32.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019577014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.309" endtime="20201030 15:52:32.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019577014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.600" endtime="20201030 15:52:32.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.609" endtime="20201030 15:52:32.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.306" endtime="20201030 15:52:32.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.305" endtime="20201030 15:52:32.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.615" level="INFO">${RESULT} = [{'diff': 7.047199999999851e-05}, {'diff': 7.013900000000031e-05}, {'diff': 6.997299999999748e-05}, {'diff': 6.972299999999723e-05}, {'diff': 7.050000000000112e-05}, {'diff': 7.001400000000019e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:32.612" endtime="20201030 15:52:32.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.620" level="INFO">${ACCURACY} = {'diff': [7.047199999999851e-05, 7.013900000000031e-05, 6.997299999999748e-05, 6.972299999999723e-05, 7.050000000000112e-05, 7.001400000000019e-05, 6.995900000000138e-05, 6.972199999999776e-05, 7.0082...</msg>
<status status="PASS" starttime="20201030 15:52:32.616" endtime="20201030 15:52:32.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.625" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.624" endtime="20201030 15:52:32.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.627" level="INFO">VALUE: [7.047199999999851e-05, 7.013900000000031e-05, 6.997299999999748e-05, 6.972299999999723e-05, 7.050000000000112e-05, 7.001400000000019e-05, 6.995900000000138e-05, 6.972199999999776e-05, 7.008299999999856e-05, 6.984700000000135e-05, 7.040200000000066e-05, 7.065300000000038e-05, 7.015299999999988e-05, 6.977799999999951e-05, 7.04169999999997e-05, 7.061100000000167e-05, 6.981899999999874e-05, 7.048599999999808e-05, 6.999999999999715e-05, 7.002799999999976e-05, 7.007000000000194e-05, 7.066699999999995e-05, 6.986099999999745e-05, 7.020800000000216e-05, 7.006899999999899e-05, 6.976399999999994e-05, 7.04299999999998e-05, 7.00420000000028e-05, 6.983299999999831e-05, 7.059699999999863e-05, 7.027800000000001e-05, 7.052800000000026e-05, 6.990299999999963e-05, 7.051400000000069e-05, 7.063899999999734e-05, 7.00970000000016e-05, 7.033400000000176e-05, 7.016699999999945e-05, 7.025000000000087e-05, 7.034800000000133e-05, 7.02360000000013e-05, 7.045799999999894e-05, 7.022199999999826e-05, 7.004099999999985e-05, 6.972199999999776e-05, 7.036100000000142e-05, 7.005600000000237e-05, 7.023599999999783e-05, 7.040300000000013e-05, 6.99030000000031e-05]</msg>
<status status="PASS" starttime="20201030 15:52:32.626" endtime="20201030 15:52:32.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.621" endtime="20201030 15:52:32.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.632" endtime="20201030 15:52:32.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.631" endtime="20201030 15:52:32.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.630" endtime="20201030 15:52:32.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.271" endtime="20201030 15:52:32.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.270" endtime="20201030 15:52:32.653"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.662" endtime="20201030 15:52:32.682"></status>
</kw>
<msg timestamp="20201030 15:52:32.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.660" endtime="20201030 15:52:32.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.683" endtime="20201030 15:52:32.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.686" endtime="20201030 15:52:32.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.657" endtime="20201030 15:52:32.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.655" endtime="20201030 15:52:32.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.695" endtime="20201030 15:52:32.980"></status>
</kw>
<msg timestamp="20201030 15:52:32.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.693" endtime="20201030 15:52:32.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.984" endtime="20201030 15:52:32.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.993" endtime="20201030 15:52:32.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.691" endtime="20201030 15:52:32.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.689" endtime="20201030 15:52:32.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.999" level="INFO">${RESULT} = [{'diff': 7.080599999999965e-05}, {'diff': 7.154100000000135e-05}, {'diff': 7.154200000000083e-05}, {'diff': 7.083400000000226e-05}, {'diff': 7.155499999999745e-05}, {'diff': 7.172299999999923e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:32.996" endtime="20201030 15:52:33.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.003" level="INFO">${ACCURACY} = {'diff': [7.080599999999965e-05, 7.154100000000135e-05, 7.154200000000083e-05, 7.083400000000226e-05, 7.155499999999745e-05, 7.172299999999923e-05, 7.147199999999951e-05, 7.102799999999729e-05, 7.1653...</msg>
<status status="PASS" starttime="20201030 15:52:33.000" endtime="20201030 15:52:33.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.008" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.007" endtime="20201030 15:52:33.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.010" level="INFO">VALUE: [7.080599999999965e-05, 7.154100000000135e-05, 7.154200000000083e-05, 7.083400000000226e-05, 7.155499999999745e-05, 7.172299999999923e-05, 7.147199999999951e-05, 7.102799999999729e-05, 7.165300000000138e-05, 7.079200000000008e-05, 7.133299999999981e-05, 7.140299999999766e-05, 7.083299999999931e-05, 7.126399999999797e-05, 7.084699999999888e-05, 7.098599999999858e-05, 7.101400000000119e-05, 7.165299999999791e-05, 7.072199999999876e-05, 7.147299999999898e-05, 7.072199999999876e-05, 7.127699999999806e-05, 7.09300000000003e-05, 7.118000000000055e-05, 7.116700000000045e-05, 7.095800000000291e-05, 7.136100000000242e-05, 7.119400000000012e-05, 7.076400000000094e-05, 7.056999999999897e-05, 7.090299999999716e-05, 7.07230000000017e-05, 7.115300000000088e-05, 7.105500000000042e-05, 7.133399999999929e-05, 7.097200000000248e-05, 7.159699999999963e-05, 7.112500000000174e-05, 7.169399999999715e-05, 7.1069e-05, 7.109699999999913e-05, 7.125000000000187e-05, 7.072199999999876e-05, 7.080600000000312e-05, 7.1069e-05, 7.151399999999822e-05, 7.097199999999901e-05, 7.166700000000095e-05, 7.158399999999954e-05, 7.144400000000037e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.009" endtime="20201030 15:52:33.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.004" endtime="20201030 15:52:33.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.019" endtime="20201030 15:52:33.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.018" endtime="20201030 15:52:33.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.017" endtime="20201030 15:52:33.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.654" endtime="20201030 15:52:33.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.653" endtime="20201030 15:52:33.040"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.049" endtime="20201030 15:52:33.069"></status>
</kw>
<msg timestamp="20201030 15:52:33.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.047" endtime="20201030 15:52:33.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.071" endtime="20201030 15:52:33.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.074" endtime="20201030 15:52:33.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.045" endtime="20201030 15:52:33.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.043" endtime="20201030 15:52:33.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.082" endtime="20201030 15:52:33.368"></status>
</kw>
<msg timestamp="20201030 15:52:33.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020624181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.081" endtime="20201030 15:52:33.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020624181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.372" endtime="20201030 15:52:33.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.380" endtime="20201030 15:52:33.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.078" endtime="20201030 15:52:33.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.077" endtime="20201030 15:52:33.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.387" level="INFO">${RESULT} = [{'diff': 7.244499999999737e-05}, {'diff': 7.162499999999877e-05}, {'diff': 7.245800000000094e-05}, {'diff': 7.187499999999902e-05}, {'diff': 7.24300000000018e-05}, {'diff': 7.195800000000044e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:33.384" endtime="20201030 15:52:33.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.391" level="INFO">${ACCURACY} = {'diff': [7.244499999999737e-05, 7.162499999999877e-05, 7.245800000000094e-05, 7.187499999999902e-05, 7.24300000000018e-05, 7.195800000000044e-05, 7.226399999999897e-05, 7.263900000000281e-05, 7.19170...</msg>
<status status="PASS" starttime="20201030 15:52:33.388" endtime="20201030 15:52:33.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.395" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.394" endtime="20201030 15:52:33.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.398" level="INFO">VALUE: [7.244499999999737e-05, 7.162499999999877e-05, 7.245800000000094e-05, 7.187499999999902e-05, 7.24300000000018e-05, 7.195800000000044e-05, 7.226399999999897e-05, 7.263900000000281e-05, 7.19170000000012e-05, 7.22499999999994e-05, 7.230600000000115e-05, 7.226399999999897e-05, 7.226399999999897e-05, 7.209700000000013e-05, 7.194500000000034e-05, 7.265299999999891e-05, 7.234799999999986e-05, 7.222200000000026e-05, 7.259700000000063e-05, 7.213900000000231e-05, 7.265299999999891e-05, 7.173599999999933e-05, 7.238899999999909e-05, 7.261099999999673e-05, 7.190299999999816e-05, 7.18049999999977e-05, 7.176399999999847e-05, 7.208400000000004e-05, 7.227799999999854e-05, 7.234699999999691e-05, 7.251399999999922e-05, 7.192999999999783e-05, 7.197299999999948e-05, 7.168100000000052e-05, 7.262499999999977e-05, 7.194499999999687e-05, 7.259699999999716e-05, 7.19170000000012e-05, 7.208300000000056e-05, 7.202800000000176e-05, 7.266699999999848e-05, 7.231900000000124e-05, 7.230600000000115e-05, 7.190300000000163e-05, 7.251399999999922e-05, 7.259800000000011e-05, 7.201400000000219e-05, 7.236199999999943e-05, 7.237499999999952e-05, 7.233299999999734e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.397" endtime="20201030 15:52:33.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.392" endtime="20201030 15:52:33.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.404" endtime="20201030 15:52:33.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.402" endtime="20201030 15:52:33.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.401" endtime="20201030 15:52:33.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.041" endtime="20201030 15:52:33.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.041" endtime="20201030 15:52:33.424"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.433" endtime="20201030 15:52:33.452"></status>
</kw>
<msg timestamp="20201030 15:52:33.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.432" endtime="20201030 15:52:33.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.454" endtime="20201030 15:52:33.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.456" endtime="20201030 15:52:33.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.429" endtime="20201030 15:52:33.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.427" endtime="20201030 15:52:33.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.465" endtime="20201030 15:52:33.750"></status>
</kw>
<msg timestamp="20201030 15:52:33.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019516806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.464" endtime="20201030 15:52:33.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019516806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.755" endtime="20201030 15:52:33.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.763" endtime="20201030 15:52:33.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.461" endtime="20201030 15:52:33.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.459" endtime="20201030 15:52:33.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.770" level="INFO">${RESULT} = [{'diff': 7.312500000000027e-05}, {'diff': 7.290199999999969e-05}, {'diff': 7.304099999999938e-05}, {'diff': 7.340200000000019e-05}, {'diff': 7.366600000000001e-05}, {'diff': 7.313899999999984e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:33.766" endtime="20201030 15:52:33.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.775" level="INFO">${ACCURACY} = {'diff': [7.312500000000027e-05, 7.290199999999969e-05, 7.304099999999938e-05, 7.340200000000019e-05, 7.366600000000001e-05, 7.313899999999984e-05, 7.359699999999816e-05, 7.313899999999984e-05, 7.3277...</msg>
<status status="PASS" starttime="20201030 15:52:33.771" endtime="20201030 15:52:33.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.779" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.778" endtime="20201030 15:52:33.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.782" level="INFO">VALUE: [7.312500000000027e-05, 7.290199999999969e-05, 7.304099999999938e-05, 7.340200000000019e-05, 7.366600000000001e-05, 7.313899999999984e-05, 7.359699999999816e-05, 7.313899999999984e-05, 7.327799999999954e-05, 7.370800000000219e-05, 7.29170000000022e-05, 7.365299999999991e-05, 7.269500000000109e-05, 7.322200000000126e-05, 7.301399999999972e-05, 7.290299999999916e-05, 7.273600000000033e-05, 7.306899999999852e-05, 7.279099999999913e-05, 7.25690000000015e-05, 7.354200000000283e-05, 7.352799999999979e-05, 7.327799999999954e-05, 7.315299999999941e-05, 7.340299999999966e-05, 7.277799999999904e-05, 7.338900000000009e-05, 7.287500000000002e-05, 7.288899999999959e-05, 7.281999999999775e-05, 7.345899999999794e-05, 7.270900000000066e-05, 7.345900000000141e-05, 7.313900000000331e-05, 7.338799999999715e-05, 7.291599999999926e-05, 7.354199999999936e-05, 7.368100000000252e-05, 7.290299999999916e-05, 7.340299999999966e-05, 7.252799999999879e-05, 7.329200000000258e-05, 7.318099999999855e-05, 7.358300000000206e-05, 7.279199999999861e-05, 7.358400000000154e-05, 7.347300000000098e-05, 7.309700000000113e-05, 7.347200000000151e-05, 7.277699999999956e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.780" endtime="20201030 15:52:33.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.775" endtime="20201030 15:52:33.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.787" endtime="20201030 15:52:33.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.785" endtime="20201030 15:52:33.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.784" endtime="20201030 15:52:33.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.425" endtime="20201030 15:52:33.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.425" endtime="20201030 15:52:33.807"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.816" endtime="20201030 15:52:33.836"></status>
</kw>
<msg timestamp="20201030 15:52:33.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.815" endtime="20201030 15:52:33.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.838" endtime="20201030 15:52:33.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.840" endtime="20201030 15:52:33.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.812" endtime="20201030 15:52:33.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.810" endtime="20201030 15:52:33.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.849" endtime="20201030 15:52:34.138"></status>
</kw>
<msg timestamp="20201030 15:52:34.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019718014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.848" endtime="20201030 15:52:34.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019718014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.143" endtime="20201030 15:52:34.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.151" endtime="20201030 15:52:34.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.845" endtime="20201030 15:52:34.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.843" endtime="20201030 15:52:34.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.157" level="INFO">${RESULT} = [{'diff': 7.400000000000115e-05}, {'diff': 7.459699999999916e-05}, {'diff': 7.434699999999891e-05}, {'diff': 7.406899999999952e-05}, {'diff': 7.395799999999897e-05}, {'diff': 7.466700000000048e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:34.154" endtime="20201030 15:52:34.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.162" level="INFO">${ACCURACY} = {'diff': [7.400000000000115e-05, 7.459699999999916e-05, 7.434699999999891e-05, 7.406899999999952e-05, 7.395799999999897e-05, 7.466700000000048e-05, 7.39439999999994e-05, 7.390300000000016e-05, 7.44999...</msg>
<status status="PASS" starttime="20201030 15:52:34.159" endtime="20201030 15:52:34.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.166" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.165" endtime="20201030 15:52:34.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.169" level="INFO">VALUE: [7.400000000000115e-05, 7.459699999999916e-05, 7.434699999999891e-05, 7.406899999999952e-05, 7.395799999999897e-05, 7.466700000000048e-05, 7.39439999999994e-05, 7.390300000000016e-05, 7.449999999999818e-05, 7.431899999999977e-05, 7.440300000000066e-05, 7.463899999999787e-05, 7.384700000000188e-05, 7.454200000000036e-05, 7.390300000000016e-05, 7.448700000000155e-05, 7.419499999999912e-05, 7.408399999999857e-05, 7.459699999999916e-05, 7.437500000000152e-05, 7.387500000000102e-05, 7.4069000000003e-05, 7.427800000000054e-05, 7.429200000000011e-05, 7.449999999999818e-05, 7.463900000000134e-05, 7.376400000000047e-05, 7.370799999999872e-05, 7.387499999999755e-05, 7.41249999999978e-05, 7.395900000000191e-05, 7.370900000000166e-05, 7.370899999999819e-05, 7.438800000000162e-05, 7.413900000000084e-05, 7.438899999999762e-05, 7.395799999999897e-05, 7.390300000000016e-05, 7.406899999999952e-05, 7.398600000000158e-05, 7.436099999999848e-05, 7.451400000000122e-05, 7.369499999999862e-05, 7.391699999999973e-05, 7.427799999999707e-05, 7.377800000000004e-05, 7.376400000000047e-05, 7.452800000000079e-05, 7.465199999999797e-05, 7.388800000000112e-05]</msg>
<status status="PASS" starttime="20201030 15:52:34.167" endtime="20201030 15:52:34.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.162" endtime="20201030 15:52:34.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.174" endtime="20201030 15:52:34.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.172" endtime="20201030 15:52:34.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.171" endtime="20201030 15:52:34.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.808" endtime="20201030 15:52:34.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.808" endtime="20201030 15:52:34.194"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.203" endtime="20201030 15:52:34.224"></status>
</kw>
<msg timestamp="20201030 15:52:34.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.201" endtime="20201030 15:52:34.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.225" endtime="20201030 15:52:34.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.228" endtime="20201030 15:52:34.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.199" endtime="20201030 15:52:34.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.197" endtime="20201030 15:52:34.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.237" endtime="20201030 15:52:34.524"></status>
</kw>
<msg timestamp="20201030 15:52:34.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020361014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.236" endtime="20201030 15:52:34.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020361014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.528" endtime="20201030 15:52:34.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.536" endtime="20201030 15:52:34.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.233" endtime="20201030 15:52:34.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.231" endtime="20201030 15:52:34.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.543" level="INFO">${RESULT} = [{'diff': 7.507e-05}, {'diff': 7.541699999999776e-05}, {'diff': 7.551399999999875e-05}, {'diff': 7.538899999999862e-05}, {'diff': 7.519500000000012e-05}, {'diff': 7.51249999999988e-05}, {'diff': 7.529...</msg>
<status status="PASS" starttime="20201030 15:52:34.539" endtime="20201030 15:52:34.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.547" level="INFO">${ACCURACY} = {'diff': [7.507e-05, 7.541699999999776e-05, 7.551399999999875e-05, 7.538899999999862e-05, 7.519500000000012e-05, 7.51249999999988e-05, 7.529199999999764e-05, 7.531999999999678e-05, 7.554099999999841e-...</msg>
<status status="PASS" starttime="20201030 15:52:34.544" endtime="20201030 15:52:34.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.551" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.550" endtime="20201030 15:52:34.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.554" level="INFO">VALUE: [7.507e-05, 7.541699999999776e-05, 7.551399999999875e-05, 7.538899999999862e-05, 7.519500000000012e-05, 7.51249999999988e-05, 7.529199999999764e-05, 7.531999999999678e-05, 7.554099999999841e-05, 7.547299999999951e-05, 7.490199999999822e-05, 7.554099999999841e-05, 7.465200000000144e-05, 7.540300000000166e-05, 7.506900000000052e-05, 7.483299999999984e-05, 7.497199999999954e-05, 7.50830000000001e-05, 7.532000000000025e-05, 7.537499999999905e-05, 7.555499999999798e-05, 7.565300000000191e-05, 7.498599999999911e-05, 7.519400000000065e-05, 7.474999999999843e-05, 7.522199999999979e-05, 7.470799999999972e-05, 7.51249999999988e-05, 7.509699999999966e-05, 7.499999999999868e-05, 7.513900000000184e-05, 7.552799999999832e-05, 7.522199999999979e-05, 7.556900000000102e-05, 7.551399999999875e-05, 7.504200000000086e-05, 7.472199999999929e-05, 7.516699999999751e-05, 7.551399999999875e-05, 7.486099999999898e-05, 7.483299999999984e-05, 7.522199999999979e-05, 7.552799999999832e-05, 7.495799999999997e-05, 7.505599999999696e-05, 7.501400000000172e-05, 7.534699999999991e-05, 7.502800000000129e-05, 7.534699999999991e-05, 7.55700000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:52:34.552" endtime="20201030 15:52:34.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.548" endtime="20201030 15:52:34.556"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.559" endtime="20201030 15:52:34.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.558" endtime="20201030 15:52:34.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.557" endtime="20201030 15:52:34.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.195" endtime="20201030 15:52:34.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.195" endtime="20201030 15:52:34.581"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.593" endtime="20201030 15:52:34.613"></status>
</kw>
<msg timestamp="20201030 15:52:34.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.591" endtime="20201030 15:52:34.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.615" endtime="20201030 15:52:34.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.617" endtime="20201030 15:52:34.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.587" endtime="20201030 15:52:34.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.584" endtime="20201030 15:52:34.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.626" endtime="20201030 15:52:34.912"></status>
</kw>
<msg timestamp="20201030 15:52:34.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02473525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024811403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:34.625" endtime="20201030 15:52:34.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02473525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024811403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:34.916" endtime="20201030 15:52:34.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.925" endtime="20201030 15:52:34.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.622" endtime="20201030 15:52:34.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.621" endtime="20201030 15:52:34.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.931" level="INFO">${RESULT} = [{'diff': 7.615299999999894e-05}, {'diff': 7.602800000000229e-05}, {'diff': 7.597300000000001e-05}, {'diff': 7.631999999999778e-05}, {'diff': 7.602799999999882e-05}, {'diff': 7.622200000000079e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:34.928" endtime="20201030 15:52:34.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.936" level="INFO">${ACCURACY} = {'diff': [7.615299999999894e-05, 7.602800000000229e-05, 7.597300000000001e-05, 7.631999999999778e-05, 7.602799999999882e-05, 7.622200000000079e-05, 7.572299999999976e-05, 7.622200000000079e-05, 7.6570...</msg>
<status status="PASS" starttime="20201030 15:52:34.932" endtime="20201030 15:52:34.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.941" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.940" endtime="20201030 15:52:34.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.943" level="INFO">VALUE: [7.615299999999894e-05, 7.602800000000229e-05, 7.597300000000001e-05, 7.631999999999778e-05, 7.602799999999882e-05, 7.622200000000079e-05, 7.572299999999976e-05, 7.622200000000079e-05, 7.65700000000015e-05, 7.62639999999995e-05, 7.597200000000054e-05, 7.652799999999932e-05, 7.651399999999975e-05, 7.604200000000186e-05, 7.647300000000051e-05, 7.641699999999876e-05, 7.602799999999882e-05, 7.659700000000116e-05, 7.588899999999912e-05, 7.615299999999894e-05, 7.638899999999962e-05, 7.599999999999968e-05, 7.570800000000072e-05, 7.601399999999925e-05, 7.609700000000066e-05, 7.645800000000147e-05, 7.586099999999998e-05, 7.654199999999889e-05, 7.638899999999962e-05, 7.619400000000165e-05, 7.616699999999851e-05, 7.665300000000291e-05, 7.630600000000168e-05, 7.558400000000007e-05, 7.645900000000094e-05, 7.633400000000082e-05, 7.663899999999987e-05, 7.633299999999787e-05, 7.666699999999901e-05, 7.602800000000229e-05, 7.602799999999882e-05, 7.652799999999932e-05, 7.60830000000011e-05, 7.616700000000198e-05, 7.591699999999826e-05, 7.629200000000211e-05, 7.595800000000097e-05, 7.661100000000073e-05, 7.577799999999857e-05, 7.623600000000036e-05]</msg>
<status status="PASS" starttime="20201030 15:52:34.942" endtime="20201030 15:52:34.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.937" endtime="20201030 15:52:34.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.948" endtime="20201030 15:52:34.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.946" endtime="20201030 15:52:34.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.945" endtime="20201030 15:52:34.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.582" endtime="20201030 15:52:34.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.581" endtime="20201030 15:52:34.969"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.977" endtime="20201030 15:52:34.997"></status>
</kw>
<msg timestamp="20201030 15:52:34.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.976" endtime="20201030 15:52:34.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.999" endtime="20201030 15:52:35.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.001" endtime="20201030 15:52:35.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.973" endtime="20201030 15:52:35.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.971" endtime="20201030 15:52:35.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.010" endtime="20201030 15:52:35.297"></status>
</kw>
<msg timestamp="20201030 15:52:35.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019587431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019664958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.009" endtime="20201030 15:52:35.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019587431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019664958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.301" endtime="20201030 15:52:35.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.309" endtime="20201030 15:52:35.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.006" endtime="20201030 15:52:35.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.004" endtime="20201030 15:52:35.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.316" level="INFO">${RESULT} = [{'diff': 7.752700000000085e-05}, {'diff': 7.709700000000166e-05}, {'diff': 7.702799999999982e-05}, {'diff': 7.72640000000005e-05}, {'diff': 7.709700000000166e-05}, {'diff': 7.687500000000055e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:35.313" endtime="20201030 15:52:35.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.320" level="INFO">${ACCURACY} = {'diff': [7.752700000000085e-05, 7.709700000000166e-05, 7.702799999999982e-05, 7.72640000000005e-05, 7.709700000000166e-05, 7.687500000000055e-05, 7.687500000000055e-05, 7.74030000000002e-05, 7.724999...</msg>
<status status="PASS" starttime="20201030 15:52:35.317" endtime="20201030 15:52:35.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.325" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.323" endtime="20201030 15:52:35.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.327" level="INFO">VALUE: [7.752700000000085e-05, 7.709700000000166e-05, 7.702799999999982e-05, 7.72640000000005e-05, 7.709700000000166e-05, 7.687500000000055e-05, 7.687500000000055e-05, 7.74030000000002e-05, 7.724999999999746e-05, 7.69029999999997e-05, 7.701400000000025e-05, 7.748700000000108e-05, 7.713900000000037e-05, 7.749999999999771e-05, 7.743099999999933e-05, 7.722200000000179e-05, 7.688900000000012e-05, 7.752800000000032e-05, 7.670800000000172e-05, 7.708299999999862e-05, 7.684700000000141e-05, 7.747199999999857e-05, 7.679199999999914e-05, 7.669500000000162e-05, 7.738900000000062e-05, 7.688900000000012e-05, 7.747200000000204e-05, 7.708299999999862e-05, 7.697200000000154e-05, 7.670799999999825e-05, 7.687500000000055e-05, 7.702700000000035e-05, 7.729199999999964e-05, 7.763900000000087e-05, 7.670800000000172e-05, 7.744500000000237e-05, 7.75830000000026e-05, 7.738900000000062e-05, 7.701400000000025e-05, 7.755599999999946e-05, 7.672300000000076e-05, 7.688900000000012e-05, 7.683299999999837e-05, 7.752700000000085e-05, 7.701300000000078e-05, 7.736099999999801e-05, 7.73189999999993e-05, 7.727800000000007e-05, 7.669400000000215e-05, 7.737500000000105e-05]</msg>
<status status="PASS" starttime="20201030 15:52:35.326" endtime="20201030 15:52:35.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.321" endtime="20201030 15:52:35.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.332" endtime="20201030 15:52:35.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.331" endtime="20201030 15:52:35.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.329" endtime="20201030 15:52:35.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.970" endtime="20201030 15:52:35.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.969" endtime="20201030 15:52:35.353"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.361" endtime="20201030 15:52:35.382"></status>
</kw>
<msg timestamp="20201030 15:52:35.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.360" endtime="20201030 15:52:35.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.384" endtime="20201030 15:52:35.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.386" endtime="20201030 15:52:35.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.357" endtime="20201030 15:52:35.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.355" endtime="20201030 15:52:35.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.395" endtime="20201030 15:52:35.681"></status>
</kw>
<msg timestamp="20201030 15:52:35.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020429417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020507347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.394" endtime="20201030 15:52:35.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020429417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020507347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.685" endtime="20201030 15:52:35.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.693" endtime="20201030 15:52:35.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.391" endtime="20201030 15:52:35.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.390" endtime="20201030 15:52:35.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.700" level="INFO">${RESULT} = [{'diff': 7.793000000000036e-05}, {'diff': 7.804100000000092e-05}, {'diff': 7.808299999999962e-05}, {'diff': 7.854200000000089e-05}, {'diff': 7.786100000000198e-05}, {'diff': 7.769399999999968e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:35.697" endtime="20201030 15:52:35.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.704" level="INFO">${ACCURACY} = {'diff': [7.793000000000036e-05, 7.804100000000092e-05, 7.808299999999962e-05, 7.854200000000089e-05, 7.786100000000198e-05, 7.769399999999968e-05, 7.865299999999797e-05, 7.830600000000021e-05, 7.7819...</msg>
<status status="PASS" starttime="20201030 15:52:35.701" endtime="20201030 15:52:35.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.708" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.707" endtime="20201030 15:52:35.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.711" level="INFO">VALUE: [7.793000000000036e-05, 7.804100000000092e-05, 7.808299999999962e-05, 7.854200000000089e-05, 7.786100000000198e-05, 7.769399999999968e-05, 7.865299999999797e-05, 7.830600000000021e-05, 7.781999999999928e-05, 7.843100000000033e-05, 7.854200000000089e-05, 7.85839999999996e-05, 7.802699999999788e-05, 7.844400000000043e-05, 7.8458e-05, 7.824999999999846e-05, 7.786099999999851e-05, 7.770799999999925e-05, 7.801400000000125e-05, 7.823599999999889e-05, 7.82779999999976e-05, 7.811100000000223e-05, 7.852800000000132e-05, 7.831999999999978e-05, 7.786099999999851e-05, 7.851399999999828e-05, 7.845899999999947e-05, 7.866600000000154e-05, 7.7764000000001e-05, 7.837500000000205e-05, 7.822199999999932e-05, 7.82640000000015e-05, 7.791700000000026e-05, 7.862499999999883e-05, 7.808299999999962e-05, 7.794500000000287e-05, 7.82640000000015e-05, 7.775000000000143e-05, 7.769499999999915e-05, 7.770900000000219e-05, 7.83190000000003e-05, 7.845900000000294e-05, 7.811099999999876e-05, 7.82770000000016e-05, 7.822199999999932e-05, 7.784699999999894e-05, 7.797199999999907e-05, 7.784699999999894e-05, 7.822199999999932e-05, 7.806900000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:52:35.709" endtime="20201030 15:52:35.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.705" endtime="20201030 15:52:35.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.717" endtime="20201030 15:52:35.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.715" endtime="20201030 15:52:35.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.714" endtime="20201030 15:52:35.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.354" endtime="20201030 15:52:35.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.353" endtime="20201030 15:52:35.737"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.746" endtime="20201030 15:52:35.766"></status>
</kw>
<msg timestamp="20201030 15:52:35.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.744" endtime="20201030 15:52:35.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.768" endtime="20201030 15:52:35.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.770" endtime="20201030 15:52:35.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.742" endtime="20201030 15:52:35.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.740" endtime="20201030 15:52:35.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.780" endtime="20201030 15:52:36.065"></status>
</kw>
<msg timestamp="20201030 15:52:36.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019517222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019596153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.778" endtime="20201030 15:52:36.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019517222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019596153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.070" endtime="20201030 15:52:36.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.078" endtime="20201030 15:52:36.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.775" endtime="20201030 15:52:36.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.774" endtime="20201030 15:52:36.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.085" level="INFO">${RESULT} = [{'diff': 7.893100000000083e-05}, {'diff': 7.938899999999915e-05}, {'diff': 7.965299999999897e-05}, {'diff': 7.94450000000009e-05}, {'diff': 7.945900000000047e-05}, {'diff': 7.919500000000065e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:36.081" endtime="20201030 15:52:36.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.090" level="INFO">${ACCURACY} = {'diff': [7.893100000000083e-05, 7.938899999999915e-05, 7.965299999999897e-05, 7.94450000000009e-05, 7.945900000000047e-05, 7.919500000000065e-05, 7.948600000000014e-05, 7.893000000000136e-05, 7.88889...</msg>
<status status="PASS" starttime="20201030 15:52:36.086" endtime="20201030 15:52:36.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.094" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.093" endtime="20201030 15:52:36.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.097" level="INFO">VALUE: [7.893100000000083e-05, 7.938899999999915e-05, 7.965299999999897e-05, 7.94450000000009e-05, 7.945900000000047e-05, 7.919500000000065e-05, 7.948600000000014e-05, 7.893000000000136e-05, 7.888899999999865e-05, 7.933300000000088e-05, 7.89030000000017e-05, 7.874999999999896e-05, 7.96389999999994e-05, 7.89169999999978e-05, 7.891700000000126e-05, 7.90840000000001e-05, 7.911199999999924e-05, 7.91389999999989e-05, 7.891700000000126e-05, 7.951399999999928e-05, 7.87229999999993e-05, 7.907000000000053e-05, 7.95129999999998e-05, 7.92909999999987e-05, 7.9458000000001e-05, 7.916699999999804e-05, 7.890199999999875e-05, 7.902799999999835e-05, 7.893100000000083e-05, 7.958300000000113e-05, 7.891700000000126e-05, 7.882000000000028e-05, 7.962499999999983e-05, 7.902699999999888e-05, 7.883399999999985e-05, 7.927699999999913e-05, 7.926299999999956e-05, 7.911099999999976e-05, 7.954100000000242e-05, 7.959699999999723e-05, 7.948600000000014e-05, 7.968099999999811e-05, 7.87779999999981e-05, 7.883300000000037e-05, 7.94030000000022e-05, 7.909799999999967e-05, 7.883399999999985e-05, 7.927800000000207e-05, 7.937499999999958e-05, 7.858300000000012e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.095" endtime="20201030 15:52:36.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.090" endtime="20201030 15:52:36.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.102" endtime="20201030 15:52:36.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.100" endtime="20201030 15:52:36.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.099" endtime="20201030 15:52:36.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.738" endtime="20201030 15:52:36.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.738" endtime="20201030 15:52:36.122"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.131" endtime="20201030 15:52:36.150"></status>
</kw>
<msg timestamp="20201030 15:52:36.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.129" endtime="20201030 15:52:36.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.152" endtime="20201030 15:52:36.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.154" endtime="20201030 15:52:36.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.127" endtime="20201030 15:52:36.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.125" endtime="20201030 15:52:36.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.163" endtime="20201030 15:52:36.450"></status>
</kw>
<msg timestamp="20201030 15:52:36.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019666917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.162" endtime="20201030 15:52:36.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019666917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.455" endtime="20201030 15:52:36.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.463" endtime="20201030 15:52:36.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.159" endtime="20201030 15:52:36.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.157" endtime="20201030 15:52:36.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.470" level="INFO">${RESULT} = [{'diff': 8.047299999999757e-05}, {'diff': 8.025000000000046e-05}, {'diff': 8.038900000000015e-05}, {'diff': 8.03329999999984e-05}, {'diff': 7.975000000000343e-05}, {'diff': 8.005599999999849e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:36.466" endtime="20201030 15:52:36.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.474" level="INFO">${ACCURACY} = {'diff': [8.047299999999757e-05, 8.025000000000046e-05, 8.038900000000015e-05, 8.03329999999984e-05, 7.975000000000343e-05, 8.005599999999849e-05, 7.99580000000015e-05, 8.018099999999861e-05, 8.023700...</msg>
<status status="PASS" starttime="20201030 15:52:36.471" endtime="20201030 15:52:36.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.478" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.477" endtime="20201030 15:52:36.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.481" level="INFO">VALUE: [8.047299999999757e-05, 8.025000000000046e-05, 8.038900000000015e-05, 8.03329999999984e-05, 7.975000000000343e-05, 8.005599999999849e-05, 7.99580000000015e-05, 8.018099999999861e-05, 8.023700000000036e-05, 7.998700000000011e-05, 8.058299999999866e-05, 7.984700000000094e-05, 7.970900000000072e-05, 7.997200000000107e-05, 7.969399999999821e-05, 7.984700000000094e-05, 8.037500000000058e-05, 7.981899999999834e-05, 8.009699999999773e-05, 8.044399999999896e-05, 8.051400000000028e-05, 7.970899999999725e-05, 8.016700000000251e-05, 8.062500000000083e-05, 8.016700000000251e-05, 8.061200000000074e-05, 8.022199999999785e-05, 8.054099999999995e-05, 7.988800000000018e-05, 8.009699999999773e-05, 7.970800000000125e-05, 8.059699999999823e-05, 8.024999999999699e-05, 7.984700000000094e-05, 8.034699999999798e-05, 8.025000000000046e-05, 7.997300000000054e-05, 8.02779999999996e-05, 8.023700000000036e-05, 7.979199999999867e-05, 7.97779999999991e-05, 7.984700000000094e-05, 8.020799999999828e-05, 8.06390000000004e-05, 7.99169999999988e-05, 8.029199999999917e-05, 8.051400000000028e-05, 8.052799999999985e-05, 7.983300000000138e-05, 8.040299999999972e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.479" endtime="20201030 15:52:36.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.475" endtime="20201030 15:52:36.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.486" endtime="20201030 15:52:36.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.484" endtime="20201030 15:52:36.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.483" endtime="20201030 15:52:36.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.123" endtime="20201030 15:52:36.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.123" endtime="20201030 15:52:36.506"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.515" endtime="20201030 15:52:36.536"></status>
</kw>
<msg timestamp="20201030 15:52:36.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.513" endtime="20201030 15:52:36.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.537" endtime="20201030 15:52:36.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.540" endtime="20201030 15:52:36.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.511" endtime="20201030 15:52:36.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.509" endtime="20201030 15:52:36.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.549" endtime="20201030 15:52:36.834"></status>
</kw>
<msg timestamp="20201030 15:52:36.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.547" endtime="20201030 15:52:36.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.838" endtime="20201030 15:52:36.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.847" endtime="20201030 15:52:36.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.545" endtime="20201030 15:52:36.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.543" endtime="20201030 15:52:36.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.853" level="INFO">${RESULT} = [{'diff': 8.166700000000054e-05}, {'diff': 8.134699999999898e-05}, {'diff': 8.11109999999983e-05}, {'diff': 8.081999999999881e-05}, {'diff': 8.088900000000065e-05}, {'diff': 8.162499999999837e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:36.850" endtime="20201030 15:52:36.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.857" level="INFO">${ACCURACY} = {'diff': [8.166700000000054e-05, 8.134699999999898e-05, 8.11109999999983e-05, 8.081999999999881e-05, 8.088900000000065e-05, 8.162499999999837e-05, 8.158399999999913e-05, 8.07780000000001e-05, 8.083299...</msg>
<status status="PASS" starttime="20201030 15:52:36.854" endtime="20201030 15:52:36.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.862" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.861" endtime="20201030 15:52:36.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.864" level="INFO">VALUE: [8.166700000000054e-05, 8.134699999999898e-05, 8.11109999999983e-05, 8.081999999999881e-05, 8.088900000000065e-05, 8.162499999999837e-05, 8.158399999999913e-05, 8.07780000000001e-05, 8.08329999999989e-05, 8.161100000000227e-05, 8.140200000000125e-05, 8.14719999999991e-05, 8.111100000000177e-05, 8.074999999999749e-05, 8.14719999999991e-05, 8.075000000000096e-05, 8.07780000000001e-05, 8.13329999999994e-05, 8.158299999999966e-05, 8.165300000000097e-05, 8.10840000000021e-05, 8.140200000000125e-05, 8.120799999999928e-05, 8.138899999999769e-05, 8.086099999999805e-05, 8.102799999999688e-05, 8.152799999999738e-05, 8.16659999999976e-05, 8.111100000000177e-05, 8.165300000000097e-05, 8.145799999999953e-05, 8.11109999999983e-05, 8.056999999999856e-05, 8.093100000000283e-05, 8.127799999999713e-05, 8.094499999999893e-05, 8.083399999999838e-05, 8.10970000000022e-05, 8.159699999999923e-05, 8.087500000000108e-05, 8.154200000000042e-05, 8.144399999999996e-05, 8.120799999999928e-05, 8.166699999999708e-05, 8.145799999999953e-05, 8.097200000000207e-05, 8.16109999999988e-05, 8.092999999999989e-05, 8.162500000000183e-05, 8.093099999999936e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.863" endtime="20201030 15:52:36.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.858" endtime="20201030 15:52:36.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.870" endtime="20201030 15:52:36.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.869" endtime="20201030 15:52:36.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.867" endtime="20201030 15:52:36.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.507" endtime="20201030 15:52:36.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.507" endtime="20201030 15:52:36.891"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.900" endtime="20201030 15:52:36.921"></status>
</kw>
<msg timestamp="20201030 15:52:36.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.899" endtime="20201030 15:52:36.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.922" endtime="20201030 15:52:36.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.925" endtime="20201030 15:52:36.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.896" endtime="20201030 15:52:36.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.893" endtime="20201030 15:52:36.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.934" endtime="20201030 15:52:37.220"></status>
</kw>
<msg timestamp="20201030 15:52:37.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020081139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.932" endtime="20201030 15:52:37.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020081139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.225" endtime="20201030 15:52:37.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.233" endtime="20201030 15:52:37.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.930" endtime="20201030 15:52:37.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.928" endtime="20201030 15:52:37.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.239" level="INFO">${RESULT} = [{'diff': 8.258300000000066e-05}, {'diff': 8.241699999999783e-05}, {'diff': 8.226400000000203e-05}, {'diff': 8.236099999999955e-05}, {'diff': 8.179099999999773e-05}, {'diff': 8.26109999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:37.236" endtime="20201030 15:52:37.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.244" level="INFO">${ACCURACY} = {'diff': [8.258300000000066e-05, 8.241699999999783e-05, 8.226400000000203e-05, 8.236099999999955e-05, 8.179099999999773e-05, 8.26109999999998e-05, 8.216700000000104e-05, 8.195800000000003e-05, 8.18340...</msg>
<status status="PASS" starttime="20201030 15:52:37.240" endtime="20201030 15:52:37.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.249" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.248" endtime="20201030 15:52:37.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.252" level="INFO">VALUE: [8.258300000000066e-05, 8.241699999999783e-05, 8.226400000000203e-05, 8.236099999999955e-05, 8.179099999999773e-05, 8.26109999999998e-05, 8.216700000000104e-05, 8.195800000000003e-05, 8.183400000000285e-05, 8.268000000000164e-05, 8.215300000000147e-05, 8.19719999999996e-05, 8.234699999999998e-05, 8.188899999999819e-05, 8.2459e-05, 8.258399999999666e-05, 8.17780000000011e-05, 8.204200000000092e-05, 8.205600000000049e-05, 8.252699999999891e-05, 8.254099999999848e-05, 8.213899999999844e-05, 8.202800000000135e-05, 8.21659999999981e-05, 8.248600000000314e-05, 8.222199999999985e-05, 8.208300000000016e-05, 8.21390000000019e-05, 8.216700000000104e-05, 8.220899999999975e-05, 8.173600000000239e-05, 8.213899999999844e-05, 8.226399999999856e-05, 8.208300000000016e-05, 8.227699999999866e-05, 8.199999999999874e-05, 8.176400000000153e-05, 8.255600000000099e-05, 8.26529999999985e-05, 8.22919999999977e-05, 8.205600000000049e-05, 8.241699999999783e-05, 8.219500000000018e-05, 8.209699999999973e-05, 8.2459e-05, 8.170899999999925e-05, 8.197299999999907e-05, 8.234699999999998e-05, 8.245800000000053e-05, 8.198599999999917e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.250" endtime="20201030 15:52:37.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.245" endtime="20201030 15:52:37.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.257" endtime="20201030 15:52:37.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.255" endtime="20201030 15:52:37.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.254" endtime="20201030 15:52:37.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.892" endtime="20201030 15:52:37.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.891" endtime="20201030 15:52:37.277"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.287" endtime="20201030 15:52:37.307"></status>
</kw>
<msg timestamp="20201030 15:52:37.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.285" endtime="20201030 15:52:37.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.309" endtime="20201030 15:52:37.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.311" endtime="20201030 15:52:37.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.283" endtime="20201030 15:52:37.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.280" endtime="20201030 15:52:37.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.322" endtime="20201030 15:52:37.626"></status>
</kw>
<msg timestamp="20201030 15:52:37.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020986764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021070306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.319" endtime="20201030 15:52:37.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020986764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021070306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.630" endtime="20201030 15:52:37.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.639" endtime="20201030 15:52:37.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.316" endtime="20201030 15:52:37.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.315" endtime="20201030 15:52:37.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.645" level="INFO">${RESULT} = [{'diff': 8.354199999999895e-05}, {'diff': 8.272200000000035e-05}, {'diff': 8.355499999999905e-05}, {'diff': 8.273599999999992e-05}, {'diff': 8.313899999999944e-05}, {'diff': 8.299999999999974e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:37.642" endtime="20201030 15:52:37.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.649" level="INFO">${ACCURACY} = {'diff': [8.354199999999895e-05, 8.272200000000035e-05, 8.355499999999905e-05, 8.273599999999992e-05, 8.313899999999944e-05, 8.299999999999974e-05, 8.326399999999956e-05, 8.340299999999926e-05, 8.3583...</msg>
<status status="PASS" starttime="20201030 15:52:37.646" endtime="20201030 15:52:37.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.654" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.653" endtime="20201030 15:52:37.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.656" level="INFO">VALUE: [8.354199999999895e-05, 8.272200000000035e-05, 8.355499999999905e-05, 8.273599999999992e-05, 8.313899999999944e-05, 8.299999999999974e-05, 8.326399999999956e-05, 8.340299999999926e-05, 8.358300000000166e-05, 8.327799999999913e-05, 8.302799999999888e-05, 8.277799999999863e-05, 8.305599999999802e-05, 8.322199999999738e-05, 8.336100000000055e-05, 8.331900000000184e-05, 8.341600000000282e-05, 8.313899999999944e-05, 8.354199999999895e-05, 8.366700000000254e-05, 8.284700000000048e-05, 8.352799999999938e-05, 8.287499999999962e-05, 8.301399999999931e-05, 8.308400000000063e-05, 8.352799999999938e-05, 8.355500000000252e-05, 8.345800000000153e-05, 8.355599999999852e-05, 8.319400000000171e-05, 8.337500000000012e-05, 8.302699999999941e-05, 8.340300000000272e-05, 8.348600000000067e-05, 8.320800000000128e-05, 8.295800000000103e-05, 8.274999999999949e-05, 8.302800000000235e-05, 8.338900000000316e-05, 8.331999999999784e-05, 8.32780000000026e-05, 8.272200000000035e-05, 8.355499999999905e-05, 8.301299999999984e-05, 8.34859999999972e-05, 8.305499999999855e-05, 8.318100000000161e-05, 8.334700000000098e-05, 8.340299999999926e-05, 8.301399999999931e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.655" endtime="20201030 15:52:37.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.650" endtime="20201030 15:52:37.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.661" endtime="20201030 15:52:37.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.659" endtime="20201030 15:52:37.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.658" endtime="20201030 15:52:37.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.279" endtime="20201030 15:52:37.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.278" endtime="20201030 15:52:37.682"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.690" endtime="20201030 15:52:37.711"></status>
</kw>
<msg timestamp="20201030 15:52:37.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.689" endtime="20201030 15:52:37.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.713" endtime="20201030 15:52:37.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.715" endtime="20201030 15:52:37.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.686" endtime="20201030 15:52:37.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.684" endtime="20201030 15:52:37.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.724" endtime="20201030 15:52:38.010"></status>
</kw>
<msg timestamp="20201030 15:52:38.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020339069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020423583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.723" endtime="20201030 15:52:38.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020339069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020423583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.014" endtime="20201030 15:52:38.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.023" endtime="20201030 15:52:38.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.720" endtime="20201030 15:52:38.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.718" endtime="20201030 15:52:38.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.029" level="INFO">${RESULT} = [{'diff': 8.451399999999734e-05}, {'diff': 8.422200000000185e-05}, {'diff': 8.398600000000117e-05}, {'diff': 8.406899999999912e-05}, {'diff': 8.46530000000005e-05}, {'diff': 8.39590000000015e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:38.026" endtime="20201030 15:52:38.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.033" level="INFO">${ACCURACY} = {'diff': [8.451399999999734e-05, 8.422200000000185e-05, 8.398600000000117e-05, 8.406899999999912e-05, 8.46530000000005e-05, 8.39590000000015e-05, 8.369399999999874e-05, 8.461200000000127e-05, 8.370899...</msg>
<status status="PASS" starttime="20201030 15:52:38.030" endtime="20201030 15:52:38.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.038" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.037" endtime="20201030 15:52:38.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.040" level="INFO">VALUE: [8.451399999999734e-05, 8.422200000000185e-05, 8.398600000000117e-05, 8.406899999999912e-05, 8.46530000000005e-05, 8.39590000000015e-05, 8.369399999999874e-05, 8.461200000000127e-05, 8.370899999999779e-05, 8.454199999999995e-05, 8.441600000000035e-05, 8.433399999999841e-05, 8.422199999999838e-05, 8.444399999999949e-05, 8.404199999999945e-05, 8.441600000000035e-05, 8.462500000000137e-05, 8.375000000000049e-05, 8.391699999999933e-05, 8.431899999999937e-05, 8.404199999999945e-05, 8.384700000000148e-05, 8.39720000000016e-05, 8.46530000000005e-05, 8.45980000000017e-05, 8.461200000000127e-05, 8.429200000000317e-05, 8.433299999999894e-05, 8.422200000000185e-05, 8.418000000000314e-05, 8.452800000000038e-05, 8.43469999999985e-05, 8.370800000000178e-05, 8.383299999999844e-05, 8.397199999999813e-05, 8.459699999999876e-05, 8.39309999999989e-05, 8.46249999999979e-05, 8.463899999999747e-05, 8.437500000000112e-05, 8.402700000000041e-05, 8.390200000000028e-05, 8.429100000000023e-05, 8.463900000000094e-05, 8.373600000000092e-05, 8.441600000000035e-05, 8.422199999999838e-05, 8.4153e-05, 8.448600000000167e-05, 8.376400000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.039" endtime="20201030 15:52:38.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.034" endtime="20201030 15:52:38.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.052" endtime="20201030 15:52:38.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.051" endtime="20201030 15:52:38.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.049" endtime="20201030 15:52:38.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.683" endtime="20201030 15:52:38.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.682" endtime="20201030 15:52:38.073"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.082" endtime="20201030 15:52:38.102"></status>
</kw>
<msg timestamp="20201030 15:52:38.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.080" endtime="20201030 15:52:38.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.103" endtime="20201030 15:52:38.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.105" endtime="20201030 15:52:38.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.077" endtime="20201030 15:52:38.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.075" endtime="20201030 15:52:38.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.115" endtime="20201030 15:52:38.401"></status>
</kw>
<msg timestamp="20201030 15:52:38.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019695042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.113" endtime="20201030 15:52:38.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019695042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.405" endtime="20201030 15:52:38.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.413" endtime="20201030 15:52:38.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.110" endtime="20201030 15:52:38.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.109" endtime="20201030 15:52:38.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.420" level="INFO">${RESULT} = [{'diff': 8.558300000000019e-05}, {'diff': 8.555599999999705e-05}, {'diff': 8.568100000000065e-05}, {'diff': 8.551400000000181e-05}, {'diff': 8.480599999999977e-05}, {'diff': 8.502799999999741e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:38.416" endtime="20201030 15:52:38.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.425" level="INFO">${ACCURACY} = {'diff': [8.558300000000019e-05, 8.555599999999705e-05, 8.568100000000065e-05, 8.551400000000181e-05, 8.480599999999977e-05, 8.502799999999741e-05, 8.526399999999809e-05, 8.487500000000162e-05, 8.5153...</msg>
<status status="PASS" starttime="20201030 15:52:38.421" endtime="20201030 15:52:38.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.429" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.428" endtime="20201030 15:52:38.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.432" level="INFO">VALUE: [8.558300000000019e-05, 8.555599999999705e-05, 8.568100000000065e-05, 8.551400000000181e-05, 8.480599999999977e-05, 8.502799999999741e-05, 8.526399999999809e-05, 8.487500000000162e-05, 8.5153000000001e-05, 8.541599999999788e-05, 8.540199999999831e-05, 8.552799999999791e-05, 8.558300000000019e-05, 8.552800000000138e-05, 8.554200000000095e-05, 8.509699999999926e-05, 8.555600000000052e-05, 8.470899999999879e-05, 8.547199999999963e-05, 8.550000000000224e-05, 8.558300000000019e-05, 8.495899999999904e-05, 8.522299999999886e-05, 8.531900000000037e-05, 8.547199999999963e-05, 8.473600000000192e-05, 8.488899999999772e-05, 8.486099999999858e-05, 8.495799999999956e-05, 8.554199999999748e-05, 8.547199999999963e-05, 8.515299999999754e-05, 8.504200000000045e-05, 8.522199999999938e-05, 8.491699999999686e-05, 8.52370000000019e-05, 8.46110000000018e-05, 8.497199999999913e-05, 8.544400000000049e-05, 8.502699999999794e-05, 8.536099999999908e-05, 8.547199999999963e-05, 8.56530000000015e-05, 8.472199999999888e-05, 8.475000000000149e-05, 8.494399999999999e-05, 8.483399999999891e-05, 8.483399999999891e-05, 8.512500000000187e-05, 8.494499999999947e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.430" endtime="20201030 15:52:38.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.426" endtime="20201030 15:52:38.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.437" endtime="20201030 15:52:38.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.435" endtime="20201030 15:52:38.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.434" endtime="20201030 15:52:38.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.074" endtime="20201030 15:52:38.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.073" endtime="20201030 15:52:38.457"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.466" endtime="20201030 15:52:38.486"></status>
</kw>
<msg timestamp="20201030 15:52:38.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.464" endtime="20201030 15:52:38.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.487" endtime="20201030 15:52:38.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.490" endtime="20201030 15:52:38.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.462" endtime="20201030 15:52:38.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.460" endtime="20201030 15:52:38.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.501" endtime="20201030 15:52:38.787"></status>
</kw>
<msg timestamp="20201030 15:52:38.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019482806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019569125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.498" endtime="20201030 15:52:38.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019482806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019569125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.791" endtime="20201030 15:52:38.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.800" endtime="20201030 15:52:38.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.495" endtime="20201030 15:52:38.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.493" endtime="20201030 15:52:38.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.806" level="INFO">${RESULT} = [{'diff': 8.631900000000137e-05}, {'diff': 8.638899999999922e-05}, {'diff': 8.663900000000294e-05}, {'diff': 8.651400000000281e-05}, {'diff': 8.618100000000115e-05}, {'diff': 8.659700000000076e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:38.803" endtime="20201030 15:52:38.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.810" level="INFO">${ACCURACY} = {'diff': [8.631900000000137e-05, 8.638899999999922e-05, 8.663900000000294e-05, 8.651400000000281e-05, 8.618100000000115e-05, 8.659700000000076e-05, 8.607000000000059e-05, 8.619500000000072e-05, 8.5695...</msg>
<status status="PASS" starttime="20201030 15:52:38.807" endtime="20201030 15:52:38.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.815" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.814" endtime="20201030 15:52:38.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.817" level="INFO">VALUE: [8.631900000000137e-05, 8.638899999999922e-05, 8.663900000000294e-05, 8.651400000000281e-05, 8.618100000000115e-05, 8.659700000000076e-05, 8.607000000000059e-05, 8.619500000000072e-05, 8.569500000000022e-05, 8.577799999999816e-05, 8.591599999999838e-05, 8.663799999999999e-05, 8.633300000000094e-05, 8.647200000000063e-05, 8.613900000000244e-05, 8.620800000000081e-05, 8.66669999999986e-05, 8.64860000000002e-05, 8.59859999999997e-05, 8.630600000000127e-05, 8.584799999999948e-05, 8.59729999999996e-05, 8.64860000000002e-05, 8.642999999999845e-05, 8.604099999999851e-05, 8.615199999999906e-05, 8.616700000000158e-05, 8.64860000000002e-05, 8.602799999999841e-05, 8.626399999999909e-05, 8.645799999999759e-05, 8.608400000000016e-05, 8.637499999999965e-05, 8.583399999999991e-05, 8.641699999999836e-05, 8.634799999999998e-05, 8.604100000000198e-05, 8.626399999999909e-05, 8.59859999999997e-05, 8.597200000000013e-05, 8.579100000000173e-05, 8.613899999999897e-05, 8.570800000000031e-05, 8.656899999999815e-05, 8.570800000000031e-05, 8.595900000000004e-05, 8.591700000000133e-05, 8.633400000000041e-05, 8.627699999999919e-05, 8.583399999999991e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.816" endtime="20201030 15:52:38.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.811" endtime="20201030 15:52:38.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.822" endtime="20201030 15:52:38.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.821" endtime="20201030 15:52:38.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.819" endtime="20201030 15:52:38.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.458" endtime="20201030 15:52:38.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.458" endtime="20201030 15:52:38.843"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.851" endtime="20201030 15:52:38.872"></status>
</kw>
<msg timestamp="20201030 15:52:38.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.850" endtime="20201030 15:52:38.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.874" endtime="20201030 15:52:38.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.876" endtime="20201030 15:52:38.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.847" endtime="20201030 15:52:38.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.845" endtime="20201030 15:52:38.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.885" endtime="20201030 15:52:39.172"></status>
</kw>
<msg timestamp="20201030 15:52:39.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020428694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.884" endtime="20201030 15:52:39.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020428694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.176" endtime="20201030 15:52:39.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.184" endtime="20201030 15:52:39.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.881" endtime="20201030 15:52:39.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.880" endtime="20201030 15:52:39.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.191" level="INFO">${RESULT} = [{'diff': 8.684800000000048e-05}, {'diff': 8.736099999999761e-05}, {'diff': 8.754100000000001e-05}, {'diff': 8.713800000000049e-05}, {'diff': 8.686100000000058e-05}, {'diff': 8.684699999999754e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:39.188" endtime="20201030 15:52:39.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.195" level="INFO">${ACCURACY} = {'diff': [8.684800000000048e-05, 8.736099999999761e-05, 8.754100000000001e-05, 8.713800000000049e-05, 8.686100000000058e-05, 8.684699999999754e-05, 8.745799999999859e-05, 8.755600000000252e-05, 8.6833...</msg>
<status status="PASS" starttime="20201030 15:52:39.192" endtime="20201030 15:52:39.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.199" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.198" endtime="20201030 15:52:39.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.202" level="INFO">VALUE: [8.684800000000048e-05, 8.736099999999761e-05, 8.754100000000001e-05, 8.713800000000049e-05, 8.686100000000058e-05, 8.684699999999754e-05, 8.745799999999859e-05, 8.755600000000252e-05, 8.683300000000144e-05, 8.720800000000181e-05, 8.727799999999966e-05, 8.747199999999816e-05, 8.683300000000144e-05, 8.737500000000065e-05, 8.695900000000104e-05, 8.702799999999941e-05, 8.684699999999754e-05, 8.736099999999761e-05, 8.713800000000049e-05, 8.765200000000056e-05, 8.693000000000242e-05, 8.706899999999865e-05, 8.751400000000034e-05, 8.736100000000108e-05, 8.765299999999657e-05, 8.673600000000045e-05, 8.716700000000258e-05, 8.677800000000263e-05, 8.751400000000034e-05, 8.682000000000134e-05, 8.677699999999969e-05, 8.725000000000052e-05, 8.765200000000056e-05, 8.750000000000077e-05, 8.680600000000177e-05, 8.708300000000169e-05, 8.756999999999862e-05, 8.740200000000031e-05, 8.740299999999979e-05, 8.740299999999979e-05, 8.704199999999898e-05, 8.677799999999916e-05, 8.722300000000086e-05, 8.698599999999723e-05, 8.661100000000033e-05, 8.677699999999969e-05, 8.706899999999865e-05, 8.684699999999754e-05, 8.690299999999929e-05, 8.697200000000113e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.200" endtime="20201030 15:52:39.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.196" endtime="20201030 15:52:39.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.208" endtime="20201030 15:52:39.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.206" endtime="20201030 15:52:39.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.205" endtime="20201030 15:52:39.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.844" endtime="20201030 15:52:39.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.843" endtime="20201030 15:52:39.228"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.237" endtime="20201030 15:52:39.258"></status>
</kw>
<msg timestamp="20201030 15:52:39.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.235" endtime="20201030 15:52:39.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.259" endtime="20201030 15:52:39.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.262" endtime="20201030 15:52:39.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.233" endtime="20201030 15:52:39.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.231" endtime="20201030 15:52:39.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.271" endtime="20201030 15:52:39.556"></status>
</kw>
<msg timestamp="20201030 15:52:39.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019531847, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:39.269" endtime="20201030 15:52:39.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019531847, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:39.560" endtime="20201030 15:52:39.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.568" endtime="20201030 15:52:39.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.266" endtime="20201030 15:52:39.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.265" endtime="20201030 15:52:39.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.575" level="INFO">${RESULT} = [{'diff': 8.784700000000201e-05}, {'diff': 8.820799999999934e-05}, {'diff': 8.776400000000059e-05}, {'diff': 8.815300000000054e-05}, {'diff': 8.773599999999798e-05}, {'diff': 8.845799999999959e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:39.572" endtime="20201030 15:52:39.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.580" level="INFO">${ACCURACY} = {'diff': [8.784700000000201e-05, 8.820799999999934e-05, 8.776400000000059e-05, 8.815300000000054e-05, 8.773599999999798e-05, 8.845799999999959e-05, 8.775000000000102e-05, 8.815300000000054e-05, 8.8264...</msg>
<status status="PASS" starttime="20201030 15:52:39.576" endtime="20201030 15:52:39.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.584" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.583" endtime="20201030 15:52:39.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.587" level="INFO">VALUE: [8.784700000000201e-05, 8.820799999999934e-05, 8.776400000000059e-05, 8.815300000000054e-05, 8.773599999999798e-05, 8.845799999999959e-05, 8.775000000000102e-05, 8.815300000000054e-05, 8.826400000000109e-05, 8.86800000000007e-05, 8.805500000000008e-05, 8.78189999999994e-05, 8.863799999999852e-05, 8.829100000000076e-05, 8.863900000000147e-05, 8.775000000000102e-05, 8.815300000000054e-05, 8.786099999999811e-05, 8.777800000000016e-05, 8.777800000000016e-05, 8.845799999999959e-05, 8.826399999999762e-05, 8.837499999999818e-05, 8.826399999999762e-05, 8.770799999999884e-05, 8.798599999999823e-05, 8.863900000000147e-05, 8.830500000000033e-05, 8.759700000000176e-05, 8.824999999999805e-05, 8.813900000000097e-05, 8.823599999999848e-05, 8.804199999999998e-05, 8.84860000000022e-05, 8.81389999999975e-05, 8.786100000000158e-05, 8.808400000000216e-05, 8.844500000000297e-05, 8.822199999999891e-05, 8.840199999999784e-05, 8.805500000000008e-05, 8.788900000000072e-05, 8.836100000000208e-05, 8.790300000000029e-05, 8.854200000000048e-05, 8.820799999999934e-05, 8.834699999999904e-05, 8.78189999999994e-05, 8.855500000000058e-05, 8.844400000000002e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.586" endtime="20201030 15:52:39.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.581" endtime="20201030 15:52:39.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.592" endtime="20201030 15:52:39.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.590" endtime="20201030 15:52:39.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.589" endtime="20201030 15:52:39.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.229" endtime="20201030 15:52:39.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.229" endtime="20201030 15:52:39.613"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.621" endtime="20201030 15:52:39.642"></status>
</kw>
<msg timestamp="20201030 15:52:39.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.620" endtime="20201030 15:52:39.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.643" endtime="20201030 15:52:39.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.646" endtime="20201030 15:52:39.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.617" endtime="20201030 15:52:39.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.615" endtime="20201030 15:52:39.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.654" endtime="20201030 15:52:39.941"></status>
</kw>
<msg timestamp="20201030 15:52:39.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019616972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.653" endtime="20201030 15:52:39.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019616972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.945" endtime="20201030 15:52:39.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.954" endtime="20201030 15:52:39.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.650" endtime="20201030 15:52:39.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.649" endtime="20201030 15:52:39.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.960" level="INFO">${RESULT} = [{'diff': 8.919400000000077e-05}, {'diff': 8.873599999999898e-05}, {'diff': 8.947200000000016e-05}, {'diff': 8.940299999999832e-05}, {'diff': 8.909700000000326e-05}, {'diff': 8.897199999999966e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:39.957" endtime="20201030 15:52:39.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.964" level="INFO">${ACCURACY} = {'diff': [8.919400000000077e-05, 8.873599999999898e-05, 8.947200000000016e-05, 8.940299999999832e-05, 8.909700000000326e-05, 8.897199999999966e-05, 8.952799999999844e-05, 8.954199999999801e-05, 8.9583...</msg>
<status status="PASS" starttime="20201030 15:52:39.961" endtime="20201030 15:52:39.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.969" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.968" endtime="20201030 15:52:39.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.971" level="INFO">VALUE: [8.919400000000077e-05, 8.873599999999898e-05, 8.947200000000016e-05, 8.940299999999832e-05, 8.909700000000326e-05, 8.897199999999966e-05, 8.952799999999844e-05, 8.954199999999801e-05, 8.958300000000072e-05, 8.920899999999982e-05, 8.8945e-05, 8.927800000000166e-05, 8.96939999999978e-05, 8.913799999999902e-05, 8.891600000000138e-05, 8.958299999999725e-05, 8.883299999999997e-05, 8.965300000000204e-05, 8.923599999999948e-05, 8.961099999999986e-05, 8.937499999999918e-05, 8.890299999999782e-05, 8.883399999999944e-05, 8.895899999999957e-05, 8.937499999999918e-05, 8.891599999999791e-05, 8.856900000000015e-05, 8.90129999999989e-05, 8.937499999999918e-05, 8.945800000000059e-05, 8.902800000000141e-05, 8.937500000000265e-05, 8.930500000000133e-05, 8.965300000000204e-05, 8.893100000000043e-05, 8.91250000000024e-05, 8.884699999999954e-05, 8.923699999999896e-05, 8.909799999999926e-05, 8.880500000000083e-05, 8.902700000000194e-05, 8.920800000000034e-05, 8.9332999999997e-05, 8.898599999999923e-05, 8.919500000000025e-05, 8.954200000000148e-05, 8.958299999999725e-05, 8.883299999999997e-05, 8.916699999999764e-05, 8.883399999999944e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.970" endtime="20201030 15:52:39.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.965" endtime="20201030 15:52:39.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.976" endtime="20201030 15:52:39.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.975" endtime="20201030 15:52:39.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.974" endtime="20201030 15:52:39.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.613" endtime="20201030 15:52:39.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.613" endtime="20201030 15:52:39.997"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.006" endtime="20201030 15:52:40.027"></status>
</kw>
<msg timestamp="20201030 15:52:40.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.004" endtime="20201030 15:52:40.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.029" endtime="20201030 15:52:40.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.031" endtime="20201030 15:52:40.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.002" endtime="20201030 15:52:40.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.000" endtime="20201030 15:52:40.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.040" endtime="20201030 15:52:40.327"></status>
</kw>
<msg timestamp="20201030 15:52:40.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02056725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020657042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:40.038" endtime="20201030 15:52:40.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02056725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020657042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:40.334" endtime="20201030 15:52:40.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.346" endtime="20201030 15:52:40.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.036" endtime="20201030 15:52:40.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.034" endtime="20201030 15:52:40.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.354" level="INFO">${RESULT} = [{'diff': 8.979200000000173e-05}, {'diff': 8.988899999999925e-05}, {'diff': 9.063799999999705e-05}, {'diff': 9.052699999999997e-05}, {'diff': 8.972200000000041e-05}, {'diff': 9.008299999999775e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:40.351" endtime="20201030 15:52:40.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.359" level="INFO">${ACCURACY} = {'diff': [8.979200000000173e-05, 8.988899999999925e-05, 9.063799999999705e-05, 9.052699999999997e-05, 8.972200000000041e-05, 9.008299999999775e-05, 9.006899999999818e-05, 9.056899999999868e-05, 8.9694...</msg>
<status status="PASS" starttime="20201030 15:52:40.355" endtime="20201030 15:52:40.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.363" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.362" endtime="20201030 15:52:40.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.365" level="INFO">VALUE: [8.979200000000173e-05, 8.988899999999925e-05, 9.063799999999705e-05, 9.052699999999997e-05, 8.972200000000041e-05, 9.008299999999775e-05, 9.006899999999818e-05, 9.056899999999868e-05, 8.969400000000127e-05, 9.015299999999907e-05, 9.008299999999775e-05, 9.007000000000112e-05, 8.973599999999998e-05, 8.973599999999998e-05, 9.054200000000248e-05, 8.970899999999685e-05, 8.995800000000109e-05, 9.06520000000001e-05, 8.980500000000183e-05, 8.96939999999978e-05, 9.059699999999782e-05, 9.027800000000266e-05, 9.008300000000122e-05, 9.03199999999979e-05, 9.008400000000069e-05, 8.988899999999925e-05, 8.976399999999912e-05, 9.061200000000033e-05, 9.019500000000125e-05, 9.041600000000288e-05, 8.977699999999922e-05, 9.040299999999932e-05, 8.976399999999912e-05, 9.015299999999907e-05, 9.001400000000284e-05, 8.990299999999882e-05, 9.047200000000116e-05, 8.988900000000272e-05, 8.986100000000011e-05, 8.988900000000272e-05, 8.98199999999974e-05, 9.015299999999907e-05, 8.973699999999946e-05, 8.98190000000014e-05, 9.023600000000048e-05, 8.986100000000011e-05, 9.01670000000021e-05, 8.96939999999978e-05, 9.008299999999775e-05, 9.016699999999864e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.364" endtime="20201030 15:52:40.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.359" endtime="20201030 15:52:40.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.371" endtime="20201030 15:52:40.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.370" endtime="20201030 15:52:40.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.369" endtime="20201030 15:52:40.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.998" endtime="20201030 15:52:40.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.997" endtime="20201030 15:52:40.392"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.401" endtime="20201030 15:52:40.421"></status>
</kw>
<msg timestamp="20201030 15:52:40.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.399" endtime="20201030 15:52:40.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.422" endtime="20201030 15:52:40.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.425" endtime="20201030 15:52:40.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.397" endtime="20201030 15:52:40.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.395" endtime="20201030 15:52:40.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.434" endtime="20201030 15:52:40.721"></status>
</kw>
<msg timestamp="20201030 15:52:40.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019710833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.433" endtime="20201030 15:52:40.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019710833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.725" endtime="20201030 15:52:40.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.733" endtime="20201030 15:52:40.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.430" endtime="20201030 15:52:40.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.428" endtime="20201030 15:52:40.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.740" level="INFO">${RESULT} = [{'diff': 9.125000000000105e-05}, {'diff': 9.097199999999819e-05}, {'diff': 9.091699999999939e-05}, {'diff': 9.166700000000014e-05}, {'diff': 9.083399999999797e-05}, {'diff': 9.090299999999982e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:40.737" endtime="20201030 15:52:40.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.745" level="INFO">${ACCURACY} = {'diff': [9.125000000000105e-05, 9.097199999999819e-05, 9.091699999999939e-05, 9.166700000000014e-05, 9.083399999999797e-05, 9.090299999999982e-05, 9.168000000000023e-05, 9.127699999999725e-05, 9.1250...</msg>
<status status="PASS" starttime="20201030 15:52:40.741" endtime="20201030 15:52:40.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.749" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.748" endtime="20201030 15:52:40.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.752" level="INFO">VALUE: [9.125000000000105e-05, 9.097199999999819e-05, 9.091699999999939e-05, 9.166700000000014e-05, 9.083399999999797e-05, 9.090299999999982e-05, 9.168000000000023e-05, 9.127699999999725e-05, 9.125000000000105e-05, 9.086099999999764e-05, 9.080499999999936e-05, 9.101400000000037e-05, 9.079199999999926e-05, 9.127800000000019e-05, 9.072299999999742e-05, 9.088900000000025e-05, 9.11390000000005e-05, 9.077799999999969e-05, 9.161100000000186e-05, 9.127800000000019e-05, 9.15130000000014e-05, 9.097199999999819e-05, 9.101400000000037e-05, 9.095799999999862e-05, 9.109700000000179e-05, 9.130599999999933e-05, 9.075000000000055e-05, 9.145799999999912e-05, 9.102700000000047e-05, 9.083400000000144e-05, 9.132000000000237e-05, 9.159800000000176e-05, 9.13199999999989e-05, 9.159699999999882e-05, 9.077700000000022e-05, 9.163899999999753e-05, 9.095800000000209e-05, 9.158299999999925e-05, 9.14719999999987e-05, 9.141699999999989e-05, 9.079200000000273e-05, 9.138900000000075e-05, 9.102799999999994e-05, 9.079199999999926e-05, 9.104199999999951e-05, 9.122300000000139e-05, 9.098599999999776e-05, 9.1639000000001e-05, 9.159699999999882e-05, 9.129200000000323e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.750" endtime="20201030 15:52:40.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.746" endtime="20201030 15:52:40.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.757" endtime="20201030 15:52:40.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.755" endtime="20201030 15:52:40.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.754" endtime="20201030 15:52:40.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.393" endtime="20201030 15:52:40.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.392" endtime="20201030 15:52:40.777"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.786" endtime="20201030 15:52:40.806"></status>
</kw>
<msg timestamp="20201030 15:52:40.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.785" endtime="20201030 15:52:40.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.808" endtime="20201030 15:52:40.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.810" endtime="20201030 15:52:40.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.782" endtime="20201030 15:52:40.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.780" endtime="20201030 15:52:40.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.819" endtime="20201030 15:52:41.108"></status>
</kw>
<msg timestamp="20201030 15:52:41.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019673722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.818" endtime="20201030 15:52:41.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019673722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.112" endtime="20201030 15:52:41.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.120" endtime="20201030 15:52:41.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.815" endtime="20201030 15:52:41.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.813" endtime="20201030 15:52:41.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.127" level="INFO">${RESULT} = [{'diff': 9.205500000000061e-05}, {'diff': 9.245800000000012e-05}, {'diff': 9.211099999999889e-05}, {'diff': 9.236100000000261e-05}, {'diff': 9.26529999999981e-05}, {'diff': 9.176400000000112e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:41.124" endtime="20201030 15:52:41.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.131" level="INFO">${ACCURACY} = {'diff': [9.205500000000061e-05, 9.245800000000012e-05, 9.211099999999889e-05, 9.236100000000261e-05, 9.26529999999981e-05, 9.176400000000112e-05, 9.254199999999754e-05, 9.172199999999894e-05, 9.21250...</msg>
<status status="PASS" starttime="20201030 15:52:41.128" endtime="20201030 15:52:41.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.136" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.134" endtime="20201030 15:52:41.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.138" level="INFO">VALUE: [9.205500000000061e-05, 9.245800000000012e-05, 9.211099999999889e-05, 9.236100000000261e-05, 9.26529999999981e-05, 9.176400000000112e-05, 9.254199999999754e-05, 9.172199999999894e-05, 9.212500000000193e-05, 9.241699999999742e-05, 9.191600000000091e-05, 9.169499999999928e-05, 9.226399999999815e-05, 9.19719999999992e-05, 9.168000000000023e-05, 9.195799999999962e-05, 9.229199999999729e-05, 9.240299999999785e-05, 9.226400000000162e-05, 9.251400000000187e-05, 9.193099999999996e-05, 9.215300000000107e-05, 9.208399999999922e-05, 9.240200000000184e-05, 9.265199999999862e-05, 9.206899999999671e-05, 9.259699999999982e-05, 9.158299999999925e-05, 9.202800000000094e-05, 9.172200000000241e-05, 9.240300000000132e-05, 9.195799999999962e-05, 9.245800000000012e-05, 9.193099999999996e-05, 9.252800000000144e-05, 9.186200000000158e-05, 9.223699999999849e-05, 9.19589999999991e-05, 9.225000000000205e-05, 9.191600000000091e-05, 9.202800000000094e-05, 9.227799999999772e-05, 9.254199999999754e-05, 9.220799999999987e-05, 9.245800000000012e-05, 9.204200000000051e-05, 9.19870000000017e-05, 9.2639000000002e-05, 9.222299999999892e-05, 9.227699999999825e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.137" endtime="20201030 15:52:41.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.132" endtime="20201030 15:52:41.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.143" endtime="20201030 15:52:41.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.141" endtime="20201030 15:52:41.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.140" endtime="20201030 15:52:41.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.778" endtime="20201030 15:52:41.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.778" endtime="20201030 15:52:41.164"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.172" endtime="20201030 15:52:41.194"></status>
</kw>
<msg timestamp="20201030 15:52:41.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.171" endtime="20201030 15:52:41.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.195" endtime="20201030 15:52:41.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.198" endtime="20201030 15:52:41.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.168" endtime="20201030 15:52:41.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.166" endtime="20201030 15:52:41.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.207" endtime="20201030 15:52:41.493"></status>
</kw>
<msg timestamp="20201030 15:52:41.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020314347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020407736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.205" endtime="20201030 15:52:41.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020314347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020407736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.497" endtime="20201030 15:52:41.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.507" endtime="20201030 15:52:41.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.203" endtime="20201030 15:52:41.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.201" endtime="20201030 15:52:41.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.514" level="INFO">${RESULT} = [{'diff': 9.338899999999928e-05}, {'diff': 9.29720000000002e-05}, {'diff': 9.31390000000025e-05}, {'diff': 9.334700000000057e-05}, {'diff': 9.355600000000158e-05}, {'diff': 9.315300000000207e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:41.510" endtime="20201030 15:52:41.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.518" level="INFO">${ACCURACY} = {'diff': [9.338899999999928e-05, 9.29720000000002e-05, 9.31390000000025e-05, 9.334700000000057e-05, 9.355600000000158e-05, 9.315300000000207e-05, 9.331899999999796e-05, 9.290199999999887e-05, 9.302700...</msg>
<status status="PASS" starttime="20201030 15:52:41.515" endtime="20201030 15:52:41.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.522" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.521" endtime="20201030 15:52:41.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.525" level="INFO">VALUE: [9.338899999999928e-05, 9.29720000000002e-05, 9.31390000000025e-05, 9.334700000000057e-05, 9.355600000000158e-05, 9.315300000000207e-05, 9.331899999999796e-05, 9.290199999999887e-05, 9.302700000000247e-05, 9.295799999999715e-05, 9.290199999999887e-05, 9.273599999999951e-05, 9.305600000000108e-05, 9.309799999999979e-05, 9.318099999999774e-05, 9.269500000000028e-05, 9.299999999999933e-05, 9.358400000000072e-05, 9.356999999999768e-05, 9.320900000000035e-05, 9.363800000000005e-05, 9.30000000000028e-05, 9.30139999999989e-05, 9.372300000000042e-05, 9.359700000000082e-05, 9.293100000000096e-05, 9.306899999999771e-05, 9.309700000000032e-05, 9.272199999999994e-05, 9.307000000000065e-05, 9.299999999999933e-05, 9.327799999999872e-05, 9.31390000000025e-05, 9.288899999999878e-05, 9.272199999999994e-05, 9.348600000000026e-05, 9.294400000000105e-05, 9.344399999999808e-05, 9.336099999999667e-05, 9.336100000000014e-05, 9.349999999999983e-05, 9.33469999999971e-05, 9.308400000000022e-05, 9.333400000000047e-05, 9.338899999999928e-05, 9.365199999999962e-05, 9.309700000000032e-05, 9.301400000000237e-05, 9.32079999999974e-05, 9.31529999999986e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.523" endtime="20201030 15:52:41.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.519" endtime="20201030 15:52:41.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.531" endtime="20201030 15:52:41.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.529" endtime="20201030 15:52:41.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.528" endtime="20201030 15:52:41.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.164" endtime="20201030 15:52:41.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.164" endtime="20201030 15:52:41.551"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.560" endtime="20201030 15:52:41.581"></status>
</kw>
<msg timestamp="20201030 15:52:41.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.558" endtime="20201030 15:52:41.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.582" endtime="20201030 15:52:41.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.584" endtime="20201030 15:52:41.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.556" endtime="20201030 15:52:41.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.554" endtime="20201030 15:52:41.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.593" endtime="20201030 15:52:41.880"></status>
</kw>
<msg timestamp="20201030 15:52:41.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.592" endtime="20201030 15:52:41.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.884" endtime="20201030 15:52:41.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.892" endtime="20201030 15:52:41.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.589" endtime="20201030 15:52:41.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.588" endtime="20201030 15:52:41.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.899" level="INFO">${RESULT} = [{'diff': 9.38200000000014e-05}, {'diff': 9.383299999999803e-05}, {'diff': 9.44720000000017e-05}, {'diff': 9.411099999999742e-05}, {'diff': 9.46530000000001e-05}, {'diff': 9.40139999999999e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:52:41.896" endtime="20201030 15:52:41.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.904" level="INFO">${ACCURACY} = {'diff': [9.38200000000014e-05, 9.383299999999803e-05, 9.44720000000017e-05, 9.411099999999742e-05, 9.46530000000001e-05, 9.40139999999999e-05, 9.459700000000182e-05, 9.401300000000043e-05, 9.40970000...</msg>
<status status="PASS" starttime="20201030 15:52:41.900" endtime="20201030 15:52:41.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.908" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.907" endtime="20201030 15:52:41.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.911" level="INFO">VALUE: [9.38200000000014e-05, 9.383299999999803e-05, 9.44720000000017e-05, 9.411099999999742e-05, 9.46530000000001e-05, 9.40139999999999e-05, 9.459700000000182e-05, 9.401300000000043e-05, 9.409700000000132e-05, 9.434700000000157e-05, 9.456999999999868e-05, 9.409700000000132e-05, 9.408299999999828e-05, 9.427799999999972e-05, 9.386100000000064e-05, 9.426300000000068e-05, 9.404199999999904e-05, 9.427799999999972e-05, 9.458400000000172e-05, 9.426300000000068e-05, 9.391599999999944e-05, 9.427799999999972e-05, 9.413900000000003e-05, 9.402800000000294e-05, 9.40139999999999e-05, 9.402799999999947e-05, 9.373600000000051e-05, 9.376300000000018e-05, 9.427799999999972e-05, 9.423700000000049e-05, 9.375000000000008e-05, 9.418000000000273e-05, 9.384700000000107e-05, 9.452699999999703e-05, 9.384700000000107e-05, 9.461099999999792e-05, 9.437500000000071e-05, 9.423599999999754e-05, 9.427799999999972e-05, 9.423599999999754e-05, 9.40139999999999e-05, 9.40139999999999e-05, 9.408399999999775e-05, 9.387500000000021e-05, 9.43469999999981e-05, 9.420800000000187e-05, 9.458300000000225e-05, 9.397199999999772e-05, 9.404200000000251e-05, 9.429199999999929e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.909" endtime="20201030 15:52:41.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.905" endtime="20201030 15:52:41.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.916" endtime="20201030 15:52:41.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.914" endtime="20201030 15:52:41.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.913" endtime="20201030 15:52:41.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.552" endtime="20201030 15:52:41.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.552" endtime="20201030 15:52:41.936"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.945" endtime="20201030 15:52:41.966"></status>
</kw>
<msg timestamp="20201030 15:52:41.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.943" endtime="20201030 15:52:41.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.967" endtime="20201030 15:52:41.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.970" endtime="20201030 15:52:41.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.941" endtime="20201030 15:52:41.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.939" endtime="20201030 15:52:41.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.979" endtime="20201030 15:52:42.265"></status>
</kw>
<msg timestamp="20201030 15:52:42.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019577361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.977" endtime="20201030 15:52:42.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019577361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.270" endtime="20201030 15:52:42.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.278" endtime="20201030 15:52:42.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.975" endtime="20201030 15:52:42.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.973" endtime="20201030 15:52:42.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.285" level="INFO">${RESULT} = [{'diff': 9.543000000000051e-05}, {'diff': 9.538899999999781e-05}, {'diff': 9.479199999999979e-05}, {'diff': 9.507000000000265e-05}, {'diff': 9.566700000000067e-05}, {'diff': 9.50140000000009e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:42.282" endtime="20201030 15:52:42.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.289" level="INFO">${ACCURACY} = {'diff': [9.543000000000051e-05, 9.538899999999781e-05, 9.479199999999979e-05, 9.507000000000265e-05, 9.566700000000067e-05, 9.50140000000009e-05, 9.486100000000164e-05, 9.472199999999847e-05, 9.49860...</msg>
<status status="PASS" starttime="20201030 15:52:42.286" endtime="20201030 15:52:42.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.293" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.292" endtime="20201030 15:52:42.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.296" level="INFO">VALUE: [9.543000000000051e-05, 9.538899999999781e-05, 9.479199999999979e-05, 9.507000000000265e-05, 9.566700000000067e-05, 9.50140000000009e-05, 9.486100000000164e-05, 9.472199999999847e-05, 9.498600000000176e-05, 9.55409999999976e-05, 9.537500000000171e-05, 9.476400000000065e-05, 9.477800000000022e-05, 9.537500000000171e-05, 9.483299999999903e-05, 9.490300000000035e-05, 9.481999999999893e-05, 9.484799999999807e-05, 9.499999999999786e-05, 9.507000000000265e-05, 9.547199999999922e-05, 9.504100000000057e-05, 9.50409999999971e-05, 9.508299999999928e-05, 9.47079999999989e-05, 9.56660000000012e-05, 9.501399999999743e-05, 9.55140000000014e-05, 9.484800000000154e-05, 9.538899999999781e-05, 9.500000000000133e-05, 9.569400000000033e-05, 9.509700000000232e-05, 9.55270000000015e-05, 9.497199999999872e-05, 9.504199999999657e-05, 9.522199999999897e-05, 9.538900000000128e-05, 9.49729999999982e-05, 9.508299999999928e-05, 9.483299999999903e-05, 9.470900000000185e-05, 9.502800000000047e-05, 9.470899999999838e-05, 9.538900000000128e-05, 9.55270000000015e-05, 9.481900000000293e-05, 9.527699999999778e-05, 9.526400000000115e-05, 9.502800000000047e-05]</msg>
<status status="PASS" starttime="20201030 15:52:42.294" endtime="20201030 15:52:42.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.290" endtime="20201030 15:52:42.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.301" endtime="20201030 15:52:42.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.299" endtime="20201030 15:52:42.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.298" endtime="20201030 15:52:42.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.937" endtime="20201030 15:52:42.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.937" endtime="20201030 15:52:42.321"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.330" endtime="20201030 15:52:42.352"></status>
</kw>
<msg timestamp="20201030 15:52:42.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.329" endtime="20201030 15:52:42.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.354" endtime="20201030 15:52:42.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.356" endtime="20201030 15:52:42.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.326" endtime="20201030 15:52:42.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.324" endtime="20201030 15:52:42.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.367" endtime="20201030 15:52:42.653"></status>
</kw>
<msg timestamp="20201030 15:52:42.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020558944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020655139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.365" endtime="20201030 15:52:42.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020558944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020655139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.657" endtime="20201030 15:52:42.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.666" endtime="20201030 15:52:42.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.362" endtime="20201030 15:52:42.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.360" endtime="20201030 15:52:42.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.672" level="INFO">${RESULT} = [{'diff': 9.619500000000031e-05}, {'diff': 9.669400000000133e-05}, {'diff': 9.622300000000292e-05}, {'diff': 9.638899999999881e-05}, {'diff': 9.615200000000212e-05}, {'diff': 9.629099999999835e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:42.669" endtime="20201030 15:52:42.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.676" level="INFO">${ACCURACY} = {'diff': [9.619500000000031e-05, 9.669400000000133e-05, 9.622300000000292e-05, 9.638899999999881e-05, 9.615200000000212e-05, 9.629099999999835e-05, 9.659700000000035e-05, 9.579200000000079e-05, 9.5944...</msg>
<status status="PASS" starttime="20201030 15:52:42.673" endtime="20201030 15:52:42.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.681" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.680" endtime="20201030 15:52:42.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.683" level="INFO">VALUE: [9.619500000000031e-05, 9.669400000000133e-05, 9.622300000000292e-05, 9.638899999999881e-05, 9.615200000000212e-05, 9.629099999999835e-05, 9.659700000000035e-05, 9.579200000000079e-05, 9.594400000000058e-05, 9.6027999999998e-05, 9.65279999999985e-05, 9.606900000000071e-05, 9.618100000000074e-05, 9.663899999999906e-05, 9.641699999999795e-05, 9.66669999999982e-05, 9.59729999999992e-05, 9.593100000000049e-05, 9.615199999999866e-05, 9.604200000000104e-05, 9.641700000000142e-05, 9.583300000000003e-05, 9.58469999999996e-05, 9.583300000000003e-05, 9.640300000000185e-05, 9.663900000000253e-05, 9.597300000000267e-05, 9.595899999999963e-05, 9.658400000000025e-05, 9.581900000000046e-05, 9.63470000000001e-05, 9.609699999999985e-05, 9.613900000000203e-05, 9.591700000000092e-05, 9.645799999999718e-05, 9.640300000000185e-05, 9.616700000000117e-05, 9.655600000000111e-05, 9.565299999999763e-05, 9.645900000000013e-05, 9.665299999999863e-05, 9.595800000000015e-05, 9.665200000000262e-05, 9.642999999999805e-05, 9.654199999999807e-05, 9.662499999999949e-05, 9.623599999999954e-05, 9.661099999999992e-05, 9.619400000000083e-05, 9.66530000000021e-05]</msg>
<status status="PASS" starttime="20201030 15:52:42.682" endtime="20201030 15:52:42.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.677" endtime="20201030 15:52:42.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.689" endtime="20201030 15:52:42.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.688" endtime="20201030 15:52:42.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.687" endtime="20201030 15:52:42.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.322" endtime="20201030 15:52:42.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.322" endtime="20201030 15:52:42.710"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.719" endtime="20201030 15:52:42.739"></status>
</kw>
<msg timestamp="20201030 15:52:42.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.717" endtime="20201030 15:52:42.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.740" endtime="20201030 15:52:42.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.743" endtime="20201030 15:52:42.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.714" endtime="20201030 15:52:42.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.712" endtime="20201030 15:52:42.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.752" endtime="20201030 15:52:43.038"></status>
</kw>
<msg timestamp="20201030 15:52:43.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01945475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:42.750" endtime="20201030 15:52:43.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01945475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:43.042" endtime="20201030 15:52:43.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.050" endtime="20201030 15:52:43.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.748" endtime="20201030 15:52:43.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.746" endtime="20201030 15:52:43.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.057" level="INFO">${RESULT} = [{'diff': 9.676399999999918e-05}, {'diff': 9.7027999999999e-05}, {'diff': 9.741699999999895e-05}, {'diff': 9.720899999999741e-05}, {'diff': 9.690299999999888e-05}, {'diff': 9.744400000000208e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:43.053" endtime="20201030 15:52:43.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.062" level="INFO">${ACCURACY} = {'diff': [9.676399999999918e-05, 9.7027999999999e-05, 9.741699999999895e-05, 9.720899999999741e-05, 9.690299999999888e-05, 9.744400000000208e-05, 9.73470000000011e-05, 9.734699999999763e-05, 9.7665999...</msg>
<status status="PASS" starttime="20201030 15:52:43.058" endtime="20201030 15:52:43.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.066" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.065" endtime="20201030 15:52:43.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.069" level="INFO">VALUE: [9.676399999999918e-05, 9.7027999999999e-05, 9.741699999999895e-05, 9.720899999999741e-05, 9.690299999999888e-05, 9.744400000000208e-05, 9.73470000000011e-05, 9.734699999999763e-05, 9.766599999999973e-05, 9.718100000000174e-05, 9.744500000000156e-05, 9.676399999999918e-05, 9.691699999999845e-05, 9.71669999999987e-05, 9.740299999999938e-05, 9.709700000000085e-05, 9.734800000000057e-05, 9.708299999999781e-05, 9.712499999999999e-05, 9.693000000000201e-05, 9.722200000000097e-05, 9.701399999999943e-05, 9.741699999999895e-05, 9.77080000000019e-05, 9.677800000000222e-05, 9.740299999999938e-05, 9.684800000000007e-05, 9.711199999999989e-05, 9.659700000000035e-05, 9.69860000000003e-05, 9.686100000000017e-05, 9.701299999999996e-05, 9.747199999999775e-05, 9.71799999999988e-05, 9.736100000000067e-05, 9.679199999999832e-05, 9.740299999999938e-05, 9.725000000000011e-05, 9.737500000000024e-05, 9.722300000000045e-05, 9.751399999999993e-05, 9.763900000000006e-05, 9.67080000000009e-05, 9.738800000000034e-05, 9.766599999999973e-05, 9.754199999999907e-05, 9.744400000000208e-05, 9.704199999999857e-05, 9.683300000000103e-05, 9.734699999999763e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.067" endtime="20201030 15:52:43.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.062" endtime="20201030 15:52:43.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.079" endtime="20201030 15:52:43.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.077" endtime="20201030 15:52:43.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.076" endtime="20201030 15:52:43.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.711" endtime="20201030 15:52:43.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.710" endtime="20201030 15:52:43.099"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.108" endtime="20201030 15:52:43.129"></status>
</kw>
<msg timestamp="20201030 15:52:43.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.106" endtime="20201030 15:52:43.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.130" endtime="20201030 15:52:43.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.133" endtime="20201030 15:52:43.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.104" endtime="20201030 15:52:43.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.102" endtime="20201030 15:52:43.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.142" endtime="20201030 15:52:43.429"></status>
</kw>
<msg timestamp="20201030 15:52:43.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019578181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019676208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.141" endtime="20201030 15:52:43.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019578181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019676208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.434" endtime="20201030 15:52:43.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.442" endtime="20201030 15:52:43.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.138" endtime="20201030 15:52:43.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.136" endtime="20201030 15:52:43.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.449" level="INFO">${RESULT} = [{'diff': 9.802700000000053e-05}, {'diff': 9.797200000000172e-05}, {'diff': 9.862499999999802e-05}, {'diff': 9.791699999999945e-05}, {'diff': 9.769400000000233e-05}, {'diff': 9.784699999999813e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:43.446" endtime="20201030 15:52:43.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.453" level="INFO">${ACCURACY} = {'diff': [9.802700000000053e-05, 9.797200000000172e-05, 9.862499999999802e-05, 9.791699999999945e-05, 9.769400000000233e-05, 9.784699999999813e-05, 9.830600000000286e-05, 9.78470000000016e-05, 9.79029...</msg>
<status status="PASS" starttime="20201030 15:52:43.450" endtime="20201030 15:52:43.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.457" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.456" endtime="20201030 15:52:43.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.460" level="INFO">VALUE: [9.802700000000053e-05, 9.797200000000172e-05, 9.862499999999802e-05, 9.791699999999945e-05, 9.769400000000233e-05, 9.784699999999813e-05, 9.830600000000286e-05, 9.78470000000016e-05, 9.790299999999988e-05, 9.791700000000292e-05, 9.78470000000016e-05, 9.809699999999838e-05, 9.783300000000203e-05, 9.787500000000074e-05, 9.773599999999757e-05, 9.838900000000081e-05, 9.831900000000296e-05, 9.790299999999988e-05, 9.79860000000013e-05, 9.865300000000063e-05, 9.773600000000104e-05, 9.845899999999866e-05, 9.773600000000104e-05, 9.820799999999894e-05, 9.815200000000066e-05, 9.859699999999888e-05, 9.783299999999856e-05, 9.776400000000018e-05, 9.776400000000018e-05, 9.773599999999757e-05, 9.822299999999798e-05, 9.786100000000117e-05, 9.787500000000074e-05, 9.859700000000235e-05, 9.772200000000147e-05, 9.861100000000192e-05, 9.862500000000149e-05, 9.872200000000247e-05, 9.7721999999998e-05, 9.794399999999912e-05, 9.855599999999964e-05, 9.827800000000025e-05, 9.830600000000286e-05, 9.797200000000172e-05, 9.798599999999782e-05, 9.823699999999755e-05, 9.781999999999846e-05, 9.826300000000121e-05, 9.800000000000086e-05, 9.823600000000154e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.458" endtime="20201030 15:52:43.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.454" endtime="20201030 15:52:43.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.465" endtime="20201030 15:52:43.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.463" endtime="20201030 15:52:43.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.462" endtime="20201030 15:52:43.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.100" endtime="20201030 15:52:43.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.100" endtime="20201030 15:52:43.486"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.494" endtime="20201030 15:52:43.516"></status>
</kw>
<msg timestamp="20201030 15:52:43.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.493" endtime="20201030 15:52:43.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.517" endtime="20201030 15:52:43.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.520" endtime="20201030 15:52:43.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.490" endtime="20201030 15:52:43.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.488" endtime="20201030 15:52:43.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.529" endtime="20201030 15:52:43.822"></status>
</kw>
<msg timestamp="20201030 15:52:43.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020477333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020576125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.527" endtime="20201030 15:52:43.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020477333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020576125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.831" endtime="20201030 15:52:43.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.850" endtime="20201030 15:52:43.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.524" endtime="20201030 15:52:43.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.523" endtime="20201030 15:52:43.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.864" level="INFO">${RESULT} = [{'diff': 9.879200000000032e-05}, {'diff': 9.87080000000029e-05}, {'diff': 9.941700000000095e-05}, {'diff': 9.938899999999834e-05}, {'diff': 9.883399999999903e-05}, {'diff': 9.962499999999902e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:43.857" endtime="20201030 15:52:43.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.873" level="INFO">${ACCURACY} = {'diff': [9.879200000000032e-05, 9.87080000000029e-05, 9.941700000000095e-05, 9.938899999999834e-05, 9.883399999999903e-05, 9.962499999999902e-05, 9.929200000000082e-05, 9.89020000000014e-05, 9.906999...</msg>
<status status="PASS" starttime="20201030 15:52:43.866" endtime="20201030 15:52:43.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.882" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.880" endtime="20201030 15:52:43.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.887" level="INFO">VALUE: [9.879200000000032e-05, 9.87080000000029e-05, 9.941700000000095e-05, 9.938899999999834e-05, 9.883399999999903e-05, 9.962499999999902e-05, 9.929200000000082e-05, 9.89020000000014e-05, 9.906999999999971e-05, 9.920799999999994e-05, 9.919400000000037e-05, 9.895799999999969e-05, 9.8721999999999e-05, 9.883299999999956e-05, 9.959699999999988e-05, 9.927800000000125e-05, 9.870900000000238e-05, 9.912500000000199e-05, 9.88059999999999e-05, 9.872299999999848e-05, 9.938900000000181e-05, 9.966599999999826e-05, 9.895799999999969e-05, 9.955599999999717e-05, 9.870799999999944e-05, 9.934699999999963e-05, 9.929200000000082e-05, 9.905600000000014e-05, 9.884800000000207e-05, 9.929200000000082e-05, 9.894499999999959e-05, 9.88479999999986e-05, 9.91800000000008e-05, 9.948599999999932e-05, 9.943000000000105e-05, 9.88059999999999e-05, 9.905600000000014e-05, 9.958300000000031e-05, 9.919500000000331e-05, 9.913900000000156e-05, 9.908399999999928e-05, 9.929200000000082e-05, 9.901399999999796e-05, 9.89999999999984e-05, 9.897199999999926e-05, 9.931900000000049e-05, 9.963899999999859e-05, 9.938899999999834e-05, 9.9028000000001e-05, 9.888900000000131e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.884" endtime="20201030 15:52:43.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.874" endtime="20201030 15:52:43.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.892" endtime="20201030 15:52:43.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.891" endtime="20201030 15:52:43.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.890" endtime="20201030 15:52:43.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.486" endtime="20201030 15:52:43.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.486" endtime="20201030 15:52:43.913"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.922" endtime="20201030 15:52:43.942"></status>
</kw>
<msg timestamp="20201030 15:52:43.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.920" endtime="20201030 15:52:43.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.944" endtime="20201030 15:52:43.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.946" endtime="20201030 15:52:43.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.917" endtime="20201030 15:52:43.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.915" endtime="20201030 15:52:43.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.955" endtime="20201030 15:52:44.241"></status>
</kw>
<msg timestamp="20201030 15:52:44.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.954" endtime="20201030 15:52:44.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.245" endtime="20201030 15:52:44.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.253" endtime="20201030 15:52:44.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.951" endtime="20201030 15:52:44.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.949" endtime="20201030 15:52:44.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.260" level="INFO">${RESULT} = [{'diff': 9.990299999999841e-05}, {'diff': 0.00010048600000000033}, {'diff': 9.977699999999881e-05}, {'diff': 0.00010034700000000063}, {'diff': 0.00010051399999999946}, {'diff': 9.969400000000087e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:44.256" endtime="20201030 15:52:44.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.265" level="INFO">${ACCURACY} = {'diff': [9.990299999999841e-05, 0.00010048600000000033, 9.977699999999881e-05, 0.00010034700000000063, 0.00010051399999999946, 9.969400000000087e-05, 0.00010052799999999903, 9.984700000000013e-05, 0....</msg>
<status status="PASS" starttime="20201030 15:52:44.261" endtime="20201030 15:52:44.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.269" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.268" endtime="20201030 15:52:44.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.272" level="INFO">VALUE: [9.990299999999841e-05, 0.00010048600000000033, 9.977699999999881e-05, 0.00010034700000000063, 0.00010051399999999946, 9.969400000000087e-05, 0.00010052799999999903, 9.984700000000013e-05, 0.00010055600000000164, 9.983399999999656e-05, 0.00010027799999999878, 0.00010023699999999955, 0.00010004099999999863, 9.984700000000013e-05, 9.990199999999894e-05, 0.00010020800000000094, 9.9722e-05, 0.00010052799999999903, 0.00010008300000000081, 0.00010031899999999802, 0.00010043100000000152, 9.98479999999996e-05, 0.00010051399999999946, 9.968100000000077e-05, 9.970899999999991e-05, 0.00010009700000000038, 0.00010011099999999995, 0.00010026299999999974, 9.987499999999927e-05, 9.970799999999697e-05, 0.00010054200000000207, 0.00010008299999999734, 0.00010047200000000076, 9.968100000000077e-05, 9.970899999999991e-05, 0.0001001670000000017, 0.0001005410000000026, 9.976399999999871e-05, 0.00010012500000000299, 0.00010016699999999823, 0.00010044400000000162, 9.976399999999871e-05, 0.00010059699999999741, 0.00010013899999999909, 0.00010059699999999741, 0.00010008400000000028, 0.00010019500000000084, 0.00010022299999999998, 0.00010016599999999876, 0.000100415999999999]</msg>
<status status="PASS" starttime="20201030 15:52:44.270" endtime="20201030 15:52:44.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.265" endtime="20201030 15:52:44.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.277" endtime="20201030 15:52:44.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.275" endtime="20201030 15:52:44.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.274" endtime="20201030 15:52:44.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.914" endtime="20201030 15:52:44.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.913" endtime="20201030 15:52:44.297"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.306" endtime="20201030 15:52:44.327"></status>
</kw>
<msg timestamp="20201030 15:52:44.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.304" endtime="20201030 15:52:44.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.329" endtime="20201030 15:52:44.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.331" endtime="20201030 15:52:44.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.302" endtime="20201030 15:52:44.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.300" endtime="20201030 15:52:44.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.340" endtime="20201030 15:52:44.638"></status>
</kw>
<msg timestamp="20201030 15:52:44.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.339" endtime="20201030 15:52:44.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.647" endtime="20201030 15:52:44.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.665" endtime="20201030 15:52:44.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.336" endtime="20201030 15:52:44.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.334" endtime="20201030 15:52:44.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.680" level="INFO">${RESULT} = [{'diff': 0.00010076399999999971}, {'diff': 0.00010138800000000087}, {'diff': 0.00010140299999999991}, {'diff': 0.0001006939999999984}, {'diff': 0.00010080499999999895}, {'diff': 0.0001014590000000016...</msg>
<status status="PASS" starttime="20201030 15:52:44.674" endtime="20201030 15:52:44.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.689" level="INFO">${ACCURACY} = {'diff': [0.00010076399999999971, 0.00010138800000000087, 0.00010140299999999991, 0.0001006939999999984, 0.00010080499999999895, 0.00010145900000000166, 0.00010149999999999743, 0.00010126399999999675,...</msg>
<status status="PASS" starttime="20201030 15:52:44.682" endtime="20201030 15:52:44.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.698" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.696" endtime="20201030 15:52:44.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.702" level="INFO">VALUE: [0.00010076399999999971, 0.00010138800000000087, 0.00010140299999999991, 0.0001006939999999984, 0.00010080499999999895, 0.00010145900000000166, 0.00010149999999999743, 0.00010126399999999675, 0.00010152800000000003, 0.00010109700000000138, 0.00010079199999999885, 0.00010095900000000116, 0.00010165200000000069, 0.00010126400000000021, 0.00010162499999999755, 0.00010154100000000013, 0.0001017359999999981, 0.00010105600000000214, 0.00010145799999999872, 0.00010102799999999953, 0.00010119500000000184, 0.00010161100000000145, 0.00010073600000000058, 0.00010138900000000034, 0.00010130599999999892, 0.00010059799999999688, 0.00010125000000000065, 0.00010077699999999981, 0.0001012359999999976, 0.00010101399999999996, 0.00010170800000000244, 0.00010144400000000262, 0.00010147200000000176, 0.00010159700000000188, 0.00010147200000000176, 0.00010138900000000034, 0.00010083400000000103, 0.00010098699999999683, 0.00010069500000000134, 0.00010055599999999817, 0.00010090199999999994, 0.00010090299999999941, 0.00010095799999999822, 0.00010140299999999991, 0.00010137500000000077, 0.00010147200000000176, 0.00010119500000000184, 0.000100722000000001, 0.00010134799999999763, 0.00010129199999999935]</msg>
<status status="PASS" starttime="20201030 15:52:44.700" endtime="20201030 15:52:44.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.691" endtime="20201030 15:52:44.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.707" endtime="20201030 15:52:44.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.705" endtime="20201030 15:52:44.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.704" endtime="20201030 15:52:44.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.298" endtime="20201030 15:52:44.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.298" endtime="20201030 15:52:44.727"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.736" endtime="20201030 15:52:44.758"></status>
</kw>
<msg timestamp="20201030 15:52:44.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.735" endtime="20201030 15:52:44.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.759" endtime="20201030 15:52:44.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.762" endtime="20201030 15:52:44.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.732" endtime="20201030 15:52:44.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.730" endtime="20201030 15:52:44.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.771" endtime="20201030 15:52:45.057"></status>
</kw>
<msg timestamp="20201030 15:52:45.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02072475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020826681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:44.769" endtime="20201030 15:52:45.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02072475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020826681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:45.061" endtime="20201030 15:52:45.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.069" endtime="20201030 15:52:45.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.767" endtime="20201030 15:52:45.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.765" endtime="20201030 15:52:45.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.076" level="INFO">${RESULT} = [{'diff': 0.00010193099999999955}, {'diff': 0.00010224999999999818}, {'diff': 0.00010270799999999997}, {'diff': 0.00010209699999999891}, {'diff': 0.0001022359999999986}, {'diff': 0.0001021670000000002...</msg>
<status status="PASS" starttime="20201030 15:52:45.073" endtime="20201030 15:52:45.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.080" level="INFO">${ACCURACY} = {'diff': [0.00010193099999999955, 0.00010224999999999818, 0.00010270799999999997, 0.00010209699999999891, 0.0001022359999999986, 0.00010216700000000023, 0.00010212500000000152, 0.00010184700000000213,...</msg>
<status status="PASS" starttime="20201030 15:52:45.077" endtime="20201030 15:52:45.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.084" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.083" endtime="20201030 15:52:45.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.087" level="INFO">VALUE: [0.00010193099999999955, 0.00010224999999999818, 0.00010270799999999997, 0.00010209699999999891, 0.0001022359999999986, 0.00010216700000000023, 0.00010212500000000152, 0.00010184700000000213, 0.0001020420000000001, 0.00010198600000000183, 0.00010197300000000173, 0.00010177799999999682, 0.00010248699999999833, 0.00010180599999999942, 0.00010266700000000073, 0.0001021939999999999, 0.00010229099999999741, 0.0001019160000000005, 0.00010223600000000208, 0.00010245799999999972, 0.0001025420000000006, 0.00010180599999999942, 0.00010176400000000071, 0.0001022359999999986, 0.00010194399999999965, 0.00010227799999999732, 0.00010179100000000038, 0.00010197199999999879, 0.000102416000000001, 0.0001021809999999998, 0.00010230599999999992, 0.00010197199999999879, 0.00010215300000000066, 0.00010223600000000208, 0.00010220899999999894, 0.00010222300000000198, 0.00010240300000000091, 0.00010240200000000144, 0.00010263799999999865, 0.00010251400000000147, 0.00010231900000000002, 0.00010265299999999769, 0.0001023199999999995, 0.00010233299999999959, 0.00010262499999999855, 0.00010222199999999904, 0.00010220899999999894, 0.00010190300000000041, 0.00010226399999999775, 0.00010266599999999779]</msg>
<status status="PASS" starttime="20201030 15:52:45.085" endtime="20201030 15:52:45.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.081" endtime="20201030 15:52:45.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.092" endtime="20201030 15:52:45.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.091" endtime="20201030 15:52:45.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.090" endtime="20201030 15:52:45.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.728" endtime="20201030 15:52:45.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.728" endtime="20201030 15:52:45.113"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.122" endtime="20201030 15:52:45.143"></status>
</kw>
<msg timestamp="20201030 15:52:45.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.120" endtime="20201030 15:52:45.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.145" endtime="20201030 15:52:45.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.147" endtime="20201030 15:52:45.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.118" endtime="20201030 15:52:45.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.116" endtime="20201030 15:52:45.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.156" endtime="20201030 15:52:45.449"></status>
</kw>
<msg timestamp="20201030 15:52:45.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.155" endtime="20201030 15:52:45.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.458" endtime="20201030 15:52:45.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.476" endtime="20201030 15:52:45.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.152" endtime="20201030 15:52:45.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.150" endtime="20201030 15:52:45.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.490" level="INFO">${RESULT} = [{'diff': 0.00010304199999999764}, {'diff': 0.00010291700000000098}, {'diff': 0.00010363900000000259}, {'diff': 0.00010365299999999869}, {'diff': 0.00010316599999999829}, {'diff': 0.000103610999999999...</msg>
<status status="PASS" starttime="20201030 15:52:45.483" endtime="20201030 15:52:45.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.500" level="INFO">${ACCURACY} = {'diff': [0.00010304199999999764, 0.00010291700000000098, 0.00010363900000000259, 0.00010365299999999869, 0.00010316599999999829, 0.00010361099999999998, 0.00010326399999999875, 0.00010327799999999832...</msg>
<status status="PASS" starttime="20201030 15:52:45.492" endtime="20201030 15:52:45.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.510" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.507" endtime="20201030 15:52:45.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.512" level="INFO">VALUE: [0.00010304199999999764, 0.00010291700000000098, 0.00010363900000000259, 0.00010365299999999869, 0.00010316599999999829, 0.00010361099999999998, 0.00010326399999999875, 0.00010327799999999832, 0.00010366600000000226, 0.00010270799999999997, 0.00010309699999999991, 0.00010338899999999887, 0.00010294500000000012, 0.00010284699999999966, 0.00010345900000000019, 0.00010279200000000085, 0.00010363900000000259, 0.0001029160000000015, 0.00010363899999999912, 0.00010333299999999712, 0.00010276400000000172, 0.00010334700000000016, 0.00010297199999999979, 0.00010295899999999969, 0.00010338899999999887, 0.00010320899999999994, 0.0001033749999999993, 0.00010322200000000004, 0.0001035000000000029, 0.0001030550000000012, 0.00010345800000000072, 0.00010336099999999973, 0.00010365299999999869, 0.000103207999999997, 0.00010320800000000047, 0.00010301299999999902, 0.00010359700000000041, 0.00010333300000000059, 0.00010276400000000172, 0.0001028480000000026, 0.0001030550000000012, 0.00010365199999999922, 0.0001027359999999991, 0.00010284699999999966, 0.00010280499999999748, 0.0001030139999999985, 0.00010272199999999954, 0.00010284699999999966, 0.0001033200000000005, 0.00010333400000000006]</msg>
<status status="PASS" starttime="20201030 15:52:45.511" endtime="20201030 15:52:45.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.502" endtime="20201030 15:52:45.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.517" endtime="20201030 15:52:45.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.516" endtime="20201030 15:52:45.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.515" endtime="20201030 15:52:45.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.114" endtime="20201030 15:52:45.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.113" endtime="20201030 15:52:45.538"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.547" endtime="20201030 15:52:45.568"></status>
</kw>
<msg timestamp="20201030 15:52:45.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.545" endtime="20201030 15:52:45.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.570" endtime="20201030 15:52:45.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.572" endtime="20201030 15:52:45.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.543" endtime="20201030 15:52:45.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.541" endtime="20201030 15:52:45.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.581" endtime="20201030 15:52:45.868"></status>
</kw>
<msg timestamp="20201030 15:52:45.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019664167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.580" endtime="20201030 15:52:45.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019664167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.872" endtime="20201030 15:52:45.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.880" endtime="20201030 15:52:45.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.577" endtime="20201030 15:52:45.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.575" endtime="20201030 15:52:45.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.886" level="INFO">${RESULT} = [{'diff': 0.00010422300000000051}, {'diff': 0.00010420800000000147}, {'diff': 0.00010415199999999972}, {'diff': 0.00010381900000000152}, {'diff': 0.00010399999999999993}, {'diff': 0.000103708000000000...</msg>
<status status="PASS" starttime="20201030 15:52:45.883" endtime="20201030 15:52:45.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.890" level="INFO">${ACCURACY} = {'diff': [0.00010422300000000051, 0.00010420800000000147, 0.00010415199999999972, 0.00010381900000000152, 0.00010399999999999993, 0.00010370800000000097, 0.00010427799999999932, 0.00010436100000000073...</msg>
<status status="PASS" starttime="20201030 15:52:45.887" endtime="20201030 15:52:45.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.895" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.894" endtime="20201030 15:52:45.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.897" level="INFO">VALUE: [0.00010422300000000051, 0.00010420800000000147, 0.00010415199999999972, 0.00010381900000000152, 0.00010399999999999993, 0.00010370800000000097, 0.00010427799999999932, 0.00010436100000000073, 0.00010468099999999883, 0.00010457000000000174, 0.00010430600000000192, 0.00010426399999999975, 0.00010415299999999919, 0.00010395799999999775, 0.00010412500000000005, 0.00010415199999999972, 0.0001037360000000001, 0.00010433300000000159, 0.00010413899999999962, 0.00010426399999999975, 0.00010443100000000205, 0.00010383300000000109, 0.00010394500000000112, 0.00010404199999999864, 0.00010444500000000162, 0.00010391599999999904, 0.00010452700000000009, 0.00010379099999999891, 0.00010466599999999979, 0.00010406900000000177, 0.0001042360000000006, 0.00010445800000000172, 0.00010395799999999775, 0.00010386100000000023, 0.00010404099999999916, 0.00010447300000000076, 0.00010441699999999901, 0.00010422199999999757, 0.00010376299999999977, 0.00010436100000000073, 0.00010442999999999911, 0.00010426399999999975, 0.00010415299999999919, 0.00010415299999999919, 0.00010416699999999876, 0.00010404199999999864, 0.00010459800000000088, 0.00010384800000000013, 0.00010358300000000084, 0.00010388899999999937]</msg>
<status status="PASS" starttime="20201030 15:52:45.896" endtime="20201030 15:52:45.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.891" endtime="20201030 15:52:45.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.902" endtime="20201030 15:52:45.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.901" endtime="20201030 15:52:45.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.900" endtime="20201030 15:52:45.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.539" endtime="20201030 15:52:45.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.539" endtime="20201030 15:52:45.923"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.932" endtime="20201030 15:52:45.952"></status>
</kw>
<msg timestamp="20201030 15:52:45.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.930" endtime="20201030 15:52:45.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.954" endtime="20201030 15:52:45.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.956" endtime="20201030 15:52:45.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.927" endtime="20201030 15:52:45.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.925" endtime="20201030 15:52:45.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.965" endtime="20201030 15:52:46.262"></status>
</kw>
<msg timestamp="20201030 15:52:46.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020422556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.964" endtime="20201030 15:52:46.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020422556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.271" endtime="20201030 15:52:46.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.291" endtime="20201030 15:52:46.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.961" endtime="20201030 15:52:46.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.960" endtime="20201030 15:52:46.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.306" level="INFO">${RESULT} = [{'diff': 0.00010484699999999819}, {'diff': 0.00010547199999999882}, {'diff': 0.00010529199999999989}, {'diff': 0.0001053339999999986}, {'diff': 0.00010565200000000122}, {'diff': 0.0001050000000000009...</msg>
<status status="PASS" starttime="20201030 15:52:46.299" endtime="20201030 15:52:46.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.315" level="INFO">${ACCURACY} = {'diff': [0.00010484699999999819, 0.00010547199999999882, 0.00010529199999999989, 0.0001053339999999986, 0.00010565200000000122, 0.00010500000000000093, 0.00010458299999999837, 0.00010483299999999862,...</msg>
<status status="PASS" starttime="20201030 15:52:46.309" endtime="20201030 15:52:46.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.320" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.319" endtime="20201030 15:52:46.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.322" level="INFO">VALUE: [0.00010484699999999819, 0.00010547199999999882, 0.00010529199999999989, 0.0001053339999999986, 0.00010565200000000122, 0.00010500000000000093, 0.00010458299999999837, 0.00010483299999999862, 0.00010561099999999851, 0.00010483300000000209, 0.0001053750000000013, 0.00010525000000000118, 0.00010533299999999912, 0.00010559799999999842, 0.00010526400000000075, 0.00010527700000000084, 0.00010522200000000204, 0.00010513900000000062, 0.00010488900000000037, 0.00010547199999999882, 0.00010472200000000154, 0.00010495799999999875, 0.00010509700000000191, 0.00010538900000000087, 0.00010477799999999982, 0.00010498600000000136, 0.00010507000000000224, 0.0001050689999999993, 0.000105207999999999, 0.00010454099999999966, 0.00010499999999999746, 0.00010505499999999973, 0.00010540299999999697, 0.00010515300000000019, 0.00010488900000000037, 0.00010552800000000057, 0.00010513900000000062, 0.00010488900000000037, 0.00010531999999999903, 0.00010527700000000084, 0.00010492999999999961, 0.00010525000000000118, 0.00010497200000000179, 0.00010523599999999814, 0.00010552800000000057, 0.00010530600000000293, 0.00010520900000000194, 0.0001053750000000013, 0.00010527699999999737, 0.00010509699999999844]</msg>
<status status="PASS" starttime="20201030 15:52:46.321" endtime="20201030 15:52:46.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.316" endtime="20201030 15:52:46.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.328" endtime="20201030 15:52:46.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.327" endtime="20201030 15:52:46.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.326" endtime="20201030 15:52:46.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.924" endtime="20201030 15:52:46.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.923" endtime="20201030 15:52:46.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.268" endtime="20201030 15:52:46.349"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:07.188" endtime="20201030 15:52:46.350" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.356" endtime="20201030 15:52:46.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.355" endtime="20201030 15:52:46.376"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.390" endtime="20201030 15:52:46.407"></status>
</kw>
<msg timestamp="20201030 15:52:46.408" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.388" endtime="20201030 15:52:46.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.411" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.409" endtime="20201030 15:52:46.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.414" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:46.412" endtime="20201030 15:52:46.414"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:46.385" endtime="20201030 15:52:46.415"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:46.383" endtime="20201030 15:52:46.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.382" endtime="20201030 15:52:46.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:46.419" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:46.418" endtime="20201030 15:52:46.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.416" endtime="20201030 15:52:46.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.381" endtime="20201030 15:52:46.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.380" endtime="20201030 15:52:46.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.421" endtime="20201030 15:52:46.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.379" endtime="20201030 15:52:46.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.377" endtime="20201030 15:52:46.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.354" endtime="20201030 15:52:46.424"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.436" endtime="20201030 15:52:46.451"></status>
</kw>
<msg timestamp="20201030 15:52:46.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.434" endtime="20201030 15:52:46.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.452" endtime="20201030 15:52:46.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.456" endtime="20201030 15:52:46.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.430" endtime="20201030 15:52:46.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.427" endtime="20201030 15:52:46.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.467" endtime="20201030 15:52:46.755"></status>
</kw>
<msg timestamp="20201030 15:52:46.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069488347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069511236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.465" endtime="20201030 15:52:46.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069488347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069511236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.760" endtime="20201030 15:52:46.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.768" endtime="20201030 15:52:46.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.462" endtime="20201030 15:52:46.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.460" endtime="20201030 15:52:46.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.775" level="INFO">${RESULT} = [{'diff': 2.288899999999816e-05}, {'diff': 6.0139999999986316e-06}, {'diff': 5.514000000012009e-06}, {'diff': 6.069999999996911e-06}, {'diff': 6.040999999998298e-06}, {'diff': 5.555999999989902e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:46.771" endtime="20201030 15:52:46.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.779" level="INFO">${ACCURACY} = {'diff': [2.288899999999816e-05, 6.0139999999986316e-06, 5.514000000012009e-06, 6.069999999996911e-06, 6.040999999998298e-06, 5.555999999989902e-06, 5.569999999996411e-06, 5.499999999991623e-06, 5.555...</msg>
<status status="PASS" starttime="20201030 15:52:46.776" endtime="20201030 15:52:46.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.784" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.783" endtime="20201030 15:52:46.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.787" level="INFO">VALUE: [2.288899999999816e-05, 6.0139999999986316e-06, 5.514000000012009e-06, 6.069999999996911e-06, 6.040999999998298e-06, 5.555999999989902e-06, 5.569999999996411e-06, 5.499999999991623e-06, 5.5550000000043065e-06, 5.542000000011149e-06, 6.069000000011315e-06, 5.541999999997271e-06, 6.0139999999986316e-06, 5.473000000005834e-06, 6.054999999990929e-06, 6.055999999990402e-06, 5.596999999996077e-06, 5.541999999997271e-06, 5.5689999999969375e-06, 6.041999999997771e-06, 5.569999999996411e-06, 6.05600000000428e-06, 6.040999999998298e-06, 6.083000000003946e-06, 5.541999999997271e-06, 5.5139999999981315e-06, 5.986999999998965e-06, 6.042000000011649e-06, 6.55600000000478e-06, 6.041999999997771e-06, 5.569999999996411e-06, 6.041999999997771e-06, 6.041999999997771e-06, 5.5550000000043065e-06, 5.625000000009095e-06, 5.55600000000378e-06, 5.52800000000464e-06, 5.597999999995551e-06, 6.040999999998298e-06, 5.541999999997271e-06, 5.540999999997798e-06, 6.055999999990402e-06, 6.570000000011289e-06, 5.540999999997798e-06, 6.05600000000428e-06, 5.540999999997798e-06, 5.52800000000464e-06, 6.111000000003086e-06, 6.054999999990929e-06, 6.041999999997771e-06]</msg>
<status status="PASS" starttime="20201030 15:52:46.785" endtime="20201030 15:52:46.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.780" endtime="20201030 15:52:46.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.791" endtime="20201030 15:52:46.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.790" endtime="20201030 15:52:46.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.789" endtime="20201030 15:52:46.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.426" endtime="20201030 15:52:46.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.425" endtime="20201030 15:52:46.812"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.821" endtime="20201030 15:52:46.838"></status>
</kw>
<msg timestamp="20201030 15:52:46.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.819" endtime="20201030 15:52:46.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.840" endtime="20201030 15:52:46.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.843" endtime="20201030 15:52:46.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.817" endtime="20201030 15:52:46.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.815" endtime="20201030 15:52:46.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.852" endtime="20201030 15:52:47.136"></status>
</kw>
<msg timestamp="20201030 15:52:47.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.850" endtime="20201030 15:52:47.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.141" endtime="20201030 15:52:47.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.149" endtime="20201030 15:52:47.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.847" endtime="20201030 15:52:47.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.846" endtime="20201030 15:52:47.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.156" level="INFO">${RESULT} = [{'diff': 6.568999999997938e-06}, {'diff': 7.056000000001811e-06}, {'diff': 7.042000000002241e-06}, {'diff': 7.0419999999987715e-06}, {'diff': 6.542000000001741e-06}, {'diff': 6.541999999998271e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:47.153" endtime="20201030 15:52:47.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.161" level="INFO">${ACCURACY} = {'diff': [6.568999999997938e-06, 7.056000000001811e-06, 7.042000000002241e-06, 7.0419999999987715e-06, 6.542000000001741e-06, 6.541999999998271e-06, 6.570000000000881e-06, 7.0279999999992016e-06, 7.05...</msg>
<status status="PASS" starttime="20201030 15:52:47.157" endtime="20201030 15:52:47.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.166" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.164" endtime="20201030 15:52:47.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.168" level="INFO">VALUE: [6.568999999997938e-06, 7.056000000001811e-06, 7.042000000002241e-06, 7.0419999999987715e-06, 6.542000000001741e-06, 6.541999999998271e-06, 6.570000000000881e-06, 7.0279999999992016e-06, 7.055999999998341e-06, 6.541999999998271e-06, 6.499999999999562e-06, 7.055999999998341e-06, 7.097000000001047e-06, 6.555000000001837e-06, 6.556000000001311e-06, 6.555000000001837e-06, 7.054999999998868e-06, 7.514000000000132e-06, 6.527000000002697e-06, 7.5419999999992715e-06, 6.541000000002267e-06, 7.040999999999298e-06, 7.040999999999298e-06, 6.570000000000881e-06, 7.040999999999298e-06, 6.986000000000492e-06, 6.555999999997841e-06, 6.555999999997841e-06, 7.054999999998868e-06, 6.526999999999228e-06, 6.542000000001741e-06, 7.056000000001811e-06, 6.556000000001311e-06, 7.054999999998868e-06, 6.541000000002267e-06, 6.540999999998798e-06, 6.986000000000492e-06, 6.542000000001741e-06, 6.555000000001837e-06, 7.069000000001907e-06, 7.0419999999987715e-06, 6.5279999999987015e-06, 6.556000000001311e-06, 6.5279999999987015e-06, 6.554999999998368e-06, 7.068999999998438e-06, 6.555999999997841e-06, 7.069999999997911e-06, 6.986000000000492e-06, 7.056000000001811e-06]</msg>
<status status="PASS" starttime="20201030 15:52:47.167" endtime="20201030 15:52:47.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.162" endtime="20201030 15:52:47.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.172" endtime="20201030 15:52:47.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.171" endtime="20201030 15:52:47.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.170" endtime="20201030 15:52:47.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.813" endtime="20201030 15:52:47.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.812" endtime="20201030 15:52:47.193"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.202" endtime="20201030 15:52:47.220"></status>
</kw>
<msg timestamp="20201030 15:52:47.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.201" endtime="20201030 15:52:47.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.221" endtime="20201030 15:52:47.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.224" endtime="20201030 15:52:47.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.198" endtime="20201030 15:52:47.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.196" endtime="20201030 15:52:47.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.233" endtime="20201030 15:52:47.520"></status>
</kw>
<msg timestamp="20201030 15:52:47.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020109097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.231" endtime="20201030 15:52:47.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020109097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.524" endtime="20201030 15:52:47.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.532" endtime="20201030 15:52:47.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.229" endtime="20201030 15:52:47.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.227" endtime="20201030 15:52:47.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.539" level="INFO">${RESULT} = [{'diff': 8.055999999999341e-06}, {'diff': 8.542000000000272e-06}, {'diff': 8.041999999999772e-06}, {'diff': 8.068999999999438e-06}, {'diff': 8.041999999999772e-06}, {'diff': 8.054999999999868e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:47.536" endtime="20201030 15:52:47.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.543" level="INFO">${ACCURACY} = {'diff': [8.055999999999341e-06, 8.542000000000272e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.054999999999868e-06, 8.054999999999868e-06, 8.069999999998911e-06, 7.5419...</msg>
<status status="PASS" starttime="20201030 15:52:47.540" endtime="20201030 15:52:47.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.548" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.547" endtime="20201030 15:52:47.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.550" level="INFO">VALUE: [8.055999999999341e-06, 8.542000000000272e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.054999999999868e-06, 8.054999999999868e-06, 8.069999999998911e-06, 7.5419999999992715e-06, 8.054999999999868e-06, 7.555999999998841e-06, 7.556000000002311e-06, 8.041000000000298e-06, 7.554999999999368e-06, 8.041999999999772e-06, 7.555999999998841e-06, 8.000000000001062e-06, 8.041999999999772e-06, 7.540999999999798e-06, 8.041999999999772e-06, 8.041000000000298e-06, 7.540999999999798e-06, 7.500000000000562e-06, 8.054999999999868e-06, 8.054999999999868e-06, 7.540999999999798e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 8.056000000002811e-06, 8.097000000002047e-06, 7.541000000003267e-06, 8.07000000000238e-06, 8.069999999998911e-06, 8.028000000000202e-06, 8.082999999999008e-06, 8.041999999999772e-06, 8.014000000000632e-06, 8.000000000001062e-06, 8.041999999999772e-06, 7.554999999999368e-06, 8.069000000002907e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.555999999999842e-06, 8.041999999999772e-06, 7.5419999999992715e-06, 8.527999999997232e-06, 8.056000000002811e-06, 7.5419999999992715e-06, 7.570000000001881e-06]</msg>
<status status="PASS" starttime="20201030 15:52:47.549" endtime="20201030 15:52:47.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.544" endtime="20201030 15:52:47.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.555" endtime="20201030 15:52:47.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.553" endtime="20201030 15:52:47.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.552" endtime="20201030 15:52:47.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.194" endtime="20201030 15:52:47.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.194" endtime="20201030 15:52:47.576"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.585" endtime="20201030 15:52:47.604"></status>
</kw>
<msg timestamp="20201030 15:52:47.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.583" endtime="20201030 15:52:47.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.606" endtime="20201030 15:52:47.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.610" endtime="20201030 15:52:47.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.581" endtime="20201030 15:52:47.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.578" endtime="20201030 15:52:47.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.624" endtime="20201030 15:52:47.909"></status>
</kw>
<msg timestamp="20201030 15:52:47.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020946722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020955222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.622" endtime="20201030 15:52:47.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020946722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020955222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.913" endtime="20201030 15:52:47.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.922" endtime="20201030 15:52:47.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.618" endtime="20201030 15:52:47.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.615" endtime="20201030 15:52:47.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.928" level="INFO">${RESULT} = [{'diff': 8.499999999998092e-06}, {'diff': 9.055000000000868e-06}, {'diff': 8.568999999999938e-06}, {'diff': 9.042000000000772e-06}, {'diff': 9.042000000000772e-06}, {'diff': 9.555000000001368e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:47.925" endtime="20201030 15:52:47.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.932" level="INFO">${ACCURACY} = {'diff': [8.499999999998092e-06, 9.055000000000868e-06, 8.568999999999938e-06, 9.042000000000772e-06, 9.042000000000772e-06, 9.555000000001368e-06, 8.555999999999842e-06, 9.069999999999911e-06, 9.0409...</msg>
<status status="PASS" starttime="20201030 15:52:47.929" endtime="20201030 15:52:47.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.937" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.936" endtime="20201030 15:52:47.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.939" level="INFO">VALUE: [8.499999999998092e-06, 9.055000000000868e-06, 8.568999999999938e-06, 9.042000000000772e-06, 9.042000000000772e-06, 9.555000000001368e-06, 8.555999999999842e-06, 9.069999999999911e-06, 9.040999999997829e-06, 8.542000000000272e-06, 8.555999999999842e-06, 9.056000000000342e-06, 9.056000000000342e-06, 9.042000000000772e-06, 8.555999999999842e-06, 8.555000000000368e-06, 9.555000000001368e-06, 9.042000000000772e-06, 8.542000000000272e-06, 9.028000000001202e-06, 9.056000000000342e-06, 9.513999999998662e-06, 9.069000000000438e-06, 9.028000000001202e-06, 9.042000000000772e-06, 8.514000000001132e-06, 9.583999999999981e-06, 9.056000000000342e-06, 8.986999999998496e-06, 9.042000000000772e-06, 8.568999999999938e-06, 9.069000000000438e-06, 9.097999999999051e-06, 8.568999999999938e-06, 8.555000000000368e-06, 8.583999999998981e-06, 8.542000000000272e-06, 8.555999999999842e-06, 8.569999999999411e-06, 9.041999999997302e-06, 8.568999999999938e-06, 8.471999999998953e-06, 8.554999999996898e-06, 9.042000000000772e-06, 9.026999999998259e-06, 8.610999999998648e-06, 9.069000000000438e-06, 9.040999999997829e-06, 8.555999999999842e-06, 8.555999999999842e-06]</msg>
<status status="PASS" starttime="20201030 15:52:47.938" endtime="20201030 15:52:47.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.933" endtime="20201030 15:52:47.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.947" endtime="20201030 15:52:47.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.946" endtime="20201030 15:52:47.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.945" endtime="20201030 15:52:47.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.577" endtime="20201030 15:52:47.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.576" endtime="20201030 15:52:47.968"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.977" endtime="20201030 15:52:47.994"></status>
</kw>
<msg timestamp="20201030 15:52:47.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.975" endtime="20201030 15:52:47.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.996" endtime="20201030 15:52:47.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.002" endtime="20201030 15:52:48.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.972" endtime="20201030 15:52:48.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.970" endtime="20201030 15:52:48.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.013" endtime="20201030 15:52:48.299"></status>
</kw>
<msg timestamp="20201030 15:52:48.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01953725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019546847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:48.011" endtime="20201030 15:52:48.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01953725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019546847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:48.303" endtime="20201030 15:52:48.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.312" endtime="20201030 15:52:48.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.007" endtime="20201030 15:52:48.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.005" endtime="20201030 15:52:48.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.318" level="INFO">${RESULT} = [{'diff': 9.597000000000078e-06}, {'diff': 9.999999999999593e-06}, {'diff': 9.568999999997468e-06}, {'diff': 9.583000000000508e-06}, {'diff': 1.0041999999998302e-05}, {'diff': 1.0040999999998829e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:48.315" endtime="20201030 15:52:48.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.324" level="INFO">${ACCURACY} = {'diff': [9.597000000000078e-06, 9.999999999999593e-06, 9.568999999997468e-06, 9.583000000000508e-06, 1.0041999999998302e-05, 1.0040999999998829e-05, 1.0042000000001772e-05, 9.987000000002966e-06, 9.5...</msg>
<status status="PASS" starttime="20201030 15:52:48.319" endtime="20201030 15:52:48.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.328" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.327" endtime="20201030 15:52:48.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.331" level="INFO">VALUE: [9.597000000000078e-06, 9.999999999999593e-06, 9.568999999997468e-06, 9.583000000000508e-06, 1.0041999999998302e-05, 1.0040999999998829e-05, 1.0042000000001772e-05, 9.987000000002966e-06, 9.569000000000938e-06, 1.0069000000001438e-05, 1.0055999999997872e-05, 1.0042000000001772e-05, 9.569999999996942e-06, 1.0042000000001772e-05, 1.0054999999998399e-05, 1.0055000000001868e-05, 9.527999999998232e-06, 9.556000000000842e-06, 9.527999999998232e-06, 1.0041999999998302e-05, 9.528000000001702e-06, 1.0056000000001342e-05, 9.986000000000023e-06, 1.0026999999999259e-05, 1.0055000000001868e-05, 1.0013999999999162e-05, 9.554999999997899e-06, 9.513999999998662e-06, 9.540999999998329e-06, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0056000000001342e-05, 1.0055999999997872e-05, 9.541000000001798e-06, 1.0055999999997872e-05, 1.0026999999999259e-05, 1.0054999999998399e-05, 9.542000000001272e-06, 1.0555000000002368e-05, 1.0097000000000578e-05, 1.0055000000001868e-05, 9.541000000001798e-06, 9.541000000001798e-06, 1.0040999999998829e-05, 1.0041999999998302e-05, 1.0540999999999329e-05, 1.0041000000002298e-05, 9.542000000001272e-06, 1.0555999999998372e-05, 1.0013999999999162e-05]</msg>
<status status="PASS" starttime="20201030 15:52:48.329" endtime="20201030 15:52:48.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.324" endtime="20201030 15:52:48.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.341" endtime="20201030 15:52:48.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.339" endtime="20201030 15:52:48.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.338" endtime="20201030 15:52:48.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.969" endtime="20201030 15:52:48.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.968" endtime="20201030 15:52:48.361"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.370" endtime="20201030 15:52:48.387"></status>
</kw>
<msg timestamp="20201030 15:52:48.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.368" endtime="20201030 15:52:48.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.389" endtime="20201030 15:52:48.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.391" endtime="20201030 15:52:48.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.366" endtime="20201030 15:52:48.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.364" endtime="20201030 15:52:48.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.400" endtime="20201030 15:52:48.712"></status>
</kw>
<msg timestamp="20201030 15:52:48.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019710819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.399" endtime="20201030 15:52:48.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019710819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.716" endtime="20201030 15:52:48.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.725" endtime="20201030 15:52:48.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.396" endtime="20201030 15:52:48.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.394" endtime="20201030 15:52:48.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.732" level="INFO">${RESULT} = [{'diff': 1.0540999999999329e-05}, {'diff': 1.0584000000000982e-05}, {'diff': 1.0540999999999329e-05}, {'diff': 1.1084000000001482e-05}, {'diff': 1.0542000000002272e-05}, {'diff': 1.1056000000002342e-...</msg>
<status status="PASS" starttime="20201030 15:52:48.728" endtime="20201030 15:52:48.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.736" level="INFO">${ACCURACY} = {'diff': [1.0540999999999329e-05, 1.0584000000000982e-05, 1.0540999999999329e-05, 1.1084000000001482e-05, 1.0542000000002272e-05, 1.1056000000002342e-05, 1.0541000000002798e-05, 1.0555999999998372e-05...</msg>
<status status="PASS" starttime="20201030 15:52:48.733" endtime="20201030 15:52:48.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.741" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.740" endtime="20201030 15:52:48.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.743" level="INFO">VALUE: [1.0540999999999329e-05, 1.0584000000000982e-05, 1.0540999999999329e-05, 1.1084000000001482e-05, 1.0542000000002272e-05, 1.1056000000002342e-05, 1.0541000000002798e-05, 1.0555999999998372e-05, 1.1054999999999399e-05, 1.0540999999999329e-05, 1.1054999999999399e-05, 1.0971999999997983e-05, 1.0986000000001023e-05, 1.1054999999999399e-05, 1.0541999999998802e-05, 1.1055999999998872e-05, 1.1097000000001578e-05, 1.0555999999998372e-05, 1.0556000000001842e-05, 1.1056000000002342e-05, 1.1055000000002868e-05, 1.0527999999999232e-05, 1.0541999999998802e-05, 1.1111000000001148e-05, 1.1055999999998872e-05, 1.1040999999999829e-05, 1.0527999999999232e-05, 1.0555999999998372e-05, 1.1068999999998969e-05, 1.0554999999998899e-05, 1.0556000000001842e-05, 1.0556000000001842e-05, 1.0568999999998469e-05, 1.1041999999999302e-05, 1.1013000000000689e-05, 1.0541999999998802e-05, 1.1069000000002438e-05, 1.1056000000002342e-05, 1.0556000000001842e-05, 1.0584000000000982e-05, 1.0570000000001412e-05, 1.0541999999998802e-05, 1.1596999999998608e-05, 1.1040999999999829e-05, 1.0556000000001842e-05, 1.0541999999998802e-05, 1.1040999999999829e-05, 1.1068999999998969e-05, 1.1070000000001912e-05, 1.1554999999999899e-05]</msg>
<status status="PASS" starttime="20201030 15:52:48.742" endtime="20201030 15:52:48.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.737" endtime="20201030 15:52:48.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.748" endtime="20201030 15:52:48.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.747" endtime="20201030 15:52:48.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.746" endtime="20201030 15:52:48.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.362" endtime="20201030 15:52:48.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.362" endtime="20201030 15:52:48.769"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.778" endtime="20201030 15:52:48.795"></status>
</kw>
<msg timestamp="20201030 15:52:48.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.777" endtime="20201030 15:52:48.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.797" endtime="20201030 15:52:48.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.800" endtime="20201030 15:52:48.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.774" endtime="20201030 15:52:48.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.772" endtime="20201030 15:52:48.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.809" endtime="20201030 15:52:49.100"></status>
</kw>
<msg timestamp="20201030 15:52:49.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021092694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021104236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.807" endtime="20201030 15:52:49.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021092694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021104236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.104" endtime="20201030 15:52:49.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.112" endtime="20201030 15:52:49.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.805" endtime="20201030 15:52:49.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.803" endtime="20201030 15:52:49.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.119" level="INFO">${RESULT} = [{'diff': 1.1541999999999802e-05}, {'diff': 1.2528000000001233e-05}, {'diff': 1.2055000000000399e-05}, {'diff': 1.201299999999822e-05}, {'diff': 1.2070000000002912e-05}, {'diff': 1.1500000000001093e-0...</msg>
<status status="PASS" starttime="20201030 15:52:49.116" endtime="20201030 15:52:49.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.123" level="INFO">${ACCURACY} = {'diff': [1.1541999999999802e-05, 1.2528000000001233e-05, 1.2055000000000399e-05, 1.201299999999822e-05, 1.2070000000002912e-05, 1.1500000000001093e-05, 1.2055999999999872e-05, 1.2055999999999872e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:49.120" endtime="20201030 15:52:49.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.128" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.127" endtime="20201030 15:52:49.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.130" level="INFO">VALUE: [1.1541999999999802e-05, 1.2528000000001233e-05, 1.2055000000000399e-05, 1.201299999999822e-05, 1.2070000000002912e-05, 1.1500000000001093e-05, 1.2055999999999872e-05, 1.2055999999999872e-05, 1.1582999999999039e-05, 1.2042000000000302e-05, 1.1596999999998608e-05, 1.2124999999998248e-05, 1.1554999999999899e-05, 1.204099999999736e-05, 1.2042000000000302e-05, 1.1582999999999039e-05, 1.1556000000002842e-05, 1.2042000000000302e-05, 1.2055999999999872e-05, 1.1554999999999899e-05, 1.2028000000000733e-05, 1.2055000000000399e-05, 1.2042000000000302e-05, 1.1541000000000329e-05, 1.2083999999999012e-05, 1.1999999999998123e-05, 1.2556000000000372e-05, 1.2055000000000399e-05, 1.2042000000000302e-05, 1.1554999999999899e-05, 1.2096999999999108e-05, 1.1554999999999899e-05, 1.2041000000000829e-05, 1.2070000000002912e-05, 1.1555999999999372e-05, 1.2041000000000829e-05, 1.2082999999999539e-05, 1.2055000000000399e-05, 1.1596999999998608e-05, 1.1554999999999899e-05, 1.2055000000000399e-05, 1.1554999999999899e-05, 1.1555999999999372e-05, 1.1514000000000663e-05, 1.1555999999999372e-05, 1.1597000000002078e-05, 1.1987000000001496e-05, 1.2068999999999969e-05, 1.2055999999999872e-05, 1.2055000000000399e-05]</msg>
<status status="PASS" starttime="20201030 15:52:49.129" endtime="20201030 15:52:49.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.124" endtime="20201030 15:52:49.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.136" endtime="20201030 15:52:49.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.135" endtime="20201030 15:52:49.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.133" endtime="20201030 15:52:49.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.770" endtime="20201030 15:52:49.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.770" endtime="20201030 15:52:49.157"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.166" endtime="20201030 15:52:49.182"></status>
</kw>
<msg timestamp="20201030 15:52:49.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.164" endtime="20201030 15:52:49.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.183" endtime="20201030 15:52:49.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.186" endtime="20201030 15:52:49.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.161" endtime="20201030 15:52:49.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.159" endtime="20201030 15:52:49.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.195" endtime="20201030 15:52:49.494"></status>
</kw>
<msg timestamp="20201030 15:52:49.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019761611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.193" endtime="20201030 15:52:49.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019761611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.498" endtime="20201030 15:52:49.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.507" endtime="20201030 15:52:49.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.191" endtime="20201030 15:52:49.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.189" endtime="20201030 15:52:49.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.514" level="INFO">${RESULT} = [{'diff': 1.2541999999997333e-05}, {'diff': 1.3055999999997403e-05}, {'diff': 1.3069000000000969e-05}, {'diff': 1.3084000000000012e-05}, {'diff': 1.2542000000000803e-05}, {'diff': 1.3028000000001733e-...</msg>
<status status="PASS" starttime="20201030 15:52:49.511" endtime="20201030 15:52:49.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.519" level="INFO">${ACCURACY} = {'diff': [1.2541999999997333e-05, 1.3055999999997403e-05, 1.3069000000000969e-05, 1.3084000000000012e-05, 1.2542000000000803e-05, 1.3028000000001733e-05, 1.2528000000001233e-05, 1.3042000000001303e-05...</msg>
<status status="PASS" starttime="20201030 15:52:49.515" endtime="20201030 15:52:49.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.524" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.523" endtime="20201030 15:52:49.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.527" level="INFO">VALUE: [1.2541999999997333e-05, 1.3055999999997403e-05, 1.3069000000000969e-05, 1.3084000000000012e-05, 1.2542000000000803e-05, 1.3028000000001733e-05, 1.2528000000001233e-05, 1.3042000000001303e-05, 1.304099999999836e-05, 1.3083000000000539e-05, 1.302699999999879e-05, 1.3055000000001399e-05, 1.2569999999999942e-05, 1.3027000000002259e-05, 1.304099999999836e-05, 1.2542000000000803e-05, 1.305499999999793e-05, 1.2541999999997333e-05, 1.2556000000000372e-05, 1.305499999999793e-05, 1.2555000000000899e-05, 1.2527000000001759e-05, 1.2569999999999942e-05, 1.304099999999836e-05, 1.2583000000000039e-05, 1.2499999999998623e-05, 1.3541000000002329e-05, 1.2569000000000469e-05, 1.2556000000000372e-05, 1.2528000000001233e-05, 1.3027999999998263e-05, 1.2569999999999942e-05, 1.2542000000000803e-05, 1.255499999999743e-05, 1.2556000000000372e-05, 1.3042000000001303e-05, 1.3055000000001399e-05, 1.2542000000000803e-05, 1.2528000000001233e-05, 1.2541999999997333e-05, 1.2541999999997333e-05, 1.2542000000000803e-05, 1.30689999999975e-05, 1.2542000000000803e-05, 1.3042000000001303e-05, 1.2569999999999942e-05, 1.3041999999997833e-05, 1.3056000000000872e-05, 1.2555000000000899e-05, 1.2555000000000899e-05]</msg>
<status status="PASS" starttime="20201030 15:52:49.525" endtime="20201030 15:52:49.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.520" endtime="20201030 15:52:49.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.532" endtime="20201030 15:52:49.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.530" endtime="20201030 15:52:49.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.529" endtime="20201030 15:52:49.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.158" endtime="20201030 15:52:49.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.157" endtime="20201030 15:52:49.553"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.562" endtime="20201030 15:52:49.579"></status>
</kw>
<msg timestamp="20201030 15:52:49.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.560" endtime="20201030 15:52:49.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.580" endtime="20201030 15:52:49.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.583" endtime="20201030 15:52:49.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.558" endtime="20201030 15:52:49.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.555" endtime="20201030 15:52:49.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.592" endtime="20201030 15:52:49.880"></status>
</kw>
<msg timestamp="20201030 15:52:49.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020261444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.591" endtime="20201030 15:52:49.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020261444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.884" endtime="20201030 15:52:49.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.893" endtime="20201030 15:52:49.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.588" endtime="20201030 15:52:49.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.586" endtime="20201030 15:52:49.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.900" level="INFO">${RESULT} = [{'diff': 1.3569000000001469e-05}, {'diff': 1.3555999999997903e-05}, {'diff': 1.3568999999998e-05}, {'diff': 1.3514000000002663e-05}, {'diff': 1.3527999999998763e-05}, {'diff': 1.40689999999985e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:49.896" endtime="20201030 15:52:49.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.904" level="INFO">${ACCURACY} = {'diff': [1.3569000000001469e-05, 1.3555999999997903e-05, 1.3568999999998e-05, 1.3514000000002663e-05, 1.3527999999998763e-05, 1.40689999999985e-05, 1.4028000000002733e-05, 1.4042000000002303e-05, 1.3...</msg>
<status status="PASS" starttime="20201030 15:52:49.901" endtime="20201030 15:52:49.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.909" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.907" endtime="20201030 15:52:49.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.911" level="INFO">VALUE: [1.3569000000001469e-05, 1.3555999999997903e-05, 1.3568999999998e-05, 1.3514000000002663e-05, 1.3527999999998763e-05, 1.40689999999985e-05, 1.4028000000002733e-05, 1.4042000000002303e-05, 1.3541999999998333e-05, 1.4070000000001442e-05, 1.3555000000001899e-05, 1.3542000000001803e-05, 1.4041000000002829e-05, 1.4541999999999333e-05, 1.4069000000001969e-05, 1.4041999999998833e-05, 1.4013999999999693e-05, 1.4042000000002303e-05, 1.3542000000001803e-05, 1.3555999999997903e-05, 1.4041999999998833e-05, 1.3556000000001373e-05, 1.405499999999893e-05, 1.4041999999998833e-05, 1.4097000000001109e-05, 1.4555999999998903e-05, 1.354099999999886e-05, 1.4083999999997543e-05, 1.355499999999843e-05, 1.354099999999886e-05, 1.3569000000001469e-05, 1.3472000000000484e-05, 1.4028000000002733e-05, 1.4013999999999693e-05, 1.355499999999843e-05, 1.355499999999843e-05, 1.4055999999998403e-05, 1.3555000000001899e-05, 1.4041999999998833e-05, 1.3541999999998333e-05, 1.40689999999985e-05, 1.4083000000001539e-05, 1.4055999999998403e-05, 1.3542000000001803e-05, 1.4041999999998833e-05, 1.3597000000000609e-05, 1.3542000000001803e-05, 1.4055000000002399e-05, 1.3611000000000179e-05, 1.3472000000000484e-05]</msg>
<status status="PASS" starttime="20201030 15:52:49.910" endtime="20201030 15:52:49.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.905" endtime="20201030 15:52:49.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.916" endtime="20201030 15:52:49.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.915" endtime="20201030 15:52:49.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.914" endtime="20201030 15:52:49.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.554" endtime="20201030 15:52:49.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.553" endtime="20201030 15:52:49.937"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.946" endtime="20201030 15:52:49.965"></status>
</kw>
<msg timestamp="20201030 15:52:49.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.945" endtime="20201030 15:52:49.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.966" endtime="20201030 15:52:49.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.969" endtime="20201030 15:52:49.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.942" endtime="20201030 15:52:49.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.940" endtime="20201030 15:52:49.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.979" endtime="20201030 15:52:50.283"></status>
</kw>
<msg timestamp="20201030 15:52:50.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021299722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02131475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:49.977" endtime="20201030 15:52:50.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021299722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02131475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:50.287" endtime="20201030 15:52:50.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.296" endtime="20201030 15:52:50.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.974" endtime="20201030 15:52:50.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.972" endtime="20201030 15:52:50.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.303" level="INFO">${RESULT} = [{'diff': 1.5028000000000263e-05}, {'diff': 1.455499999999943e-05}, {'diff': 1.4541999999999333e-05}, {'diff': 1.505499999999993e-05}, {'diff': 1.4569999999998473e-05}, {'diff': 1.502700000000079e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:50.300" endtime="20201030 15:52:50.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.307" level="INFO">${ACCURACY} = {'diff': [1.5028000000000263e-05, 1.455499999999943e-05, 1.4541999999999333e-05, 1.505499999999993e-05, 1.4569999999998473e-05, 1.502700000000079e-05, 1.4986000000001554e-05, 1.5041999999999833e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:52:50.304" endtime="20201030 15:52:50.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.312" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.311" endtime="20201030 15:52:50.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.315" level="INFO">VALUE: [1.5028000000000263e-05, 1.455499999999943e-05, 1.4541999999999333e-05, 1.505499999999993e-05, 1.4569999999998473e-05, 1.502700000000079e-05, 1.4986000000001554e-05, 1.5041999999999833e-05, 1.5499999999998154e-05, 1.50689999999995e-05, 1.4527999999999763e-05, 1.455499999999943e-05, 1.455499999999943e-05, 1.509699999999864e-05, 1.4514000000000193e-05, 1.5111000000001679e-05, 1.4500000000000624e-05, 1.504100000000036e-05, 1.4556000000002373e-05, 1.5056000000002873e-05, 1.4500000000000624e-05, 1.5028000000000263e-05, 1.455499999999943e-05, 1.4569999999998473e-05, 1.5097000000002109e-05, 1.505499999999993e-05, 1.5041999999999833e-05, 1.501300000000122e-05, 1.4569999999998473e-05, 1.4568999999999e-05, 1.5041999999999833e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.4570000000001943e-05, 1.4486000000001054e-05, 1.504100000000036e-05, 1.4541999999999333e-05, 1.50689999999995e-05, 1.4541999999999333e-05, 1.5070000000002443e-05, 1.4527999999999763e-05, 1.455499999999943e-05, 1.455499999999943e-05, 1.5083999999998543e-05, 1.4527999999999763e-05, 1.4541999999999333e-05, 1.4527999999999763e-05, 1.505499999999993e-05, 1.5055999999999403e-05, 1.505499999999993e-05]</msg>
<status status="PASS" starttime="20201030 15:52:50.313" endtime="20201030 15:52:50.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.308" endtime="20201030 15:52:50.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.321" endtime="20201030 15:52:50.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.319" endtime="20201030 15:52:50.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.318" endtime="20201030 15:52:50.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.938" endtime="20201030 15:52:50.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.938" endtime="20201030 15:52:50.342"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.351" endtime="20201030 15:52:50.369"></status>
</kw>
<msg timestamp="20201030 15:52:50.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.349" endtime="20201030 15:52:50.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.370" endtime="20201030 15:52:50.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.373" endtime="20201030 15:52:50.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.346" endtime="20201030 15:52:50.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.344" endtime="20201030 15:52:50.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.382" endtime="20201030 15:52:50.670"></status>
</kw>
<msg timestamp="20201030 15:52:50.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020402931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020419, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:50.381" endtime="20201030 15:52:50.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020402931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020419, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:50.674" endtime="20201030 15:52:50.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.682" endtime="20201030 15:52:50.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.378" endtime="20201030 15:52:50.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.376" endtime="20201030 15:52:50.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.689" level="INFO">${RESULT} = [{'diff': 1.60690000000005e-05}, {'diff': 1.6569000000001e-05}, {'diff': 1.605500000000093e-05}, {'diff': 1.661099999999971e-05}, {'diff': 1.6042000000000833e-05}, {'diff': 1.554100000000086e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:50.686" endtime="20201030 15:52:50.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.695" level="INFO">${ACCURACY} = {'diff': [1.60690000000005e-05, 1.6569000000001e-05, 1.605500000000093e-05, 1.661099999999971e-05, 1.6042000000000833e-05, 1.554100000000086e-05, 1.6056000000000403e-05, 1.554100000000086e-05, 1.60560...</msg>
<status status="PASS" starttime="20201030 15:52:50.690" endtime="20201030 15:52:50.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.699" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.698" endtime="20201030 15:52:50.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.702" level="INFO">VALUE: [1.60690000000005e-05, 1.6569000000001e-05, 1.605500000000093e-05, 1.661099999999971e-05, 1.6042000000000833e-05, 1.554100000000086e-05, 1.6056000000000403e-05, 1.554100000000086e-05, 1.6056000000000403e-05, 1.6056000000000403e-05, 1.6056000000000403e-05, 1.5486000000002054e-05, 1.5542000000000333e-05, 1.605500000000093e-05, 1.605499999999746e-05, 1.5569e-05, 1.612499999999878e-05, 1.6056000000000403e-05, 1.555500000000043e-05, 1.5528000000000763e-05, 1.6028000000001263e-05, 1.5569e-05, 1.6556000000000903e-05, 1.6056000000000403e-05, 1.6555999999997434e-05, 1.6570000000000473e-05, 1.561100000000218e-05, 1.5569e-05, 1.60690000000005e-05, 1.6056000000000403e-05, 1.60690000000005e-05, 1.604099999999789e-05, 1.6069999999999973e-05, 1.6056000000000403e-05, 1.6013999999998224e-05, 1.6042000000000833e-05, 1.6056000000000403e-05, 1.6042000000000833e-05, 1.5555999999999903e-05, 1.5542000000000333e-05, 1.6042000000000833e-05, 1.6056000000000403e-05, 1.555499999999696e-05, 1.555500000000043e-05, 1.6055999999996934e-05, 1.555500000000043e-05, 1.5555999999999903e-05, 1.5528000000000763e-05, 1.6028000000001263e-05, 1.5555999999999903e-05]</msg>
<status status="PASS" starttime="20201030 15:52:50.700" endtime="20201030 15:52:50.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.696" endtime="20201030 15:52:50.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.707" endtime="20201030 15:52:50.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.706" endtime="20201030 15:52:50.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.704" endtime="20201030 15:52:50.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.343" endtime="20201030 15:52:50.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.342" endtime="20201030 15:52:50.728"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.737" endtime="20201030 15:52:50.755"></status>
</kw>
<msg timestamp="20201030 15:52:50.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.735" endtime="20201030 15:52:50.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.757" endtime="20201030 15:52:50.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.760" endtime="20201030 15:52:50.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.733" endtime="20201030 15:52:50.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.731" endtime="20201030 15:52:50.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.769" endtime="20201030 15:52:51.055"></status>
</kw>
<msg timestamp="20201030 15:52:51.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020317236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.767" endtime="20201030 15:52:51.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020317236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.060" endtime="20201030 15:52:51.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.068" endtime="20201030 15:52:51.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.765" endtime="20201030 15:52:51.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.763" endtime="20201030 15:52:51.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.075" level="INFO">${RESULT} = [{'diff': 1.655499999999796e-05}, {'diff': 1.706899999999803e-05}, {'diff': 1.6541999999997864e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.706899999999803e-05}, {'diff': 1.705500000000193e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:51.072" endtime="20201030 15:52:51.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.080" level="INFO">${ACCURACY} = {'diff': [1.655499999999796e-05, 1.706899999999803e-05, 1.6541999999997864e-05, 1.7056000000001403e-05, 1.706899999999803e-05, 1.705500000000193e-05, 1.7098000000000113e-05, 1.6556000000000903e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:52:51.076" endtime="20201030 15:52:51.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.084" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.083" endtime="20201030 15:52:51.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.087" level="INFO">VALUE: [1.655499999999796e-05, 1.706899999999803e-05, 1.6541999999997864e-05, 1.7056000000001403e-05, 1.706899999999803e-05, 1.705500000000193e-05, 1.7098000000000113e-05, 1.6556000000000903e-05, 1.7055999999997934e-05, 1.655500000000143e-05, 1.652699999999882e-05, 1.6541999999997864e-05, 1.655499999999796e-05, 1.706899999999803e-05, 1.704099999999889e-05, 1.656899999999753e-05, 1.7069999999997504e-05, 1.704099999999889e-05, 1.654100000000186e-05, 1.655499999999796e-05, 1.705500000000193e-05, 1.704100000000236e-05, 1.6541999999997864e-05, 1.655499999999796e-05, 1.702699999999932e-05, 1.654100000000186e-05, 1.7055999999997934e-05, 1.70690000000015e-05, 1.7042000000001833e-05, 1.654099999999839e-05, 1.704099999999889e-05, 1.7028000000002264e-05, 1.704100000000236e-05, 1.654100000000186e-05, 1.655499999999796e-05, 1.6541999999997864e-05, 1.6569000000001e-05, 1.705499999999846e-05, 1.655500000000143e-05, 1.7041999999998364e-05, 1.6556000000000903e-05, 1.7055999999997934e-05, 1.705499999999846e-05, 1.7042000000001833e-05, 1.7055999999997934e-05, 1.655499999999796e-05, 1.654099999999839e-05, 1.7055999999997934e-05, 1.6597999999999613e-05, 1.705500000000193e-05]</msg>
<status status="PASS" starttime="20201030 15:52:51.085" endtime="20201030 15:52:51.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.081" endtime="20201030 15:52:51.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.092" endtime="20201030 15:52:51.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.091" endtime="20201030 15:52:51.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.089" endtime="20201030 15:52:51.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.729" endtime="20201030 15:52:51.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.728" endtime="20201030 15:52:51.113"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.122" endtime="20201030 15:52:51.141"></status>
</kw>
<msg timestamp="20201030 15:52:51.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.121" endtime="20201030 15:52:51.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.142" endtime="20201030 15:52:51.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.145" endtime="20201030 15:52:51.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.118" endtime="20201030 15:52:51.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.116" endtime="20201030 15:52:51.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.154" endtime="20201030 15:52:51.441"></status>
</kw>
<msg timestamp="20201030 15:52:51.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021450972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021468528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.153" endtime="20201030 15:52:51.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021450972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021468528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.445" endtime="20201030 15:52:51.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.454" endtime="20201030 15:52:51.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.150" endtime="20201030 15:52:51.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.148" endtime="20201030 15:52:51.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.461" level="INFO">${RESULT} = [{'diff': 1.7556000000001903e-05}, {'diff': 1.811100000000121e-05}, {'diff': 1.8027999999999794e-05}, {'diff': 1.8055999999998934e-05}, {'diff': 1.8069999999998504e-05}, {'diff': 1.8056000000002403e-0...</msg>
<status status="PASS" starttime="20201030 15:52:51.458" endtime="20201030 15:52:51.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.465" level="INFO">${ACCURACY} = {'diff': [1.7556000000001903e-05, 1.811100000000121e-05, 1.8027999999999794e-05, 1.8055999999998934e-05, 1.8069999999998504e-05, 1.8056000000002403e-05, 1.754099999999939e-05, 1.7513999999999724e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:51.462" endtime="20201030 15:52:51.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.470" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.469" endtime="20201030 15:52:51.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.476" level="INFO">VALUE: [1.7556000000001903e-05, 1.811100000000121e-05, 1.8027999999999794e-05, 1.8055999999998934e-05, 1.8069999999998504e-05, 1.8056000000002403e-05, 1.754099999999939e-05, 1.7513999999999724e-05, 1.7555999999998434e-05, 1.7541999999998864e-05, 1.806899999999903e-05, 1.7598000000000613e-05, 1.7527999999999294e-05, 1.8027999999999794e-05, 1.809699999999817e-05, 1.805500000000293e-05, 1.7987000000000558e-05, 1.8055999999998934e-05, 1.805500000000293e-05, 1.805499999999946e-05, 1.7541999999998864e-05, 1.8570000000002473e-05, 1.752699999999982e-05, 1.8083999999998074e-05, 1.7570000000001473e-05, 1.8013999999996755e-05, 1.7513999999999724e-05, 1.754100000000286e-05, 1.8055999999998934e-05, 1.8542000000003334e-05, 1.7556000000001903e-05, 1.7555999999998434e-05, 1.8042000000002834e-05, 1.755499999999896e-05, 1.804099999999989e-05, 1.806899999999903e-05, 1.7542000000002334e-05, 1.7569999999998004e-05, 1.8027999999999794e-05, 1.761100000000071e-05, 1.7541999999998864e-05, 1.795899999999795e-05, 1.761099999999724e-05, 1.8041999999999364e-05, 1.7542000000002334e-05, 1.7500000000000154e-05, 1.8055999999998934e-05, 1.855499999999996e-05, 1.7597999999997144e-05, 1.8070000000001973e-05]</msg>
<status status="PASS" starttime="20201030 15:52:51.471" endtime="20201030 15:52:51.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.466" endtime="20201030 15:52:51.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.481" endtime="20201030 15:52:51.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.480" endtime="20201030 15:52:51.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.478" endtime="20201030 15:52:51.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.114" endtime="20201030 15:52:51.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.113" endtime="20201030 15:52:51.502"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.511" endtime="20201030 15:52:51.529"></status>
</kw>
<msg timestamp="20201030 15:52:51.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.509" endtime="20201030 15:52:51.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.530" endtime="20201030 15:52:51.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.533" endtime="20201030 15:52:51.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.507" endtime="20201030 15:52:51.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.505" endtime="20201030 15:52:51.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.542" endtime="20201030 15:52:51.828"></status>
</kw>
<msg timestamp="20201030 15:52:51.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020283806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.541" endtime="20201030 15:52:51.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020283806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.832" endtime="20201030 15:52:51.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.841" endtime="20201030 15:52:51.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.538" endtime="20201030 15:52:51.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.536" endtime="20201030 15:52:51.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.847" level="INFO">${RESULT} = [{'diff': 1.8528000000000294e-05}, {'diff': 1.905500000000046e-05}, {'diff': 1.9014000000001224e-05}, {'diff': 1.855499999999996e-05}, {'diff': 1.909699999999917e-05}, {'diff': 1.8541999999999864e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:51.844" endtime="20201030 15:52:51.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.853" level="INFO">${ACCURACY} = {'diff': [1.8528000000000294e-05, 1.905500000000046e-05, 1.9014000000001224e-05, 1.855499999999996e-05, 1.909699999999917e-05, 1.8541999999999864e-05, 1.855499999999996e-05, 1.905500000000046e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 15:52:51.849" endtime="20201030 15:52:51.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.857" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.856" endtime="20201030 15:52:51.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.860" level="INFO">VALUE: [1.8528000000000294e-05, 1.905500000000046e-05, 1.9014000000001224e-05, 1.855499999999996e-05, 1.909699999999917e-05, 1.8541999999999864e-05, 1.855499999999996e-05, 1.905500000000046e-05, 1.906900000000003e-05, 1.906900000000003e-05, 1.8528000000000294e-05, 1.8555999999999434e-05, 1.8985999999998615e-05, 1.9013999999997755e-05, 1.9500000000002154e-05, 1.9542000000000864e-05, 1.9541999999997395e-05, 1.855499999999996e-05, 1.9000000000001654e-05, 1.9042000000000364e-05, 1.8541999999999864e-05, 1.855499999999996e-05, 1.9055999999999934e-05, 1.8528000000000294e-05, 1.905500000000046e-05, 1.8541999999999864e-05, 1.8555999999999434e-05, 1.90829999999996e-05, 1.8555999999999434e-05, 1.8555999999999434e-05, 1.9069999999999504e-05, 1.954100000000139e-05, 1.8528000000000294e-05, 1.861100000000171e-05, 1.904100000000089e-05, 1.902700000000132e-05, 1.9055999999999934e-05, 1.855499999999996e-05, 1.8999999999998185e-05, 1.8541999999999864e-05, 1.859699999999867e-05, 1.9055999999999934e-05, 1.854100000000039e-05, 1.906900000000003e-05, 1.85829999999991e-05, 1.8513999999997255e-05, 1.855499999999996e-05, 1.8500000000001154e-05, 1.9042000000000364e-05, 1.854100000000039e-05]</msg>
<status status="PASS" starttime="20201030 15:52:51.859" endtime="20201030 15:52:51.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.854" endtime="20201030 15:52:51.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.865" endtime="20201030 15:52:51.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.864" endtime="20201030 15:52:51.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.862" endtime="20201030 15:52:51.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.503" endtime="20201030 15:52:51.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.502" endtime="20201030 15:52:51.886"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.895" endtime="20201030 15:52:51.911"></status>
</kw>
<msg timestamp="20201030 15:52:51.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.893" endtime="20201030 15:52:51.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.913" endtime="20201030 15:52:51.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.916" endtime="20201030 15:52:51.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.891" endtime="20201030 15:52:51.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.889" endtime="20201030 15:52:51.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.925" endtime="20201030 15:52:52.212"></status>
</kw>
<msg timestamp="20201030 15:52:52.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020251889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020271486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.923" endtime="20201030 15:52:52.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020251889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020271486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.216" endtime="20201030 15:52:52.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.225" endtime="20201030 15:52:52.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.921" endtime="20201030 15:52:52.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.919" endtime="20201030 15:52:52.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.232" level="INFO">${RESULT} = [{'diff': 1.959699999999967e-05}, {'diff': 1.95830000000001e-05}, {'diff': 2.005500000000146e-05}, {'diff': 2.0042000000001364e-05}, {'diff': 2.055500000000196e-05}, {'diff': 1.9542000000000864e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:52.228" endtime="20201030 15:52:52.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.236" level="INFO">${ACCURACY} = {'diff': [1.959699999999967e-05, 1.95830000000001e-05, 2.005500000000146e-05, 2.0042000000001364e-05, 2.055500000000196e-05, 1.9542000000000864e-05, 1.9471999999999545e-05, 2.0056000000000934e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 15:52:52.233" endtime="20201030 15:52:52.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.240" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.239" endtime="20201030 15:52:52.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.243" level="INFO">VALUE: [1.959699999999967e-05, 1.95830000000001e-05, 2.005500000000146e-05, 2.0042000000001364e-05, 2.055500000000196e-05, 1.9542000000000864e-05, 1.9471999999999545e-05, 2.0056000000000934e-05, 2.056899999999806e-05, 2.005500000000146e-05, 2.009700000000017e-05, 2.0084000000000074e-05, 2.0056000000000934e-05, 2.00830000000006e-05, 1.9556000000000434e-05, 1.9528000000001294e-05, 1.9528000000001294e-05, 1.9985999999999615e-05, 2.005500000000146e-05, 2.004099999999842e-05, 1.9556000000000434e-05, 2.0056000000000934e-05, 1.9542000000000864e-05, 1.9987000000002558e-05, 1.9542000000000864e-05, 2.0056000000000934e-05, 2.0042000000001364e-05, 1.9556000000000434e-05, 1.9542000000000864e-05, 1.9542000000000864e-05, 1.95830000000001e-05, 2.0041999999997895e-05, 2.005500000000146e-05, 2.0084000000000074e-05, 1.9457999999999975e-05, 2.011099999999974e-05, 2.0055999999997465e-05, 1.959699999999967e-05, 1.955500000000096e-05, 1.955500000000096e-05, 2.005499999999799e-05, 2.004099999999842e-05, 2.0056000000000934e-05, 1.955499999999749e-05, 2.004100000000189e-05, 2.005499999999799e-05, 2.0056000000000934e-05, 1.9556000000000434e-05, 2.004099999999842e-05, 1.955499999999749e-05]</msg>
<status status="PASS" starttime="20201030 15:52:52.242" endtime="20201030 15:52:52.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.237" endtime="20201030 15:52:52.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.248" endtime="20201030 15:52:52.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.247" endtime="20201030 15:52:52.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.246" endtime="20201030 15:52:52.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.887" endtime="20201030 15:52:52.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.886" endtime="20201030 15:52:52.269"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.278" endtime="20201030 15:52:52.297"></status>
</kw>
<msg timestamp="20201030 15:52:52.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.277" endtime="20201030 15:52:52.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.298" endtime="20201030 15:52:52.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.301" endtime="20201030 15:52:52.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.274" endtime="20201030 15:52:52.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.272" endtime="20201030 15:52:52.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.310" endtime="20201030 15:52:52.597"></status>
</kw>
<msg timestamp="20201030 15:52:52.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0211665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021187042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:52.309" endtime="20201030 15:52:52.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0211665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021187042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:52.602" endtime="20201030 15:52:52.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.611" endtime="20201030 15:52:52.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.306" endtime="20201030 15:52:52.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.304" endtime="20201030 15:52:52.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.617" level="INFO">${RESULT} = [{'diff': 2.0541999999998395e-05}, {'diff': 2.055499999999849e-05}, {'diff': 2.105499999999899e-05}, {'diff': 2.1084000000001074e-05}, {'diff': 2.1056000000001934e-05}, {'diff': 2.1027999999999325e-05...</msg>
<status status="PASS" starttime="20201030 15:52:52.614" endtime="20201030 15:52:52.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.622" level="INFO">${ACCURACY} = {'diff': [2.0541999999998395e-05, 2.055499999999849e-05, 2.105499999999899e-05, 2.1084000000001074e-05, 2.1056000000001934e-05, 2.1027999999999325e-05, 2.054099999999892e-05, 2.0570000000001004e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:52.619" endtime="20201030 15:52:52.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.626" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.625" endtime="20201030 15:52:52.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.629" level="INFO">VALUE: [2.0541999999998395e-05, 2.055499999999849e-05, 2.105499999999899e-05, 2.1084000000001074e-05, 2.1056000000001934e-05, 2.1027999999999325e-05, 2.054099999999892e-05, 2.0570000000001004e-05, 2.1000000000000185e-05, 2.105500000000246e-05, 2.1056000000001934e-05, 2.055499999999849e-05, 2.1000000000000185e-05, 2.104099999999942e-05, 2.10969999999977e-05, 2.055499999999849e-05, 2.1555999999998965e-05, 2.1056000000001934e-05, 2.102699999999985e-05, 2.055499999999849e-05, 2.0556000000001434e-05, 2.0555999999997965e-05, 2.1041999999998895e-05, 2.055500000000196e-05, 2.055499999999849e-05, 2.054100000000239e-05, 2.0556000000001434e-05, 2.059700000000067e-05, 2.055499999999849e-05, 2.055499999999849e-05, 2.0556000000001434e-05, 2.098700000000009e-05, 2.061100000000024e-05, 2.0555999999997965e-05, 2.0569999999997535e-05, 2.104100000000289e-05, 2.1069999999998035e-05, 2.0527999999998825e-05, 2.1027999999999325e-05, 2.104099999999942e-05, 2.101300000000028e-05, 2.1055999999998465e-05, 2.055499999999849e-05, 2.156899999999906e-05, 2.1056000000001934e-05, 2.055499999999849e-05, 2.052699999999935e-05, 2.054099999999892e-05, 2.0555999999997965e-05, 2.1028000000002794e-05]</msg>
<status status="PASS" starttime="20201030 15:52:52.628" endtime="20201030 15:52:52.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.623" endtime="20201030 15:52:52.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.635" endtime="20201030 15:52:52.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.634" endtime="20201030 15:52:52.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.632" endtime="20201030 15:52:52.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.270" endtime="20201030 15:52:52.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.270" endtime="20201030 15:52:52.656"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.665" endtime="20201030 15:52:52.683"></status>
</kw>
<msg timestamp="20201030 15:52:52.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.663" endtime="20201030 15:52:52.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.685" endtime="20201030 15:52:52.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.687" endtime="20201030 15:52:52.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.661" endtime="20201030 15:52:52.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.658" endtime="20201030 15:52:52.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.697" endtime="20201030 15:52:52.983"></status>
</kw>
<msg timestamp="20201030 15:52:52.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020364361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020385847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.695" endtime="20201030 15:52:52.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020364361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020385847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.988" endtime="20201030 15:52:52.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.996" endtime="20201030 15:52:52.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.693" endtime="20201030 15:52:52.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.691" endtime="20201030 15:52:52.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.003" level="INFO">${RESULT} = [{'diff': 2.1485999999997646e-05}, {'diff': 2.209700000000217e-05}, {'diff': 2.2500000000001685e-05}, {'diff': 2.1555999999998965e-05}, {'diff': 2.155499999999949e-05}, {'diff': 2.1541999999999395e-05...</msg>
<status status="PASS" starttime="20201030 15:52:53.000" endtime="20201030 15:52:53.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.009" level="INFO">${ACCURACY} = {'diff': [2.1485999999997646e-05, 2.209700000000217e-05, 2.2500000000001685e-05, 2.1555999999998965e-05, 2.155499999999949e-05, 2.1541999999999395e-05, 2.156899999999906e-05, 2.2097999999998175e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:53.004" endtime="20201030 15:52:53.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.013" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.012" endtime="20201030 15:52:53.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.016" level="INFO">VALUE: [2.1485999999997646e-05, 2.209700000000217e-05, 2.2500000000001685e-05, 2.1555999999998965e-05, 2.155499999999949e-05, 2.1541999999999395e-05, 2.156899999999906e-05, 2.2097999999998175e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.154099999999992e-05, 2.154099999999992e-05, 2.1556000000002434e-05, 2.152700000000035e-05, 2.155499999999949e-05, 2.1541999999999395e-05, 2.255500000000049e-05, 2.155499999999949e-05, 2.2026999999997382e-05, 2.1569999999998535e-05, 2.1541999999999395e-05, 2.2055999999999465e-05, 2.15830000000021e-05, 2.1555999999998965e-05, 2.205499999999999e-05, 2.1542000000002864e-05, 2.205499999999999e-05, 2.1985999999998146e-05, 2.2055999999999465e-05, 2.20969999999987e-05, 2.155499999999949e-05, 2.1499999999997216e-05, 2.2055999999999465e-05, 2.15830000000021e-05, 2.2012999999997812e-05, 2.2555999999999965e-05, 2.2041999999999895e-05, 2.2528000000000825e-05, 2.2055999999999465e-05, 2.1556000000002434e-05, 2.2555999999999965e-05, 2.2542000000000395e-05, 2.206899999999956e-05, 2.154099999999992e-05, 2.2070000000002504e-05, 2.206899999999956e-05, 2.1541999999999395e-05, 2.1541999999999395e-05, 2.20969999999987e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.014" endtime="20201030 15:52:53.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.010" endtime="20201030 15:52:53.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.021" endtime="20201030 15:52:53.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.020" endtime="20201030 15:52:53.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.018" endtime="20201030 15:52:53.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.657" endtime="20201030 15:52:53.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.656" endtime="20201030 15:52:53.042"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.051" endtime="20201030 15:52:53.070"></status>
</kw>
<msg timestamp="20201030 15:52:53.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.050" endtime="20201030 15:52:53.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.071" endtime="20201030 15:52:53.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.074" endtime="20201030 15:52:53.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.047" endtime="20201030 15:52:53.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.045" endtime="20201030 15:52:53.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.083" endtime="20201030 15:52:53.371"></status>
</kw>
<msg timestamp="20201030 15:52:53.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020459056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.082" endtime="20201030 15:52:53.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020459056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.376" endtime="20201030 15:52:53.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.384" endtime="20201030 15:52:53.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.079" endtime="20201030 15:52:53.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.077" endtime="20201030 15:52:53.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.391" level="INFO">${RESULT} = [{'diff': 2.256900000000006e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.3056000000000465e-05}, {'diff': 2.2542000000000395e-05}, {'diff': 2.2542000000000395e-05}, {'diff': 2.262500000000181e-05...</msg>
<status status="PASS" starttime="20201030 15:52:53.388" endtime="20201030 15:52:53.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.395" level="INFO">${ACCURACY} = {'diff': [2.256900000000006e-05, 2.3042000000000895e-05, 2.3056000000000465e-05, 2.2542000000000395e-05, 2.2542000000000395e-05, 2.262500000000181e-05, 2.3554999999998022e-05, 2.305500000000099e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:53.392" endtime="20201030 15:52:53.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.400" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.399" endtime="20201030 15:52:53.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.403" level="INFO">VALUE: [2.256900000000006e-05, 2.3042000000000895e-05, 2.3056000000000465e-05, 2.2542000000000395e-05, 2.2542000000000395e-05, 2.262500000000181e-05, 2.3554999999998022e-05, 2.305500000000099e-05, 2.305500000000099e-05, 2.2569999999999535e-05, 2.2540999999997452e-05, 2.3013999999998286e-05, 2.3042000000000895e-05, 2.2554999999997022e-05, 2.306900000000056e-05, 2.2542000000000395e-05, 2.3056000000000465e-05, 2.3042000000000895e-05, 2.255500000000049e-05, 2.256900000000006e-05, 2.254100000000092e-05, 2.2527999999997356e-05, 2.3070000000000035e-05, 2.2569999999999535e-05, 2.3027999999997856e-05, 2.2555999999999965e-05, 2.3040999999997952e-05, 2.3056000000000465e-05, 2.262500000000181e-05, 2.306900000000056e-05, 2.304100000000142e-05, 2.3070000000000035e-05, 2.3070000000000035e-05, 2.2555999999999965e-05, 2.2555999999999965e-05, 2.3597999999999675e-05, 2.255500000000049e-05, 2.255500000000049e-05, 2.2542000000000395e-05, 2.3070000000000035e-05, 2.2528000000000825e-05, 2.261099999999877e-05, 2.3042000000000895e-05, 2.3068999999997092e-05, 2.3056000000000465e-05, 2.2555999999999965e-05, 2.305500000000099e-05, 2.3013999999998286e-05, 2.2986000000002615e-05, 2.255500000000049e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.401" endtime="20201030 15:52:53.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.396" endtime="20201030 15:52:53.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.413" endtime="20201030 15:52:53.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.411" endtime="20201030 15:52:53.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.410" endtime="20201030 15:52:53.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.043" endtime="20201030 15:52:53.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.042" endtime="20201030 15:52:53.434"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.443" endtime="20201030 15:52:53.461"></status>
</kw>
<msg timestamp="20201030 15:52:53.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.441" endtime="20201030 15:52:53.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.463" endtime="20201030 15:52:53.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.465" endtime="20201030 15:52:53.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.438" endtime="20201030 15:52:53.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.436" endtime="20201030 15:52:53.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.475" endtime="20201030 15:52:53.762"></status>
</kw>
<msg timestamp="20201030 15:52:53.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021307958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021331514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.473" endtime="20201030 15:52:53.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021307958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021331514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.766" endtime="20201030 15:52:53.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.775" endtime="20201030 15:52:53.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.470" endtime="20201030 15:52:53.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.469" endtime="20201030 15:52:53.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.782" level="INFO">${RESULT} = [{'diff': 2.3556000000000965e-05}, {'diff': 2.4070000000001035e-05}, {'diff': 2.4055999999997996e-05}, {'diff': 2.406900000000156e-05}, {'diff': 2.4068999999998092e-05}, {'diff': 2.4055999999997996e-0...</msg>
<status status="PASS" starttime="20201030 15:52:53.779" endtime="20201030 15:52:53.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.786" level="INFO">${ACCURACY} = {'diff': [2.3556000000000965e-05, 2.4070000000001035e-05, 2.4055999999997996e-05, 2.406900000000156e-05, 2.4068999999998092e-05, 2.4055999999997996e-05, 2.4040999999998952e-05, 2.4070000000001035e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:53.783" endtime="20201030 15:52:53.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.791" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.790" endtime="20201030 15:52:53.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.794" level="INFO">VALUE: [2.3556000000000965e-05, 2.4070000000001035e-05, 2.4055999999997996e-05, 2.406900000000156e-05, 2.4068999999998092e-05, 2.4055999999997996e-05, 2.4040999999998952e-05, 2.4070000000001035e-05, 2.4083999999997135e-05, 2.3556000000000965e-05, 2.4054999999998522e-05, 2.4069999999997566e-05, 2.358300000000063e-05, 2.3556000000000965e-05, 2.4041999999998426e-05, 2.397300000000005e-05, 2.3541999999997926e-05, 2.3556000000000965e-05, 2.405500000000199e-05, 2.408300000000113e-05, 2.4027999999998856e-05, 2.4070000000001035e-05, 2.4041999999998426e-05, 2.4041999999998426e-05, 2.356900000000106e-05, 2.4069999999997566e-05, 2.3526999999998882e-05, 2.4027999999998856e-05, 2.354100000000192e-05, 2.4013999999999286e-05, 2.4056000000001465e-05, 2.363899999999891e-05, 2.4041999999998426e-05, 2.4040999999998952e-05, 2.3972000000000576e-05, 2.355500000000149e-05, 2.3540999999998452e-05, 2.3542000000001395e-05, 2.3527999999998356e-05, 2.3541999999997926e-05, 2.356900000000106e-05, 2.3541999999997926e-05, 2.412499999999984e-05, 2.406900000000156e-05, 2.3555999999997496e-05, 2.4056000000001465e-05, 2.354100000000192e-05, 2.406900000000156e-05, 2.3556000000000965e-05, 2.3556000000000965e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.792" endtime="20201030 15:52:53.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.787" endtime="20201030 15:52:53.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.800" endtime="20201030 15:52:53.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.798" endtime="20201030 15:52:53.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.797" endtime="20201030 15:52:53.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.434" endtime="20201030 15:52:53.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.434" endtime="20201030 15:52:53.821"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.833" endtime="20201030 15:52:53.852"></status>
</kw>
<msg timestamp="20201030 15:52:53.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.831" endtime="20201030 15:52:53.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.853" endtime="20201030 15:52:53.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.856" endtime="20201030 15:52:53.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.826" endtime="20201030 15:52:53.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.824" endtime="20201030 15:52:53.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.867" endtime="20201030 15:52:54.154"></status>
</kw>
<msg timestamp="20201030 15:52:54.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023699167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023724222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.865" endtime="20201030 15:52:54.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023699167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023724222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.158" endtime="20201030 15:52:54.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.167" endtime="20201030 15:52:54.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.863" endtime="20201030 15:52:54.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.861" endtime="20201030 15:52:54.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.174" level="INFO">${RESULT} = [{'diff': 2.5054999999999522e-05}, {'diff': 2.461100000000077e-05}, {'diff': 2.4596999999997732e-05}, {'diff': 2.4554999999999022e-05}, {'diff': 2.4526999999999882e-05}, {'diff': 2.5054999999999522e-0...</msg>
<status status="PASS" starttime="20201030 15:52:54.171" endtime="20201030 15:52:54.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.179" level="INFO">${ACCURACY} = {'diff': [2.5054999999999522e-05, 2.461100000000077e-05, 2.4596999999997732e-05, 2.4554999999999022e-05, 2.4526999999999882e-05, 2.5054999999999522e-05, 2.461100000000077e-05, 2.5014000000000286e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:54.175" endtime="20201030 15:52:54.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.184" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.183" endtime="20201030 15:52:54.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.186" level="INFO">VALUE: [2.5054999999999522e-05, 2.461100000000077e-05, 2.4596999999997732e-05, 2.4554999999999022e-05, 2.4526999999999882e-05, 2.5054999999999522e-05, 2.461100000000077e-05, 2.5014000000000286e-05, 2.5055999999998996e-05, 2.5069999999998566e-05, 2.5070000000002035e-05, 2.5582999999999162e-05, 2.4527999999999356e-05, 2.508300000000213e-05, 2.5514000000000786e-05, 2.4556000000001965e-05, 2.5069999999998566e-05, 2.5027999999999856e-05, 2.4542000000002395e-05, 2.4554999999999022e-05, 2.5054999999999522e-05, 2.5556000000002965e-05, 2.4541999999998926e-05, 2.5040999999999952e-05, 2.4527999999999356e-05, 2.4541999999998926e-05, 2.455500000000249e-05, 2.5040999999999952e-05, 2.4540999999999452e-05, 2.5014000000000286e-05, 2.5054999999999522e-05, 2.5054999999999522e-05, 2.4540999999999452e-05, 2.5041999999999426e-05, 2.5014000000000286e-05, 2.4527999999999356e-05, 2.4568999999998592e-05, 2.4542000000002395e-05, 2.5068999999999092e-05, 2.5014000000000286e-05, 2.4555999999998496e-05, 2.5013999999996817e-05, 2.4528000000002825e-05, 2.5040999999999952e-05, 2.511100000000127e-05, 2.4555999999998496e-05, 2.5069999999998566e-05, 2.5000000000000716e-05, 2.5040999999999952e-05, 2.4527999999999356e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.185" endtime="20201030 15:52:54.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.180" endtime="20201030 15:52:54.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.192" endtime="20201030 15:52:54.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.190" endtime="20201030 15:52:54.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.189" endtime="20201030 15:52:54.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.822" endtime="20201030 15:52:54.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.822" endtime="20201030 15:52:54.213"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.222" endtime="20201030 15:52:54.239"></status>
</kw>
<msg timestamp="20201030 15:52:54.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.220" endtime="20201030 15:52:54.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.241" endtime="20201030 15:52:54.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.243" endtime="20201030 15:52:54.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.217" endtime="20201030 15:52:54.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.215" endtime="20201030 15:52:54.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.253" endtime="20201030 15:52:54.540"></status>
</kw>
<msg timestamp="20201030 15:52:54.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020273389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.251" endtime="20201030 15:52:54.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020273389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.545" endtime="20201030 15:52:54.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.553" endtime="20201030 15:52:54.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.248" endtime="20201030 15:52:54.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.247" endtime="20201030 15:52:54.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.561" level="INFO">${RESULT} = [{'diff': 2.5541999999999926e-05}, {'diff': 2.597299999999858e-05}, {'diff': 2.5568999999999592e-05}, {'diff': 2.5555999999999496e-05}, {'diff': 2.6055999999999996e-05}, {'diff': 2.5555000000000022e-0...</msg>
<status status="PASS" starttime="20201030 15:52:54.557" endtime="20201030 15:52:54.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.565" level="INFO">${ACCURACY} = {'diff': [2.5541999999999926e-05, 2.597299999999858e-05, 2.5568999999999592e-05, 2.5555999999999496e-05, 2.6055999999999996e-05, 2.5555000000000022e-05, 2.5541999999999926e-05, 2.6041999999996956e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:54.562" endtime="20201030 15:52:54.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.571" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.569" endtime="20201030 15:52:54.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.573" level="INFO">VALUE: [2.5541999999999926e-05, 2.597299999999858e-05, 2.5568999999999592e-05, 2.5555999999999496e-05, 2.6055999999999996e-05, 2.5555000000000022e-05, 2.5541999999999926e-05, 2.6041999999996956e-05, 2.561100000000177e-05, 2.5555999999999496e-05, 2.6042000000000426e-05, 2.5527999999996887e-05, 2.5555000000000022e-05, 2.6083999999999136e-05, 2.5555000000000022e-05, 2.5569999999999066e-05, 2.5555999999999496e-05, 2.5568999999999592e-05, 2.5541000000000452e-05, 2.6096999999999232e-05, 2.6069999999999566e-05, 2.5499999999997747e-05, 2.6055999999999996e-05, 2.6042000000000426e-05, 2.6042000000000426e-05, 2.5555000000000022e-05, 2.5555999999999496e-05, 2.6055000000000522e-05, 2.5541999999999926e-05, 2.6042000000000426e-05, 2.6055999999999996e-05, 2.5555999999999496e-05, 2.5555999999999496e-05, 2.6055999999999996e-05, 2.6055000000000522e-05, 2.5569999999999066e-05, 2.6027000000001382e-05, 2.611100000000227e-05, 2.6527999999997887e-05, 2.6055000000000522e-05, 2.6082999999999662e-05, 2.6556000000000496e-05, 2.6041999999996956e-05, 2.6042000000000426e-05, 2.6528000000001356e-05, 2.6055000000000522e-05, 2.5527999999996887e-05, 2.6069000000000092e-05, 2.6042000000000426e-05, 2.6541000000001452e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.572" endtime="20201030 15:52:54.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.566" endtime="20201030 15:52:54.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.579" endtime="20201030 15:52:54.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.577" endtime="20201030 15:52:54.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.576" endtime="20201030 15:52:54.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.213" endtime="20201030 15:52:54.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.213" endtime="20201030 15:52:54.600"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.609" endtime="20201030 15:52:54.628"></status>
</kw>
<msg timestamp="20201030 15:52:54.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.607" endtime="20201030 15:52:54.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.630" endtime="20201030 15:52:54.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.632" endtime="20201030 15:52:54.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.604" endtime="20201030 15:52:54.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.602" endtime="20201030 15:52:54.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.642" endtime="20201030 15:52:54.928"></status>
</kw>
<msg timestamp="20201030 15:52:54.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021378597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021405139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.640" endtime="20201030 15:52:54.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021378597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021405139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.933" endtime="20201030 15:52:54.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.941" endtime="20201030 15:52:54.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.637" endtime="20201030 15:52:54.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.636" endtime="20201030 15:52:54.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.948" level="INFO">${RESULT} = [{'diff': 2.6542000000000926e-05}, {'diff': 2.7055000000001522e-05}, {'diff': 2.7042000000001426e-05}, {'diff': 2.7070000000000566e-05}, {'diff': 2.6514000000001786e-05}, {'diff': 2.7055000000001522e-...</msg>
<status status="PASS" starttime="20201030 15:52:54.945" endtime="20201030 15:52:54.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.952" level="INFO">${ACCURACY} = {'diff': [2.6542000000000926e-05, 2.7055000000001522e-05, 2.7042000000001426e-05, 2.7070000000000566e-05, 2.6514000000001786e-05, 2.7055000000001522e-05, 2.6542000000000926e-05, 2.6528000000001356e-05...</msg>
<status status="PASS" starttime="20201030 15:52:54.949" endtime="20201030 15:52:54.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.957" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.956" endtime="20201030 15:52:54.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.963" level="INFO">VALUE: [2.6542000000000926e-05, 2.7055000000001522e-05, 2.7042000000001426e-05, 2.7070000000000566e-05, 2.6514000000001786e-05, 2.7055000000001522e-05, 2.6542000000000926e-05, 2.6528000000001356e-05, 2.7040999999998483e-05, 2.6568999999997123e-05, 2.6542000000000926e-05, 2.7056000000000996e-05, 2.6514000000001786e-05, 2.7042000000001426e-05, 2.7069000000001092e-05, 2.7555999999998027e-05, 2.7070000000000566e-05, 2.6554999999997553e-05, 2.7056000000000996e-05, 2.7056000000000996e-05, 2.7110999999999802e-05, 2.7055000000001522e-05, 2.7026999999998913e-05, 2.7028000000001856e-05, 2.6556000000000496e-05, 2.6555999999997026e-05, 2.6513999999998317e-05, 2.7055000000001522e-05, 2.7055000000001522e-05, 2.6542000000000926e-05, 2.7041000000001952e-05, 2.7541999999998457e-05, 2.7527999999998887e-05, 2.6554999999997553e-05, 2.7042000000001426e-05, 2.7055999999997526e-05, 2.6499999999998747e-05, 2.7069999999997096e-05, 2.6499999999998747e-05, 2.7013999999998817e-05, 2.6555000000001022e-05, 2.7056000000000996e-05, 2.6999999999999247e-05, 2.7042000000001426e-05, 2.7110999999999802e-05, 2.7124999999999372e-05, 2.6540999999997983e-05, 2.7026999999998913e-05, 2.6555000000001022e-05, 2.6556000000000496e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.958" endtime="20201030 15:52:54.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.953" endtime="20201030 15:52:54.965"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.968" endtime="20201030 15:52:54.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.967" endtime="20201030 15:52:54.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.966" endtime="20201030 15:52:54.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.601" endtime="20201030 15:52:54.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.600" endtime="20201030 15:52:54.989"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.998" endtime="20201030 15:52:55.016"></status>
</kw>
<msg timestamp="20201030 15:52:55.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.997" endtime="20201030 15:52:55.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.017" endtime="20201030 15:52:55.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.020" endtime="20201030 15:52:55.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.994" endtime="20201030 15:52:55.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.992" endtime="20201030 15:52:55.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.030" endtime="20201030 15:52:55.317"></status>
</kw>
<msg timestamp="20201030 15:52:55.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020364403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.028" endtime="20201030 15:52:55.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020364403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.321" endtime="20201030 15:52:55.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.330" endtime="20201030 15:52:55.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.025" endtime="20201030 15:52:55.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.023" endtime="20201030 15:52:55.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.337" level="INFO">${RESULT} = [{'diff': 2.8054999999999053e-05}, {'diff': 2.7569000000001592e-05}, {'diff': 2.8000000000000247e-05}, {'diff': 2.7556000000001496e-05}, {'diff': 2.8055999999998527e-05}, {'diff': 2.8056000000001996e-...</msg>
<status status="PASS" starttime="20201030 15:52:55.333" endtime="20201030 15:52:55.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:55.342" level="INFO">${ACCURACY} = {'diff': [2.8054999999999053e-05, 2.7569000000001592e-05, 2.8000000000000247e-05, 2.7556000000001496e-05, 2.8055999999998527e-05, 2.8056000000001996e-05, 2.7570000000001066e-05, 2.7513999999999317e-05...</msg>
<status status="PASS" starttime="20201030 15:52:55.338" endtime="20201030 15:52:55.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.347" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:52:55.346" endtime="20201030 15:52:55.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.349" level="INFO">VALUE: [2.8054999999999053e-05, 2.7569000000001592e-05, 2.8000000000000247e-05, 2.7556000000001496e-05, 2.8055999999998527e-05, 2.8056000000001996e-05, 2.7570000000001066e-05, 2.7513999999999317e-05, 2.7556000000001496e-05, 2.7556000000001496e-05, 2.8041999999998957e-05, 2.8096999999997763e-05, 2.7556000000001496e-05, 2.8070000000001566e-05, 2.8084000000001136e-05, 2.7541999999998457e-05, 2.8054999999999053e-05, 2.8042000000002426e-05, 2.7526999999999413e-05, 2.8026999999999913e-05, 2.8041000000002952e-05, 2.8054999999999053e-05, 2.7540999999998983e-05, 2.7584000000000636e-05, 2.8055999999998527e-05, 2.8054999999999053e-05, 2.8055999999998527e-05, 2.7570000000001066e-05, 2.8083000000001662e-05, 2.8069999999998096e-05, 2.8056000000001996e-05, 2.8041999999998957e-05, 2.8054999999999053e-05, 2.8098000000000706e-05, 2.7556000000001496e-05, 2.8540999999999983e-05, 2.7554999999998553e-05, 2.8041999999998957e-05, 2.7570000000001066e-05, 2.7541999999998457e-05, 2.7570000000001066e-05, 2.8068999999998623e-05, 2.8054999999999053e-05, 2.8527000000000413e-05, 2.7541999999998457e-05, 2.7527999999998887e-05, 2.8054999999999053e-05, 2.7541999999998457e-05, 2.8054999999999053e-05, 2.7555999999998027e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.348" endtime="20201030 15:52:55.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.343" endtime="20201030 15:52:55.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.355" endtime="20201030 15:52:55.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.353" endtime="20201030 15:52:55.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.352" endtime="20201030 15:52:55.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.990" endtime="20201030 15:52:55.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.990" endtime="20201030 15:52:55.375"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.385" endtime="20201030 15:52:55.402"></status>
</kw>
<msg timestamp="20201030 15:52:55.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.383" endtime="20201030 15:52:55.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.404" endtime="20201030 15:52:55.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.406" endtime="20201030 15:52:55.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.380" endtime="20201030 15:52:55.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.378" endtime="20201030 15:52:55.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.416" endtime="20201030 15:52:55.705"></status>
</kw>
<msg timestamp="20201030 15:52:55.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.414" endtime="20201030 15:52:55.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.710" endtime="20201030 15:52:55.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.718" endtime="20201030 15:52:55.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.412" endtime="20201030 15:52:55.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.410" endtime="20201030 15:52:55.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.725" level="INFO">${RESULT} = [{'diff': 2.9000000000001247e-05}, {'diff': 2.9055000000000053e-05}, {'diff': 2.9055000000000053e-05}, {'diff': 2.9041999999999957e-05}, {'diff': 2.9055999999999527e-05}, {'diff': 2.8555999999999027e-...</msg>
<status status="PASS" starttime="20201030 15:52:55.722" endtime="20201030 15:52:55.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:55.729" level="INFO">${ACCURACY} = {'diff': [2.9000000000001247e-05, 2.9055000000000053e-05, 2.9055000000000053e-05, 2.9041999999999957e-05, 2.9055999999999527e-05, 2.8555999999999027e-05, 2.8569999999998597e-05, 2.895900000000201e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:55.726" endtime="20201030 15:52:55.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.734" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:52:55.733" endtime="20201030 15:52:55.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.736" level="INFO">VALUE: [2.9000000000001247e-05, 2.9055000000000053e-05, 2.9055000000000053e-05, 2.9041999999999957e-05, 2.9055999999999527e-05, 2.8555999999999027e-05, 2.8569999999998597e-05, 2.895900000000201e-05, 2.9068999999999623e-05, 2.8472000000001607e-05, 2.9069999999999097e-05, 2.8513000000000843e-05, 2.9055999999999527e-05, 2.8540999999999983e-05, 2.9013999999997347e-05, 2.8554999999999553e-05, 2.9069999999999097e-05, 2.9055000000000053e-05, 2.9055999999999527e-05, 2.9070000000002566e-05, 2.9556000000000027e-05, 2.8554999999999553e-05, 2.9055000000000053e-05, 2.9083999999998666e-05, 2.9041999999999957e-05, 2.9055000000000053e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.9555000000000553e-05, 2.8556000000002496e-05, 2.9041000000000483e-05, 2.8986000000001677e-05, 2.9055999999999527e-05, 2.8527999999999887e-05, 2.9027999999996917e-05, 2.8555999999999027e-05, 2.8540999999999983e-05, 2.9055000000000053e-05, 2.8569999999998597e-05, 2.9055999999999527e-05, 2.9069999999999097e-05, 2.9055999999999527e-05, 2.8541999999999457e-05, 2.8541999999999457e-05, 2.8554999999999553e-05, 2.8554999999999553e-05, 2.9055999999999527e-05, 2.9068999999999623e-05, 2.9055999999999527e-05, 2.9068999999999623e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.735" endtime="20201030 15:52:55.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.730" endtime="20201030 15:52:55.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.741" endtime="20201030 15:52:55.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.740" endtime="20201030 15:52:55.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.738" endtime="20201030 15:52:55.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.376" endtime="20201030 15:52:55.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.376" endtime="20201030 15:52:55.762"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.771" endtime="20201030 15:52:55.789"></status>
</kw>
<msg timestamp="20201030 15:52:55.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.769" endtime="20201030 15:52:55.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.790" endtime="20201030 15:52:55.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.794" endtime="20201030 15:52:55.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.766" endtime="20201030 15:52:55.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.764" endtime="20201030 15:52:55.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.813" endtime="20201030 15:52:56.105"></status>
</kw>
<msg timestamp="20201030 15:52:56.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.810" endtime="20201030 15:52:56.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.109" endtime="20201030 15:52:56.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.118" endtime="20201030 15:52:56.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.804" endtime="20201030 15:52:56.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.801" endtime="20201030 15:52:56.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.124" level="INFO">${RESULT} = [{'diff': 3.0042000000000957e-05}, {'diff': 3.0069000000000623e-05}, {'diff': 2.9555000000000553e-05}, {'diff': 2.9999999999998778e-05}, {'diff': 3.0028000000001387e-05}, {'diff': 3.0056000000000527e-...</msg>
<status status="PASS" starttime="20201030 15:52:56.121" endtime="20201030 15:52:56.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.128" level="INFO">${ACCURACY} = {'diff': [3.0042000000000957e-05, 3.0069000000000623e-05, 2.9555000000000553e-05, 2.9999999999998778e-05, 3.0028000000001387e-05, 3.0056000000000527e-05, 3.0056000000000527e-05, 3.0042000000000957e-05...</msg>
<status status="PASS" starttime="20201030 15:52:56.125" endtime="20201030 15:52:56.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.133" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.132" endtime="20201030 15:52:56.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.135" level="INFO">VALUE: [3.0042000000000957e-05, 3.0069000000000623e-05, 2.9555000000000553e-05, 2.9999999999998778e-05, 3.0028000000001387e-05, 3.0056000000000527e-05, 3.0056000000000527e-05, 3.0042000000000957e-05, 3.0055999999997057e-05, 2.9999999999998778e-05, 2.9556000000000027e-05, 3.0013999999998348e-05, 3.0056000000000527e-05, 3.0056000000000527e-05, 3.0055000000001053e-05, 3.0014000000001817e-05, 2.9540999999997514e-05, 3.0069000000000623e-05, 2.9556000000000027e-05, 3.0028000000001387e-05, 2.9542000000000457e-05, 2.9569000000000123e-05, 2.9528000000000887e-05, 3.0056000000000527e-05, 3.05700000000006e-05, 2.9556000000000027e-05, 2.9569000000000123e-05, 3.0055000000001053e-05, 3.0124999999998903e-05, 2.9555000000000553e-05, 2.9985999999999208e-05, 2.9540999999997514e-05, 2.9596999999999263e-05, 2.9611000000002302e-05, 3.0070000000000097e-05, 3.0042000000000957e-05, 2.9555000000000553e-05, 2.9528000000000887e-05, 3.0042000000000957e-05, 3.0070000000000097e-05, 2.9556000000000027e-05, 3.0055000000001053e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 3.0055000000001053e-05, 3.0042000000000957e-05, 2.9583999999999167e-05, 2.9542000000000457e-05, 2.9541999999996987e-05, 2.9556000000000027e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.134" endtime="20201030 15:52:56.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.129" endtime="20201030 15:52:56.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.141" endtime="20201030 15:52:56.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.140" endtime="20201030 15:52:56.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.138" endtime="20201030 15:52:56.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.763" endtime="20201030 15:52:56.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.762" endtime="20201030 15:52:56.162"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.170" endtime="20201030 15:52:56.188"></status>
</kw>
<msg timestamp="20201030 15:52:56.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.169" endtime="20201030 15:52:56.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.189" endtime="20201030 15:52:56.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.192" endtime="20201030 15:52:56.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.166" endtime="20201030 15:52:56.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.164" endtime="20201030 15:52:56.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.201" endtime="20201030 15:52:56.486"></status>
</kw>
<msg timestamp="20201030 15:52:56.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019816889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.199" endtime="20201030 15:52:56.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019816889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.491" endtime="20201030 15:52:56.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.499" endtime="20201030 15:52:56.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.197" endtime="20201030 15:52:56.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.195" endtime="20201030 15:52:56.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.505" level="INFO">${RESULT} = [{'diff': 3.105600000000153e-05}, {'diff': 3.099999999999978e-05}, {'diff': 3.105600000000153e-05}, {'diff': 3.054200000000146e-05}, {'diff': 3.05700000000006e-05}, {'diff': 3.0500000000002747e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:56.502" endtime="20201030 15:52:56.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.510" level="INFO">${ACCURACY} = {'diff': [3.105600000000153e-05, 3.099999999999978e-05, 3.105600000000153e-05, 3.054200000000146e-05, 3.05700000000006e-05, 3.0500000000002747e-05, 3.106900000000162e-05, 3.054200000000146e-05, 3.0555...</msg>
<status status="PASS" starttime="20201030 15:52:56.506" endtime="20201030 15:52:56.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.515" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.514" endtime="20201030 15:52:56.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.517" level="INFO">VALUE: [3.105600000000153e-05, 3.099999999999978e-05, 3.105600000000153e-05, 3.054200000000146e-05, 3.05700000000006e-05, 3.0500000000002747e-05, 3.106900000000162e-05, 3.054200000000146e-05, 3.055500000000155e-05, 3.1040999999999014e-05, 3.0540999999998514e-05, 3.106900000000162e-05, 3.056900000000112e-05, 3.105600000000153e-05, 3.056999999999713e-05, 3.055600000000103e-05, 3.105599999999806e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.055599999999756e-05, 3.105600000000153e-05, 3.048699999999918e-05, 3.055600000000103e-05, 3.058300000000069e-05, 3.155599999999856e-05, 3.1026999999999444e-05, 3.06249999999994e-05, 3.0568999999997654e-05, 3.104200000000196e-05, 3.105600000000153e-05, 3.10700000000011e-05, 3.109700000000076e-05, 3.055600000000103e-05, 3.104200000000196e-05, 3.055600000000103e-05, 3.055500000000155e-05, 3.105500000000205e-05, 3.055600000000103e-05, 3.055600000000103e-05, 3.098699999999968e-05, 3.111100000000033e-05, 3.1040999999999014e-05, 3.054199999999799e-05, 3.1068999999998154e-05, 3.0526999999998944e-05, 3.056900000000112e-05, 3.056900000000112e-05, 3.1040999999999014e-05, 3.105599999999806e-05, 3.055600000000103e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.516" endtime="20201030 15:52:56.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.511" endtime="20201030 15:52:56.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.522" endtime="20201030 15:52:56.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.521" endtime="20201030 15:52:56.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.520" endtime="20201030 15:52:56.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.163" endtime="20201030 15:52:56.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.162" endtime="20201030 15:52:56.543"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.552" endtime="20201030 15:52:56.569"></status>
</kw>
<msg timestamp="20201030 15:52:56.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.550" endtime="20201030 15:52:56.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.571" endtime="20201030 15:52:56.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.573" endtime="20201030 15:52:56.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.547" endtime="20201030 15:52:56.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.545" endtime="20201030 15:52:56.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.582" endtime="20201030 15:52:56.869"></status>
</kw>
<msg timestamp="20201030 15:52:56.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.581" endtime="20201030 15:52:56.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.873" endtime="20201030 15:52:56.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.882" endtime="20201030 15:52:56.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.578" endtime="20201030 15:52:56.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.576" endtime="20201030 15:52:56.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.888" level="INFO">${RESULT} = [{'diff': 3.152799999999942e-05}, {'diff': 3.204199999999949e-05}, {'diff': 3.1582999999998224e-05}, {'diff': 3.205599999999906e-05}, {'diff': 3.152799999999942e-05}, {'diff': 3.159700000000126e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:56.885" endtime="20201030 15:52:56.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.892" level="INFO">${ACCURACY} = {'diff': [3.152799999999942e-05, 3.204199999999949e-05, 3.1582999999998224e-05, 3.205599999999906e-05, 3.152799999999942e-05, 3.159700000000126e-05, 3.15700000000016e-05, 3.20839999999982e-05, 3.15560...</msg>
<status status="PASS" starttime="20201030 15:52:56.889" endtime="20201030 15:52:56.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.897" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.896" endtime="20201030 15:52:56.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.900" level="INFO">VALUE: [3.152799999999942e-05, 3.204199999999949e-05, 3.1582999999998224e-05, 3.205599999999906e-05, 3.152799999999942e-05, 3.159700000000126e-05, 3.15700000000016e-05, 3.20839999999982e-05, 3.155600000000203e-05, 3.2027000000000444e-05, 3.151399999999985e-05, 3.200000000000078e-05, 3.155600000000203e-05, 3.204199999999949e-05, 3.208300000000219e-05, 3.202799999999992e-05, 3.208300000000219e-05, 3.156900000000212e-05, 3.202799999999992e-05, 3.152799999999942e-05, 3.256999999999913e-05, 3.2041000000000014e-05, 3.251400000000085e-05, 3.211100000000133e-05, 3.205600000000253e-05, 3.1540999999999514e-05, 3.1554999999999084e-05, 3.1554999999999084e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.21250000000009e-05, 3.254199999999999e-05, 3.148600000000071e-05, 3.2054999999999584e-05, 3.156900000000212e-05, 3.201400000000035e-05, 3.202799999999992e-05, 3.1568999999998654e-05, 3.204199999999949e-05, 3.152799999999942e-05, 3.209700000000176e-05, 3.2054999999999584e-05, 3.154199999999899e-05, 3.15700000000016e-05, 3.1554999999999084e-05, 3.204199999999949e-05, 3.155599999999856e-05, 3.2054999999999584e-05, 3.251400000000085e-05, 3.2082999999998724e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.898" endtime="20201030 15:52:56.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.893" endtime="20201030 15:52:56.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.905" endtime="20201030 15:52:56.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.903" endtime="20201030 15:52:56.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.902" endtime="20201030 15:52:56.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.544" endtime="20201030 15:52:56.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.543" endtime="20201030 15:52:56.925"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.934" endtime="20201030 15:52:56.952"></status>
</kw>
<msg timestamp="20201030 15:52:56.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.932" endtime="20201030 15:52:56.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.954" endtime="20201030 15:52:56.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.956" endtime="20201030 15:52:56.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.930" endtime="20201030 15:52:56.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.928" endtime="20201030 15:52:56.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.965" endtime="20201030 15:52:57.250"></status>
</kw>
<msg timestamp="20201030 15:52:57.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02060275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020635861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:56.964" endtime="20201030 15:52:57.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02060275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020635861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:57.254" endtime="20201030 15:52:57.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.263" endtime="20201030 15:52:57.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.961" endtime="20201030 15:52:57.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.959" endtime="20201030 15:52:57.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.269" level="INFO">${RESULT} = [{'diff': 3.3110999999998864e-05}, {'diff': 3.255599999999956e-05}, {'diff': 3.304200000000049e-05}, {'diff': 3.255599999999956e-05}, {'diff': 3.3054999999997114e-05}, {'diff': 3.2555000000000084e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:57.266" endtime="20201030 15:52:57.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.273" level="INFO">${ACCURACY} = {'diff': [3.3110999999998864e-05, 3.255599999999956e-05, 3.304200000000049e-05, 3.255599999999956e-05, 3.3054999999997114e-05, 3.2555000000000084e-05, 3.2540999999997045e-05, 3.255599999999956e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:52:57.270" endtime="20201030 15:52:57.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.278" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.277" endtime="20201030 15:52:57.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.280" level="INFO">VALUE: [3.3110999999998864e-05, 3.255599999999956e-05, 3.304200000000049e-05, 3.255599999999956e-05, 3.3054999999997114e-05, 3.2555000000000084e-05, 3.2540999999997045e-05, 3.255599999999956e-05, 3.3055000000000584e-05, 3.304200000000049e-05, 3.3041000000001014e-05, 3.355600000000056e-05, 3.3055000000000584e-05, 3.256999999999913e-05, 3.3041000000001014e-05, 3.355600000000056e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3055000000000584e-05, 3.255599999999956e-05, 3.309799999999877e-05, 3.304199999999702e-05, 3.255599999999956e-05, 3.3069000000000154e-05, 3.3055000000000584e-05, 3.2541000000000514e-05, 3.3055000000000584e-05, 3.3027000000001444e-05, 3.3041000000001014e-05, 3.2541000000000514e-05, 3.305600000000006e-05, 3.3069000000000154e-05, 3.3110999999998864e-05, 3.255599999999956e-05, 3.255599999999956e-05, 3.254199999999999e-05, 3.3554999999997615e-05, 3.305600000000006e-05, 3.251400000000085e-05, 3.3069000000000154e-05, 3.3055000000000584e-05, 3.298599999999874e-05, 3.2555000000000084e-05, 3.2541000000000514e-05, 3.25839999999987e-05, 3.263900000000097e-05, 3.3055000000000584e-05, 3.254199999999999e-05, 3.3069000000000154e-05, 3.2555000000000084e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.279" endtime="20201030 15:52:57.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.274" endtime="20201030 15:52:57.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.286" endtime="20201030 15:52:57.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.285" endtime="20201030 15:52:57.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.284" endtime="20201030 15:52:57.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.926" endtime="20201030 15:52:57.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.926" endtime="20201030 15:52:57.307"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.316" endtime="20201030 15:52:57.331"></status>
</kw>
<msg timestamp="20201030 15:52:57.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.314" endtime="20201030 15:52:57.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.333" endtime="20201030 15:52:57.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.335" endtime="20201030 15:52:57.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.312" endtime="20201030 15:52:57.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.309" endtime="20201030 15:52:57.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.344" endtime="20201030 15:52:57.631"></status>
</kw>
<msg timestamp="20201030 15:52:57.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019897097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:57.343" endtime="20201030 15:52:57.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019897097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:57.635" endtime="20201030 15:52:57.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.644" endtime="20201030 15:52:57.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.340" endtime="20201030 15:52:57.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.339" endtime="20201030 15:52:57.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.650" level="INFO">${RESULT} = [{'diff': 3.4097000000000294e-05}, {'diff': 3.402800000000192e-05}, {'diff': 3.407000000000063e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.354199999999752e-05}, {'diff': 3.4055000000001584e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:57.647" endtime="20201030 15:52:57.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.655" level="INFO">${ACCURACY} = {'diff': [3.4097000000000294e-05, 3.402800000000192e-05, 3.407000000000063e-05, 3.3583000000000224e-05, 3.354199999999752e-05, 3.4055000000001584e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 15:52:57.651" endtime="20201030 15:52:57.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.660" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.658" endtime="20201030 15:52:57.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.662" level="INFO">VALUE: [3.4097000000000294e-05, 3.402800000000192e-05, 3.407000000000063e-05, 3.3583000000000224e-05, 3.354199999999752e-05, 3.4055000000001584e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.404199999999802e-05, 3.4069000000001154e-05, 3.4054999999998115e-05, 3.4040999999998545e-05, 3.355600000000056e-05, 3.352800000000142e-05, 3.357000000000013e-05, 3.355600000000056e-05, 3.4054999999998115e-05, 3.352800000000142e-05, 3.4054999999998115e-05, 3.3540999999998045e-05, 3.4054999999998115e-05, 3.404199999999802e-05, 3.3568999999997184e-05, 3.354200000000099e-05, 3.404200000000149e-05, 3.354200000000099e-05, 3.3610999999999364e-05, 3.454200000000199e-05, 3.4055000000001584e-05, 3.455600000000156e-05, 3.407000000000063e-05, 3.3540999999998045e-05, 3.4041000000002014e-05, 3.3540999999998045e-05, 3.3554999999997615e-05, 3.3555000000001084e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.4055000000001584e-05, 3.404200000000149e-05, 3.3569000000000654e-05, 3.405600000000106e-05, 3.355600000000056e-05, 3.402800000000192e-05, 3.355600000000056e-05, 3.404199999999802e-05, 3.407000000000063e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.355600000000056e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.661" endtime="20201030 15:52:57.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.656" endtime="20201030 15:52:57.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.667" endtime="20201030 15:52:57.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.666" endtime="20201030 15:52:57.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.664" endtime="20201030 15:52:57.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.308" endtime="20201030 15:52:57.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.307" endtime="20201030 15:52:57.688"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.697" endtime="20201030 15:52:57.717"></status>
</kw>
<msg timestamp="20201030 15:52:57.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.695" endtime="20201030 15:52:57.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.718" endtime="20201030 15:52:57.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.721" endtime="20201030 15:52:57.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.693" endtime="20201030 15:52:57.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.691" endtime="20201030 15:52:57.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.730" endtime="20201030 15:52:58.016"></status>
</kw>
<msg timestamp="20201030 15:52:58.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.728" endtime="20201030 15:52:58.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.020" endtime="20201030 15:52:58.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.029" endtime="20201030 15:52:58.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.726" endtime="20201030 15:52:58.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.724" endtime="20201030 15:52:58.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.035" level="INFO">${RESULT} = [{'diff': 5.162499999999959e-05}, {'diff': 5.109699999999995e-05}, {'diff': 5.127700000000235e-05}, {'diff': 5.205599999999824e-05}, {'diff': 5.141700000000152e-05}, {'diff': 5.127799999999835e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:58.032" endtime="20201030 15:52:58.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.039" level="INFO">${ACCURACY} = {'diff': [5.162499999999959e-05, 5.109699999999995e-05, 5.127700000000235e-05, 5.205599999999824e-05, 5.141700000000152e-05, 5.127799999999835e-05, 5.112500000000256e-05, 5.18470000000007e-05, 5.13049...</msg>
<status status="PASS" starttime="20201030 15:52:58.036" endtime="20201030 15:52:58.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.044" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.043" endtime="20201030 15:52:58.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.046" level="INFO">VALUE: [5.162499999999959e-05, 5.109699999999995e-05, 5.127700000000235e-05, 5.205599999999824e-05, 5.141700000000152e-05, 5.127799999999835e-05, 5.112500000000256e-05, 5.18470000000007e-05, 5.130499999999802e-05, 5.124999999999921e-05, 5.179099999999895e-05, 5.111099999999952e-05, 5.173600000000014e-05, 5.122200000000007e-05, 5.205499999999877e-05, 5.186100000000027e-05, 5.180499999999852e-05, 5.188899999999941e-05, 5.168100000000134e-05, 5.111099999999952e-05, 5.21669999999988e-05, 5.113899999999866e-05, 5.186100000000027e-05, 5.16669999999983e-05, 5.170900000000048e-05, 5.218099999999837e-05, 5.145900000000023e-05, 5.21530000000027e-05, 5.161100000000002e-05, 5.194400000000168e-05, 5.134799999999967e-05, 5.211100000000052e-05, 5.12080000000005e-05, 5.218000000000236e-05, 5.131899999999759e-05, 5.150000000000293e-05, 5.172200000000057e-05, 5.168100000000134e-05, 5.127800000000182e-05, 5.149999999999946e-05, 5.123599999999964e-05, 5.216700000000227e-05, 5.168099999999787e-05, 5.218099999999837e-05, 5.144500000000066e-05, 5.126400000000225e-05, 5.151399999999903e-05, 5.138899999999891e-05, 5.218100000000184e-05, 5.161100000000002e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.045" endtime="20201030 15:52:58.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.040" endtime="20201030 15:52:58.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.051" endtime="20201030 15:52:58.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.049" endtime="20201030 15:52:58.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.048" endtime="20201030 15:52:58.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.689" endtime="20201030 15:52:58.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.688" endtime="20201030 15:52:58.072"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.080" endtime="20201030 15:52:58.099"></status>
</kw>
<msg timestamp="20201030 15:52:58.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.079" endtime="20201030 15:52:58.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.101" endtime="20201030 15:52:58.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.103" endtime="20201030 15:52:58.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.076" endtime="20201030 15:52:58.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.074" endtime="20201030 15:52:58.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.113" endtime="20201030 15:52:58.397"></status>
</kw>
<msg timestamp="20201030 15:52:58.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020665806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020718694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.111" endtime="20201030 15:52:58.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020665806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020718694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.401" endtime="20201030 15:52:58.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.409" endtime="20201030 15:52:58.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.108" endtime="20201030 15:52:58.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.107" endtime="20201030 15:52:58.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.416" level="INFO">${RESULT} = [{'diff': 5.2888000000000934e-05}, {'diff': 5.23470000000012e-05}, {'diff': 5.243100000000209e-05}, {'diff': 5.2485999999997424e-05}, {'diff': 5.248600000000089e-05}, {'diff': 5.236200000000024e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:58.413" endtime="20201030 15:52:58.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.420" level="INFO">${ACCURACY} = {'diff': [5.2888000000000934e-05, 5.23470000000012e-05, 5.243100000000209e-05, 5.2485999999997424e-05, 5.248600000000089e-05, 5.236200000000024e-05, 5.2929999999999644e-05, 5.280499999999952e-05, 5.23...</msg>
<status status="PASS" starttime="20201030 15:52:58.417" endtime="20201030 15:52:58.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.424" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.423" endtime="20201030 15:52:58.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.430" level="INFO">VALUE: [5.2888000000000934e-05, 5.23470000000012e-05, 5.243100000000209e-05, 5.2485999999997424e-05, 5.248600000000089e-05, 5.236200000000024e-05, 5.2929999999999644e-05, 5.280499999999952e-05, 5.233300000000163e-05, 5.261100000000102e-05, 5.3179999999999894e-05, 5.28609999999978e-05, 5.2693999999998964e-05, 5.263900000000016e-05, 5.30410000000002e-05, 5.250000000000046e-05, 5.241699999999905e-05, 5.31669999999998e-05, 5.2971999999998354e-05, 5.320900000000198e-05, 5.259800000000092e-05, 5.259700000000145e-05, 5.255599999999874e-05, 5.29730000000013e-05, 5.254199999999917e-05, 5.311100000000152e-05, 5.311200000000099e-05, 5.26669999999993e-05, 5.25279999999996e-05, 5.208300000000138e-05, 5.256900000000231e-05, 5.236100000000077e-05, 5.3166000000000324e-05, 5.23470000000012e-05, 5.3179999999999894e-05, 5.275000000000071e-05, 5.2429999999999144e-05, 5.226399999999978e-05, 5.23609999999973e-05, 5.225000000000021e-05, 5.286100000000127e-05, 5.28609999999978e-05, 5.229199999999892e-05, 5.245900000000123e-05, 5.23609999999973e-05, 5.268099999999887e-05, 5.275000000000071e-05, 5.291699999999955e-05, 5.319499999999894e-05, 5.280600000000246e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.425" endtime="20201030 15:52:58.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.421" endtime="20201030 15:52:58.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.440" endtime="20201030 15:52:58.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.438" endtime="20201030 15:52:58.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.437" endtime="20201030 15:52:58.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.073" endtime="20201030 15:52:58.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.072" endtime="20201030 15:52:58.460"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.469" endtime="20201030 15:52:58.489"></status>
</kw>
<msg timestamp="20201030 15:52:58.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.468" endtime="20201030 15:52:58.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.490" endtime="20201030 15:52:58.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.493" endtime="20201030 15:52:58.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.465" endtime="20201030 15:52:58.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.463" endtime="20201030 15:52:58.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.502" endtime="20201030 15:52:58.787"></status>
</kw>
<msg timestamp="20201030 15:52:58.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019960764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020014181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.500" endtime="20201030 15:52:58.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019960764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020014181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.791" endtime="20201030 15:52:58.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.799" endtime="20201030 15:52:58.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.497" endtime="20201030 15:52:58.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.496" endtime="20201030 15:52:58.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.806" level="INFO">${RESULT} = [{'diff': 5.341700000000005e-05}, {'diff': 5.359800000000192e-05}, {'diff': 5.35410000000007e-05}, {'diff': 5.368099999999987e-05}, {'diff': 5.3763999999997814e-05}, {'diff': 5.405500000000077e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:58.803" endtime="20201030 15:52:58.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.811" level="INFO">${ACCURACY} = {'diff': [5.341700000000005e-05, 5.359800000000192e-05, 5.35410000000007e-05, 5.368099999999987e-05, 5.3763999999997814e-05, 5.405500000000077e-05, 5.3485999999998424e-05, 5.3666000000000824e-05, 5.41...</msg>
<status status="PASS" starttime="20201030 15:52:58.807" endtime="20201030 15:52:58.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.815" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.814" endtime="20201030 15:52:58.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.818" level="INFO">VALUE: [5.341700000000005e-05, 5.359800000000192e-05, 5.35410000000007e-05, 5.368099999999987e-05, 5.3763999999997814e-05, 5.405500000000077e-05, 5.3485999999998424e-05, 5.3666000000000824e-05, 5.4166000000001324e-05, 5.40280000000011e-05, 5.4180000000000894e-05, 5.3680000000000394e-05, 5.334699999999873e-05, 5.3235999999998174e-05, 5.387499999999837e-05, 5.331999999999906e-05, 5.36670000000003e-05, 5.376400000000128e-05, 5.330599999999949e-05, 5.415300000000123e-05, 5.361100000000202e-05, 5.3735999999998674e-05, 5.370899999999901e-05, 5.329199999999992e-05, 5.356999999999931e-05, 5.405500000000077e-05, 5.329100000000045e-05, 5.3680000000000394e-05, 5.372200000000257e-05, 5.3680000000000394e-05, 5.3693999999999964e-05, 5.3957999999999784e-05, 5.415300000000123e-05, 5.398600000000239e-05, 5.3679999999996925e-05, 5.40410000000012e-05, 5.380599999999999e-05, 5.376400000000128e-05, 5.391700000000055e-05, 5.343099999999962e-05, 5.40419999999972e-05, 5.343099999999962e-05, 5.382000000000303e-05, 5.400000000000196e-05, 5.387500000000184e-05, 5.3402000000001004e-05, 5.343099999999962e-05, 5.326400000000078e-05, 5.325000000000121e-05, 5.312499999999762e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.817" endtime="20201030 15:52:58.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.812" endtime="20201030 15:52:58.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.823" endtime="20201030 15:52:58.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.821" endtime="20201030 15:52:58.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.820" endtime="20201030 15:52:58.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.461" endtime="20201030 15:52:58.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.461" endtime="20201030 15:52:58.844"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.852" endtime="20201030 15:52:58.873"></status>
</kw>
<msg timestamp="20201030 15:52:58.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.851" endtime="20201030 15:52:58.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.874" endtime="20201030 15:52:58.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.877" endtime="20201030 15:52:58.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.848" endtime="20201030 15:52:58.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.846" endtime="20201030 15:52:58.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.886" endtime="20201030 15:52:59.172"></status>
</kw>
<msg timestamp="20201030 15:52:59.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019752556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01980775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:58.884" endtime="20201030 15:52:59.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019752556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01980775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:59.176" endtime="20201030 15:52:59.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.185" endtime="20201030 15:52:59.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.882" endtime="20201030 15:52:59.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.880" endtime="20201030 15:52:59.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.191" level="INFO">${RESULT} = [{'diff': 5.5193999999997995e-05}, {'diff': 5.483300000000066e-05}, {'diff': 5.520899999999704e-05}, {'diff': 5.491700000000155e-05}, {'diff': 5.437499999999887e-05}, {'diff': 5.461100000000302e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:59.188" endtime="20201030 15:52:59.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.195" level="INFO">${ACCURACY} = {'diff': [5.5193999999997995e-05, 5.483300000000066e-05, 5.520899999999704e-05, 5.491700000000155e-05, 5.437499999999887e-05, 5.461100000000302e-05, 5.425000000000221e-05, 5.493100000000112e-05, 5.473...</msg>
<status status="PASS" starttime="20201030 15:52:59.192" endtime="20201030 15:52:59.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.200" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.199" endtime="20201030 15:52:59.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.202" level="INFO">VALUE: [5.5193999999997995e-05, 5.483300000000066e-05, 5.520899999999704e-05, 5.491700000000155e-05, 5.437499999999887e-05, 5.461100000000302e-05, 5.425000000000221e-05, 5.493100000000112e-05, 5.4735999999999674e-05, 5.4985999999999924e-05, 5.4680000000001394e-05, 5.423699999999865e-05, 5.480500000000152e-05, 5.515300000000223e-05, 5.5221999999997134e-05, 5.4430000000001144e-05, 5.480499999999805e-05, 5.487499999999937e-05, 5.483300000000066e-05, 5.432000000000006e-05, 5.50410000000022e-05, 5.505600000000124e-05, 5.491700000000155e-05, 5.4749999999999244e-05, 5.468100000000087e-05, 5.433399999999963e-05, 5.455600000000074e-05, 5.4249999999998744e-05, 5.48609999999998e-05, 5.5249999999999744e-05, 5.4749999999999244e-05, 5.509799999999995e-05, 5.486199999999927e-05, 5.482000000000056e-05, 5.46809999999974e-05, 5.481899999999762e-05, 5.4430000000001144e-05, 5.4915999999998605e-05, 5.4749999999999244e-05, 5.4735999999999674e-05, 5.4471999999999854e-05, 5.500000000000296e-05, 5.4735999999999674e-05, 5.4958000000000784e-05, 5.4665999999998355e-05, 5.5193999999997995e-05, 5.511099999999658e-05, 5.4471999999999854e-05, 5.507000000000081e-05, 5.48609999999998e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.201" endtime="20201030 15:52:59.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.196" endtime="20201030 15:52:59.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.207" endtime="20201030 15:52:59.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.206" endtime="20201030 15:52:59.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.204" endtime="20201030 15:52:59.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.845" endtime="20201030 15:52:59.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.844" endtime="20201030 15:52:59.228"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.236" endtime="20201030 15:52:59.255"></status>
</kw>
<msg timestamp="20201030 15:52:59.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.235" endtime="20201030 15:52:59.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.257" endtime="20201030 15:52:59.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.260" endtime="20201030 15:52:59.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.232" endtime="20201030 15:52:59.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.230" endtime="20201030 15:52:59.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.269" endtime="20201030 15:52:59.570"></status>
</kw>
<msg timestamp="20201030 15:52:59.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020704236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020759514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.267" endtime="20201030 15:52:59.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020704236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020759514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.574" endtime="20201030 15:52:59.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.583" endtime="20201030 15:52:59.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.265" endtime="20201030 15:52:59.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.263" endtime="20201030 15:52:59.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.590" level="INFO">${RESULT} = [{'diff': 5.5277999999998884e-05}, {'diff': 5.5972000000001354e-05}, {'diff': 5.593099999999865e-05}, {'diff': 5.61809999999989e-05}, {'diff': 5.616699999999933e-05}, {'diff': 5.538900000000291e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:59.586" endtime="20201030 15:52:59.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.594" level="INFO">${ACCURACY} = {'diff': [5.5277999999998884e-05, 5.5972000000001354e-05, 5.593099999999865e-05, 5.61809999999989e-05, 5.616699999999933e-05, 5.538900000000291e-05, 5.5722000000001104e-05, 5.5791999999998954e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 15:52:59.591" endtime="20201030 15:52:59.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.598" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.597" endtime="20201030 15:52:59.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.601" level="INFO">VALUE: [5.5277999999998884e-05, 5.5972000000001354e-05, 5.593099999999865e-05, 5.61809999999989e-05, 5.616699999999933e-05, 5.538900000000291e-05, 5.5722000000001104e-05, 5.5791999999998954e-05, 5.5555999999998273e-05, 5.5791999999998954e-05, 5.512499999999962e-05, 5.583299999999819e-05, 5.6041999999999204e-05, 5.5944000000002214e-05, 5.604099999999973e-05, 5.606899999999887e-05, 5.5915999999999605e-05, 5.530499999999855e-05, 5.6193999999998995e-05, 5.580500000000252e-05, 5.581900000000209e-05, 5.530499999999855e-05, 5.530500000000202e-05, 5.594499999999822e-05, 5.559699999999751e-05, 5.5486000000000424e-05, 5.6055999999998773e-05, 5.531999999999759e-05, 5.606999999999834e-05, 5.590299999999951e-05, 5.5541999999998704e-05, 5.5499999999999994e-05, 5.572300000000058e-05, 5.5929999999999175e-05, 5.5693999999998495e-05, 5.579099999999948e-05, 5.562500000000012e-05, 5.606899999999887e-05, 5.5499999999999994e-05, 5.581899999999862e-05, 5.530500000000202e-05, 5.6014000000000064e-05, 5.5735999999997204e-05, 5.583299999999819e-05, 5.5805999999998523e-05, 5.5236000000000174e-05, 5.512499999999962e-05, 5.569499999999797e-05, 5.5763999999999814e-05, 5.554200000000217e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.599" endtime="20201030 15:52:59.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.595" endtime="20201030 15:52:59.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.607" endtime="20201030 15:52:59.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.605" endtime="20201030 15:52:59.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.604" endtime="20201030 15:52:59.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.229" endtime="20201030 15:52:59.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.228" endtime="20201030 15:52:59.627"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.638" endtime="20201030 15:52:59.657"></status>
</kw>
<msg timestamp="20201030 15:52:59.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.636" endtime="20201030 15:52:59.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.659" endtime="20201030 15:52:59.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.661" endtime="20201030 15:52:59.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.634" endtime="20201030 15:52:59.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.631" endtime="20201030 15:52:59.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.670" endtime="20201030 15:52:59.958"></status>
</kw>
<msg timestamp="20201030 15:52:59.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.669" endtime="20201030 15:52:59.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.962" endtime="20201030 15:52:59.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.971" endtime="20201030 15:52:59.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.666" endtime="20201030 15:52:59.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.664" endtime="20201030 15:52:59.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.977" level="INFO">${RESULT} = [{'diff': 5.669499999999897e-05}, {'diff': 5.6291999999999454e-05}, {'diff': 5.686099999999833e-05}, {'diff': 5.643099999999915e-05}, {'diff': 5.7000000000001494e-05}, {'diff': 5.63610000000013e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:59.974" endtime="20201030 15:52:59.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.982" level="INFO">${ACCURACY} = {'diff': [5.669499999999897e-05, 5.6291999999999454e-05, 5.686099999999833e-05, 5.643099999999915e-05, 5.7000000000001494e-05, 5.63610000000013e-05, 5.6930000000000175e-05, 5.702700000000116e-05, 5.63...</msg>
<status status="PASS" starttime="20201030 15:52:59.978" endtime="20201030 15:52:59.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.987" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.986" endtime="20201030 15:52:59.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.990" level="INFO">VALUE: [5.669499999999897e-05, 5.6291999999999454e-05, 5.686099999999833e-05, 5.643099999999915e-05, 5.7000000000001494e-05, 5.63610000000013e-05, 5.6930000000000175e-05, 5.702700000000116e-05, 5.633299999999869e-05, 5.6999999999998024e-05, 5.661099999999808e-05, 5.684699999999876e-05, 5.6721999999998635e-05, 5.66809999999994e-05, 5.631899999999912e-05, 5.655600000000274e-05, 5.641699999999958e-05, 5.7014000000001064e-05, 5.695899999999879e-05, 5.6264000000000314e-05, 5.71809999999999e-05, 5.6805999999999524e-05, 5.6291999999999454e-05, 5.688900000000094e-05, 5.680500000000005e-05, 5.71809999999999e-05, 5.637500000000087e-05, 5.656899999999937e-05, 5.711099999999858e-05, 5.6666000000000355e-05, 5.6736000000001674e-05, 5.6444000000002714e-05, 5.6707999999999065e-05, 5.6916000000000605e-05, 5.6791999999999954e-05, 5.636099999999783e-05, 5.7000000000001494e-05, 5.6250000000000744e-05, 5.6486000000001424e-05, 5.669499999999897e-05, 5.6555999999999274e-05, 5.7013999999997594e-05, 5.6735999999998205e-05, 5.6541999999999704e-05, 5.658399999999841e-05, 5.620900000000151e-05, 5.6486000000001424e-05, 5.693099999999965e-05, 5.6541999999999704e-05, 5.620900000000151e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.988" endtime="20201030 15:52:59.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.983" endtime="20201030 15:52:59.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.995" endtime="20201030 15:53:00.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.993" endtime="20201030 15:53:00.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.992" endtime="20201030 15:53:00.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.628" endtime="20201030 15:53:00.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.628" endtime="20201030 15:53:00.015"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.024" endtime="20201030 15:53:00.044"></status>
</kw>
<msg timestamp="20201030 15:53:00.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.023" endtime="20201030 15:53:00.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.045" endtime="20201030 15:53:00.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.048" endtime="20201030 15:53:00.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.020" endtime="20201030 15:53:00.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.018" endtime="20201030 15:53:00.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.057" endtime="20201030 15:53:00.357"></status>
</kw>
<msg timestamp="20201030 15:53:00.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019884194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.055" endtime="20201030 15:53:00.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019884194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.361" endtime="20201030 15:53:00.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.370" endtime="20201030 15:53:00.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.053" endtime="20201030 15:53:00.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.051" endtime="20201030 15:53:00.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.376" level="INFO">${RESULT} = [{'diff': 5.745899999999929e-05}, {'diff': 5.737500000000187e-05}, {'diff': 5.7583999999999413e-05}, {'diff': 5.786099999999933e-05}, {'diff': 5.8055999999997304e-05}, {'diff': 5.7556000000000274e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:00.373" endtime="20201030 15:53:00.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.381" level="INFO">${ACCURACY} = {'diff': [5.745899999999929e-05, 5.737500000000187e-05, 5.7583999999999413e-05, 5.786099999999933e-05, 5.8055999999997304e-05, 5.7556000000000274e-05, 5.8013999999998594e-05, 5.743100000000015e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:53:00.377" endtime="20201030 15:53:00.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.385" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.384" endtime="20201030 15:53:00.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.388" level="INFO">VALUE: [5.745899999999929e-05, 5.737500000000187e-05, 5.7583999999999413e-05, 5.786099999999933e-05, 5.8055999999997304e-05, 5.7556000000000274e-05, 5.8013999999998594e-05, 5.743100000000015e-05, 5.712500000000162e-05, 5.730500000000055e-05, 5.712500000000162e-05, 5.756900000000037e-05, 5.7485999999998955e-05, 5.7750000000002244e-05, 5.7985999999999455e-05, 5.731900000000012e-05, 5.80550000000013e-05, 5.7735999999999205e-05, 5.715300000000076e-05, 5.81810000000009e-05, 5.761099999999908e-05, 5.7985999999999455e-05, 5.819500000000047e-05, 5.7583999999999413e-05, 5.7319999999999593e-05, 5.770899999999954e-05, 5.8056000000000774e-05, 5.773699999999868e-05, 5.73749999999984e-05, 5.709799999999848e-05, 5.7249999999998274e-05, 5.783299999999672e-05, 5.7486000000002424e-05, 5.7499999999998525e-05, 5.7665999999997886e-05, 5.7666000000001355e-05, 5.7485999999998955e-05, 5.8179999999997956e-05, 5.7749999999998775e-05, 5.7485999999998955e-05, 5.7708000000000065e-05, 5.712499999999815e-05, 5.7249999999998274e-05, 5.788899999999847e-05, 5.734699999999926e-05, 5.8083999999999913e-05, 5.819500000000047e-05, 5.794500000000022e-05, 5.7749999999998775e-05, 5.787500000000237e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.386" endtime="20201030 15:53:00.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.382" endtime="20201030 15:53:00.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.393" endtime="20201030 15:53:00.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.391" endtime="20201030 15:53:00.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.390" endtime="20201030 15:53:00.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.016" endtime="20201030 15:53:00.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.016" endtime="20201030 15:53:00.413"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.422" endtime="20201030 15:53:00.441"></status>
</kw>
<msg timestamp="20201030 15:53:00.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.421" endtime="20201030 15:53:00.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.443" endtime="20201030 15:53:00.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.445" endtime="20201030 15:53:00.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.418" endtime="20201030 15:53:00.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.416" endtime="20201030 15:53:00.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.454" endtime="20201030 15:53:00.740"></status>
</kw>
<msg timestamp="20201030 15:53:00.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020806056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020865153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.453" endtime="20201030 15:53:00.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020806056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020865153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.744" endtime="20201030 15:53:00.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.753" endtime="20201030 15:53:00.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.450" endtime="20201030 15:53:00.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.449" endtime="20201030 15:53:00.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.759" level="INFO">${RESULT} = [{'diff': 5.909700000000101e-05}, {'diff': 5.888899999999947e-05}, {'diff': 5.890299999999904e-05}, {'diff': 5.9013999999999595e-05}, {'diff': 5.9014000000003064e-05}, {'diff': 5.9194000000001995e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:00.756" endtime="20201030 15:53:00.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.763" level="INFO">${ACCURACY} = {'diff': [5.909700000000101e-05, 5.888899999999947e-05, 5.890299999999904e-05, 5.9013999999999595e-05, 5.9014000000003064e-05, 5.9194000000001995e-05, 5.90689999999984e-05, 5.8264000000002314e-05, 5.8...</msg>
<status status="PASS" starttime="20201030 15:53:00.760" endtime="20201030 15:53:00.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.768" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.767" endtime="20201030 15:53:00.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.770" level="INFO">VALUE: [5.909700000000101e-05, 5.888899999999947e-05, 5.890299999999904e-05, 5.9013999999999595e-05, 5.9014000000003064e-05, 5.9194000000001995e-05, 5.90689999999984e-05, 5.8264000000002314e-05, 5.858300000000094e-05, 5.8499999999999525e-05, 5.9000000000000025e-05, 5.8665999999998886e-05, 5.8429999999998206e-05, 5.8708000000001065e-05, 5.9179999999998956e-05, 5.8472000000000385e-05, 5.8443999999997776e-05, 5.8749999999999775e-05, 5.866699999999836e-05, 5.8556000000001274e-05, 5.8597999999999983e-05, 5.8556000000001274e-05, 5.893099999999818e-05, 5.866699999999836e-05, 5.8320000000000594e-05, 5.8708000000001065e-05, 5.904099999999926e-05, 5.833300000000069e-05, 5.88749999999999e-05, 5.8679999999998456e-05, 5.8986000000000455e-05, 5.9014000000003064e-05, 5.912500000000015e-05, 5.8429999999998206e-05, 5.8722000000000635e-05, 5.8722000000000635e-05, 5.833300000000069e-05, 5.911100000000058e-05, 5.8820000000001094e-05, 5.8986000000000455e-05, 5.9194999999998e-05, 5.9056000000001774e-05, 5.9056000000001774e-05, 5.83749999999994e-05, 5.8986000000000455e-05, 5.8542000000001704e-05, 5.8778000000002384e-05, 5.8819999999997624e-05, 5.844500000000072e-05, 5.865300000000226e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.769" endtime="20201030 15:53:00.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.764" endtime="20201030 15:53:00.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.776" endtime="20201030 15:53:00.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.774" endtime="20201030 15:53:00.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.773" endtime="20201030 15:53:00.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.414" endtime="20201030 15:53:00.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.414" endtime="20201030 15:53:00.797"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.805" endtime="20201030 15:53:00.824"></status>
</kw>
<msg timestamp="20201030 15:53:00.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.804" endtime="20201030 15:53:00.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.826" endtime="20201030 15:53:00.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.828" endtime="20201030 15:53:00.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.801" endtime="20201030 15:53:00.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.799" endtime="20201030 15:53:00.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.837" endtime="20201030 15:53:01.138"></status>
</kw>
<msg timestamp="20201030 15:53:01.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019767389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.836" endtime="20201030 15:53:01.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019767389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.142" endtime="20201030 15:53:01.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.151" endtime="20201030 15:53:01.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.833" endtime="20201030 15:53:01.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.831" endtime="20201030 15:53:01.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.157" level="INFO">${RESULT} = [{'diff': 5.941699999999911e-05}, {'diff': 5.9861999999997334e-05}, {'diff': 5.981899999999915e-05}, {'diff': 5.9680000000002925e-05}, {'diff': 5.9750000000000775e-05}, {'diff': 5.9222000000001135e-05...</msg>
<status status="PASS" starttime="20201030 15:53:01.154" endtime="20201030 15:53:01.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.162" level="INFO">${ACCURACY} = {'diff': [5.941699999999911e-05, 5.9861999999997334e-05, 5.981899999999915e-05, 5.9680000000002925e-05, 5.9750000000000775e-05, 5.9222000000001135e-05, 5.9694000000002495e-05, 5.913899999999972e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:53:01.158" endtime="20201030 15:53:01.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.167" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.166" endtime="20201030 15:53:01.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.169" level="INFO">VALUE: [5.941699999999911e-05, 5.9861999999997334e-05, 5.981899999999915e-05, 5.9680000000002925e-05, 5.9750000000000775e-05, 5.9222000000001135e-05, 5.9694000000002495e-05, 5.913899999999972e-05, 5.986100000000133e-05, 5.990300000000004e-05, 5.9263999999999845e-05, 5.943099999999868e-05, 5.961100000000108e-05, 5.9528000000003134e-05, 6.0055999999999304e-05, 6.018099999999943e-05, 5.9263999999999845e-05, 6.0028000000000165e-05, 5.9986000000001455e-05, 5.933299999999822e-05, 6.018099999999943e-05, 5.959699999999804e-05, 5.961099999999761e-05, 5.9263999999999845e-05, 5.9485999999997485e-05, 5.9471999999997915e-05, 5.929099999999951e-05, 5.93750000000004e-05, 5.9514000000000095e-05, 5.986100000000133e-05, 5.9764000000000345e-05, 5.994499999999875e-05, 6.009699999999854e-05, 5.990300000000004e-05, 5.96810000000024e-05, 5.9263999999999845e-05, 5.9721999999998165e-05, 5.947300000000086e-05, 5.968099999999893e-05, 5.9777999999999915e-05, 5.9569999999998374e-05, 5.912500000000015e-05, 6.012500000000115e-05, 5.9862000000000803e-05, 5.936100000000083e-05, 5.9777999999999915e-05, 5.9207999999998095e-05, 5.988900000000047e-05, 6.0179999999999956e-05, 5.9471999999997915e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.168" endtime="20201030 15:53:01.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.163" endtime="20201030 15:53:01.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.174" endtime="20201030 15:53:01.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.173" endtime="20201030 15:53:01.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.171" endtime="20201030 15:53:01.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.797" endtime="20201030 15:53:01.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.797" endtime="20201030 15:53:01.195"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.203" endtime="20201030 15:53:01.222"></status>
</kw>
<msg timestamp="20201030 15:53:01.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.202" endtime="20201030 15:53:01.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.223" endtime="20201030 15:53:01.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.226" endtime="20201030 15:53:01.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.199" endtime="20201030 15:53:01.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.197" endtime="20201030 15:53:01.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.235" endtime="20201030 15:53:01.521"></status>
</kw>
<msg timestamp="20201030 15:53:01.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.233" endtime="20201030 15:53:01.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.525" endtime="20201030 15:53:01.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.533" endtime="20201030 15:53:01.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.231" endtime="20201030 15:53:01.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.229" endtime="20201030 15:53:01.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.540" level="INFO">${RESULT} = [{'diff': 6.0957999999999846e-05}, {'diff': 6.0500000000001525e-05}, {'diff': 6.0707999999999596e-05}, {'diff': 6.058299999999947e-05}, {'diff': 6.0444000000003245e-05}, {'diff': 6.081899999999668e-05...</msg>
<status status="PASS" starttime="20201030 15:53:01.537" endtime="20201030 15:53:01.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.544" level="INFO">${ACCURACY} = {'diff': [6.0957999999999846e-05, 6.0500000000001525e-05, 6.0707999999999596e-05, 6.058299999999947e-05, 6.0444000000003245e-05, 6.081899999999668e-05, 6.0291999999999984e-05, 6.087499999999843e-05, 6...</msg>
<status status="PASS" starttime="20201030 15:53:01.541" endtime="20201030 15:53:01.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.548" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.547" endtime="20201030 15:53:01.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.551" level="INFO">VALUE: [6.0957999999999846e-05, 6.0500000000001525e-05, 6.0707999999999596e-05, 6.058299999999947e-05, 6.0444000000003245e-05, 6.081899999999668e-05, 6.0291999999999984e-05, 6.087499999999843e-05, 6.062499999999818e-05, 6.0471999999998916e-05, 6.06949999999995e-05, 6.045899999999882e-05, 6.0305999999999554e-05, 6.063900000000122e-05, 6.094499999999975e-05, 6.0792000000000485e-05, 6.0806000000000054e-05, 6.0916000000001136e-05, 6.112500000000215e-05, 6.0387999999998027e-05, 6.029100000000051e-05, 6.034699999999879e-05, 6.080500000000058e-05, 6.0443999999999776e-05, 6.03750000000014e-05, 6.0514000000001095e-05, 6.111099999999911e-05, 6.094499999999975e-05, 6.084699999999929e-05, 6.0306000000003024e-05, 6.093099999999671e-05, 6.118100000000043e-05, 6.1195e-05, 6.118100000000043e-05, 6.037499999999793e-05, 6.044499999999925e-05, 6.0485999999998485e-05, 6.119400000000053e-05, 6.0749999999998305e-05, 6.104199999999727e-05, 6.073699999999821e-05, 6.033299999999922e-05, 6.036099999999836e-05, 6.0528000000000665e-05, 6.084699999999929e-05, 6.0486000000001955e-05, 6.0986000000002455e-05, 6.0792000000000485e-05, 6.036100000000183e-05, 6.0930000000000706e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.549" endtime="20201030 15:53:01.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.545" endtime="20201030 15:53:01.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.556" endtime="20201030 15:53:01.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.554" endtime="20201030 15:53:01.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.553" endtime="20201030 15:53:01.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.196" endtime="20201030 15:53:01.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.195" endtime="20201030 15:53:01.576"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.585" endtime="20201030 15:53:01.605"></status>
</kw>
<msg timestamp="20201030 15:53:01.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.584" endtime="20201030 15:53:01.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.606" endtime="20201030 15:53:01.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.609" endtime="20201030 15:53:01.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.581" endtime="20201030 15:53:01.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.579" endtime="20201030 15:53:01.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.617" endtime="20201030 15:53:01.903"></status>
</kw>
<msg timestamp="20201030 15:53:01.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020834042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020895403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.616" endtime="20201030 15:53:01.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020834042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020895403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.908" endtime="20201030 15:53:01.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.916" endtime="20201030 15:53:01.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.613" endtime="20201030 15:53:01.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.612" endtime="20201030 15:53:01.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.922" level="INFO">${RESULT} = [{'diff': 6.136099999999936e-05}, {'diff': 6.129199999999752e-05}, {'diff': 6.134699999999979e-05}, {'diff': 6.20699999999974e-05}, {'diff': 6.207000000000087e-05}, {'diff': 6.18750000000029e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:01.919" endtime="20201030 15:53:01.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.926" level="INFO">${ACCURACY} = {'diff': [6.136099999999936e-05, 6.129199999999752e-05, 6.134699999999979e-05, 6.20699999999974e-05, 6.207000000000087e-05, 6.18750000000029e-05, 6.166699999999789e-05, 6.219499999999753e-05, 6.159700...</msg>
<status status="PASS" starttime="20201030 15:53:01.923" endtime="20201030 15:53:01.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.931" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.930" endtime="20201030 15:53:01.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.937" level="INFO">VALUE: [6.136099999999936e-05, 6.129199999999752e-05, 6.134699999999979e-05, 6.20699999999974e-05, 6.207000000000087e-05, 6.18750000000029e-05, 6.166699999999789e-05, 6.219499999999753e-05, 6.159700000000004e-05, 6.179200000000148e-05, 6.158300000000047e-05, 6.191700000000161e-05, 6.127700000000194e-05, 6.151399999999863e-05, 6.1195e-05, 6.112500000000215e-05, 6.168000000000146e-05, 6.195800000000085e-05, 6.179100000000201e-05, 6.141700000000111e-05, 6.154099999999829e-05, 6.13889999999985e-05, 6.134699999999979e-05, 6.1888999999999e-05, 6.17499999999993e-05, 6.147199999999992e-05, 6.212499999999968e-05, 6.144500000000025e-05, 6.176399999999888e-05, 6.16950000000005e-05, 6.17629999999994e-05, 6.20690000000014e-05, 6.138799999999903e-05, 6.217999999999849e-05, 6.169400000000103e-05, 6.1195e-05, 6.167999999999799e-05, 6.158300000000047e-05, 6.130500000000108e-05, 6.17499999999993e-05, 6.170799999999713e-05, 6.209700000000054e-05, 6.208300000000097e-05, 6.166700000000136e-05, 6.20140000000026e-05, 6.12499999999988e-05, 6.170900000000007e-05, 6.218099999999796e-05, 6.186099999999986e-05, 6.161099999999961e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.932" endtime="20201030 15:53:01.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.927" endtime="20201030 15:53:01.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.942" endtime="20201030 15:53:01.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.940" endtime="20201030 15:53:01.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.939" endtime="20201030 15:53:01.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.577" endtime="20201030 15:53:01.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.577" endtime="20201030 15:53:01.962"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.971" endtime="20201030 15:53:01.990"></status>
</kw>
<msg timestamp="20201030 15:53:01.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.970" endtime="20201030 15:53:01.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.991" endtime="20201030 15:53:01.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.994" endtime="20201030 15:53:01.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.967" endtime="20201030 15:53:01.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.965" endtime="20201030 15:53:01.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.003" endtime="20201030 15:53:02.288"></status>
</kw>
<msg timestamp="20201030 15:53:02.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.001" endtime="20201030 15:53:02.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.293" endtime="20201030 15:53:02.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.301" endtime="20201030 15:53:02.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.999" endtime="20201030 15:53:02.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.997" endtime="20201030 15:53:02.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.307" level="INFO">${RESULT} = [{'diff': 6.23889999999995e-05}, {'diff': 6.236100000000036e-05}, {'diff': 6.244499999999778e-05}, {'diff': 6.304199999999927e-05}, {'diff': 6.266700000000236e-05}, {'diff': 6.293100000000218e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:02.304" endtime="20201030 15:53:02.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.358" level="INFO">${ACCURACY} = {'diff': [6.23889999999995e-05, 6.236100000000036e-05, 6.244499999999778e-05, 6.304199999999927e-05, 6.266700000000236e-05, 6.293100000000218e-05, 6.308300000000197e-05, 6.255499999999886e-05, 6.30000...</msg>
<status status="PASS" starttime="20201030 15:53:02.308" endtime="20201030 15:53:02.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.362" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.361" endtime="20201030 15:53:02.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.364" level="INFO">VALUE: [6.23889999999995e-05, 6.236100000000036e-05, 6.244499999999778e-05, 6.304199999999927e-05, 6.266700000000236e-05, 6.293100000000218e-05, 6.308300000000197e-05, 6.255499999999886e-05, 6.300000000000056e-05, 6.242999999999874e-05, 6.237499999999993e-05, 6.293099999999871e-05, 6.24439999999983e-05, 6.248600000000049e-05, 6.261100000000061e-05, 6.294499999999828e-05, 6.25560000000018e-05, 6.300000000000056e-05, 6.23889999999995e-05, 6.273600000000074e-05, 6.279200000000248e-05, 6.297300000000089e-05, 6.309799999999754e-05, 6.304199999999927e-05, 6.280599999999859e-05, 6.305500000000283e-05, 6.269399999999856e-05, 6.316599999999992e-05, 6.229100000000251e-05, 6.227799999999895e-05, 6.262500000000018e-05, 6.237499999999993e-05, 6.248600000000049e-05, 6.312500000000068e-05, 6.284700000000129e-05, 6.212499999999968e-05, 6.312500000000068e-05, 6.286099999999739e-05, 6.305499999999936e-05, 6.309699999999807e-05, 6.286100000000086e-05, 6.299999999999709e-05, 6.272299999999717e-05, 6.27630000000004e-05, 6.266699999999889e-05, 6.263799999999681e-05, 6.292999999999924e-05, 6.23889999999995e-05, 6.305499999999936e-05, 6.230499999999861e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.363" endtime="20201030 15:53:02.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.358" endtime="20201030 15:53:02.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.370" endtime="20201030 15:53:02.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.368" endtime="20201030 15:53:02.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.367" endtime="20201030 15:53:02.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.963" endtime="20201030 15:53:02.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.963" endtime="20201030 15:53:02.390"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.399" endtime="20201030 15:53:02.418"></status>
</kw>
<msg timestamp="20201030 15:53:02.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.397" endtime="20201030 15:53:02.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.419" endtime="20201030 15:53:02.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.422" endtime="20201030 15:53:02.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.395" endtime="20201030 15:53:02.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.393" endtime="20201030 15:53:02.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.431" endtime="20201030 15:53:02.717"></status>
</kw>
<msg timestamp="20201030 15:53:02.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019660514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.429" endtime="20201030 15:53:02.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019660514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.721" endtime="20201030 15:53:02.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.730" endtime="20201030 15:53:02.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.427" endtime="20201030 15:53:02.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.425" endtime="20201030 15:53:02.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.737" level="INFO">${RESULT} = [{'diff': 6.370799999999913e-05}, {'diff': 6.390300000000057e-05}, {'diff': 6.411099999999864e-05}, {'diff': 6.333300000000222e-05}, {'diff': 6.333300000000222e-05}, {'diff': 6.367999999999999e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:02.733" endtime="20201030 15:53:02.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.741" level="INFO">${ACCURACY} = {'diff': [6.370799999999913e-05, 6.390300000000057e-05, 6.411099999999864e-05, 6.333300000000222e-05, 6.333300000000222e-05, 6.367999999999999e-05, 6.32500000000008e-05, 6.350000000000106e-05, 6.34720...</msg>
<status status="PASS" starttime="20201030 15:53:02.738" endtime="20201030 15:53:02.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.746" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.744" endtime="20201030 15:53:02.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.749" level="INFO">VALUE: [6.370799999999913e-05, 6.390300000000057e-05, 6.411099999999864e-05, 6.333300000000222e-05, 6.333300000000222e-05, 6.367999999999999e-05, 6.32500000000008e-05, 6.350000000000106e-05, 6.347200000000192e-05, 6.391700000000014e-05, 6.34439999999993e-05, 6.416700000000039e-05, 6.386100000000186e-05, 6.326400000000038e-05, 6.368099999999946e-05, 6.418099999999996e-05, 6.348600000000149e-05, 6.39029999999971e-05, 6.416700000000039e-05, 6.35699999999989e-05, 6.336200000000083e-05, 6.380500000000011e-05, 6.33890000000005e-05, 6.372200000000217e-05, 6.32639999999969e-05, 6.415200000000135e-05, 6.337500000000093e-05, 6.393000000000024e-05, 6.386099999999839e-05, 6.330499999999961e-05, 6.398600000000199e-05, 6.363900000000075e-05, 6.40280000000007e-05, 6.377800000000045e-05, 6.40829999999995e-05, 6.362500000000118e-05, 6.331999999999866e-05, 6.343099999999921e-05, 6.3889000000001e-05, 6.359699999999857e-05, 6.402700000000122e-05, 6.384699999999882e-05, 6.343100000000268e-05, 6.373600000000174e-05, 6.361099999999814e-05, 6.323599999999777e-05, 6.397199999999895e-05, 6.367999999999999e-05, 6.323600000000124e-05, 6.368099999999946e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.747" endtime="20201030 15:53:02.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.742" endtime="20201030 15:53:02.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.754" endtime="20201030 15:53:02.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.753" endtime="20201030 15:53:02.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.751" endtime="20201030 15:53:02.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.391" endtime="20201030 15:53:02.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.391" endtime="20201030 15:53:02.775"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.784" endtime="20201030 15:53:02.803"></status>
</kw>
<msg timestamp="20201030 15:53:02.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.782" endtime="20201030 15:53:02.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.804" endtime="20201030 15:53:02.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.807" endtime="20201030 15:53:02.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.780" endtime="20201030 15:53:02.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.777" endtime="20201030 15:53:02.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.817" endtime="20201030 15:53:03.103"></status>
</kw>
<msg timestamp="20201030 15:53:03.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020365903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.815" endtime="20201030 15:53:03.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020365903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.108" endtime="20201030 15:53:03.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.116" endtime="20201030 15:53:03.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.812" endtime="20201030 15:53:03.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.810" endtime="20201030 15:53:03.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.123" level="INFO">${RESULT} = [{'diff': 6.447199999999945e-05}, {'diff': 6.484699999999982e-05}, {'diff': 6.451400000000163e-05}, {'diff': 6.468100000000046e-05}, {'diff': 6.502799999999823e-05}, {'diff': 6.462500000000218e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:03.120" endtime="20201030 15:53:03.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.128" level="INFO">${ACCURACY} = {'diff': [6.447199999999945e-05, 6.484699999999982e-05, 6.451400000000163e-05, 6.468100000000046e-05, 6.502799999999823e-05, 6.462500000000218e-05, 6.480500000000111e-05, 6.495800000000038e-05, 6.5138...</msg>
<status status="PASS" starttime="20201030 15:53:03.124" endtime="20201030 15:53:03.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.133" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.132" endtime="20201030 15:53:03.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.136" level="INFO">VALUE: [6.447199999999945e-05, 6.484699999999982e-05, 6.451400000000163e-05, 6.468100000000046e-05, 6.502799999999823e-05, 6.462500000000218e-05, 6.480500000000111e-05, 6.495800000000038e-05, 6.513899999999878e-05, 6.4276999999998e-05, 6.481900000000068e-05, 6.472200000000317e-05, 6.483299999999678e-05, 6.44440000000003e-05, 6.511099999999964e-05, 6.465299999999785e-05, 6.45699999999999e-05, 6.448599999999902e-05, 6.473600000000274e-05, 6.424999999999834e-05, 6.436099999999889e-05, 6.523599999999977e-05, 6.42639999999979e-05, 6.505599999999737e-05, 6.423600000000224e-05, 6.437499999999846e-05, 6.448599999999902e-05, 6.477700000000197e-05, 6.461099999999914e-05, 6.473599999999927e-05, 6.427800000000095e-05, 6.443000000000074e-05, 6.44440000000003e-05, 6.504099999999832e-05, 6.412500000000168e-05, 6.473600000000274e-05, 6.455600000000034e-05, 6.501400000000213e-05, 6.461099999999914e-05, 6.448599999999902e-05, 6.437500000000193e-05, 6.437499999999846e-05, 6.483399999999973e-05, 6.469500000000003e-05, 6.443100000000021e-05, 6.448699999999849e-05, 6.499999999999909e-05, 6.480500000000111e-05, 6.433299999999975e-05, 6.449999999999859e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.134" endtime="20201030 15:53:03.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.129" endtime="20201030 15:53:03.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.141" endtime="20201030 15:53:03.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.139" endtime="20201030 15:53:03.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.138" endtime="20201030 15:53:03.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.776" endtime="20201030 15:53:03.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.775" endtime="20201030 15:53:03.162"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.171" endtime="20201030 15:53:03.191"></status>
</kw>
<msg timestamp="20201030 15:53:03.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.169" endtime="20201030 15:53:03.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.192" endtime="20201030 15:53:03.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.195" endtime="20201030 15:53:03.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.167" endtime="20201030 15:53:03.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.164" endtime="20201030 15:53:03.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.204" endtime="20201030 15:53:03.514"></status>
</kw>
<msg timestamp="20201030 15:53:03.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020524139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020590306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.203" endtime="20201030 15:53:03.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020524139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020590306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.518" endtime="20201030 15:53:03.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.527" endtime="20201030 15:53:03.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.200" endtime="20201030 15:53:03.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.198" endtime="20201030 15:53:03.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.534" level="INFO">${RESULT} = [{'diff': 6.616699999999892e-05}, {'diff': 6.566599999999895e-05}, {'diff': 6.598600000000052e-05}, {'diff': 6.54029999999986e-05}, {'diff': 6.540199999999913e-05}, {'diff': 6.617999999999902e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:03.530" endtime="20201030 15:53:03.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.538" level="INFO">${ACCURACY} = {'diff': [6.616699999999892e-05, 6.566599999999895e-05, 6.598600000000052e-05, 6.54029999999986e-05, 6.540199999999913e-05, 6.617999999999902e-05, 6.568000000000199e-05, 6.580499999999864e-05, 6.57909...</msg>
<status status="PASS" starttime="20201030 15:53:03.535" endtime="20201030 15:53:03.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.542" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.541" endtime="20201030 15:53:03.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.545" level="INFO">VALUE: [6.616699999999892e-05, 6.566599999999895e-05, 6.598600000000052e-05, 6.54029999999986e-05, 6.540199999999913e-05, 6.617999999999902e-05, 6.568000000000199e-05, 6.580499999999864e-05, 6.579099999999907e-05, 6.574999999999984e-05, 6.568100000000146e-05, 6.591699999999867e-05, 6.574999999999984e-05, 6.591700000000214e-05, 6.563899999999928e-05, 6.60419999999988e-05, 6.523599999999977e-05, 6.548600000000002e-05, 6.569399999999809e-05, 6.59029999999991e-05, 6.551299999999968e-05, 6.556899999999796e-05, 6.59020000000031e-05, 6.548600000000002e-05, 6.551399999999916e-05, 6.512499999999921e-05, 6.573600000000027e-05, 6.597200000000095e-05, 6.52639999999989e-05, 6.541699999999817e-05, 6.52639999999989e-05, 6.579199999999855e-05, 6.605599999999837e-05, 6.619499999999806e-05, 6.52639999999989e-05, 6.523600000000324e-05, 6.57769999999995e-05, 6.59029999999991e-05, 6.594399999999834e-05, 6.569400000000156e-05, 6.597300000000042e-05, 6.541600000000217e-05, 6.616599999999945e-05, 6.552700000000272e-05, 6.57769999999995e-05, 6.548600000000002e-05, 6.579099999999907e-05, 6.598600000000052e-05, 6.54029999999986e-05, 6.52220000000002e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.544" endtime="20201030 15:53:03.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.539" endtime="20201030 15:53:03.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.557" endtime="20201030 15:53:03.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.555" endtime="20201030 15:53:03.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.554" endtime="20201030 15:53:03.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.163" endtime="20201030 15:53:03.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.162" endtime="20201030 15:53:03.578"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.588" endtime="20201030 15:53:03.607"></status>
</kw>
<msg timestamp="20201030 15:53:03.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.585" endtime="20201030 15:53:03.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.609" endtime="20201030 15:53:03.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.611" endtime="20201030 15:53:03.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.583" endtime="20201030 15:53:03.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.580" endtime="20201030 15:53:03.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.621" endtime="20201030 15:53:03.908"></status>
</kw>
<msg timestamp="20201030 15:53:03.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021364458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021431639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.619" endtime="20201030 15:53:03.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021364458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021431639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.913" endtime="20201030 15:53:03.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.921" endtime="20201030 15:53:03.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.617" endtime="20201030 15:53:03.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.615" endtime="20201030 15:53:03.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.928" level="INFO">${RESULT} = [{'diff': 6.718099999999949e-05}, {'diff': 6.673600000000127e-05}, {'diff': 6.662500000000071e-05}, {'diff': 6.686100000000139e-05}, {'diff': 6.680599999999912e-05}, {'diff': 6.625000000000034e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:03.925" endtime="20201030 15:53:03.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.932" level="INFO">${ACCURACY} = {'diff': [6.718099999999949e-05, 6.673600000000127e-05, 6.662500000000071e-05, 6.686100000000139e-05, 6.680599999999912e-05, 6.625000000000034e-05, 6.706999999999894e-05, 6.687499999999749e-05, 6.6291...</msg>
<status status="PASS" starttime="20201030 15:53:03.929" endtime="20201030 15:53:03.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.937" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.936" endtime="20201030 15:53:03.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.941" level="INFO">VALUE: [6.718099999999949e-05, 6.673600000000127e-05, 6.662500000000071e-05, 6.686100000000139e-05, 6.680599999999912e-05, 6.625000000000034e-05, 6.706999999999894e-05, 6.687499999999749e-05, 6.629199999999905e-05, 6.642999999999927e-05, 6.638900000000003e-05, 6.684700000000182e-05, 6.683299999999878e-05, 6.683299999999878e-05, 6.631899999999871e-05, 6.655499999999939e-05, 6.643099999999874e-05, 6.683299999999878e-05, 6.668099999999899e-05, 6.705599999999937e-05, 6.680499999999964e-05, 6.693099999999924e-05, 6.698600000000152e-05, 6.700000000000109e-05, 6.698599999999805e-05, 6.641700000000264e-05, 6.623700000000024e-05, 6.681899999999921e-05, 6.622199999999773e-05, 6.629099999999957e-05, 6.651399999999669e-05, 6.625000000000034e-05, 6.697199999999848e-05, 6.67640000000004e-05, 6.612500000000021e-05, 6.662500000000071e-05, 6.719499999999906e-05, 6.679199999999955e-05, 6.712500000000121e-05, 6.650000000000059e-05, 6.640200000000013e-05, 6.718099999999949e-05, 6.648600000000102e-05, 6.669499999999856e-05, 6.686100000000139e-05, 6.687500000000096e-05, 6.718000000000002e-05, 6.675000000000084e-05, 6.712500000000121e-05, 6.69160000000002e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.938" endtime="20201030 15:53:03.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.933" endtime="20201030 15:53:03.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.946" endtime="20201030 15:53:03.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.944" endtime="20201030 15:53:03.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.943" endtime="20201030 15:53:03.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.579" endtime="20201030 15:53:03.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.578" endtime="20201030 15:53:03.967"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.976" endtime="20201030 15:53:03.995"></status>
</kw>
<msg timestamp="20201030 15:53:03.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.974" endtime="20201030 15:53:03.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.997" endtime="20201030 15:53:03.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.999" endtime="20201030 15:53:04.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.971" endtime="20201030 15:53:04.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.969" endtime="20201030 15:53:04.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.009" endtime="20201030 15:53:04.295"></status>
</kw>
<msg timestamp="20201030 15:53:04.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020340792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.007" endtime="20201030 15:53:04.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020340792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.299" endtime="20201030 15:53:04.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.308" endtime="20201030 15:53:04.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.005" endtime="20201030 15:53:04.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.003" endtime="20201030 15:53:04.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.315" level="INFO">${RESULT} = [{'diff': 6.809799999999908e-05}, {'diff': 6.729200000000005e-05}, {'diff': 6.763900000000128e-05}, {'diff': 6.775000000000184e-05}, {'diff': 6.779100000000107e-05}, {'diff': 6.733299999999928e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:04.311" endtime="20201030 15:53:04.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.320" level="INFO">${ACCURACY} = {'diff': [6.809799999999908e-05, 6.729200000000005e-05, 6.763900000000128e-05, 6.775000000000184e-05, 6.779100000000107e-05, 6.733299999999928e-05, 6.738900000000103e-05, 6.786099999999892e-05, 6.7415...</msg>
<status status="PASS" starttime="20201030 15:53:04.316" endtime="20201030 15:53:04.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.325" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.323" endtime="20201030 15:53:04.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.327" level="INFO">VALUE: [6.809799999999908e-05, 6.729200000000005e-05, 6.763900000000128e-05, 6.775000000000184e-05, 6.779100000000107e-05, 6.733299999999928e-05, 6.738900000000103e-05, 6.786099999999892e-05, 6.741599999999723e-05, 6.731899999999971e-05, 6.77640000000014e-05, 6.779200000000055e-05, 6.762499999999824e-05, 6.733399999999876e-05, 6.788900000000153e-05, 6.725000000000134e-05, 6.7583999999999e-05, 6.798599999999905e-05, 6.765199999999791e-05, 6.766700000000042e-05, 6.787500000000196e-05, 6.793000000000077e-05, 6.754099999999735e-05, 6.79299999999973e-05, 6.794400000000034e-05, 6.743000000000027e-05, 6.741700000000017e-05, 6.811100000000264e-05, 6.748599999999855e-05, 6.74030000000006e-05, 6.793100000000024e-05, 6.738899999999756e-05, 6.743099999999974e-05, 6.794499999999981e-05, 6.777800000000098e-05, 6.799999999999862e-05, 6.77640000000014e-05, 6.731899999999971e-05, 6.759799999999858e-05, 6.787499999999849e-05, 6.819400000000059e-05, 6.824999999999887e-05, 6.747199999999898e-05, 6.793000000000077e-05, 6.766599999999748e-05, 6.786099999999892e-05, 6.811099999999917e-05, 6.750000000000159e-05, 6.787500000000196e-05, 6.777799999999751e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.326" endtime="20201030 15:53:04.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.321" endtime="20201030 15:53:04.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.332" endtime="20201030 15:53:04.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.331" endtime="20201030 15:53:04.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.330" endtime="20201030 15:53:04.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.968" endtime="20201030 15:53:04.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.967" endtime="20201030 15:53:04.353"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.362" endtime="20201030 15:53:04.381"></status>
</kw>
<msg timestamp="20201030 15:53:04.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.361" endtime="20201030 15:53:04.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.383" endtime="20201030 15:53:04.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.386" endtime="20201030 15:53:04.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.358" endtime="20201030 15:53:04.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.356" endtime="20201030 15:53:04.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.395" endtime="20201030 15:53:04.682"></status>
</kw>
<msg timestamp="20201030 15:53:04.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020374292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020442556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.394" endtime="20201030 15:53:04.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020374292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020442556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.687" endtime="20201030 15:53:04.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.695" endtime="20201030 15:53:04.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.391" endtime="20201030 15:53:04.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.389" endtime="20201030 15:53:04.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.702" level="INFO">${RESULT} = [{'diff': 6.82640000000019e-05}, {'diff': 6.904099999999885e-05}, {'diff': 6.863899999999881e-05}, {'diff': 6.825000000000234e-05}, {'diff': 6.905499999999842e-05}, {'diff': 6.919400000000159e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:04.699" endtime="20201030 15:53:04.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.707" level="INFO">${ACCURACY} = {'diff': [6.82640000000019e-05, 6.904099999999885e-05, 6.863899999999881e-05, 6.825000000000234e-05, 6.905499999999842e-05, 6.919400000000159e-05, 6.901400000000266e-05, 6.893000000000177e-05, 6.82500...</msg>
<status status="PASS" starttime="20201030 15:53:04.703" endtime="20201030 15:53:04.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.712" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.711" endtime="20201030 15:53:04.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.715" level="INFO">VALUE: [6.82640000000019e-05, 6.904099999999885e-05, 6.863899999999881e-05, 6.825000000000234e-05, 6.905499999999842e-05, 6.919400000000159e-05, 6.901400000000266e-05, 6.893000000000177e-05, 6.825000000000234e-05, 6.880499999999817e-05, 6.918100000000149e-05, 6.837499999999899e-05, 6.830600000000062e-05, 6.85420000000013e-05, 6.913899999999931e-05, 6.912499999999974e-05, 6.837499999999899e-05, 6.883400000000026e-05, 6.882000000000069e-05, 6.83480000000028e-05, 6.825000000000234e-05, 6.904199999999833e-05, 6.831900000000071e-05, 6.880499999999817e-05, 6.816699999999745e-05, 6.911100000000017e-05, 6.861099999999967e-05, 6.868000000000152e-05, 6.870800000000066e-05, 6.916700000000192e-05, 6.836099999999942e-05, 6.838899999999856e-05, 6.863900000000228e-05, 6.874999999999937e-05, 6.836100000000289e-05, 6.85559999999974e-05, 6.82359999999993e-05, 6.901399999999919e-05, 6.823699999999877e-05, 6.856900000000096e-05, 6.895800000000091e-05, 6.855499999999792e-05, 6.905500000000189e-05, 6.830500000000114e-05, 6.843000000000127e-05, 6.89030000000021e-05, 6.865299999999838e-05, 6.893099999999777e-05, 6.866699999999795e-05, 6.880599999999765e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.713" endtime="20201030 15:53:04.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.708" endtime="20201030 15:53:04.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.721" endtime="20201030 15:53:04.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.719" endtime="20201030 15:53:04.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.717" endtime="20201030 15:53:04.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.354" endtime="20201030 15:53:04.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.353" endtime="20201030 15:53:04.741"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.751" endtime="20201030 15:53:04.771"></status>
</kw>
<msg timestamp="20201030 15:53:04.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.749" endtime="20201030 15:53:04.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.772" endtime="20201030 15:53:04.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.775" endtime="20201030 15:53:04.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.746" endtime="20201030 15:53:04.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.744" endtime="20201030 15:53:04.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.784" endtime="20201030 15:53:05.070"></status>
</kw>
<msg timestamp="20201030 15:53:05.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021211153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021280764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.783" endtime="20201030 15:53:05.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021211153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021280764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.075" endtime="20201030 15:53:05.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.083" endtime="20201030 15:53:05.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.780" endtime="20201030 15:53:05.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.778" endtime="20201030 15:53:05.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.090" level="INFO">${RESULT} = [{'diff': 6.961100000000067e-05}, {'diff': 6.913899999999931e-05}, {'diff': 6.926399999999944e-05}, {'diff': 6.929199999999858e-05}, {'diff': 6.980599999999865e-05}, {'diff': 6.963800000000034e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:05.087" endtime="20201030 15:53:05.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.094" level="INFO">${ACCURACY} = {'diff': [6.961100000000067e-05, 6.913899999999931e-05, 6.926399999999944e-05, 6.929199999999858e-05, 6.980599999999865e-05, 6.963800000000034e-05, 6.913799999999984e-05, 6.909800000000008e-05, 6.9249...</msg>
<status status="PASS" starttime="20201030 15:53:05.091" endtime="20201030 15:53:05.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.099" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.098" endtime="20201030 15:53:05.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.102" level="INFO">VALUE: [6.961100000000067e-05, 6.913899999999931e-05, 6.926399999999944e-05, 6.929199999999858e-05, 6.980599999999865e-05, 6.963800000000034e-05, 6.913799999999984e-05, 6.909800000000008e-05, 6.924999999999987e-05, 6.990299999999963e-05, 6.92360000000003e-05, 7.020799999999869e-05, 6.912499999999974e-05, 6.975000000000037e-05, 6.97360000000008e-05, 6.937499999999999e-05, 6.938899999999956e-05, 6.933400000000076e-05, 6.950000000000012e-05, 6.984699999999788e-05, 7.016699999999945e-05, 6.980599999999865e-05, 6.990299999999963e-05, 7.004199999999933e-05, 6.997200000000148e-05, 6.950000000000012e-05, 6.924999999999987e-05, 6.918000000000202e-05, 6.998600000000105e-05, 7.018000000000302e-05, 6.948600000000055e-05, 7.016599999999998e-05, 7.000000000000062e-05, 6.958300000000153e-05, 6.970800000000166e-05, 6.994499999999834e-05, 6.95970000000011e-05, 6.956899999999849e-05, 6.95559999999984e-05, 6.950000000000012e-05, 6.929200000000205e-05, 7.000000000000062e-05, 6.983299999999831e-05, 6.961199999999668e-05, 6.956899999999849e-05, 6.933300000000128e-05, 6.930499999999867e-05, 6.980500000000264e-05, 6.969399999999862e-05, 6.912499999999974e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.100" endtime="20201030 15:53:05.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.095" endtime="20201030 15:53:05.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.108" endtime="20201030 15:53:05.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.106" endtime="20201030 15:53:05.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.105" endtime="20201030 15:53:05.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.742" endtime="20201030 15:53:05.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.742" endtime="20201030 15:53:05.129"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.138" endtime="20201030 15:53:05.157"></status>
</kw>
<msg timestamp="20201030 15:53:05.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.136" endtime="20201030 15:53:05.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.159" endtime="20201030 15:53:05.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.161" endtime="20201030 15:53:05.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.133" endtime="20201030 15:53:05.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.131" endtime="20201030 15:53:05.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.171" endtime="20201030 15:53:05.457"></status>
</kw>
<msg timestamp="20201030 15:53:05.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020463556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.169" endtime="20201030 15:53:05.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020463556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.461" endtime="20201030 15:53:05.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.470" endtime="20201030 15:53:05.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.166" endtime="20201030 15:53:05.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.164" endtime="20201030 15:53:05.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.477" level="INFO">${RESULT} = [{'diff': 7.007000000000194e-05}, {'diff': 7.02360000000013e-05}, {'diff': 7.068099999999952e-05}, {'diff': 7.048600000000155e-05}, {'diff': 7.034700000000185e-05}, {'diff': 7.088900000000106e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:05.474" endtime="20201030 15:53:05.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.482" level="INFO">${ACCURACY} = {'diff': [7.007000000000194e-05, 7.02360000000013e-05, 7.068099999999952e-05, 7.048600000000155e-05, 7.034700000000185e-05, 7.088900000000106e-05, 7.05689999999995e-05, 7.09300000000003e-05, 7.0736000...</msg>
<status status="PASS" starttime="20201030 15:53:05.478" endtime="20201030 15:53:05.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.487" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.486" endtime="20201030 15:53:05.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.490" level="INFO">VALUE: [7.007000000000194e-05, 7.02360000000013e-05, 7.068099999999952e-05, 7.048600000000155e-05, 7.034700000000185e-05, 7.088900000000106e-05, 7.05689999999995e-05, 7.09300000000003e-05, 7.07360000000018e-05, 7.07499999999979e-05, 7.036100000000142e-05, 7.069499999999909e-05, 7.080599999999965e-05, 7.037500000000099e-05, 7.051399999999722e-05, 7.093099999999977e-05, 7.102799999999729e-05, 7.051400000000069e-05, 7.038900000000056e-05, 7.040300000000013e-05, 7.098600000000205e-05, 7.118000000000055e-05, 7.041600000000023e-05, 7.037500000000099e-05, 7.112500000000174e-05, 7.048600000000155e-05, 7.048599999999808e-05, 7.116700000000045e-05, 7.073599999999833e-05, 7.062500000000124e-05, 7.056999999999897e-05, 7.04169999999997e-05, 7.04169999999997e-05, 7.086099999999845e-05, 7.081999999999922e-05, 7.049999999999765e-05, 7.020899999999816e-05, 7.093099999999977e-05, 7.040300000000013e-05, 7.041599999999676e-05, 7.025000000000087e-05, 7.06109999999982e-05, 7.031900000000271e-05, 7.029199999999958e-05, 7.069399999999962e-05, 7.081999999999922e-05, 7.080599999999965e-05, 7.098599999999858e-05, 7.080599999999965e-05, 7.107000000000294e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.488" endtime="20201030 15:53:05.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.483" endtime="20201030 15:53:05.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.495" endtime="20201030 15:53:05.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.493" endtime="20201030 15:53:05.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.492" endtime="20201030 15:53:05.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.130" endtime="20201030 15:53:05.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.129" endtime="20201030 15:53:05.515"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.525" endtime="20201030 15:53:05.544"></status>
</kw>
<msg timestamp="20201030 15:53:05.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.523" endtime="20201030 15:53:05.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.546" endtime="20201030 15:53:05.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.550" endtime="20201030 15:53:05.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.520" endtime="20201030 15:53:05.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.518" endtime="20201030 15:53:05.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.559" endtime="20201030 15:53:05.847"></status>
</kw>
<msg timestamp="20201030 15:53:05.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020443083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.557" endtime="20201030 15:53:05.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020443083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.852" endtime="20201030 15:53:05.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.860" endtime="20201030 15:53:05.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.555" endtime="20201030 15:53:05.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.553" endtime="20201030 15:53:05.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.867" level="INFO">${RESULT} = [{'diff': 7.188900000000206e-05}, {'diff': 7.187500000000249e-05}, {'diff': 7.134699999999938e-05}, {'diff': 7.162500000000224e-05}, {'diff': 7.148599999999908e-05}, {'diff': 7.198599999999958e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:05.864" endtime="20201030 15:53:05.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.871" level="INFO">${ACCURACY} = {'diff': [7.188900000000206e-05, 7.187500000000249e-05, 7.134699999999938e-05, 7.162500000000224e-05, 7.148599999999908e-05, 7.198599999999958e-05, 7.195800000000044e-05, 7.152799999999779e-05, 7.1945...</msg>
<status status="PASS" starttime="20201030 15:53:05.868" endtime="20201030 15:53:05.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.876" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.875" endtime="20201030 15:53:05.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.879" level="INFO">VALUE: [7.188900000000206e-05, 7.187500000000249e-05, 7.134699999999938e-05, 7.162500000000224e-05, 7.148599999999908e-05, 7.198599999999958e-05, 7.195800000000044e-05, 7.152799999999779e-05, 7.194500000000034e-05, 7.21109999999997e-05, 7.180600000000065e-05, 7.143100000000027e-05, 7.12360000000023e-05, 7.159799999999911e-05, 7.136199999999843e-05, 7.191699999999773e-05, 7.115300000000088e-05, 7.187499999999902e-05, 7.17910000000016e-05, 7.199999999999915e-05, 7.147200000000298e-05, 7.138899999999809e-05, 7.141600000000123e-05, 7.138900000000156e-05, 7.216700000000145e-05, 7.156999999999997e-05, 7.195800000000044e-05, 7.180600000000065e-05, 7.194500000000034e-05, 7.19170000000012e-05, 7.168100000000052e-05, 7.168100000000052e-05, 7.12499999999984e-05, 7.141699999999723e-05, 7.175000000000237e-05, 7.176400000000194e-05, 7.191599999999826e-05, 7.162499999999877e-05, 7.17499999999989e-05, 7.13620000000019e-05, 7.15690000000005e-05, 7.187500000000249e-05, 7.219400000000112e-05, 7.186099999999945e-05, 7.168100000000052e-05, 7.150000000000212e-05, 7.131999999999972e-05, 7.197200000000001e-05, 7.186100000000292e-05, 7.205599999999743e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.877" endtime="20201030 15:53:05.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.872" endtime="20201030 15:53:05.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.884" endtime="20201030 15:53:05.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.882" endtime="20201030 15:53:05.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.881" endtime="20201030 15:53:05.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.516" endtime="20201030 15:53:05.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.516" endtime="20201030 15:53:05.907"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.920" endtime="20201030 15:53:05.941"></status>
</kw>
<msg timestamp="20201030 15:53:05.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.917" endtime="20201030 15:53:05.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.943" endtime="20201030 15:53:05.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.946" endtime="20201030 15:53:05.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.914" endtime="20201030 15:53:05.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.910" endtime="20201030 15:53:05.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.956" endtime="20201030 15:53:06.241"></status>
</kw>
<msg timestamp="20201030 15:53:06.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028689361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028762528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.954" endtime="20201030 15:53:06.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028689361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028762528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.246" endtime="20201030 15:53:06.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.254" endtime="20201030 15:53:06.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.951" endtime="20201030 15:53:06.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.949" endtime="20201030 15:53:06.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.260" level="INFO">${RESULT} = [{'diff': 7.316699999999898e-05}, {'diff': 7.318099999999855e-05}, {'diff': 7.300000000000015e-05}, {'diff': 7.31110000000007e-05}, {'diff': 7.286100000000045e-05}, {'diff': 7.293100000000177e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:06.257" endtime="20201030 15:53:06.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.265" level="INFO">${ACCURACY} = {'diff': [7.316699999999898e-05, 7.318099999999855e-05, 7.300000000000015e-05, 7.31110000000007e-05, 7.286100000000045e-05, 7.293100000000177e-05, 7.238799999999962e-05, 7.284800000000036e-05, 7.25830...</msg>
<status status="PASS" starttime="20201030 15:53:06.261" endtime="20201030 15:53:06.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.269" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.268" endtime="20201030 15:53:06.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.271" level="INFO">VALUE: [7.316699999999898e-05, 7.318099999999855e-05, 7.300000000000015e-05, 7.31110000000007e-05, 7.286100000000045e-05, 7.293100000000177e-05, 7.238799999999962e-05, 7.284800000000036e-05, 7.258300000000106e-05, 7.229199999999811e-05, 7.267999999999858e-05, 7.304099999999938e-05, 7.234699999999691e-05, 7.213899999999884e-05, 7.28049999999987e-05, 7.31110000000007e-05, 7.286100000000045e-05, 7.22499999999994e-05, 7.284800000000036e-05, 7.229200000000158e-05, 7.288899999999959e-05, 7.286099999999698e-05, 7.318099999999855e-05, 7.316699999999898e-05, 7.27499999999999e-05, 7.236199999999943e-05, 7.28049999999987e-05, 7.242999999999833e-05, 7.266600000000248e-05, 7.301399999999972e-05, 7.312500000000027e-05, 7.30560000000019e-05, 7.236099999999995e-05, 7.230599999999768e-05, 7.298600000000405e-05, 7.276400000000294e-05, 7.236099999999995e-05, 7.245899999999694e-05, 7.298599999999711e-05, 7.227800000000201e-05, 7.215199999999894e-05, 7.236199999999943e-05, 7.234700000000038e-05, 7.225000000000287e-05, 7.265299999999891e-05, 7.258300000000106e-05, 7.243000000000527e-05, 7.290299999999916e-05, 7.304099999999591e-05, 7.22639999999955e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.270" endtime="20201030 15:53:06.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.265" endtime="20201030 15:53:06.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.277" endtime="20201030 15:53:06.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.276" endtime="20201030 15:53:06.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.275" endtime="20201030 15:53:06.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.908" endtime="20201030 15:53:06.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.907" endtime="20201030 15:53:06.298"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.306" endtime="20201030 15:53:06.325"></status>
</kw>
<msg timestamp="20201030 15:53:06.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.305" endtime="20201030 15:53:06.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.327" endtime="20201030 15:53:06.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.330" endtime="20201030 15:53:06.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.302" endtime="20201030 15:53:06.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.300" endtime="20201030 15:53:06.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.341" endtime="20201030 15:53:06.627"></status>
</kw>
<msg timestamp="20201030 15:53:06.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019640792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.339" endtime="20201030 15:53:06.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019640792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.631" endtime="20201030 15:53:06.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.640" endtime="20201030 15:53:06.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.336" endtime="20201030 15:53:06.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.334" endtime="20201030 15:53:06.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.646" level="INFO">${RESULT} = [{'diff': 7.377700000000056e-05}, {'diff': 7.348600000000108e-05}, {'diff': 7.422200000000226e-05}, {'diff': 7.407000000000247e-05}, {'diff': 7.407000000000247e-05}, {'diff': 7.324999999999693e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:06.643" endtime="20201030 15:53:06.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.651" level="INFO">${ACCURACY} = {'diff': [7.377700000000056e-05, 7.348600000000108e-05, 7.422200000000226e-05, 7.407000000000247e-05, 7.407000000000247e-05, 7.324999999999693e-05, 7.32630000000005e-05, 7.345900000000141e-05, 7.36380...</msg>
<status status="PASS" starttime="20201030 15:53:06.647" endtime="20201030 15:53:06.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.656" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.655" endtime="20201030 15:53:06.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.658" level="INFO">VALUE: [7.377700000000056e-05, 7.348600000000108e-05, 7.422200000000226e-05, 7.407000000000247e-05, 7.407000000000247e-05, 7.324999999999693e-05, 7.32630000000005e-05, 7.345900000000141e-05, 7.363800000000087e-05, 7.331899999999877e-05, 7.337500000000052e-05, 7.392999999999983e-05, 7.326399999999997e-05, 7.383299999999884e-05, 7.35829999999986e-05, 7.398599999999811e-05, 7.337499999999705e-05, 7.405599999999943e-05, 7.390300000000016e-05, 7.36110000000012e-05, 7.418099999999955e-05, 7.34170000000027e-05, 7.362500000000077e-05, 7.41110000000017e-05, 7.379199999999961e-05, 7.329099999999963e-05, 7.415299999999694e-05, 7.34439999999989e-05, 7.398599999999811e-05, 7.38049999999997e-05, 7.37500000000009e-05, 7.367999999999958e-05, 7.404200000000333e-05, 7.379199999999961e-05, 7.373600000000133e-05, 7.377800000000004e-05, 7.394499999999887e-05, 7.383299999999884e-05, 7.395900000000191e-05, 7.382000000000222e-05, 7.379199999999961e-05, 7.416699999999998e-05, 7.369399999999915e-05, 7.341699999999923e-05, 7.34300000000028e-05, 7.327700000000006e-05, 7.416600000000051e-05, 7.38049999999997e-05, 7.355499999999945e-05, 7.341599999999976e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.657" endtime="20201030 15:53:06.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.652" endtime="20201030 15:53:06.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.663" endtime="20201030 15:53:06.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.662" endtime="20201030 15:53:06.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.660" endtime="20201030 15:53:06.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.299" endtime="20201030 15:53:06.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.298" endtime="20201030 15:53:06.684"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.693" endtime="20201030 15:53:06.712"></status>
</kw>
<msg timestamp="20201030 15:53:06.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.691" endtime="20201030 15:53:06.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.713" endtime="20201030 15:53:06.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.716" endtime="20201030 15:53:06.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.688" endtime="20201030 15:53:06.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.686" endtime="20201030 15:53:06.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.725" endtime="20201030 15:53:07.011"></status>
</kw>
<msg timestamp="20201030 15:53:07.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019915417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019990181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.723" endtime="20201030 15:53:07.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019915417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019990181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.016" endtime="20201030 15:53:07.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.024" endtime="20201030 15:53:07.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.721" endtime="20201030 15:53:07.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.719" endtime="20201030 15:53:07.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.031" level="INFO">${RESULT} = [{'diff': 7.4763999999998e-05}, {'diff': 7.463900000000134e-05}, {'diff': 7.438899999999762e-05}, {'diff': 7.459699999999916e-05}, {'diff': 7.513900000000184e-05}, {'diff': 7.448599999999861e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:07.027" endtime="20201030 15:53:07.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.035" level="INFO">${ACCURACY} = {'diff': [7.4763999999998e-05, 7.463900000000134e-05, 7.438899999999762e-05, 7.459699999999916e-05, 7.513900000000184e-05, 7.448599999999861e-05, 7.424999999999793e-05, 7.434699999999891e-05, 7.511100...</msg>
<status status="PASS" starttime="20201030 15:53:07.032" endtime="20201030 15:53:07.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.039" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.038" endtime="20201030 15:53:07.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.042" level="INFO">VALUE: [7.4763999999998e-05, 7.463900000000134e-05, 7.438899999999762e-05, 7.459699999999916e-05, 7.513900000000184e-05, 7.448599999999861e-05, 7.424999999999793e-05, 7.434699999999891e-05, 7.51110000000027e-05, 7.46249999999983e-05, 7.505600000000043e-05, 7.474999999999843e-05, 7.436199999999796e-05, 7.51249999999988e-05, 7.484699999999941e-05, 7.450000000000165e-05, 7.473600000000233e-05, 7.481999999999975e-05, 7.434699999999891e-05, 7.463800000000187e-05, 7.443000000000033e-05, 7.474999999999843e-05, 7.498599999999911e-05, 7.50830000000001e-05, 7.511099999999923e-05, 7.480499999999723e-05, 7.515300000000141e-05, 7.445899999999894e-05, 7.497199999999954e-05, 7.447299999999851e-05, 7.507e-05, 7.466700000000048e-05, 7.488900000000159e-05, 7.466700000000048e-05, 7.463900000000134e-05, 7.486200000000193e-05, 7.463800000000187e-05, 7.473600000000233e-05, 7.436099999999848e-05, 7.445800000000294e-05, 7.433299999999934e-05, 7.486099999999898e-05, 7.50830000000001e-05, 7.434699999999891e-05, 7.46110000000022e-05, 7.498599999999911e-05, 7.504200000000086e-05, 7.455599999999993e-05, 7.463899999999787e-05, 7.437499999999805e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.040" endtime="20201030 15:53:07.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.036" endtime="20201030 15:53:07.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.047" endtime="20201030 15:53:07.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.045" endtime="20201030 15:53:07.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.044" endtime="20201030 15:53:07.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.685" endtime="20201030 15:53:07.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.684" endtime="20201030 15:53:07.067"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.076" endtime="20201030 15:53:07.097"></status>
</kw>
<msg timestamp="20201030 15:53:07.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.075" endtime="20201030 15:53:07.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.098" endtime="20201030 15:53:07.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.101" endtime="20201030 15:53:07.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.072" endtime="20201030 15:53:07.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.070" endtime="20201030 15:53:07.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.110" endtime="20201030 15:53:07.396"></status>
</kw>
<msg timestamp="20201030 15:53:07.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020645694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020721056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.109" endtime="20201030 15:53:07.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020645694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020721056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.400" endtime="20201030 15:53:07.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.409" endtime="20201030 15:53:07.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.106" endtime="20201030 15:53:07.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.104" endtime="20201030 15:53:07.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.415" level="INFO">${RESULT} = [{'diff': 7.536200000000243e-05}, {'diff': 7.512500000000227e-05}, {'diff': 7.58189999999978e-05}, {'diff': 7.533299999999687e-05}, {'diff': 7.58050000000017e-05}, {'diff': 7.543000000000133e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:07.412" endtime="20201030 15:53:07.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.419" level="INFO">${ACCURACY} = {'diff': [7.536200000000243e-05, 7.512500000000227e-05, 7.58189999999978e-05, 7.533299999999687e-05, 7.58050000000017e-05, 7.543000000000133e-05, 7.568000000000158e-05, 7.51249999999988e-05, 7.5431000...</msg>
<status status="PASS" starttime="20201030 15:53:07.416" endtime="20201030 15:53:07.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.424" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.423" endtime="20201030 15:53:07.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.426" level="INFO">VALUE: [7.536200000000243e-05, 7.512500000000227e-05, 7.58189999999978e-05, 7.533299999999687e-05, 7.58050000000017e-05, 7.543000000000133e-05, 7.568000000000158e-05, 7.51249999999988e-05, 7.54310000000008e-05, 7.526400000000197e-05, 7.532000000000025e-05, 7.547200000000004e-05, 7.540300000000166e-05, 7.59310000000013e-05, 7.56249999999993e-05, 7.55700000000005e-05, 7.523600000000283e-05, 7.587499999999955e-05, 7.61249999999998e-05, 7.524999999999893e-05, 7.534699999999991e-05, 7.599999999999968e-05, 7.605499999999848e-05, 7.522199999999979e-05, 7.559700000000016e-05, 7.586099999999998e-05, 7.548599999999961e-05, 7.568100000000105e-05, 7.5763999999999e-05, 7.570900000000019e-05, 7.595900000000044e-05, 7.618100000000155e-05, 7.548599999999961e-05, 7.595800000000097e-05, 7.570900000000019e-05, 7.590300000000216e-05, 7.556900000000102e-05, 7.592999999999836e-05, 7.583300000000084e-05, 7.555499999999798e-05, 7.53050000000012e-05, 7.611100000000023e-05, 7.555599999999746e-05, 7.556900000000102e-05, 7.604199999999839e-05, 7.559799999999964e-05, 7.579200000000161e-05, 7.594500000000087e-05, 7.609800000000014e-05, 7.537499999999905e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.425" endtime="20201030 15:53:07.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.420" endtime="20201030 15:53:07.428"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.432" endtime="20201030 15:53:07.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.430" endtime="20201030 15:53:07.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.429" endtime="20201030 15:53:07.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.068" endtime="20201030 15:53:07.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.068" endtime="20201030 15:53:07.453"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.461" endtime="20201030 15:53:07.481"></status>
</kw>
<msg timestamp="20201030 15:53:07.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.460" endtime="20201030 15:53:07.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.483" endtime="20201030 15:53:07.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.485" endtime="20201030 15:53:07.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.457" endtime="20201030 15:53:07.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.455" endtime="20201030 15:53:07.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.494" endtime="20201030 15:53:07.780"></status>
</kw>
<msg timestamp="20201030 15:53:07.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.493" endtime="20201030 15:53:07.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.784" endtime="20201030 15:53:07.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.792" endtime="20201030 15:53:07.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.490" endtime="20201030 15:53:07.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.488" endtime="20201030 15:53:07.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.799" level="INFO">${RESULT} = [{'diff': 7.624999999999993e-05}, {'diff': 7.622300000000026e-05}, {'diff': 7.68189999999988e-05}, {'diff': 7.645800000000147e-05}, {'diff': 7.717999999999961e-05}, {'diff': 7.69440000000024e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:07.796" endtime="20201030 15:53:07.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.804" level="INFO">${ACCURACY} = {'diff': [7.624999999999993e-05, 7.622300000000026e-05, 7.68189999999988e-05, 7.645800000000147e-05, 7.717999999999961e-05, 7.69440000000024e-05, 7.700000000000068e-05, 7.694399999999893e-05, 7.655499...</msg>
<status status="PASS" starttime="20201030 15:53:07.800" endtime="20201030 15:53:07.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.808" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.807" endtime="20201030 15:53:07.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.811" level="INFO">VALUE: [7.624999999999993e-05, 7.622300000000026e-05, 7.68189999999988e-05, 7.645800000000147e-05, 7.717999999999961e-05, 7.69440000000024e-05, 7.700000000000068e-05, 7.694399999999893e-05, 7.655499999999898e-05, 7.659700000000116e-05, 7.648600000000061e-05, 7.636100000000048e-05, 7.648600000000061e-05, 7.648600000000061e-05, 7.652699999999985e-05, 7.677799999999957e-05, 7.644500000000137e-05, 7.686100000000098e-05, 7.632000000000125e-05, 7.717999999999961e-05, 7.717999999999961e-05, 7.637500000000005e-05, 7.692999999999936e-05, 7.62769999999996e-05, 7.725000000000093e-05, 7.704099999999992e-05, 7.719499999999865e-05, 7.622200000000079e-05, 7.71250000000008e-05, 7.719499999999865e-05, 7.686100000000098e-05, 7.661100000000073e-05, 7.624999999999993e-05, 7.651399999999975e-05, 7.634800000000039e-05, 7.616699999999851e-05, 7.694399999999893e-05, 7.717999999999961e-05, 7.637499999999658e-05, 7.629100000000263e-05, 7.691599999999979e-05, 7.659700000000116e-05, 7.65969999999977e-05, 7.64310000000018e-05, 7.643099999999833e-05, 7.680599999999871e-05, 7.655599999999846e-05, 7.648599999999714e-05, 7.61249999999998e-05, 7.668099999999858e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.809" endtime="20201030 15:53:07.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.805" endtime="20201030 15:53:07.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.816" endtime="20201030 15:53:07.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.814" endtime="20201030 15:53:07.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.813" endtime="20201030 15:53:07.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.453" endtime="20201030 15:53:07.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.453" endtime="20201030 15:53:07.836"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.845" endtime="20201030 15:53:07.865"></status>
</kw>
<msg timestamp="20201030 15:53:07.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.844" endtime="20201030 15:53:07.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.866" endtime="20201030 15:53:07.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.869" endtime="20201030 15:53:07.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.841" endtime="20201030 15:53:07.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.839" endtime="20201030 15:53:07.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.878" endtime="20201030 15:53:08.164"></status>
</kw>
<msg timestamp="20201030 15:53:08.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019982944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020060875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.876" endtime="20201030 15:53:08.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019982944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020060875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.169" endtime="20201030 15:53:08.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.177" endtime="20201030 15:53:08.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.874" endtime="20201030 15:53:08.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.872" endtime="20201030 15:53:08.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.183" level="INFO">${RESULT} = [{'diff': 7.793099999999983e-05}, {'diff': 7.791700000000026e-05}, {'diff': 7.79449999999994e-05}, {'diff': 7.797199999999907e-05}, {'diff': 7.751400000000075e-05}, {'diff': 7.769499999999915e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:08.180" endtime="20201030 15:53:08.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.188" level="INFO">${ACCURACY} = {'diff': [7.793099999999983e-05, 7.791700000000026e-05, 7.79449999999994e-05, 7.797199999999907e-05, 7.751400000000075e-05, 7.769499999999915e-05, 7.711100000000123e-05, 7.787500000000155e-05, 7.75699...</msg>
<status status="PASS" starttime="20201030 15:53:08.184" endtime="20201030 15:53:08.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.192" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.191" endtime="20201030 15:53:08.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.195" level="INFO">VALUE: [7.793099999999983e-05, 7.791700000000026e-05, 7.79449999999994e-05, 7.797199999999907e-05, 7.751400000000075e-05, 7.769499999999915e-05, 7.711100000000123e-05, 7.787500000000155e-05, 7.756999999999903e-05, 7.741600000000029e-05, 7.787499999999808e-05, 7.780500000000024e-05, 7.806900000000006e-05, 7.7764000000001e-05, 7.805500000000049e-05, 7.737499999999758e-05, 7.806900000000006e-05, 7.762499999999783e-05, 7.725000000000093e-05, 7.754199999999989e-05, 7.75700000000025e-05, 7.75969999999987e-05, 7.711100000000123e-05, 7.791599999999732e-05, 7.750000000000118e-05, 7.711100000000123e-05, 7.71380000000009e-05, 7.711099999999776e-05, 7.748600000000161e-05, 7.806900000000006e-05, 7.79579999999995e-05, 7.748599999999814e-05, 7.722199999999832e-05, 7.749999999999771e-05, 7.737500000000105e-05, 7.776399999999753e-05, 7.772199999999882e-05, 7.736100000000148e-05, 7.790299999999722e-05, 7.783399999999885e-05, 7.818100000000008e-05, 7.799999999999821e-05, 7.774999999999796e-05, 7.723699999999736e-05, 7.711099999999776e-05, 7.709700000000166e-05, 7.725000000000093e-05, 7.804099999999745e-05, 7.742999999999986e-05, 7.73189999999993e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.193" endtime="20201030 15:53:08.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.188" endtime="20201030 15:53:08.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.200" endtime="20201030 15:53:08.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.198" endtime="20201030 15:53:08.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.197" endtime="20201030 15:53:08.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.837" endtime="20201030 15:53:08.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.837" endtime="20201030 15:53:08.220"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.229" endtime="20201030 15:53:08.249"></status>
</kw>
<msg timestamp="20201030 15:53:08.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.227" endtime="20201030 15:53:08.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.250" endtime="20201030 15:53:08.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.253" endtime="20201030 15:53:08.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.225" endtime="20201030 15:53:08.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.223" endtime="20201030 15:53:08.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.262" endtime="20201030 15:53:08.548"></status>
</kw>
<msg timestamp="20201030 15:53:08.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020656806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020735708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.260" endtime="20201030 15:53:08.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020656806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020735708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.554" endtime="20201030 15:53:08.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.563" endtime="20201030 15:53:08.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.258" endtime="20201030 15:53:08.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.256" endtime="20201030 15:53:08.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.569" level="INFO">${RESULT} = [{'diff': 7.890199999999875e-05}, {'diff': 7.813900000000137e-05}, {'diff': 7.843000000000086e-05}, {'diff': 7.843100000000033e-05}, {'diff': 7.884799999999942e-05}, {'diff': 7.823600000000236e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:08.566" endtime="20201030 15:53:08.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.573" level="INFO">${ACCURACY} = {'diff': [7.890199999999875e-05, 7.813900000000137e-05, 7.843000000000086e-05, 7.843100000000033e-05, 7.884799999999942e-05, 7.823600000000236e-05, 7.882000000000028e-05, 7.862499999999883e-05, 7.8444...</msg>
<status status="PASS" starttime="20201030 15:53:08.570" endtime="20201030 15:53:08.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.578" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.577" endtime="20201030 15:53:08.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.581" level="INFO">VALUE: [7.890199999999875e-05, 7.813900000000137e-05, 7.843000000000086e-05, 7.843100000000033e-05, 7.884799999999942e-05, 7.823600000000236e-05, 7.882000000000028e-05, 7.862499999999883e-05, 7.84449999999999e-05, 7.893100000000083e-05, 7.912499999999933e-05, 7.899999999999921e-05, 7.862499999999883e-05, 7.908300000000063e-05, 7.919400000000118e-05, 7.915299999999847e-05, 7.883300000000037e-05, 7.899999999999921e-05, 7.879100000000167e-05, 7.899999999999921e-05, 7.89169999999978e-05, 7.86389999999984e-05, 7.84449999999999e-05, 7.912499999999933e-05, 7.882000000000028e-05, 7.854200000000089e-05, 7.902800000000182e-05, 7.823600000000236e-05, 7.855599999999699e-05, 7.874999999999896e-05, 7.898599999999964e-05, 7.880499999999777e-05, 7.848599999999914e-05, 7.869400000000068e-05, 7.848599999999914e-05, 7.848599999999914e-05, 7.856900000000056e-05, 7.899999999999921e-05, 7.880599999999724e-05, 7.841700000000076e-05, 7.904200000000139e-05, 7.900000000000268e-05, 7.861099999999926e-05, 7.836099999999901e-05, 7.89169999999978e-05, 7.84169999999973e-05, 7.894400000000093e-05, 7.845899999999947e-05, 7.904100000000192e-05, 7.866599999999807e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.579" endtime="20201030 15:53:08.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.574" endtime="20201030 15:53:08.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.586" endtime="20201030 15:53:08.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.585" endtime="20201030 15:53:08.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.583" endtime="20201030 15:53:08.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.221" endtime="20201030 15:53:08.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.221" endtime="20201030 15:53:08.607"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.615" endtime="20201030 15:53:08.635"></status>
</kw>
<msg timestamp="20201030 15:53:08.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.614" endtime="20201030 15:53:08.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.637" endtime="20201030 15:53:08.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.640" endtime="20201030 15:53:08.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.611" endtime="20201030 15:53:08.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.609" endtime="20201030 15:53:08.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.649" endtime="20201030 15:53:08.935"></status>
</kw>
<msg timestamp="20201030 15:53:08.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.647" endtime="20201030 15:53:08.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.939" endtime="20201030 15:53:08.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.947" endtime="20201030 15:53:08.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.644" endtime="20201030 15:53:08.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.643" endtime="20201030 15:53:08.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.954" level="INFO">${RESULT} = [{'diff': 7.949999999999971e-05}, {'diff': 7.968100000000158e-05}, {'diff': 7.970800000000125e-05}, {'diff': 7.937499999999958e-05}, {'diff': 7.994499999999793e-05}, {'diff': 7.938900000000262e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:08.951" endtime="20201030 15:53:08.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.959" level="INFO">${ACCURACY} = {'diff': [7.949999999999971e-05, 7.968100000000158e-05, 7.970800000000125e-05, 7.937499999999958e-05, 7.994499999999793e-05, 7.938900000000262e-05, 7.94450000000009e-05, 7.959800000000017e-05, 7.95970...</msg>
<status status="PASS" starttime="20201030 15:53:08.955" endtime="20201030 15:53:08.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.963" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.962" endtime="20201030 15:53:08.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.966" level="INFO">VALUE: [7.949999999999971e-05, 7.968100000000158e-05, 7.970800000000125e-05, 7.937499999999958e-05, 7.994499999999793e-05, 7.938900000000262e-05, 7.94450000000009e-05, 7.959800000000017e-05, 7.95970000000007e-05, 8.00979999999972e-05, 7.930600000000121e-05, 8.004099999999945e-05, 8.005499999999902e-05, 7.959699999999723e-05, 8.001399999999978e-05, 7.944400000000143e-05, 7.976399999999953e-05, 8.018099999999861e-05, 7.99450000000014e-05, 7.979199999999867e-05, 7.940299999999872e-05, 7.991700000000226e-05, 7.947200000000057e-05, 8.006899999999859e-05, 8.002799999999935e-05, 7.984800000000042e-05, 7.94169999999983e-05, 7.938899999999915e-05, 7.984700000000094e-05, 7.98190000000018e-05, 7.998600000000064e-05, 7.962499999999983e-05, 7.994399999999846e-05, 7.990299999999922e-05, 7.912499999999933e-05, 7.974999999999996e-05, 7.937499999999958e-05, 8.004199999999892e-05, 7.943100000000133e-05, 7.924999999999946e-05, 7.997299999999707e-05, 7.947200000000057e-05, 7.94169999999983e-05, 7.980500000000224e-05, 7.97909999999992e-05, 7.976399999999953e-05, 8.005500000000249e-05, 7.993099999999836e-05, 7.967999999999864e-05, 7.941700000000176e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.964" endtime="20201030 15:53:08.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.960" endtime="20201030 15:53:08.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.971" endtime="20201030 15:53:08.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.969" endtime="20201030 15:53:08.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.968" endtime="20201030 15:53:08.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.608" endtime="20201030 15:53:08.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.607" endtime="20201030 15:53:08.991"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.000" endtime="20201030 15:53:09.019"></status>
</kw>
<msg timestamp="20201030 15:53:09.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.999" endtime="20201030 15:53:09.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.021" endtime="20201030 15:53:09.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.023" endtime="20201030 15:53:09.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.996" endtime="20201030 15:53:09.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.994" endtime="20201030 15:53:09.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.032" endtime="20201030 15:53:09.321"></status>
</kw>
<msg timestamp="20201030 15:53:09.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02000925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020089778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:09.031" endtime="20201030 15:53:09.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02000925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020089778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:09.325" endtime="20201030 15:53:09.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.333" endtime="20201030 15:53:09.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.028" endtime="20201030 15:53:09.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.027" endtime="20201030 15:53:09.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.340" level="INFO">${RESULT} = [{'diff': 8.052799999999985e-05}, {'diff': 8.07780000000001e-05}, {'diff': 8.076400000000053e-05}, {'diff': 8.023600000000089e-05}, {'diff': 8.055599999999899e-05}, {'diff': 8.06109999999978e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:09.337" endtime="20201030 15:53:09.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:09.344" level="INFO">${ACCURACY} = {'diff': [8.052799999999985e-05, 8.07780000000001e-05, 8.076400000000053e-05, 8.023600000000089e-05, 8.055599999999899e-05, 8.06109999999978e-05, 8.066699999999954e-05, 8.120799999999928e-05, 8.086199...</msg>
<status status="PASS" starttime="20201030 15:53:09.341" endtime="20201030 15:53:09.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.348" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:53:09.347" endtime="20201030 15:53:09.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.351" level="INFO">VALUE: [8.052799999999985e-05, 8.07780000000001e-05, 8.076400000000053e-05, 8.023600000000089e-05, 8.055599999999899e-05, 8.06109999999978e-05, 8.066699999999954e-05, 8.120799999999928e-05, 8.086199999999752e-05, 8.11390000000009e-05, 8.105500000000002e-05, 8.094499999999893e-05, 8.031899999999884e-05, 8.104100000000045e-05, 8.05970000000017e-05, 8.069399999999921e-05, 8.101400000000078e-05, 8.104199999999992e-05, 8.119499999999918e-05, 8.045799999999853e-05, 8.038900000000015e-05, 8.070899999999825e-05, 8.084799999999795e-05, 8.088800000000118e-05, 8.07369999999974e-05, 8.102800000000035e-05, 8.070799999999878e-05, 8.102700000000088e-05, 8.06390000000004e-05, 8.06390000000004e-05, 8.100000000000121e-05, 8.02779999999996e-05, 8.074999999999749e-05, 8.119399999999971e-05, 8.056999999999856e-05, 8.051400000000028e-05, 8.037500000000058e-05, 8.112499999999787e-05, 8.102800000000035e-05, 8.087499999999762e-05, 8.066699999999954e-05, 8.063800000000093e-05, 8.102800000000035e-05, 8.067999999999964e-05, 8.106899999999959e-05, 8.092999999999989e-05, 8.037500000000058e-05, 8.01389999999999e-05, 8.083399999999838e-05, 8.098599999999817e-05]</msg>
<status status="PASS" starttime="20201030 15:53:09.350" endtime="20201030 15:53:09.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.345" endtime="20201030 15:53:09.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.356" endtime="20201030 15:53:09.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.354" endtime="20201030 15:53:09.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.353" endtime="20201030 15:53:09.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.992" endtime="20201030 15:53:09.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.992" endtime="20201030 15:53:09.377"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.385" endtime="20201030 15:53:09.406"></status>
</kw>
<msg timestamp="20201030 15:53:09.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.384" endtime="20201030 15:53:09.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.407" endtime="20201030 15:53:09.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.410" endtime="20201030 15:53:09.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.381" endtime="20201030 15:53:09.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.379" endtime="20201030 15:53:09.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.419" endtime="20201030 15:53:09.706"></status>
</kw>
<msg timestamp="20201030 15:53:09.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020462111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020543875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.417" endtime="20201030 15:53:09.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020462111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020543875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.711" endtime="20201030 15:53:09.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.731" endtime="20201030 15:53:09.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.415" endtime="20201030 15:53:09.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.413" endtime="20201030 15:53:09.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.746" level="INFO">${RESULT} = [{'diff': 8.176399999999806e-05}, {'diff': 8.112499999999787e-05}, {'diff': 8.144499999999943e-05}, {'diff': 8.112500000000133e-05}, {'diff': 8.205600000000049e-05}, {'diff': 8.201399999999831e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:09.739" endtime="20201030 15:53:09.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:09.755" level="INFO">${ACCURACY} = {'diff': [8.176399999999806e-05, 8.112499999999787e-05, 8.144499999999943e-05, 8.112500000000133e-05, 8.205600000000049e-05, 8.201399999999831e-05, 8.180600000000024e-05, 8.105599999999949e-05, 8.2181...</msg>
<status status="PASS" starttime="20201030 15:53:09.748" endtime="20201030 15:53:09.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.765" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:53:09.763" endtime="20201030 15:53:09.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.771" level="INFO">VALUE: [8.176399999999806e-05, 8.112499999999787e-05, 8.144499999999943e-05, 8.112500000000133e-05, 8.205600000000049e-05, 8.201399999999831e-05, 8.180600000000024e-05, 8.105599999999949e-05, 8.218100000000061e-05, 8.130600000000321e-05, 8.124999999999799e-05, 8.205500000000102e-05, 8.155500000000052e-05, 8.144499999999943e-05, 8.198600000000264e-05, 8.134699999999898e-05, 8.123599999999842e-05, 8.18329999999999e-05, 8.172199999999935e-05, 8.218100000000061e-05, 8.184699999999948e-05, 8.186100000000252e-05, 8.147200000000257e-05, 8.105599999999949e-05, 8.195800000000003e-05, 8.134799999999845e-05, 8.149999999999824e-05, 8.123600000000189e-05, 8.134699999999898e-05, 8.174999999999849e-05, 8.212499999999887e-05, 8.17780000000011e-05, 8.13329999999994e-05, 8.161100000000227e-05, 8.137500000000158e-05, 8.14170000000003e-05, 8.136099999999855e-05, 8.212500000000234e-05, 8.131899999999984e-05, 8.180500000000077e-05, 8.194400000000046e-05, 8.216700000000104e-05, 8.218000000000114e-05, 8.181900000000034e-05, 8.12780000000006e-05, 8.119399999999971e-05, 8.154100000000095e-05, 8.138900000000115e-05, 8.179200000000067e-05, 8.150000000000171e-05]</msg>
<status status="PASS" starttime="20201030 15:53:09.768" endtime="20201030 15:53:09.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.757" endtime="20201030 15:53:09.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.790" endtime="20201030 15:53:09.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.786" endtime="20201030 15:53:09.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.782" endtime="20201030 15:53:09.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.377" endtime="20201030 15:53:09.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.377" endtime="20201030 15:53:09.815"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.826" endtime="20201030 15:53:09.846"></status>
</kw>
<msg timestamp="20201030 15:53:09.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.825" endtime="20201030 15:53:09.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.848" endtime="20201030 15:53:09.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.851" endtime="20201030 15:53:09.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.822" endtime="20201030 15:53:09.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.819" endtime="20201030 15:53:09.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.860" endtime="20201030 15:53:10.146"></status>
</kw>
<msg timestamp="20201030 15:53:10.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025446417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025529625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.858" endtime="20201030 15:53:10.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025446417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025529625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.151" endtime="20201030 15:53:10.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.160" endtime="20201030 15:53:10.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.856" endtime="20201030 15:53:10.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.854" endtime="20201030 15:53:10.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.166" level="INFO">${RESULT} = [{'diff': 8.320800000000128e-05}, {'diff': 8.302799999999888e-05}, {'diff': 8.282000000000081e-05}, {'diff': 8.268099999999765e-05}, {'diff': 8.248599999999967e-05}, {'diff': 8.302699999999941e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:10.163" endtime="20201030 15:53:10.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.171" level="INFO">${ACCURACY} = {'diff': [8.320800000000128e-05, 8.302799999999888e-05, 8.282000000000081e-05, 8.268099999999765e-05, 8.248599999999967e-05, 8.302699999999941e-05, 8.244500000000043e-05, 8.255500000000152e-05, 8.2499...</msg>
<status status="PASS" starttime="20201030 15:53:10.167" endtime="20201030 15:53:10.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.176" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.175" endtime="20201030 15:53:10.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.179" level="INFO">VALUE: [8.320800000000128e-05, 8.302799999999888e-05, 8.282000000000081e-05, 8.268099999999765e-05, 8.248599999999967e-05, 8.302699999999941e-05, 8.244500000000043e-05, 8.255500000000152e-05, 8.249999999999924e-05, 8.280600000000124e-05, 8.299999999999974e-05, 8.319400000000171e-05, 8.26529999999985e-05, 8.26659999999986e-05, 8.218100000000061e-05, 8.274999999999949e-05, 8.230599999999727e-05, 8.252800000000185e-05, 8.283400000000038e-05, 8.234699999999998e-05, 8.312499999999987e-05, 8.274999999999949e-05, 8.311199999999977e-05, 8.312499999999987e-05, 8.284799999999995e-05, 8.206899999999712e-05, 8.252699999999891e-05, 8.26109999999998e-05, 8.276399999999906e-05, 8.243100000000086e-05, 8.229200000000117e-05, 8.255499999999805e-05, 8.219399999999724e-05, 8.248599999999967e-05, 8.274999999999949e-05, 8.308400000000063e-05, 8.243100000000086e-05, 8.309699999999726e-05, 8.268000000000164e-05, 8.269400000000121e-05, 8.243000000000139e-05, 8.236099999999955e-05, 8.293000000000189e-05, 8.292999999999842e-05, 8.224999999999899e-05, 8.27780000000021e-05, 8.318099999999815e-05, 8.238900000000215e-05, 8.226399999999856e-05, 8.30980000000002e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.177" endtime="20201030 15:53:10.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.172" endtime="20201030 15:53:10.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.184" endtime="20201030 15:53:10.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.182" endtime="20201030 15:53:10.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.181" endtime="20201030 15:53:10.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.816" endtime="20201030 15:53:10.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.815" endtime="20201030 15:53:10.205"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.214" endtime="20201030 15:53:10.234"></status>
</kw>
<msg timestamp="20201030 15:53:10.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.212" endtime="20201030 15:53:10.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.236" endtime="20201030 15:53:10.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.238" endtime="20201030 15:53:10.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.210" endtime="20201030 15:53:10.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.207" endtime="20201030 15:53:10.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.248" endtime="20201030 15:53:10.535"></status>
</kw>
<msg timestamp="20201030 15:53:10.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020352722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.246" endtime="20201030 15:53:10.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020352722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.539" endtime="20201030 15:53:10.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.548" endtime="20201030 15:53:10.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.243" endtime="20201030 15:53:10.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.242" endtime="20201030 15:53:10.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.555" level="INFO">${RESULT} = [{'diff': 8.326399999999956e-05}, {'diff': 8.373599999999745e-05}, {'diff': 8.394500000000193e-05}, {'diff': 8.354200000000242e-05}, {'diff': 8.330599999999827e-05}, {'diff': 8.350000000000024e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:10.552" endtime="20201030 15:53:10.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.559" level="INFO">${ACCURACY} = {'diff': [8.326399999999956e-05, 8.373599999999745e-05, 8.394500000000193e-05, 8.354200000000242e-05, 8.330599999999827e-05, 8.350000000000024e-05, 8.405599999999902e-05, 8.407000000000206e-05, 8.3680...</msg>
<status status="PASS" starttime="20201030 15:53:10.556" endtime="20201030 15:53:10.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.564" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.563" endtime="20201030 15:53:10.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.566" level="INFO">VALUE: [8.326399999999956e-05, 8.373599999999745e-05, 8.394500000000193e-05, 8.354200000000242e-05, 8.330599999999827e-05, 8.350000000000024e-05, 8.405599999999902e-05, 8.407000000000206e-05, 8.368099999999865e-05, 8.420800000000228e-05, 8.394399999999899e-05, 8.352799999999938e-05, 8.400000000000074e-05, 8.388900000000019e-05, 8.398600000000117e-05, 8.331899999999837e-05, 8.33049999999988e-05, 8.350000000000024e-05, 8.354199999999895e-05, 8.326399999999956e-05, 8.387500000000062e-05, 8.405600000000249e-05, 8.336100000000055e-05, 8.329200000000217e-05, 8.357000000000156e-05, 8.41119999999973e-05, 8.394399999999899e-05, 8.33330000000014e-05, 8.327700000000313e-05, 8.337500000000012e-05, 8.36110000000008e-05, 8.367999999999917e-05, 8.36529999999995e-05, 8.386100000000105e-05, 8.324999999999999e-05, 8.338899999999969e-05, 8.340299999999926e-05, 8.336099999999708e-05, 8.338899999999969e-05, 8.324999999999999e-05, 8.388900000000019e-05, 8.341599999999935e-05, 8.363899999999994e-05, 8.399999999999727e-05, 8.359700000000123e-05, 8.377700000000016e-05, 8.324999999999999e-05, 8.340300000000272e-05, 8.362500000000037e-05, 8.324999999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.565" endtime="20201030 15:53:10.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.560" endtime="20201030 15:53:10.568"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.572" endtime="20201030 15:53:10.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.570" endtime="20201030 15:53:10.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.569" endtime="20201030 15:53:10.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.206" endtime="20201030 15:53:10.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.205" endtime="20201030 15:53:10.593"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.602" endtime="20201030 15:53:10.623"></status>
</kw>
<msg timestamp="20201030 15:53:10.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.600" endtime="20201030 15:53:10.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.625" endtime="20201030 15:53:10.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.627" endtime="20201030 15:53:10.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.597" endtime="20201030 15:53:10.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.595" endtime="20201030 15:53:10.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.637" endtime="20201030 15:53:10.923"></status>
</kw>
<msg timestamp="20201030 15:53:10.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.635" endtime="20201030 15:53:10.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.928" endtime="20201030 15:53:10.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.936" endtime="20201030 15:53:10.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.633" endtime="20201030 15:53:10.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.631" endtime="20201030 15:53:10.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.943" level="INFO">${RESULT} = [{'diff': 8.490300000000076e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.427700000000066e-05}, {'diff': 8.486100000000205e-05}, {'diff': 8.48050000000003e-05}, {'diff': 8.454100000000048e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:10.940" endtime="20201030 15:53:10.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.947" level="INFO">${ACCURACY} = {'diff': [8.490300000000076e-05, 8.433299999999894e-05, 8.427700000000066e-05, 8.486100000000205e-05, 8.48050000000003e-05, 8.454100000000048e-05, 8.493000000000042e-05, 8.49729999999986e-05, 8.423600...</msg>
<status status="PASS" starttime="20201030 15:53:10.944" endtime="20201030 15:53:10.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.952" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.951" endtime="20201030 15:53:10.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.955" level="INFO">VALUE: [8.490300000000076e-05, 8.433299999999894e-05, 8.427700000000066e-05, 8.486100000000205e-05, 8.48050000000003e-05, 8.454100000000048e-05, 8.493000000000042e-05, 8.49729999999986e-05, 8.423600000000142e-05, 8.426400000000056e-05, 8.494499999999947e-05, 8.470800000000278e-05, 8.408400000000163e-05, 8.466700000000008e-05, 8.474999999999802e-05, 8.518100000000015e-05, 8.51660000000011e-05, 8.493000000000042e-05, 8.513899999999797e-05, 8.495799999999956e-05, 8.493000000000042e-05, 8.518000000000067e-05, 8.437500000000112e-05, 8.426400000000056e-05, 8.505600000000002e-05, 8.43469999999985e-05, 8.438900000000069e-05, 8.430599999999927e-05, 8.434799999999798e-05, 8.44859999999982e-05, 8.462500000000137e-05, 8.462500000000137e-05, 8.454100000000048e-05, 8.442999999999992e-05, 8.423600000000142e-05, 8.437500000000112e-05, 8.512500000000187e-05, 8.465299999999704e-05, 8.499999999999827e-05, 8.504200000000045e-05, 8.508399999999916e-05, 8.437500000000112e-05, 8.455599999999952e-05, 8.47920000000002e-05, 8.505600000000002e-05, 8.454199999999995e-05, 8.502699999999794e-05, 8.487500000000162e-05, 8.488900000000119e-05, 8.499999999999827e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.953" endtime="20201030 15:53:10.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.948" endtime="20201030 15:53:10.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.961" endtime="20201030 15:53:10.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.959" endtime="20201030 15:53:10.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.958" endtime="20201030 15:53:10.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.593" endtime="20201030 15:53:10.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.593" endtime="20201030 15:53:10.982"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.991" endtime="20201030 15:53:11.011"></status>
</kw>
<msg timestamp="20201030 15:53:11.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.989" endtime="20201030 15:53:11.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.012" endtime="20201030 15:53:11.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.015" endtime="20201030 15:53:11.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.986" endtime="20201030 15:53:11.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.984" endtime="20201030 15:53:11.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.025" endtime="20201030 15:53:11.310"></status>
</kw>
<msg timestamp="20201030 15:53:11.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020318028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.023" endtime="20201030 15:53:11.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020318028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.314" endtime="20201030 15:53:11.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.323" endtime="20201030 15:53:11.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.020" endtime="20201030 15:53:11.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.018" endtime="20201030 15:53:11.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.330" level="INFO">${RESULT} = [{'diff': 8.604100000000198e-05}, {'diff': 8.540199999999831e-05}, {'diff': 8.568000000000117e-05}, {'diff': 8.542999999999745e-05}, {'diff': 8.56249999999989e-05}, {'diff': 8.56110000000028e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:11.327" endtime="20201030 15:53:11.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.335" level="INFO">${ACCURACY} = {'diff': [8.604100000000198e-05, 8.540199999999831e-05, 8.568000000000117e-05, 8.542999999999745e-05, 8.56249999999989e-05, 8.56110000000028e-05, 8.601399999999884e-05, 8.54729999999991e-05, 8.5833999...</msg>
<status status="PASS" starttime="20201030 15:53:11.331" endtime="20201030 15:53:11.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.340" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.339" endtime="20201030 15:53:11.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.342" level="INFO">VALUE: [8.604100000000198e-05, 8.540199999999831e-05, 8.568000000000117e-05, 8.542999999999745e-05, 8.56249999999989e-05, 8.56110000000028e-05, 8.601399999999884e-05, 8.54729999999991e-05, 8.583399999999991e-05, 8.623599999999995e-05, 8.580600000000077e-05, 8.526399999999809e-05, 8.573599999999945e-05, 8.54310000000004e-05, 8.541599999999788e-05, 8.554200000000095e-05, 8.619400000000124e-05, 8.54859999999992e-05, 8.58050000000013e-05, 8.56660000000016e-05, 8.525000000000199e-05, 8.604199999999798e-05, 8.563900000000194e-05, 8.530600000000027e-05, 8.529199999999723e-05, 8.590299999999829e-05, 8.545899999999954e-05, 8.513899999999797e-05, 8.604200000000145e-05, 8.575000000000249e-05, 8.56799999999977e-05, 8.541600000000135e-05, 8.54310000000004e-05, 8.56249999999989e-05, 8.599999999999927e-05, 8.605500000000155e-05, 8.613899999999897e-05, 8.53050000000008e-05, 8.531900000000037e-05, 8.619500000000072e-05, 8.568100000000065e-05, 8.599999999999927e-05, 8.557000000000009e-05, 8.61249999999994e-05, 8.558300000000019e-05, 8.523599999999895e-05, 8.538899999999822e-05, 8.568000000000117e-05, 8.569400000000074e-05, 8.558300000000019e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.341" endtime="20201030 15:53:11.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.336" endtime="20201030 15:53:11.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.348" endtime="20201030 15:53:11.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.346" endtime="20201030 15:53:11.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.345" endtime="20201030 15:53:11.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.982" endtime="20201030 15:53:11.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.982" endtime="20201030 15:53:11.369"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.378" endtime="20201030 15:53:11.397"></status>
</kw>
<msg timestamp="20201030 15:53:11.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.376" endtime="20201030 15:53:11.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.399" endtime="20201030 15:53:11.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.402" endtime="20201030 15:53:11.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.373" endtime="20201030 15:53:11.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.371" endtime="20201030 15:53:11.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.411" endtime="20201030 15:53:11.697"></status>
</kw>
<msg timestamp="20201030 15:53:11.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020427056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020513528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.409" endtime="20201030 15:53:11.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020427056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020513528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.702" endtime="20201030 15:53:11.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.711" endtime="20201030 15:53:11.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.407" endtime="20201030 15:53:11.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.405" endtime="20201030 15:53:11.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.717" level="INFO">${RESULT} = [{'diff': 8.647200000000063e-05}, {'diff': 8.718000000000267e-05}, {'diff': 8.687500000000015e-05}, {'diff': 8.622200000000038e-05}, {'diff': 8.637499999999965e-05}, {'diff': 8.619400000000124e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:11.714" endtime="20201030 15:53:11.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.722" level="INFO">${ACCURACY} = {'diff': [8.647200000000063e-05, 8.718000000000267e-05, 8.687500000000015e-05, 8.622200000000038e-05, 8.637499999999965e-05, 8.619400000000124e-05, 8.666700000000208e-05, 8.61249999999994e-05, 8.64310...</msg>
<status status="PASS" starttime="20201030 15:53:11.718" endtime="20201030 15:53:11.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.726" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.725" endtime="20201030 15:53:11.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.729" level="INFO">VALUE: [8.647200000000063e-05, 8.718000000000267e-05, 8.687500000000015e-05, 8.622200000000038e-05, 8.637499999999965e-05, 8.619400000000124e-05, 8.666700000000208e-05, 8.61249999999994e-05, 8.64310000000014e-05, 8.687500000000015e-05, 8.643000000000192e-05, 8.629199999999823e-05, 8.701399999999984e-05, 8.705499999999908e-05, 8.680499999999883e-05, 8.637499999999965e-05, 8.63470000000005e-05, 8.680600000000177e-05, 8.700000000000027e-05, 8.680600000000177e-05, 8.71799999999992e-05, 8.66249999999999e-05, 8.700000000000027e-05, 8.624999999999952e-05, 8.690199999999981e-05, 8.715200000000006e-05, 8.673600000000045e-05, 8.629099999999876e-05, 8.66799999999987e-05, 8.68059999999983e-05, 8.624999999999952e-05, 8.655600000000152e-05, 8.687500000000015e-05, 8.629199999999823e-05, 8.64449999999975e-05, 8.66669999999986e-05, 8.63470000000005e-05, 8.626399999999909e-05, 8.637499999999965e-05, 8.706899999999865e-05, 8.627800000000213e-05, 8.633299999999747e-05, 8.659700000000076e-05, 8.63189999999979e-05, 8.626399999999909e-05, 8.642999999999845e-05, 8.636100000000008e-05, 8.624999999999952e-05, 8.649999999999977e-05, 8.651399999999934e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.727" endtime="20201030 15:53:11.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.723" endtime="20201030 15:53:11.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.734" endtime="20201030 15:53:11.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.733" endtime="20201030 15:53:11.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.731" endtime="20201030 15:53:11.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.369" endtime="20201030 15:53:11.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.369" endtime="20201030 15:53:11.755"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.764" endtime="20201030 15:53:11.785"></status>
</kw>
<msg timestamp="20201030 15:53:11.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.763" endtime="20201030 15:53:11.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.787" endtime="20201030 15:53:11.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.789" endtime="20201030 15:53:11.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.760" endtime="20201030 15:53:11.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.758" endtime="20201030 15:53:11.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.799" endtime="20201030 15:53:12.085"></status>
</kw>
<msg timestamp="20201030 15:53:12.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021285069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021372778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.797" endtime="20201030 15:53:12.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021285069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021372778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.089" endtime="20201030 15:53:12.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.098" endtime="20201030 15:53:12.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.794" endtime="20201030 15:53:12.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.793" endtime="20201030 15:53:12.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.105" level="INFO">${RESULT} = [{'diff': 8.770899999999832e-05}, {'diff': 8.818099999999968e-05}, {'diff': 8.730600000000227e-05}, {'diff': 8.763800000000099e-05}, {'diff': 8.74999999999973e-05}, {'diff': 8.713899999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:12.102" endtime="20201030 15:53:12.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.109" level="INFO">${ACCURACY} = {'diff': [8.770899999999832e-05, 8.818099999999968e-05, 8.730600000000227e-05, 8.763800000000099e-05, 8.74999999999973e-05, 8.713899999999997e-05, 8.79999999999978e-05, 8.73189999999989e-05, 8.7943999...</msg>
<status status="PASS" starttime="20201030 15:53:12.106" endtime="20201030 15:53:12.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.114" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.113" endtime="20201030 15:53:12.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.117" level="INFO">VALUE: [8.770899999999832e-05, 8.818099999999968e-05, 8.730600000000227e-05, 8.763800000000099e-05, 8.74999999999973e-05, 8.713899999999997e-05, 8.79999999999978e-05, 8.73189999999989e-05, 8.794399999999952e-05, 8.774999999999755e-05, 8.811100000000183e-05, 8.780499999999983e-05, 8.818099999999968e-05, 8.737500000000065e-05, 8.76250000000009e-05, 8.819499999999925e-05, 8.723599999999748e-05, 8.81670000000001e-05, 8.761099999999786e-05, 8.787500000000115e-05, 8.81800000000002e-05, 8.711100000000083e-05, 8.794399999999952e-05, 8.722200000000138e-05, 8.71250000000004e-05, 8.725000000000052e-05, 8.779199999999973e-05, 8.727799999999966e-05, 8.750000000000077e-05, 8.772199999999841e-05, 8.788900000000072e-05, 8.775000000000102e-05, 8.750000000000077e-05, 8.76799999999997e-05, 8.81250000000014e-05, 8.794399999999952e-05, 8.791600000000038e-05, 8.71250000000004e-05, 8.774999999999755e-05, 8.791699999999986e-05, 8.800000000000127e-05, 8.806899999999965e-05, 8.819499999999925e-05, 8.744400000000249e-05, 8.752799999999991e-05, 8.806999999999912e-05, 8.71250000000004e-05, 8.795799999999909e-05, 8.809800000000173e-05, 8.786100000000158e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.115" endtime="20201030 15:53:12.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.110" endtime="20201030 15:53:12.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.123" endtime="20201030 15:53:12.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.121" endtime="20201030 15:53:12.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.120" endtime="20201030 15:53:12.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.756" endtime="20201030 15:53:12.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.755" endtime="20201030 15:53:12.143"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.153" endtime="20201030 15:53:12.173"></status>
</kw>
<msg timestamp="20201030 15:53:12.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.151" endtime="20201030 15:53:12.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.174" endtime="20201030 15:53:12.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.177" endtime="20201030 15:53:12.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.148" endtime="20201030 15:53:12.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.146" endtime="20201030 15:53:12.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.186" endtime="20201030 15:53:12.473"></status>
</kw>
<msg timestamp="20201030 15:53:12.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.185" endtime="20201030 15:53:12.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.477" endtime="20201030 15:53:12.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.486" endtime="20201030 15:53:12.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.182" endtime="20201030 15:53:12.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.180" endtime="20201030 15:53:12.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.493" level="INFO">${RESULT} = [{'diff': 8.851399999999787e-05}, {'diff': 8.831900000000337e-05}, {'diff': 8.908300000000022e-05}, {'diff': 8.893000000000095e-05}, {'diff': 8.848599999999873e-05}, {'diff': 8.875000000000202e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:12.489" endtime="20201030 15:53:12.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.498" level="INFO">${ACCURACY} = {'diff': [8.851399999999787e-05, 8.831900000000337e-05, 8.908300000000022e-05, 8.893000000000095e-05, 8.848599999999873e-05, 8.875000000000202e-05, 8.851399999999787e-05, 8.880499999999736e-05, 8.9125...</msg>
<status status="PASS" starttime="20201030 15:53:12.494" endtime="20201030 15:53:12.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.503" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.502" endtime="20201030 15:53:12.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.505" level="INFO">VALUE: [8.851399999999787e-05, 8.831900000000337e-05, 8.908300000000022e-05, 8.893000000000095e-05, 8.848599999999873e-05, 8.875000000000202e-05, 8.851399999999787e-05, 8.880499999999736e-05, 8.91250000000024e-05, 8.873600000000245e-05, 8.874999999999855e-05, 8.865299999999757e-05, 8.920900000000329e-05, 8.904200000000098e-05, 8.907000000000012e-05, 8.823599999999848e-05, 8.856900000000015e-05, 8.909699999999979e-05, 8.824999999999805e-05, 8.869499999999975e-05, 8.898599999999923e-05, 8.843000000000045e-05, 8.89999999999988e-05, 8.918100000000068e-05, 8.876400000000159e-05, 8.836100000000208e-05, 8.918099999999721e-05, 8.825000000000152e-05, 8.916699999999764e-05, 8.861199999999833e-05, 8.891700000000086e-05, 8.843000000000045e-05, 8.901399999999837e-05, 8.877799999999769e-05, 8.904100000000151e-05, 8.908299999999675e-05, 8.844400000000002e-05, 8.884699999999954e-05, 8.901400000000184e-05, 8.901400000000184e-05, 8.897299999999914e-05, 8.904200000000098e-05, 8.833400000000241e-05, 8.861099999999886e-05, 8.881899999999693e-05, 8.917999999999773e-05, 8.911099999999936e-05, 8.873599999999898e-05, 8.830500000000033e-05, 8.862499999999843e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.504" endtime="20201030 15:53:12.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.499" endtime="20201030 15:53:12.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.511" endtime="20201030 15:53:12.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.509" endtime="20201030 15:53:12.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.508" endtime="20201030 15:53:12.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.144" endtime="20201030 15:53:12.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.144" endtime="20201030 15:53:12.531"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.540" endtime="20201030 15:53:12.561"></status>
</kw>
<msg timestamp="20201030 15:53:12.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.539" endtime="20201030 15:53:12.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.562" endtime="20201030 15:53:12.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.565" endtime="20201030 15:53:12.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.536" endtime="20201030 15:53:12.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.534" endtime="20201030 15:53:12.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.574" endtime="20201030 15:53:12.862"></status>
</kw>
<msg timestamp="20201030 15:53:12.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020209097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.573" endtime="20201030 15:53:12.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020209097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.867" endtime="20201030 15:53:12.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.875" endtime="20201030 15:53:12.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.570" endtime="20201030 15:53:12.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.568" endtime="20201030 15:53:12.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.882" level="INFO">${RESULT} = [{'diff': 9.011100000000036e-05}, {'diff': 8.998600000000023e-05}, {'diff': 8.967999999999823e-05}, {'diff': 8.924999999999905e-05}, {'diff': 8.979100000000226e-05}, {'diff': 8.998600000000023e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:12.879" endtime="20201030 15:53:12.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.887" level="INFO">${ACCURACY} = {'diff': [9.011100000000036e-05, 8.998600000000023e-05, 8.967999999999823e-05, 8.924999999999905e-05, 8.979100000000226e-05, 8.998600000000023e-05, 8.962499999999943e-05, 8.954200000000148e-05, 8.9931...</msg>
<status status="PASS" starttime="20201030 15:53:12.883" endtime="20201030 15:53:12.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.891" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.890" endtime="20201030 15:53:12.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.894" level="INFO">VALUE: [9.011100000000036e-05, 8.998600000000023e-05, 8.967999999999823e-05, 8.924999999999905e-05, 8.979100000000226e-05, 8.998600000000023e-05, 8.962499999999943e-05, 8.954200000000148e-05, 8.993100000000143e-05, 9.004100000000251e-05, 8.93060000000008e-05, 8.982000000000087e-05, 9.005599999999808e-05, 8.940200000000231e-05, 9.020800000000134e-05, 8.981899999999793e-05, 9.005499999999861e-05, 8.956899999999768e-05, 9.005600000000155e-05, 8.930499999999786e-05, 8.951399999999887e-05, 8.945800000000059e-05, 8.974999999999955e-05, 8.962499999999943e-05, 8.912499999999893e-05, 8.937500000000265e-05, 8.987499999999968e-05, 8.99869999999997e-05, 8.963799999999952e-05, 8.9638999999999e-05, 8.922199999999991e-05, 9.005499999999861e-05, 8.972200000000041e-05, 8.980499999999836e-05, 8.980500000000183e-05, 8.911100000000283e-05, 8.957000000000062e-05, 8.925000000000252e-05, 8.924999999999905e-05, 8.937499999999918e-05, 8.932000000000037e-05, 8.96670000000016e-05, 8.983300000000097e-05, 8.956899999999768e-05, 8.934700000000004e-05, 8.944400000000102e-05, 8.927799999999819e-05, 9.001399999999937e-05, 9.004100000000251e-05, 8.937500000000265e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.893" endtime="20201030 15:53:12.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.888" endtime="20201030 15:53:12.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.899" endtime="20201030 15:53:12.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.898" endtime="20201030 15:53:12.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.896" endtime="20201030 15:53:12.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.532" endtime="20201030 15:53:12.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.532" endtime="20201030 15:53:12.920"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.929" endtime="20201030 15:53:12.951"></status>
</kw>
<msg timestamp="20201030 15:53:12.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.928" endtime="20201030 15:53:12.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.952" endtime="20201030 15:53:12.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.955" endtime="20201030 15:53:12.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.925" endtime="20201030 15:53:12.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.923" endtime="20201030 15:53:12.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.964" endtime="20201030 15:53:13.250"></status>
</kw>
<msg timestamp="20201030 15:53:13.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021114833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021205667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.963" endtime="20201030 15:53:13.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021114833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021205667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.255" endtime="20201030 15:53:13.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.263" endtime="20201030 15:53:13.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.960" endtime="20201030 15:53:13.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.958" endtime="20201030 15:53:13.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.270" level="INFO">${RESULT} = [{'diff': 9.083400000000144e-05}, {'diff': 9.037500000000018e-05}, {'diff': 9.03190000000019e-05}, {'diff': 9.074999999999708e-05}, {'diff': 9.094400000000252e-05}, {'diff': 9.08329999999985e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:13.267" endtime="20201030 15:53:13.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.274" level="INFO">${ACCURACY} = {'diff': [9.083400000000144e-05, 9.037500000000018e-05, 9.03190000000019e-05, 9.074999999999708e-05, 9.094400000000252e-05, 9.08329999999985e-05, 9.094399999999905e-05, 9.043000000000245e-05, 9.042999...</msg>
<status status="PASS" starttime="20201030 15:53:13.271" endtime="20201030 15:53:13.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.279" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.278" endtime="20201030 15:53:13.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.282" level="INFO">VALUE: [9.083400000000144e-05, 9.037500000000018e-05, 9.03190000000019e-05, 9.074999999999708e-05, 9.094400000000252e-05, 9.08329999999985e-05, 9.094399999999905e-05, 9.043000000000245e-05, 9.042999999999898e-05, 9.05000000000003e-05, 9.093099999999896e-05, 9.043100000000193e-05, 9.068100000000218e-05, 9.082000000000187e-05, 9.047200000000116e-05, 9.05130000000004e-05, 9.065299999999957e-05, 9.119400000000277e-05, 9.023600000000048e-05, 9.104100000000004e-05, 9.044399999999855e-05, 9.045800000000159e-05, 9.03190000000019e-05, 9.106999999999865e-05, 9.047199999999769e-05, 9.023600000000048e-05, 9.048600000000073e-05, 9.093100000000243e-05, 9.112500000000093e-05, 9.061100000000086e-05, 9.079199999999926e-05, 9.055500000000258e-05, 9.052699999999997e-05, 9.042999999999898e-05, 9.088900000000025e-05, 9.006899999999818e-05, 9.099999999999733e-05, 9.11939999999993e-05, 9.037500000000018e-05, 9.048600000000073e-05, 9.032000000000137e-05, 9.086100000000111e-05, 9.106999999999865e-05, 9.087500000000068e-05, 9.087500000000068e-05, 9.03199999999979e-05, 9.024999999999658e-05, 9.047200000000116e-05, 9.094399999999905e-05, 9.108299999999875e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.280" endtime="20201030 15:53:13.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.275" endtime="20201030 15:53:13.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.288" endtime="20201030 15:53:13.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.286" endtime="20201030 15:53:13.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.285" endtime="20201030 15:53:13.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.921" endtime="20201030 15:53:13.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.921" endtime="20201030 15:53:13.308"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.317" endtime="20201030 15:53:13.337"></status>
</kw>
<msg timestamp="20201030 15:53:13.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.316" endtime="20201030 15:53:13.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.339" endtime="20201030 15:53:13.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.342" endtime="20201030 15:53:13.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.313" endtime="20201030 15:53:13.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.311" endtime="20201030 15:53:13.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.351" endtime="20201030 15:53:13.637"></status>
</kw>
<msg timestamp="20201030 15:53:13.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020492889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.350" endtime="20201030 15:53:13.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020492889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.641" endtime="20201030 15:53:13.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.650" endtime="20201030 15:53:13.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.347" endtime="20201030 15:53:13.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.345" endtime="20201030 15:53:13.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.657" level="INFO">${RESULT} = [{'diff': 9.127800000000019e-05}, {'diff': 9.197200000000266e-05}, {'diff': 9.161099999999839e-05}, {'diff': 9.143100000000293e-05}, {'diff': 9.175000000000155e-05}, {'diff': 9.20000000000018e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:13.653" endtime="20201030 15:53:13.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.662" level="INFO">${ACCURACY} = {'diff': [9.127800000000019e-05, 9.197200000000266e-05, 9.161099999999839e-05, 9.143100000000293e-05, 9.175000000000155e-05, 9.20000000000018e-05, 9.20139999999979e-05, 9.148599999999826e-05, 9.212500...</msg>
<status status="PASS" starttime="20201030 15:53:13.658" endtime="20201030 15:53:13.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.667" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.665" endtime="20201030 15:53:13.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.669" level="INFO">VALUE: [9.127800000000019e-05, 9.197200000000266e-05, 9.161099999999839e-05, 9.143100000000293e-05, 9.175000000000155e-05, 9.20000000000018e-05, 9.20139999999979e-05, 9.148599999999826e-05, 9.212500000000193e-05, 9.162500000000143e-05, 9.130499999999986e-05, 9.187500000000168e-05, 9.206899999999671e-05, 9.156899999999968e-05, 9.130599999999933e-05, 9.175000000000155e-05, 9.143099999999946e-05, 9.168099999999971e-05, 9.205600000000008e-05, 9.11390000000005e-05, 9.183399999999897e-05, 9.138800000000127e-05, 9.188900000000125e-05, 9.208400000000269e-05, 9.222199999999944e-05, 9.180500000000036e-05, 9.172199999999894e-05, 9.130499999999986e-05, 9.141699999999989e-05, 9.20000000000018e-05, 9.194499999999953e-05, 9.205600000000008e-05, 9.216699999999717e-05, 9.218100000000021e-05, 9.194400000000005e-05, 9.168099999999971e-05, 9.126300000000115e-05, 9.184699999999907e-05, 9.151400000000087e-05, 9.198600000000223e-05, 9.138899999999728e-05, 9.161099999999839e-05, 9.144399999999955e-05, 9.134699999999857e-05, 9.132000000000237e-05, 9.143099999999946e-05, 9.186099999999864e-05, 9.155599999999958e-05, 9.152800000000044e-05, 9.112499999999746e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.668" endtime="20201030 15:53:13.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.663" endtime="20201030 15:53:13.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.680" endtime="20201030 15:53:13.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.678" endtime="20201030 15:53:13.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.677" endtime="20201030 15:53:13.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.309" endtime="20201030 15:53:13.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.309" endtime="20201030 15:53:13.700"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.710" endtime="20201030 15:53:13.730"></status>
</kw>
<msg timestamp="20201030 15:53:13.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.708" endtime="20201030 15:53:13.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.732" endtime="20201030 15:53:13.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.734" endtime="20201030 15:53:13.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.705" endtime="20201030 15:53:13.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.703" endtime="20201030 15:53:13.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.744" endtime="20201030 15:53:14.031"></status>
</kw>
<msg timestamp="20201030 15:53:14.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.742" endtime="20201030 15:53:14.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.035" endtime="20201030 15:53:14.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.044" endtime="20201030 15:53:14.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.740" endtime="20201030 15:53:14.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.738" endtime="20201030 15:53:14.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.051" level="INFO">${RESULT} = [{'diff': 9.230500000000086e-05}, {'diff': 9.244400000000055e-05}, {'diff': 9.230600000000033e-05}, {'diff': 9.298599999999976e-05}, {'diff': 9.280600000000083e-05}, {'diff': 9.298600000000323e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:14.047" endtime="20201030 15:53:14.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.055" level="INFO">${ACCURACY} = {'diff': [9.230500000000086e-05, 9.244400000000055e-05, 9.230600000000033e-05, 9.298599999999976e-05, 9.280600000000083e-05, 9.298600000000323e-05, 9.238899999999828e-05, 9.299999999999933e-05, 9.2319...</msg>
<status status="PASS" starttime="20201030 15:53:14.052" endtime="20201030 15:53:14.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.060" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:53:14.059" endtime="20201030 15:53:14.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.063" level="INFO">VALUE: [9.230500000000086e-05, 9.244400000000055e-05, 9.230600000000033e-05, 9.298599999999976e-05, 9.280600000000083e-05, 9.298600000000323e-05, 9.238899999999828e-05, 9.299999999999933e-05, 9.231900000000043e-05, 9.275000000000255e-05, 9.268000000000123e-05, 9.299999999999933e-05, 9.244400000000055e-05, 9.305499999999814e-05, 9.28330000000005e-05, 9.245800000000012e-05, 9.2639000000002e-05, 9.31659999999987e-05, 9.311099999999989e-05, 9.304200000000151e-05, 9.274999999999908e-05, 9.255600000000058e-05, 9.266700000000114e-05, 9.227700000000172e-05, 9.31659999999987e-05, 9.286099999999964e-05, 9.267999999999776e-05, 9.287499999999921e-05, 9.261199999999886e-05, 9.294400000000105e-05, 9.225000000000205e-05, 9.24589999999996e-05, 9.229199999999729e-05, 9.25000000000023e-05, 9.308400000000022e-05, 9.26940000000008e-05, 9.276299999999918e-05, 9.281900000000093e-05, 9.304200000000151e-05, 9.304200000000151e-05, 9.255500000000111e-05, 9.262499999999896e-05, 9.262500000000243e-05, 9.31529999999986e-05, 9.279199999999779e-05, 9.276399999999865e-05, 9.223599999999901e-05, 9.243100000000046e-05, 9.240200000000184e-05, 9.305600000000108e-05]</msg>
<status status="PASS" starttime="20201030 15:53:14.061" endtime="20201030 15:53:14.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.056" endtime="20201030 15:53:14.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.068" endtime="20201030 15:53:14.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.066" endtime="20201030 15:53:14.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.065" endtime="20201030 15:53:14.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.701" endtime="20201030 15:53:14.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.701" endtime="20201030 15:53:14.089"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.098" endtime="20201030 15:53:14.119"></status>
</kw>
<msg timestamp="20201030 15:53:14.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.096" endtime="20201030 15:53:14.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.121" endtime="20201030 15:53:14.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.123" endtime="20201030 15:53:14.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.093" endtime="20201030 15:53:14.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.091" endtime="20201030 15:53:14.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.133" endtime="20201030 15:53:14.418"></status>
</kw>
<msg timestamp="20201030 15:53:14.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021191236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021284764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.131" endtime="20201030 15:53:14.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021191236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021284764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.422" endtime="20201030 15:53:14.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.431" endtime="20201030 15:53:14.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.129" endtime="20201030 15:53:14.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.127" endtime="20201030 15:53:14.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.438" level="INFO">${RESULT} = [{'diff': 9.352800000000244e-05}, {'diff': 9.398600000000076e-05}, {'diff': 9.355600000000158e-05}, {'diff': 9.327799999999872e-05}, {'diff': 9.355499999999864e-05}, {'diff': 9.400000000000033e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:14.434" endtime="20201030 15:53:14.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.442" level="INFO">${ACCURACY} = {'diff': [9.352800000000244e-05, 9.398600000000076e-05, 9.355600000000158e-05, 9.327799999999872e-05, 9.355499999999864e-05, 9.400000000000033e-05, 9.338899999999928e-05, 9.336100000000014e-05, 9.4179...</msg>
<status status="PASS" starttime="20201030 15:53:14.439" endtime="20201030 15:53:14.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.447" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:53:14.446" endtime="20201030 15:53:14.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.450" level="INFO">VALUE: [9.352800000000244e-05, 9.398600000000076e-05, 9.355600000000158e-05, 9.327799999999872e-05, 9.355499999999864e-05, 9.400000000000033e-05, 9.338899999999928e-05, 9.336100000000014e-05, 9.417999999999926e-05, 9.359699999999735e-05, 9.334800000000004e-05, 9.381899999999846e-05, 9.377799999999922e-05, 9.349999999999983e-05, 9.368099999999824e-05, 9.349999999999983e-05, 9.363899999999953e-05, 9.386100000000064e-05, 9.377699999999975e-05, 9.340199999999937e-05, 9.311099999999989e-05, 9.377799999999922e-05, 9.369399999999833e-05, 9.367999999999876e-05, 9.377800000000269e-05, 9.358400000000072e-05, 9.348600000000026e-05, 9.41529999999996e-05, 9.362499999999996e-05, 9.341599999999894e-05, 9.343099999999799e-05, 9.35000000000033e-05, 9.398700000000024e-05, 9.362499999999996e-05, 9.39859999999973e-05, 9.388899999999978e-05, 9.331900000000143e-05, 9.330599999999786e-05, 9.361100000000039e-05, 9.312499999999946e-05, 9.344500000000103e-05, 9.312499999999946e-05, 9.343099999999799e-05, 9.326399999999915e-05, 9.4027e-05, 9.406999999999818e-05, 9.322200000000044e-05, 9.35269999999995e-05, 9.331899999999796e-05, 9.359700000000082e-05]</msg>
<status status="PASS" starttime="20201030 15:53:14.448" endtime="20201030 15:53:14.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.443" endtime="20201030 15:53:14.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.456" endtime="20201030 15:53:14.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.454" endtime="20201030 15:53:14.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.453" endtime="20201030 15:53:14.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.090" endtime="20201030 15:53:14.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.089" endtime="20201030 15:53:14.476"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.486" endtime="20201030 15:53:14.506"></status>
</kw>
<msg timestamp="20201030 15:53:14.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.484" endtime="20201030 15:53:14.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.509" endtime="20201030 15:53:14.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.513" endtime="20201030 15:53:14.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.481" endtime="20201030 15:53:14.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.479" endtime="20201030 15:53:14.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.529" endtime="20201030 15:53:14.816"></status>
</kw>
<msg timestamp="20201030 15:53:14.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020405208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.526" endtime="20201030 15:53:14.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020405208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.821" endtime="20201030 15:53:14.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.829" endtime="20201030 15:53:14.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.522" endtime="20201030 15:53:14.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.520" endtime="20201030 15:53:14.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.836" level="INFO">${RESULT} = [{'diff': 9.490200000000087e-05}, {'diff': 9.48469999999986e-05}, {'diff': 9.47079999999989e-05}, {'diff': 9.476399999999718e-05}, {'diff': 9.486100000000164e-05}, {'diff': 9.46530000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:53:14.833" endtime="20201030 15:53:14.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.841" level="INFO">${ACCURACY} = {'diff': [9.490200000000087e-05, 9.48469999999986e-05, 9.47079999999989e-05, 9.476399999999718e-05, 9.486100000000164e-05, 9.46530000000001e-05, 9.423599999999754e-05, 9.50140000000009e-05, 9.50280000...</msg>
<status status="PASS" starttime="20201030 15:53:14.837" endtime="20201030 15:53:14.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.846" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:53:14.845" endtime="20201030 15:53:14.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.849" level="INFO">VALUE: [9.490200000000087e-05, 9.48469999999986e-05, 9.47079999999989e-05, 9.476399999999718e-05, 9.486100000000164e-05, 9.46530000000001e-05, 9.423599999999754e-05, 9.50140000000009e-05, 9.502800000000047e-05, 9.458299999999878e-05, 9.500000000000133e-05, 9.518099999999974e-05, 9.491600000000044e-05, 9.518099999999974e-05, 9.481999999999893e-05, 9.467999999999976e-05, 9.430500000000286e-05, 9.493000000000001e-05, 9.50140000000009e-05, 9.516700000000017e-05, 9.462500000000096e-05, 9.46530000000001e-05, 9.441699999999942e-05, 9.512500000000146e-05, 9.466699999999967e-05, 9.486099999999817e-05, 9.466699999999967e-05, 9.448700000000074e-05, 9.462500000000096e-05, 9.423599999999754e-05, 9.449999999999736e-05, 9.469399999999933e-05, 9.455499999999964e-05, 9.486100000000164e-05, 9.524999999999811e-05, 9.519499999999931e-05, 9.480599999999936e-05, 9.484700000000207e-05, 9.45140000000004e-05, 9.443099999999899e-05, 9.47079999999989e-05, 9.479100000000032e-05, 9.523599999999854e-05, 9.493000000000001e-05, 9.475000000000108e-05, 9.486099999999817e-05, 9.519399999999983e-05, 9.437499999999724e-05, 9.504200000000004e-05, 9.429200000000276e-05]</msg>
<status status="PASS" starttime="20201030 15:53:14.847" endtime="20201030 15:53:14.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.842" endtime="20201030 15:53:14.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.854" endtime="20201030 15:53:14.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.852" endtime="20201030 15:53:14.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.851" endtime="20201030 15:53:14.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.477" endtime="20201030 15:53:14.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.477" endtime="20201030 15:53:14.875"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.885" endtime="20201030 15:53:14.906"></status>
</kw>
<msg timestamp="20201030 15:53:14.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.883" endtime="20201030 15:53:14.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.908" endtime="20201030 15:53:14.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.910" endtime="20201030 15:53:14.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.880" endtime="20201030 15:53:14.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.878" endtime="20201030 15:53:14.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.920" endtime="20201030 15:53:15.207"></status>
</kw>
<msg timestamp="20201030 15:53:15.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021965236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.918" endtime="20201030 15:53:15.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021965236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.211" endtime="20201030 15:53:15.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.220" endtime="20201030 15:53:15.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.915" endtime="20201030 15:53:15.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.914" endtime="20201030 15:53:15.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.227" level="INFO">${RESULT} = [{'diff': 9.615299999999813e-05}, {'diff': 9.593100000000049e-05}, {'diff': 9.587499999999874e-05}, {'diff': 9.612499999999899e-05}, {'diff': 9.595899999999963e-05}, {'diff': 9.611099999999942e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:15.223" endtime="20201030 15:53:15.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.231" level="INFO">${ACCURACY} = {'diff': [9.615299999999813e-05, 9.593100000000049e-05, 9.587499999999874e-05, 9.612499999999899e-05, 9.595899999999963e-05, 9.611099999999942e-05, 9.579200000000079e-05, 9.605600000000061e-05, 9.6056...</msg>
<status status="PASS" starttime="20201030 15:53:15.228" endtime="20201030 15:53:15.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.236" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.235" endtime="20201030 15:53:15.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.238" level="INFO">VALUE: [9.615299999999813e-05, 9.593100000000049e-05, 9.587499999999874e-05, 9.612499999999899e-05, 9.595899999999963e-05, 9.611099999999942e-05, 9.579200000000079e-05, 9.605600000000061e-05, 9.605600000000061e-05, 9.59729999999992e-05, 9.597199999999972e-05, 9.55409999999976e-05, 9.606900000000071e-05, 9.577800000000122e-05, 9.611199999999889e-05, 9.586100000000264e-05, 9.580600000000036e-05, 9.533299999999953e-05, 9.568100000000024e-05, 9.554200000000054e-05, 9.59859999999993e-05, 9.554100000000107e-05, 9.605600000000061e-05, 9.526400000000115e-05, 9.524999999999811e-05, 9.612500000000246e-05, 9.538900000000128e-05, 9.61530000000016e-05, 9.60140000000019e-05, 9.576400000000165e-05, 9.568100000000024e-05, 9.524999999999811e-05, 9.544400000000008e-05, 9.559699999999935e-05, 9.544499999999956e-05, 9.543099999999999e-05, 9.59729999999992e-05, 9.562499999999849e-05, 9.556900000000021e-05, 9.591600000000144e-05, 9.601399999999843e-05, 9.593100000000049e-05, 9.566700000000067e-05, 9.573599999999904e-05, 9.569499999999981e-05, 9.5333999999999e-05, 9.563899999999806e-05, 9.53880000000018e-05, 9.616700000000117e-05, 9.543099999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:53:15.237" endtime="20201030 15:53:15.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.232" endtime="20201030 15:53:15.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.244" endtime="20201030 15:53:15.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.242" endtime="20201030 15:53:15.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.241" endtime="20201030 15:53:15.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.876" endtime="20201030 15:53:15.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.875" endtime="20201030 15:53:15.264"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.273" endtime="20201030 15:53:15.295"></status>
</kw>
<msg timestamp="20201030 15:53:15.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.272" endtime="20201030 15:53:15.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.297" endtime="20201030 15:53:15.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.299" endtime="20201030 15:53:15.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.269" endtime="20201030 15:53:15.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.267" endtime="20201030 15:53:15.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.309" endtime="20201030 15:53:15.596"></status>
</kw>
<msg timestamp="20201030 15:53:15.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021231722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021328611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.307" endtime="20201030 15:53:15.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021231722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021328611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.601" endtime="20201030 15:53:15.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.609" endtime="20201030 15:53:15.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.304" endtime="20201030 15:53:15.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.303" endtime="20201030 15:53:15.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.616" level="INFO">${RESULT} = [{'diff': 9.688899999999931e-05}, {'diff': 9.637499999999924e-05}, {'diff': 9.673600000000004e-05}, {'diff': 9.662499999999949e-05}, {'diff': 9.713899999999956e-05}, {'diff': 9.673699999999952e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:15.613" endtime="20201030 15:53:15.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.620" level="INFO">${ACCURACY} = {'diff': [9.688899999999931e-05, 9.637499999999924e-05, 9.673600000000004e-05, 9.662499999999949e-05, 9.713899999999956e-05, 9.673699999999952e-05, 9.712499999999999e-05, 9.719499999999784e-05, 9.7054...</msg>
<status status="PASS" starttime="20201030 15:53:15.617" endtime="20201030 15:53:15.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.625" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.624" endtime="20201030 15:53:15.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.628" level="INFO">VALUE: [9.688899999999931e-05, 9.637499999999924e-05, 9.673600000000004e-05, 9.662499999999949e-05, 9.713899999999956e-05, 9.673699999999952e-05, 9.712499999999999e-05, 9.719499999999784e-05, 9.705499999999867e-05, 9.683300000000103e-05, 9.701399999999943e-05, 9.691599999999898e-05, 9.644399999999761e-05, 9.713899999999956e-05, 9.719500000000131e-05, 9.629199999999782e-05, 9.651399999999893e-05, 9.674999999999961e-05, 9.699999999999986e-05, 9.693099999999802e-05, 9.623599999999954e-05, 9.622199999999997e-05, 9.623599999999954e-05, 9.681900000000146e-05, 9.661099999999992e-05, 9.708299999999781e-05, 9.656900000000121e-05, 9.677800000000222e-05, 9.690299999999888e-05, 9.644500000000056e-05, 9.697200000000072e-05, 9.668099999999777e-05, 9.632000000000043e-05, 9.686199999999964e-05, 9.688799999999984e-05, 9.692999999999855e-05, 9.705499999999867e-05, 9.619400000000083e-05, 9.636099999999967e-05, 9.690299999999888e-05, 9.672299999999995e-05, 9.676399999999918e-05, 9.613900000000203e-05, 9.693100000000149e-05, 9.681999999999746e-05, 9.693099999999802e-05, 9.624999999999911e-05, 9.645799999999718e-05, 9.68059999999979e-05, 9.676399999999918e-05]</msg>
<status status="PASS" starttime="20201030 15:53:15.626" endtime="20201030 15:53:15.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.621" endtime="20201030 15:53:15.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.634" endtime="20201030 15:53:15.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.632" endtime="20201030 15:53:15.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.631" endtime="20201030 15:53:15.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.265" endtime="20201030 15:53:15.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.265" endtime="20201030 15:53:15.655"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.664" endtime="20201030 15:53:15.684"></status>
</kw>
<msg timestamp="20201030 15:53:15.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.662" endtime="20201030 15:53:15.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.686" endtime="20201030 15:53:15.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.688" endtime="20201030 15:53:15.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.660" endtime="20201030 15:53:15.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.657" endtime="20201030 15:53:15.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.698" endtime="20201030 15:53:15.984"></status>
</kw>
<msg timestamp="20201030 15:53:15.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020332458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020430014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.696" endtime="20201030 15:53:15.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020332458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020430014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.988" endtime="20201030 15:53:15.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.997" endtime="20201030 15:53:15.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.693" endtime="20201030 15:53:15.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.692" endtime="20201030 15:53:16.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.004" level="INFO">${RESULT} = [{'diff': 9.755599999999864e-05}, {'diff': 9.791699999999945e-05}, {'diff': 9.761099999999745e-05}, {'diff': 9.81669999999997e-05}, {'diff': 9.777700000000028e-05}, {'diff': 9.78470000000016e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:16.001" endtime="20201030 15:53:16.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.009" level="INFO">${ACCURACY} = {'diff': [9.755599999999864e-05, 9.791699999999945e-05, 9.761099999999745e-05, 9.81669999999997e-05, 9.777700000000028e-05, 9.78470000000016e-05, 9.775000000000061e-05, 9.730499999999892e-05, 9.742999...</msg>
<status status="PASS" starttime="20201030 15:53:16.005" endtime="20201030 15:53:16.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.014" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.013" endtime="20201030 15:53:16.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.016" level="INFO">VALUE: [9.755599999999864e-05, 9.791699999999945e-05, 9.761099999999745e-05, 9.81669999999997e-05, 9.777700000000028e-05, 9.78470000000016e-05, 9.775000000000061e-05, 9.730499999999892e-05, 9.742999999999905e-05, 9.742999999999905e-05, 9.729100000000282e-05, 9.776400000000018e-05, 9.808299999999881e-05, 9.72920000000023e-05, 9.818099999999927e-05, 9.808399999999828e-05, 9.793099999999902e-05, 9.801400000000043e-05, 9.78059999999989e-05, 9.762500000000049e-05, 9.805499999999967e-05, 9.711099999999695e-05, 9.819399999999937e-05, 9.795800000000215e-05, 9.73609999999972e-05, 9.73059999999984e-05, 9.772200000000147e-05, 9.750000000000036e-05, 9.759700000000135e-05, 9.751399999999993e-05, 9.737500000000024e-05, 9.743100000000199e-05, 9.787500000000074e-05, 9.755499999999917e-05, 9.81799999999998e-05, 9.750000000000036e-05, 9.725000000000011e-05, 9.808399999999828e-05, 9.759699999999788e-05, 9.737500000000024e-05, 9.808399999999828e-05, 9.800000000000086e-05, 9.743099999999852e-05, 9.770900000000138e-05, 9.801400000000043e-05, 9.750000000000036e-05, 9.775000000000061e-05, 9.788900000000031e-05, 9.772200000000147e-05, 9.719399999999837e-05]</msg>
<status status="PASS" starttime="20201030 15:53:16.015" endtime="20201030 15:53:16.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.010" endtime="20201030 15:53:16.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.022" endtime="20201030 15:53:16.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.020" endtime="20201030 15:53:16.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.019" endtime="20201030 15:53:16.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.656" endtime="20201030 15:53:16.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.655" endtime="20201030 15:53:16.043"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.052" endtime="20201030 15:53:16.073"></status>
</kw>
<msg timestamp="20201030 15:53:16.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.050" endtime="20201030 15:53:16.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.075" endtime="20201030 15:53:16.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.077" endtime="20201030 15:53:16.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.047" endtime="20201030 15:53:16.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.045" endtime="20201030 15:53:16.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.087" endtime="20201030 15:53:16.376"></status>
</kw>
<msg timestamp="20201030 15:53:16.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020461931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.085" endtime="20201030 15:53:16.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020461931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.381" endtime="20201030 15:53:16.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.389" endtime="20201030 15:53:16.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.082" endtime="20201030 15:53:16.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.081" endtime="20201030 15:53:16.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.396" level="INFO">${RESULT} = [{'diff': 9.879200000000032e-05}, {'diff': 9.881899999999999e-05}, {'diff': 9.893000000000055e-05}, {'diff': 9.86670000000002e-05}, {'diff': 9.9028000000001e-05}, {'diff': 9.82219999999985e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:53:16.393" endtime="20201030 15:53:16.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.400" level="INFO">${ACCURACY} = {'diff': [9.879200000000032e-05, 9.881899999999999e-05, 9.893000000000055e-05, 9.86670000000002e-05, 9.9028000000001e-05, 9.82219999999985e-05, 9.900000000000186e-05, 9.850000000000136e-05, 9.86939999...</msg>
<status status="PASS" starttime="20201030 15:53:16.397" endtime="20201030 15:53:16.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.405" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.404" endtime="20201030 15:53:16.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.408" level="INFO">VALUE: [9.879200000000032e-05, 9.881899999999999e-05, 9.893000000000055e-05, 9.86670000000002e-05, 9.9028000000001e-05, 9.82219999999985e-05, 9.900000000000186e-05, 9.850000000000136e-05, 9.869399999999987e-05, 9.862499999999802e-05, 9.894499999999959e-05, 9.881999999999946e-05, 9.855599999999964e-05, 9.862500000000149e-05, 9.855599999999964e-05, 9.874999999999814e-05, 9.916600000000123e-05, 9.883299999999956e-05, 9.905500000000067e-05, 9.901400000000143e-05, 9.861099999999845e-05, 9.83609999999982e-05, 9.841699999999995e-05, 9.894499999999959e-05, 9.894499999999959e-05, 9.91670000000007e-05, 9.881999999999946e-05, 9.900000000000186e-05, 9.893000000000055e-05, 9.894400000000012e-05, 9.829100000000035e-05, 9.920799999999994e-05, 9.881899999999999e-05, 9.877800000000075e-05, 9.825000000000111e-05, 9.895899999999916e-05, 9.861099999999845e-05, 9.920899999999941e-05, 9.902700000000153e-05, 9.848599999999832e-05, 9.845799999999919e-05, 9.840300000000038e-05, 9.9028000000001e-05, 9.865200000000116e-05, 9.837500000000124e-05, 9.825000000000111e-05, 9.812499999999752e-05, 9.919499999999984e-05, 9.884699999999913e-05, 9.830600000000286e-05]</msg>
<status status="PASS" starttime="20201030 15:53:16.406" endtime="20201030 15:53:16.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.401" endtime="20201030 15:53:16.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.413" endtime="20201030 15:53:16.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.411" endtime="20201030 15:53:16.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.410" endtime="20201030 15:53:16.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.044" endtime="20201030 15:53:16.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.043" endtime="20201030 15:53:16.434"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.443" endtime="20201030 15:53:16.464"></status>
</kw>
<msg timestamp="20201030 15:53:16.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.441" endtime="20201030 15:53:16.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.466" endtime="20201030 15:53:16.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.469" endtime="20201030 15:53:16.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.438" endtime="20201030 15:53:16.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.436" endtime="20201030 15:53:16.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.478" endtime="20201030 15:53:16.764"></status>
</kw>
<msg timestamp="20201030 15:53:16.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021133986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021233667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.476" endtime="20201030 15:53:16.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021133986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021233667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.769" endtime="20201030 15:53:16.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.777" endtime="20201030 15:53:16.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.474" endtime="20201030 15:53:16.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.472" endtime="20201030 15:53:16.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.784" level="INFO">${RESULT} = [{'diff': 9.968100000000077e-05}, {'diff': 9.911099999999895e-05}, {'diff': 9.911199999999842e-05}, {'diff': 9.912500000000199e-05}, {'diff': 9.93609999999992e-05}, {'diff': 9.937500000000224e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:16.781" endtime="20201030 15:53:16.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.789" level="INFO">${ACCURACY} = {'diff': [9.968100000000077e-05, 9.911099999999895e-05, 9.911199999999842e-05, 9.912500000000199e-05, 9.93609999999992e-05, 9.937500000000224e-05, 9.99999999999994e-05, 9.933300000000006e-05, 0.000100...</msg>
<status status="PASS" starttime="20201030 15:53:16.785" endtime="20201030 15:53:16.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.793" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.792" endtime="20201030 15:53:16.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.796" level="INFO">VALUE: [9.968100000000077e-05, 9.911099999999895e-05, 9.911199999999842e-05, 9.912500000000199e-05, 9.93609999999992e-05, 9.937500000000224e-05, 9.99999999999994e-05, 9.933300000000006e-05, 0.0001000549999999982, 9.950000000000236e-05, 0.00010020900000000041, 9.96809999999973e-05, 9.980599999999742e-05, 9.968100000000077e-05, 9.956899999999727e-05, 9.972299999999948e-05, 9.940299999999791e-05, 9.969400000000087e-05, 9.990299999999841e-05, 9.980500000000142e-05, 9.9722e-05, 9.976400000000218e-05, 9.955600000000064e-05, 9.957000000000021e-05, 9.959699999999988e-05, 9.99999999999994e-05, 9.920899999999941e-05, 9.931900000000049e-05, 9.980500000000142e-05, 9.933300000000006e-05, 9.980500000000142e-05, 9.993000000000155e-05, 9.987499999999927e-05, 9.93609999999992e-05, 9.955600000000064e-05, 9.937500000000224e-05, 9.968100000000077e-05, 9.931999999999996e-05, 9.977799999999828e-05, 9.98609999999997e-05, 9.995800000000069e-05, 9.941700000000095e-05, 9.9722e-05, 9.994400000000112e-05, 0.00010004099999999863, 9.992999999999808e-05, 9.966600000000173e-05, 9.99999999999994e-05, 9.92219999999995e-05, 9.966699999999773e-05]</msg>
<status status="PASS" starttime="20201030 15:53:16.794" endtime="20201030 15:53:16.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.790" endtime="20201030 15:53:16.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.802" endtime="20201030 15:53:16.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.800" endtime="20201030 15:53:16.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.799" endtime="20201030 15:53:16.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.435" endtime="20201030 15:53:16.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.434" endtime="20201030 15:53:16.823"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.832" endtime="20201030 15:53:16.852"></status>
</kw>
<msg timestamp="20201030 15:53:16.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.830" endtime="20201030 15:53:16.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.854" endtime="20201030 15:53:16.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.856" endtime="20201030 15:53:16.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.828" endtime="20201030 15:53:16.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.825" endtime="20201030 15:53:16.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.866" endtime="20201030 15:53:17.152"></status>
</kw>
<msg timestamp="20201030 15:53:17.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020318653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02041975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:16.864" endtime="20201030 15:53:17.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020318653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02041975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:17.156" endtime="20201030 15:53:17.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.164" endtime="20201030 15:53:17.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.862" endtime="20201030 15:53:17.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.860" endtime="20201030 15:53:17.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.171" level="INFO">${RESULT} = [{'diff': 0.00010109700000000138}, {'diff': 0.00010012499999999952}, {'diff': 0.00010059800000000035}, {'diff': 0.0001005419999999986}, {'diff': 0.00010111100000000095}, {'diff': 0.0001002919999999983...</msg>
<status status="PASS" starttime="20201030 15:53:17.168" endtime="20201030 15:53:17.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.176" level="INFO">${ACCURACY} = {'diff': [0.00010109700000000138, 0.00010012499999999952, 0.00010059800000000035, 0.0001005419999999986, 0.00010111100000000095, 0.00010029199999999835, 0.00010041700000000195, 0.00010119400000000237,...</msg>
<status status="PASS" starttime="20201030 15:53:17.172" endtime="20201030 15:53:17.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.181" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.180" endtime="20201030 15:53:17.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.183" level="INFO">VALUE: [0.00010109700000000138, 0.00010012499999999952, 0.00010059800000000035, 0.0001005419999999986, 0.00010111100000000095, 0.00010029199999999835, 0.00010041700000000195, 0.00010119400000000237, 0.00010024999999999964, 0.00010027700000000278, 0.00010106900000000224, 0.00010058300000000131, 0.00010105500000000267, 0.00010106899999999877, 0.00010118100000000227, 0.00010105599999999867, 0.00010063899999999959, 0.00010079099999999938, 0.00010073600000000058, 0.00010054200000000207, 0.00010082000000000146, 0.00010073700000000005, 0.00010037499999999977, 0.00010013900000000256, 0.00010075000000000014, 0.0001005419999999986, 0.00010038899999999934, 0.00010105599999999867, 0.00010098599999999736, 0.00010055600000000164, 0.0001005419999999986, 0.00010097300000000073, 0.0001004999999999999, 0.00010048600000000033, 0.00010109700000000138, 0.00010106899999999877, 0.00010097300000000073, 0.00010081899999999852, 0.00010117999999999933, 0.00010099999999999693, 0.00010058300000000131, 0.00010061100000000045, 0.00010038899999999934, 0.00010101399999999996, 0.00010037500000000324, 0.00010093099999999855, 0.00010038899999999934, 0.00010073600000000058, 0.00010044400000000162, 0.0001010549999999992]</msg>
<status status="PASS" starttime="20201030 15:53:17.182" endtime="20201030 15:53:17.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.177" endtime="20201030 15:53:17.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.189" endtime="20201030 15:53:17.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.187" endtime="20201030 15:53:17.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.186" endtime="20201030 15:53:17.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.824" endtime="20201030 15:53:17.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.823" endtime="20201030 15:53:17.209"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.219" endtime="20201030 15:53:17.240"></status>
</kw>
<msg timestamp="20201030 15:53:17.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.217" endtime="20201030 15:53:17.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.242" endtime="20201030 15:53:17.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.244" endtime="20201030 15:53:17.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.214" endtime="20201030 15:53:17.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.212" endtime="20201030 15:53:17.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.254" endtime="20201030 15:53:17.540"></status>
</kw>
<msg timestamp="20201030 15:53:17.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020478972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.252" endtime="20201030 15:53:17.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020478972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.545" endtime="20201030 15:53:17.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.553" endtime="20201030 15:53:17.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.249" endtime="20201030 15:53:17.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.248" endtime="20201030 15:53:17.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.560" level="INFO">${RESULT} = [{'diff': 0.00010179100000000038}, {'diff': 0.00010205599999999967}, {'diff': 0.00010188800000000137}, {'diff': 0.00010111199999999695}, {'diff': 0.00010213799999999815}, {'diff': 0.000101582999999998...</msg>
<status status="PASS" starttime="20201030 15:53:17.557" endtime="20201030 15:53:17.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.564" level="INFO">${ACCURACY} = {'diff': [0.00010179100000000038, 0.00010205599999999967, 0.00010188800000000137, 0.00010111199999999695, 0.00010213799999999815, 0.00010158299999999884, 0.00010137500000000077, 0.00010118100000000227...</msg>
<status status="PASS" starttime="20201030 15:53:17.561" endtime="20201030 15:53:17.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.570" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.569" endtime="20201030 15:53:17.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.573" level="INFO">VALUE: [0.00010179100000000038, 0.00010205599999999967, 0.00010188800000000137, 0.00010111199999999695, 0.00010213799999999815, 0.00010158299999999884, 0.00010137500000000077, 0.00010118100000000227, 0.00010112499999999705, 0.0001020550000000002, 0.00010149999999999743, 0.00010205599999999967, 0.00010144499999999862, 0.00010148600000000133, 0.00010138899999999687, 0.00010141699999999948, 0.00010111200000000042, 0.00010131899999999902, 0.0001018749999999978, 0.00010145800000000219, 0.0001020000000000014, 0.00010193000000000008, 0.00010162500000000102, 0.00010126400000000021, 0.00010186099999999823, 0.00010182000000000246, 0.00010180599999999942, 0.00010194399999999965, 0.00010199999999999793, 0.0001013060000000024, 0.00010157000000000221, 0.00010218000000000033, 0.00010198600000000183, 0.00010142999999999958, 0.0001021809999999998, 0.00010183299999999909, 0.00010194499999999912, 0.00010169499999999887, 0.00010180599999999942, 0.00010111100000000095, 0.00010124999999999718, 0.00010149999999999743, 0.0001016939999999994, 0.00010154100000000013, 0.00010218000000000033, 0.00010181899999999952, 0.00010218000000000033, 0.00010176400000000071, 0.0001012359999999976, 0.00010115299999999966]</msg>
<status status="PASS" starttime="20201030 15:53:17.572" endtime="20201030 15:53:17.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.565" endtime="20201030 15:53:17.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.579" endtime="20201030 15:53:17.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.577" endtime="20201030 15:53:17.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.576" endtime="20201030 15:53:17.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.210" endtime="20201030 15:53:17.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.210" endtime="20201030 15:53:17.599"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.609" endtime="20201030 15:53:17.630"></status>
</kw>
<msg timestamp="20201030 15:53:17.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.607" endtime="20201030 15:53:17.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.632" endtime="20201030 15:53:17.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.635" endtime="20201030 15:53:17.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.604" endtime="20201030 15:53:17.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.602" endtime="20201030 15:53:17.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.644" endtime="20201030 15:53:17.931"></status>
</kw>
<msg timestamp="20201030 15:53:17.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021394542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021497319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.642" endtime="20201030 15:53:17.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021394542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021497319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.935" endtime="20201030 15:53:17.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.943" endtime="20201030 15:53:17.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.640" endtime="20201030 15:53:17.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.638" endtime="20201030 15:53:17.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.950" level="INFO">${RESULT} = [{'diff': 0.00010277700000000181}, {'diff': 0.00010229100000000088}, {'diff': 0.00010245799999999972}, {'diff': 0.0001031940000000009}, {'diff': 0.00010236099999999873}, {'diff': 0.0001024719999999992...</msg>
<status status="PASS" starttime="20201030 15:53:17.947" endtime="20201030 15:53:17.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.954" level="INFO">${ACCURACY} = {'diff': [0.00010277700000000181, 0.00010229100000000088, 0.00010245799999999972, 0.0001031940000000009, 0.00010236099999999873, 0.00010247199999999929, 0.0001027359999999991, 0.00010236099999999873, ...</msg>
<status status="PASS" starttime="20201030 15:53:17.951" endtime="20201030 15:53:17.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.959" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.958" endtime="20201030 15:53:17.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.962" level="INFO">VALUE: [0.00010277700000000181, 0.00010229100000000088, 0.00010245799999999972, 0.0001031940000000009, 0.00010236099999999873, 0.00010247199999999929, 0.0001027359999999991, 0.00010236099999999873, 0.00010316700000000123, 0.0001023199999999995, 0.00010291699999999751, 0.00010261100000000245, 0.00010308399999999981, 0.00010268000000000083, 0.00010213899999999762, 0.00010229200000000035, 0.00010279200000000085, 0.0001023749999999983, 0.00010227799999999732, 0.00010212499999999805, 0.00010262499999999855, 0.0001030000000000024, 0.0001025000000000019, 0.00010272199999999954, 0.00010269499999999987, 0.00010230500000000045, 0.00010245799999999972, 0.00010298599999999936, 0.00010238900000000134, 0.00010280599999999696, 0.00010298600000000283, 0.00010273600000000258, 0.00010262500000000202, 0.00010263900000000159, 0.00010230599999999992, 0.00010258399999999931, 0.0001030420000000011, 0.00010216700000000023, 0.00010213899999999762, 0.00010252699999999809, 0.00010318000000000133, 0.000102513999999998, 0.00010236099999999873, 0.0001030139999999985, 0.00010283399999999956, 0.00010277800000000128, 0.00010305600000000067, 0.00010262500000000202, 0.00010309800000000285, 0.00010262500000000202]</msg>
<status status="PASS" starttime="20201030 15:53:17.960" endtime="20201030 15:53:17.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.955" endtime="20201030 15:53:17.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.968" endtime="20201030 15:53:17.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.966" endtime="20201030 15:53:17.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.965" endtime="20201030 15:53:17.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.600" endtime="20201030 15:53:17.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.600" endtime="20201030 15:53:17.989"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.998" endtime="20201030 15:53:18.019"></status>
</kw>
<msg timestamp="20201030 15:53:18.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.996" endtime="20201030 15:53:18.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.021" endtime="20201030 15:53:18.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.023" endtime="20201030 15:53:18.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.993" endtime="20201030 15:53:18.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.991" endtime="20201030 15:53:18.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.033" endtime="20201030 15:53:18.319"></status>
</kw>
<msg timestamp="20201030 15:53:18.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020390236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.031" endtime="20201030 15:53:18.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020390236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.323" endtime="20201030 15:53:18.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.332" endtime="20201030 15:53:18.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.029" endtime="20201030 15:53:18.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.027" endtime="20201030 15:53:18.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.338" level="INFO">${RESULT} = [{'diff': 0.00010362499999999955}, {'diff': 0.00010349999999999943}, {'diff': 0.00010418099999999833}, {'diff': 0.00010344500000000062}, {'diff': 0.00010351400000000247}, {'diff': 0.000104054999999998...</msg>
<status status="PASS" starttime="20201030 15:53:18.335" endtime="20201030 15:53:18.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.343" level="INFO">${ACCURACY} = {'diff': [0.00010362499999999955, 0.00010349999999999943, 0.00010418099999999833, 0.00010344500000000062, 0.00010351400000000247, 0.00010405499999999873, 0.00010406999999999778, 0.00010330600000000092...</msg>
<status status="PASS" starttime="20201030 15:53:18.339" endtime="20201030 15:53:18.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.348" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.347" endtime="20201030 15:53:18.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.351" level="INFO">VALUE: [0.00010362499999999955, 0.00010349999999999943, 0.00010418099999999833, 0.00010344500000000062, 0.00010351400000000247, 0.00010405499999999873, 0.00010406999999999778, 0.00010330600000000092, 0.00010379200000000185, 0.0001035000000000029, 0.00010348599999999986, 0.00010365299999999869, 0.00010405499999999873, 0.00010344399999999768, 0.0001035689999999978, 0.00010380599999999796, 0.00010405600000000167, 0.00010324999999999918, 0.00010370900000000044, 0.00010404199999999864, 0.00010407000000000124, 0.00010413800000000015, 0.0001033749999999993, 0.00010362499999999955, 0.00010398600000000036, 0.00010417999999999886, 0.00010369399999999793, 0.0001038879999999999, 0.00010358400000000031, 0.0001033749999999993, 0.00010326399999999875, 0.00010405600000000167, 0.00010341699999999801, 0.00010394400000000165, 0.00010333300000000059, 0.00010361099999999998, 0.00010362500000000302, 0.00010330500000000145, 0.0001040139999999995, 0.00010367999999999836, 0.00010348599999999986, 0.00010358400000000031, 0.00010347200000000029, 0.00010308399999999981, 0.0001033200000000005, 0.0001041949999999979, 0.00010405600000000167, 0.00010331900000000102, 0.00010331899999999755, 0.00010374999999999968]</msg>
<status status="PASS" starttime="20201030 15:53:18.349" endtime="20201030 15:53:18.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.344" endtime="20201030 15:53:18.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.356" endtime="20201030 15:53:18.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.354" endtime="20201030 15:53:18.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.353" endtime="20201030 15:53:18.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.990" endtime="20201030 15:53:18.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.989" endtime="20201030 15:53:18.377"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.386" endtime="20201030 15:53:18.407"></status>
</kw>
<msg timestamp="20201030 15:53:18.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.384" endtime="20201030 15:53:18.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.409" endtime="20201030 15:53:18.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.411" endtime="20201030 15:53:18.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.382" endtime="20201030 15:53:18.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.379" endtime="20201030 15:53:18.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.421" endtime="20201030 15:53:18.708"></status>
</kw>
<msg timestamp="20201030 15:53:18.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.419" endtime="20201030 15:53:18.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.712" endtime="20201030 15:53:18.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.721" endtime="20201030 15:53:18.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.416" endtime="20201030 15:53:18.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.415" endtime="20201030 15:53:18.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.727" level="INFO">${RESULT} = [{'diff': 0.00010426399999999975}, {'diff': 0.0001050140000000005}, {'diff': 0.00010512500000000105}, {'diff': 0.00010442999999999911}, {'diff': 0.00010448700000000033}, {'diff': 0.0001041389999999996...</msg>
<status status="PASS" starttime="20201030 15:53:18.724" endtime="20201030 15:53:18.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.732" level="INFO">${ACCURACY} = {'diff': [0.00010426399999999975, 0.0001050140000000005, 0.00010512500000000105, 0.00010442999999999911, 0.00010448700000000033, 0.00010413899999999962, 0.00010454100000000313, 0.0001042360000000006, ...</msg>
<status status="PASS" starttime="20201030 15:53:18.728" endtime="20201030 15:53:18.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.736" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.735" endtime="20201030 15:53:18.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.739" level="INFO">VALUE: [0.00010426399999999975, 0.0001050140000000005, 0.00010512500000000105, 0.00010442999999999911, 0.00010448700000000033, 0.00010413899999999962, 0.00010454100000000313, 0.0001042360000000006, 0.00010519399999999943, 0.00010519399999999943, 0.00010504199999999964, 0.00010516699999999976, 0.00010488900000000037, 0.00010431999999999803, 0.00010494500000000212, 0.00010445800000000172, 0.00010426399999999975, 0.00010502700000000059, 0.00010444400000000215, 0.00010498599999999789, 0.00010444400000000215, 0.00010480499999999948, 0.00010452799999999957, 0.00010420800000000147, 0.00010418099999999833, 0.0001043750000000003, 0.00010481999999999853, 0.00010491699999999951, 0.00010523599999999814, 0.00010448700000000033, 0.00010486100000000123, 0.00010461100000000098, 0.00010484699999999819, 0.00010476400000000025, 0.00010461099999999751, 0.00010443099999999858, 0.00010462500000000055, 0.00010456999999999828, 0.00010525000000000118, 0.00010504199999999964, 0.00010498700000000083, 0.00010505499999999973, 0.00010433300000000159, 0.0001050140000000005, 0.00010511099999999801, 0.00010462500000000055, 0.00010518099999999933, 0.00010494500000000212, 0.00010457000000000174, 0.00010475000000000068]</msg>
<status status="PASS" starttime="20201030 15:53:18.737" endtime="20201030 15:53:18.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.732" endtime="20201030 15:53:18.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.748" endtime="20201030 15:53:18.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.747" endtime="20201030 15:53:18.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.745" endtime="20201030 15:53:18.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.378" endtime="20201030 15:53:18.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.377" endtime="20201030 15:53:18.769"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.778" endtime="20201030 15:53:18.800"></status>
</kw>
<msg timestamp="20201030 15:53:18.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.777" endtime="20201030 15:53:18.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.801" endtime="20201030 15:53:18.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.804" endtime="20201030 15:53:18.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.774" endtime="20201030 15:53:18.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.772" endtime="20201030 15:53:18.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.814" endtime="20201030 15:53:19.099"></status>
</kw>
<msg timestamp="20201030 15:53:19.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021217611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.812" endtime="20201030 15:53:19.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021217611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.104" endtime="20201030 15:53:19.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.112" endtime="20201030 15:53:19.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.809" endtime="20201030 15:53:19.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.807" endtime="20201030 15:53:19.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:19.119" level="INFO">${RESULT} = [{'diff': 0.00010533299999999912}, {'diff': 0.00010605499999999726}, {'diff': 0.00010576400000000125}, {'diff': 0.00010608300000000334}, {'diff': 0.00010584800000000213}, {'diff': 0.000105264000000000...</msg>
<status status="PASS" starttime="20201030 15:53:19.116" endtime="20201030 15:53:19.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:19.123" level="INFO">${ACCURACY} = {'diff': [0.00010533299999999912, 0.00010605499999999726, 0.00010576400000000125, 0.00010608300000000334, 0.00010584800000000213, 0.00010526400000000075, 0.00010587499999999833, 0.00010611099999999901...</msg>
<status status="PASS" starttime="20201030 15:53:19.120" endtime="20201030 15:53:19.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.128" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:53:19.127" endtime="20201030 15:53:19.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.131" level="INFO">VALUE: [0.00010533299999999912, 0.00010605499999999726, 0.00010576400000000125, 0.00010608300000000334, 0.00010584800000000213, 0.00010526400000000075, 0.00010587499999999833, 0.00010611099999999901, 0.0001053889999999974, 0.00010569399999999993, 0.0001055559999999997, 0.00010581900000000005, 0.00010568000000000036, 0.00010541600000000054, 0.00010588900000000137, 0.00010550000000000143, 0.0001052499999999977, 0.00010550000000000143, 0.00010599999999999846, 0.00010511100000000148, 0.00010591600000000104, 0.00010572200000000254, 0.00010579200000000039, 0.00010547300000000176, 0.00010563899999999765, 0.00010579200000000039, 0.00010593000000000061, 0.0001055689999999998, 0.0001055559999999997, 0.00010566700000000026, 0.00010575000000000168, 0.0001057079999999995, 0.00010599999999999846, 0.00010576400000000125, 0.00010605500000000073, 0.00010598699999999836, 0.00010576400000000125, 0.00010591599999999757, 0.00010587499999999833, 0.00010594400000000018, 0.00010517999999999986, 0.00010584699999999919, 0.00010588900000000137, 0.00010581999999999953, 0.00010558400000000231, 0.00010611100000000248, 0.00010541700000000001, 0.00010530599999999946, 0.0001060690000000003, 0.00010604100000000116]</msg>
<status status="PASS" starttime="20201030 15:53:19.129" endtime="20201030 15:53:19.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.124" endtime="20201030 15:53:19.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:19.137" endtime="20201030 15:53:19.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.135" endtime="20201030 15:53:19.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.134" endtime="20201030 15:53:19.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.770" endtime="20201030 15:53:19.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.770" endtime="20201030 15:53:19.157"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.166" endtime="20201030 15:53:19.187"></status>
</kw>
<msg timestamp="20201030 15:53:19.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.165" endtime="20201030 15:53:19.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.189" endtime="20201030 15:53:19.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.192" endtime="20201030 15:53:19.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.162" endtime="20201030 15:53:19.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.160" endtime="20201030 15:53:19.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.201" endtime="20201030 15:53:19.486"></status>
</kw>
<msg timestamp="20201030 15:53:19.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020432278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.200" endtime="20201030 15:53:19.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020432278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.491" endtime="20201030 15:53:19.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.499" endtime="20201030 15:53:19.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.197" endtime="20201030 15:53:19.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.195" endtime="20201030 15:53:19.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:19.506" level="INFO">${RESULT} = [{'diff': 0.0001063889999999984}, {'diff': 0.0001063889999999984}, {'diff': 0.00010709700000000044}, {'diff': 0.00010698599999999989}, {'diff': 0.00010644400000000068}, {'diff': 0.00010705500000000173...</msg>
<status status="PASS" starttime="20201030 15:53:19.503" endtime="20201030 15:53:19.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:19.511" level="INFO">${ACCURACY} = {'diff': [0.0001063889999999984, 0.0001063889999999984, 0.00010709700000000044, 0.00010698599999999989, 0.00010644400000000068, 0.00010705500000000173, 0.0001065690000000008, 0.00010699999999999946, 0...</msg>
<status status="PASS" starttime="20201030 15:53:19.507" endtime="20201030 15:53:19.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.516" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:53:19.515" endtime="20201030 15:53:19.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.518" level="INFO">VALUE: [0.0001063889999999984, 0.0001063889999999984, 0.00010709700000000044, 0.00010698599999999989, 0.00010644400000000068, 0.00010705500000000173, 0.0001065690000000008, 0.00010699999999999946, 0.00010666700000000126, 0.00010633299999999665, 0.00010679199999999792, 0.00010686099999999976, 0.00010699999999999946, 0.00010657000000000028, 0.00010622299999999904, 0.0001065279999999981, 0.0001070690000000013, 0.00010711100000000001, 0.00010701399999999903, 0.00010698599999999989, 0.0001067499999999992, 0.00010699999999999946, 0.00010630500000000098, 0.0001067499999999992, 0.00010697200000000032, 0.00010637499999999883, 0.00010719399999999796, 0.00010629199999999742, 0.000107208000000001, 0.00010692999999999814, 0.00010712499999999958, 0.00010679200000000139, 0.00010641700000000101, 0.00010711100000000001, 0.00010666700000000126, 0.00010686099999999976, 0.00010697299999999979, 0.00010683299999999715, 0.00010629199999999742, 0.00010623699999999861, 0.00010627700000000184, 0.00010672200000000007, 0.00010697200000000032, 0.00010668000000000136, 0.00010669400000000093, 0.00010693100000000108, 0.00010691700000000151, 0.00010684700000000019, 0.00010687499999999933, 0.00010700000000000293]</msg>
<status status="PASS" starttime="20201030 15:53:19.517" endtime="20201030 15:53:19.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.512" endtime="20201030 15:53:19.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:19.524" endtime="20201030 15:53:19.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.522" endtime="20201030 15:53:19.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.521" endtime="20201030 15:53:19.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.158" endtime="20201030 15:53:19.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.158" endtime="20201030 15:53:19.544"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.553" endtime="20201030 15:53:19.574"></status>
</kw>
<msg timestamp="20201030 15:53:19.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.552" endtime="20201030 15:53:19.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.576" endtime="20201030 15:53:19.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.578" endtime="20201030 15:53:19.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.549" endtime="20201030 15:53:19.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.547" endtime="20201030 15:53:19.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.588" endtime="20201030 15:53:19.877"></status>
</kw>
<msg timestamp="20201030 15:53:19.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020449236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.586" endtime="20201030 15:53:19.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020449236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.881" endtime="20201030 15:53:19.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.889" endtime="20201030 15:53:19.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.583" endtime="20201030 15:53:19.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.582" endtime="20201030 15:53:19.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:19.896" level="INFO">${RESULT} = [{'diff': 0.00010713899999999915}, {'diff': 0.00010776399999999978}, {'diff': 0.00010813900000000015}, {'diff': 0.00010795900000000122}, {'diff': 0.00010783299999999815}, {'diff': 0.000107666999999998...</msg>
<status status="PASS" starttime="20201030 15:53:19.893" endtime="20201030 15:53:19.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:19.900" level="INFO">${ACCURACY} = {'diff': [0.00010713899999999915, 0.00010776399999999978, 0.00010813900000000015, 0.00010795900000000122, 0.00010783299999999815, 0.00010766699999999879, 0.0001080560000000022, 0.00010743100000000158,...</msg>
<status status="PASS" starttime="20201030 15:53:19.897" endtime="20201030 15:53:19.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.905" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:53:19.904" endtime="20201030 15:53:19.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.908" level="INFO">VALUE: [0.00010713899999999915, 0.00010776399999999978, 0.00010813900000000015, 0.00010795900000000122, 0.00010783299999999815, 0.00010766699999999879, 0.0001080560000000022, 0.00010743100000000158, 0.00010759800000000042, 0.00010743099999999811, 0.00010763899999999965, 0.00010730500000000198, 0.00010791599999999957, 0.00010740299999999897, 0.00010769400000000193, 0.00010736100000000026, 0.0001080279999999996, 0.00010762500000000008, 0.0001072629999999998, 0.00010740299999999897, 0.0001073889999999994, 0.00010722300000000004, 0.00010798600000000089, 0.00010816599999999982, 0.00010740299999999897, 0.0001078889999999999, 0.0001072499999999997, 0.00010794399999999871, 0.00010790299999999947, 0.0001073889999999994, 0.00010812500000000058, 0.00010707000000000078, 0.00010805599999999874, 0.00010799999999999699, 0.00010762500000000008, 0.00010791599999999957, 0.00010734700000000069, 0.00010776399999999978, 0.00010787500000000033, 0.00010780499999999901, 0.00010768100000000183, 0.00010781999999999806, 0.00010743099999999811, 0.00010790299999999947, 0.00010723600000000014, 0.00010749999999999996, 0.00010784800000000067, 0.00010780500000000248, 0.00010780499999999901, 0.00010761100000000051]</msg>
<status status="PASS" starttime="20201030 15:53:19.906" endtime="20201030 15:53:19.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.901" endtime="20201030 15:53:19.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:19.913" endtime="20201030 15:53:19.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.911" endtime="20201030 15:53:19.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.910" endtime="20201030 15:53:19.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.545" endtime="20201030 15:53:19.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.545" endtime="20201030 15:53:19.934"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.943" endtime="20201030 15:53:19.966"></status>
</kw>
<msg timestamp="20201030 15:53:19.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.941" endtime="20201030 15:53:19.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.967" endtime="20201030 15:53:19.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.970" endtime="20201030 15:53:19.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.939" endtime="20201030 15:53:19.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.936" endtime="20201030 15:53:19.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.979" endtime="20201030 15:53:20.267"></status>
</kw>
<msg timestamp="20201030 15:53:20.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021439861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.978" endtime="20201030 15:53:20.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021439861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.272" endtime="20201030 15:53:20.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.280" endtime="20201030 15:53:20.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.975" endtime="20201030 15:53:20.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.973" endtime="20201030 15:53:20.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:20.287" level="INFO">${RESULT} = [{'diff': 0.00010899999999999799}, {'diff': 0.00010922299999999857}, {'diff': 0.00010884700000000219}, {'diff': 0.00010832000000000203}, {'diff': 0.00010901400000000103}, {'diff': 0.000109055999999999...</msg>
<status status="PASS" starttime="20201030 15:53:20.284" endtime="20201030 15:53:20.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:20.292" level="INFO">${ACCURACY} = {'diff': [0.00010899999999999799, 0.00010922299999999857, 0.00010884700000000219, 0.00010832000000000203, 0.00010901400000000103, 0.00010905599999999974, 0.0001090699999999993, 0.00010863900000000065,...</msg>
<status status="PASS" starttime="20201030 15:53:20.288" endtime="20201030 15:53:20.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.296" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:53:20.295" endtime="20201030 15:53:20.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.299" level="INFO">VALUE: [0.00010899999999999799, 0.00010922299999999857, 0.00010884700000000219, 0.00010832000000000203, 0.00010901400000000103, 0.00010905599999999974, 0.0001090699999999993, 0.00010863900000000065, 0.00010881999999999906, 0.00010874999999999774, 0.00010827799999999985, 0.00010837500000000083, 0.00010886099999999829, 0.00010840299999999997, 0.00010919399999999996, 0.00010909799999999845, 0.00010883399999999863, 0.00010881999999999906, 0.00010866699999999979, 0.00010812500000000058, 0.00010874999999999774, 0.00010830500000000298, 0.00010854100000000019, 0.00010876400000000078, 0.00010911100000000201, 0.00010847200000000182, 0.00010873599999999817, 0.00010823600000000114, 0.00010901399999999756, 0.0001082500000000007, 0.00010836100000000126, 0.00010900000000000146, 0.00010880500000000001, 0.00010901399999999756, 0.00010861100000000151, 0.00010915300000000072, 0.00010876400000000078, 0.00010856899999999933, 0.00010918099999999986, 0.00010893099999999961, 0.00010843099999999911, 0.00010854199999999967, 0.00010841600000000007, 0.00010893000000000014, 0.00010829199999999942, 0.00010836099999999779, 0.00010850000000000096, 0.00010826400000000028, 0.00010813900000000015, 0.00010894399999999971]</msg>
<status status="PASS" starttime="20201030 15:53:20.297" endtime="20201030 15:53:20.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.292" endtime="20201030 15:53:20.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:20.305" endtime="20201030 15:53:20.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.303" endtime="20201030 15:53:20.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.302" endtime="20201030 15:53:20.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.935" endtime="20201030 15:53:20.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.934" endtime="20201030 15:53:20.326"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.335" endtime="20201030 15:53:20.356"></status>
</kw>
<msg timestamp="20201030 15:53:20.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.333" endtime="20201030 15:53:20.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.357" endtime="20201030 15:53:20.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.360" endtime="20201030 15:53:20.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.330" endtime="20201030 15:53:20.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.328" endtime="20201030 15:53:20.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.369" endtime="20201030 15:53:20.654"></status>
</kw>
<msg timestamp="20201030 15:53:20.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.368" endtime="20201030 15:53:20.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.659" endtime="20201030 15:53:20.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.667" endtime="20201030 15:53:20.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.365" endtime="20201030 15:53:20.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.363" endtime="20201030 15:53:20.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:20.674" level="INFO">${RESULT} = [{'diff': 0.00011018100000000086}, {'diff': 0.00010951400000000153}, {'diff': 0.00010980500000000101}, {'diff': 0.00010966700000000079}, {'diff': 0.00010912500000000158}, {'diff': 0.000109125000000001...</msg>
<status status="PASS" starttime="20201030 15:53:20.671" endtime="20201030 15:53:20.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:20.679" level="INFO">${ACCURACY} = {'diff': [0.00011018100000000086, 0.00010951400000000153, 0.00010980500000000101, 0.00010966700000000079, 0.00010912500000000158, 0.00010912500000000158, 0.00010997199999999985, 0.00010980500000000101...</msg>
<status status="PASS" starttime="20201030 15:53:20.675" endtime="20201030 15:53:20.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.684" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:53:20.683" endtime="20201030 15:53:20.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.686" level="INFO">VALUE: [0.00011018100000000086, 0.00010951400000000153, 0.00010980500000000101, 0.00010966700000000079, 0.00010912500000000158, 0.00010912500000000158, 0.00010997199999999985, 0.00010980500000000101, 0.00010945799999999978, 0.00010912499999999811, 0.00010994399999999724, 0.00010998599999999942, 0.0001093890000000014, 0.00010923599999999867, 0.00010956900000000033, 0.00010934699999999922, 0.00010980600000000049, 0.0001097089999999995, 0.00010977799999999788, 0.00010938899999999793, 0.00010955600000000024, 0.00010950000000000196, 0.00010956900000000033, 0.00010999999999999899, 0.00010943000000000064, 0.0001093890000000014, 0.00011009699999999997, 0.00010987500000000233, 0.00010966699999999732, 0.00011018100000000086, 0.0001093890000000014, 0.00010968100000000036, 0.00010974999999999874, 0.00010987499999999886, 0.00011000000000000246, 0.00010949999999999849, 0.00010913899999999768, 0.00010951399999999806, 0.00010924999999999824, 0.0001095419999999972, 0.00010955600000000024, 0.00010930599999999999, 0.00010930599999999999, 0.00010988899999999843, 0.00010974999999999874, 0.00010970800000000003, 0.00010980500000000101, 0.00010966700000000079, 0.00010930499999999704, 0.00010926399999999781]</msg>
<status status="PASS" starttime="20201030 15:53:20.685" endtime="20201030 15:53:20.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.680" endtime="20201030 15:53:20.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:20.692" endtime="20201030 15:53:20.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.690" endtime="20201030 15:53:20.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.689" endtime="20201030 15:53:20.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.327" endtime="20201030 15:53:20.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.326" endtime="20201030 15:53:20.713"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.722" endtime="20201030 15:53:20.743"></status>
</kw>
<msg timestamp="20201030 15:53:20.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.720" endtime="20201030 15:53:20.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.745" endtime="20201030 15:53:20.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.748" endtime="20201030 15:53:20.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.717" endtime="20201030 15:53:20.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.715" endtime="20201030 15:53:20.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.757" endtime="20201030 15:53:21.045"></status>
</kw>
<msg timestamp="20201030 15:53:21.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020515639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020625889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.755" endtime="20201030 15:53:21.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020515639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020625889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.050" endtime="20201030 15:53:21.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.058" endtime="20201030 15:53:21.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.753" endtime="20201030 15:53:21.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.751" endtime="20201030 15:53:21.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.065" level="INFO">${RESULT} = [{'diff': 0.00011025000000000271}, {'diff': 0.00011074999999999974}, {'diff': 0.00011030499999999804}, {'diff': 0.00011033300000000065}, {'diff': 0.00011111100000000054}, {'diff': 0.000110179999999997...</msg>
<status status="PASS" starttime="20201030 15:53:21.061" endtime="20201030 15:53:21.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.069" level="INFO">${ACCURACY} = {'diff': [0.00011025000000000271, 0.00011074999999999974, 0.00011030499999999804, 0.00011033300000000065, 0.00011111100000000054, 0.00011017999999999792, 0.0001110549999999988, 0.00011056900000000133,...</msg>
<status status="PASS" starttime="20201030 15:53:21.066" endtime="20201030 15:53:21.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.074" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.072" endtime="20201030 15:53:21.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.076" level="INFO">VALUE: [0.00011025000000000271, 0.00011074999999999974, 0.00011030499999999804, 0.00011033300000000065, 0.00011111100000000054, 0.00011017999999999792, 0.0001110549999999988, 0.00011056900000000133, 0.00011104200000000217, 0.00011029200000000142, 0.00011045800000000078, 0.00011082000000000106, 0.00011055599999999777, 0.00011055600000000124, 0.00011044500000000068, 0.00011062499999999961, 0.00011086199999999977, 0.00011112500000000011, 0.00011113899999999968, 0.00011074999999999974, 0.00011062499999999961, 0.00011087499999999986, 0.00011058400000000038, 0.00011041699999999807, 0.00011113899999999968, 0.00011118099999999839, 0.00011098600000000042, 0.00011113800000000021, 0.00011056900000000133, 0.00011026399999999881, 0.00011084699999999725, 0.00011041699999999807, 0.00011049999999999949, 0.0001110419999999987, 0.00011083399999999716, 0.00011098600000000042, 0.00011068100000000136, 0.00011044500000000068, 0.00011079199999999845, 0.00011056899999999786, 0.00011061100000000004, 0.00011101400000000303, 0.00011099999999999999, 0.00011094399999999824, 0.00011034700000000022, 0.0001110419999999987, 0.00011033400000000013, 0.00011044500000000068, 0.00011113899999999968, 0.00011081900000000158]</msg>
<status status="PASS" starttime="20201030 15:53:21.075" endtime="20201030 15:53:21.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.070" endtime="20201030 15:53:21.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.081" endtime="20201030 15:53:21.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.080" endtime="20201030 15:53:21.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.079" endtime="20201030 15:53:21.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.713" endtime="20201030 15:53:21.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.713" endtime="20201030 15:53:21.102"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.111" endtime="20201030 15:53:21.134"></status>
</kw>
<msg timestamp="20201030 15:53:21.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.110" endtime="20201030 15:53:21.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.135" endtime="20201030 15:53:21.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.138" endtime="20201030 15:53:21.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.107" endtime="20201030 15:53:21.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.105" endtime="20201030 15:53:21.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.148" endtime="20201030 15:53:21.434"></status>
</kw>
<msg timestamp="20201030 15:53:21.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021409333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.146" endtime="20201030 15:53:21.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021409333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.439" endtime="20201030 15:53:21.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.447" endtime="20201030 15:53:21.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.143" endtime="20201030 15:53:21.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.142" endtime="20201030 15:53:21.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.454" level="INFO">${RESULT} = [{'diff': 0.00011123600000000067}, {'diff': 0.00011156899999999886}, {'diff': 0.00011208299999999893}, {'diff': 0.0001112220000000011}, {'diff': 0.00011192999999999967}, {'diff': 0.0001118059999999990...</msg>
<status status="PASS" starttime="20201030 15:53:21.450" endtime="20201030 15:53:21.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.458" level="INFO">${ACCURACY} = {'diff': [0.00011123600000000067, 0.00011156899999999886, 0.00011208299999999893, 0.0001112220000000011, 0.00011192999999999967, 0.00011180599999999902, 0.00011216699999999982, 0.00011176400000000031,...</msg>
<status status="PASS" starttime="20201030 15:53:21.455" endtime="20201030 15:53:21.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.463" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.462" endtime="20201030 15:53:21.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.465" level="INFO">VALUE: [0.00011123600000000067, 0.00011156899999999886, 0.00011208299999999893, 0.0001112220000000011, 0.00011192999999999967, 0.00011180599999999902, 0.00011216699999999982, 0.00011176400000000031, 0.00011123600000000067, 0.000111596999999998, 0.00011198600000000142, 0.00011156899999999886, 0.0001115549999999993, 0.00011183299999999868, 0.00011175000000000074, 0.00011143100000000211, 0.00011177799999999988, 0.00011216699999999982, 0.00011133400000000113, 0.00011126400000000328, 0.00011202800000000013, 0.00011141699999999907, 0.00011194399999999924, 0.00011165199999999681, 0.00011198600000000142, 0.00011155600000000224, 0.00011218000000000339, 0.00011180599999999902, 0.00011173600000000117, 0.00011176399999999684, 0.0001120700000000023, 0.00011193099999999914, 0.00011190200000000053, 0.00011116599999999935, 0.00011204100000000022, 0.00011108299999999793, 0.00011138899999999993, 0.00011162500000000061, 0.00011186099999999782, 0.00011156999999999834, 0.00011181999999999859, 0.00011192999999999967, 0.00011112500000000011, 0.00011201400000000056, 0.00011148699999999692, 0.00011125000000000024, 0.00011195800000000228, 0.0001117359999999977, 0.00011145800000000178, 0.00011206900000000283]</msg>
<status status="PASS" starttime="20201030 15:53:21.464" endtime="20201030 15:53:21.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.459" endtime="20201030 15:53:21.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.471" endtime="20201030 15:53:21.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.470" endtime="20201030 15:53:21.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.468" endtime="20201030 15:53:21.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.103" endtime="20201030 15:53:21.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.103" endtime="20201030 15:53:21.492"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.501" endtime="20201030 15:53:21.523"></status>
</kw>
<msg timestamp="20201030 15:53:21.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.499" endtime="20201030 15:53:21.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.524" endtime="20201030 15:53:21.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.527" endtime="20201030 15:53:21.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.497" endtime="20201030 15:53:21.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.495" endtime="20201030 15:53:21.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.537" endtime="20201030 15:53:21.823"></status>
</kw>
<msg timestamp="20201030 15:53:21.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020211694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020324625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.535" endtime="20201030 15:53:21.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020211694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020324625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.827" endtime="20201030 15:53:21.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.835" endtime="20201030 15:53:21.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.532" endtime="20201030 15:53:21.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.530" endtime="20201030 15:53:21.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.842" level="INFO">${RESULT} = [{'diff': 0.00011293100000000014}, {'diff': 0.00011248599999999845}, {'diff': 0.00011227800000000038}, {'diff': 0.0001130420000000007}, {'diff': 0.00011215300000000025}, {'diff': 0.0001127769999999979...</msg>
<status status="PASS" starttime="20201030 15:53:21.839" endtime="20201030 15:53:21.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.847" level="INFO">${ACCURACY} = {'diff': [0.00011293100000000014, 0.00011248599999999845, 0.00011227800000000038, 0.0001130420000000007, 0.00011215300000000025, 0.00011277699999999793, 0.00011263799999999824, 0.0001127359999999987, ...</msg>
<status status="PASS" starttime="20201030 15:53:21.843" endtime="20201030 15:53:21.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.852" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.851" endtime="20201030 15:53:21.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.855" level="INFO">VALUE: [0.00011293100000000014, 0.00011248599999999845, 0.00011227800000000038, 0.0001130420000000007, 0.00011215300000000025, 0.00011277699999999793, 0.00011263799999999824, 0.0001127359999999987, 0.00011234699999999875, 0.00011317999999999745, 0.000112596999999999, 0.00011231899999999961, 0.0001122359999999982, 0.00011251400000000106, 0.00011224999999999777, 0.0001127359999999987, 0.00011262499999999814, 0.00011300000000000199, 0.00011225000000000124, 0.00011276400000000131, 0.00011248599999999845, 0.00011223600000000167, 0.00011263900000000118, 0.00011236100000000179, 0.00011223600000000167, 0.00011266700000000032, 0.00011219399999999949, 0.00011232000000000256, 0.0001124160000000006, 0.00011261099999999857, 0.00011316700000000082, 0.00011268000000000042, 0.00011244399999999974, 0.00011256899999999986, 0.00011273600000000217, 0.0001130420000000007, 0.00011229199999999995, 0.00011252800000000063, 0.00011286099999999882, 0.00011211100000000154, 0.00011279200000000045, 0.00011245799999999931, 0.00011224999999999777, 0.00011274999999999827, 0.00011255499999999682, 0.00011304100000000122, 0.00011283299999999968, 0.00011238900000000093, 0.00011255599999999977, 0.00011275000000000174]</msg>
<status status="PASS" starttime="20201030 15:53:21.853" endtime="20201030 15:53:21.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.848" endtime="20201030 15:53:21.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.860" endtime="20201030 15:53:21.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.858" endtime="20201030 15:53:21.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.857" endtime="20201030 15:53:21.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.493" endtime="20201030 15:53:21.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.492" endtime="20201030 15:53:21.881"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.890" endtime="20201030 15:53:21.912"></status>
</kw>
<msg timestamp="20201030 15:53:21.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.888" endtime="20201030 15:53:21.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.913" endtime="20201030 15:53:21.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.916" endtime="20201030 15:53:21.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.885" endtime="20201030 15:53:21.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.883" endtime="20201030 15:53:21.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.926" endtime="20201030 15:53:22.213"></status>
</kw>
<msg timestamp="20201030 15:53:22.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.924" endtime="20201030 15:53:22.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.218" endtime="20201030 15:53:22.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.226" endtime="20201030 15:53:22.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.921" endtime="20201030 15:53:22.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.920" endtime="20201030 15:53:22.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.233" level="INFO">${RESULT} = [{'diff': 0.00011408300000000093}, {'diff': 0.00011374999999999927}, {'diff': 0.00011347199999999988}, {'diff': 0.000113597}, {'diff': 0.0001140550000000018}, {'diff': 0.00011338900000000193}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:53:22.230" endtime="20201030 15:53:22.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.237" level="INFO">${ACCURACY} = {'diff': [0.00011408300000000093, 0.00011374999999999927, 0.00011347199999999988, 0.000113597, 0.0001140550000000018, 0.00011338900000000193, 0.00011361099999999957, 0.00011348599999999945, 0.00011341...</msg>
<status status="PASS" starttime="20201030 15:53:22.234" endtime="20201030 15:53:22.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.242" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.241" endtime="20201030 15:53:22.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.244" level="INFO">VALUE: [0.00011408300000000093, 0.00011374999999999927, 0.00011347199999999988, 0.000113597, 0.0001140550000000018, 0.00011338900000000193, 0.00011361099999999957, 0.00011348599999999945, 0.00011341700000000107, 0.000113597, 0.0001133749999999989, 0.0001133749999999989, 0.0001140420000000017, 0.00011324999999999877, 0.00011331900000000061, 0.00011348599999999945, 0.00011391599999999863, 0.00011312500000000211, 0.00011313900000000168, 0.00011348599999999945, 0.0001133749999999989, 0.00011334699999999975, 0.00011343100000000064, 0.00011326400000000181, 0.00011398700000000289, 0.00011399999999999952, 0.00011422200000000063, 0.00011311100000000254, 0.00011412499999999964, 0.00011390299999999853, 0.00011336099999999932, 0.00011377799999999841, 0.00011361099999999957, 0.00011380600000000102, 0.00011329200000000095, 0.00011408300000000093, 0.00011382000000000059, 0.00011312499999999864, 0.00011324999999999877, 0.00011400000000000299, 0.00011340299999999803, 0.00011333300000000018, 0.0001130969999999995, 0.00011338899999999846, 0.0001135420000000012, 0.0001133749999999989, 0.00011386099999999982, 0.00011411100000000007, 0.00011383400000000016, 0.00011417999999999845]</msg>
<status status="PASS" starttime="20201030 15:53:22.243" endtime="20201030 15:53:22.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.238" endtime="20201030 15:53:22.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.250" endtime="20201030 15:53:22.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.248" endtime="20201030 15:53:22.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.247" endtime="20201030 15:53:22.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.882" endtime="20201030 15:53:22.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.881" endtime="20201030 15:53:22.271"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.280" endtime="20201030 15:53:22.302"></status>
</kw>
<msg timestamp="20201030 15:53:22.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.278" endtime="20201030 15:53:22.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.304" endtime="20201030 15:53:22.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.306" endtime="20201030 15:53:22.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.275" endtime="20201030 15:53:22.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.273" endtime="20201030 15:53:22.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.316" endtime="20201030 15:53:22.602"></status>
</kw>
<msg timestamp="20201030 15:53:22.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02134675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021461125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:22.314" endtime="20201030 15:53:22.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02134675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021461125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:22.606" endtime="20201030 15:53:22.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.615" endtime="20201030 15:53:22.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.311" endtime="20201030 15:53:22.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.310" endtime="20201030 15:53:22.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.622" level="INFO">${RESULT} = [{'diff': 0.0001143749999999999}, {'diff': 0.0001150559999999988}, {'diff': 0.00011479199999999898}, {'diff': 0.0001142360000000002}, {'diff': 0.00011463899999999971}, {'diff': 0.00011450000000000002}...</msg>
<status status="PASS" starttime="20201030 15:53:22.618" endtime="20201030 15:53:22.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.626" level="INFO">${ACCURACY} = {'diff': [0.0001143749999999999, 0.0001150559999999988, 0.00011479199999999898, 0.0001142360000000002, 0.00011463899999999971, 0.00011450000000000002, 0.00011456900000000186, 0.00011487499999999692, 0...</msg>
<status status="PASS" starttime="20201030 15:53:22.623" endtime="20201030 15:53:22.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.630" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.629" endtime="20201030 15:53:22.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.634" level="INFO">VALUE: [0.0001143749999999999, 0.0001150559999999988, 0.00011479199999999898, 0.0001142360000000002, 0.00011463899999999971, 0.00011450000000000002, 0.00011456900000000186, 0.00011487499999999692, 0.00011462500000000014, 0.000114290999999999, 0.0001150550000000028, 0.00011480599999999855, 0.00011520799999999859, 0.00011429199999999848, 0.00011450000000000002, 0.00011483400000000116, 0.00011518099999999892, 0.00011486100000000082, 0.0001150689999999989, 0.00011448599999999698, 0.00011484699999999778, 0.00011451399999999959, 0.00011488899999999996, 0.00011451399999999959, 0.00011445900000000078, 0.00011506999999999837, 0.0001145420000000022, 0.00011451399999999959, 0.00011480600000000202, 0.00011486100000000082, 0.00011462500000000014, 0.00011516599999999988, 0.00011431899999999814, 0.00011415299999999878, 0.0001144169999999986, 0.00011443100000000164, 0.00011424999999999977, 0.00011500000000000052, 0.00011512500000000064, 0.00011519499999999849, 0.0001145689999999984, 0.00011502799999999966, 0.00011448600000000045, 0.00011519399999999902, 0.00011500000000000052, 0.000114290999999999, 0.0001144169999999986, 0.0001144169999999986, 0.00011413899999999921, 0.0001145420000000022]</msg>
<status status="PASS" starttime="20201030 15:53:22.632" endtime="20201030 15:53:22.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.627" endtime="20201030 15:53:22.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.639" endtime="20201030 15:53:22.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.638" endtime="20201030 15:53:22.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.636" endtime="20201030 15:53:22.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.271" endtime="20201030 15:53:22.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.271" endtime="20201030 15:53:22.660"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.669" endtime="20201030 15:53:22.691"></status>
</kw>
<msg timestamp="20201030 15:53:22.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.667" endtime="20201030 15:53:22.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.693" endtime="20201030 15:53:22.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.695" endtime="20201030 15:53:22.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.665" endtime="20201030 15:53:22.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.663" endtime="20201030 15:53:22.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.705" endtime="20201030 15:53:22.992"></status>
</kw>
<msg timestamp="20201030 15:53:22.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.703" endtime="20201030 15:53:22.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.996" endtime="20201030 15:53:23.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.005" endtime="20201030 15:53:23.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.701" endtime="20201030 15:53:23.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.699" endtime="20201030 15:53:23.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.012" level="INFO">${RESULT} = [{'diff': 0.00011565300000000028}, {'diff': 0.00011581999999999912}, {'diff': 0.00011511100000000107}, {'diff': 0.00011534699999999828}, {'diff': 0.00011616700000000035}, {'diff': 0.000115416000000000...</msg>
<status status="PASS" starttime="20201030 15:53:23.009" endtime="20201030 15:53:23.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.017" level="INFO">${ACCURACY} = {'diff': [0.00011565300000000028, 0.00011581999999999912, 0.00011511100000000107, 0.00011534699999999828, 0.00011616700000000035, 0.00011541600000000013, 0.00011595799999999934, 0.00011530600000000252...</msg>
<status status="PASS" starttime="20201030 15:53:23.013" endtime="20201030 15:53:23.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.022" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.021" endtime="20201030 15:53:23.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.025" level="INFO">VALUE: [0.00011565300000000028, 0.00011581999999999912, 0.00011511100000000107, 0.00011534699999999828, 0.00011616700000000035, 0.00011541600000000013, 0.00011595799999999934, 0.00011530600000000252, 0.00011609699999999903, 0.00011616700000000035, 0.00011606999999999937, 0.00011562500000000114, 0.00011575000000000127, 0.00011616700000000035, 0.00011599999999999805, 0.00011619400000000002, 0.0001156109999999981, 0.00011550000000000102, 0.00011600000000000152, 0.00011513900000000021, 0.00011579199999999998, 0.00011606999999999937, 0.0001157499999999978, 0.00011573599999999823, 0.00011576300000000136, 0.00011569399999999952, 0.00011573599999999823, 0.00011552800000000016, 0.00011555499999999982, 0.00011569399999999952, 0.00011512500000000064, 0.00011581999999999912, 0.0001160559999999998, 0.00011558299999999896, 0.00011557000000000234, 0.00011572299999999813, 0.00011562500000000114, 0.00011563900000000071, 0.00011548600000000145, 0.00011526400000000034, 0.00011620800000000306, 0.00011619400000000002, 0.00011579199999999998, 0.00011526400000000034, 0.00011532000000000209, 0.00011562500000000114, 0.0001153750000000009, 0.00011530599999999905, 0.00011600000000000152, 0.00011597199999999891]</msg>
<status status="PASS" starttime="20201030 15:53:23.023" endtime="20201030 15:53:23.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.018" endtime="20201030 15:53:23.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.030" endtime="20201030 15:53:23.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.028" endtime="20201030 15:53:23.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.027" endtime="20201030 15:53:23.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.661" endtime="20201030 15:53:23.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.660" endtime="20201030 15:53:23.051"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.060" endtime="20201030 15:53:23.082"></status>
</kw>
<msg timestamp="20201030 15:53:23.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.058" endtime="20201030 15:53:23.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.083" endtime="20201030 15:53:23.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.086" endtime="20201030 15:53:23.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.055" endtime="20201030 15:53:23.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.053" endtime="20201030 15:53:23.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.095" endtime="20201030 15:53:23.384"></status>
</kw>
<msg timestamp="20201030 15:53:23.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020322097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020438458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.094" endtime="20201030 15:53:23.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020322097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020438458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.388" endtime="20201030 15:53:23.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.396" endtime="20201030 15:53:23.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.091" endtime="20201030 15:53:23.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.089" endtime="20201030 15:53:23.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.403" level="INFO">${RESULT} = [{'diff': 0.00011636099999999885}, {'diff': 0.00011700000000000252}, {'diff': 0.00011645799999999984}, {'diff': 0.00011649999999999855}, {'diff': 0.00011658299999999996}, {'diff': 0.000116917000000001...</msg>
<status status="PASS" starttime="20201030 15:53:23.400" endtime="20201030 15:53:23.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.407" level="INFO">${ACCURACY} = {'diff': [0.00011636099999999885, 0.00011700000000000252, 0.00011645799999999984, 0.00011649999999999855, 0.00011658299999999996, 0.0001169170000000011, 0.00011690300000000153, 0.00011626400000000134,...</msg>
<status status="PASS" starttime="20201030 15:53:23.404" endtime="20201030 15:53:23.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.412" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.411" endtime="20201030 15:53:23.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.415" level="INFO">VALUE: [0.00011636099999999885, 0.00011700000000000252, 0.00011645799999999984, 0.00011649999999999855, 0.00011658299999999996, 0.0001169170000000011, 0.00011690300000000153, 0.00011626400000000134, 0.00011637499999999842, 0.00011626400000000134, 0.00011677799999999794, 0.00011625000000000177, 0.00011699999999999905, 0.0001163750000000019, 0.0001164300000000007, 0.00011670900000000303, 0.0001169170000000011, 0.00011719499999999702, 0.0001162360000000022, 0.00011718099999999745, 0.00011645799999999984, 0.00011719399999999755, 0.00011712499999999917, 0.00011676399999999837, 0.00011715300000000178, 0.00011679199999999751, 0.0001166109999999991, 0.0001169309999999972, 0.00011643100000000017, 0.00011719500000000049, 0.00011713900000000221, 0.0001162369999999982, 0.00011686199999999883, 0.000116388999999998, 0.00011622200000000263, 0.00011702799999999819, 0.00011654200000000073, 0.00011693100000000067, 0.00011648600000000245, 0.00011719500000000049, 0.00011702800000000166, 0.00011690300000000153, 0.00011688800000000249, 0.00011641599999999766, 0.00011686099999999935, 0.0001169300000000012, 0.00011673599999999923, 0.00011704199999999776, 0.0001163750000000019, 0.00011701400000000209]</msg>
<status status="PASS" starttime="20201030 15:53:23.413" endtime="20201030 15:53:23.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.408" endtime="20201030 15:53:23.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.420" endtime="20201030 15:53:23.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.418" endtime="20201030 15:53:23.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.417" endtime="20201030 15:53:23.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.052" endtime="20201030 15:53:23.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.051" endtime="20201030 15:53:23.441"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.450" endtime="20201030 15:53:23.472"></status>
</kw>
<msg timestamp="20201030 15:53:23.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.448" endtime="20201030 15:53:23.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.473" endtime="20201030 15:53:23.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.476" endtime="20201030 15:53:23.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.445" endtime="20201030 15:53:23.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.443" endtime="20201030 15:53:23.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.486" endtime="20201030 15:53:23.772"></status>
</kw>
<msg timestamp="20201030 15:53:23.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021234611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021352069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.484" endtime="20201030 15:53:23.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021234611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021352069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.776" endtime="20201030 15:53:23.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.785" endtime="20201030 15:53:23.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.481" endtime="20201030 15:53:23.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.479" endtime="20201030 15:53:23.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.792" level="INFO">${RESULT} = [{'diff': 0.00011745800000000084}, {'diff': 0.000117695000000001}, {'diff': 0.00011759699999999706}, {'diff': 0.00011797200000000091}, {'diff': 0.00011725000000000277}, {'diff': 0.00011732000000000062...</msg>
<status status="PASS" starttime="20201030 15:53:23.789" endtime="20201030 15:53:23.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.796" level="INFO">${ACCURACY} = {'diff': [0.00011745800000000084, 0.000117695000000001, 0.00011759699999999706, 0.00011797200000000091, 0.00011725000000000277, 0.00011732000000000062, 0.00011783400000000069, 0.00011772200000000066, ...</msg>
<status status="PASS" starttime="20201030 15:53:23.793" endtime="20201030 15:53:23.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.801" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.799" endtime="20201030 15:53:23.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.803" level="INFO">VALUE: [0.00011745800000000084, 0.000117695000000001, 0.00011759699999999706, 0.00011797200000000091, 0.00011725000000000277, 0.00011732000000000062, 0.00011783400000000069, 0.00011772200000000066, 0.00011768099999999795, 0.00011712500000000264, 0.00011776399999999937, 0.00011790200000000306, 0.0001174170000000016, 0.00011809699999999757, 0.00011817999999999898, 0.00011726399999999887, 0.00011800000000000005, 0.00011726399999999887, 0.00011819499999999802, 0.00011800000000000005, 0.0001177629999999999, 0.00011777799999999894, 0.00011780500000000207, 0.0001174170000000016, 0.00011818000000000245, 0.00011720799999999712, 0.00011797200000000091, 0.0001170560000000008, 0.00011723599999999973, 0.00011751400000000259, 0.00011744499999999727, 0.00011787499999999992, 0.00011730599999999758, 0.00011752800000000216, 0.00011795799999999787, 0.0001179300000000022, 0.00011747200000000041, 0.0001175560000000013, 0.00011775000000000327, 0.00011733400000000019, 0.00011805499999999886, 0.0001176110000000001, 0.00011709799999999951, 0.00011748699999999945, 0.0001171109999999996, 0.00011748599999999998, 0.00011715299999999831, 0.0001173049999999981, 0.0001175690000000014, 0.00011730600000000105]</msg>
<status status="PASS" starttime="20201030 15:53:23.802" endtime="20201030 15:53:23.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.797" endtime="20201030 15:53:23.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.817" endtime="20201030 15:53:23.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.815" endtime="20201030 15:53:23.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.814" endtime="20201030 15:53:23.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.442" endtime="20201030 15:53:23.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.441" endtime="20201030 15:53:23.838"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.847" endtime="20201030 15:53:23.868"></status>
</kw>
<msg timestamp="20201030 15:53:23.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.845" endtime="20201030 15:53:23.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.870" endtime="20201030 15:53:23.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.873" endtime="20201030 15:53:23.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.842" endtime="20201030 15:53:23.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.840" endtime="20201030 15:53:23.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.882" endtime="20201030 15:53:24.169"></status>
</kw>
<msg timestamp="20201030 15:53:24.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020356681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.880" endtime="20201030 15:53:24.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020356681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.173" endtime="20201030 15:53:24.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.182" endtime="20201030 15:53:24.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.878" endtime="20201030 15:53:24.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.876" endtime="20201030 15:53:24.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:24.188" level="INFO">${RESULT} = [{'diff': 0.00011848700000000045}, {'diff': 0.0001191249999999977}, {'diff': 0.00011831900000000214}, {'diff': 0.000118389}, {'diff': 0.00011884699999999832}, {'diff': 0.0001187500000000008}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:53:24.185" endtime="20201030 15:53:24.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:24.194" level="INFO">${ACCURACY} = {'diff': [0.00011848700000000045, 0.0001191249999999977, 0.00011831900000000214, 0.000118389, 0.00011884699999999832, 0.0001187500000000008, 0.00011886100000000135, 0.00011894499999999877, 0.000119028...</msg>
<status status="PASS" starttime="20201030 15:53:24.189" endtime="20201030 15:53:24.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.198" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:53:24.197" endtime="20201030 15:53:24.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.201" level="INFO">VALUE: [0.00011848700000000045, 0.0001191249999999977, 0.00011831900000000214, 0.000118389, 0.00011884699999999832, 0.0001187500000000008, 0.00011886100000000135, 0.00011894499999999877, 0.00011902800000000019, 0.00011866599999999991, 0.00011886100000000135, 0.00011916699999999988, 0.00011829199999999901, 0.00011876400000000037, 0.00011850000000000055, 0.00011894400000000277, 0.00011848700000000045, 0.00011890300000000006, 0.00011873600000000123, 0.00011916699999999988, 0.00011843100000000217, 0.00011833300000000171, 0.00011890200000000059, 0.00011865299999999981, 0.00011909700000000203, 0.00011898600000000148, 0.00011837500000000042, 0.0001189309999999992, 0.0001190690000000029, 0.00011916699999999988, 0.00011912500000000117, 0.00011905599999999933, 0.00011836100000000085, 0.00011847199999999794, 0.00011837500000000042, 0.00011912500000000117, 0.0001183049999999991, 0.00011899999999999758, 0.00011900000000000105, 0.00011873599999999776, 0.00011837499999999695, 0.00011851400000000012, 0.00011836100000000085, 0.00011868100000000242, 0.00011831999999999815, 0.00011913900000000074, 0.00011867999999999948, 0.0001189439999999993, 0.00011906899999999943, 0.00011848600000000098]</msg>
<status status="PASS" starttime="20201030 15:53:24.199" endtime="20201030 15:53:24.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.194" endtime="20201030 15:53:24.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.206" endtime="20201030 15:53:24.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.204" endtime="20201030 15:53:24.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.203" endtime="20201030 15:53:24.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.839" endtime="20201030 15:53:24.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.838" endtime="20201030 15:53:24.227"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.236" endtime="20201030 15:53:24.257"></status>
</kw>
<msg timestamp="20201030 15:53:24.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.234" endtime="20201030 15:53:24.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.259" endtime="20201030 15:53:24.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.261" endtime="20201030 15:53:24.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.232" endtime="20201030 15:53:24.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.229" endtime="20201030 15:53:24.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.271" endtime="20201030 15:53:24.558"></status>
</kw>
<msg timestamp="20201030 15:53:24.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020335194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.269" endtime="20201030 15:53:24.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020335194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.563" endtime="20201030 15:53:24.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.571" endtime="20201030 15:53:24.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.267" endtime="20201030 15:53:24.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.265" endtime="20201030 15:53:24.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:24.578" level="INFO">${RESULT} = [{'diff': 0.00011979200000000051}, {'diff': 0.00011980600000000008}, {'diff': 0.00011950000000000155}, {'diff': 0.0001200699999999999}, {'diff': 0.00011937500000000142}, {'diff': 0.0001194309999999997...</msg>
<status status="PASS" starttime="20201030 15:53:24.575" endtime="20201030 15:53:24.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:24.582" level="INFO">${ACCURACY} = {'diff': [0.00011979200000000051, 0.00011980600000000008, 0.00011950000000000155, 0.0001200699999999999, 0.00011937500000000142, 0.0001194309999999997, 0.00011980600000000008, 0.00011962500000000167, ...</msg>
<status status="PASS" starttime="20201030 15:53:24.579" endtime="20201030 15:53:24.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.587" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:53:24.586" endtime="20201030 15:53:24.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.589" level="INFO">VALUE: [0.00011979200000000051, 0.00011980600000000008, 0.00011950000000000155, 0.0001200699999999999, 0.00011937500000000142, 0.0001194309999999997, 0.00011980600000000008, 0.00011962500000000167, 0.0001199440000000003, 0.00011955500000000036, 0.00012018000000000098, 0.00011952800000000069, 0.0001197500000000018, 0.00011912500000000117, 0.00011912500000000117, 0.00011980600000000008, 0.00011986099999999889, 0.00012000000000000205, 0.0001191379999999978, 0.00011965300000000081, 0.00011981900000000018, 0.0001196110000000021, 0.00012006900000000043, 0.00011968099999999995, 0.00011923600000000173, 0.00011930600000000305, 0.00011937500000000142, 0.00011950000000000155, 0.00011987499999999846, 0.0001196249999999982, 0.00011952800000000069, 0.0001195829999999995, 0.00011992999999999726, 0.00011968000000000048, 0.00011980499999999714, 0.00011997199999999944, 0.00011930600000000305, 0.000119695000000003, 0.00011986100000000235, 0.00011941700000000013, 0.00011966700000000038, 0.00011936100000000185, 0.00011931899999999968, 0.00012018000000000098, 0.00011981900000000018, 0.00011980600000000008, 0.00011997199999999944, 0.00011969499999999952, 0.0001196110000000021, 0.00011998599999999901]</msg>
<status status="PASS" starttime="20201030 15:53:24.588" endtime="20201030 15:53:24.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.583" endtime="20201030 15:53:24.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.594" endtime="20201030 15:53:24.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.593" endtime="20201030 15:53:24.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.592" endtime="20201030 15:53:24.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.228" endtime="20201030 15:53:24.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.227" endtime="20201030 15:53:24.615"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.624" endtime="20201030 15:53:24.648"></status>
</kw>
<msg timestamp="20201030 15:53:24.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.623" endtime="20201030 15:53:24.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.649" endtime="20201030 15:53:24.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.652" endtime="20201030 15:53:24.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.620" endtime="20201030 15:53:24.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.618" endtime="20201030 15:53:24.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.661" endtime="20201030 15:53:24.947"></status>
</kw>
<msg timestamp="20201030 15:53:24.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021411486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.660" endtime="20201030 15:53:24.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021411486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.951" endtime="20201030 15:53:24.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.960" endtime="20201030 15:53:24.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.657" endtime="20201030 15:53:24.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.655" endtime="20201030 15:53:24.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:24.966" level="INFO">${RESULT} = [{'diff': 0.00012054200000000126}, {'diff': 0.00012104099999999882}, {'diff': 0.00012076299999999943}, {'diff': 0.00012086099999999989}, {'diff': 0.0001206249999999992}, {'diff': 0.0001209300000000017...</msg>
<status status="PASS" starttime="20201030 15:53:24.963" endtime="20201030 15:53:24.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:24.971" level="INFO">${ACCURACY} = {'diff': [0.00012054200000000126, 0.00012104099999999882, 0.00012076299999999943, 0.00012086099999999989, 0.0001206249999999992, 0.00012093000000000173, 0.00012098600000000001, 0.00012080600000000108,...</msg>
<status status="PASS" starttime="20201030 15:53:24.968" endtime="20201030 15:53:24.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.975" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:53:24.974" endtime="20201030 15:53:24.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.978" level="INFO">VALUE: [0.00012054200000000126, 0.00012104099999999882, 0.00012076299999999943, 0.00012086099999999989, 0.0001206249999999992, 0.00012093000000000173, 0.00012098600000000001, 0.00012080600000000108, 0.0001206249999999992, 0.00012059700000000007, 0.00012123600000000026, 0.0001210700000000009, 0.00012088899999999903, 0.0001211249999999997, 0.00012029199999999754, 0.00012018100000000045, 0.00012084700000000032, 0.0001210700000000009, 0.00012116699999999841, 0.00012100000000000305, 0.00012044500000000027, 0.00012069500000000052, 0.00012080499999999814, 0.0001204310000000007, 0.00012038800000000252, 0.00012055500000000136, 0.00012117999999999851, 0.00012100000000000305, 0.00012055499999999789, 0.00012029100000000154, 0.00012081900000000118, 0.0001206249999999992, 0.0001210700000000009, 0.00012101399999999915, 0.0001207500000000028, 0.00012072200000000019, 0.0001211249999999997, 0.00012055499999999789, 0.00012049999999999908, 0.00012083299999999728, 0.00012048600000000298, 0.00012080600000000108, 0.00012068100000000095, 0.00012066700000000138, 0.00012047199999999994, 0.00012055600000000083, 0.00012065300000000181, 0.00012119400000000155, 0.00012117999999999851, 0.0001208050000000016]</msg>
<status status="PASS" starttime="20201030 15:53:24.976" endtime="20201030 15:53:24.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.972" endtime="20201030 15:53:24.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.984" endtime="20201030 15:53:25.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.982" endtime="20201030 15:53:25.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.981" endtime="20201030 15:53:25.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.616" endtime="20201030 15:53:25.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.616" endtime="20201030 15:53:25.005"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.014" endtime="20201030 15:53:25.035"></status>
</kw>
<msg timestamp="20201030 15:53:25.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.013" endtime="20201030 15:53:25.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.036" endtime="20201030 15:53:25.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.039" endtime="20201030 15:53:25.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.010" endtime="20201030 15:53:25.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.007" endtime="20201030 15:53:25.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.049" endtime="20201030 15:53:25.334"></status>
</kw>
<msg timestamp="20201030 15:53:25.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020608931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.047" endtime="20201030 15:53:25.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020608931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.339" endtime="20201030 15:53:25.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.347" endtime="20201030 15:53:25.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.044" endtime="20201030 15:53:25.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.042" endtime="20201030 15:53:25.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:25.354" level="INFO">${RESULT} = [{'diff': 0.00012179199999999904}, {'diff': 0.00012148600000000051}, {'diff': 0.00012205499999999939}, {'diff': 0.00012173599999999729}, {'diff': 0.00012112500000000317}, {'diff': 0.000121750000000000...</msg>
<status status="PASS" starttime="20201030 15:53:25.351" endtime="20201030 15:53:25.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:25.359" level="INFO">${ACCURACY} = {'diff': [0.00012179199999999904, 0.00012148600000000051, 0.00012205499999999939, 0.00012173599999999729, 0.00012112500000000317, 0.00012175000000000033, 0.00012124999999999983, 0.00012113899999999928...</msg>
<status status="PASS" starttime="20201030 15:53:25.355" endtime="20201030 15:53:25.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.364" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:53:25.363" endtime="20201030 15:53:25.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.366" level="INFO">VALUE: [0.00012179199999999904, 0.00012148600000000051, 0.00012205499999999939, 0.00012173599999999729, 0.00012112500000000317, 0.00012175000000000033, 0.00012124999999999983, 0.00012113899999999928, 0.00012205599999999886, 0.00012219499999999855, 0.00012205599999999886, 0.00012191699999999916, 0.0001221120000000006, 0.00012177799999999947, 0.0001219579999999984, 0.00012158299999999803, 0.00012150000000000008, 0.00012206899999999896, 0.00012158400000000097, 0.00012191699999999916, 0.00012200000000000058, 0.00012180599999999861, 0.00012111199999999961, 0.00012138899999999953, 0.00012205499999999939, 0.00012166699999999891, 0.00012138899999999953, 0.00012175000000000033, 0.00012201400000000015, 0.00012163899999999978, 0.00012161100000000064, 0.00012211100000000114, 0.00012187500000000046, 0.0001221799999999995, 0.00012197199999999797, 0.0001221799999999995, 0.00012187500000000046, 0.00012195800000000187, 0.00012113899999999928, 0.00012182000000000165, 0.00012145900000000084, 0.00012137499999999996, 0.00012115300000000231, 0.00012188900000000003, 0.00012206900000000243, 0.00012115299999999884, 0.00012205500000000286, 0.00012151399999999965, 0.00012188900000000003, 0.00012131900000000168]</msg>
<status status="PASS" starttime="20201030 15:53:25.365" endtime="20201030 15:53:25.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.360" endtime="20201030 15:53:25.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:25.372" endtime="20201030 15:53:25.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.370" endtime="20201030 15:53:25.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.369" endtime="20201030 15:53:25.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.006" endtime="20201030 15:53:25.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.005" endtime="20201030 15:53:25.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.424" endtime="20201030 15:53:25.393"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:46.351" endtime="20201030 15:53:25.393" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:52:04.835" endtime="20201030 15:53:25.397"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.452" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:53:25.460" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:53:26.457" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:53:25.450" endtime="20201030 15:53:26.458"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.461" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 15:53:26.459" endtime="20201030 15:53:27.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.449" endtime="20201030 15:53:27.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:27.468" endtime="20201030 15:53:27.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.465" endtime="20201030 15:53:27.695"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.707" endtime="20201030 15:53:27.729"></status>
</kw>
<msg timestamp="20201030 15:53:27.729" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.706" endtime="20201030 15:53:27.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.732" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.730" endtime="20201030 15:53:27.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.735" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:27.733" endtime="20201030 15:53:27.735"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:27.703" endtime="20201030 15:53:27.736"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:27.701" endtime="20201030 15:53:27.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.700" endtime="20201030 15:53:27.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:27.740" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:27.740" endtime="20201030 15:53:27.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.737" endtime="20201030 15:53:27.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.699" endtime="20201030 15:53:27.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.699" endtime="20201030 15:53:27.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.742" endtime="20201030 15:53:27.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.697" endtime="20201030 15:53:27.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.745" endtime="20201030 15:53:27.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.696" endtime="20201030 15:53:27.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.448" endtime="20201030 15:53:27.747"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:27.753" endtime="20201030 15:53:27.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.752" endtime="20201030 15:53:27.773"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.786" endtime="20201030 15:53:27.804"></status>
</kw>
<msg timestamp="20201030 15:53:27.805" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.784" endtime="20201030 15:53:27.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.807" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.806" endtime="20201030 15:53:27.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.810" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:27.808" endtime="20201030 15:53:27.811"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:27.782" endtime="20201030 15:53:27.812"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:27.779" endtime="20201030 15:53:27.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.778" endtime="20201030 15:53:27.813"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:27.817" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:27.816" endtime="20201030 15:53:27.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.814" endtime="20201030 15:53:27.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.777" endtime="20201030 15:53:27.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.777" endtime="20201030 15:53:27.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.818" endtime="20201030 15:53:27.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.775" endtime="20201030 15:53:27.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.774" endtime="20201030 15:53:27.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.750" endtime="20201030 15:53:27.821"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.829" endtime="20201030 15:53:33.956"></status>
</kw>
<msg timestamp="20201030 15:53:33.957" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.828" endtime="20201030 15:53:33.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.962" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:33.959" endtime="20201030 15:53:33.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.965" endtime="20201030 15:53:33.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.825" endtime="20201030 15:53:33.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.823" endtime="20201030 15:53:33.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:33.975" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 15:53:33.972" endtime="20201030 15:53:33.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.984" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:33.982" endtime="20201030 15:53:33.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.988" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:33.986" endtime="20201030 15:53:33.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.977" endtime="20201030 15:53:33.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.998" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:33.996" endtime="20201030 15:53:33.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.003" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:34.001" endtime="20201030 15:53:34.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.991" endtime="20201030 15:53:34.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.012" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:34.010" endtime="20201030 15:53:34.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.017" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:53:34.015" endtime="20201030 15:53:34.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.006" endtime="20201030 15:53:34.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.032" endtime="20201030 15:53:34.332"></status>
</kw>
<msg timestamp="20201030 15:53:34.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066957375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167044889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.028" endtime="20201030 15:53:34.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066957375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167044889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.336" endtime="20201030 15:53:34.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.343" endtime="20201030 15:53:34.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.023" endtime="20201030 15:53:34.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.020" endtime="20201030 15:53:34.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:34.350" level="INFO">${FILTERED} = [{'diff': 0.100087514}, {'diff': 0.09995277700000002}, {'diff': 0.10001020799999999}, {'diff': 0.10000769399999992}, {'diff': 5.410000000205528e-07}, {'diff': 0.10001020800000004}, {'diff': 0.10001022...</msg>
<status status="PASS" starttime="20201030 15:53:34.347" endtime="20201030 15:53:34.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:34.353" level="INFO">${RESULT} = {'diff': [0.100087514, 0.09995277700000002, 0.10001020799999999, 0.10000769399999992, 5.410000000205528e-07, 0.10001020800000004, 0.10001022199999998, 0.10000766700000008, 0.10000822200000004, 0.10000...</msg>
<status status="PASS" starttime="20201030 15:53:34.351" endtime="20201030 15:53:34.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.358" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:34.357" endtime="20201030 15:53:34.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.360" level="INFO">VALUE: [0.100087514, 0.09995277700000002, 0.10001020799999999, 0.10000769399999992, 5.410000000205528e-07, 0.10001020800000004, 0.10001022199999998, 0.10000766700000008, 0.10000822200000004, 0.10000819399999994, 0.10000972200000002, 0.10001024999999997, 5.410000001315751e-07, 0.10000816600000029, 0.10000968099999996, 0.10000765300000003, 0.10000967999999988, 0.10000766699999986, 0.10000969499999979, 0.10000765300000003, 0.10000966600000005, 0.1000076390000002, 0.1000096939999997, 0.10000766600000022, 0.10000965299999987, 0.10000766600000022, 5.409999999095305e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.409999999095305e-07, 0.10000822199999959, 5.410000003536197e-07, 0.10001018100000003, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 0.1000101950000003, 0.10000765200000039]</msg>
<status status="PASS" starttime="20201030 15:53:34.359" endtime="20201030 15:53:34.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.354" endtime="20201030 15:53:34.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:34.365" endtime="20201030 15:53:34.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.363" endtime="20201030 15:53:34.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.362" endtime="20201030 15:53:34.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.822" endtime="20201030 15:53:34.385"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:27.748" endtime="20201030 15:53:34.386" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:34.392" endtime="20201030 15:53:34.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.391" endtime="20201030 15:53:34.412"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.426" endtime="20201030 15:53:34.442"></status>
</kw>
<msg timestamp="20201030 15:53:34.443" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.425" endtime="20201030 15:53:34.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.445" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.444" endtime="20201030 15:53:34.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.448" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:34.446" endtime="20201030 15:53:34.448"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:34.422" endtime="20201030 15:53:34.449"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:34.419" endtime="20201030 15:53:34.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.417" endtime="20201030 15:53:34.450"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:34.454" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:34.453" endtime="20201030 15:53:34.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.451" endtime="20201030 15:53:34.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.417" endtime="20201030 15:53:34.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.416" endtime="20201030 15:53:34.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.455" endtime="20201030 15:53:34.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.415" endtime="20201030 15:53:34.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.413" endtime="20201030 15:53:34.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.390" endtime="20201030 15:53:34.458"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.466" endtime="20201030 15:53:40.591"></status>
</kw>
<msg timestamp="20201030 15:53:40.592" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.465" endtime="20201030 15:53:40.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.598" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:40.595" endtime="20201030 15:53:40.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.601" endtime="20201030 15:53:40.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.462" endtime="20201030 15:53:40.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.460" endtime="20201030 15:53:40.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:40.616" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 15:53:40.611" endtime="20201030 15:53:40.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.627" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:40.624" endtime="20201030 15:53:40.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.633" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:40.630" endtime="20201030 15:53:40.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.618" endtime="20201030 15:53:40.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.645" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:40.643" endtime="20201030 15:53:40.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.651" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:40.648" endtime="20201030 15:53:40.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.637" endtime="20201030 15:53:40.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.661" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:40.659" endtime="20201030 15:53:40.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.668" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:53:40.663" endtime="20201030 15:53:40.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.654" endtime="20201030 15:53:40.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.683" endtime="20201030 15:53:40.976"></status>
</kw>
<msg timestamp="20201030 15:53:40.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063060889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163158667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:40.680" endtime="20201030 15:53:40.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063060889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163158667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:40.979" endtime="20201030 15:53:40.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.987" endtime="20201030 15:53:40.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.675" endtime="20201030 15:53:40.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.671" endtime="20201030 15:53:40.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:40.993" level="INFO">${FILTERED} = [{'diff': 0.10009777800000001}, {'diff': 5.410000000205528e-07}, {'diff': 5.42000000047782e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.409999999095305e-07}, {'diff': 5.419999999922709e-07}, {'di...</msg>
<status status="PASS" starttime="20201030 15:53:40.990" endtime="20201030 15:53:40.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:40.997" level="INFO">${RESULT} = {'diff': [0.10009777800000001, 5.410000000205528e-07, 5.42000000047782e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.1000101...</msg>
<status status="PASS" starttime="20201030 15:53:40.994" endtime="20201030 15:53:40.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.001" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:41.000" endtime="20201030 15:53:41.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.003" level="INFO">VALUE: [0.10009777800000001, 5.410000000205528e-07, 5.42000000047782e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.1000101659999999, 0.10000765299999981, 0.10000969500000001, 0.100007666, 0.10000822300000012, 0.10000818099999997, 0.10000970900000006, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001015299999994, 0.10000766600000022, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001024999999997, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000818099999975, 5.419999995481817e-07, 5.419999995481817e-07, 0.10000819500000002, 0.10000966600000005, 0.10000763899999932, 0.10000968099999952, 0.10000765200000039, 0.1000096810000004, 0.10000766699999986, 0.1000096939999997]</msg>
<status status="PASS" starttime="20201030 15:53:41.002" endtime="20201030 15:53:41.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.997" endtime="20201030 15:53:41.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:41.008" endtime="20201030 15:53:41.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.007" endtime="20201030 15:53:41.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.006" endtime="20201030 15:53:41.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.459" endtime="20201030 15:53:41.030"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:34.387" endtime="20201030 15:53:41.030" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:41.036" endtime="20201030 15:53:41.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.035" endtime="20201030 15:53:41.056"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.069" endtime="20201030 15:53:41.088"></status>
</kw>
<msg timestamp="20201030 15:53:41.088" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.068" endtime="20201030 15:53:41.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.091" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.089" endtime="20201030 15:53:41.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.094" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:41.092" endtime="20201030 15:53:41.094"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:41.065" endtime="20201030 15:53:41.095"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:41.063" endtime="20201030 15:53:41.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.062" endtime="20201030 15:53:41.096"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:41.099" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:41.099" endtime="20201030 15:53:41.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.096" endtime="20201030 15:53:41.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.061" endtime="20201030 15:53:41.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.060" endtime="20201030 15:53:41.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.101" endtime="20201030 15:53:41.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.059" endtime="20201030 15:53:41.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.057" endtime="20201030 15:53:41.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.034" endtime="20201030 15:53:41.104"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.113" endtime="20201030 15:53:47.239"></status>
</kw>
<msg timestamp="20201030 15:53:47.240" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.110" endtime="20201030 15:53:47.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.245" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:47.242" endtime="20201030 15:53:47.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.248" endtime="20201030 15:53:47.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.108" endtime="20201030 15:53:47.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.106" endtime="20201030 15:53:47.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:47.258" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 15:53:47.255" endtime="20201030 15:53:47.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.266" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:47.264" endtime="20201030 15:53:47.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.271" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:47.269" endtime="20201030 15:53:47.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.260" endtime="20201030 15:53:47.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.281" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:47.279" endtime="20201030 15:53:47.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.285" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:47.283" endtime="20201030 15:53:47.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.274" endtime="20201030 15:53:47.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.294" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:47.292" endtime="20201030 15:53:47.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.299" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:53:47.297" endtime="20201030 15:53:47.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.288" endtime="20201030 15:53:47.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.314" endtime="20201030 15:53:47.611"></status>
</kw>
<msg timestamp="20201030 15:53:47.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066009847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166142681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:47.311" endtime="20201030 15:53:47.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066009847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166142681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:47.615" endtime="20201030 15:53:47.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.623" endtime="20201030 15:53:47.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.305" endtime="20201030 15:53:47.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.302" endtime="20201030 15:53:47.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:47.630" level="INFO">${FILTERED} = [{'diff': 0.10013283399999999}, {'diff': 0.09988051399999998}, {'diff': 0.10000866600000002}, {'diff': 0.10000865299999995}, {'diff': 0.10000868000000007}, {'diff': 0.10000866600000002}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 15:53:47.626" endtime="20201030 15:53:47.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:47.635" level="INFO">${RESULT} = {'diff': [0.10013283399999999, 0.09988051399999998, 0.10000866600000002, 0.10000865299999995, 0.10000868000000007, 0.10000866600000002, 0.10000868099999993, 0.10000872299999997, 5.419999999922709e-07,...</msg>
<status status="PASS" starttime="20201030 15:53:47.631" endtime="20201030 15:53:47.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.639" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:47.638" endtime="20201030 15:53:47.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.641" level="INFO">VALUE: [0.10013283399999999, 0.09988051399999998, 0.10000866600000002, 0.10000865299999995, 0.10000868000000007, 0.10000866600000002, 0.10000868099999993, 0.10000872299999997, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.420000002143155e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000916699999984, 5.419999999922709e-07, 0.10000920899999999, 0.10000865299999973, 0.10000866600000036, 0.100008667, 0.10000869500000009, 0.10000865299999973, 0.100008667, 0.100008667, 0.10000866599999991, 0.10000868000000018, 0.10000868099999982, 5.419999999922709e-07, 5.280000001661733e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919499999972, 0.10000866600000036, 0.10000865300000061, 0.10000868100000027, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 0.10000919399999919]</msg>
<status status="PASS" starttime="20201030 15:53:47.640" endtime="20201030 15:53:47.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.636" endtime="20201030 15:53:47.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:47.648" endtime="20201030 15:53:47.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.646" endtime="20201030 15:53:47.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.644" endtime="20201030 15:53:47.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.104" endtime="20201030 15:53:47.669"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:41.032" endtime="20201030 15:53:47.669" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:47.679" endtime="20201030 15:53:47.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.675" endtime="20201030 15:53:47.702"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.720" endtime="20201030 15:53:47.736"></status>
</kw>
<msg timestamp="20201030 15:53:47.736" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:47.718" endtime="20201030 15:53:47.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.739" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:47.737" endtime="20201030 15:53:47.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.743" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:47.740" endtime="20201030 15:53:47.743"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:47.714" endtime="20201030 15:53:47.744"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:47.711" endtime="20201030 15:53:47.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.709" endtime="20201030 15:53:47.745"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:47.749" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:47.748" endtime="20201030 15:53:47.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.746" endtime="20201030 15:53:47.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.707" endtime="20201030 15:53:47.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.706" endtime="20201030 15:53:47.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.751" endtime="20201030 15:53:47.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.705" endtime="20201030 15:53:47.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.703" endtime="20201030 15:53:47.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.673" endtime="20201030 15:53:47.754"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.763" endtime="20201030 15:53:53.890"></status>
</kw>
<msg timestamp="20201030 15:53:53.891" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:47.761" endtime="20201030 15:53:53.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.896" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.893" endtime="20201030 15:53:53.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.899" endtime="20201030 15:53:53.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.758" endtime="20201030 15:53:53.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.756" endtime="20201030 15:53:53.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:53.911" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 15:53:53.907" endtime="20201030 15:53:53.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.920" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:53.917" endtime="20201030 15:53:53.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.924" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:53.922" endtime="20201030 15:53:53.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.912" endtime="20201030 15:53:53.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.935" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:53.933" endtime="20201030 15:53:53.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.940" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:53.938" endtime="20201030 15:53:53.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.928" endtime="20201030 15:53:53.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.950" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:53.948" endtime="20201030 15:53:53.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.955" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:53:53.953" endtime="20201030 15:53:53.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.943" endtime="20201030 15:53:53.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.971" endtime="20201030 15:53:54.273"></status>
</kw>
<msg timestamp="20201030 15:53:54.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072322125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172549903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:53.968" endtime="20201030 15:53:54.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072322125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172549903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:54.276" endtime="20201030 15:53:54.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.284" endtime="20201030 15:53:54.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.962" endtime="20201030 15:53:54.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.958" endtime="20201030 15:53:54.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:54.291" level="INFO">${FILTERED} = [{'diff': 0.100227778}, {'diff': 0.10004819499999998}, {'diff': 5.419999999922709e-07}, {'diff': 0.100008194}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.409999999095...</msg>
<status status="PASS" starttime="20201030 15:53:54.288" endtime="20201030 15:53:54.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:54.295" level="INFO">${RESULT} = {'diff': [0.100227778, 0.10004819499999998, 5.419999999922709e-07, 0.100008194, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10000922300000015, 5.419999999922709e-07, 5.41000...</msg>
<status status="PASS" starttime="20201030 15:53:54.292" endtime="20201030 15:53:54.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.299" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:54.298" endtime="20201030 15:53:54.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.302" level="INFO">VALUE: [0.100227778, 0.10004819499999998, 5.419999999922709e-07, 0.100008194, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10000922300000015, 5.419999999922709e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.419999999922709e-07, 0.10000920800000013, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919500000016, 0.10000966700000014, 0.1000086389999999, 0.10000765300000003, 0.10000870799999984, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001018100000003, 0.1000086389999999, 0.10000765300000003, 0.10000868099999982, 0.10000966600000005, 0.100008667, 0.1000076670000003, 0.10000867999999974, 0.10000966700000014, 0.10000863900000034, 0.10000765300000047, 0.10000868100000027, 0.10000965299999987, 0.1000087220000001, 5.420000004363601e-07, 5.420000004363601e-07, 0.10000918099999989, 0.10000768100000013, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 15:53:54.300" endtime="20201030 15:53:54.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.296" endtime="20201030 15:53:54.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:54.307" endtime="20201030 15:53:54.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.305" endtime="20201030 15:53:54.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.304" endtime="20201030 15:53:54.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.754" endtime="20201030 15:53:54.327"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:47.671" endtime="20201030 15:53:54.328" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:54.335" endtime="20201030 15:53:54.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.333" endtime="20201030 15:53:54.355"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.369" endtime="20201030 15:53:54.386"></status>
</kw>
<msg timestamp="20201030 15:53:54.386" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:54.368" endtime="20201030 15:53:54.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.389" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:54.387" endtime="20201030 15:53:54.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.392" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:54.390" endtime="20201030 15:53:54.393"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:54.365" endtime="20201030 15:53:54.393"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:54.362" endtime="20201030 15:53:54.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.360" endtime="20201030 15:53:54.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:54.398" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:54.397" endtime="20201030 15:53:54.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.395" endtime="20201030 15:53:54.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.359" endtime="20201030 15:53:54.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.359" endtime="20201030 15:53:54.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.400" endtime="20201030 15:53:54.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.357" endtime="20201030 15:53:54.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.355" endtime="20201030 15:53:54.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.332" endtime="20201030 15:53:54.403"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.411" endtime="20201030 15:54:00.538"></status>
</kw>
<msg timestamp="20201030 15:54:00.539" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:54.410" endtime="20201030 15:54:00.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.545" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:00.542" endtime="20201030 15:54:00.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:00.548" endtime="20201030 15:54:00.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.407" endtime="20201030 15:54:00.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.405" endtime="20201030 15:54:00.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:00.560" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 15:54:00.556" endtime="20201030 15:54:00.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.569" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:00.566" endtime="20201030 15:54:00.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.573" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:00.571" endtime="20201030 15:54:00.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.561" endtime="20201030 15:54:00.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.584" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:00.581" endtime="20201030 15:54:00.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.590" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:00.586" endtime="20201030 15:54:00.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.576" endtime="20201030 15:54:00.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.601" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:00.599" endtime="20201030 15:54:00.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.605" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:54:00.604" endtime="20201030 15:54:00.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.594" endtime="20201030 15:54:00.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:00.612" endtime="20201030 15:54:00.900"></status>
</kw>
<msg timestamp="20201030 15:54:00.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066160667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166502042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:00.611" endtime="20201030 15:54:00.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066160667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166502042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:00.904" endtime="20201030 15:54:00.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:00.911" endtime="20201030 15:54:00.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.608" endtime="20201030 15:54:00.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.606" endtime="20201030 15:54:00.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:00.918" level="INFO">${FILTERED} = [{'diff': 0.10034137499999998}, {'diff': 0.10005406999999997}, {'diff': 0.099662639}, {'diff': 0.10000145799999999}, {'diff': 0.10000912499999992}, {'diff': 0.100008667}, {'diff': 0.10000869500000009}...</msg>
<status status="PASS" starttime="20201030 15:54:00.915" endtime="20201030 15:54:00.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:00.922" level="INFO">${RESULT} = {'diff': [0.10034137499999998, 0.10005406999999997, 0.099662639, 0.10000145799999999, 0.10000912499999992, 0.100008667, 0.10000869500000009, 5.419999999922709e-07, 0.10000919400000008, 0.1000087079999...</msg>
<status status="PASS" starttime="20201030 15:54:00.919" endtime="20201030 15:54:00.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.926" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:00.925" endtime="20201030 15:54:00.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.928" level="INFO">VALUE: [0.10034137499999998, 0.10005406999999997, 0.099662639, 0.10000145799999999, 0.10000912499999992, 0.100008667, 0.10000869500000009, 5.419999999922709e-07, 0.10000919400000008, 0.10000870799999984, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919499999994, 0.10000869500000009, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000917999999981, 0.10000870799999984, 0.10000917999999981, 0.10000866600000036, 0.10000868099999982, 0.10000919400000008, 0.10000868100000027, 0.10000868099999982, 0.10000868000000018, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000920899999999, 0.10000916599999954, 0.10000868100000027, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10000918099999989]</msg>
<status status="PASS" starttime="20201030 15:54:00.927" endtime="20201030 15:54:00.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.923" endtime="20201030 15:54:00.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:00.934" endtime="20201030 15:54:00.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.933" endtime="20201030 15:54:00.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.932" endtime="20201030 15:54:00.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.403" endtime="20201030 15:54:00.955"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:54.329" endtime="20201030 15:54:00.956" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:00.962" endtime="20201030 15:54:00.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.961" endtime="20201030 15:54:00.982"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:00.996" endtime="20201030 15:54:01.013"></status>
</kw>
<msg timestamp="20201030 15:54:01.014" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:00.994" endtime="20201030 15:54:01.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.017" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:01.015" endtime="20201030 15:54:01.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.020" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:01.018" endtime="20201030 15:54:01.021"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:00.992" endtime="20201030 15:54:01.021"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:00.989" endtime="20201030 15:54:01.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.988" endtime="20201030 15:54:01.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:01.027" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:01.026" endtime="20201030 15:54:01.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.023" endtime="20201030 15:54:01.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.987" endtime="20201030 15:54:01.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.986" endtime="20201030 15:54:01.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.028" endtime="20201030 15:54:01.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.985" endtime="20201030 15:54:01.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.983" endtime="20201030 15:54:01.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.960" endtime="20201030 15:54:01.031"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.041" endtime="20201030 15:54:07.168"></status>
</kw>
<msg timestamp="20201030 15:54:07.169" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:01.039" endtime="20201030 15:54:07.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.175" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:07.172" endtime="20201030 15:54:07.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.179" endtime="20201030 15:54:07.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.035" endtime="20201030 15:54:07.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.033" endtime="20201030 15:54:07.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:07.190" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 15:54:07.186" endtime="20201030 15:54:07.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.200" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:07.198" endtime="20201030 15:54:07.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.205" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:07.203" endtime="20201030 15:54:07.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.192" endtime="20201030 15:54:07.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.216" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:07.214" endtime="20201030 15:54:07.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.220" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:07.218" endtime="20201030 15:54:07.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.209" endtime="20201030 15:54:07.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.225" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:07.224" endtime="20201030 15:54:07.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.227" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:54:07.226" endtime="20201030 15:54:07.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.222" endtime="20201030 15:54:07.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.235" endtime="20201030 15:54:07.523"></status>
</kw>
<msg timestamp="20201030 15:54:07.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068413681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168903056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:07.233" endtime="20201030 15:54:07.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068413681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168903056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:07.527" endtime="20201030 15:54:07.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.534" endtime="20201030 15:54:07.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.230" endtime="20201030 15:54:07.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.229" endtime="20201030 15:54:07.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:07.541" level="INFO">${FILTERED} = [{'diff': 0.10048937499999999}, {'diff': 0.10005504200000001}, {'diff': 0.10005533300000002}, {'diff': 5.419999999922709e-07}, {'diff': 0.1000092079999999}, {'diff': 0.10000866600000002}, {'diff': 0.1...</msg>
<status status="PASS" starttime="20201030 15:54:07.538" endtime="20201030 15:54:07.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:07.548" level="INFO">${RESULT} = {'diff': [0.10048937499999999, 0.10005504200000001, 0.10005533300000002, 5.419999999922709e-07, 0.1000092079999999, 0.10000866600000002, 0.100008667, 0.100008667, 0.1000087220000001, 0.100009167000000...</msg>
<status status="PASS" starttime="20201030 15:54:07.542" endtime="20201030 15:54:07.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.553" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:07.551" endtime="20201030 15:54:07.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.555" level="INFO">VALUE: [0.10048937499999999, 0.10005504200000001, 0.10005533300000002, 5.419999999922709e-07, 0.1000092079999999, 0.10000866600000002, 0.100008667, 0.100008667, 0.1000087220000001, 0.10000916700000007, 0.10000865299999995, 0.10000866700000022, 0.10000869500000009, 0.10000865299999995, 0.10000866600000013, 0.10000918000000003, 0.10000869400000001, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10000919400000008, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10000912500000014, 0.100008667, 0.10000867999999974, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.410000003536197e-07, 0.10000919400000008, 0.10000869400000045, 5.420000004363601e-07, 0.10000916700000051]</msg>
<status status="PASS" starttime="20201030 15:54:07.554" endtime="20201030 15:54:07.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.549" endtime="20201030 15:54:07.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:07.560" endtime="20201030 15:54:07.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.559" endtime="20201030 15:54:07.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.557" endtime="20201030 15:54:07.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.032" endtime="20201030 15:54:07.581"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:00.957" endtime="20201030 15:54:07.582" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:53:25.407" endtime="20201030 15:54:07.588"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:51:18.342" endtime="20201030 15:54:07.622"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
