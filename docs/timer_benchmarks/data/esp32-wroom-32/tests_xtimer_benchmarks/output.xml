<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 18:27:41.071" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.651" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:41.661" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:42.712" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:41.650" endtime="20201030 18:27:42.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.716" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 18:27:42.714" endtime="20201030 18:27:43.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.648" endtime="20201030 18:27:43.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.727" endtime="20201030 18:27:43.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.723" endtime="20201030 18:27:43.996"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.009" endtime="20201030 18:27:44.030"></status>
</kw>
<msg timestamp="20201030 18:27:44.031" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.007" endtime="20201030 18:27:44.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.033" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.032" endtime="20201030 18:27:44.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.036" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:44.034" endtime="20201030 18:27:44.037"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:44.005" endtime="20201030 18:27:44.037"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:44.002" endtime="20201030 18:27:44.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.001" endtime="20201030 18:27:44.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:44.043" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:44.042" endtime="20201030 18:27:44.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.039" endtime="20201030 18:27:44.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.000" endtime="20201030 18:27:44.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.999" endtime="20201030 18:27:44.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.045" endtime="20201030 18:27:44.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.998" endtime="20201030 18:27:44.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.047" endtime="20201030 18:27:44.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.996" endtime="20201030 18:27:44.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.646" endtime="20201030 18:27:44.050"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.056" endtime="20201030 18:27:44.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.054" endtime="20201030 18:27:44.076"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.089" endtime="20201030 18:27:44.107"></status>
</kw>
<msg timestamp="20201030 18:27:44.107" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.088" endtime="20201030 18:27:44.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.110" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.109" endtime="20201030 18:27:44.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.113" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:44.111" endtime="20201030 18:27:44.113"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:44.085" endtime="20201030 18:27:44.114"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:44.083" endtime="20201030 18:27:44.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.081" endtime="20201030 18:27:44.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:44.119" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:44.118" endtime="20201030 18:27:44.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.116" endtime="20201030 18:27:44.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.080" endtime="20201030 18:27:44.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.080" endtime="20201030 18:27:44.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.120" endtime="20201030 18:27:44.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.078" endtime="20201030 18:27:44.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.076" endtime="20201030 18:27:44.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.053" endtime="20201030 18:27:44.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.131" endtime="20201030 18:27:44.144"></status>
</kw>
<msg timestamp="20201030 18:27:44.144" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.128" endtime="20201030 18:27:44.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.147" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.145" endtime="20201030 18:27:44.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.148" endtime="20201030 18:27:44.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.126" endtime="20201030 18:27:44.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.124" endtime="20201030 18:27:44.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.154" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:27:44.153" endtime="20201030 18:27:44.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.156" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 18:27:44.155" endtime="20201030 18:27:44.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.151" endtime="20201030 18:27:44.157"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:44.050" endtime="20201030 18:27:44.158" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:41.182" endtime="20201030 18:27:44.160"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.212" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:44.220" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:45.296" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:44.211" endtime="20201030 18:27:45.297"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.300" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 18:27:45.298" endtime="20201030 18:27:46.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.210" endtime="20201030 18:27:46.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.306" endtime="20201030 18:27:46.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.303" endtime="20201030 18:27:46.593"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.605" endtime="20201030 18:27:46.625"></status>
</kw>
<msg timestamp="20201030 18:27:46.625" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.604" endtime="20201030 18:27:46.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.628" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.627" endtime="20201030 18:27:46.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.631" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:46.629" endtime="20201030 18:27:46.631"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:46.601" endtime="20201030 18:27:46.632"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:46.599" endtime="20201030 18:27:46.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.598" endtime="20201030 18:27:46.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:46.636" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:46.636" endtime="20201030 18:27:46.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.634" endtime="20201030 18:27:46.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.597" endtime="20201030 18:27:46.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.596" endtime="20201030 18:27:46.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.638" endtime="20201030 18:27:46.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.595" endtime="20201030 18:27:46.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.641" endtime="20201030 18:27:46.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.594" endtime="20201030 18:27:46.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.209" endtime="20201030 18:27:46.643"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.650" endtime="20201030 18:27:46.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.647" endtime="20201030 18:27:46.670"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.682" endtime="20201030 18:27:46.698"></status>
</kw>
<msg timestamp="20201030 18:27:46.699" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.681" endtime="20201030 18:27:46.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.700" endtime="20201030 18:27:46.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.705" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:46.703" endtime="20201030 18:27:46.705"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:46.678" endtime="20201030 18:27:46.706"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:46.676" endtime="20201030 18:27:46.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.675" endtime="20201030 18:27:46.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:46.710" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:46.710" endtime="20201030 18:27:46.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.708" endtime="20201030 18:27:46.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.674" endtime="20201030 18:27:46.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.673" endtime="20201030 18:27:46.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.712" endtime="20201030 18:27:46.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.672" endtime="20201030 18:27:46.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.670" endtime="20201030 18:27:46.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.646" endtime="20201030 18:27:46.715"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.723" endtime="20201030 18:27:46.738"></status>
</kw>
<msg timestamp="20201030 18:27:46.738" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.722" endtime="20201030 18:27:46.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.741" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.739" endtime="20201030 18:27:46.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.742" endtime="20201030 18:27:46.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.719" endtime="20201030 18:27:46.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.717" endtime="20201030 18:27:46.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.751" endtime="20201030 18:27:47.024"></status>
</kw>
<msg timestamp="20201030 18:27:47.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063422917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063428375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.749" endtime="20201030 18:27:47.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063422917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063428375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.027" endtime="20201030 18:27:47.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.033" endtime="20201030 18:27:47.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.747" endtime="20201030 18:27:47.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.745" endtime="20201030 18:27:47.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:47.049" level="INFO">${debug} = {'diff': [0, 5.457999999999852e-06, 6.02800000000514e-06, 6.083000000003946e-06, 5.5829999999895685e-06, 5.223000000012523e-06, 6.026999999991789e-06, 5.277999999997451e-06, 4.458999999998325e-06, 6.2...</msg>
<status status="PASS" starttime="20201030 18:27:47.036" endtime="20201030 18:27:47.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.051" endtime="20201030 18:27:47.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.056" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:47.055" endtime="20201030 18:27:47.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.060" level="INFO">VALUE: {'diff': [0, 5.457999999999852e-06, 6.02800000000514e-06, 6.083000000003946e-06, 5.5829999999895685e-06, 5.223000000012523e-06, 6.026999999991789e-06, 5.277999999997451e-06, 4.458999999998325e-06, 6.291000000005487e-06, 4.7499999999978115e-06, 5.153000000007735e-06, 5.916999999994177e-06, 5.194000000000032e-06, 5.916999999994177e-06, 6.083000000003946e-06, 5.7779999999979514e-06, 4.583000000002446e-06, 5.333999999995731e-06, 6.0550000000048065e-06, 6.195000000000506e-06, 4.847000000002266e-06, 4.4720000000053606e-06, 5.055999999989402e-06, 4.776999999997478e-06, 4.834000000009109e-06, 4.471999999991483e-06, 6.097000000010455e-06, 6.263999999991943e-06, 6.3329999999972575e-06, 5.306000000010469e-06, 4.875000000001406e-06, 5.903000000001546e-06, 4.596999999995077e-06, 5.8329999999967574e-06, 5.388999999994537e-06, 6.097000000010455e-06, 5.58400000000292e-06, 5.888999999995037e-06, 5.0550000000038064e-06, 5.388999999994537e-06, 5.958000000000352e-06, 5.58400000000292e-06, 4.915999999993703e-06, 6.167000000001366e-06, 5.76400000000532e-06, 4.7639999999904425e-06, 5.889000000008915e-06, 6.096999999996577e-06, 6.3329999999972575e-06], 'time': [0.063422917, 0.063428375, 0.063434403, 0.063440486, 0.063446069, 0.063451292, 0.063457319, 0.063462597, 0.063467056, 0.063473347, 0.063478097, 0.06348325, 0.063489167, 0.063494361, 0.063500278, 0.063506361, 0.063512139, 0.063516722, 0.063522056, 0.063528111, 0.063534306, 0.063539153, 0.063543625, 0.063548681, 0.063553458, 0.063558292, 0.063562764, 0.063568861, 0.063575125, 0.063581458, 0.063586764, 0.063591639, 0.063597542, 0.063602139, 0.063607972, 0.063613361, 0.063619458, 0.063625042, 0.063630931, 0.063635986, 0.063641375, 0.063647333, 0.063652917, 0.063657833, 0.063664, 0.063669764, 0.063674528, 0.063680417, 0.063686514, 0.063692847], 'sourceeventsource_diff': [0, 5.457999999999852e-06, 6.02800000000514e-06, 6.083000000003946e-06, 5.5829999999895685e-06, 5.223000000012523e-06, 6.026999999991789e-06, 5.277999999997451e-06, 4.458999999998325e-06, 6.291000000005487e-06, 4.7499999999978115e-06, 5.153000000007735e-06, 5.916999999994177e-06, 5.194000000000032e-06, 5.916999999994177e-06, 6.083000000003946e-06, 5.7779999999979514e-06, 4.583000000002446e-06, 5.333999999995731e-06, 6.0550000000048065e-06, 6.195000000000506e-06, 4.847000000002266e-06, 4.4720000000053606e-06, 5.055999999989402e-06, 4.776999999997478e-06, 4.834000000009109e-06, 4.471999999991483e-06, 6.097000000010455e-06, 6.263999999991943e-06, 6.3329999999972575e-06, 5.306000000010469e-06, 4.875000000001406e-06, 5.903000000001546e-06, 4.596999999995077e-06, 5.8329999999967574e-06, 5.388999999994537e-06, 6.097000000010455e-06, 5.58400000000292e-06, 5.888999999995037e-06, 5.0550000000038064e-06, 5.388999999994537e-06, 5.958000000000352e-06, 5.58400000000292e-06, 4.915999999993703e-06, 6.167000000001366e-06, 5.76400000000532e-06, 4.7639999999904425e-06, 5.889000000008915e-06, 6.096999999996577e-06, 6.3329999999972575e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:47.057" endtime="20201030 18:27:47.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.053" endtime="20201030 18:27:47.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.064" level="INFO">${RESULT} = [{'diff': 5.457999999999852e-06}, {'diff': 6.083000000003946e-06}, {'diff': 5.223000000012523e-06}, {'diff': 5.277999999997451e-06}, {'diff': 6.291000000005487e-06}, {'diff': 5.153000000007735e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:47.062" endtime="20201030 18:27:47.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:47.068" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.457999999999852e-06, 6.083000000003946e-06, 5.223000000012523e-06, 5.277999999997451e-06, 6.291000000005487e-06, 5.153000000007735e-06, 5.194000000000032e-06, 6.083000000003946e-06, 4.5830...</msg>
<status status="PASS" starttime="20201030 18:27:47.065" endtime="20201030 18:27:47.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.072" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:47.071" endtime="20201030 18:27:47.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.074" level="INFO">VALUE: [5.457999999999852e-06, 6.083000000003946e-06, 5.223000000012523e-06, 5.277999999997451e-06, 6.291000000005487e-06, 5.153000000007735e-06, 5.194000000000032e-06, 6.083000000003946e-06, 4.583000000002446e-06, 6.0550000000048065e-06, 4.847000000002266e-06, 5.055999999989402e-06, 4.834000000009109e-06, 6.097000000010455e-06, 6.3329999999972575e-06, 4.875000000001406e-06, 4.596999999995077e-06, 5.388999999994537e-06, 5.58400000000292e-06, 5.0550000000038064e-06, 5.958000000000352e-06, 4.915999999993703e-06, 5.76400000000532e-06, 5.889000000008915e-06, 6.3329999999972575e-06]</msg>
<status status="PASS" starttime="20201030 18:27:47.073" endtime="20201030 18:27:47.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.069" endtime="20201030 18:27:47.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.080" endtime="20201030 18:27:47.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.077" endtime="20201030 18:27:47.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.076" endtime="20201030 18:27:47.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.716" endtime="20201030 18:27:47.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.716" endtime="20201030 18:27:47.101"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.113" endtime="20201030 18:27:47.127"></status>
</kw>
<msg timestamp="20201030 18:27:47.128" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.109" endtime="20201030 18:27:47.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.132" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.129" endtime="20201030 18:27:47.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.133" endtime="20201030 18:27:47.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.105" endtime="20201030 18:27:47.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.103" endtime="20201030 18:27:47.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.143" endtime="20201030 18:27:47.407"></status>
</kw>
<msg timestamp="20201030 18:27:47.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02197725, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:27:47.141" endtime="20201030 18:27:47.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02197725, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:27:47.411" endtime="20201030 18:27:47.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.416" endtime="20201030 18:27:47.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.138" endtime="20201030 18:27:47.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.136" endtime="20201030 18:27:47.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:47.435" level="INFO">${debug} = {'diff': [0, 5.250000000001781e-06, 5.819000000000657e-06, 4.528000000000171e-06, 5.527999999997701e-06, 5.207999999999602e-06, 4.486000000001461e-06, 6.0839999999999506e-06, 4.693999999999532e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:27:47.421" endtime="20201030 18:27:47.435"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.436" endtime="20201030 18:27:47.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.444" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:47.443" endtime="20201030 18:27:47.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.447" level="INFO">VALUE: {'diff': [0, 5.250000000001781e-06, 5.819000000000657e-06, 4.528000000000171e-06, 5.527999999997701e-06, 5.207999999999602e-06, 4.486000000001461e-06, 6.0839999999999506e-06, 4.693999999999532e-06, 5.721999999999672e-06, 6.2090000000000756e-06, 5.153000000000796e-06, 4.582999999998977e-06, 5.332999999999727e-06, 5.903000000001546e-06, 5.528000000001171e-06, 5.152999999997326e-06, 5.305000000000587e-06, 5.750000000002281e-06, 5.2639999999978815e-06, 4.666999999999866e-06, 5.471999999999422e-06, 4.694000000003001e-06, 5.7779999999979514e-06, 4.528000000000171e-06, 6.333000000000727e-06, 5.3339999999992005e-06, 4.527000000000697e-06, 4.805999999999561e-06, 6.249999999999312e-06, 4.653000000000296e-06, 5.582999999999977e-06, 5.721999999999672e-06, 4.58400000000192e-06, 4.387999999997533e-06, 5.528000000001171e-06, 4.917000000000116e-06, 5.153000000000796e-06, 6.333000000000727e-06, 6.0139999999986316e-06, 4.985999999998492e-06, 5.958000000000352e-06, 4.709000000002045e-06, 5.068999999999907e-06, 4.917000000000116e-06, 5.332999999999727e-06, 4.764000000000851e-06, 6.110999999999617e-06, 4.8199999999991305e-06, 6.026999999998728e-06], 'time': [0.021972, 0.02197725, 0.021983069, 0.021987597, 0.021993125, 0.021998333, 0.022002819, 0.022008903, 0.022013597, 0.022019319, 0.022025528, 0.022030681, 0.022035264, 0.022040597, 0.0220465, 0.022052028, 0.022057181, 0.022062486, 0.022068236, 0.0220735, 0.022078167, 0.022083639, 0.022088333, 0.022094111, 0.022098639, 0.022104972, 0.022110306, 0.022114833, 0.022119639, 0.022125889, 0.022130542, 0.022136125, 0.022141847, 0.022146431, 0.022150819, 0.022156347, 0.022161264, 0.022166417, 0.02217275, 0.022178764, 0.02218375, 0.022189708, 0.022194417, 0.022199486, 0.022204403, 0.022209736, 0.0222145, 0.022220611, 0.022225431, 0.022231458], 'sourceeventsource_diff': [0, 5.250000000001781e-06, 5.819000000000657e-06, 4.528000000000171e-06, 5.527999999997701e-06, 5.207999999999602e-06, 4.486000000001461e-06, 6.0839999999999506e-06, 4.693999999999532e-06, 5.721999999999672e-06, 6.2090000000000756e-06, 5.153000000000796e-06, 4.582999999998977e-06, 5.332999999999727e-06, 5.903000000001546e-06, 5.528000000001171e-06, 5.152999999997326e-06, 5.305000000000587e-06, 5.750000000002281e-06, 5.2639999999978815e-06, 4.666999999999866e-06, 5.471999999999422e-06, 4.694000000003001e-06, 5.7779999999979514e-06, 4.528000000000171e-06, 6.333000000000727e-06, 5.3339999999992005e-06, 4.527000000000697e-06, 4.805999999999561e-06, 6.249999999999312e-06, 4.653000000000296e-06, 5.582999999999977e-06, 5.721999999999672e-06, 4.58400000000192e-06, 4.387999999997533e-06, 5.528000000001171e-06, 4.917000000000116e-06, 5.153000000000796e-06, 6.333000000000727e-06, 6.0139999999986316e-06, 4.985999999998492e-06, 5.958000000000352e-06, 4.709000000002045e-06, 5.068999999999907e-06, 4.917000000000116e-06, 5.332999999999727e-06, 4.764000000000851e-06, 6.110999999999617e-06, 4.8199999999991305e-06, 6.026999999998728e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:47.445" endtime="20201030 18:27:47.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.439" endtime="20201030 18:27:47.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.452" level="INFO">${RESULT} = [{'diff': 5.250000000001781e-06}, {'diff': 4.528000000000171e-06}, {'diff': 5.207999999999602e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 5.721999999999672e-06}, {'diff': 5.153000000000796e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:47.449" endtime="20201030 18:27:47.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:47.456" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.250000000001781e-06, 4.528000000000171e-06, 5.207999999999602e-06, 6.0839999999999506e-06, 5.721999999999672e-06, 5.153000000000796e-06, 5.332999999999727e-06, 5.528000000001171e-06, 5.305...</msg>
<status status="PASS" starttime="20201030 18:27:47.453" endtime="20201030 18:27:47.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.460" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:47.459" endtime="20201030 18:27:47.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.462" level="INFO">VALUE: [5.250000000001781e-06, 4.528000000000171e-06, 5.207999999999602e-06, 6.0839999999999506e-06, 5.721999999999672e-06, 5.153000000000796e-06, 5.332999999999727e-06, 5.528000000001171e-06, 5.305000000000587e-06, 5.2639999999978815e-06, 5.471999999999422e-06, 5.7779999999979514e-06, 6.333000000000727e-06, 4.527000000000697e-06, 6.249999999999312e-06, 5.582999999999977e-06, 4.58400000000192e-06, 5.528000000001171e-06, 5.153000000000796e-06, 6.0139999999986316e-06, 5.958000000000352e-06, 5.068999999999907e-06, 5.332999999999727e-06, 6.110999999999617e-06, 6.026999999998728e-06]</msg>
<status status="PASS" starttime="20201030 18:27:47.461" endtime="20201030 18:27:47.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.457" endtime="20201030 18:27:47.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.467" endtime="20201030 18:27:47.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.465" endtime="20201030 18:27:47.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.464" endtime="20201030 18:27:47.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.102" endtime="20201030 18:27:47.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.101" endtime="20201030 18:27:47.488"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.495" endtime="20201030 18:27:47.510"></status>
</kw>
<msg timestamp="20201030 18:27:47.510" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.494" endtime="20201030 18:27:47.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.513" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.511" endtime="20201030 18:27:47.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.514" endtime="20201030 18:27:47.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.491" endtime="20201030 18:27:47.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.490" endtime="20201030 18:27:47.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.523" endtime="20201030 18:27:47.790"></status>
</kw>
<msg timestamp="20201030 18:27:47.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017521236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017526306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.521" endtime="20201030 18:27:47.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017521236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017526306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.793" endtime="20201030 18:27:47.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.798" endtime="20201030 18:27:47.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.519" endtime="20201030 18:27:47.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.517" endtime="20201030 18:27:47.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:47.816" level="INFO">${debug} = {'diff': [0, 5.0699999999993806e-06, 6.097000000000047e-06, 6.347000000000297e-06, 4.764000000000851e-06, 5.542000000000741e-06, 5.526999999998228e-06, 5.444999999999756e-06, 4.403000000000046e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:27:47.802" endtime="20201030 18:27:47.816"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.817" endtime="20201030 18:27:47.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.822" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:47.821" endtime="20201030 18:27:47.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.825" level="INFO">VALUE: {'diff': [0, 5.0699999999993806e-06, 6.097000000000047e-06, 6.347000000000297e-06, 4.764000000000851e-06, 5.542000000000741e-06, 5.526999999998228e-06, 5.444999999999756e-06, 4.403000000000046e-06, 6.277000000002447e-06, 5.1389999999977565e-06, 6.097000000000047e-06, 5.8339999999997005e-06, 6.208000000000602e-06, 5.278000000000921e-06, 5.485999999998992e-06, 5.207999999999602e-06, 5.08400000000242e-06, 4.832999999999227e-06, 5.153000000000796e-06, 5.2639999999978815e-06, 4.986000000001961e-06, 4.389000000000476e-06, 5.2639999999978815e-06, 5.777000000001947e-06, 6.0279999999982015e-06, 4.528000000000171e-06, 6.028000000001671e-06, 5.860999999999367e-06, 4.7499999999978115e-06, 5.778000000001421e-06, 5.958000000000352e-06, 4.653000000000296e-06, 4.582999999998977e-06, 4.514000000000601e-06, 5.471999999999422e-06, 4.722000000002141e-06, 6.305999999997591e-06, 5.375000000001906e-06, 6.1529999999983265e-06, 4.693999999999532e-06, 4.861000000001836e-06, 6.195000000000506e-06, 5.901999999998603e-06, 6.374999999999437e-06, 5.180999999999936e-06, 5.514000000001601e-06, 4.764000000000851e-06, 6.165999999998423e-06, 6.0839999999999506e-06], 'time': [0.017521236, 0.017526306, 0.017532403, 0.01753875, 0.017543514, 0.017549056, 0.017554583, 0.017560028, 0.017564431, 0.017570708, 0.017575847, 0.017581944, 0.017587778, 0.017593986, 0.017599264, 0.01760475, 0.017609958, 0.017615042, 0.017619875, 0.017625028, 0.017630292, 0.017635278, 0.017639667, 0.017644931, 0.017650708, 0.017656736, 0.017661264, 0.017667292, 0.017673153, 0.017677903, 0.017683681, 0.017689639, 0.017694292, 0.017698875, 0.017703389, 0.017708861, 0.017713583, 0.017719889, 0.017725264, 0.017731417, 0.017736111, 0.017740972, 0.017747167, 0.017753069, 0.017759444, 0.017764625, 0.017770139, 0.017774903, 0.017781069, 0.017787153], 'sourceeventsource_diff': [0, 5.0699999999993806e-06, 6.097000000000047e-06, 6.347000000000297e-06, 4.764000000000851e-06, 5.542000000000741e-06, 5.526999999998228e-06, 5.444999999999756e-06, 4.403000000000046e-06, 6.277000000002447e-06, 5.1389999999977565e-06, 6.097000000000047e-06, 5.8339999999997005e-06, 6.208000000000602e-06, 5.278000000000921e-06, 5.485999999998992e-06, 5.207999999999602e-06, 5.08400000000242e-06, 4.832999999999227e-06, 5.153000000000796e-06, 5.2639999999978815e-06, 4.986000000001961e-06, 4.389000000000476e-06, 5.2639999999978815e-06, 5.777000000001947e-06, 6.0279999999982015e-06, 4.528000000000171e-06, 6.028000000001671e-06, 5.860999999999367e-06, 4.7499999999978115e-06, 5.778000000001421e-06, 5.958000000000352e-06, 4.653000000000296e-06, 4.582999999998977e-06, 4.514000000000601e-06, 5.471999999999422e-06, 4.722000000002141e-06, 6.305999999997591e-06, 5.375000000001906e-06, 6.1529999999983265e-06, 4.693999999999532e-06, 4.861000000001836e-06, 6.195000000000506e-06, 5.901999999998603e-06, 6.374999999999437e-06, 5.180999999999936e-06, 5.514000000001601e-06, 4.764000000000851e-06, 6.165999999998423e-06, 6.0839999999999506e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:47.823" endtime="20201030 18:27:47.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.819" endtime="20201030 18:27:47.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.829" level="INFO">${RESULT} = [{'diff': 5.0699999999993806e-06}, {'diff': 6.347000000000297e-06}, {'diff': 5.542000000000741e-06}, {'diff': 5.444999999999756e-06}, {'diff': 6.277000000002447e-06}, {'diff': 6.097000000000047e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:47.827" endtime="20201030 18:27:47.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:47.832" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.0699999999993806e-06, 6.347000000000297e-06, 5.542000000000741e-06, 5.444999999999756e-06, 6.277000000002447e-06, 6.097000000000047e-06, 6.208000000000602e-06, 5.485999999998992e-06, 5.084...</msg>
<status status="PASS" starttime="20201030 18:27:47.830" endtime="20201030 18:27:47.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.837" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:47.836" endtime="20201030 18:27:47.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.839" level="INFO">VALUE: [5.0699999999993806e-06, 6.347000000000297e-06, 5.542000000000741e-06, 5.444999999999756e-06, 6.277000000002447e-06, 6.097000000000047e-06, 6.208000000000602e-06, 5.485999999998992e-06, 5.08400000000242e-06, 5.153000000000796e-06, 4.986000000001961e-06, 5.2639999999978815e-06, 6.0279999999982015e-06, 6.028000000001671e-06, 4.7499999999978115e-06, 5.958000000000352e-06, 4.582999999998977e-06, 5.471999999999422e-06, 6.305999999997591e-06, 6.1529999999983265e-06, 4.861000000001836e-06, 5.901999999998603e-06, 5.180999999999936e-06, 4.764000000000851e-06, 6.0839999999999506e-06]</msg>
<status status="PASS" starttime="20201030 18:27:47.838" endtime="20201030 18:27:47.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.833" endtime="20201030 18:27:47.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.844" endtime="20201030 18:27:47.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.842" endtime="20201030 18:27:47.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.841" endtime="20201030 18:27:47.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.488" endtime="20201030 18:27:47.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.488" endtime="20201030 18:27:47.864"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.872" endtime="20201030 18:27:47.889"></status>
</kw>
<msg timestamp="20201030 18:27:47.890" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.871" endtime="20201030 18:27:47.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.895" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.892" endtime="20201030 18:27:47.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.898" endtime="20201030 18:27:47.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.868" endtime="20201030 18:27:47.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.866" endtime="20201030 18:27:47.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.919" endtime="20201030 18:27:48.192"></status>
</kw>
<msg timestamp="20201030 18:27:48.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017504569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017508972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.913" endtime="20201030 18:27:48.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017504569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017508972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.195" endtime="20201030 18:27:48.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.201" endtime="20201030 18:27:48.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.908" endtime="20201030 18:27:48.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.904" endtime="20201030 18:27:48.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:48.217" level="INFO">${debug} = {'diff': [0, 4.403000000000046e-06, 5.277999999997451e-06, 6.278000000001921e-06, 5.457999999999852e-06, 5.610999999999117e-06, 5.999999999999062e-06, 6.334000000000201e-06, 6.305000000001587e-06, 5.2...</msg>
<status status="PASS" starttime="20201030 18:27:48.204" endtime="20201030 18:27:48.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.219" endtime="20201030 18:27:48.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.224" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:48.223" endtime="20201030 18:27:48.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.227" level="INFO">VALUE: {'diff': [0, 4.403000000000046e-06, 5.277999999997451e-06, 6.278000000001921e-06, 5.457999999999852e-06, 5.610999999999117e-06, 5.999999999999062e-06, 6.334000000000201e-06, 6.305000000001587e-06, 5.292000000000491e-06, 4.416000000000142e-06, 4.84799999999827e-06, 6.333000000000727e-06, 4.778000000000421e-06, 4.903000000000546e-06, 5.082999999999477e-06, 4.957999999999352e-06, 5.471999999999422e-06, 6.2090000000000756e-06, 4.916000000000642e-06, 5.0839999999989505e-06, 6.014000000002101e-06, 5.026999999997728e-06, 5.9589999999998255e-06, 5.403000000001046e-06, 6.208000000000602e-06, 4.778000000000421e-06, 4.541000000000267e-06, 6.0139999999986316e-06, 5.7089999999995755e-06, 5.596999999999547e-06, 6.139000000002226e-06, 4.971999999998922e-06, 4.472000000001891e-06, 5.0699999999993806e-06, 5.165999999997423e-06, 5.722000000003141e-06, 5.944999999996786e-06, 6.347000000000297e-06, 4.903000000000546e-06, 5.194000000000032e-06, 4.653000000000296e-06, 5.596999999999547e-06, 5.014000000001101e-06, 6.181000000000936e-06, 5.624999999998687e-06, 4.957999999999352e-06, 5.528000000001171e-06, 4.653000000000296e-06, 4.596999999998547e-06], 'time': [0.017504569, 0.017508972, 0.01751425, 0.017520528, 0.017525986, 0.017531597, 0.017537597, 0.017543931, 0.017550236, 0.017555528, 0.017559944, 0.017564792, 0.017571125, 0.017575903, 0.017580806, 0.017585889, 0.017590847, 0.017596319, 0.017602528, 0.017607444, 0.017612528, 0.017618542, 0.017623569, 0.017629528, 0.017634931, 0.017641139, 0.017645917, 0.017650458, 0.017656472, 0.017662181, 0.017667778, 0.017673917, 0.017678889, 0.017683361, 0.017688431, 0.017693597, 0.017699319, 0.017705264, 0.017711611, 0.017716514, 0.017721708, 0.017726361, 0.017731958, 0.017736972, 0.017743153, 0.017748778, 0.017753736, 0.017759264, 0.017763917, 0.017768514], 'sourceeventsource_diff': [0, 4.403000000000046e-06, 5.277999999997451e-06, 6.278000000001921e-06, 5.457999999999852e-06, 5.610999999999117e-06, 5.999999999999062e-06, 6.334000000000201e-06, 6.305000000001587e-06, 5.292000000000491e-06, 4.416000000000142e-06, 4.84799999999827e-06, 6.333000000000727e-06, 4.778000000000421e-06, 4.903000000000546e-06, 5.082999999999477e-06, 4.957999999999352e-06, 5.471999999999422e-06, 6.2090000000000756e-06, 4.916000000000642e-06, 5.0839999999989505e-06, 6.014000000002101e-06, 5.026999999997728e-06, 5.9589999999998255e-06, 5.403000000001046e-06, 6.208000000000602e-06, 4.778000000000421e-06, 4.541000000000267e-06, 6.0139999999986316e-06, 5.7089999999995755e-06, 5.596999999999547e-06, 6.139000000002226e-06, 4.971999999998922e-06, 4.472000000001891e-06, 5.0699999999993806e-06, 5.165999999997423e-06, 5.722000000003141e-06, 5.944999999996786e-06, 6.347000000000297e-06, 4.903000000000546e-06, 5.194000000000032e-06, 4.653000000000296e-06, 5.596999999999547e-06, 5.014000000001101e-06, 6.181000000000936e-06, 5.624999999998687e-06, 4.957999999999352e-06, 5.528000000001171e-06, 4.653000000000296e-06, 4.596999999998547e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:48.225" endtime="20201030 18:27:48.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.221" endtime="20201030 18:27:48.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.232" level="INFO">${RESULT} = [{'diff': 4.403000000000046e-06}, {'diff': 6.278000000001921e-06}, {'diff': 5.610999999999117e-06}, {'diff': 6.334000000000201e-06}, {'diff': 5.292000000000491e-06}, {'diff': 4.84799999999827e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:48.229" endtime="20201030 18:27:48.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:48.235" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.403000000000046e-06, 6.278000000001921e-06, 5.610999999999117e-06, 6.334000000000201e-06, 5.292000000000491e-06, 4.84799999999827e-06, 4.778000000000421e-06, 5.082999999999477e-06, 5.47199...</msg>
<status status="PASS" starttime="20201030 18:27:48.233" endtime="20201030 18:27:48.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.240" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:48.239" endtime="20201030 18:27:48.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.242" level="INFO">VALUE: [4.403000000000046e-06, 6.278000000001921e-06, 5.610999999999117e-06, 6.334000000000201e-06, 5.292000000000491e-06, 4.84799999999827e-06, 4.778000000000421e-06, 5.082999999999477e-06, 5.471999999999422e-06, 4.916000000000642e-06, 6.014000000002101e-06, 5.9589999999998255e-06, 6.208000000000602e-06, 4.541000000000267e-06, 5.7089999999995755e-06, 6.139000000002226e-06, 4.472000000001891e-06, 5.165999999997423e-06, 5.944999999996786e-06, 4.903000000000546e-06, 4.653000000000296e-06, 5.014000000001101e-06, 5.624999999998687e-06, 5.528000000001171e-06, 4.596999999998547e-06]</msg>
<status status="PASS" starttime="20201030 18:27:48.241" endtime="20201030 18:27:48.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.236" endtime="20201030 18:27:48.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.247" endtime="20201030 18:27:48.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.245" endtime="20201030 18:27:48.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.244" endtime="20201030 18:27:48.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.865" endtime="20201030 18:27:48.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.865" endtime="20201030 18:27:48.268"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.277" endtime="20201030 18:27:48.290"></status>
</kw>
<msg timestamp="20201030 18:27:48.291" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.275" endtime="20201030 18:27:48.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.293" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.292" endtime="20201030 18:27:48.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.295" endtime="20201030 18:27:48.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.272" endtime="20201030 18:27:48.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.270" endtime="20201030 18:27:48.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.304" endtime="20201030 18:27:48.573"></status>
</kw>
<msg timestamp="20201030 18:27:48.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018852931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018858319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.302" endtime="20201030 18:27:48.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018852931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018858319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.576" endtime="20201030 18:27:48.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.582" endtime="20201030 18:27:48.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.300" endtime="20201030 18:27:48.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.298" endtime="20201030 18:27:48.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:48.599" level="INFO">${debug} = {'diff': [0, 5.387999999998533e-06, 6.0839999999999506e-06, 5.028000000000671e-06, 6.137999999999283e-06, 6.028000000001671e-06, 4.903000000000546e-06, 5.082999999999477e-06, 4.541999999999741e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:27:48.586" endtime="20201030 18:27:48.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.600" endtime="20201030 18:27:48.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.605" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:48.604" endtime="20201030 18:27:48.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.609" level="INFO">VALUE: {'diff': [0, 5.387999999998533e-06, 6.0839999999999506e-06, 5.028000000000671e-06, 6.137999999999283e-06, 6.028000000001671e-06, 4.903000000000546e-06, 5.082999999999477e-06, 4.541999999999741e-06, 5.457999999999852e-06, 4.764000000000851e-06, 5.471999999999422e-06, 5.0839999999989505e-06, 5.444000000000282e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.596999999999547e-06, 4.7639999999973814e-06, 4.528000000000171e-06, 5.708000000000102e-06, 5.097000000002516e-06, 5.167000000000366e-06, 5.2499999999983116e-06, 5.778000000001421e-06, 5.526999999998228e-06, 4.6949999999990055e-06, 5.500000000002031e-06, 6.319000000001157e-06, 6.2639999999988816e-06, 5.485999999998992e-06, 5.306000000000061e-06, 5.735999999999242e-06, 4.472000000001891e-06, 5.402999999997576e-06, 4.819000000003126e-06, 5.7779999999979514e-06, 6.278000000001921e-06, 5.582999999999977e-06, 4.846999999998797e-06, 4.7089999999985754e-06, 5.041000000000767e-06, 5.139000000001226e-06, 6.0839999999999506e-06, 5.804999999997618e-06, 5.681000000000436e-06, 5.846999999999797e-06, 4.958000000002821e-06, 4.7089999999985754e-06, 4.471999999998422e-06, 4.708000000002571e-06], 'time': [0.018852931, 0.018858319, 0.018864403, 0.018869431, 0.018875569, 0.018881597, 0.0188865, 0.018891583, 0.018896125, 0.018901583, 0.018906347, 0.018911819, 0.018916903, 0.018922347, 0.018928139, 0.018933917, 0.018939514, 0.018944278, 0.018948806, 0.018954514, 0.018959611, 0.018964778, 0.018970028, 0.018975806, 0.018981333, 0.018986028, 0.018991528, 0.018997847, 0.019004111, 0.019009597, 0.019014903, 0.019020639, 0.019025111, 0.019030514, 0.019035333, 0.019041111, 0.019047389, 0.019052972, 0.019057819, 0.019062528, 0.019067569, 0.019072708, 0.019078792, 0.019084597, 0.019090278, 0.019096125, 0.019101083, 0.019105792, 0.019110264, 0.019114972], 'sourceeventsource_diff': [0, 5.387999999998533e-06, 6.0839999999999506e-06, 5.028000000000671e-06, 6.137999999999283e-06, 6.028000000001671e-06, 4.903000000000546e-06, 5.082999999999477e-06, 4.541999999999741e-06, 5.457999999999852e-06, 4.764000000000851e-06, 5.471999999999422e-06, 5.0839999999989505e-06, 5.444000000000282e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.596999999999547e-06, 4.7639999999973814e-06, 4.528000000000171e-06, 5.708000000000102e-06, 5.097000000002516e-06, 5.167000000000366e-06, 5.2499999999983116e-06, 5.778000000001421e-06, 5.526999999998228e-06, 4.6949999999990055e-06, 5.500000000002031e-06, 6.319000000001157e-06, 6.2639999999988816e-06, 5.485999999998992e-06, 5.306000000000061e-06, 5.735999999999242e-06, 4.472000000001891e-06, 5.402999999997576e-06, 4.819000000003126e-06, 5.7779999999979514e-06, 6.278000000001921e-06, 5.582999999999977e-06, 4.846999999998797e-06, 4.7089999999985754e-06, 5.041000000000767e-06, 5.139000000001226e-06, 6.0839999999999506e-06, 5.804999999997618e-06, 5.681000000000436e-06, 5.846999999999797e-06, 4.958000000002821e-06, 4.7089999999985754e-06, 4.471999999998422e-06, 4.708000000002571e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:48.606" endtime="20201030 18:27:48.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.602" endtime="20201030 18:27:48.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.616" level="INFO">${RESULT} = [{'diff': 5.387999999998533e-06}, {'diff': 5.028000000000671e-06}, {'diff': 6.028000000001671e-06}, {'diff': 5.082999999999477e-06}, {'diff': 5.457999999999852e-06}, {'diff': 5.471999999999422e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:48.612" endtime="20201030 18:27:48.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:48.621" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.387999999998533e-06, 5.028000000000671e-06, 6.028000000001671e-06, 5.082999999999477e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.778000000001421e-06, 4.7639...</msg>
<status status="PASS" starttime="20201030 18:27:48.618" endtime="20201030 18:27:48.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.628" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:48.626" endtime="20201030 18:27:48.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.632" level="INFO">VALUE: [5.387999999998533e-06, 5.028000000000671e-06, 6.028000000001671e-06, 5.082999999999477e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.778000000001421e-06, 4.7639999999973814e-06, 5.708000000000102e-06, 5.167000000000366e-06, 5.778000000001421e-06, 4.6949999999990055e-06, 6.319000000001157e-06, 5.485999999998992e-06, 5.735999999999242e-06, 5.402999999997576e-06, 5.7779999999979514e-06, 5.582999999999977e-06, 4.7089999999985754e-06, 5.139000000001226e-06, 5.804999999997618e-06, 5.846999999999797e-06, 4.7089999999985754e-06, 4.708000000002571e-06]</msg>
<status status="PASS" starttime="20201030 18:27:48.630" endtime="20201030 18:27:48.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.623" endtime="20201030 18:27:48.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.641" endtime="20201030 18:27:48.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.638" endtime="20201030 18:27:48.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.636" endtime="20201030 18:27:48.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.268" endtime="20201030 18:27:48.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.268" endtime="20201030 18:27:48.662"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.671" endtime="20201030 18:27:48.687"></status>
</kw>
<msg timestamp="20201030 18:27:48.688" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.669" endtime="20201030 18:27:48.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.693" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.690" endtime="20201030 18:27:48.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.695" endtime="20201030 18:27:48.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.666" endtime="20201030 18:27:48.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.664" endtime="20201030 18:27:48.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.716" endtime="20201030 18:27:48.990"></status>
</kw>
<msg timestamp="20201030 18:27:48.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018267931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018272806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.712" endtime="20201030 18:27:48.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018267931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018272806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.993" endtime="20201030 18:27:48.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.999" endtime="20201030 18:27:49.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.706" endtime="20201030 18:27:49.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.703" endtime="20201030 18:27:49.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:49.016" level="INFO">${debug} = {'diff': [0, 4.8749999999979365e-06, 5.596999999999547e-06, 4.666000000000392e-06, 4.8200000000026e-06, 4.832999999999227e-06, 5.028000000000671e-06, 4.582999999998977e-06, 4.972999999998395e-06, 6.34...</msg>
<status status="PASS" starttime="20201030 18:27:49.003" endtime="20201030 18:27:49.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.017" endtime="20201030 18:27:49.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.023" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:49.022" endtime="20201030 18:27:49.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.026" level="INFO">VALUE: {'diff': [0, 4.8749999999979365e-06, 5.596999999999547e-06, 4.666000000000392e-06, 4.8200000000026e-06, 4.832999999999227e-06, 5.028000000000671e-06, 4.582999999998977e-06, 4.972999999998395e-06, 6.347000000000297e-06, 4.972000000002391e-06, 4.652999999996826e-06, 6.194000000001032e-06, 5.139000000001226e-06, 5.153000000000796e-06, 4.721999999998672e-06, 6.0139999999986316e-06, 5.472000000002891e-06, 5.930999999997216e-06, 5.528000000001171e-06, 5.485999999998992e-06, 5.819000000000657e-06, 5.985999999999492e-06, 6.028000000001671e-06, 6.305999999997591e-06, 6.055000000001337e-06, 4.9449999999992555e-06, 6.235999999999742e-06, 5.402000000001572e-06, 4.514000000000601e-06, 5.34799999999877e-06, 6.151999999998853e-06, 5.34800000000224e-06, 6.137999999999283e-06, 5.403000000001046e-06, 5.2639999999978815e-06, 5.985999999999492e-06, 6.028000000001671e-06, 4.582999999998977e-06, 5.528000000001171e-06, 5.874999999998937e-06, 4.528000000000171e-06, 5.694000000000532e-06, 6.306000000001061e-06, 4.582999999998977e-06, 4.846999999998797e-06, 4.514000000000601e-06, 4.791999999999991e-06, 4.778000000000421e-06, 5.360999999998867e-06], 'time': [0.018267931, 0.018272806, 0.018278403, 0.018283069, 0.018287889, 0.018292722, 0.01829775, 0.018302333, 0.018307306, 0.018313653, 0.018318625, 0.018323278, 0.018329472, 0.018334611, 0.018339764, 0.018344486, 0.0183505, 0.018355972, 0.018361903, 0.018367431, 0.018372917, 0.018378736, 0.018384722, 0.01839075, 0.018397056, 0.018403111, 0.018408056, 0.018414292, 0.018419694, 0.018424208, 0.018429556, 0.018435708, 0.018441056, 0.018447194, 0.018452597, 0.018457861, 0.018463847, 0.018469875, 0.018474458, 0.018479986, 0.018485861, 0.018490389, 0.018496083, 0.018502389, 0.018506972, 0.018511819, 0.018516333, 0.018521125, 0.018525903, 0.018531264], 'sourceeventsource_diff': [0, 4.8749999999979365e-06, 5.596999999999547e-06, 4.666000000000392e-06, 4.8200000000026e-06, 4.832999999999227e-06, 5.028000000000671e-06, 4.582999999998977e-06, 4.972999999998395e-06, 6.347000000000297e-06, 4.972000000002391e-06, 4.652999999996826e-06, 6.194000000001032e-06, 5.139000000001226e-06, 5.153000000000796e-06, 4.721999999998672e-06, 6.0139999999986316e-06, 5.472000000002891e-06, 5.930999999997216e-06, 5.528000000001171e-06, 5.485999999998992e-06, 5.819000000000657e-06, 5.985999999999492e-06, 6.028000000001671e-06, 6.305999999997591e-06, 6.055000000001337e-06, 4.9449999999992555e-06, 6.235999999999742e-06, 5.402000000001572e-06, 4.514000000000601e-06, 5.34799999999877e-06, 6.151999999998853e-06, 5.34800000000224e-06, 6.137999999999283e-06, 5.403000000001046e-06, 5.2639999999978815e-06, 5.985999999999492e-06, 6.028000000001671e-06, 4.582999999998977e-06, 5.528000000001171e-06, 5.874999999998937e-06, 4.528000000000171e-06, 5.694000000000532e-06, 6.306000000001061e-06, 4.582999999998977e-06, 4.846999999998797e-06, 4.514000000000601e-06, 4.791999999999991e-06, 4.778000000000421e-06, 5.360999999998867e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:49.024" endtime="20201030 18:27:49.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.020" endtime="20201030 18:27:49.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.031" level="INFO">${RESULT} = [{'diff': 4.8749999999979365e-06}, {'diff': 4.666000000000392e-06}, {'diff': 4.832999999999227e-06}, {'diff': 4.582999999998977e-06}, {'diff': 6.347000000000297e-06}, {'diff': 4.652999999996826e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:49.028" endtime="20201030 18:27:49.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:49.036" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.8749999999979365e-06, 4.666000000000392e-06, 4.832999999999227e-06, 4.582999999998977e-06, 6.347000000000297e-06, 4.652999999996826e-06, 5.139000000001226e-06, 4.721999999998672e-06, 5.472...</msg>
<status status="PASS" starttime="20201030 18:27:49.032" endtime="20201030 18:27:49.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.040" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:49.039" endtime="20201030 18:27:49.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.043" level="INFO">VALUE: [4.8749999999979365e-06, 4.666000000000392e-06, 4.832999999999227e-06, 4.582999999998977e-06, 6.347000000000297e-06, 4.652999999996826e-06, 5.139000000001226e-06, 4.721999999998672e-06, 5.472000000002891e-06, 5.528000000001171e-06, 5.819000000000657e-06, 6.028000000001671e-06, 6.055000000001337e-06, 6.235999999999742e-06, 4.514000000000601e-06, 6.151999999998853e-06, 6.137999999999283e-06, 5.2639999999978815e-06, 6.028000000001671e-06, 5.528000000001171e-06, 4.528000000000171e-06, 6.306000000001061e-06, 4.846999999998797e-06, 4.791999999999991e-06, 5.360999999998867e-06]</msg>
<status status="PASS" starttime="20201030 18:27:49.041" endtime="20201030 18:27:49.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.037" endtime="20201030 18:27:49.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.047" endtime="20201030 18:27:49.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.046" endtime="20201030 18:27:49.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.044" endtime="20201030 18:27:49.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.663" endtime="20201030 18:27:49.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.662" endtime="20201030 18:27:49.068"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.076" endtime="20201030 18:27:49.091"></status>
</kw>
<msg timestamp="20201030 18:27:49.091" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.075" endtime="20201030 18:27:49.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.094" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.092" endtime="20201030 18:27:49.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.095" endtime="20201030 18:27:49.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.072" endtime="20201030 18:27:49.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.070" endtime="20201030 18:27:49.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.105" endtime="20201030 18:27:49.370"></status>
</kw>
<msg timestamp="20201030 18:27:49.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018173097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018179431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.103" endtime="20201030 18:27:49.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018173097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018179431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.373" endtime="20201030 18:27:49.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.379" endtime="20201030 18:27:49.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.100" endtime="20201030 18:27:49.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.098" endtime="20201030 18:27:49.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:49.396" level="INFO">${debug} = {'diff': [0, 6.334000000000201e-06, 6.097000000000047e-06, 5.582999999999977e-06, 5.236000000002211e-06, 4.541999999999741e-06, 5.2499999999983116e-06, 4.568999999999407e-06, 5.153000000000796e-06, 4....</msg>
<status status="PASS" starttime="20201030 18:27:49.383" endtime="20201030 18:27:49.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.397" endtime="20201030 18:27:49.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.403" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:49.402" endtime="20201030 18:27:49.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.406" level="INFO">VALUE: {'diff': [0, 6.334000000000201e-06, 6.097000000000047e-06, 5.582999999999977e-06, 5.236000000002211e-06, 4.541999999999741e-06, 5.2499999999983116e-06, 4.568999999999407e-06, 5.153000000000796e-06, 4.653000000000296e-06, 5.582999999999977e-06, 4.541999999999741e-06, 5.207999999999602e-06, 5.820000000000131e-06, 6.347000000000297e-06, 4.639000000000726e-06, 4.791000000000517e-06, 5.34799999999877e-06, 5.430000000000712e-06, 5.306000000000061e-06, 6.2639999999988816e-06, 5.985999999999492e-06, 4.764000000000851e-06, 5.694000000000532e-06, 4.653000000000296e-06, 4.971999999998922e-06, 6.070000000000381e-06, 6.222000000000172e-06, 4.582999999998977e-06, 4.972000000002391e-06, 6.2639999999988816e-06, 4.500000000001031e-06, 5.3889999999980065e-06, 4.500000000001031e-06, 4.416999999999616e-06, 4.582999999998977e-06, 5.833000000000227e-06, 5.986999999998965e-06, 6.000000000002531e-06, 5.221999999999172e-06, 6.333000000000727e-06, 5.153000000000796e-06, 6.374999999999437e-06, 4.443999999999282e-06, 4.5699999999988805e-06, 4.528000000000171e-06, 4.388000000001002e-06, 6.167000000001366e-06, 4.527999999996701e-06, 5.444000000000282e-06], 'time': [0.018173097, 0.018179431, 0.018185528, 0.018191111, 0.018196347, 0.018200889, 0.018206139, 0.018210708, 0.018215861, 0.018220514, 0.018226097, 0.018230639, 0.018235847, 0.018241667, 0.018248014, 0.018252653, 0.018257444, 0.018262792, 0.018268222, 0.018273528, 0.018279792, 0.018285778, 0.018290542, 0.018296236, 0.018300889, 0.018305861, 0.018311931, 0.018318153, 0.018322736, 0.018327708, 0.018333972, 0.018338472, 0.018343861, 0.018348361, 0.018352778, 0.018357361, 0.018363194, 0.018369181, 0.018375181, 0.018380403, 0.018386736, 0.018391889, 0.018398264, 0.018402708, 0.018407278, 0.018411806, 0.018416194, 0.018422361, 0.018426889, 0.018432333], 'sourceeventsource_diff': [0, 6.334000000000201e-06, 6.097000000000047e-06, 5.582999999999977e-06, 5.236000000002211e-06, 4.541999999999741e-06, 5.2499999999983116e-06, 4.568999999999407e-06, 5.153000000000796e-06, 4.653000000000296e-06, 5.582999999999977e-06, 4.541999999999741e-06, 5.207999999999602e-06, 5.820000000000131e-06, 6.347000000000297e-06, 4.639000000000726e-06, 4.791000000000517e-06, 5.34799999999877e-06, 5.430000000000712e-06, 5.306000000000061e-06, 6.2639999999988816e-06, 5.985999999999492e-06, 4.764000000000851e-06, 5.694000000000532e-06, 4.653000000000296e-06, 4.971999999998922e-06, 6.070000000000381e-06, 6.222000000000172e-06, 4.582999999998977e-06, 4.972000000002391e-06, 6.2639999999988816e-06, 4.500000000001031e-06, 5.3889999999980065e-06, 4.500000000001031e-06, 4.416999999999616e-06, 4.582999999998977e-06, 5.833000000000227e-06, 5.986999999998965e-06, 6.000000000002531e-06, 5.221999999999172e-06, 6.333000000000727e-06, 5.153000000000796e-06, 6.374999999999437e-06, 4.443999999999282e-06, 4.5699999999988805e-06, 4.528000000000171e-06, 4.388000000001002e-06, 6.167000000001366e-06, 4.527999999996701e-06, 5.444000000000282e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:49.404" endtime="20201030 18:27:49.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.399" endtime="20201030 18:27:49.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.411" level="INFO">${RESULT} = [{'diff': 6.334000000000201e-06}, {'diff': 5.582999999999977e-06}, {'diff': 4.541999999999741e-06}, {'diff': 4.568999999999407e-06}, {'diff': 4.653000000000296e-06}, {'diff': 4.541999999999741e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:49.408" endtime="20201030 18:27:49.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:49.414" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.334000000000201e-06, 5.582999999999977e-06, 4.541999999999741e-06, 4.568999999999407e-06, 4.653000000000296e-06, 4.541999999999741e-06, 5.820000000000131e-06, 4.639000000000726e-06, 5.3479...</msg>
<status status="PASS" starttime="20201030 18:27:49.412" endtime="20201030 18:27:49.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.418" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:49.417" endtime="20201030 18:27:49.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.421" level="INFO">VALUE: [6.334000000000201e-06, 5.582999999999977e-06, 4.541999999999741e-06, 4.568999999999407e-06, 4.653000000000296e-06, 4.541999999999741e-06, 5.820000000000131e-06, 4.639000000000726e-06, 5.34799999999877e-06, 5.306000000000061e-06, 5.985999999999492e-06, 5.694000000000532e-06, 4.971999999998922e-06, 6.222000000000172e-06, 4.972000000002391e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.582999999998977e-06, 5.986999999998965e-06, 5.221999999999172e-06, 5.153000000000796e-06, 4.443999999999282e-06, 4.528000000000171e-06, 6.167000000001366e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201030 18:27:49.420" endtime="20201030 18:27:49.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.415" endtime="20201030 18:27:49.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.426" endtime="20201030 18:27:49.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.424" endtime="20201030 18:27:49.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.423" endtime="20201030 18:27:49.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.069" endtime="20201030 18:27:49.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.069" endtime="20201030 18:27:49.447"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.455" endtime="20201030 18:27:49.469"></status>
</kw>
<msg timestamp="20201030 18:27:49.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.453" endtime="20201030 18:27:49.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.472" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.470" endtime="20201030 18:27:49.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.473" endtime="20201030 18:27:49.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.451" endtime="20201030 18:27:49.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.449" endtime="20201030 18:27:49.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.482" endtime="20201030 18:27:49.751"></status>
</kw>
<msg timestamp="20201030 18:27:49.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017956014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017961903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.481" endtime="20201030 18:27:49.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017956014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017961903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.754" endtime="20201030 18:27:49.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.760" endtime="20201030 18:27:49.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.478" endtime="20201030 18:27:49.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.476" endtime="20201030 18:27:49.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:49.776" level="INFO">${debug} = {'diff': [0, 5.889000000001976e-06, 6.2779999999984515e-06, 6.347000000000297e-06, 5.833000000000227e-06, 5.8889999999985065e-06, 4.611000000001586e-06, 4.832999999999227e-06, 6.195000000000506e-06, 5...</msg>
<status status="PASS" starttime="20201030 18:27:49.763" endtime="20201030 18:27:49.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.777" endtime="20201030 18:27:49.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.783" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:49.782" endtime="20201030 18:27:49.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.786" level="INFO">VALUE: {'diff': [0, 5.889000000001976e-06, 6.2779999999984515e-06, 6.347000000000297e-06, 5.833000000000227e-06, 5.8889999999985065e-06, 4.611000000001586e-06, 4.832999999999227e-06, 6.195000000000506e-06, 5.153000000000796e-06, 6.276999999998978e-06, 5.292000000000491e-06, 5.653000000001296e-06, 6.2639999999988816e-06, 5.1389999999977565e-06, 4.777000000000947e-06, 4.917000000000116e-06, 5.082999999999477e-06, 5.403000000001046e-06, 5.514000000001601e-06, 6.0829999999970075e-06, 6.042000000001241e-06, 4.582999999998977e-06, 6.0839999999999506e-06, 5.833000000000227e-06, 5.153000000000796e-06, 5.403000000001046e-06, 5.651999999998353e-06, 4.58400000000192e-06, 6.1529999999983265e-06, 6.041000000001767e-06, 4.7089999999985754e-06, 5.444000000000282e-06, 5.042000000000241e-06, 4.957999999999352e-06, 4.707999999999102e-06, 5.903000000001546e-06, 4.917000000000116e-06, 5.444000000000282e-06, 6.0279999999982015e-06, 5.667000000000866e-06, 4.693999999999532e-06, 5.221999999999172e-06, 5.264000000001351e-06, 4.403000000000046e-06, 6.167000000001366e-06, 5.958000000000352e-06, 4.943999999999782e-06, 4.653000000000296e-06, 6.110999999999617e-06], 'time': [0.017956014, 0.017961903, 0.017968181, 0.017974528, 0.017980361, 0.01798625, 0.017990861, 0.017995694, 0.018001889, 0.018007042, 0.018013319, 0.018018611, 0.018024264, 0.018030528, 0.018035667, 0.018040444, 0.018045361, 0.018050444, 0.018055847, 0.018061361, 0.018067444, 0.018073486, 0.018078069, 0.018084153, 0.018089986, 0.018095139, 0.018100542, 0.018106194, 0.018110778, 0.018116931, 0.018122972, 0.018127681, 0.018133125, 0.018138167, 0.018143125, 0.018147833, 0.018153736, 0.018158653, 0.018164097, 0.018170125, 0.018175792, 0.018180486, 0.018185708, 0.018190972, 0.018195375, 0.018201542, 0.0182075, 0.018212444, 0.018217097, 0.018223208], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 5.889000000001976e-06, 6.2779999999984515e-06, 6.347000000000297e-06, 5.833000000000227e-06, 5.8889999999985065e-06, 4.611000000001586e-06, 4.832999999999227e-06, 6.195000000000506e-06, 5.153000000000796e-06, 6.276999999998978e-06, 5.292000000000491e-06, 5.653000000001296e-06, 6.2639999999988816e-06, 5.1389999999977565e-06, 4.777000000000947e-06, 4.917000000000116e-06, 5.082999999999477e-06, 5.403000000001046e-06, 5.514000000001601e-06, 6.0829999999970075e-06, 6.042000000001241e-06, 4.582999999998977e-06, 6.0839999999999506e-06, 5.833000000000227e-06, 5.153000000000796e-06, 5.403000000001046e-06, 5.651999999998353e-06, 4.58400000000192e-06, 6.1529999999983265e-06, 6.041000000001767e-06, 4.7089999999985754e-06, 5.444000000000282e-06, 5.042000000000241e-06, 4.957999999999352e-06, 4.707999999999102e-06, 5.903000000001546e-06, 4.917000000000116e-06, 5.444000000000282e-06, 6.0279999999982015e-06, 5.667000000000866e-06, 4.693999999999532e-06, 5.221999999999172e-06, 5.264000000001351e-06, 4.403000000000046e-06, 6.167000000001366e-06, 5.958000000000352e-06, 4.943999999999782e-06, 4.653000000000296e-06, 6.110999999999617e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:49.784" endtime="20201030 18:27:49.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.780" endtime="20201030 18:27:49.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.791" level="INFO">${RESULT} = [{'diff': 5.889000000001976e-06}, {'diff': 6.347000000000297e-06}, {'diff': 5.8889999999985065e-06}, {'diff': 4.832999999999227e-06}, {'diff': 5.153000000000796e-06}, {'diff': 5.292000000000491e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:49.788" endtime="20201030 18:27:49.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:49.794" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.889000000001976e-06, 6.347000000000297e-06, 5.8889999999985065e-06, 4.832999999999227e-06, 5.153000000000796e-06, 5.292000000000491e-06, 6.2639999999988816e-06, 4.777000000000947e-06, 5.08...</msg>
<status status="PASS" starttime="20201030 18:27:49.792" endtime="20201030 18:27:49.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.799" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:49.798" endtime="20201030 18:27:49.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.801" level="INFO">VALUE: [5.889000000001976e-06, 6.347000000000297e-06, 5.8889999999985065e-06, 4.832999999999227e-06, 5.153000000000796e-06, 5.292000000000491e-06, 6.2639999999988816e-06, 4.777000000000947e-06, 5.082999999999477e-06, 5.514000000001601e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 5.153000000000796e-06, 5.651999999998353e-06, 6.1529999999983265e-06, 4.7089999999985754e-06, 5.042000000000241e-06, 4.707999999999102e-06, 4.917000000000116e-06, 6.0279999999982015e-06, 4.693999999999532e-06, 5.264000000001351e-06, 6.167000000001366e-06, 4.943999999999782e-06, 6.110999999999617e-06]</msg>
<status status="PASS" starttime="20201030 18:27:49.800" endtime="20201030 18:27:49.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.795" endtime="20201030 18:27:49.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.806" endtime="20201030 18:27:49.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.804" endtime="20201030 18:27:49.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.803" endtime="20201030 18:27:49.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.447" endtime="20201030 18:27:49.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.447" endtime="20201030 18:27:49.828"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.840" endtime="20201030 18:27:49.854"></status>
</kw>
<msg timestamp="20201030 18:27:49.855" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.836" endtime="20201030 18:27:49.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.858" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.857" endtime="20201030 18:27:49.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.860" endtime="20201030 18:27:49.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.832" endtime="20201030 18:27:49.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.830" endtime="20201030 18:27:49.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.872" endtime="20201030 18:27:50.141"></status>
</kw>
<msg timestamp="20201030 18:27:50.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023331042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023335444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.870" endtime="20201030 18:27:50.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023331042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023335444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.144" endtime="20201030 18:27:50.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.150" endtime="20201030 18:27:50.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.867" endtime="20201030 18:27:50.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.865" endtime="20201030 18:27:50.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:50.167" level="INFO">${debug} = {'diff': [0, 4.402000000000572e-06, 6.388999999999007e-06, 5.361000000002336e-06, 5.277999999997451e-06, 4.57000000000235e-06, 6.097000000000047e-06, 5.791999999997521e-06, 6.097000000000047e-06, 5.75...</msg>
<status status="PASS" starttime="20201030 18:27:50.154" endtime="20201030 18:27:50.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.168" endtime="20201030 18:27:50.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.173" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:50.172" endtime="20201030 18:27:50.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.177" level="INFO">VALUE: {'diff': [0, 4.402000000000572e-06, 6.388999999999007e-06, 5.361000000002336e-06, 5.277999999997451e-06, 4.57000000000235e-06, 6.097000000000047e-06, 5.791999999997521e-06, 6.097000000000047e-06, 5.750000000002281e-06, 4.930000000000212e-06, 5.1389999999977565e-06, 4.389000000000476e-06, 5.028000000000671e-06, 5.374999999998437e-06, 5.542000000000741e-06, 5.402000000001572e-06, 5.416999999997146e-06, 4.444000000002751e-06, 4.9589999999988255e-06, 5.166000000000892e-06, 4.9589999999988255e-06, 4.889000000000976e-06, 4.971999999998922e-06, 5.833000000000227e-06, 5.9589999999998255e-06, 5.402000000001572e-06, 4.403000000000046e-06, 5.596999999999547e-06, 4.805999999999561e-06, 5.999999999999062e-06, 5.653000000001296e-06, 6.333000000000727e-06, 5.6939999999970625e-06, 6.153000000001796e-06, 4.903000000000546e-06, 4.778000000000421e-06, 4.707999999999102e-06, 4.778000000000421e-06, 4.707999999999102e-06, 5.221999999999172e-06, 6.334000000000201e-06, 5.846999999999797e-06, 5.889000000001976e-06, 4.903000000000546e-06, 6.290999999998548e-06, 5.569999999999881e-06, 4.971999999998922e-06, 4.458000000002321e-06, 5.5839999999994505e-06], 'time': [0.023331042, 0.023335444, 0.023341833, 0.023347194, 0.023352472, 0.023357042, 0.023363139, 0.023368931, 0.023375028, 0.023380778, 0.023385708, 0.023390847, 0.023395236, 0.023400264, 0.023405639, 0.023411181, 0.023416583, 0.023422, 0.023426444, 0.023431403, 0.023436569, 0.023441528, 0.023446417, 0.023451389, 0.023457222, 0.023463181, 0.023468583, 0.023472986, 0.023478583, 0.023483389, 0.023489389, 0.023495042, 0.023501375, 0.023507069, 0.023513222, 0.023518125, 0.023522903, 0.023527611, 0.023532389, 0.023537097, 0.023542319, 0.023548653, 0.0235545, 0.023560389, 0.023565292, 0.023571583, 0.023577153, 0.023582125, 0.023586583, 0.023592167], 'sourceeventsource_diff': [0, 4.402000000000572e-06, 6.388999999999007e-06, 5.361000000002336e-06, 5.277999999997451e-06, 4.57000000000235e-06, 6.097000000000047e-06, 5.791999999997521e-06, 6.097000000000047e-06, 5.750000000002281e-06, 4.930000000000212e-06, 5.1389999999977565e-06, 4.389000000000476e-06, 5.028000000000671e-06, 5.374999999998437e-06, 5.542000000000741e-06, 5.402000000001572e-06, 5.416999999997146e-06, 4.444000000002751e-06, 4.9589999999988255e-06, 5.166000000000892e-06, 4.9589999999988255e-06, 4.889000000000976e-06, 4.971999999998922e-06, 5.833000000000227e-06, 5.9589999999998255e-06, 5.402000000001572e-06, 4.403000000000046e-06, 5.596999999999547e-06, 4.805999999999561e-06, 5.999999999999062e-06, 5.653000000001296e-06, 6.333000000000727e-06, 5.6939999999970625e-06, 6.153000000001796e-06, 4.903000000000546e-06, 4.778000000000421e-06, 4.707999999999102e-06, 4.778000000000421e-06, 4.707999999999102e-06, 5.221999999999172e-06, 6.334000000000201e-06, 5.846999999999797e-06, 5.889000000001976e-06, 4.903000000000546e-06, 6.290999999998548e-06, 5.569999999999881e-06, 4.971999999998922e-06, 4.458000000002321e-06, 5.5839999999994505e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:50.174" endtime="20201030 18:27:50.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.170" endtime="20201030 18:27:50.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.181" level="INFO">${RESULT} = [{'diff': 4.402000000000572e-06}, {'diff': 5.361000000002336e-06}, {'diff': 4.57000000000235e-06}, {'diff': 5.791999999997521e-06}, {'diff': 5.750000000002281e-06}, {'diff': 5.1389999999977565e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:50.179" endtime="20201030 18:27:50.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:50.185" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.402000000000572e-06, 5.361000000002336e-06, 4.57000000000235e-06, 5.791999999997521e-06, 5.750000000002281e-06, 5.1389999999977565e-06, 5.028000000000671e-06, 5.542000000000741e-06, 5.4169...</msg>
<status status="PASS" starttime="20201030 18:27:50.182" endtime="20201030 18:27:50.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.189" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:50.188" endtime="20201030 18:27:50.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.191" level="INFO">VALUE: [4.402000000000572e-06, 5.361000000002336e-06, 4.57000000000235e-06, 5.791999999997521e-06, 5.750000000002281e-06, 5.1389999999977565e-06, 5.028000000000671e-06, 5.542000000000741e-06, 5.416999999997146e-06, 4.9589999999988255e-06, 4.9589999999988255e-06, 4.971999999998922e-06, 5.9589999999998255e-06, 4.403000000000046e-06, 4.805999999999561e-06, 5.653000000001296e-06, 5.6939999999970625e-06, 4.903000000000546e-06, 4.707999999999102e-06, 4.707999999999102e-06, 6.334000000000201e-06, 5.889000000001976e-06, 6.290999999998548e-06, 4.971999999998922e-06, 5.5839999999994505e-06]</msg>
<status status="PASS" starttime="20201030 18:27:50.190" endtime="20201030 18:27:50.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.185" endtime="20201030 18:27:50.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.197" endtime="20201030 18:27:50.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.195" endtime="20201030 18:27:50.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.194" endtime="20201030 18:27:50.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.829" endtime="20201030 18:27:50.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.828" endtime="20201030 18:27:50.218"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.226" endtime="20201030 18:27:50.240"></status>
</kw>
<msg timestamp="20201030 18:27:50.241" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.225" endtime="20201030 18:27:50.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.243" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.242" endtime="20201030 18:27:50.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.244" endtime="20201030 18:27:50.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.222" endtime="20201030 18:27:50.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.220" endtime="20201030 18:27:50.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.254" endtime="20201030 18:27:50.522"></status>
</kw>
<msg timestamp="20201030 18:27:50.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017959917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017964847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.252" endtime="20201030 18:27:50.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017959917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017964847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.525" endtime="20201030 18:27:50.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.531" endtime="20201030 18:27:50.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.250" endtime="20201030 18:27:50.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.248" endtime="20201030 18:27:50.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:50.548" level="INFO">${debug} = {'diff': [0, 4.930000000000212e-06, 6.028000000001671e-06, 5.7779999999979514e-06, 6.166000000001892e-06, 4.8339999999987004e-06, 5.153000000000796e-06, 5.569000000000407e-06, 4.457999999998852e-06, 4...</msg>
<status status="PASS" starttime="20201030 18:27:50.534" endtime="20201030 18:27:50.549"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.550" endtime="20201030 18:27:50.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.555" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:50.554" endtime="20201030 18:27:50.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.558" level="INFO">VALUE: {'diff': [0, 4.930000000000212e-06, 6.028000000001671e-06, 5.7779999999979514e-06, 6.166000000001892e-06, 4.8339999999987004e-06, 5.153000000000796e-06, 5.569000000000407e-06, 4.457999999998852e-06, 4.59800000000149e-06, 6.347000000000297e-06, 4.7639999999973814e-06, 4.652000000000822e-06, 4.84800000000174e-06, 4.457999999998852e-06, 4.430999999999186e-06, 5.541000000001267e-06, 5.278000000000921e-06, 5.971999999999922e-06, 6.388999999999007e-06, 5.292000000000491e-06, 5.8889999999985065e-06, 4.666000000000392e-06, 5.639000000001726e-06, 4.846999999998797e-06, 5.514000000001601e-06, 4.9589999999988255e-06, 5.346999999999297e-06, 5.167000000000366e-06, 4.568999999999407e-06, 6.028000000001671e-06, 6.097000000000047e-06, 5.457999999999852e-06, 5.2089999999990755e-06, 5.152000000001322e-06, 5.4589999999993255e-06, 5.610999999999117e-06, 5.680000000000962e-06, 5.6389999999982565e-06, 6.167000000001366e-06, 5.667000000000866e-06, 5.0139999999976315e-06, 4.402000000000572e-06, 4.389000000000476e-06, 5.139000000001226e-06, 5.791999999997521e-06, 5.764000000001851e-06, 4.846999999998797e-06, 5.221999999999172e-06, 4.583000000002446e-06], 'time': [0.017959917, 0.017964847, 0.017970875, 0.017976653, 0.017982819, 0.017987653, 0.017992806, 0.017998375, 0.018002833, 0.018007431, 0.018013778, 0.018018542, 0.018023194, 0.018028042, 0.0180325, 0.018036931, 0.018042472, 0.01804775, 0.018053722, 0.018060111, 0.018065403, 0.018071292, 0.018075958, 0.018081597, 0.018086444, 0.018091958, 0.018096917, 0.018102264, 0.018107431, 0.018112, 0.018118028, 0.018124125, 0.018129583, 0.018134792, 0.018139944, 0.018145403, 0.018151014, 0.018156694, 0.018162333, 0.0181685, 0.018174167, 0.018179181, 0.018183583, 0.018187972, 0.018193111, 0.018198903, 0.018204667, 0.018209514, 0.018214736, 0.018219319], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 4.930000000000212e-06, 6.028000000001671e-06, 5.7779999999979514e-06, 6.166000000001892e-06, 4.8339999999987004e-06, 5.153000000000796e-06, 5.569000000000407e-06, 4.457999999998852e-06, 4.59800000000149e-06, 6.347000000000297e-06, 4.7639999999973814e-06, 4.652000000000822e-06, 4.84800000000174e-06, 4.457999999998852e-06, 4.430999999999186e-06, 5.541000000001267e-06, 5.278000000000921e-06, 5.971999999999922e-06, 6.388999999999007e-06, 5.292000000000491e-06, 5.8889999999985065e-06, 4.666000000000392e-06, 5.639000000001726e-06, 4.846999999998797e-06, 5.514000000001601e-06, 4.9589999999988255e-06, 5.346999999999297e-06, 5.167000000000366e-06, 4.568999999999407e-06, 6.028000000001671e-06, 6.097000000000047e-06, 5.457999999999852e-06, 5.2089999999990755e-06, 5.152000000001322e-06, 5.4589999999993255e-06, 5.610999999999117e-06, 5.680000000000962e-06, 5.6389999999982565e-06, 6.167000000001366e-06, 5.667000000000866e-06, 5.0139999999976315e-06, 4.402000000000572e-06, 4.389000000000476e-06, 5.139000000001226e-06, 5.791999999997521e-06, 5.764000000001851e-06, 4.846999999998797e-06, 5.221999999999172e-06, 4.583000000002446e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:50.556" endtime="20201030 18:27:50.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.552" endtime="20201030 18:27:50.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.563" level="INFO">${RESULT} = [{'diff': 4.930000000000212e-06}, {'diff': 5.7779999999979514e-06}, {'diff': 4.8339999999987004e-06}, {'diff': 5.569000000000407e-06}, {'diff': 4.59800000000149e-06}, {'diff': 4.7639999999973814e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:50.560" endtime="20201030 18:27:50.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:50.567" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.930000000000212e-06, 5.7779999999979514e-06, 4.8339999999987004e-06, 5.569000000000407e-06, 4.59800000000149e-06, 4.7639999999973814e-06, 4.84800000000174e-06, 4.430999999999186e-06, 5.278...</msg>
<status status="PASS" starttime="20201030 18:27:50.564" endtime="20201030 18:27:50.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.572" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:50.571" endtime="20201030 18:27:50.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.574" level="INFO">VALUE: [4.930000000000212e-06, 5.7779999999979514e-06, 4.8339999999987004e-06, 5.569000000000407e-06, 4.59800000000149e-06, 4.7639999999973814e-06, 4.84800000000174e-06, 4.430999999999186e-06, 5.278000000000921e-06, 6.388999999999007e-06, 5.8889999999985065e-06, 5.639000000001726e-06, 5.514000000001601e-06, 5.346999999999297e-06, 4.568999999999407e-06, 6.097000000000047e-06, 5.2089999999990755e-06, 5.4589999999993255e-06, 5.680000000000962e-06, 6.167000000001366e-06, 5.0139999999976315e-06, 4.389000000000476e-06, 5.791999999997521e-06, 4.846999999998797e-06, 4.583000000002446e-06]</msg>
<status status="PASS" starttime="20201030 18:27:50.573" endtime="20201030 18:27:50.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.568" endtime="20201030 18:27:50.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.579" endtime="20201030 18:27:50.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.577" endtime="20201030 18:27:50.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.576" endtime="20201030 18:27:50.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.219" endtime="20201030 18:27:50.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.218" endtime="20201030 18:27:50.600"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.608" endtime="20201030 18:27:50.623"></status>
</kw>
<msg timestamp="20201030 18:27:50.624" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.606" endtime="20201030 18:27:50.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.626" endtime="20201030 18:27:50.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.630" endtime="20201030 18:27:50.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.603" endtime="20201030 18:27:50.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.602" endtime="20201030 18:27:50.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.642" endtime="20201030 18:27:50.911"></status>
</kw>
<msg timestamp="20201030 18:27:50.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017987167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017992944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.640" endtime="20201030 18:27:50.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017987167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017992944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.914" endtime="20201030 18:27:50.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.919" endtime="20201030 18:27:50.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.636" endtime="20201030 18:27:50.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.634" endtime="20201030 18:27:50.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:50.937" level="INFO">${debug} = {'diff': [0, 5.777000000001947e-06, 4.889000000000976e-06, 5.152999999997326e-06, 5.014000000001101e-06, 5.846999999999797e-06, 5.721999999999672e-06, 5.820000000000131e-06, 5.903000000001546e-06, 4.9...</msg>
<status status="PASS" starttime="20201030 18:27:50.923" endtime="20201030 18:27:50.937"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.938" endtime="20201030 18:27:50.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.943" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:50.942" endtime="20201030 18:27:50.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.947" level="INFO">VALUE: {'diff': [0, 5.777000000001947e-06, 4.889000000000976e-06, 5.152999999997326e-06, 5.014000000001101e-06, 5.846999999999797e-06, 5.721999999999672e-06, 5.820000000000131e-06, 5.903000000001546e-06, 4.916000000000642e-06, 5.6389999999982565e-06, 4.596999999998547e-06, 6.139000000002226e-06, 5.6529999999978264e-06, 4.639000000000726e-06, 4.861000000001836e-06, 5.569999999999881e-06, 5.346999999999297e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.139000000001226e-06, 5.596999999999547e-06, 5.0839999999989505e-06, 5.694000000000532e-06, 4.791999999999991e-06, 5.930000000001212e-06, 5.806000000000561e-06, 4.846999999998797e-06, 6.334000000000201e-06, 5.833000000000227e-06, 5.9029999999980765e-06, 5.846999999999797e-06, 5.514000000001601e-06, 4.471999999998422e-06, 5.667000000000866e-06, 5.874999999998937e-06, 4.430000000003181e-06, 5.499999999998562e-06, 5.167000000000366e-06, 4.903000000000546e-06, 5.3889999999980065e-06, 5.638000000002252e-06, 4.917000000000116e-06, 4.582999999998977e-06, 4.903000000000546e-06, 5.0139999999976315e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 5.875000000002406e-06, 6.179999999997993e-06], 'time': [0.017987167, 0.017992944, 0.017997833, 0.018002986, 0.018008, 0.018013847, 0.018019569, 0.018025389, 0.018031292, 0.018036208, 0.018041847, 0.018046444, 0.018052583, 0.018058236, 0.018062875, 0.018067736, 0.018073306, 0.018078653, 0.01808425, 0.018089833, 0.018094972, 0.018100569, 0.018105653, 0.018111347, 0.018116139, 0.018122069, 0.018127875, 0.018132722, 0.018139056, 0.018144889, 0.018150792, 0.018156639, 0.018162153, 0.018166625, 0.018172292, 0.018178167, 0.018182597, 0.018188097, 0.018193264, 0.018198167, 0.018203556, 0.018209194, 0.018214111, 0.018218694, 0.018223597, 0.018228611, 0.018234764, 0.018240917, 0.018246792, 0.018252972], 'sourceeventsource_diff': [0, 5.777000000001947e-06, 4.889000000000976e-06, 5.152999999997326e-06, 5.014000000001101e-06, 5.846999999999797e-06, 5.721999999999672e-06, 5.820000000000131e-06, 5.903000000001546e-06, 4.916000000000642e-06, 5.6389999999982565e-06, 4.596999999998547e-06, 6.139000000002226e-06, 5.6529999999978264e-06, 4.639000000000726e-06, 4.861000000001836e-06, 5.569999999999881e-06, 5.346999999999297e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.139000000001226e-06, 5.596999999999547e-06, 5.0839999999989505e-06, 5.694000000000532e-06, 4.791999999999991e-06, 5.930000000001212e-06, 5.806000000000561e-06, 4.846999999998797e-06, 6.334000000000201e-06, 5.833000000000227e-06, 5.9029999999980765e-06, 5.846999999999797e-06, 5.514000000001601e-06, 4.471999999998422e-06, 5.667000000000866e-06, 5.874999999998937e-06, 4.430000000003181e-06, 5.499999999998562e-06, 5.167000000000366e-06, 4.903000000000546e-06, 5.3889999999980065e-06, 5.638000000002252e-06, 4.917000000000116e-06, 4.582999999998977e-06, 4.903000000000546e-06, 5.0139999999976315e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 5.875000000002406e-06, 6.179999999997993e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:50.945" endtime="20201030 18:27:50.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.940" endtime="20201030 18:27:50.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.951" level="INFO">${RESULT} = [{'diff': 5.777000000001947e-06}, {'diff': 5.152999999997326e-06}, {'diff': 5.846999999999797e-06}, {'diff': 5.820000000000131e-06}, {'diff': 4.916000000000642e-06}, {'diff': 4.596999999998547e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:50.949" endtime="20201030 18:27:50.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:50.954" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.777000000001947e-06, 5.152999999997326e-06, 5.846999999999797e-06, 5.820000000000131e-06, 4.916000000000642e-06, 4.596999999998547e-06, 5.6529999999978264e-06, 4.861000000001836e-06, 5.346...</msg>
<status status="PASS" starttime="20201030 18:27:50.952" endtime="20201030 18:27:50.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.959" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:50.958" endtime="20201030 18:27:50.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.961" level="INFO">VALUE: [5.777000000001947e-06, 5.152999999997326e-06, 5.846999999999797e-06, 5.820000000000131e-06, 4.916000000000642e-06, 4.596999999998547e-06, 5.6529999999978264e-06, 4.861000000001836e-06, 5.346999999999297e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.694000000000532e-06, 5.930000000001212e-06, 4.846999999998797e-06, 5.833000000000227e-06, 5.846999999999797e-06, 4.471999999998422e-06, 5.874999999998937e-06, 5.499999999998562e-06, 4.903000000000546e-06, 5.638000000002252e-06, 4.582999999998977e-06, 5.0139999999976315e-06, 6.1529999999983265e-06, 6.179999999997993e-06]</msg>
<status status="PASS" starttime="20201030 18:27:50.960" endtime="20201030 18:27:50.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.955" endtime="20201030 18:27:50.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.966" endtime="20201030 18:27:50.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.965" endtime="20201030 18:27:50.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.963" endtime="20201030 18:27:50.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.600" endtime="20201030 18:27:50.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.600" endtime="20201030 18:27:50.987"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.995" endtime="20201030 18:27:51.010"></status>
</kw>
<msg timestamp="20201030 18:27:51.010" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.994" endtime="20201030 18:27:51.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.013" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.011" endtime="20201030 18:27:51.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.014" endtime="20201030 18:27:51.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.991" endtime="20201030 18:27:51.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.989" endtime="20201030 18:27:51.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.025" endtime="20201030 18:27:51.291"></status>
</kw>
<msg timestamp="20201030 18:27:51.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018083597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018088625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.022" endtime="20201030 18:27:51.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018083597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018088625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.294" endtime="20201030 18:27:51.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.300" endtime="20201030 18:27:51.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.019" endtime="20201030 18:27:51.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.017" endtime="20201030 18:27:51.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:51.316" level="INFO">${debug} = {'diff': [0, 5.028000000000671e-06, 5.082999999999477e-06, 5.374999999998437e-06, 5.180999999999936e-06, 5.582999999999977e-06, 6.403000000002046e-06, 6.222000000000172e-06, 5.5139999999981315e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:27:51.303" endtime="20201030 18:27:51.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.317" endtime="20201030 18:27:51.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.323" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:51.322" endtime="20201030 18:27:51.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.326" level="INFO">VALUE: {'diff': [0, 5.028000000000671e-06, 5.082999999999477e-06, 5.374999999998437e-06, 5.180999999999936e-06, 5.582999999999977e-06, 6.403000000002046e-06, 6.222000000000172e-06, 5.5139999999981315e-06, 5.403000000001046e-06, 6.347000000000297e-06, 4.582999999998977e-06, 5.4589999999993255e-06, 6.222000000000172e-06, 6.097000000000047e-06, 5.653000000001296e-06, 5.569000000000407e-06, 6.181000000000936e-06, 4.7499999999978115e-06, 4.847000000002266e-06, 5.9589999999998255e-06, 6.083000000000477e-06, 5.027999999997201e-06, 4.958000000002821e-06, 5.610999999999117e-06, 5.444999999999756e-06, 4.721999999998672e-06, 4.957999999999352e-06, 5.292000000000491e-06, 6.180000000001462e-06, 6.2779999999984515e-06, 5.903000000001546e-06, 5.471999999999422e-06, 4.889000000000976e-06, 5.527999999997701e-06, 5.180000000000462e-06, 5.055999999999811e-06, 4.541999999999741e-06, 5.763000000002377e-06, 5.9589999999998255e-06, 6.290999999998548e-06, 5.889000000001976e-06, 6.334000000000201e-06, 5.471999999999422e-06, 6.2779999999984515e-06, 6.208000000000602e-06, 5.708000000000102e-06, 5.110999999998617e-06, 4.459000000001795e-06, 4.957999999999352e-06], 'time': [0.018083597, 0.018088625, 0.018093708, 0.018099083, 0.018104264, 0.018109847, 0.01811625, 0.018122472, 0.018127986, 0.018133389, 0.018139736, 0.018144319, 0.018149778, 0.018156, 0.018162097, 0.01816775, 0.018173319, 0.0181795, 0.01818425, 0.018189097, 0.018195056, 0.018201139, 0.018206167, 0.018211125, 0.018216736, 0.018222181, 0.018226903, 0.018231861, 0.018237153, 0.018243333, 0.018249611, 0.018255514, 0.018260986, 0.018265875, 0.018271403, 0.018276583, 0.018281639, 0.018286181, 0.018291944, 0.018297903, 0.018304194, 0.018310083, 0.018316417, 0.018321889, 0.018328167, 0.018334375, 0.018340083, 0.018345194, 0.018349653, 0.018354611], 'sourceeventsource_diff': [0, 5.028000000000671e-06, 5.082999999999477e-06, 5.374999999998437e-06, 5.180999999999936e-06, 5.582999999999977e-06, 6.403000000002046e-06, 6.222000000000172e-06, 5.5139999999981315e-06, 5.403000000001046e-06, 6.347000000000297e-06, 4.582999999998977e-06, 5.4589999999993255e-06, 6.222000000000172e-06, 6.097000000000047e-06, 5.653000000001296e-06, 5.569000000000407e-06, 6.181000000000936e-06, 4.7499999999978115e-06, 4.847000000002266e-06, 5.9589999999998255e-06, 6.083000000000477e-06, 5.027999999997201e-06, 4.958000000002821e-06, 5.610999999999117e-06, 5.444999999999756e-06, 4.721999999998672e-06, 4.957999999999352e-06, 5.292000000000491e-06, 6.180000000001462e-06, 6.2779999999984515e-06, 5.903000000001546e-06, 5.471999999999422e-06, 4.889000000000976e-06, 5.527999999997701e-06, 5.180000000000462e-06, 5.055999999999811e-06, 4.541999999999741e-06, 5.763000000002377e-06, 5.9589999999998255e-06, 6.290999999998548e-06, 5.889000000001976e-06, 6.334000000000201e-06, 5.471999999999422e-06, 6.2779999999984515e-06, 6.208000000000602e-06, 5.708000000000102e-06, 5.110999999998617e-06, 4.459000000001795e-06, 4.957999999999352e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:51.324" endtime="20201030 18:27:51.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.320" endtime="20201030 18:27:51.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:51.331" level="INFO">${RESULT} = [{'diff': 5.028000000000671e-06}, {'diff': 5.374999999998437e-06}, {'diff': 5.582999999999977e-06}, {'diff': 6.222000000000172e-06}, {'diff': 5.403000000001046e-06}, {'diff': 4.582999999998977e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:51.328" endtime="20201030 18:27:51.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:51.334" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.028000000000671e-06, 5.374999999998437e-06, 5.582999999999977e-06, 6.222000000000172e-06, 5.403000000001046e-06, 4.582999999998977e-06, 6.222000000000172e-06, 5.653000000001296e-06, 6.1810...</msg>
<status status="PASS" starttime="20201030 18:27:51.332" endtime="20201030 18:27:51.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.339" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:51.338" endtime="20201030 18:27:51.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.341" level="INFO">VALUE: [5.028000000000671e-06, 5.374999999998437e-06, 5.582999999999977e-06, 6.222000000000172e-06, 5.403000000001046e-06, 4.582999999998977e-06, 6.222000000000172e-06, 5.653000000001296e-06, 6.181000000000936e-06, 4.847000000002266e-06, 6.083000000000477e-06, 4.958000000002821e-06, 5.444999999999756e-06, 4.957999999999352e-06, 6.180000000001462e-06, 5.903000000001546e-06, 4.889000000000976e-06, 5.180000000000462e-06, 4.541999999999741e-06, 5.9589999999998255e-06, 5.889000000001976e-06, 5.471999999999422e-06, 6.208000000000602e-06, 5.110999999998617e-06, 4.957999999999352e-06]</msg>
<status status="PASS" starttime="20201030 18:27:51.340" endtime="20201030 18:27:51.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.335" endtime="20201030 18:27:51.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:51.346" endtime="20201030 18:27:51.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.344" endtime="20201030 18:27:51.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.343" endtime="20201030 18:27:51.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.988" endtime="20201030 18:27:51.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.987" endtime="20201030 18:27:51.366"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.376" endtime="20201030 18:27:51.390"></status>
</kw>
<msg timestamp="20201030 18:27:51.391" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.374" endtime="20201030 18:27:51.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.393" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.392" endtime="20201030 18:27:51.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.394" endtime="20201030 18:27:51.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.371" endtime="20201030 18:27:51.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.369" endtime="20201030 18:27:51.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.404" endtime="20201030 18:27:51.671"></status>
</kw>
<msg timestamp="20201030 18:27:51.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019049347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019054153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.402" endtime="20201030 18:27:51.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019049347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019054153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.674" endtime="20201030 18:27:51.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.679" endtime="20201030 18:27:51.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.399" endtime="20201030 18:27:51.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.398" endtime="20201030 18:27:51.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:51.696" level="INFO">${debug} = {'diff': [0, 4.805999999999561e-06, 4.471999999998422e-06, 4.972000000002391e-06, 4.4999999999975615e-06, 6.042000000001241e-06, 5.7779999999979514e-06, 4.777000000000947e-06, 4.959000000002295e-06, 5...</msg>
<status status="PASS" starttime="20201030 18:27:51.683" endtime="20201030 18:27:51.697"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.698" endtime="20201030 18:27:51.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.709" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:51.706" endtime="20201030 18:27:51.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.715" level="INFO">VALUE: {'diff': [0, 4.805999999999561e-06, 4.471999999998422e-06, 4.972000000002391e-06, 4.4999999999975615e-06, 6.042000000001241e-06, 5.7779999999979514e-06, 4.777000000000947e-06, 4.959000000002295e-06, 5.971999999999922e-06, 4.652999999996826e-06, 6.291000000002017e-06, 4.500000000001031e-06, 4.805999999999561e-06, 4.985999999998492e-06, 5.403000000001046e-06, 6.2779999999984515e-06, 6.027000000002197e-06, 5.2089999999990755e-06, 4.707999999999102e-06, 5.542000000000741e-06, 6.333000000000727e-06, 5.708000000000102e-06, 4.666999999999866e-06, 6.2639999999988816e-06, 4.457999999998852e-06, 4.666999999999866e-06, 5.000000000001531e-06, 5.096999999999047e-06, 6.153000000001796e-06, 5.096999999999047e-06, 4.889000000000976e-06, 6.1529999999983265e-06, 5.389000000001476e-06, 6.097000000000047e-06, 5.527999999997701e-06, 6.208000000000602e-06, 5.958000000000352e-06, 4.59800000000149e-06, 5.332999999999727e-06, 6.042000000001241e-06, 5.8329999999967574e-06, 5.986000000002961e-06, 4.930999999999686e-06, 5.151999999997853e-06, 5.473000000002365e-06, 4.8889999999975065e-06, 5.207999999999602e-06, 5.971999999999922e-06, 5.889000000001976e-06], 'time': [0.019049347, 0.019054153, 0.019058625, 0.019063597, 0.019068097, 0.019074139, 0.019079917, 0.019084694, 0.019089653, 0.019095625, 0.019100278, 0.019106569, 0.019111069, 0.019115875, 0.019120861, 0.019126264, 0.019132542, 0.019138569, 0.019143778, 0.019148486, 0.019154028, 0.019160361, 0.019166069, 0.019170736, 0.019177, 0.019181458, 0.019186125, 0.019191125, 0.019196222, 0.019202375, 0.019207472, 0.019212361, 0.019218514, 0.019223903, 0.01923, 0.019235528, 0.019241736, 0.019247694, 0.019252292, 0.019257625, 0.019263667, 0.0192695, 0.019275486, 0.019280417, 0.019285569, 0.019291042, 0.019295931, 0.019301139, 0.019307111, 0.019313], 'sourceeventsource_diff': [0, 4.805999999999561e-06, 4.471999999998422e-06, 4.972000000002391e-06, 4.4999999999975615e-06, 6.042000000001241e-06, 5.7779999999979514e-06, 4.777000000000947e-06, 4.959000000002295e-06, 5.971999999999922e-06, 4.652999999996826e-06, 6.291000000002017e-06, 4.500000000001031e-06, 4.805999999999561e-06, 4.985999999998492e-06, 5.403000000001046e-06, 6.2779999999984515e-06, 6.027000000002197e-06, 5.2089999999990755e-06, 4.707999999999102e-06, 5.542000000000741e-06, 6.333000000000727e-06, 5.708000000000102e-06, 4.666999999999866e-06, 6.2639999999988816e-06, 4.457999999998852e-06, 4.666999999999866e-06, 5.000000000001531e-06, 5.096999999999047e-06, 6.153000000001796e-06, 5.096999999999047e-06, 4.889000000000976e-06, 6.1529999999983265e-06, 5.389000000001476e-06, 6.097000000000047e-06, 5.527999999997701e-06, 6.208000000000602e-06, 5.958000000000352e-06, 4.59800000000149e-06, 5.332999999999727e-06, 6.042000000001241e-06, 5.8329999999967574e-06, 5.986000000002961e-06, 4.930999999999686e-06, 5.151999999997853e-06, 5.473000000002365e-06, 4.8889999999975065e-06, 5.207999999999602e-06, 5.971999999999922e-06, 5.889000000001976e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:51.712" endtime="20201030 18:27:51.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.700" endtime="20201030 18:27:51.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:51.728" level="INFO">${RESULT} = [{'diff': 4.805999999999561e-06}, {'diff': 4.972000000002391e-06}, {'diff': 6.042000000001241e-06}, {'diff': 4.777000000000947e-06}, {'diff': 5.971999999999922e-06}, {'diff': 6.291000000002017e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:51.722" endtime="20201030 18:27:51.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:51.736" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.805999999999561e-06, 4.972000000002391e-06, 6.042000000001241e-06, 4.777000000000947e-06, 5.971999999999922e-06, 6.291000000002017e-06, 4.805999999999561e-06, 5.403000000001046e-06, 6.0270...</msg>
<status status="PASS" starttime="20201030 18:27:51.731" endtime="20201030 18:27:51.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.748" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:51.744" endtime="20201030 18:27:51.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.752" level="INFO">VALUE: [4.805999999999561e-06, 4.972000000002391e-06, 6.042000000001241e-06, 4.777000000000947e-06, 5.971999999999922e-06, 6.291000000002017e-06, 4.805999999999561e-06, 5.403000000001046e-06, 6.027000000002197e-06, 4.707999999999102e-06, 6.333000000000727e-06, 4.666999999999866e-06, 4.457999999998852e-06, 5.000000000001531e-06, 6.153000000001796e-06, 4.889000000000976e-06, 5.389000000001476e-06, 5.527999999997701e-06, 5.958000000000352e-06, 5.332999999999727e-06, 5.8329999999967574e-06, 4.930999999999686e-06, 5.473000000002365e-06, 5.207999999999602e-06, 5.889000000001976e-06]</msg>
<status status="PASS" starttime="20201030 18:27:51.750" endtime="20201030 18:27:51.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.740" endtime="20201030 18:27:51.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:51.764" endtime="20201030 18:27:51.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.761" endtime="20201030 18:27:51.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.757" endtime="20201030 18:27:51.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.367" endtime="20201030 18:27:51.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.367" endtime="20201030 18:27:51.790"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.808" endtime="20201030 18:27:51.823"></status>
</kw>
<msg timestamp="20201030 18:27:51.824" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.805" endtime="20201030 18:27:51.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.826" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.825" endtime="20201030 18:27:51.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.828" endtime="20201030 18:27:51.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.799" endtime="20201030 18:27:51.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.795" endtime="20201030 18:27:51.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.839" endtime="20201030 18:27:52.106"></status>
</kw>
<msg timestamp="20201030 18:27:52.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031822278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031827694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.836" endtime="20201030 18:27:52.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031822278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031827694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.109" endtime="20201030 18:27:52.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.115" endtime="20201030 18:27:52.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.834" endtime="20201030 18:27:52.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.832" endtime="20201030 18:27:52.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:52.132" level="INFO">${debug} = {'diff': [0, 5.415999999994203e-06, 5.945000000000256e-06, 4.722000000005611e-06, 5.471999999999422e-06, 6.152999999994857e-06, 5.097000000002516e-06, 5.1949999999995056e-06, 5.02800000000414e-06, 5.4...</msg>
<status status="PASS" starttime="20201030 18:27:52.118" endtime="20201030 18:27:52.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.133" endtime="20201030 18:27:52.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.138" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:52.137" endtime="20201030 18:27:52.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.142" level="INFO">VALUE: {'diff': [0, 5.415999999994203e-06, 5.945000000000256e-06, 4.722000000005611e-06, 5.471999999999422e-06, 6.152999999994857e-06, 5.097000000002516e-06, 5.1949999999995056e-06, 5.02800000000414e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.431000000000186e-06, 4.568999999995937e-06, 6.0690000000043764e-06, 5.2499999999983116e-06, 6.347999999996301e-06, 6.347000000003766e-06, 5.153000000000796e-06, 6.208000000000602e-06, 6.208000000000602e-06, 5.833999999996231e-06, 5.847000000003266e-06, 5.027999999997201e-06, 5.526999999998228e-06, 4.34800000000124e-06, 5.875000000002406e-06, 4.457999999998852e-06, 4.917000000000116e-06, 4.721999999998672e-06, 5.04200000000371e-06, 5.958000000000352e-06, 4.374999999993967e-06, 5.583000000003446e-06, 4.777999999996951e-06, 5.903000000001546e-06, 5.7639999999983815e-06, 5.277000000004917e-06, 4.777999999996951e-06, 5.527999999997701e-06, 6.04200000000471e-06, 4.889000000000976e-06, 5.651999999994883e-06, 6.27800000000539e-06, 5.958000000000352e-06, 5.888999999995037e-06, 6.30600000000453e-06, 5.582999999996507e-06, 5.389000000001476e-06, 6.208000000000602e-06, 5.861999999995371e-06], 'time': [0.031822278, 0.031827694, 0.031833639, 0.031838361, 0.031843833, 0.031849986, 0.031855083, 0.031860278, 0.031865306, 0.031870778, 0.03187625, 0.031881681, 0.03188625, 0.031892319, 0.031897569, 0.031903917, 0.031910264, 0.031915417, 0.031921625, 0.031927833, 0.031933667, 0.031939514, 0.031944542, 0.031950069, 0.031954417, 0.031960292, 0.03196475, 0.031969667, 0.031974389, 0.031979431, 0.031985389, 0.031989764, 0.031995347, 0.032000125, 0.032006028, 0.032011792, 0.032017069, 0.032021847, 0.032027375, 0.032033417, 0.032038306, 0.032043958, 0.032050236, 0.032056194, 0.032062083, 0.032068389, 0.032073972, 0.032079361, 0.032085569, 0.032091431], 'sourceeventsource_diff': [0, 5.415999999994203e-06, 5.945000000000256e-06, 4.722000000005611e-06, 5.471999999999422e-06, 6.152999999994857e-06, 5.097000000002516e-06, 5.1949999999995056e-06, 5.02800000000414e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.431000000000186e-06, 4.568999999995937e-06, 6.0690000000043764e-06, 5.2499999999983116e-06, 6.347999999996301e-06, 6.347000000003766e-06, 5.153000000000796e-06, 6.208000000000602e-06, 6.208000000000602e-06, 5.833999999996231e-06, 5.847000000003266e-06, 5.027999999997201e-06, 5.526999999998228e-06, 4.34800000000124e-06, 5.875000000002406e-06, 4.457999999998852e-06, 4.917000000000116e-06, 4.721999999998672e-06, 5.04200000000371e-06, 5.958000000000352e-06, 4.374999999993967e-06, 5.583000000003446e-06, 4.777999999996951e-06, 5.903000000001546e-06, 5.7639999999983815e-06, 5.277000000004917e-06, 4.777999999996951e-06, 5.527999999997701e-06, 6.04200000000471e-06, 4.889000000000976e-06, 5.651999999994883e-06, 6.27800000000539e-06, 5.958000000000352e-06, 5.888999999995037e-06, 6.30600000000453e-06, 5.582999999996507e-06, 5.389000000001476e-06, 6.208000000000602e-06, 5.861999999995371e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:52.140" endtime="20201030 18:27:52.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.135" endtime="20201030 18:27:52.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.147" level="INFO">${RESULT} = [{'diff': 5.415999999994203e-06}, {'diff': 4.722000000005611e-06}, {'diff': 6.152999999994857e-06}, {'diff': 5.1949999999995056e-06}, {'diff': 5.471999999999422e-06}, {'diff': 5.431000000000186e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:52.144" endtime="20201030 18:27:52.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:52.151" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.415999999994203e-06, 4.722000000005611e-06, 6.152999999994857e-06, 5.1949999999995056e-06, 5.471999999999422e-06, 5.431000000000186e-06, 6.0690000000043764e-06, 6.347999999996301e-06, 5.15...</msg>
<status status="PASS" starttime="20201030 18:27:52.148" endtime="20201030 18:27:52.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.155" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:52.154" endtime="20201030 18:27:52.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.158" level="INFO">VALUE: [5.415999999994203e-06, 4.722000000005611e-06, 6.152999999994857e-06, 5.1949999999995056e-06, 5.471999999999422e-06, 5.431000000000186e-06, 6.0690000000043764e-06, 6.347999999996301e-06, 5.153000000000796e-06, 6.208000000000602e-06, 5.847000000003266e-06, 5.526999999998228e-06, 5.875000000002406e-06, 4.917000000000116e-06, 5.04200000000371e-06, 4.374999999993967e-06, 4.777999999996951e-06, 5.7639999999983815e-06, 4.777999999996951e-06, 6.04200000000471e-06, 5.651999999994883e-06, 5.958000000000352e-06, 6.30600000000453e-06, 5.389000000001476e-06, 5.861999999995371e-06]</msg>
<status status="PASS" starttime="20201030 18:27:52.156" endtime="20201030 18:27:52.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.152" endtime="20201030 18:27:52.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.162" endtime="20201030 18:27:52.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.161" endtime="20201030 18:27:52.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.160" endtime="20201030 18:27:52.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.793" endtime="20201030 18:27:52.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.792" endtime="20201030 18:27:52.183"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.191" endtime="20201030 18:27:52.205"></status>
</kw>
<msg timestamp="20201030 18:27:52.206" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.190" endtime="20201030 18:27:52.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.208" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.207" endtime="20201030 18:27:52.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.210" endtime="20201030 18:27:52.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.187" endtime="20201030 18:27:52.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.185" endtime="20201030 18:27:52.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.219" endtime="20201030 18:27:52.486"></status>
</kw>
<msg timestamp="20201030 18:27:52.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018006222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018011722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.217" endtime="20201030 18:27:52.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018006222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018011722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.489" endtime="20201030 18:27:52.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.495" endtime="20201030 18:27:52.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.215" endtime="20201030 18:27:52.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.213" endtime="20201030 18:27:52.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:52.513" level="INFO">${debug} = {'diff': [0, 5.500000000002031e-06, 4.8199999999991305e-06, 5.944000000000782e-06, 4.832999999999227e-06, 5.028000000000671e-06, 5.7779999999979514e-06, 4.458000000002321e-06, 6.2779999999984515e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:52.499" endtime="20201030 18:27:52.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.514" endtime="20201030 18:27:52.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.519" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:52.518" endtime="20201030 18:27:52.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.522" level="INFO">VALUE: {'diff': [0, 5.500000000002031e-06, 4.8199999999991305e-06, 5.944000000000782e-06, 4.832999999999227e-06, 5.028000000000671e-06, 5.7779999999979514e-06, 4.458000000002321e-06, 6.2779999999984515e-06, 5.153000000000796e-06, 6.208000000000602e-06, 4.778000000000421e-06, 4.735999999998242e-06, 4.500000000001031e-06, 4.778000000000421e-06, 6.1389999999987566e-06, 4.443999999999282e-06, 5.806000000000561e-06, 5.221999999999172e-06, 4.764000000000851e-06, 6.028000000001671e-06, 6.026999999998728e-06, 4.778000000000421e-06, 6.334000000000201e-06, 4.832999999999227e-06, 5.778000000001421e-06, 6.388999999999007e-06, 4.777000000000947e-06, 4.791999999999991e-06, 5.666999999997396e-06, 5.694000000000532e-06, 5.097000000002516e-06, 5.8889999999985065e-06, 6.181000000000936e-06, 5.9029999999980765e-06, 4.429999999999712e-06, 5.736000000002711e-06, 4.8339999999987004e-06, 5.819000000000657e-06, 4.693999999999532e-06, 5.556000000000311e-06, 5.958000000000352e-06, 6.1529999999983265e-06, 5.332999999999727e-06, 5.292000000000491e-06, 4.764000000000851e-06, 4.917000000000116e-06, 4.500000000001031e-06, 4.415999999996673e-06, 5.389000000001476e-06], 'time': [0.018006222, 0.018011722, 0.018016542, 0.018022486, 0.018027319, 0.018032347, 0.018038125, 0.018042583, 0.018048861, 0.018054014, 0.018060222, 0.018065, 0.018069736, 0.018074236, 0.018079014, 0.018085153, 0.018089597, 0.018095403, 0.018100625, 0.018105389, 0.018111417, 0.018117444, 0.018122222, 0.018128556, 0.018133389, 0.018139167, 0.018145556, 0.018150333, 0.018155125, 0.018160792, 0.018166486, 0.018171583, 0.018177472, 0.018183653, 0.018189556, 0.018193986, 0.018199722, 0.018204556, 0.018210375, 0.018215069, 0.018220625, 0.018226583, 0.018232736, 0.018238069, 0.018243361, 0.018248125, 0.018253042, 0.018257542, 0.018261958, 0.018267347], 'sourceeventsource_diff': [0, 5.500000000002031e-06, 4.8199999999991305e-06, 5.944000000000782e-06, 4.832999999999227e-06, 5.028000000000671e-06, 5.7779999999979514e-06, 4.458000000002321e-06, 6.2779999999984515e-06, 5.153000000000796e-06, 6.208000000000602e-06, 4.778000000000421e-06, 4.735999999998242e-06, 4.500000000001031e-06, 4.778000000000421e-06, 6.1389999999987566e-06, 4.443999999999282e-06, 5.806000000000561e-06, 5.221999999999172e-06, 4.764000000000851e-06, 6.028000000001671e-06, 6.026999999998728e-06, 4.778000000000421e-06, 6.334000000000201e-06, 4.832999999999227e-06, 5.778000000001421e-06, 6.388999999999007e-06, 4.777000000000947e-06, 4.791999999999991e-06, 5.666999999997396e-06, 5.694000000000532e-06, 5.097000000002516e-06, 5.8889999999985065e-06, 6.181000000000936e-06, 5.9029999999980765e-06, 4.429999999999712e-06, 5.736000000002711e-06, 4.8339999999987004e-06, 5.819000000000657e-06, 4.693999999999532e-06, 5.556000000000311e-06, 5.958000000000352e-06, 6.1529999999983265e-06, 5.332999999999727e-06, 5.292000000000491e-06, 4.764000000000851e-06, 4.917000000000116e-06, 4.500000000001031e-06, 4.415999999996673e-06, 5.389000000001476e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:52.520" endtime="20201030 18:27:52.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.516" endtime="20201030 18:27:52.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.527" level="INFO">${RESULT} = [{'diff': 5.500000000002031e-06}, {'diff': 5.944000000000782e-06}, {'diff': 5.028000000000671e-06}, {'diff': 4.458000000002321e-06}, {'diff': 5.153000000000796e-06}, {'diff': 4.778000000000421e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:52.524" endtime="20201030 18:27:52.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:52.530" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.500000000002031e-06, 5.944000000000782e-06, 5.028000000000671e-06, 4.458000000002321e-06, 5.153000000000796e-06, 4.778000000000421e-06, 4.500000000001031e-06, 6.1389999999987566e-06, 5.806...</msg>
<status status="PASS" starttime="20201030 18:27:52.528" endtime="20201030 18:27:52.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.535" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:52.533" endtime="20201030 18:27:52.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.537" level="INFO">VALUE: [5.500000000002031e-06, 5.944000000000782e-06, 5.028000000000671e-06, 4.458000000002321e-06, 5.153000000000796e-06, 4.778000000000421e-06, 4.500000000001031e-06, 6.1389999999987566e-06, 5.806000000000561e-06, 4.764000000000851e-06, 6.026999999998728e-06, 6.334000000000201e-06, 5.778000000001421e-06, 4.777000000000947e-06, 5.666999999997396e-06, 5.097000000002516e-06, 6.181000000000936e-06, 4.429999999999712e-06, 4.8339999999987004e-06, 4.693999999999532e-06, 5.958000000000352e-06, 5.332999999999727e-06, 4.764000000000851e-06, 4.500000000001031e-06, 5.389000000001476e-06]</msg>
<status status="PASS" starttime="20201030 18:27:52.536" endtime="20201030 18:27:52.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.531" endtime="20201030 18:27:52.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.542" endtime="20201030 18:27:52.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.540" endtime="20201030 18:27:52.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.539" endtime="20201030 18:27:52.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.184" endtime="20201030 18:27:52.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.184" endtime="20201030 18:27:52.563"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.571" endtime="20201030 18:27:52.586"></status>
</kw>
<msg timestamp="20201030 18:27:52.586" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.569" endtime="20201030 18:27:52.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.589" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.587" endtime="20201030 18:27:52.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.590" endtime="20201030 18:27:52.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.567" endtime="20201030 18:27:52.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.565" endtime="20201030 18:27:52.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.601" endtime="20201030 18:27:52.868"></status>
</kw>
<msg timestamp="20201030 18:27:52.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018057097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01806175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:52.598" endtime="20201030 18:27:52.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018057097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01806175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:52.871" endtime="20201030 18:27:52.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.877" endtime="20201030 18:27:52.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.595" endtime="20201030 18:27:52.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.593" endtime="20201030 18:27:52.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:52.893" level="INFO">${debug} = {'diff': [0, 4.653000000000296e-06, 4.457999999998852e-06, 5.653000000001296e-06, 5.457999999999852e-06, 6.11199999999909e-06, 5.027000000001197e-06, 4.458999999998325e-06, 4.889000000000976e-06, 6.16...</msg>
<status status="PASS" starttime="20201030 18:27:52.880" endtime="20201030 18:27:52.893"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.894" endtime="20201030 18:27:52.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.900" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:52.899" endtime="20201030 18:27:52.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.903" level="INFO">VALUE: {'diff': [0, 4.653000000000296e-06, 4.457999999998852e-06, 5.653000000001296e-06, 5.457999999999852e-06, 6.11199999999909e-06, 5.027000000001197e-06, 4.458999999998325e-06, 4.889000000000976e-06, 6.165999999998423e-06, 5.375000000001906e-06, 4.528000000000171e-06, 4.902999999997076e-06, 5.430000000000712e-06, 6.249999999999312e-06, 4.959000000002295e-06, 4.527000000000697e-06, 5.34799999999877e-06, 5.6389999999982565e-06, 5.777000000001947e-06, 5.9589999999998255e-06, 6.097000000000047e-06, 5.457999999999852e-06, 6.2779999999984515e-06, 4.403000000000046e-06, 4.583000000002446e-06, 6.0279999999982015e-06, 4.903000000000546e-06, 5.457999999999852e-06, 6.083000000000477e-06, 5.5979999999990204e-06, 4.763000000001377e-06, 6.0979999999995205e-06, 5.457999999999852e-06, 4.917000000000116e-06, 4.582999999998977e-06, 6.333000000000727e-06, 6.028000000001671e-06, 5.207999999999602e-06, 5.0839999999989505e-06, 5.846999999999797e-06, 5.7639999999983815e-06, 6.167000000001366e-06, 5.068999999999907e-06, 6.097000000000047e-06, 5.028000000000671e-06, 5.874999999998937e-06, 6.028000000001671e-06, 5.694000000000532e-06, 5.152999999997326e-06], 'time': [0.018057097, 0.01806175, 0.018066208, 0.018071861, 0.018077319, 0.018083431, 0.018088458, 0.018092917, 0.018097806, 0.018103972, 0.018109347, 0.018113875, 0.018118778, 0.018124208, 0.018130458, 0.018135417, 0.018139944, 0.018145292, 0.018150931, 0.018156708, 0.018162667, 0.018168764, 0.018174222, 0.0181805, 0.018184903, 0.018189486, 0.018195514, 0.018200417, 0.018205875, 0.018211958, 0.018217556, 0.018222319, 0.018228417, 0.018233875, 0.018238792, 0.018243375, 0.018249708, 0.018255736, 0.018260944, 0.018266028, 0.018271875, 0.018277639, 0.018283806, 0.018288875, 0.018294972, 0.0183, 0.018305875, 0.018311903, 0.018317597, 0.01832275], 'sourceeventsource_diff': [0, 4.653000000000296e-06, 4.457999999998852e-06, 5.653000000001296e-06, 5.457999999999852e-06, 6.11199999999909e-06, 5.027000000001197e-06, 4.458999999998325e-06, 4.889000000000976e-06, 6.165999999998423e-06, 5.375000000001906e-06, 4.528000000000171e-06, 4.902999999997076e-06, 5.430000000000712e-06, 6.249999999999312e-06, 4.959000000002295e-06, 4.527000000000697e-06, 5.34799999999877e-06, 5.6389999999982565e-06, 5.777000000001947e-06, 5.9589999999998255e-06, 6.097000000000047e-06, 5.457999999999852e-06, 6.2779999999984515e-06, 4.403000000000046e-06, 4.583000000002446e-06, 6.0279999999982015e-06, 4.903000000000546e-06, 5.457999999999852e-06, 6.083000000000477e-06, 5.5979999999990204e-06, 4.763000000001377e-06, 6.0979999999995205e-06, 5.457999999999852e-06, 4.917000000000116e-06, 4.582999999998977e-06, 6.333000000000727e-06, 6.028000000001671e-06, 5.207999999999602e-06, 5.0839999999989505e-06, 5.846999999999797e-06, 5.7639999999983815e-06, 6.167000000001366e-06, 5.068999999999907e-06, 6.097000000000047e-06, 5.028000000000671e-06, 5.874999999998937e-06, 6.028000000001671e-06, 5.694000000000532e-06, 5.152999999997326e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:52.901" endtime="20201030 18:27:52.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.897" endtime="20201030 18:27:52.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.908" level="INFO">${RESULT} = [{'diff': 4.653000000000296e-06}, {'diff': 5.653000000001296e-06}, {'diff': 6.11199999999909e-06}, {'diff': 4.458999999998325e-06}, {'diff': 6.165999999998423e-06}, {'diff': 4.528000000000171e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:52.905" endtime="20201030 18:27:52.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:52.911" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.653000000000296e-06, 5.653000000001296e-06, 6.11199999999909e-06, 4.458999999998325e-06, 6.165999999998423e-06, 4.528000000000171e-06, 5.430000000000712e-06, 4.959000000002295e-06, 5.34799...</msg>
<status status="PASS" starttime="20201030 18:27:52.909" endtime="20201030 18:27:52.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.916" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:52.914" endtime="20201030 18:27:52.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.918" level="INFO">VALUE: [4.653000000000296e-06, 5.653000000001296e-06, 6.11199999999909e-06, 4.458999999998325e-06, 6.165999999998423e-06, 4.528000000000171e-06, 5.430000000000712e-06, 4.959000000002295e-06, 5.34799999999877e-06, 5.777000000001947e-06, 6.097000000000047e-06, 6.2779999999984515e-06, 4.583000000002446e-06, 4.903000000000546e-06, 6.083000000000477e-06, 4.763000000001377e-06, 5.457999999999852e-06, 4.582999999998977e-06, 6.028000000001671e-06, 5.0839999999989505e-06, 5.7639999999983815e-06, 5.068999999999907e-06, 5.028000000000671e-06, 6.028000000001671e-06, 5.152999999997326e-06]</msg>
<status status="PASS" starttime="20201030 18:27:52.917" endtime="20201030 18:27:52.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.912" endtime="20201030 18:27:52.919"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.923" endtime="20201030 18:27:52.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.921" endtime="20201030 18:27:52.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.920" endtime="20201030 18:27:52.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.563" endtime="20201030 18:27:52.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.563" endtime="20201030 18:27:52.943"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.953" endtime="20201030 18:27:52.967"></status>
</kw>
<msg timestamp="20201030 18:27:52.968" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.951" endtime="20201030 18:27:52.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.970" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.969" endtime="20201030 18:27:52.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.971" endtime="20201030 18:27:52.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.947" endtime="20201030 18:27:52.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.946" endtime="20201030 18:27:52.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.981" endtime="20201030 18:27:53.249"></status>
</kw>
<msg timestamp="20201030 18:27:53.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018874694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018880847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.979" endtime="20201030 18:27:53.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018874694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018880847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.252" endtime="20201030 18:27:53.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.258" endtime="20201030 18:27:53.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.976" endtime="20201030 18:27:53.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.975" endtime="20201030 18:27:53.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:53.275" level="INFO">${debug} = {'diff': [0, 6.1529999999983265e-06, 6.2090000000000756e-06, 6.387999999999533e-06, 6.167000000001366e-06, 5.417000000000616e-06, 5.068999999999907e-06, 5.0839999999989505e-06, 5.777000000001947e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:53.262" endtime="20201030 18:27:53.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.276" endtime="20201030 18:27:53.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.281" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:53.280" endtime="20201030 18:27:53.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.285" level="INFO">VALUE: {'diff': [0, 6.1529999999983265e-06, 6.2090000000000756e-06, 6.387999999999533e-06, 6.167000000001366e-06, 5.417000000000616e-06, 5.068999999999907e-06, 5.0839999999989505e-06, 5.777000000001947e-06, 4.777999999996951e-06, 6.028000000001671e-06, 5.735999999999242e-06, 4.875000000001406e-06, 6.0279999999982015e-06, 5.903000000001546e-06, 5.958000000000352e-06, 6.0279999999982015e-06, 6.152000000002322e-06, 6.2639999999988816e-06, 4.528000000000171e-06, 5.042000000000241e-06, 5.9029999999980765e-06, 4.888000000001502e-06, 5.7089999999995755e-06, 5.999999999999062e-06, 5.430000000000712e-06, 4.528000000000171e-06, 4.957999999999352e-06, 4.959000000002295e-06, 6.346999999996827e-06, 4.791999999999991e-06, 5.625000000002156e-06, 5.305000000000587e-06, 5.569999999999881e-06, 4.582999999998977e-06, 5.096999999999047e-06, 5.209000000002545e-06, 5.012999999998158e-06, 4.666999999999866e-06, 5.958000000000352e-06, 5.0839999999989505e-06, 4.583000000002446e-06, 5.471999999999422e-06, 4.722999999998145e-06, 5.388000000002002e-06, 5.6529999999978264e-06, 4.959000000002295e-06, 6.151999999998853e-06, 5.2089999999990755e-06, 5.027000000001197e-06], 'time': [0.018874694, 0.018880847, 0.018887056, 0.018893444, 0.018899611, 0.018905028, 0.018910097, 0.018915181, 0.018920958, 0.018925736, 0.018931764, 0.0189375, 0.018942375, 0.018948403, 0.018954306, 0.018960264, 0.018966292, 0.018972444, 0.018978708, 0.018983236, 0.018988278, 0.018994181, 0.018999069, 0.019004778, 0.019010778, 0.019016208, 0.019020736, 0.019025694, 0.019030653, 0.019037, 0.019041792, 0.019047417, 0.019052722, 0.019058292, 0.019062875, 0.019067972, 0.019073181, 0.019078194, 0.019082861, 0.019088819, 0.019093903, 0.019098486, 0.019103958, 0.019108681, 0.019114069, 0.019119722, 0.019124681, 0.019130833, 0.019136042, 0.019141069], 'sourceeventsource_diff': [0, 6.1529999999983265e-06, 6.2090000000000756e-06, 6.387999999999533e-06, 6.167000000001366e-06, 5.417000000000616e-06, 5.068999999999907e-06, 5.0839999999989505e-06, 5.777000000001947e-06, 4.777999999996951e-06, 6.028000000001671e-06, 5.735999999999242e-06, 4.875000000001406e-06, 6.0279999999982015e-06, 5.903000000001546e-06, 5.958000000000352e-06, 6.0279999999982015e-06, 6.152000000002322e-06, 6.2639999999988816e-06, 4.528000000000171e-06, 5.042000000000241e-06, 5.9029999999980765e-06, 4.888000000001502e-06, 5.7089999999995755e-06, 5.999999999999062e-06, 5.430000000000712e-06, 4.528000000000171e-06, 4.957999999999352e-06, 4.959000000002295e-06, 6.346999999996827e-06, 4.791999999999991e-06, 5.625000000002156e-06, 5.305000000000587e-06, 5.569999999999881e-06, 4.582999999998977e-06, 5.096999999999047e-06, 5.209000000002545e-06, 5.012999999998158e-06, 4.666999999999866e-06, 5.958000000000352e-06, 5.0839999999989505e-06, 4.583000000002446e-06, 5.471999999999422e-06, 4.722999999998145e-06, 5.388000000002002e-06, 5.6529999999978264e-06, 4.959000000002295e-06, 6.151999999998853e-06, 5.2089999999990755e-06, 5.027000000001197e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:53.283" endtime="20201030 18:27:53.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.278" endtime="20201030 18:27:53.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.289" level="INFO">${RESULT} = [{'diff': 6.1529999999983265e-06}, {'diff': 6.387999999999533e-06}, {'diff': 5.417000000000616e-06}, {'diff': 5.0839999999989505e-06}, {'diff': 4.777999999996951e-06}, {'diff': 5.735999999999242e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:53.287" endtime="20201030 18:27:53.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:53.293" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.1529999999983265e-06, 6.387999999999533e-06, 5.417000000000616e-06, 5.0839999999989505e-06, 4.777999999996951e-06, 5.735999999999242e-06, 6.0279999999982015e-06, 5.958000000000352e-06, 6.1...</msg>
<status status="PASS" starttime="20201030 18:27:53.290" endtime="20201030 18:27:53.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.297" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:53.296" endtime="20201030 18:27:53.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.299" level="INFO">VALUE: [6.1529999999983265e-06, 6.387999999999533e-06, 5.417000000000616e-06, 5.0839999999989505e-06, 4.777999999996951e-06, 5.735999999999242e-06, 6.0279999999982015e-06, 5.958000000000352e-06, 6.152000000002322e-06, 4.528000000000171e-06, 5.9029999999980765e-06, 5.7089999999995755e-06, 5.430000000000712e-06, 4.957999999999352e-06, 6.346999999996827e-06, 5.625000000002156e-06, 5.569999999999881e-06, 5.096999999999047e-06, 5.012999999998158e-06, 5.958000000000352e-06, 4.583000000002446e-06, 4.722999999998145e-06, 5.6529999999978264e-06, 6.151999999998853e-06, 5.027000000001197e-06]</msg>
<status status="PASS" starttime="20201030 18:27:53.298" endtime="20201030 18:27:53.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.293" endtime="20201030 18:27:53.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.306" endtime="20201030 18:27:53.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.304" endtime="20201030 18:27:53.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.302" endtime="20201030 18:27:53.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.944" endtime="20201030 18:27:53.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.944" endtime="20201030 18:27:53.327"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.335" endtime="20201030 18:27:53.350"></status>
</kw>
<msg timestamp="20201030 18:27:53.351" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.334" endtime="20201030 18:27:53.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.353" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.352" endtime="20201030 18:27:53.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.354" endtime="20201030 18:27:53.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.331" endtime="20201030 18:27:53.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.329" endtime="20201030 18:27:53.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.364" endtime="20201030 18:27:53.630"></status>
</kw>
<msg timestamp="20201030 18:27:53.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018063028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018068875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.362" endtime="20201030 18:27:53.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018063028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018068875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.633" endtime="20201030 18:27:53.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.638" endtime="20201030 18:27:53.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.359" endtime="20201030 18:27:53.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.357" endtime="20201030 18:27:53.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:53.655" level="INFO">${debug} = {'diff': [0, 5.847000000003266e-06, 4.527999999996701e-06, 5.708000000000102e-06, 6.153000000001796e-06, 6.0279999999982015e-06, 6.333000000000727e-06, 4.403000000000046e-06, 5.082999999999477e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:27:53.642" endtime="20201030 18:27:53.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.656" endtime="20201030 18:27:53.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.665" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:53.663" endtime="20201030 18:27:53.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.669" level="INFO">VALUE: {'diff': [0, 5.847000000003266e-06, 4.527999999996701e-06, 5.708000000000102e-06, 6.153000000001796e-06, 6.0279999999982015e-06, 6.333000000000727e-06, 4.403000000000046e-06, 5.082999999999477e-06, 6.153000000001796e-06, 4.903000000000546e-06, 5.290999999997548e-06, 6.334000000000201e-06, 4.444000000002751e-06, 5.346999999999297e-06, 4.778000000000421e-06, 4.6389999999972564e-06, 6.278000000001921e-06, 5.653000000001296e-06, 5.457999999999852e-06, 5.166999999996896e-06, 6.333000000000727e-06, 5.778000000001421e-06, 6.304999999998118e-06, 5.361000000002336e-06, 5.7779999999979514e-06, 5.292000000000491e-06, 5.250000000001781e-06, 5.874999999998937e-06, 5.110999999998617e-06, 4.429999999999712e-06, 5.3200000000031e-06, 4.332999999998727e-06, 5.653000000001296e-06, 5.277999999997451e-06, 6.333000000000727e-06, 4.596999999998547e-06, 6.014000000002101e-06, 6.347000000000297e-06, 5.402999999997576e-06, 4.58400000000192e-06, 4.416000000000142e-06, 6.0139999999986316e-06, 5.236000000002211e-06, 4.555999999999311e-06, 4.485999999997992e-06, 4.625000000001156e-06, 5.667000000000866e-06, 4.902000000001072e-06, 5.444999999999756e-06], 'time': [0.018063028, 0.018068875, 0.018073403, 0.018079111, 0.018085264, 0.018091292, 0.018097625, 0.018102028, 0.018107111, 0.018113264, 0.018118167, 0.018123458, 0.018129792, 0.018134236, 0.018139583, 0.018144361, 0.018149, 0.018155278, 0.018160931, 0.018166389, 0.018171556, 0.018177889, 0.018183667, 0.018189972, 0.018195333, 0.018201111, 0.018206403, 0.018211653, 0.018217528, 0.018222639, 0.018227069, 0.018232389, 0.018236722, 0.018242375, 0.018247653, 0.018253986, 0.018258583, 0.018264597, 0.018270944, 0.018276347, 0.018280931, 0.018285347, 0.018291361, 0.018296597, 0.018301153, 0.018305639, 0.018310264, 0.018315931, 0.018320833, 0.018326278], 'sourceeventsource_diff': [0, 5.847000000003266e-06, 4.527999999996701e-06, 5.708000000000102e-06, 6.153000000001796e-06, 6.0279999999982015e-06, 6.333000000000727e-06, 4.403000000000046e-06, 5.082999999999477e-06, 6.153000000001796e-06, 4.903000000000546e-06, 5.290999999997548e-06, 6.334000000000201e-06, 4.444000000002751e-06, 5.346999999999297e-06, 4.778000000000421e-06, 4.6389999999972564e-06, 6.278000000001921e-06, 5.653000000001296e-06, 5.457999999999852e-06, 5.166999999996896e-06, 6.333000000000727e-06, 5.778000000001421e-06, 6.304999999998118e-06, 5.361000000002336e-06, 5.7779999999979514e-06, 5.292000000000491e-06, 5.250000000001781e-06, 5.874999999998937e-06, 5.110999999998617e-06, 4.429999999999712e-06, 5.3200000000031e-06, 4.332999999998727e-06, 5.653000000001296e-06, 5.277999999997451e-06, 6.333000000000727e-06, 4.596999999998547e-06, 6.014000000002101e-06, 6.347000000000297e-06, 5.402999999997576e-06, 4.58400000000192e-06, 4.416000000000142e-06, 6.0139999999986316e-06, 5.236000000002211e-06, 4.555999999999311e-06, 4.485999999997992e-06, 4.625000000001156e-06, 5.667000000000866e-06, 4.902000000001072e-06, 5.444999999999756e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:53.666" endtime="20201030 18:27:53.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.658" endtime="20201030 18:27:53.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.674" level="INFO">${RESULT} = [{'diff': 5.847000000003266e-06}, {'diff': 5.708000000000102e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 4.403000000000046e-06}, {'diff': 6.153000000001796e-06}, {'diff': 5.290999999997548e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:53.672" endtime="20201030 18:27:53.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:53.679" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.847000000003266e-06, 5.708000000000102e-06, 6.0279999999982015e-06, 4.403000000000046e-06, 6.153000000001796e-06, 5.290999999997548e-06, 4.444000000002751e-06, 4.778000000000421e-06, 6.278...</msg>
<status status="PASS" starttime="20201030 18:27:53.676" endtime="20201030 18:27:53.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.684" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:53.683" endtime="20201030 18:27:53.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.687" level="INFO">VALUE: [5.847000000003266e-06, 5.708000000000102e-06, 6.0279999999982015e-06, 4.403000000000046e-06, 6.153000000001796e-06, 5.290999999997548e-06, 4.444000000002751e-06, 4.778000000000421e-06, 6.278000000001921e-06, 5.457999999999852e-06, 6.333000000000727e-06, 6.304999999998118e-06, 5.7779999999979514e-06, 5.250000000001781e-06, 5.110999999998617e-06, 5.3200000000031e-06, 5.653000000001296e-06, 6.333000000000727e-06, 6.014000000002101e-06, 5.402999999997576e-06, 4.416000000000142e-06, 5.236000000002211e-06, 4.485999999997992e-06, 5.667000000000866e-06, 5.444999999999756e-06]</msg>
<status status="PASS" starttime="20201030 18:27:53.685" endtime="20201030 18:27:53.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.680" endtime="20201030 18:27:53.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.692" endtime="20201030 18:27:53.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.690" endtime="20201030 18:27:53.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.689" endtime="20201030 18:27:53.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.328" endtime="20201030 18:27:53.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.327" endtime="20201030 18:27:53.713"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.723" endtime="20201030 18:27:53.737"></status>
</kw>
<msg timestamp="20201030 18:27:53.737" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.721" endtime="20201030 18:27:53.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.740" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.738" endtime="20201030 18:27:53.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.741" endtime="20201030 18:27:53.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.718" endtime="20201030 18:27:53.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.715" endtime="20201030 18:27:53.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.750" endtime="20201030 18:27:54.021"></status>
</kw>
<msg timestamp="20201030 18:27:54.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.749" endtime="20201030 18:27:54.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.024" endtime="20201030 18:27:54.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.032" endtime="20201030 18:27:54.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.746" endtime="20201030 18:27:54.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.744" endtime="20201030 18:27:54.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:54.050" level="INFO">${debug} = {'diff': [0, 6.222000000000172e-06, 5.139000000001226e-06, 6.3329999999972575e-06, 4.54200000000321e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 4.597000000002016e-06, 5.332999999999727e-06, 4...</msg>
<status status="PASS" starttime="20201030 18:27:54.037" endtime="20201030 18:27:54.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.051" endtime="20201030 18:27:54.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.057" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:54.056" endtime="20201030 18:27:54.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.060" level="INFO">VALUE: {'diff': [0, 6.222000000000172e-06, 5.139000000001226e-06, 6.3329999999972575e-06, 4.54200000000321e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 4.597000000002016e-06, 5.332999999999727e-06, 4.528000000000171e-06, 6.2779999999984515e-06, 4.416000000000142e-06, 5.0699999999993806e-06, 4.957999999999352e-06, 5.653000000001296e-06, 4.778000000000421e-06, 4.957999999999352e-06, 5.971999999999922e-06, 5.917000000001116e-06, 6.2639999999988816e-06, 6.333000000000727e-06, 6.2779999999984515e-06, 5.639000000001726e-06, 6.1529999999983265e-06, 6.152000000002322e-06, 5.7779999999979514e-06, 5.486000000002461e-06, 5.1249999999981866e-06, 5.8479999999992704e-06, 4.388000000001002e-06, 5.778000000001421e-06, 5.596999999999547e-06, 5.09799999999852e-06, 6.333000000000727e-06, 4.471999999998422e-06, 4.375000000000906e-06, 4.541999999999741e-06, 4.639000000000726e-06, 5.082999999999477e-06, 6.028000000001671e-06, 5.7779999999979514e-06, 4.458000000002321e-06, 5.7779999999979514e-06, 4.653000000000296e-06, 4.457999999998852e-06, 4.403000000000046e-06, 5.958000000000352e-06, 5.721999999999672e-06, 6.347000000000297e-06, 5.889000000001976e-06], 'time': [0.019739903, 0.019746125, 0.019751264, 0.019757597, 0.019762139, 0.019768403, 0.019774667, 0.019779264, 0.019784597, 0.019789125, 0.019795403, 0.019799819, 0.019804889, 0.019809847, 0.0198155, 0.019820278, 0.019825236, 0.019831208, 0.019837125, 0.019843389, 0.019849722, 0.019856, 0.019861639, 0.019867792, 0.019873944, 0.019879722, 0.019885208, 0.019890333, 0.019896181, 0.019900569, 0.019906347, 0.019911944, 0.019917042, 0.019923375, 0.019927847, 0.019932222, 0.019936764, 0.019941403, 0.019946486, 0.019952514, 0.019958292, 0.01996275, 0.019968528, 0.019973181, 0.019977639, 0.019982042, 0.019988, 0.019993722, 0.020000069, 0.020005958], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 6.222000000000172e-06, 5.139000000001226e-06, 6.3329999999972575e-06, 4.54200000000321e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 4.597000000002016e-06, 5.332999999999727e-06, 4.528000000000171e-06, 6.2779999999984515e-06, 4.416000000000142e-06, 5.0699999999993806e-06, 4.957999999999352e-06, 5.653000000001296e-06, 4.778000000000421e-06, 4.957999999999352e-06, 5.971999999999922e-06, 5.917000000001116e-06, 6.2639999999988816e-06, 6.333000000000727e-06, 6.2779999999984515e-06, 5.639000000001726e-06, 6.1529999999983265e-06, 6.152000000002322e-06, 5.7779999999979514e-06, 5.486000000002461e-06, 5.1249999999981866e-06, 5.8479999999992704e-06, 4.388000000001002e-06, 5.778000000001421e-06, 5.596999999999547e-06, 5.09799999999852e-06, 6.333000000000727e-06, 4.471999999998422e-06, 4.375000000000906e-06, 4.541999999999741e-06, 4.639000000000726e-06, 5.082999999999477e-06, 6.028000000001671e-06, 5.7779999999979514e-06, 4.458000000002321e-06, 5.7779999999979514e-06, 4.653000000000296e-06, 4.457999999998852e-06, 4.403000000000046e-06, 5.958000000000352e-06, 5.721999999999672e-06, 6.347000000000297e-06, 5.889000000001976e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:54.058" endtime="20201030 18:27:54.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.054" endtime="20201030 18:27:54.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.065" level="INFO">${RESULT} = [{'diff': 6.222000000000172e-06}, {'diff': 6.3329999999972575e-06}, {'diff': 6.2639999999988816e-06}, {'diff': 4.597000000002016e-06}, {'diff': 4.528000000000171e-06}, {'diff': 4.416000000000142e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:54.062" endtime="20201030 18:27:54.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:54.068" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.222000000000172e-06, 6.3329999999972575e-06, 6.2639999999988816e-06, 4.597000000002016e-06, 4.528000000000171e-06, 4.416000000000142e-06, 4.957999999999352e-06, 4.778000000000421e-06, 5.97...</msg>
<status status="PASS" starttime="20201030 18:27:54.066" endtime="20201030 18:27:54.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.073" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:54.072" endtime="20201030 18:27:54.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.076" level="INFO">VALUE: [6.222000000000172e-06, 6.3329999999972575e-06, 6.2639999999988816e-06, 4.597000000002016e-06, 4.528000000000171e-06, 4.416000000000142e-06, 4.957999999999352e-06, 4.778000000000421e-06, 5.971999999999922e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.1529999999983265e-06, 5.7779999999979514e-06, 5.1249999999981866e-06, 4.388000000001002e-06, 5.596999999999547e-06, 6.333000000000727e-06, 4.375000000000906e-06, 4.639000000000726e-06, 6.028000000001671e-06, 4.458000000002321e-06, 4.653000000000296e-06, 4.403000000000046e-06, 5.721999999999672e-06, 5.889000000001976e-06]</msg>
<status status="PASS" starttime="20201030 18:27:54.074" endtime="20201030 18:27:54.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.069" endtime="20201030 18:27:54.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.081" endtime="20201030 18:27:54.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.080" endtime="20201030 18:27:54.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.078" endtime="20201030 18:27:54.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.714" endtime="20201030 18:27:54.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.713" endtime="20201030 18:27:54.102"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.110" endtime="20201030 18:27:54.124"></status>
</kw>
<msg timestamp="20201030 18:27:54.125" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.109" endtime="20201030 18:27:54.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.127" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.126" endtime="20201030 18:27:54.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.129" endtime="20201030 18:27:54.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.106" endtime="20201030 18:27:54.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.104" endtime="20201030 18:27:54.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.139" endtime="20201030 18:27:54.405"></status>
</kw>
<msg timestamp="20201030 18:27:54.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018142431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018147347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.137" endtime="20201030 18:27:54.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018142431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018147347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.408" endtime="20201030 18:27:54.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.413" endtime="20201030 18:27:54.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.134" endtime="20201030 18:27:54.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.132" endtime="20201030 18:27:54.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:54.430" level="INFO">${debug} = {'diff': [0, 4.916000000000642e-06, 5.8889999999985065e-06, 5.153000000000796e-06, 6.333000000000727e-06, 5.402999999997576e-06, 6.042000000001241e-06, 6.194000000001032e-06, 5.235999999998742e-06, 4....</msg>
<status status="PASS" starttime="20201030 18:27:54.417" endtime="20201030 18:27:54.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.431" endtime="20201030 18:27:54.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.436" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:54.435" endtime="20201030 18:27:54.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.439" level="INFO">VALUE: {'diff': [0, 4.916000000000642e-06, 5.8889999999985065e-06, 5.153000000000796e-06, 6.333000000000727e-06, 5.402999999997576e-06, 6.042000000001241e-06, 6.194000000001032e-06, 5.235999999998742e-06, 4.500000000001031e-06, 5.0839999999989505e-06, 6.041000000001767e-06, 5.5139999999981315e-06, 5.582999999999977e-06, 6.0979999999995205e-06, 5.332999999999727e-06, 5.097000000002516e-06, 4.471999999998422e-06, 5.945000000000256e-06, 6.2779999999984515e-06, 5.666000000001392e-06, 6.2639999999988816e-06, 4.389000000000476e-06, 4.903000000000546e-06, 4.472000000001891e-06, 5.9029999999980765e-06, 4.707999999999102e-06, 5.278000000000921e-06, 5.264000000001351e-06, 4.596999999998547e-06, 6.028000000001671e-06, 4.707999999999102e-06, 6.2779999999984515e-06, 4.972000000002391e-06, 4.6949999999990055e-06, 4.721999999998672e-06, 5.667000000000866e-06, 4.625000000001156e-06, 4.791000000000517e-06, 5.971999999999922e-06, 5.444999999999756e-06, 4.528000000000171e-06, 6.222000000000172e-06, 5.6939999999970625e-06, 5.778000000001421e-06, 6.222000000000172e-06, 5.9029999999980765e-06, 5.486000000002461e-06, 5.874999999998937e-06, 5.471999999999422e-06], 'time': [0.018142431, 0.018147347, 0.018153236, 0.018158389, 0.018164722, 0.018170125, 0.018176167, 0.018182361, 0.018187597, 0.018192097, 0.018197181, 0.018203222, 0.018208736, 0.018214319, 0.018220417, 0.01822575, 0.018230847, 0.018235319, 0.018241264, 0.018247542, 0.018253208, 0.018259472, 0.018263861, 0.018268764, 0.018273236, 0.018279139, 0.018283847, 0.018289125, 0.018294389, 0.018298986, 0.018305014, 0.018309722, 0.018316, 0.018320972, 0.018325667, 0.018330389, 0.018336056, 0.018340681, 0.018345472, 0.018351444, 0.018356889, 0.018361417, 0.018367639, 0.018373333, 0.018379111, 0.018385333, 0.018391236, 0.018396722, 0.018402597, 0.018408069], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 4.916000000000642e-06, 5.8889999999985065e-06, 5.153000000000796e-06, 6.333000000000727e-06, 5.402999999997576e-06, 6.042000000001241e-06, 6.194000000001032e-06, 5.235999999998742e-06, 4.500000000001031e-06, 5.0839999999989505e-06, 6.041000000001767e-06, 5.5139999999981315e-06, 5.582999999999977e-06, 6.0979999999995205e-06, 5.332999999999727e-06, 5.097000000002516e-06, 4.471999999998422e-06, 5.945000000000256e-06, 6.2779999999984515e-06, 5.666000000001392e-06, 6.2639999999988816e-06, 4.389000000000476e-06, 4.903000000000546e-06, 4.472000000001891e-06, 5.9029999999980765e-06, 4.707999999999102e-06, 5.278000000000921e-06, 5.264000000001351e-06, 4.596999999998547e-06, 6.028000000001671e-06, 4.707999999999102e-06, 6.2779999999984515e-06, 4.972000000002391e-06, 4.6949999999990055e-06, 4.721999999998672e-06, 5.667000000000866e-06, 4.625000000001156e-06, 4.791000000000517e-06, 5.971999999999922e-06, 5.444999999999756e-06, 4.528000000000171e-06, 6.222000000000172e-06, 5.6939999999970625e-06, 5.778000000001421e-06, 6.222000000000172e-06, 5.9029999999980765e-06, 5.486000000002461e-06, 5.874999999998937e-06, 5.471999999999422e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:54.437" endtime="20201030 18:27:54.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.433" endtime="20201030 18:27:54.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.449" level="INFO">${RESULT} = [{'diff': 4.916000000000642e-06}, {'diff': 5.153000000000796e-06}, {'diff': 5.402999999997576e-06}, {'diff': 6.194000000001032e-06}, {'diff': 4.500000000001031e-06}, {'diff': 6.041000000001767e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:54.446" endtime="20201030 18:27:54.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:54.452" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.916000000000642e-06, 5.153000000000796e-06, 5.402999999997576e-06, 6.194000000001032e-06, 4.500000000001031e-06, 6.041000000001767e-06, 5.582999999999977e-06, 5.332999999999727e-06, 4.4719...</msg>
<status status="PASS" starttime="20201030 18:27:54.450" endtime="20201030 18:27:54.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.457" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:54.456" endtime="20201030 18:27:54.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.459" level="INFO">VALUE: [4.916000000000642e-06, 5.153000000000796e-06, 5.402999999997576e-06, 6.194000000001032e-06, 4.500000000001031e-06, 6.041000000001767e-06, 5.582999999999977e-06, 5.332999999999727e-06, 4.471999999998422e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 4.903000000000546e-06, 5.9029999999980765e-06, 5.278000000000921e-06, 4.596999999998547e-06, 4.707999999999102e-06, 4.972000000002391e-06, 4.721999999998672e-06, 4.625000000001156e-06, 5.971999999999922e-06, 4.528000000000171e-06, 5.6939999999970625e-06, 6.222000000000172e-06, 5.486000000002461e-06, 5.471999999999422e-06]</msg>
<status status="PASS" starttime="20201030 18:27:54.458" endtime="20201030 18:27:54.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.453" endtime="20201030 18:27:54.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.464" endtime="20201030 18:27:54.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.462" endtime="20201030 18:27:54.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.461" endtime="20201030 18:27:54.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.103" endtime="20201030 18:27:54.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.102" endtime="20201030 18:27:54.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.715" endtime="20201030 18:27:54.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.489" endtime="20201030 18:27:54.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.487" endtime="20201030 18:27:54.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.486" endtime="20201030 18:27:54.509"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:46.644" endtime="20201030 18:27:54.509" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.516" endtime="20201030 18:27:54.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.515" endtime="20201030 18:27:54.537"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.551" endtime="20201030 18:27:54.568"></status>
</kw>
<msg timestamp="20201030 18:27:54.568" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.549" endtime="20201030 18:27:54.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.569" endtime="20201030 18:27:54.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.574" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:54.572" endtime="20201030 18:27:54.574"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:54.546" endtime="20201030 18:27:54.575"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:54.544" endtime="20201030 18:27:54.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.543" endtime="20201030 18:27:54.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:54.580" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:54.580" endtime="20201030 18:27:54.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.577" endtime="20201030 18:27:54.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.542" endtime="20201030 18:27:54.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.541" endtime="20201030 18:27:54.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.582" endtime="20201030 18:27:54.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.540" endtime="20201030 18:27:54.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.538" endtime="20201030 18:27:54.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.514" endtime="20201030 18:27:54.585"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.594" endtime="20201030 18:27:54.610"></status>
</kw>
<msg timestamp="20201030 18:27:54.610" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.592" endtime="20201030 18:27:54.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.613" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.612" endtime="20201030 18:27:54.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.614" endtime="20201030 18:27:54.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.590" endtime="20201030 18:27:54.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.588" endtime="20201030 18:27:54.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.624" endtime="20201030 18:27:54.909"></status>
</kw>
<msg timestamp="20201030 18:27:54.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067163819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067165611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.622" endtime="20201030 18:27:54.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067163819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067165611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.913" endtime="20201030 18:27:54.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.922" endtime="20201030 18:27:54.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.619" endtime="20201030 18:27:54.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.617" endtime="20201030 18:27:54.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.929" level="INFO">${RESULT} = [{'diff': 1.7920000000004599e-06}, {'diff': 1.7499999999948113e-06}, {'diff': 1.76400000000132e-06}, {'diff': 1.777999999993951e-06}, {'diff': 1.6659999999973918e-06}, {'diff': 1.7780000000078289e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:54.925" endtime="20201030 18:27:54.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:54.933" level="INFO">${OVERHEAD} = {'diff': [1.7920000000004599e-06, 1.7499999999948113e-06, 1.76400000000132e-06, 1.777999999993951e-06, 1.6659999999973918e-06, 1.7780000000078289e-06, 1.6669999999968654e-06, 1.722999999995145e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:27:54.930" endtime="20201030 18:27:54.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.937" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:54.936" endtime="20201030 18:27:54.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.940" level="INFO">VALUE: [1.7920000000004599e-06, 1.7499999999948113e-06, 1.76400000000132e-06, 1.777999999993951e-06, 1.6659999999973918e-06, 1.7780000000078289e-06, 1.6669999999968654e-06, 1.722999999995145e-06, 1.7360000000021802e-06, 1.7769999999944774e-06, 1.805999999993091e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7360000000021802e-06, 1.7770000000083552e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.750000000008689e-06, 1.7920000000004599e-06, 1.7359999999883025e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.6530000000042344e-06, 1.7220000000095492e-06, 1.6939999999965316e-06, 1.750000000008689e-06, 1.7219999999956714e-06, 1.7770000000083552e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.722999999995145e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7499999999948113e-06, 1.6939999999965316e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.777999999993951e-06, 1.7370000000016539e-06]</msg>
<status status="PASS" starttime="20201030 18:27:54.939" endtime="20201030 18:27:54.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.934" endtime="20201030 18:27:54.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.947" endtime="20201030 18:27:54.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.945" endtime="20201030 18:27:54.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.944" endtime="20201030 18:27:54.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.586" endtime="20201030 18:27:54.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.586" endtime="20201030 18:27:54.968"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.976" endtime="20201030 18:27:54.991"></status>
</kw>
<msg timestamp="20201030 18:27:54.992" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.974" endtime="20201030 18:27:54.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.994" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.993" endtime="20201030 18:27:54.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.995" endtime="20201030 18:27:54.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.972" endtime="20201030 18:27:54.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.970" endtime="20201030 18:27:54.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.005" endtime="20201030 18:27:55.289"></status>
</kw>
<msg timestamp="20201030 18:27:55.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018353403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018355153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.003" endtime="20201030 18:27:55.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018353403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018355153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.293" endtime="20201030 18:27:55.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.302" endtime="20201030 18:27:55.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.001" endtime="20201030 18:27:55.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.999" endtime="20201030 18:27:55.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.309" level="INFO">${RESULT} = [{'diff': 1.7499999999982807e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.6809999999999048e-06}, {'diff': 1.7359999999987108e-...</msg>
<status status="PASS" starttime="20201030 18:27:55.305" endtime="20201030 18:27:55.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:55.314" level="INFO">${OVERHEAD} = {'diff': [1.7499999999982807e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7499999999982807e-06...</msg>
<status status="PASS" starttime="20201030 18:27:55.310" endtime="20201030 18:27:55.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.319" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:55.318" endtime="20201030 18:27:55.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.321" level="INFO">VALUE: [1.7499999999982807e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.7769999999979469e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7769999999979469e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7779999999974205e-06, 1.7500000000017502e-06, 1.6800000000004311e-06, 1.76400000000132e-06, 1.7229999999986145e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7369999999981844e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201030 18:27:55.320" endtime="20201030 18:27:55.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.315" endtime="20201030 18:27:55.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.326" endtime="20201030 18:27:55.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.324" endtime="20201030 18:27:55.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.323" endtime="20201030 18:27:55.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.968" endtime="20201030 18:27:55.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.968" endtime="20201030 18:27:55.347"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.355" endtime="20201030 18:27:55.371"></status>
</kw>
<msg timestamp="20201030 18:27:55.371" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.353" endtime="20201030 18:27:55.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.374" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.372" endtime="20201030 18:27:55.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.375" endtime="20201030 18:27:55.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.351" endtime="20201030 18:27:55.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.349" endtime="20201030 18:27:55.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.384" endtime="20201030 18:27:55.670"></status>
</kw>
<msg timestamp="20201030 18:27:55.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018403056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018404833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.383" endtime="20201030 18:27:55.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018403056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018404833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.674" endtime="20201030 18:27:55.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.683" endtime="20201030 18:27:55.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.380" endtime="20201030 18:27:55.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.378" endtime="20201030 18:27:55.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.691" level="INFO">${RESULT} = [{'diff': 1.7769999999979469e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-...</msg>
<status status="PASS" starttime="20201030 18:27:55.687" endtime="20201030 18:27:55.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:55.695" level="INFO">${OVERHEAD} = {'diff': [1.7769999999979469e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7359999999987108e-06...</msg>
<status status="PASS" starttime="20201030 18:27:55.692" endtime="20201030 18:27:55.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.700" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:55.699" endtime="20201030 18:27:55.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.702" level="INFO">VALUE: [1.7769999999979469e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7779999999974205e-06, 1.7089999999990446e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7769999999979469e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7229999999986145e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.6809999999999048e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.7369999999981844e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.6659999999973918e-06, 1.6809999999999048e-06, 1.7359999999987108e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201030 18:27:55.701" endtime="20201030 18:27:55.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.696" endtime="20201030 18:27:55.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.707" endtime="20201030 18:27:55.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.706" endtime="20201030 18:27:55.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.704" endtime="20201030 18:27:55.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.348" endtime="20201030 18:27:55.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.347" endtime="20201030 18:27:55.728"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.736" endtime="20201030 18:27:55.752"></status>
</kw>
<msg timestamp="20201030 18:27:55.753" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.735" endtime="20201030 18:27:55.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.755" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.754" endtime="20201030 18:27:55.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.756" endtime="20201030 18:27:55.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.732" endtime="20201030 18:27:55.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.730" endtime="20201030 18:27:55.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.766" endtime="20201030 18:27:56.058"></status>
</kw>
<msg timestamp="20201030 18:27:56.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018649639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018651361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.765" endtime="20201030 18:27:56.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018649639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018651361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.062" endtime="20201030 18:27:56.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.071" endtime="20201030 18:27:56.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.762" endtime="20201030 18:27:56.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.760" endtime="20201030 18:27:56.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.078" level="INFO">${RESULT} = [{'diff': 1.7220000000026103e-06}, {'diff': 1.7499999999982807e-06}, {'diff': 1.7229999999986145e-06}, {'diff': 1.77800000000089e-06}, {'diff': 1.7499999999982807e-06}, {'diff': 1.7359999999987108e-06...</msg>
<status status="PASS" starttime="20201030 18:27:56.074" endtime="20201030 18:27:56.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:56.082" level="INFO">${OVERHEAD} = {'diff': [1.7220000000026103e-06, 1.7499999999982807e-06, 1.7229999999986145e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:56.079" endtime="20201030 18:27:56.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.087" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:56.086" endtime="20201030 18:27:56.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.089" level="INFO">VALUE: [1.7220000000026103e-06, 1.7499999999982807e-06, 1.7229999999986145e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.6949999999994747e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.709000000002514e-06, 1.7359999999987108e-06, 1.8050000000005562e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.8050000000005562e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.6800000000004311e-06, 1.7499999999982807e-06, 1.7229999999986145e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7229999999986145e-06]</msg>
<status status="PASS" starttime="20201030 18:27:56.088" endtime="20201030 18:27:56.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.083" endtime="20201030 18:27:56.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.095" endtime="20201030 18:27:56.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.093" endtime="20201030 18:27:56.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.092" endtime="20201030 18:27:56.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.729" endtime="20201030 18:27:56.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.728" endtime="20201030 18:27:56.116"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.124" endtime="20201030 18:27:56.140"></status>
</kw>
<msg timestamp="20201030 18:27:56.140" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.123" endtime="20201030 18:27:56.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.143" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.141" endtime="20201030 18:27:56.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.144" endtime="20201030 18:27:56.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.120" endtime="20201030 18:27:56.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.118" endtime="20201030 18:27:56.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.153" endtime="20201030 18:27:56.443"></status>
</kw>
<msg timestamp="20201030 18:27:56.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018615722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018617389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.152" endtime="20201030 18:27:56.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018615722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018617389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.448" endtime="20201030 18:27:56.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.456" endtime="20201030 18:27:56.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.149" endtime="20201030 18:27:56.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.147" endtime="20201030 18:27:56.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.463" level="INFO">${RESULT} = [{'diff': 1.6670000000003349e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.77800000000089e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.6809999999999048e-06}, {'diff': 1.7500000000017502e-06...</msg>
<status status="PASS" starttime="20201030 18:27:56.460" endtime="20201030 18:27:56.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:56.469" level="INFO">${OVERHEAD} = {'diff': [1.6670000000003349e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:56.464" endtime="20201030 18:27:56.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.473" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:56.472" endtime="20201030 18:27:56.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.476" level="INFO">VALUE: [1.6670000000003349e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7370000000016539e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.8050000000005562e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7080000000030404e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7770000000014163e-06, 1.7369999999981844e-06, 1.7770000000014163e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7229999999986145e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.77800000000089e-06, 1.7369999999981844e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 18:27:56.474" endtime="20201030 18:27:56.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.469" endtime="20201030 18:27:56.476"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.480" endtime="20201030 18:27:56.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.479" endtime="20201030 18:27:56.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.477" endtime="20201030 18:27:56.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.117" endtime="20201030 18:27:56.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.117" endtime="20201030 18:27:56.501"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.509" endtime="20201030 18:27:56.525"></status>
</kw>
<msg timestamp="20201030 18:27:56.526" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.508" endtime="20201030 18:27:56.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.528" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.527" endtime="20201030 18:27:56.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.529" endtime="20201030 18:27:56.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.505" endtime="20201030 18:27:56.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.503" endtime="20201030 18:27:56.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.539" endtime="20201030 18:27:56.823"></status>
</kw>
<msg timestamp="20201030 18:27:56.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018355708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018357458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.537" endtime="20201030 18:27:56.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018355708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018357458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.828" endtime="20201030 18:27:56.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.837" endtime="20201030 18:27:56.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.535" endtime="20201030 18:27:56.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.533" endtime="20201030 18:27:56.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.844" level="INFO">${RESULT} = [{'diff': 1.7500000000017502e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7770000000014163e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7359999999987108e-...</msg>
<status status="PASS" starttime="20201030 18:27:56.841" endtime="20201030 18:27:56.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:56.849" level="INFO">${OVERHEAD} = {'diff': [1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7770000000014163e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06...</msg>
<status status="PASS" starttime="20201030 18:27:56.846" endtime="20201030 18:27:56.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.853" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:56.852" endtime="20201030 18:27:56.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.856" level="INFO">VALUE: [1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7770000000014163e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7779999999974205e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7639999999978506e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.709000000002514e-06, 1.7769999999979469e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 18:27:56.854" endtime="20201030 18:27:56.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.850" endtime="20201030 18:27:56.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.861" endtime="20201030 18:27:56.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.859" endtime="20201030 18:27:56.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.858" endtime="20201030 18:27:56.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.502" endtime="20201030 18:27:56.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.501" endtime="20201030 18:27:56.881"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.890" endtime="20201030 18:27:56.905"></status>
</kw>
<msg timestamp="20201030 18:27:56.906" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.888" endtime="20201030 18:27:56.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.908" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.907" endtime="20201030 18:27:56.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.909" endtime="20201030 18:27:56.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.885" endtime="20201030 18:27:56.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.884" endtime="20201030 18:27:56.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.920" endtime="20201030 18:27:57.210"></status>
</kw>
<msg timestamp="20201030 18:27:57.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018586403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018588139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.918" endtime="20201030 18:27:57.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018586403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018588139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.215" endtime="20201030 18:27:57.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.224" endtime="20201030 18:27:57.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.915" endtime="20201030 18:27:57.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.914" endtime="20201030 18:27:57.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.230" level="INFO">${RESULT} = [{'diff': 1.7359999999987108e-06}, {'diff': 1.76400000000132e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.6670000000003349e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7499999999982807e-06...</msg>
<status status="PASS" starttime="20201030 18:27:57.227" endtime="20201030 18:27:57.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:57.234" level="INFO">${OVERHEAD} = {'diff': [1.7359999999987108e-06, 1.76400000000132e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:27:57.231" endtime="20201030 18:27:57.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.238" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:57.237" endtime="20201030 18:27:57.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.241" level="INFO">VALUE: [1.7359999999987108e-06, 1.76400000000132e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.694000000000001e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.7229999999986145e-06, 1.7359999999987108e-06, 1.7630000000018464e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7229999999986145e-06, 1.7500000000017502e-06, 1.6809999999999048e-06, 1.7360000000021802e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201030 18:27:57.240" endtime="20201030 18:27:57.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.235" endtime="20201030 18:27:57.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.246" endtime="20201030 18:27:57.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.245" endtime="20201030 18:27:57.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.243" endtime="20201030 18:27:57.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.882" endtime="20201030 18:27:57.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.882" endtime="20201030 18:27:57.270"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.286" endtime="20201030 18:27:57.306"></status>
</kw>
<msg timestamp="20201030 18:27:57.307" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.283" endtime="20201030 18:27:57.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.312" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.309" endtime="20201030 18:27:57.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.314" endtime="20201030 18:27:57.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.277" endtime="20201030 18:27:57.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.274" endtime="20201030 18:27:57.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.334" endtime="20201030 18:27:57.627"></status>
</kw>
<msg timestamp="20201030 18:27:57.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030509861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030511611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.330" endtime="20201030 18:27:57.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030509861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030511611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.631" endtime="20201030 18:27:57.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.639" endtime="20201030 18:27:57.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.324" endtime="20201030 18:27:57.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.321" endtime="20201030 18:27:57.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.646" level="INFO">${RESULT} = [{'diff': 1.7500000000017502e-06}, {'diff': 1.7369999999981844e-06}, {'diff': 1.707999999999571e-06}, {'diff': 1.707999999999571e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7360000000021802e-06...</msg>
<status status="PASS" starttime="20201030 18:27:57.643" endtime="20201030 18:27:57.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:57.651" level="INFO">${OVERHEAD} = {'diff': [1.7500000000017502e-06, 1.7369999999981844e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:57.647" endtime="20201030 18:27:57.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.655" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:57.654" endtime="20201030 18:27:57.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.657" level="INFO">VALUE: [1.7500000000017502e-06, 1.7369999999981844e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7630000000018464e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7369999999981844e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.8060000000000298e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7769999999979469e-06, 1.7639999999978506e-06, 1.7219999999991409e-06, 1.7229999999986145e-06, 1.7080000000030404e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.7080000000030404e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7770000000014163e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 18:27:57.656" endtime="20201030 18:27:57.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.651" endtime="20201030 18:27:57.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.664" endtime="20201030 18:27:57.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.662" endtime="20201030 18:27:57.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.660" endtime="20201030 18:27:57.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.271" endtime="20201030 18:27:57.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.270" endtime="20201030 18:27:57.686"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.699" endtime="20201030 18:27:57.714"></status>
</kw>
<msg timestamp="20201030 18:27:57.715" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.696" endtime="20201030 18:27:57.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.717" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.716" endtime="20201030 18:27:57.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.718" endtime="20201030 18:27:57.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.692" endtime="20201030 18:27:57.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.690" endtime="20201030 18:27:57.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.728" endtime="20201030 18:27:58.009"></status>
</kw>
<msg timestamp="20201030 18:27:58.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023650708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023652486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.726" endtime="20201030 18:27:58.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023650708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023652486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.015" endtime="20201030 18:27:58.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.023" endtime="20201030 18:27:58.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.724" endtime="20201030 18:27:58.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.722" endtime="20201030 18:27:58.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.029" level="INFO">${RESULT} = [{'diff': 1.77800000000089e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7499999999982807e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06...</msg>
<status status="PASS" starttime="20201030 18:27:58.026" endtime="20201030 18:27:58.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:58.033" level="INFO">${OVERHEAD} = {'diff': [1.77800000000089e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:58.030" endtime="20201030 18:27:58.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.038" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:58.037" endtime="20201030 18:27:58.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.040" level="INFO">VALUE: [1.77800000000089e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7220000000026103e-06, 1.7910000000009862e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.7370000000016539e-06, 1.7220000000026103e-06, 1.7229999999986145e-06, 1.6670000000003349e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.7219999999991409e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.7370000000016539e-06, 1.6660000000008612e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7229999999986145e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.8199999999995997e-06, 1.7229999999986145e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201030 18:27:58.039" endtime="20201030 18:27:58.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.034" endtime="20201030 18:27:58.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.044" endtime="20201030 18:27:58.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.043" endtime="20201030 18:27:58.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.042" endtime="20201030 18:27:58.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.688" endtime="20201030 18:27:58.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.687" endtime="20201030 18:27:58.065"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.076" endtime="20201030 18:27:58.091"></status>
</kw>
<msg timestamp="20201030 18:27:58.091" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.074" endtime="20201030 18:27:58.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.092" endtime="20201030 18:27:58.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.095" endtime="20201030 18:27:58.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.071" endtime="20201030 18:27:58.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.069" endtime="20201030 18:27:58.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.105" endtime="20201030 18:27:58.396"></status>
</kw>
<msg timestamp="20201030 18:27:58.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020594875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020596597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.104" endtime="20201030 18:27:58.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020594875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020596597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.400" endtime="20201030 18:27:58.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.408" endtime="20201030 18:27:58.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.101" endtime="20201030 18:27:58.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.099" endtime="20201030 18:27:58.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.416" level="INFO">${RESULT} = [{'diff': 1.7220000000026103e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.6670000000003349e-06}, {'diff': 1.77800000000089e-06...</msg>
<status status="PASS" starttime="20201030 18:27:58.413" endtime="20201030 18:27:58.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:58.420" level="INFO">${OVERHEAD} = {'diff': [1.7220000000026103e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.77800000000089e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:58.417" endtime="20201030 18:27:58.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.424" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:58.423" endtime="20201030 18:27:58.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.426" level="INFO">VALUE: [1.7220000000026103e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.77800000000089e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7639999999978506e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.77800000000089e-06, 1.694000000000001e-06, 1.7370000000016539e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7920000000004599e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7639999999978506e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.6800000000004311e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.694000000000001e-06, 1.7499999999982807e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201030 18:27:58.425" endtime="20201030 18:27:58.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.421" endtime="20201030 18:27:58.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.434" endtime="20201030 18:27:58.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.432" endtime="20201030 18:27:58.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.431" endtime="20201030 18:27:58.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.066" endtime="20201030 18:27:58.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.065" endtime="20201030 18:27:58.454"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.462" endtime="20201030 18:27:58.477"></status>
</kw>
<msg timestamp="20201030 18:27:58.478" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.461" endtime="20201030 18:27:58.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.480" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.479" endtime="20201030 18:27:58.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.481" endtime="20201030 18:27:58.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.458" endtime="20201030 18:27:58.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.456" endtime="20201030 18:27:58.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.490" endtime="20201030 18:27:58.770"></status>
</kw>
<msg timestamp="20201030 18:27:58.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018210458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018212194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.489" endtime="20201030 18:27:58.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018210458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018212194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.774" endtime="20201030 18:27:58.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.783" endtime="20201030 18:27:58.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.486" endtime="20201030 18:27:58.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.485" endtime="20201030 18:27:58.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.789" level="INFO">${RESULT} = [{'diff': 1.7360000000021802e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.723000000002084e-06}, {'diff': 1.7499999999982807e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7499999999982807e-0...</msg>
<status status="PASS" starttime="20201030 18:27:58.786" endtime="20201030 18:27:58.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:58.794" level="INFO">${OVERHEAD} = {'diff': [1.7360000000021802e-06, 1.7500000000017502e-06, 1.723000000002084e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:58.790" endtime="20201030 18:27:58.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.798" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:58.797" endtime="20201030 18:27:58.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.801" level="INFO">VALUE: [1.7360000000021802e-06, 1.7500000000017502e-06, 1.723000000002084e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7229999999986145e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7370000000016539e-06, 1.7219999999991409e-06, 1.8060000000000298e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.8050000000005562e-06, 1.7080000000030404e-06, 1.7369999999981844e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7779999999974205e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201030 18:27:58.799" endtime="20201030 18:27:58.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.795" endtime="20201030 18:27:58.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.805" endtime="20201030 18:27:58.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.803" endtime="20201030 18:27:58.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.802" endtime="20201030 18:27:58.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.455" endtime="20201030 18:27:58.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.455" endtime="20201030 18:27:58.826"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.834" endtime="20201030 18:27:58.849"></status>
</kw>
<msg timestamp="20201030 18:27:58.849" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.832" endtime="20201030 18:27:58.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.852" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.850" endtime="20201030 18:27:58.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.853" endtime="20201030 18:27:58.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.830" endtime="20201030 18:27:58.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.828" endtime="20201030 18:27:58.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.862" endtime="20201030 18:27:59.143"></status>
</kw>
<msg timestamp="20201030 18:27:59.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018259417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018261139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.860" endtime="20201030 18:27:59.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018259417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018261139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.148" endtime="20201030 18:27:59.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.156" endtime="20201030 18:27:59.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.858" endtime="20201030 18:27:59.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.856" endtime="20201030 18:27:59.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.164" level="INFO">${RESULT} = [{'diff': 1.7219999999991409e-06}, {'diff': 1.707999999999571e-06}, {'diff': 1.7499999999982807e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7500000000017502e-0...</msg>
<status status="PASS" starttime="20201030 18:27:59.161" endtime="20201030 18:27:59.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:59.168" level="INFO">${OVERHEAD} = {'diff': [1.7219999999991409e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7359999999987108e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:59.165" endtime="20201030 18:27:59.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.172" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:59.171" endtime="20201030 18:27:59.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.175" level="INFO">VALUE: [1.7219999999991409e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7910000000009862e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7229999999986145e-06, 1.76400000000132e-06, 1.7369999999981844e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.8060000000000298e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.6949999999994747e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.7369999999981844e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201030 18:27:59.173" endtime="20201030 18:27:59.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.169" endtime="20201030 18:27:59.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.179" endtime="20201030 18:27:59.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.178" endtime="20201030 18:27:59.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.177" endtime="20201030 18:27:59.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.826" endtime="20201030 18:27:59.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.826" endtime="20201030 18:27:59.200"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.208" endtime="20201030 18:27:59.224"></status>
</kw>
<msg timestamp="20201030 18:27:59.225" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.207" endtime="20201030 18:27:59.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.227" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.226" endtime="20201030 18:27:59.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.228" endtime="20201030 18:27:59.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.204" endtime="20201030 18:27:59.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.203" endtime="20201030 18:27:59.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.238" endtime="20201030 18:27:59.535"></status>
</kw>
<msg timestamp="20201030 18:27:59.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018382042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018383833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.236" endtime="20201030 18:27:59.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018382042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018383833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.545" endtime="20201030 18:27:59.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.565" endtime="20201030 18:27:59.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.234" endtime="20201030 18:27:59.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.232" endtime="20201030 18:27:59.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.580" level="INFO">${RESULT} = [{'diff': 1.7909999999975168e-06}, {'diff': 1.6809999999999048e-06}, {'diff': 1.77800000000089e-06}, {'diff': 1.707999999999571e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7499999999982807e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:59.573" endtime="20201030 18:27:59.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:59.589" level="INFO">${OVERHEAD} = {'diff': [1.7909999999975168e-06, 1.6809999999999048e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.6670000000003349e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:27:59.583" endtime="20201030 18:27:59.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.593" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:59.592" endtime="20201030 18:27:59.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.596" level="INFO">VALUE: [1.7909999999975168e-06, 1.6809999999999048e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.6670000000003349e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7089999999990446e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.6809999999999048e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7089999999990446e-06, 1.7370000000016539e-06, 1.7219999999991409e-06, 1.723000000002084e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.8060000000000298e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 18:27:59.594" endtime="20201030 18:27:59.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.590" endtime="20201030 18:27:59.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.609" endtime="20201030 18:27:59.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.608" endtime="20201030 18:27:59.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.607" endtime="20201030 18:27:59.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.201" endtime="20201030 18:27:59.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.201" endtime="20201030 18:27:59.630"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.638" endtime="20201030 18:27:59.653"></status>
</kw>
<msg timestamp="20201030 18:27:59.654" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.636" endtime="20201030 18:27:59.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.656" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.655" endtime="20201030 18:27:59.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.657" endtime="20201030 18:27:59.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.634" endtime="20201030 18:27:59.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.632" endtime="20201030 18:27:59.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.666" endtime="20201030 18:27:59.950"></status>
</kw>
<msg timestamp="20201030 18:27:59.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018035583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018037264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.665" endtime="20201030 18:27:59.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018035583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018037264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.954" endtime="20201030 18:27:59.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.963" endtime="20201030 18:27:59.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.662" endtime="20201030 18:27:59.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.660" endtime="20201030 18:27:59.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.969" level="INFO">${RESULT} = [{'diff': 1.6809999999999048e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.76400000000132e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7229999999986145e-06}, {'diff': 1.7359999999987108e-06...</msg>
<status status="PASS" starttime="20201030 18:27:59.966" endtime="20201030 18:27:59.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:59.974" level="INFO">${OVERHEAD} = {'diff': [1.6809999999999048e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:59.970" endtime="20201030 18:27:59.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.978" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:59.977" endtime="20201030 18:27:59.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.981" level="INFO">VALUE: [1.6809999999999048e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7089999999990446e-06, 1.7359999999987108e-06, 1.6950000000029442e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.723000000002084e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7920000000004599e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201030 18:27:59.979" endtime="20201030 18:27:59.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.975" endtime="20201030 18:27:59.982"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.986" endtime="20201030 18:28:00.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.984" endtime="20201030 18:28:00.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.983" endtime="20201030 18:28:00.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.631" endtime="20201030 18:28:00.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.631" endtime="20201030 18:28:00.006"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.014" endtime="20201030 18:28:00.031"></status>
</kw>
<msg timestamp="20201030 18:28:00.032" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.013" endtime="20201030 18:28:00.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.035" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.033" endtime="20201030 18:28:00.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.036" endtime="20201030 18:28:00.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.010" endtime="20201030 18:28:00.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.008" endtime="20201030 18:28:00.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.051" endtime="20201030 18:28:00.348"></status>
</kw>
<msg timestamp="20201030 18:28:00.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018076722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018078528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.049" endtime="20201030 18:28:00.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018076722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018078528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.358" endtime="20201030 18:28:00.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.377" endtime="20201030 18:28:00.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.044" endtime="20201030 18:28:00.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.041" endtime="20201030 18:28:00.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.394" level="INFO">${RESULT} = [{'diff': 1.8060000000000298e-06}, {'diff': 1.7229999999986145e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7370000000016539e-06}, {'diff': 1.7089999999990446e-...</msg>
<status status="PASS" starttime="20201030 18:28:00.386" endtime="20201030 18:28:00.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:00.402" level="INFO">${OVERHEAD} = {'diff': [1.8060000000000298e-06, 1.7229999999986145e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7089999999990446e-06, 1.7359999999987108e-06, 1.7360000000021802e-06...</msg>
<status status="PASS" starttime="20201030 18:28:00.396" endtime="20201030 18:28:00.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.406" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:00.405" endtime="20201030 18:28:00.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.409" level="INFO">VALUE: [1.8060000000000298e-06, 1.7229999999986145e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7089999999990446e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7770000000014163e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.762999999998377e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.7369999999981844e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.6670000000003349e-06, 1.7219999999991409e-06, 1.7779999999974205e-06, 1.7500000000017502e-06, 1.723000000002084e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7779999999974205e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201030 18:28:00.407" endtime="20201030 18:28:00.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.403" endtime="20201030 18:28:00.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.414" endtime="20201030 18:28:00.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.412" endtime="20201030 18:28:00.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.411" endtime="20201030 18:28:00.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.007" endtime="20201030 18:28:00.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.007" endtime="20201030 18:28:00.435"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.443" endtime="20201030 18:28:00.459"></status>
</kw>
<msg timestamp="20201030 18:28:00.459" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.441" endtime="20201030 18:28:00.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.462" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.460" endtime="20201030 18:28:00.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.463" endtime="20201030 18:28:00.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.438" endtime="20201030 18:28:00.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.437" endtime="20201030 18:28:00.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.473" endtime="20201030 18:28:00.763"></status>
</kw>
<msg timestamp="20201030 18:28:00.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018591389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018593125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.472" endtime="20201030 18:28:00.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018591389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018593125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.767" endtime="20201030 18:28:00.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.775" endtime="20201030 18:28:00.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.469" endtime="20201030 18:28:00.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.467" endtime="20201030 18:28:00.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.782" level="INFO">${RESULT} = [{'diff': 1.7359999999987108e-06}, {'diff': 1.7909999999975168e-06}, {'diff': 1.6809999999999048e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7500000000017502e-...</msg>
<status status="PASS" starttime="20201030 18:28:00.779" endtime="20201030 18:28:00.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:00.786" level="INFO">${OVERHEAD} = {'diff': [1.7359999999987108e-06, 1.7909999999975168e-06, 1.6809999999999048e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06...</msg>
<status status="PASS" starttime="20201030 18:28:00.783" endtime="20201030 18:28:00.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.791" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:00.790" endtime="20201030 18:28:00.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.793" level="INFO">VALUE: [1.7359999999987108e-06, 1.7909999999975168e-06, 1.6809999999999048e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7369999999981844e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7919999999969904e-06, 1.7499999999982807e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.7770000000014163e-06, 1.7369999999981844e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7630000000018464e-06, 1.7370000000016539e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.723000000002084e-06]</msg>
<status status="PASS" starttime="20201030 18:28:00.792" endtime="20201030 18:28:00.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.787" endtime="20201030 18:28:00.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.799" endtime="20201030 18:28:00.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.798" endtime="20201030 18:28:00.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.797" endtime="20201030 18:28:00.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.435" endtime="20201030 18:28:00.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.435" endtime="20201030 18:28:00.820"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.828" endtime="20201030 18:28:00.844"></status>
</kw>
<msg timestamp="20201030 18:28:00.844" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.827" endtime="20201030 18:28:00.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.847" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.846" endtime="20201030 18:28:00.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.848" endtime="20201030 18:28:00.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.824" endtime="20201030 18:28:00.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.822" endtime="20201030 18:28:00.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.857" endtime="20201030 18:28:01.144"></status>
</kw>
<msg timestamp="20201030 18:28:01.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018408125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018409792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.856" endtime="20201030 18:28:01.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018408125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018409792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.150" endtime="20201030 18:28:01.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.162" endtime="20201030 18:28:01.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.853" endtime="20201030 18:28:01.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.851" endtime="20201030 18:28:01.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.171" level="INFO">${RESULT} = [{'diff': 1.6670000000003349e-06}, {'diff': 1.723000000002084e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7229999999986145e-0...</msg>
<status status="PASS" starttime="20201030 18:28:01.167" endtime="20201030 18:28:01.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:01.176" level="INFO">${OVERHEAD} = {'diff': [1.6670000000003349e-06, 1.723000000002084e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.7219999999991409e-06, 1.76400000000132e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:28:01.172" endtime="20201030 18:28:01.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.181" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:01.180" endtime="20201030 18:28:01.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.183" level="INFO">VALUE: [1.6670000000003349e-06, 1.723000000002084e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.7219999999991409e-06, 1.76400000000132e-06, 1.723000000002084e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7910000000009862e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7499999999982807e-06, 1.6670000000003349e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.6809999999999048e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.694000000000001e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7779999999974205e-06]</msg>
<status status="PASS" starttime="20201030 18:28:01.182" endtime="20201030 18:28:01.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.177" endtime="20201030 18:28:01.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.189" endtime="20201030 18:28:01.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.187" endtime="20201030 18:28:01.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.186" endtime="20201030 18:28:01.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.821" endtime="20201030 18:28:01.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.821" endtime="20201030 18:28:01.210"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.218" endtime="20201030 18:28:01.233"></status>
</kw>
<msg timestamp="20201030 18:28:01.234" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.216" endtime="20201030 18:28:01.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.236" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.235" endtime="20201030 18:28:01.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.237" endtime="20201030 18:28:01.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.214" endtime="20201030 18:28:01.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.212" endtime="20201030 18:28:01.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.247" endtime="20201030 18:28:01.536"></status>
</kw>
<msg timestamp="20201030 18:28:01.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018536708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018538431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.245" endtime="20201030 18:28:01.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018536708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018538431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.540" endtime="20201030 18:28:01.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.549" endtime="20201030 18:28:01.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.242" endtime="20201030 18:28:01.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.241" endtime="20201030 18:28:01.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.557" level="INFO">${RESULT} = [{'diff': 1.723000000002084e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7499999999982807e-06}, {'diff': 1.6949999999994747e-0...</msg>
<status status="PASS" starttime="20201030 18:28:01.553" endtime="20201030 18:28:01.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:01.561" level="INFO">${OVERHEAD} = {'diff': [1.723000000002084e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.7359999999987108e-06, 1.7360000000021802e-06,...</msg>
<status status="PASS" starttime="20201030 18:28:01.558" endtime="20201030 18:28:01.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.565" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:01.564" endtime="20201030 18:28:01.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.568" level="INFO">VALUE: [1.723000000002084e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7919999999969904e-06, 1.6809999999999048e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7779999999974205e-06, 1.7360000000021802e-06, 1.7229999999986145e-06, 1.7359999999987108e-06, 1.7779999999974205e-06, 1.7219999999991409e-06, 1.7779999999974205e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7220000000026103e-06, 1.7779999999974205e-06, 1.7360000000021802e-06, 1.7369999999981844e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7639999999978506e-06, 1.7219999999991409e-06, 1.7369999999981844e-06]</msg>
<status status="PASS" starttime="20201030 18:28:01.566" endtime="20201030 18:28:01.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.562" endtime="20201030 18:28:01.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.573" endtime="20201030 18:28:01.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.572" endtime="20201030 18:28:01.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.570" endtime="20201030 18:28:01.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.210" endtime="20201030 18:28:01.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.210" endtime="20201030 18:28:01.594"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.602" endtime="20201030 18:28:01.617"></status>
</kw>
<msg timestamp="20201030 18:28:01.617" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.601" endtime="20201030 18:28:01.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.620" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.619" endtime="20201030 18:28:01.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.621" endtime="20201030 18:28:01.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.598" endtime="20201030 18:28:01.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.596" endtime="20201030 18:28:01.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.631" endtime="20201030 18:28:01.921"></status>
</kw>
<msg timestamp="20201030 18:28:01.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018588889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018590569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.630" endtime="20201030 18:28:01.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018588889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018590569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.925" endtime="20201030 18:28:01.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.934" endtime="20201030 18:28:01.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.627" endtime="20201030 18:28:01.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.625" endtime="20201030 18:28:01.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.941" level="INFO">${RESULT} = [{'diff': 1.6800000000004311e-06}, {'diff': 1.76400000000132e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7369999999981844e-06}, {'diff': 1.7359999999987108e-06...</msg>
<status status="PASS" starttime="20201030 18:28:01.937" endtime="20201030 18:28:01.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:01.945" level="INFO">${OVERHEAD} = {'diff': [1.6800000000004311e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:28:01.942" endtime="20201030 18:28:01.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.950" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:01.948" endtime="20201030 18:28:01.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.952" level="INFO">VALUE: [1.6800000000004311e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.694000000000001e-06, 1.7229999999986145e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.6660000000008612e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7769999999979469e-06, 1.7219999999991409e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.6660000000008612e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201030 18:28:01.951" endtime="20201030 18:28:01.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.946" endtime="20201030 18:28:01.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.960" endtime="20201030 18:28:01.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.959" endtime="20201030 18:28:01.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.957" endtime="20201030 18:28:01.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.595" endtime="20201030 18:28:01.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.594" endtime="20201030 18:28:01.981"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.989" endtime="20201030 18:28:02.005"></status>
</kw>
<msg timestamp="20201030 18:28:02.005" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.987" endtime="20201030 18:28:02.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.008" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.006" endtime="20201030 18:28:02.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.009" endtime="20201030 18:28:02.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.985" endtime="20201030 18:28:02.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.983" endtime="20201030 18:28:02.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.018" endtime="20201030 18:28:02.301"></status>
</kw>
<msg timestamp="20201030 18:28:02.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0183085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018310236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:02.017" endtime="20201030 18:28:02.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0183085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018310236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:02.306" endtime="20201030 18:28:02.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.314" endtime="20201030 18:28:02.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.014" endtime="20201030 18:28:02.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.012" endtime="20201030 18:28:02.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.321" level="INFO">${RESULT} = [{'diff': 1.7360000000021802e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7779999999974205e-06}, {'diff': 1.7370000000016539e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7499999999982807e-...</msg>
<status status="PASS" starttime="20201030 18:28:02.318" endtime="20201030 18:28:02.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:02.326" level="INFO">${OVERHEAD} = {'diff': [1.7360000000021802e-06, 1.7359999999987108e-06, 1.7779999999974205e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7229999999986145e-06...</msg>
<status status="PASS" starttime="20201030 18:28:02.322" endtime="20201030 18:28:02.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.331" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:02.329" endtime="20201030 18:28:02.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.333" level="INFO">VALUE: [1.7360000000021802e-06, 1.7359999999987108e-06, 1.7779999999974205e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7229999999986145e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7770000000014163e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201030 18:28:02.332" endtime="20201030 18:28:02.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.327" endtime="20201030 18:28:02.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.338" endtime="20201030 18:28:02.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.337" endtime="20201030 18:28:02.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.335" endtime="20201030 18:28:02.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.982" endtime="20201030 18:28:02.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.981" endtime="20201030 18:28:02.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.585" endtime="20201030 18:28:02.359"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.363" endtime="20201030 18:28:02.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.362" endtime="20201030 18:28:02.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.360" endtime="20201030 18:28:02.384"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:54.511" endtime="20201030 18:28:02.384" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.391" endtime="20201030 18:28:02.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.389" endtime="20201030 18:28:02.411"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.424" endtime="20201030 18:28:02.444"></status>
</kw>
<msg timestamp="20201030 18:28:02.445" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.423" endtime="20201030 18:28:02.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.446" endtime="20201030 18:28:02.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.450" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:02.448" endtime="20201030 18:28:02.451"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:02.420" endtime="20201030 18:28:02.451"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:02.418" endtime="20201030 18:28:02.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.416" endtime="20201030 18:28:02.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:02.458" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:02.457" endtime="20201030 18:28:02.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.453" endtime="20201030 18:28:02.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.415" endtime="20201030 18:28:02.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.415" endtime="20201030 18:28:02.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.460" endtime="20201030 18:28:02.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.413" endtime="20201030 18:28:02.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.412" endtime="20201030 18:28:02.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.388" endtime="20201030 18:28:02.463"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.475" endtime="20201030 18:28:02.496"></status>
</kw>
<msg timestamp="20201030 18:28:02.497" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.473" endtime="20201030 18:28:02.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.502" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.499" endtime="20201030 18:28:02.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.504" endtime="20201030 18:28:02.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.470" endtime="20201030 18:28:02.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.466" endtime="20201030 18:28:02.507"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.509" endtime="20201030 18:28:02.511"></status>
</kw>
<msg timestamp="20201030 18:28:02.511" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:28:02.508" endtime="20201030 18:28:02.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.515" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:28:02.514" endtime="20201030 18:28:02.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.517" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:28:02.516" endtime="20201030 18:28:02.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.512" endtime="20201030 18:28:02.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.522" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:28:02.521" endtime="20201030 18:28:02.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.524" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:28:02.523" endtime="20201030 18:28:02.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.519" endtime="20201030 18:28:02.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.531" endtime="20201030 18:28:02.823"></status>
</kw>
<msg timestamp="20201030 18:28:02.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074019958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074058458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.530" endtime="20201030 18:28:02.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074019958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074058458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.828" endtime="20201030 18:28:02.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.836" endtime="20201030 18:28:02.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.527" endtime="20201030 18:28:02.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.525" endtime="20201030 18:28:02.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.843" level="INFO">${RESULT} = [{'diff': 3.849999999999687e-05}, {'diff': 8.041000000000298e-06}, {'diff': 8.041999999999772e-06}, {'diff': 8.055999999992403e-06}, {'diff': 8.05600000000628e-06}, {'diff': 8.055999999992403e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:02.839" endtime="20201030 18:28:02.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:02.847" level="INFO">${OVERHEAD} = {'diff': [3.849999999999687e-05, 8.041000000000298e-06, 8.041999999999772e-06, 8.055999999992403e-06, 8.05600000000628e-06, 8.055999999992403e-06, 8.068999999999438e-06, 8.026999999993789e-06, 8.05500...</msg>
<status status="PASS" starttime="20201030 18:28:02.844" endtime="20201030 18:28:02.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.851" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:28:02.850" endtime="20201030 18:28:02.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.854" level="INFO">VALUE: [3.849999999999687e-05, 8.041000000000298e-06, 8.041999999999772e-06, 8.055999999992403e-06, 8.05600000000628e-06, 8.055999999992403e-06, 8.068999999999438e-06, 8.026999999993789e-06, 8.055000000006807e-06, 8.041000000000298e-06, 8.05600000000628e-06, 8.05600000000628e-06, 8.02800000000714e-06, 8.041000000000298e-06, 7.999999999994123e-06, 7.986000000001492e-06, 8.041999999999772e-06, 8.041000000000298e-06, 8.05600000000628e-06, 8.055999999992403e-06, 8.07000000001279e-06, 8.055000000006807e-06, 8.041999999999772e-06, 8.055000000006807e-06, 8.02800000000714e-06, 8.02800000000714e-06, 8.041000000000298e-06, 8.054999999992929e-06, 8.054999999992929e-06, 8.041000000000298e-06, 8.000000000008e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.055999999992403e-06, 8.02800000000714e-06, 8.083000000005947e-06, 8.026999999993789e-06, 8.041999999999772e-06, 8.055000000006807e-06, 8.055999999992403e-06, 8.055999999992403e-06, 8.05600000000628e-06, 8.054999999992929e-06, 8.041999999999772e-06, 8.054999999992929e-06, 8.041999999999772e-06, 8.055999999992403e-06, 8.055999999992403e-06, 8.082999999992069e-06, 8.014000000000632e-06]</msg>
<status status="PASS" starttime="20201030 18:28:02.852" endtime="20201030 18:28:02.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.847" endtime="20201030 18:28:02.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.859" endtime="20201030 18:28:02.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.857" endtime="20201030 18:28:02.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.856" endtime="20201030 18:28:02.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.464" endtime="20201030 18:28:02.879"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:02.385" endtime="20201030 18:28:02.880" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.887" endtime="20201030 18:28:02.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.885" endtime="20201030 18:28:02.907"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.921" endtime="20201030 18:28:02.939"></status>
</kw>
<msg timestamp="20201030 18:28:02.939" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.919" endtime="20201030 18:28:02.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.942" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.940" endtime="20201030 18:28:02.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.945" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:02.943" endtime="20201030 18:28:02.945"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:02.917" endtime="20201030 18:28:02.946"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:02.914" endtime="20201030 18:28:02.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.913" endtime="20201030 18:28:02.947"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:02.950" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:02.950" endtime="20201030 18:28:02.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.947" endtime="20201030 18:28:02.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.912" endtime="20201030 18:28:02.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.912" endtime="20201030 18:28:02.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.952" endtime="20201030 18:28:02.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.909" endtime="20201030 18:28:02.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.907" endtime="20201030 18:28:02.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.884" endtime="20201030 18:28:02.955"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.964" endtime="20201030 18:28:03.032"></status>
</kw>
<msg timestamp="20201030 18:28:03.032" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.962" endtime="20201030 18:28:03.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.035" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.033" endtime="20201030 18:28:03.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.036" endtime="20201030 18:28:03.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.959" endtime="20201030 18:28:03.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.957" endtime="20201030 18:28:03.039"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.041" endtime="20201030 18:28:03.042"></status>
</kw>
<msg timestamp="20201030 18:28:03.043" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:28:03.039" endtime="20201030 18:28:03.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.048" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:28:03.046" endtime="20201030 18:28:03.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.050" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:28:03.049" endtime="20201030 18:28:03.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.044" endtime="20201030 18:28:03.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.055" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:28:03.054" endtime="20201030 18:28:03.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.057" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:28:03.056" endtime="20201030 18:28:03.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.052" endtime="20201030 18:28:03.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.064" endtime="20201030 18:28:03.355"></status>
</kw>
<msg timestamp="20201030 18:28:03.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068106569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068140653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.063" endtime="20201030 18:28:03.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068106569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068140653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.359" endtime="20201030 18:28:03.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.367" endtime="20201030 18:28:03.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.060" endtime="20201030 18:28:03.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.058" endtime="20201030 18:28:03.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.374" level="INFO">${RESULT} = [{'diff': 3.408399999998979e-05}, {'diff': 3.413900000000247e-05}, {'diff': 3.418100000000812e-05}, {'diff': 3.423600000000693e-05}, {'diff': 3.4180999999994244e-05}, {'diff': 3.419500000000075e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:03.370" endtime="20201030 18:28:03.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:03.378" level="INFO">${OVERHEAD} = {'diff': [3.408399999998979e-05, 3.413900000000247e-05, 3.418100000000812e-05, 3.423600000000693e-05, 3.4180999999994244e-05, 3.419500000000075e-05, 3.416700000000161e-05, 3.419400000000128e-05, 3.411...</msg>
<status status="PASS" starttime="20201030 18:28:03.375" endtime="20201030 18:28:03.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.384" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:28:03.382" endtime="20201030 18:28:03.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.386" level="INFO">VALUE: [3.408399999998979e-05, 3.413900000000247e-05, 3.418100000000812e-05, 3.423600000000693e-05, 3.4180999999994244e-05, 3.419500000000075e-05, 3.416700000000161e-05, 3.419400000000128e-05, 3.4110999999989455e-05, 3.417999999999477e-05, 3.419400000000128e-05, 3.4180999999994244e-05, 3.417999999999477e-05, 3.417999999999477e-05, 3.416600000000214e-05, 3.4138999999988595e-05, 3.418100000000812e-05, 3.416600000000214e-05, 3.4152999999995104e-05, 3.418000000000865e-05, 3.418100000000812e-05, 3.419400000000128e-05, 3.424999999999956e-05, 3.41939999999874e-05, 3.4180999999994244e-05, 3.418000000000865e-05, 3.416600000000214e-05, 3.416700000000161e-05, 3.415200000000951e-05, 3.419500000000075e-05, 3.418100000000812e-05, 3.422200000000042e-05, 3.416600000000214e-05, 3.415300000000898e-05, 3.417999999999477e-05, 3.420799999999391e-05, 3.418100000000812e-05, 3.416700000000161e-05, 3.419500000000075e-05, 3.413900000000247e-05, 3.424999999999956e-05, 3.422299999999989e-05, 3.4180999999994244e-05, 3.417999999999477e-05, 3.416700000000161e-05, 3.416600000000214e-05, 3.417999999999477e-05, 3.4152999999995104e-05, 3.416700000000161e-05, 3.417999999999477e-05]</msg>
<status status="PASS" starttime="20201030 18:28:03.385" endtime="20201030 18:28:03.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.379" endtime="20201030 18:28:03.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.391" endtime="20201030 18:28:03.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.389" endtime="20201030 18:28:03.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.388" endtime="20201030 18:28:03.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.955" endtime="20201030 18:28:03.412"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:02.881" endtime="20201030 18:28:03.413" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.422" endtime="20201030 18:28:03.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.420" endtime="20201030 18:28:03.443"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.456" endtime="20201030 18:28:03.473"></status>
</kw>
<msg timestamp="20201030 18:28:03.474" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.454" endtime="20201030 18:28:03.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.476" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.475" endtime="20201030 18:28:03.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.480" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:03.478" endtime="20201030 18:28:03.480"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:03.452" endtime="20201030 18:28:03.481"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:03.449" endtime="20201030 18:28:03.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.448" endtime="20201030 18:28:03.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:03.485" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:03.484" endtime="20201030 18:28:03.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.482" endtime="20201030 18:28:03.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.447" endtime="20201030 18:28:03.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.447" endtime="20201030 18:28:03.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.487" endtime="20201030 18:28:03.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.445" endtime="20201030 18:28:03.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.443" endtime="20201030 18:28:03.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.418" endtime="20201030 18:28:03.490"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.500" endtime="20201030 18:28:03.697"></status>
</kw>
<msg timestamp="20201030 18:28:03.697" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.498" endtime="20201030 18:28:03.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.700" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.698" endtime="20201030 18:28:03.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.702" endtime="20201030 18:28:03.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.494" endtime="20201030 18:28:03.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.492" endtime="20201030 18:28:03.705"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.707" endtime="20201030 18:28:03.709"></status>
</kw>
<msg timestamp="20201030 18:28:03.710" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:28:03.706" endtime="20201030 18:28:03.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.715" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:28:03.714" endtime="20201030 18:28:03.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.718" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:28:03.717" endtime="20201030 18:28:03.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.711" endtime="20201030 18:28:03.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.723" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:28:03.722" endtime="20201030 18:28:03.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.726" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:28:03.725" endtime="20201030 18:28:03.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.719" endtime="20201030 18:28:03.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.734" endtime="20201030 18:28:04.043"></status>
</kw>
<msg timestamp="20201030 18:28:04.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070485417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070550125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.733" endtime="20201030 18:28:04.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070485417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070550125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.050" endtime="20201030 18:28:04.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.060" endtime="20201030 18:28:04.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.730" endtime="20201030 18:28:04.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.728" endtime="20201030 18:28:04.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.067" level="INFO">${RESULT} = [{'diff': 6.470800000001053e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.434700000000626e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.434699999999238e-05}, {'diff': 6.434700000000626e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:04.064" endtime="20201030 18:28:04.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:04.072" level="INFO">${OVERHEAD} = {'diff': [6.470800000001053e-05, 6.436099999999889e-05, 6.434700000000626e-05, 6.436099999999889e-05, 6.434699999999238e-05, 6.434700000000626e-05, 6.430600000000009e-05, 6.433299999999975e-05, 6.4388...</msg>
<status status="PASS" starttime="20201030 18:28:04.068" endtime="20201030 18:28:04.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.077" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:28:04.076" endtime="20201030 18:28:04.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.081" level="INFO">VALUE: [6.470800000001053e-05, 6.436099999999889e-05, 6.434700000000626e-05, 6.436099999999889e-05, 6.434699999999238e-05, 6.434700000000626e-05, 6.430600000000009e-05, 6.433299999999975e-05, 6.438899999999803e-05, 6.434699999999238e-05, 6.434700000000626e-05, 6.431899999999324e-05, 6.433299999999975e-05, 6.42909999999941e-05, 6.430500000000061e-05, 6.434700000000626e-05, 6.434699999999238e-05, 6.440299999999066e-05, 6.434699999999238e-05, 6.43750000000054e-05, 6.434800000001961e-05, 6.430600000001396e-05, 6.434699999999238e-05, 6.43750000000054e-05, 6.43750000000054e-05, 6.440299999999066e-05, 6.43750000000054e-05, 6.43750000000054e-05, 6.436199999998449e-05, 6.433299999999975e-05, 6.436100000001277e-05, 6.438800000002631e-05, 6.434799999999186e-05, 6.431900000000712e-05, 6.43750000000054e-05, 6.43750000000054e-05, 6.434700000002014e-05, 6.440299999999066e-05, 6.443100000000368e-05, 6.436099999998501e-05, 6.440299999999066e-05, 6.433299999999975e-05, 6.436099999998501e-05, 6.434699999999238e-05, 6.436100000001277e-05, 6.433399999999923e-05, 6.43750000000054e-05, 6.434700000002014e-05, 6.440299999999066e-05, 6.43750000000054e-05]</msg>
<status status="PASS" starttime="20201030 18:28:04.079" endtime="20201030 18:28:04.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.073" endtime="20201030 18:28:04.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.086" endtime="20201030 18:28:04.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.084" endtime="20201030 18:28:04.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.083" endtime="20201030 18:28:04.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.490" endtime="20201030 18:28:04.106"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:03.415" endtime="20201030 18:28:04.107" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.114" endtime="20201030 18:28:04.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.112" endtime="20201030 18:28:04.134"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.147" endtime="20201030 18:28:04.166"></status>
</kw>
<msg timestamp="20201030 18:28:04.166" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.145" endtime="20201030 18:28:04.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.169" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.167" endtime="20201030 18:28:04.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.172" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:04.170" endtime="20201030 18:28:04.172"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:04.142" endtime="20201030 18:28:04.173"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:04.140" endtime="20201030 18:28:04.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.139" endtime="20201030 18:28:04.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:04.177" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:04.177" endtime="20201030 18:28:04.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.174" endtime="20201030 18:28:04.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.138" endtime="20201030 18:28:04.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.137" endtime="20201030 18:28:04.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.179" endtime="20201030 18:28:04.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.136" endtime="20201030 18:28:04.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.134" endtime="20201030 18:28:04.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.111" endtime="20201030 18:28:04.182"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.191" endtime="20201030 18:28:04.213"></status>
</kw>
<msg timestamp="20201030 18:28:04.213" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.189" endtime="20201030 18:28:04.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.216" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.215" endtime="20201030 18:28:04.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.217" endtime="20201030 18:28:04.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.186" endtime="20201030 18:28:04.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.184" endtime="20201030 18:28:04.221"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.223" endtime="20201030 18:28:04.225"></status>
</kw>
<msg timestamp="20201030 18:28:04.225" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:28:04.222" endtime="20201030 18:28:04.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.230" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:28:04.228" endtime="20201030 18:28:04.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.232" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:28:04.231" endtime="20201030 18:28:04.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.226" endtime="20201030 18:28:04.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.237" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:28:04.236" endtime="20201030 18:28:04.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.239" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:28:04.238" endtime="20201030 18:28:04.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.233" endtime="20201030 18:28:04.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.247" endtime="20201030 18:28:04.533"></status>
</kw>
<msg timestamp="20201030 18:28:04.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0671045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067106042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:04.245" endtime="20201030 18:28:04.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0671045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067106042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:04.538" endtime="20201030 18:28:04.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.547" endtime="20201030 18:28:04.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.242" endtime="20201030 18:28:04.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.241" endtime="20201030 18:28:04.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.554" level="INFO">${RESULT} = [{'diff': 1.5420000000071488e-06}, {'diff': 1.5410000000076751e-06}, {'diff': 1.5420000000071488e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.4860000000088691e-06}, {'diff': 1.52800000000064e-06...</msg>
<status status="PASS" starttime="20201030 18:28:04.550" endtime="20201030 18:28:04.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:04.558" level="INFO">${OVERHEAD} = {'diff': [1.5420000000071488e-06, 1.5410000000076751e-06, 1.5420000000071488e-06, 1.5270000000011663e-06, 1.4860000000088691e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:28:04.555" endtime="20201030 18:28:04.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.563" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:28:04.562" endtime="20201030 18:28:04.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.566" level="INFO">VALUE: [1.5420000000071488e-06, 1.5410000000076751e-06, 1.5420000000071488e-06, 1.5270000000011663e-06, 1.4860000000088691e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.4720000000023603e-06, 1.5000000000015001e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5139999999941312e-06, 1.5420000000071488e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.5410000000076751e-06, 1.4860000000088691e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5409999999937973e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.4999999999876223e-06, 1.5410000000076751e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5409999999937973e-06, 1.5279999999867622e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.5270000000011663e-06, 1.5550000000003061e-06, 1.4860000000088691e-06]</msg>
<status status="PASS" starttime="20201030 18:28:04.564" endtime="20201030 18:28:04.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.559" endtime="20201030 18:28:04.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.570" endtime="20201030 18:28:04.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.569" endtime="20201030 18:28:04.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.568" endtime="20201030 18:28:04.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.183" endtime="20201030 18:28:04.591"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:04.109" endtime="20201030 18:28:04.592" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.050" endtime="20201030 18:28:05.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.045" endtime="20201030 18:28:05.074"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.106" endtime="20201030 18:28:05.129"></status>
</kw>
<msg timestamp="20201030 18:28:05.131" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.102" endtime="20201030 18:28:05.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.136" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.133" endtime="20201030 18:28:05.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.143" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:05.138" endtime="20201030 18:28:05.143"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:05.096" endtime="20201030 18:28:05.145"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:05.091" endtime="20201030 18:28:05.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.088" endtime="20201030 18:28:05.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:05.151" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:05.151" endtime="20201030 18:28:05.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.148" endtime="20201030 18:28:05.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.086" endtime="20201030 18:28:05.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.085" endtime="20201030 18:28:05.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.153" endtime="20201030 18:28:05.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.080" endtime="20201030 18:28:05.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.076" endtime="20201030 18:28:05.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.041" endtime="20201030 18:28:05.156"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.165" endtime="20201030 18:28:05.235"></status>
</kw>
<msg timestamp="20201030 18:28:05.236" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.163" endtime="20201030 18:28:05.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.238" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.237" endtime="20201030 18:28:05.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.239" endtime="20201030 18:28:05.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.161" endtime="20201030 18:28:05.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.159" endtime="20201030 18:28:05.242"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.244" endtime="20201030 18:28:05.246"></status>
</kw>
<msg timestamp="20201030 18:28:05.246" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:28:05.243" endtime="20201030 18:28:05.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.255" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:28:05.250" endtime="20201030 18:28:05.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.257" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:28:05.256" endtime="20201030 18:28:05.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.247" endtime="20201030 18:28:05.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.262" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:28:05.261" endtime="20201030 18:28:05.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.264" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:28:05.263" endtime="20201030 18:28:05.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.259" endtime="20201030 18:28:05.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.272" endtime="20201030 18:28:05.566"></status>
</kw>
<msg timestamp="20201030 18:28:05.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.104990292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.104999181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.270" endtime="20201030 18:28:05.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.104990292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.104999181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.570" endtime="20201030 18:28:05.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.579" endtime="20201030 18:28:05.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.267" endtime="20201030 18:28:05.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.266" endtime="20201030 18:28:05.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.586" level="INFO">${RESULT} = [{'diff': 8.888999999998037e-06}, {'diff': 8.874999999991529e-06}, {'diff': 8.888999999998037e-06}, {'diff': 8.888999999998037e-06}, {'diff': 8.887999999998564e-06}, {'diff': 8.874999999991529e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:05.582" endtime="20201030 18:28:05.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:05.590" level="INFO">${OVERHEAD} = {'diff': [8.888999999998037e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.887999999998564e-06, 8.874999999991529e-06, 8.903000000004546e-06, 8.875000000005406e-06, 8.8749...</msg>
<status status="PASS" starttime="20201030 18:28:05.587" endtime="20201030 18:28:05.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.596" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:28:05.595" endtime="20201030 18:28:05.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.599" level="INFO">VALUE: [8.888999999998037e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.887999999998564e-06, 8.874999999991529e-06, 8.903000000004546e-06, 8.875000000005406e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.889000000011915e-06, 8.889000000011915e-06, 8.889000000011915e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.819999999992723e-06, 8.889000000011915e-06, 8.888999999998037e-06, 8.915999999997704e-06, 8.833999999999231e-06, 8.874999999991529e-06, 8.889000000011915e-06, 8.819000000021004e-06, 8.902000000005073e-06, 8.874999999991529e-06, 8.889000000011915e-06, 8.860999999998898e-06, 8.902000000005073e-06, 8.889000000011915e-06, 8.903000000004546e-06, 8.88899999998416e-06, 8.874999999991529e-06, 8.889000000011915e-06, 8.874999999991529e-06, 8.903000000004546e-06, 8.88899999998416e-06, 8.889000000011915e-06, 8.903000000004546e-06, 8.903000000004546e-06, 8.889000000011915e-06, 8.819000000021004e-06, 8.889000000011915e-06, 8.861999999998371e-06, 8.874999999991529e-06, 8.90299999997679e-06, 8.887999999984686e-06, 8.887999999984686e-06, 8.875000000019284e-06, 8.84800000000574e-06, 8.874999999991529e-06]</msg>
<status status="PASS" starttime="20201030 18:28:05.597" endtime="20201030 18:28:05.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.591" endtime="20201030 18:28:05.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.603" endtime="20201030 18:28:05.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.602" endtime="20201030 18:28:05.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.601" endtime="20201030 18:28:05.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.157" endtime="20201030 18:28:05.624"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:05.031" endtime="20201030 18:28:05.624" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.632" endtime="20201030 18:28:05.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.630" endtime="20201030 18:28:05.653"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.675" endtime="20201030 18:28:05.694"></status>
</kw>
<msg timestamp="20201030 18:28:05.694" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.674" endtime="20201030 18:28:05.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.697" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.695" endtime="20201030 18:28:05.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.700" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:05.698" endtime="20201030 18:28:05.701"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:05.671" endtime="20201030 18:28:05.701"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:05.667" endtime="20201030 18:28:05.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.662" endtime="20201030 18:28:05.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:05.706" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:05.705" endtime="20201030 18:28:05.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.703" endtime="20201030 18:28:05.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.661" endtime="20201030 18:28:05.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.659" endtime="20201030 18:28:05.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.708" endtime="20201030 18:28:05.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.657" endtime="20201030 18:28:05.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.653" endtime="20201030 18:28:05.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.629" endtime="20201030 18:28:05.711"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.721" endtime="20201030 18:28:05.926"></status>
</kw>
<msg timestamp="20201030 18:28:05.927" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.720" endtime="20201030 18:28:05.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.936" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.930" endtime="20201030 18:28:05.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.940" endtime="20201030 18:28:05.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.716" endtime="20201030 18:28:05.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.714" endtime="20201030 18:28:05.949"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.956" endtime="20201030 18:28:05.962"></status>
</kw>
<msg timestamp="20201030 18:28:05.963" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:28:05.951" endtime="20201030 18:28:05.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.974" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:28:05.971" endtime="20201030 18:28:05.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.978" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:28:05.976" endtime="20201030 18:28:05.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.966" endtime="20201030 18:28:05.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.984" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:28:05.983" endtime="20201030 18:28:05.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.987" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:28:05.986" endtime="20201030 18:28:05.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.981" endtime="20201030 18:28:05.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.994" endtime="20201030 18:28:06.288"></status>
</kw>
<msg timestamp="20201030 18:28:06.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.083442667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.083459014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.993" endtime="20201030 18:28:06.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.083442667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.083459014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.293" endtime="20201030 18:28:06.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.302" endtime="20201030 18:28:06.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.990" endtime="20201030 18:28:06.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.988" endtime="20201030 18:28:06.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.311" level="INFO">${RESULT} = [{'diff': 1.634699999999989e-05}, {'diff': 1.6389000000005538e-05}, {'diff': 1.6361000000006398e-05}, {'diff': 1.640299999999817e-05}, {'diff': 1.6415999999991326e-05}, {'diff': 1.638899999999166e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:06.307" endtime="20201030 18:28:06.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:06.317" level="INFO">${OVERHEAD} = {'diff': [1.634699999999989e-05, 1.6389000000005538e-05, 1.6361000000006398e-05, 1.640299999999817e-05, 1.6415999999991326e-05, 1.638899999999166e-05, 1.633300000000726e-05, 1.6375000000012907e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:28:06.312" endtime="20201030 18:28:06.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.322" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:28:06.321" endtime="20201030 18:28:06.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.325" level="INFO">VALUE: [1.634699999999989e-05, 1.6389000000005538e-05, 1.6361000000006398e-05, 1.640299999999817e-05, 1.6415999999991326e-05, 1.638899999999166e-05, 1.633300000000726e-05, 1.6375000000012907e-05, 1.638899999999166e-05, 1.6389000000005538e-05, 1.6375000000012907e-05, 1.638899999999166e-05, 1.637499999998515e-05, 1.634699999999989e-05, 1.6389000000005538e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.6388999999977782e-05, 1.640299999999817e-05, 1.6389000000005538e-05, 1.6416000000019082e-05, 1.6375000000012907e-05, 1.640299999999817e-05, 1.637499999998515e-05, 1.6388000000006064e-05, 1.6389000000005538e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.634699999999989e-05, 1.637499999998515e-05, 1.6319000000014627e-05, 1.6361000000020276e-05, 1.637499999998515e-05, 1.6389000000005538e-05, 1.6375000000012907e-05, 1.6388999999977782e-05, 1.6389000000005538e-05, 1.640299999999817e-05, 1.636099999999252e-05, 1.640299999999817e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.6431000000038942e-05, 1.6389000000005538e-05, 1.640299999999817e-05]</msg>
<status status="PASS" starttime="20201030 18:28:06.323" endtime="20201030 18:28:06.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.318" endtime="20201030 18:28:06.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.330" endtime="20201030 18:28:06.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.328" endtime="20201030 18:28:06.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.327" endtime="20201030 18:28:06.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.712" endtime="20201030 18:28:06.350"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:05.626" endtime="20201030 18:28:06.351" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.358" endtime="20201030 18:28:06.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.356" endtime="20201030 18:28:06.378"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.391" endtime="20201030 18:28:06.409"></status>
</kw>
<msg timestamp="20201030 18:28:06.410" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.390" endtime="20201030 18:28:06.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.412" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.411" endtime="20201030 18:28:06.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.415" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:06.413" endtime="20201030 18:28:06.416"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:06.387" endtime="20201030 18:28:06.416"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:06.385" endtime="20201030 18:28:06.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.383" endtime="20201030 18:28:06.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:06.422" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:06.421" endtime="20201030 18:28:06.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.419" endtime="20201030 18:28:06.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.383" endtime="20201030 18:28:06.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.382" endtime="20201030 18:28:06.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.423" endtime="20201030 18:28:06.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.380" endtime="20201030 18:28:06.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.379" endtime="20201030 18:28:06.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.355" endtime="20201030 18:28:06.426"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.430" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:28:06.438" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:28:07.540" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:28:06.429" endtime="20201030 18:28:07.541"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.544" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 18:28:07.542" endtime="20201030 18:28:08.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.427" endtime="20201030 18:28:08.546"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.566" endtime="20201030 18:28:08.581"></status>
</kw>
<msg timestamp="20201030 18:28:08.582" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.563" endtime="20201030 18:28:08.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.587" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.584" endtime="20201030 18:28:08.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.589" endtime="20201030 18:28:08.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.557" endtime="20201030 18:28:08.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.553" endtime="20201030 18:28:08.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.609" endtime="20201030 18:28:08.905"></status>
</kw>
<msg timestamp="20201030 18:28:08.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.803610556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.120042083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.606" endtime="20201030 18:28:08.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.803610556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.120042083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.909" endtime="20201030 18:28:08.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.918" endtime="20201030 18:28:08.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.599" endtime="20201030 18:28:08.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.596" endtime="20201030 18:28:08.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:08.924" level="INFO">${PHILIP_RES} = [{'diff': 0.316431527}, {'diff': 4.355600000005566e-05}, {'diff': 8.02700000024359e-06}, {'diff': 8.055999999978525e-06}, {'diff': 8.070000000248712e-06}, {'diff': 8.097000000262256e-06}, {'diff': 8.0...</msg>
<status status="PASS" starttime="20201030 18:28:08.921" endtime="20201030 18:28:08.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.930" level="INFO">${RESULT} = {'diff': [0.316431527, 4.355600000005566e-05, 8.02700000024359e-06, 8.055999999978525e-06, 8.070000000248712e-06, 8.097000000262256e-06, 8.082999999992069e-06, 8.068999999721882e-06, 8.097000000262256...</msg>
<status status="PASS" starttime="20201030 18:28:08.925" endtime="20201030 18:28:08.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.935" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:08.934" endtime="20201030 18:28:08.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.937" level="INFO">VALUE: [0.316431527, 4.355600000005566e-05, 8.02700000024359e-06, 8.055999999978525e-06, 8.070000000248712e-06, 8.097000000262256e-06, 8.082999999992069e-06, 8.068999999721882e-06, 8.097000000262256e-06, 8.070000000248712e-06, 8.068999999721882e-06, 8.069000000165971e-06, 8.069000000165971e-06, 8.041999999708338e-06, 8.069999999804622e-06, 8.082999999992069e-06, 8.069000000165971e-06, 8.082999999992069e-06, 8.070000000248712e-06, 8.070000000248712e-06, 8.096999999818166e-06, 8.082999999992069e-06, 8.069000000165971e-06, 8.082999999992069e-06, 8.069999999804622e-06, 8.069999999804622e-06, 8.069000000165971e-06, 8.041000000069687e-06, 8.082999999992069e-06, 8.070000000248712e-06, 8.055999999978525e-06, 8.097000000262256e-06, 8.068999999721882e-06, 8.082999999992069e-06, 8.02799999988224e-06, 8.084000000074809e-06, 8.139000000184637e-06, 8.069000000165971e-06, 8.069000000165971e-06, 8.084000000074809e-06, 8.084000000074809e-06, 8.068999999721882e-06, 8.069000000165971e-06, 8.069000000165971e-06, 8.082999999992069e-06, 8.069999999804622e-06, 8.069000000165971e-06, 8.082999999992069e-06, 8.069000000165971e-06, 8.082999999992069e-06, 8.084000000074809e-06]</msg>
<status status="PASS" starttime="20201030 18:28:08.936" endtime="20201030 18:28:08.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.931" endtime="20201030 18:28:08.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.942" endtime="20201030 18:28:08.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.940" endtime="20201030 18:28:08.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.939" endtime="20201030 18:28:08.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.550" endtime="20201030 18:28:08.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.549" endtime="20201030 18:28:08.963"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.971" endtime="20201030 18:28:08.982"></status>
</kw>
<msg timestamp="20201030 18:28:08.983" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.970" endtime="20201030 18:28:08.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.985" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.984" endtime="20201030 18:28:08.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.986" endtime="20201030 18:28:08.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.967" endtime="20201030 18:28:08.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.965" endtime="20201030 18:28:08.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.996" endtime="20201030 18:28:09.282"></status>
</kw>
<msg timestamp="20201030 18:28:09.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017775597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017788736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.994" endtime="20201030 18:28:09.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017775597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017788736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.286" endtime="20201030 18:28:09.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.294" endtime="20201030 18:28:09.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.991" endtime="20201030 18:28:09.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.989" endtime="20201030 18:28:09.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:09.301" level="INFO">${PHILIP_RES} = [{'diff': 1.3138999999998818e-05}, {'diff': 1.2611000000002648e-05}, {'diff': 1.2596999999999609e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2596999999999609e-05}, {'diff': 1.2611999999998652e-...</msg>
<status status="PASS" starttime="20201030 18:28:09.297" endtime="20201030 18:28:09.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.306" level="INFO">${RESULT} = {'diff': [1.3138999999998818e-05, 1.2611000000002648e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2611999999998652e-05, 1.2583999999999512e-05, 1.2610999999999178e-05...</msg>
<status status="PASS" starttime="20201030 18:28:09.302" endtime="20201030 18:28:09.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.311" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:09.310" endtime="20201030 18:28:09.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.314" level="INFO">VALUE: [1.3138999999998818e-05, 1.2611000000002648e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2611999999998652e-05, 1.2583999999999512e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2611000000002648e-05, 1.2596999999999609e-05, 1.255499999999743e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2597999999999082e-05, 1.2610999999999178e-05, 1.2611000000002648e-05, 1.2596999999999609e-05, 1.2625000000002218e-05, 1.2556000000000372e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2610999999999178e-05, 1.2597000000003078e-05, 1.2624999999998748e-05, 1.2583999999999512e-05, 1.2652000000001884e-05, 1.2597999999999082e-05, 1.2611000000002648e-05, 1.2665999999997984e-05, 1.2596999999999609e-05, 1.2639000000001788e-05, 1.2610999999999178e-05, 1.2597000000003078e-05, 1.2624999999998748e-05, 1.2596999999999609e-05, 1.2639000000001788e-05, 1.2610999999999178e-05, 1.2611000000002648e-05, 1.2624999999998748e-05, 1.2583000000000039e-05, 1.2638999999998318e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2638999999998318e-05, 1.2624999999998748e-05]</msg>
<status status="PASS" starttime="20201030 18:28:09.312" endtime="20201030 18:28:09.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.307" endtime="20201030 18:28:09.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.324" endtime="20201030 18:28:09.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.321" endtime="20201030 18:28:09.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.319" endtime="20201030 18:28:09.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.963" endtime="20201030 18:28:09.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.963" endtime="20201030 18:28:09.349"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.368" endtime="20201030 18:28:09.383"></status>
</kw>
<msg timestamp="20201030 18:28:09.384" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.365" endtime="20201030 18:28:09.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.389" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.386" endtime="20201030 18:28:09.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.391" endtime="20201030 18:28:09.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.358" endtime="20201030 18:28:09.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.354" endtime="20201030 18:28:09.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.416" endtime="20201030 18:28:09.704"></status>
</kw>
<msg timestamp="20201030 18:28:09.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033430069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033448389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.414" endtime="20201030 18:28:09.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033430069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033448389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.708" endtime="20201030 18:28:09.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.716" endtime="20201030 18:28:09.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.402" endtime="20201030 18:28:09.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.398" endtime="20201030 18:28:09.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:09.730" level="INFO">${PHILIP_RES} = [{'diff': 1.8320000000002223e-05}, {'diff': 1.7806000000002153e-05}, {'diff': 1.77769999999966e-05}, {'diff': 1.776299999999703e-05}, {'diff': 1.7764000000003444e-05}, {'diff': 1.7764000000003444e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:09.720" endtime="20201030 18:28:09.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.734" level="INFO">${RESULT} = {'diff': [1.8320000000002223e-05, 1.7806000000002153e-05, 1.77769999999966e-05, 1.776299999999703e-05, 1.7764000000003444e-05, 1.7764000000003444e-05, 1.7763999999996505e-05, 1.7778000000003014e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:28:09.731" endtime="20201030 18:28:09.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.739" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:09.738" endtime="20201030 18:28:09.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.741" level="INFO">VALUE: [1.8320000000002223e-05, 1.7806000000002153e-05, 1.77769999999966e-05, 1.776299999999703e-05, 1.7764000000003444e-05, 1.7764000000003444e-05, 1.7763999999996505e-05, 1.7778000000003014e-05, 1.7750000000003874e-05, 1.7764000000003444e-05, 1.7763999999996505e-05, 1.7778000000003014e-05, 1.7764000000003444e-05, 1.7763999999996505e-05, 1.776299999999703e-05, 1.7736000000004304e-05, 1.7721999999997795e-05, 1.768099999999856e-05, 1.769499999999813e-05, 1.7709000000004638e-05, 1.77089999999977e-05, 1.7777999999996075e-05, 1.7764000000003444e-05, 1.7778000000003014e-05, 1.7763999999996505e-05, 1.7763999999996505e-05, 1.7764000000003444e-05, 1.777700000000354e-05, 1.776299999999703e-05, 1.7763999999996505e-05, 1.7764000000003444e-05, 1.7778000000003014e-05, 1.7763999999996505e-05, 1.7806000000002153e-05, 1.7764000000003444e-05, 1.7721999999997795e-05, 1.7749999999996935e-05, 1.7764000000003444e-05, 1.776300000000397e-05, 1.7749999999996935e-05, 1.77769999999966e-05, 1.7764000000003444e-05, 1.7778000000003014e-05, 1.7763999999996505e-05, 1.7763999999996505e-05, 1.7764000000003444e-05, 1.7764000000003444e-05, 1.7777999999996075e-05, 1.7764000000003444e-05, 1.7778000000003014e-05]</msg>
<status status="PASS" starttime="20201030 18:28:09.740" endtime="20201030 18:28:09.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.735" endtime="20201030 18:28:09.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.746" endtime="20201030 18:28:09.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.744" endtime="20201030 18:28:09.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.743" endtime="20201030 18:28:09.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.351" endtime="20201030 18:28:09.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.350" endtime="20201030 18:28:09.767"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.775" endtime="20201030 18:28:09.786"></status>
</kw>
<msg timestamp="20201030 18:28:09.787" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.774" endtime="20201030 18:28:09.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.789" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.788" endtime="20201030 18:28:09.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.790" endtime="20201030 18:28:09.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.771" endtime="20201030 18:28:09.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.769" endtime="20201030 18:28:09.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.800" endtime="20201030 18:28:10.085"></status>
</kw>
<msg timestamp="20201030 18:28:10.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017911972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017936, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:09.798" endtime="20201030 18:28:10.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017911972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017936, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:10.090" endtime="20201030 18:28:10.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.100" endtime="20201030 18:28:10.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.795" endtime="20201030 18:28:10.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.794" endtime="20201030 18:28:10.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:10.107" level="INFO">${PHILIP_RES} = [{'diff': 2.4027999999998856e-05}, {'diff': 2.3541999999997926e-05}, {'diff': 2.3500000000002685e-05}, {'diff': 2.3499999999999216e-05}, {'diff': 2.3542000000001395e-05}, {'diff': 2.3542000000001395e-...</msg>
<status status="PASS" starttime="20201030 18:28:10.103" endtime="20201030 18:28:10.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.112" level="INFO">${RESULT} = {'diff': [2.4027999999998856e-05, 2.3541999999997926e-05, 2.3500000000002685e-05, 2.3499999999999216e-05, 2.3542000000001395e-05, 2.3542000000001395e-05, 2.3527999999998356e-05, 2.3556000000000965e-05...</msg>
<status status="PASS" starttime="20201030 18:28:10.108" endtime="20201030 18:28:10.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.117" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:10.116" endtime="20201030 18:28:10.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.120" level="INFO">VALUE: [2.4027999999998856e-05, 2.3541999999997926e-05, 2.3500000000002685e-05, 2.3499999999999216e-05, 2.3542000000001395e-05, 2.3542000000001395e-05, 2.3527999999998356e-05, 2.3556000000000965e-05, 2.3499999999999216e-05, 2.3514000000002255e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.3514000000002255e-05, 2.3472000000000076e-05, 2.3526999999998882e-05, 2.3542000000001395e-05, 2.3485999999999646e-05, 2.3542000000001395e-05, 2.3569999999997066e-05, 2.358300000000063e-05, 2.3485999999999646e-05, 2.3527999999998356e-05, 2.3528000000001825e-05, 2.3542000000001395e-05, 2.3570000000000535e-05, 2.3512999999999312e-05, 2.348699999999912e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.3542000000001395e-05, 2.3500000000002685e-05, 2.3512999999999312e-05, 2.3542000000001395e-05, 2.3542000000001395e-05, 2.3584000000000105e-05, 2.3528000000001825e-05, 2.3512999999999312e-05, 2.3528000000001825e-05, 2.3542000000001395e-05, 2.3542000000001395e-05, 2.3514000000002255e-05, 2.3513999999998786e-05, 2.352700000000235e-05, 2.358300000000063e-05, 2.3527999999998356e-05, 2.3514000000002255e-05, 2.3541999999997926e-05, 2.3486000000003115e-05, 2.354100000000192e-05, 2.3554999999998022e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.118" endtime="20201030 18:28:10.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.113" endtime="20201030 18:28:10.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.130" endtime="20201030 18:28:10.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.127" endtime="20201030 18:28:10.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.124" endtime="20201030 18:28:10.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.767" endtime="20201030 18:28:10.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.767" endtime="20201030 18:28:10.155"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.175" endtime="20201030 18:28:10.189"></status>
</kw>
<msg timestamp="20201030 18:28:10.190" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.171" endtime="20201030 18:28:10.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.201" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.193" endtime="20201030 18:28:10.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.206" endtime="20201030 18:28:10.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.165" endtime="20201030 18:28:10.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.161" endtime="20201030 18:28:10.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.230" endtime="20201030 18:28:10.517"></status>
</kw>
<msg timestamp="20201030 18:28:10.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033606736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033637181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.227" endtime="20201030 18:28:10.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033606736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033637181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.522" endtime="20201030 18:28:10.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.530" endtime="20201030 18:28:10.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.223" endtime="20201030 18:28:10.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.221" endtime="20201030 18:28:10.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:10.537" level="INFO">${PHILIP_RES} = [{'diff': 3.044500000000394e-05}, {'diff': 2.9916999999997362e-05}, {'diff': 2.9916000000004828e-05}, {'diff': 2.9902999999997792e-05}, {'diff': 2.988900000000516e-05}, {'diff': 2.9916999999997362e-05...</msg>
<status status="PASS" starttime="20201030 18:28:10.533" endtime="20201030 18:28:10.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.541" level="INFO">${RESULT} = {'diff': [3.044500000000394e-05, 2.9916999999997362e-05, 2.9916000000004828e-05, 2.9902999999997792e-05, 2.988900000000516e-05, 2.9916999999997362e-05, 2.99170000000043e-05, 2.990199999999832e-05, 2.9...</msg>
<status status="PASS" starttime="20201030 18:28:10.538" endtime="20201030 18:28:10.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.545" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:10.544" endtime="20201030 18:28:10.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.548" level="INFO">VALUE: [3.044500000000394e-05, 2.9916999999997362e-05, 2.9916000000004828e-05, 2.9902999999997792e-05, 2.988900000000516e-05, 2.9916999999997362e-05, 2.99170000000043e-05, 2.990199999999832e-05, 2.99170000000043e-05, 2.9902999999997792e-05, 2.991599999999789e-05, 2.9902999999997792e-05, 2.9888999999998223e-05, 2.9902999999997792e-05, 2.9902999999997792e-05, 2.990199999999832e-05, 2.9902999999997792e-05, 2.9902999999997792e-05, 2.990199999999832e-05, 2.9916999999997362e-05, 2.9902999999997792e-05, 2.9902999999997792e-05, 2.9916999999997362e-05, 2.9874999999998653e-05, 2.9902999999997792e-05, 2.993100000000387e-05, 2.9846999999999513e-05, 2.9874999999998653e-05, 2.9902999999997792e-05, 2.9874999999998653e-05, 2.9902999999997792e-05, 2.9902000000005258e-05, 2.9916999999997362e-05, 2.9832999999999943e-05, 2.9874999999998653e-05, 2.9846999999999513e-05, 2.9888999999998223e-05, 2.988900000000516e-05, 2.9944999999996502e-05, 2.988900000000516e-05, 2.9902999999997792e-05, 2.990300000000473e-05, 2.990199999999832e-05, 2.990300000000473e-05, 2.9902999999997792e-05, 2.990300000000473e-05, 2.9916999999997362e-05, 2.99170000000043e-05, 2.9902999999997792e-05, 2.9888999999998223e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.546" endtime="20201030 18:28:10.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.542" endtime="20201030 18:28:10.549"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.552" endtime="20201030 18:28:10.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.551" endtime="20201030 18:28:10.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.550" endtime="20201030 18:28:10.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.157" endtime="20201030 18:28:10.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.156" endtime="20201030 18:28:10.573"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.581" endtime="20201030 18:28:10.593"></status>
</kw>
<msg timestamp="20201030 18:28:10.594" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.580" endtime="20201030 18:28:10.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.596" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.595" endtime="20201030 18:28:10.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.597" endtime="20201030 18:28:10.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.577" endtime="20201030 18:28:10.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.575" endtime="20201030 18:28:10.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.606" endtime="20201030 18:28:10.893"></status>
</kw>
<msg timestamp="20201030 18:28:10.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018721472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018758889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.605" endtime="20201030 18:28:10.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018721472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018758889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.897" endtime="20201030 18:28:10.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.905" endtime="20201030 18:28:10.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.602" endtime="20201030 18:28:10.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.600" endtime="20201030 18:28:10.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:10.912" level="INFO">${PHILIP_RES} = [{'diff': 3.7417000000001394e-05}, {'diff': 3.6888999999998284e-05}, {'diff': 3.69589999999996e-05}, {'diff': 3.6889000000001754e-05}, {'diff': 3.6889000000001754e-05}, {'diff': 3.6888999999998284e-05...</msg>
<status status="PASS" starttime="20201030 18:28:10.909" endtime="20201030 18:28:10.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.916" level="INFO">${RESULT} = {'diff': [3.7417000000001394e-05, 3.6888999999998284e-05, 3.69589999999996e-05, 3.6889000000001754e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6917000000000894e-05, 3.6889000000001754e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:10.913" endtime="20201030 18:28:10.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.920" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:10.919" endtime="20201030 18:28:10.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.923" level="INFO">VALUE: [3.7417000000001394e-05, 3.6888999999998284e-05, 3.69589999999996e-05, 3.6889000000001754e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6917000000000894e-05, 3.6889000000001754e-05, 3.6917000000000894e-05, 3.6874999999998714e-05, 3.6889000000001754e-05, 3.6903000000001324e-05, 3.6888999999998284e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.6874999999998714e-05, 3.684799999999905e-05, 3.6861000000002614e-05, 3.6889000000001754e-05, 3.690199999999838e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.690200000000185e-05, 3.697299999999917e-05, 3.6874999999998714e-05, 3.690200000000185e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6874999999998714e-05, 3.6889000000001754e-05, 3.6874999999998714e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.6889000000001754e-05, 3.690199999999838e-05, 3.6874999999998714e-05, 3.6889000000001754e-05, 3.6889000000001754e-05, 3.6902999999997854e-05, 3.6888999999998284e-05, 3.6875000000002184e-05, 3.6903000000001324e-05, 3.69719999999997e-05, 3.6875000000002184e-05, 3.6903000000001324e-05, 3.6874999999998714e-05, 3.6888999999998284e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.921" endtime="20201030 18:28:10.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.917" endtime="20201030 18:28:10.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.931" endtime="20201030 18:28:10.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.929" endtime="20201030 18:28:10.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.928" endtime="20201030 18:28:10.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.574" endtime="20201030 18:28:10.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.573" endtime="20201030 18:28:10.951"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.960" endtime="20201030 18:28:10.973"></status>
</kw>
<msg timestamp="20201030 18:28:10.974" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.958" endtime="20201030 18:28:10.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.976" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.975" endtime="20201030 18:28:10.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.977" endtime="20201030 18:28:10.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.956" endtime="20201030 18:28:10.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.954" endtime="20201030 18:28:10.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.987" endtime="20201030 18:28:11.272"></status>
</kw>
<msg timestamp="20201030 18:28:11.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017727403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017772444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.985" endtime="20201030 18:28:11.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017727403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017772444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.276" endtime="20201030 18:28:11.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.284" endtime="20201030 18:28:11.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.983" endtime="20201030 18:28:11.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.980" endtime="20201030 18:28:11.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:11.291" level="INFO">${PHILIP_RES} = [{'diff': 4.504099999999914e-05}, {'diff': 4.451399999999897e-05}, {'diff': 4.4472999999999735e-05}, {'diff': 4.448599999999983e-05}, {'diff': 4.4459000000000165e-05}, {'diff': 4.448599999999983e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:11.288" endtime="20201030 18:28:11.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.296" level="INFO">${RESULT} = {'diff': [4.504099999999914e-05, 4.451399999999897e-05, 4.4472999999999735e-05, 4.448599999999983e-05, 4.4459000000000165e-05, 4.448599999999983e-05, 4.4431000000001025e-05, 4.448599999999983e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 18:28:11.292" endtime="20201030 18:28:11.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.300" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:11.299" endtime="20201030 18:28:11.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.303" level="INFO">VALUE: [4.504099999999914e-05, 4.451399999999897e-05, 4.4472999999999735e-05, 4.448599999999983e-05, 4.4459000000000165e-05, 4.448599999999983e-05, 4.4431000000001025e-05, 4.448599999999983e-05, 4.451399999999897e-05, 4.447200000000026e-05, 4.44999999999994e-05, 4.447200000000026e-05, 4.44999999999994e-05, 4.44999999999994e-05, 4.4487000000002774e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.450000000000287e-05, 4.45129999999995e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.450000000000287e-05, 4.451399999999897e-05, 4.447200000000026e-05, 4.451400000000244e-05, 4.454199999999811e-05, 4.4486999999999305e-05, 4.4416999999997986e-05, 4.4431000000001025e-05, 4.44999999999994e-05, 4.44999999999994e-05, 4.451399999999897e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.447200000000026e-05, 4.454199999999811e-05, 4.448599999999983e-05, 4.450000000000287e-05, 4.448599999999983e-05, 4.445800000000069e-05, 4.444399999999765e-05, 4.44999999999994e-05, 4.4445000000000595e-05, 4.448599999999983e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.301" endtime="20201030 18:28:11.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.297" endtime="20201030 18:28:11.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.307" endtime="20201030 18:28:11.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.306" endtime="20201030 18:28:11.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.304" endtime="20201030 18:28:11.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.952" endtime="20201030 18:28:11.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.952" endtime="20201030 18:28:11.328"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.337" endtime="20201030 18:28:11.351"></status>
</kw>
<msg timestamp="20201030 18:28:11.352" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.335" endtime="20201030 18:28:11.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.354" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.353" endtime="20201030 18:28:11.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.355" endtime="20201030 18:28:11.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.333" endtime="20201030 18:28:11.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.331" endtime="20201030 18:28:11.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.365" endtime="20201030 18:28:11.650"></status>
</kw>
<msg timestamp="20201030 18:28:11.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019067903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019121125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.363" endtime="20201030 18:28:11.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019067903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019121125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.655" endtime="20201030 18:28:11.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.663" endtime="20201030 18:28:11.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.361" endtime="20201030 18:28:11.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.359" endtime="20201030 18:28:11.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:11.671" level="INFO">${PHILIP_RES} = [{'diff': 5.3221999999998604e-05}, {'diff': 5.270899999999801e-05}, {'diff': 5.273600000000114e-05}, {'diff': 5.270899999999801e-05}, {'diff': 5.2707999999998534e-05}, {'diff': 5.276400000000028e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:11.667" endtime="20201030 18:28:11.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.675" level="INFO">${RESULT} = {'diff': [5.3221999999998604e-05, 5.270899999999801e-05, 5.273600000000114e-05, 5.270899999999801e-05, 5.2707999999998534e-05, 5.276400000000028e-05, 5.2693999999998964e-05, 5.2708000000002e-05, 5.270...</msg>
<status status="PASS" starttime="20201030 18:28:11.672" endtime="20201030 18:28:11.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.679" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:11.678" endtime="20201030 18:28:11.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.682" level="INFO">VALUE: [5.3221999999998604e-05, 5.270899999999801e-05, 5.273600000000114e-05, 5.270899999999801e-05, 5.2707999999998534e-05, 5.276400000000028e-05, 5.2693999999998964e-05, 5.2708000000002e-05, 5.2708000000002e-05, 5.269500000000191e-05, 5.269500000000191e-05, 5.2708000000002e-05, 5.270900000000148e-05, 5.2693999999998964e-05, 5.270899999999801e-05, 5.2693999999998964e-05, 5.270899999999801e-05, 5.262500000000059e-05, 5.2693999999998964e-05, 5.2707999999998534e-05, 5.2693999999998964e-05, 5.269499999999844e-05, 5.2679999999999394e-05, 5.270900000000148e-05, 5.2708000000002e-05, 5.269500000000191e-05, 5.273600000000114e-05, 5.2708000000002e-05, 5.269400000000243e-05, 5.2708000000002e-05, 5.269499999999844e-05, 5.2707999999998534e-05, 5.277800000000332e-05, 5.2721999999998104e-05, 5.270899999999801e-05, 5.2679999999999394e-05, 5.26669999999993e-05, 5.2707999999998534e-05, 5.268099999999887e-05, 5.26669999999993e-05, 5.2707999999998534e-05, 5.268100000000234e-05, 5.2707999999998534e-05, 5.270900000000148e-05, 5.276400000000028e-05, 5.273700000000062e-05, 5.2708000000002e-05, 5.275000000000071e-05, 5.272200000000157e-05, 5.272200000000157e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.680" endtime="20201030 18:28:11.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.675" endtime="20201030 18:28:11.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.686" endtime="20201030 18:28:11.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.685" endtime="20201030 18:28:11.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.683" endtime="20201030 18:28:11.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.329" endtime="20201030 18:28:11.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.328" endtime="20201030 18:28:11.707"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.715" endtime="20201030 18:28:11.729"></status>
</kw>
<msg timestamp="20201030 18:28:11.730" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.714" endtime="20201030 18:28:11.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.732" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.731" endtime="20201030 18:28:11.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.734" endtime="20201030 18:28:11.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.711" endtime="20201030 18:28:11.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.709" endtime="20201030 18:28:11.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.743" endtime="20201030 18:28:12.028"></status>
</kw>
<msg timestamp="20201030 18:28:12.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018595806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.741" endtime="20201030 18:28:12.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018595806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.032" endtime="20201030 18:28:12.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.041" endtime="20201030 18:28:12.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.738" endtime="20201030 18:28:12.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.737" endtime="20201030 18:28:12.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:12.047" level="INFO">${PHILIP_RES} = [{'diff': 6.20690000000014e-05}, {'diff': 6.15279999999982e-05}, {'diff': 6.152700000000219e-05}, {'diff': 6.15279999999982e-05}, {'diff': 6.154200000000123e-05}, {'diff': 6.15279999999982e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:28:12.044" endtime="20201030 18:28:12.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.051" level="INFO">${RESULT} = {'diff': [6.20690000000014e-05, 6.15279999999982e-05, 6.152700000000219e-05, 6.15279999999982e-05, 6.154200000000123e-05, 6.15279999999982e-05, 6.147199999999992e-05, 6.15279999999982e-05, 6.154200000...</msg>
<status status="PASS" starttime="20201030 18:28:12.048" endtime="20201030 18:28:12.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.056" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:12.055" endtime="20201030 18:28:12.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.058" level="INFO">VALUE: [6.20690000000014e-05, 6.15279999999982e-05, 6.152700000000219e-05, 6.15279999999982e-05, 6.154200000000123e-05, 6.15279999999982e-05, 6.147199999999992e-05, 6.15279999999982e-05, 6.154200000000123e-05, 6.154100000000176e-05, 6.155500000000133e-05, 6.154200000000123e-05, 6.148599999999949e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.154099999999829e-05, 6.15140000000021e-05, 6.15279999999982e-05, 6.15140000000021e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.148599999999949e-05, 6.158300000000047e-05, 6.15279999999982e-05, 6.15560000000008e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.154200000000123e-05, 6.152699999999872e-05, 6.151299999999915e-05, 6.155499999999786e-05, 6.15140000000021e-05, 6.151399999999863e-05, 6.15560000000008e-05, 6.154199999999777e-05, 6.152700000000219e-05, 6.148599999999949e-05, 6.154100000000176e-05, 6.148599999999949e-05, 6.15140000000021e-05, 6.147199999999992e-05, 6.15140000000021e-05, 6.152699999999872e-05, 6.151399999999863e-05, 6.154200000000123e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.151399999999863e-05, 6.152800000000166e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.057" endtime="20201030 18:28:12.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.052" endtime="20201030 18:28:12.060"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.064" endtime="20201030 18:28:12.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.062" endtime="20201030 18:28:12.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.061" endtime="20201030 18:28:12.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.708" endtime="20201030 18:28:12.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.707" endtime="20201030 18:28:12.084"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.093" endtime="20201030 18:28:12.107"></status>
</kw>
<msg timestamp="20201030 18:28:12.107" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.091" endtime="20201030 18:28:12.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.110" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.109" endtime="20201030 18:28:12.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.111" endtime="20201030 18:28:12.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.089" endtime="20201030 18:28:12.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.087" endtime="20201030 18:28:12.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.120" endtime="20201030 18:28:12.427"></status>
</kw>
<msg timestamp="20201030 18:28:12.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018240097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018311583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.119" endtime="20201030 18:28:12.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018240097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018311583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.437" endtime="20201030 18:28:12.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.453" endtime="20201030 18:28:12.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.116" endtime="20201030 18:28:12.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.114" endtime="20201030 18:28:12.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:12.460" level="INFO">${PHILIP_RES} = [{'diff': 7.148599999999908e-05}, {'diff': 7.095799999999944e-05}, {'diff': 7.097200000000248e-05}, {'diff': 7.095799999999944e-05}, {'diff': 7.097199999999901e-05}, {'diff': 7.097199999999901e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:12.456" endtime="20201030 18:28:12.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.465" level="INFO">${RESULT} = {'diff': [7.148599999999908e-05, 7.095799999999944e-05, 7.097200000000248e-05, 7.095799999999944e-05, 7.097199999999901e-05, 7.097199999999901e-05, 7.098600000000205e-05, 7.097199999999901e-05, 7.0971...</msg>
<status status="PASS" starttime="20201030 18:28:12.461" endtime="20201030 18:28:12.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.470" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:12.469" endtime="20201030 18:28:12.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.472" level="INFO">VALUE: [7.148599999999908e-05, 7.095799999999944e-05, 7.097200000000248e-05, 7.095799999999944e-05, 7.097199999999901e-05, 7.097199999999901e-05, 7.098600000000205e-05, 7.097199999999901e-05, 7.097199999999901e-05, 7.094399999999987e-05, 7.097199999999901e-05, 7.097299999999848e-05, 7.095799999999944e-05, 7.094400000000334e-05, 7.095799999999944e-05, 7.095799999999944e-05, 7.098599999999858e-05, 7.093100000000324e-05, 7.097199999999901e-05, 7.095799999999944e-05, 7.097200000000248e-05, 7.095799999999944e-05, 7.097199999999901e-05, 7.097299999999848e-05, 7.090200000000116e-05, 7.095799999999944e-05, 7.094399999999987e-05, 7.090300000000063e-05, 7.095800000000291e-05, 7.099999999999815e-05, 7.099999999999815e-05, 7.100000000000162e-05, 7.09300000000003e-05, 7.097199999999901e-05, 7.098599999999858e-05, 7.097300000000195e-05, 7.098599999999858e-05, 7.095799999999944e-05, 7.095799999999944e-05, 7.101400000000119e-05, 7.098599999999858e-05, 7.094499999999934e-05, 7.095900000000238e-05, 7.095799999999944e-05, 7.102800000000076e-05, 7.097199999999901e-05, 7.095799999999944e-05, 7.097199999999901e-05, 7.095899999999891e-05, 7.098600000000205e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.471" endtime="20201030 18:28:12.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.466" endtime="20201030 18:28:12.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.477" endtime="20201030 18:28:12.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.475" endtime="20201030 18:28:12.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.474" endtime="20201030 18:28:12.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.085" endtime="20201030 18:28:12.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.085" endtime="20201030 18:28:12.498"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.507" endtime="20201030 18:28:12.521"></status>
</kw>
<msg timestamp="20201030 18:28:12.522" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.505" endtime="20201030 18:28:12.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.524" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.523" endtime="20201030 18:28:12.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.525" endtime="20201030 18:28:12.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.502" endtime="20201030 18:28:12.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.500" endtime="20201030 18:28:12.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.535" endtime="20201030 18:28:12.821"></status>
</kw>
<msg timestamp="20201030 18:28:12.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018964278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019045833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.533" endtime="20201030 18:28:12.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018964278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019045833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.825" endtime="20201030 18:28:12.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.834" endtime="20201030 18:28:12.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.530" endtime="20201030 18:28:12.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.529" endtime="20201030 18:28:12.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:12.842" level="INFO">${PHILIP_RES} = [{'diff': 8.155500000000052e-05}, {'diff': 8.09719999999986e-05}, {'diff': 8.102800000000035e-05}, {'diff': 8.101399999999731e-05}, {'diff': 8.101400000000078e-05}, {'diff': 8.101400000000078e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:12.838" endtime="20201030 18:28:12.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.846" level="INFO">${RESULT} = {'diff': [8.155500000000052e-05, 8.09719999999986e-05, 8.102800000000035e-05, 8.101399999999731e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.104199999999992e-05, 8.100000000000121e-05, 8.10410...</msg>
<status status="PASS" starttime="20201030 18:28:12.843" endtime="20201030 18:28:12.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.850" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:12.849" endtime="20201030 18:28:12.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.853" level="INFO">VALUE: [8.155500000000052e-05, 8.09719999999986e-05, 8.102800000000035e-05, 8.101399999999731e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.104199999999992e-05, 8.100000000000121e-05, 8.104100000000045e-05, 8.098599999999817e-05, 8.100000000000121e-05, 8.104100000000045e-05, 8.105600000000296e-05, 8.102800000000035e-05, 8.106999999999906e-05, 8.101400000000078e-05, 8.102700000000088e-05, 8.104199999999992e-05, 8.094499999999893e-05, 8.102700000000088e-05, 8.104199999999992e-05, 8.098599999999817e-05, 8.100000000000121e-05, 8.106899999999959e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.104199999999992e-05, 8.100000000000121e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.100000000000121e-05, 8.098600000000164e-05, 8.101399999999731e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.105500000000002e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.101399999999731e-05, 8.102800000000035e-05, 8.101400000000078e-05, 8.10269999999974e-05, 8.102800000000035e-05, 8.101400000000078e-05, 8.101299999999784e-05, 8.102800000000035e-05, 8.102800000000035e-05, 8.099999999999774e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.851" endtime="20201030 18:28:12.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.847" endtime="20201030 18:28:12.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.858" endtime="20201030 18:28:12.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.856" endtime="20201030 18:28:12.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.855" endtime="20201030 18:28:12.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.499" endtime="20201030 18:28:12.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.498" endtime="20201030 18:28:12.879"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.887" endtime="20201030 18:28:12.903"></status>
</kw>
<msg timestamp="20201030 18:28:12.903" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.886" endtime="20201030 18:28:12.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.906" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.904" endtime="20201030 18:28:12.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.907" endtime="20201030 18:28:12.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.883" endtime="20201030 18:28:12.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.881" endtime="20201030 18:28:12.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.916" endtime="20201030 18:28:13.202"></status>
</kw>
<msg timestamp="20201030 18:28:13.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019728597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019820806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.915" endtime="20201030 18:28:13.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019728597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019820806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.206" endtime="20201030 18:28:13.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.215" endtime="20201030 18:28:13.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.912" endtime="20201030 18:28:13.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.910" endtime="20201030 18:28:13.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:13.222" level="INFO">${PHILIP_RES} = [{'diff': 9.220899999999935e-05}, {'diff': 9.16939999999998e-05}, {'diff': 9.169500000000275e-05}, {'diff': 9.170799999999937e-05}, {'diff': 9.168099999999971e-05}, {'diff': 9.161099999999839e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:13.219" endtime="20201030 18:28:13.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.226" level="INFO">${RESULT} = {'diff': [9.220899999999935e-05, 9.16939999999998e-05, 9.169500000000275e-05, 9.170799999999937e-05, 9.168099999999971e-05, 9.161099999999839e-05, 9.170899999999885e-05, 9.168000000000023e-05, 9.16670...</msg>
<status status="PASS" starttime="20201030 18:28:13.223" endtime="20201030 18:28:13.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.231" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:13.230" endtime="20201030 18:28:13.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.233" level="INFO">VALUE: [9.220899999999935e-05, 9.16939999999998e-05, 9.169500000000275e-05, 9.170799999999937e-05, 9.168099999999971e-05, 9.161099999999839e-05, 9.170899999999885e-05, 9.168000000000023e-05, 9.166700000000014e-05, 9.16939999999998e-05, 9.166700000000014e-05, 9.16939999999998e-05, 9.172300000000189e-05, 9.166600000000066e-05, 9.165300000000057e-05, 9.166600000000066e-05, 9.166700000000014e-05, 9.173600000000198e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.168099999999971e-05, 9.168099999999971e-05, 9.170800000000284e-05, 9.170799999999937e-05, 9.168000000000023e-05, 9.168099999999971e-05, 9.16939999999998e-05, 9.169499999999928e-05, 9.170799999999937e-05, 9.169500000000275e-05, 9.166600000000066e-05, 9.168099999999971e-05, 9.16939999999998e-05, 9.166700000000014e-05, 9.16939999999998e-05, 9.168099999999971e-05, 9.166700000000014e-05, 9.166700000000014e-05, 9.16939999999998e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.169499999999928e-05, 9.173600000000198e-05, 9.168100000000318e-05, 9.162500000000143e-05, 9.169499999999928e-05, 9.173600000000198e-05, 9.16939999999998e-05, 9.172200000000241e-05, 9.168000000000023e-05]</msg>
<status status="PASS" starttime="20201030 18:28:13.232" endtime="20201030 18:28:13.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.227" endtime="20201030 18:28:13.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.240" endtime="20201030 18:28:13.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.237" endtime="20201030 18:28:13.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.236" endtime="20201030 18:28:13.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.880" endtime="20201030 18:28:13.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.879" endtime="20201030 18:28:13.260"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.269" endtime="20201030 18:28:13.284"></status>
</kw>
<msg timestamp="20201030 18:28:13.285" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.267" endtime="20201030 18:28:13.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.287" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.286" endtime="20201030 18:28:13.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.288" endtime="20201030 18:28:13.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.265" endtime="20201030 18:28:13.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.263" endtime="20201030 18:28:13.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.298" endtime="20201030 18:28:13.586"></status>
</kw>
<msg timestamp="20201030 18:28:13.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018404944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018508417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.296" endtime="20201030 18:28:13.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018404944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018508417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.591" endtime="20201030 18:28:13.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.599" endtime="20201030 18:28:13.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.294" endtime="20201030 18:28:13.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.292" endtime="20201030 18:28:13.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:13.605" level="INFO">${PHILIP_RES} = [{'diff': 0.00010347299999999976}, {'diff': 0.00010295800000000022}, {'diff': 0.00010291700000000098}, {'diff': 0.00010294400000000065}, {'diff': 0.00010294500000000012}, {'diff': 0.000102971999999999...</msg>
<status status="PASS" starttime="20201030 18:28:13.602" endtime="20201030 18:28:13.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.610" level="INFO">${RESULT} = {'diff': [0.00010347299999999976, 0.00010295800000000022, 0.00010291700000000098, 0.00010294400000000065, 0.00010294500000000012, 0.00010297199999999979, 0.00010294500000000012, 0.00010293000000000108...</msg>
<status status="PASS" starttime="20201030 18:28:13.607" endtime="20201030 18:28:13.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.615" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:13.614" endtime="20201030 18:28:13.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.618" level="INFO">VALUE: [0.00010347299999999976, 0.00010295800000000022, 0.00010291700000000098, 0.00010294400000000065, 0.00010294500000000012, 0.00010297199999999979, 0.00010294500000000012, 0.00010293000000000108, 0.00010291699999999751, 0.00010295800000000022, 0.00010297199999999979, 0.00010293000000000108, 0.00010297199999999979, 0.00010294400000000065, 0.00010291699999999751, 0.00010295800000000022, 0.00010294500000000012, 0.0001029299999999976, 0.00010297199999999979, 0.00010297199999999979, 0.00010298600000000283, 0.00010297199999999979, 0.00010295800000000022, 0.00010294399999999718, 0.00010288899999999837, 0.00010295800000000022, 0.00010295800000000022, 0.00010295899999999969, 0.00010291700000000098, 0.00010301400000000197, 0.00010294400000000065, 0.00010295800000000022, 0.00010302800000000154, 0.00010298599999999936, 0.00010295800000000022, 0.00010295899999999969, 0.00010295800000000022, 0.00010294500000000012, 0.00010295800000000022, 0.00010295899999999969, 0.00010295800000000022, 0.00010294500000000012, 0.0001030000000000024, 0.00010297299999999926, 0.00010297199999999979, 0.00010295899999999969, 0.00010297199999999979, 0.00010295899999999969, 0.00010298599999999936, 0.00010295899999999969]</msg>
<status status="PASS" starttime="20201030 18:28:13.617" endtime="20201030 18:28:13.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.611" endtime="20201030 18:28:13.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.623" endtime="20201030 18:28:13.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.622" endtime="20201030 18:28:13.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.621" endtime="20201030 18:28:13.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.261" endtime="20201030 18:28:13.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.261" endtime="20201030 18:28:13.644"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.653" endtime="20201030 18:28:13.669"></status>
</kw>
<msg timestamp="20201030 18:28:13.669" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.651" endtime="20201030 18:28:13.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.672" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.670" endtime="20201030 18:28:13.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.673" endtime="20201030 18:28:13.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.649" endtime="20201030 18:28:13.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.647" endtime="20201030 18:28:13.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.682" endtime="20201030 18:28:13.969"></status>
</kw>
<msg timestamp="20201030 18:28:13.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018388625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018503986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.681" endtime="20201030 18:28:13.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018388625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018503986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.974" endtime="20201030 18:28:13.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.982" endtime="20201030 18:28:13.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.678" endtime="20201030 18:28:13.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.676" endtime="20201030 18:28:13.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:13.990" level="INFO">${PHILIP_RES} = [{'diff': 0.00011536100000000132}, {'diff': 0.00011484800000000073}, {'diff': 0.00011483300000000168}, {'diff': 0.00011486099999999735}, {'diff': 0.00011480499999999907}, {'diff': 0.000114847000000001...</msg>
<status status="PASS" starttime="20201030 18:28:13.986" endtime="20201030 18:28:13.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.994" level="INFO">${RESULT} = {'diff': [0.00011536100000000132, 0.00011484800000000073, 0.00011483300000000168, 0.00011486099999999735, 0.00011480499999999907, 0.00011484700000000125, 0.00011484800000000073, 0.00011484699999999778...</msg>
<status status="PASS" starttime="20201030 18:28:13.991" endtime="20201030 18:28:13.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.998" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:13.997" endtime="20201030 18:28:13.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.001" level="INFO">VALUE: [0.00011536100000000132, 0.00011484800000000073, 0.00011483300000000168, 0.00011486099999999735, 0.00011480499999999907, 0.00011484700000000125, 0.00011484800000000073, 0.00011484699999999778, 0.00011484699999999778, 0.0001148750000000004, 0.00011484700000000125, 0.00011484800000000073, 0.00011480499999999907, 0.00011484700000000125, 0.00011484700000000125, 0.00011484699999999778, 0.00011484799999999726, 0.00011486100000000082, 0.0001148750000000004, 0.00011484700000000125, 0.00011486099999999735, 0.0001148620000000003, 0.00011484700000000125, 0.00011486100000000082, 0.00011483299999999821, 0.00011486100000000082, 0.00011484800000000073, 0.00011486100000000082, 0.00011486099999999735, 0.00011486100000000082, 0.00011488899999999996, 0.0001149169999999991, 0.00011488899999999996, 0.00011483299999999821, 0.00011488899999999996, 0.00011484700000000125, 0.00011484799999999726, 0.00011488899999999996, 0.00011484699999999778, 0.00011483400000000116, 0.00011484699999999778, 0.00011484800000000073, 0.00011483300000000168, 0.00011484700000000125, 0.0001148750000000004, 0.00011486099999999735, 0.00011484800000000073, 0.00011484700000000125, 0.00011477799999999941, 0.00011484800000000073]</msg>
<status status="PASS" starttime="20201030 18:28:13.999" endtime="20201030 18:28:14.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.995" endtime="20201030 18:28:14.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.006" endtime="20201030 18:28:14.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.005" endtime="20201030 18:28:14.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.003" endtime="20201030 18:28:14.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.645" endtime="20201030 18:28:14.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.645" endtime="20201030 18:28:14.027"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.036" endtime="20201030 18:28:14.053"></status>
</kw>
<msg timestamp="20201030 18:28:14.053" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.034" endtime="20201030 18:28:14.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.056" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.054" endtime="20201030 18:28:14.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.057" endtime="20201030 18:28:14.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.031" endtime="20201030 18:28:14.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.029" endtime="20201030 18:28:14.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.067" endtime="20201030 18:28:14.353"></status>
</kw>
<msg timestamp="20201030 18:28:14.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019049958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019177875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.065" endtime="20201030 18:28:14.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019049958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019177875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.357" endtime="20201030 18:28:14.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.366" endtime="20201030 18:28:14.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.063" endtime="20201030 18:28:14.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.060" endtime="20201030 18:28:14.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:14.373" level="INFO">${PHILIP_RES} = [{'diff': 0.0001279170000000017}, {'diff': 0.00012736099999999945}, {'diff': 0.00012741599999999825}, {'diff': 0.00012733399999999978}, {'diff': 0.00012740299999999816}, {'diff': 0.0001273469999999998...</msg>
<status status="PASS" starttime="20201030 18:28:14.369" endtime="20201030 18:28:14.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.377" level="INFO">${RESULT} = {'diff': [0.0001279170000000017, 0.00012736099999999945, 0.00012741599999999825, 0.00012733399999999978, 0.00012740299999999816, 0.00012734699999999988, 0.0001273330000000003, 0.0001273330000000003, 0...</msg>
<status status="PASS" starttime="20201030 18:28:14.374" endtime="20201030 18:28:14.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.381" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:14.380" endtime="20201030 18:28:14.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.384" level="INFO">VALUE: [0.0001279170000000017, 0.00012736099999999945, 0.00012741599999999825, 0.00012733399999999978, 0.00012740299999999816, 0.00012734699999999988, 0.0001273330000000003, 0.0001273330000000003, 0.00012734799999999935, 0.00012736099999999945, 0.00012734699999999988, 0.00012734699999999988, 0.00012734700000000335, 0.00012734799999999935, 0.00012737499999999902, 0.00012734699999999988, 0.0001273330000000003, 0.0001273200000000002, 0.00012734799999999935, 0.00012729099999999813, 0.00012734699999999988, 0.0001272780000000015, 0.00012736199999999892, 0.0001273889999999986, 0.00012738900000000206, 0.00012734699999999988, 0.00012733399999999978, 0.00012734799999999935, 0.0001273889999999986, 0.00012734699999999988, 0.0001273330000000003, 0.00012736100000000292, 0.00012733399999999978, 0.00012731899999999727, 0.00012734699999999988, 0.0001273330000000003, 0.00012734699999999988, 0.00012734799999999935, 0.00012734699999999988, 0.00012734699999999988, 0.00012736099999999945, 0.00012741600000000172, 0.00012734799999999935, 0.00012736099999999945, 0.00012734699999999988, 0.00012736099999999945, 0.00012740299999999816, 0.00012736099999999945, 0.00012736099999999945, 0.00012734699999999988]</msg>
<status status="PASS" starttime="20201030 18:28:14.382" endtime="20201030 18:28:14.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.378" endtime="20201030 18:28:14.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.393" endtime="20201030 18:28:14.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.391" endtime="20201030 18:28:14.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.389" endtime="20201030 18:28:14.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.028" endtime="20201030 18:28:14.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.027" endtime="20201030 18:28:14.414"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.422" endtime="20201030 18:28:14.439"></status>
</kw>
<msg timestamp="20201030 18:28:14.440" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.421" endtime="20201030 18:28:14.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.442" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.441" endtime="20201030 18:28:14.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.443" endtime="20201030 18:28:14.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.418" endtime="20201030 18:28:14.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.416" endtime="20201030 18:28:14.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.453" endtime="20201030 18:28:14.739"></status>
</kw>
<msg timestamp="20201030 18:28:14.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018606292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018747278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.451" endtime="20201030 18:28:14.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018606292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018747278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.743" endtime="20201030 18:28:14.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.751" endtime="20201030 18:28:14.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.449" endtime="20201030 18:28:14.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.447" endtime="20201030 18:28:14.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:14.758" level="INFO">${PHILIP_RES} = [{'diff': 0.0001409859999999992}, {'diff': 0.00014048700000000164}, {'diff': 0.0001404720000000026}, {'diff': 0.0001404720000000026}, {'diff': 0.00014041700000000032}, {'diff': 0.00014045799999999956}...</msg>
<status status="PASS" starttime="20201030 18:28:14.755" endtime="20201030 18:28:14.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.763" level="INFO">${RESULT} = {'diff': [0.0001409859999999992, 0.00014048700000000164, 0.0001404720000000026, 0.0001404720000000026, 0.00014041700000000032, 0.00014045799999999956, 0.00014045799999999956, 0.00014047199999999913, 0...</msg>
<status status="PASS" starttime="20201030 18:28:14.759" endtime="20201030 18:28:14.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.767" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:14.766" endtime="20201030 18:28:14.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.769" level="INFO">VALUE: [0.0001409859999999992, 0.00014048700000000164, 0.0001404720000000026, 0.0001404720000000026, 0.00014041700000000032, 0.00014045799999999956, 0.00014045799999999956, 0.00014047199999999913, 0.00014044399999999999, 0.00014045899999999903, 0.00014042999999999695, 0.0001404590000000025, 0.00014044500000000293, 0.00014051299999999836, 0.0001404859999999987, 0.00014045799999999956, 0.00014045799999999956, 0.00014041700000000032, 0.00014045799999999956, 0.00014045799999999956, 0.0001404019999999978, 0.00014048600000000216, 0.00014045899999999903, 0.00014045899999999903, 0.00014045899999999903, 0.0001404859999999987, 0.0001404859999999987, 0.00014048600000000216, 0.00014045799999999956, 0.00014051399999999784, 0.00014045799999999956, 0.00014044399999999999, 0.00014047199999999913, 0.00014047199999999913, 0.0001404859999999987, 0.00014047199999999913, 0.00014048700000000164, 0.00014047300000000207, 0.00014041700000000032, 0.00014047199999999913, 0.00014045799999999956, 0.00014051399999999784, 0.00014052800000000087, 0.00014047199999999913, 0.00014040300000000075, 0.00014044399999999999, 0.0001404720000000026, 0.0001404720000000026, 0.00014045899999999903, 0.00014045899999999903]</msg>
<status status="PASS" starttime="20201030 18:28:14.768" endtime="20201030 18:28:14.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.763" endtime="20201030 18:28:14.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.781" endtime="20201030 18:28:14.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.780" endtime="20201030 18:28:14.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.778" endtime="20201030 18:28:14.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.414" endtime="20201030 18:28:14.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.414" endtime="20201030 18:28:14.802"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.811" endtime="20201030 18:28:14.828"></status>
</kw>
<msg timestamp="20201030 18:28:14.829" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.809" endtime="20201030 18:28:14.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.831" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.830" endtime="20201030 18:28:14.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.833" endtime="20201030 18:28:14.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.806" endtime="20201030 18:28:14.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.804" endtime="20201030 18:28:14.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.842" endtime="20201030 18:28:15.128"></status>
</kw>
<msg timestamp="20201030 18:28:15.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018362153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018516875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.840" endtime="20201030 18:28:15.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018362153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018516875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.134" endtime="20201030 18:28:15.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.144" endtime="20201030 18:28:15.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.838" endtime="20201030 18:28:15.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.836" endtime="20201030 18:28:15.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:15.154" level="INFO">${PHILIP_RES} = [{'diff': 0.0001547219999999995}, {'diff': 0.0001541670000000002}, {'diff': 0.00015418099999999976}, {'diff': 0.00015419399999999986}, {'diff': 0.00015418099999999976}, {'diff': 0.00015416600000000072...</msg>
<status status="PASS" starttime="20201030 18:28:15.150" endtime="20201030 18:28:15.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.160" level="INFO">${RESULT} = {'diff': [0.0001547219999999995, 0.0001541670000000002, 0.00015418099999999976, 0.00015419399999999986, 0.00015418099999999976, 0.00015416600000000072, 0.00015418099999999976, 0.0001541800000000003, 0...</msg>
<status status="PASS" starttime="20201030 18:28:15.155" endtime="20201030 18:28:15.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.165" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:15.164" endtime="20201030 18:28:15.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.167" level="INFO">VALUE: [0.0001547219999999995, 0.0001541670000000002, 0.00015418099999999976, 0.00015419399999999986, 0.00015418099999999976, 0.00015416600000000072, 0.00015418099999999976, 0.0001541800000000003, 0.0001541950000000028, 0.00015416600000000072, 0.00015411099999999844, 0.0001541110000000019, 0.000154221999999999, 0.0001541800000000003, 0.00015418099999999976, 0.00015419399999999986, 0.00015418100000000323, 0.00015420799999999943, 0.00015419399999999986, 0.00015418099999999976, 0.00015416600000000072, 0.00015420900000000237, 0.00015420799999999943, 0.0001542089999999989, 0.00015419399999999986, 0.00015418099999999976, 0.00015416600000000072, 0.0001541670000000002, 0.0001541800000000003, 0.00015412499999999801, 0.00015419399999999986, 0.00015419499999999933, 0.00015419399999999986, 0.00015419399999999986, 0.0001542500000000016, 0.00015419399999999986, 0.00015418099999999976, 0.0001541800000000003, 0.00015412500000000148, 0.0001541800000000003, 0.00015418099999999976, 0.00015420799999999943, 0.0001541950000000028, 0.0001541800000000003, 0.00015419499999999933, 0.00015415300000000062, 0.000154221999999999, 0.00015419399999999986, 0.00015420799999999943, 0.00015419399999999986]</msg>
<status status="PASS" starttime="20201030 18:28:15.166" endtime="20201030 18:28:15.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.161" endtime="20201030 18:28:15.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.172" endtime="20201030 18:28:15.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.171" endtime="20201030 18:28:15.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.170" endtime="20201030 18:28:15.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.803" endtime="20201030 18:28:15.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.802" endtime="20201030 18:28:15.193"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.202" endtime="20201030 18:28:15.221"></status>
</kw>
<msg timestamp="20201030 18:28:15.222" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.200" endtime="20201030 18:28:15.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.224" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.223" endtime="20201030 18:28:15.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.225" endtime="20201030 18:28:15.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.198" endtime="20201030 18:28:15.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.196" endtime="20201030 18:28:15.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.235" endtime="20201030 18:28:15.540"></status>
</kw>
<msg timestamp="20201030 18:28:15.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019281264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019450292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.233" endtime="20201030 18:28:15.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019281264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019450292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.544" endtime="20201030 18:28:15.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.553" endtime="20201030 18:28:15.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.231" endtime="20201030 18:28:15.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.229" endtime="20201030 18:28:15.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:15.559" level="INFO">${PHILIP_RES} = [{'diff': 0.00016902800000000162}, {'diff': 0.00016859700000000297}, {'diff': 0.00016854099999999775}, {'diff': 0.00016851300000000208}, {'diff': 0.0001685129999999986}, {'diff': 0.0001685269999999981...</msg>
<status status="PASS" starttime="20201030 18:28:15.556" endtime="20201030 18:28:15.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.564" level="INFO">${RESULT} = {'diff': [0.00016902800000000162, 0.00016859700000000297, 0.00016854099999999775, 0.00016851300000000208, 0.0001685129999999986, 0.00016852699999999818, 0.00016854100000000122, 0.00016851399999999808,...</msg>
<status status="PASS" starttime="20201030 18:28:15.560" endtime="20201030 18:28:15.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.568" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:15.567" endtime="20201030 18:28:15.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.571" level="INFO">VALUE: [0.00016902800000000162, 0.00016859700000000297, 0.00016854099999999775, 0.00016851300000000208, 0.0001685129999999986, 0.00016852699999999818, 0.00016854100000000122, 0.00016851399999999808, 0.00016854100000000122, 0.000168612000000002, 0.00016848599999999894, 0.00016851400000000155, 0.00016851399999999808, 0.00016851399999999808, 0.00016855600000000026, 0.00016852799999999765, 0.00016852800000000112, 0.00016852800000000112, 0.00016852799999999765, 0.00016851400000000155, 0.0001685420000000007, 0.00016851400000000155, 0.0001685420000000007, 0.00016854199999999722, 0.00016852800000000112, 0.00016852800000000112, 0.00016852699999999818, 0.00016852700000000165, 0.00016856900000000036, 0.00016852699999999818, 0.00016852700000000165, 0.00016851399999999808, 0.00016852800000000112, 0.00016852800000000112, 0.0001685420000000007, 0.00016852800000000112, 0.00016855600000000026, 0.00016851399999999808, 0.00016851400000000155, 0.00016852799999999765, 0.00016851400000000155, 0.00016852800000000112, 0.00016852799999999765, 0.00016852800000000112, 0.00016856900000000036, 0.00016850000000000198, 0.0001685420000000007, 0.0001685689999999969, 0.00016852700000000165, 0.00016851400000000155]</msg>
<status status="PASS" starttime="20201030 18:28:15.569" endtime="20201030 18:28:15.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.564" endtime="20201030 18:28:15.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.577" endtime="20201030 18:28:15.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.575" endtime="20201030 18:28:15.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.574" endtime="20201030 18:28:15.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.194" endtime="20201030 18:28:15.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.194" endtime="20201030 18:28:15.597"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.606" endtime="20201030 18:28:15.625"></status>
</kw>
<msg timestamp="20201030 18:28:15.626" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.605" endtime="20201030 18:28:15.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.628" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.627" endtime="20201030 18:28:15.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.629" endtime="20201030 18:28:15.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.602" endtime="20201030 18:28:15.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.600" endtime="20201030 18:28:15.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.639" endtime="20201030 18:28:15.925"></status>
</kw>
<msg timestamp="20201030 18:28:15.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018320403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018504458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.637" endtime="20201030 18:28:15.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018320403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018504458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.929" endtime="20201030 18:28:15.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.937" endtime="20201030 18:28:15.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.635" endtime="20201030 18:28:15.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.633" endtime="20201030 18:28:15.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:15.944" level="INFO">${PHILIP_RES} = [{'diff': 0.0001840550000000024}, {'diff': 0.00018348600000000007}, {'diff': 0.00018348600000000007}, {'diff': 0.00018347299999999997}, {'diff': 0.00018347199999999703}, {'diff': 0.0001834450000000008...</msg>
<status status="PASS" starttime="20201030 18:28:15.941" endtime="20201030 18:28:15.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.949" level="INFO">${RESULT} = {'diff': [0.0001840550000000024, 0.00018348600000000007, 0.00018348600000000007, 0.00018347299999999997, 0.00018347199999999703, 0.00018344500000000083, 0.00018348600000000007, 0.00018347299999999997,...</msg>
<status status="PASS" starttime="20201030 18:28:15.945" endtime="20201030 18:28:15.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.953" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:15.952" endtime="20201030 18:28:15.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.956" level="INFO">VALUE: [0.0001840550000000024, 0.00018348600000000007, 0.00018348600000000007, 0.00018347299999999997, 0.00018347199999999703, 0.00018344500000000083, 0.00018348600000000007, 0.00018347299999999997, 0.00018348600000000007, 0.0001835269999999993, 0.0001834720000000005, 0.00018349999999999964, 0.00018348600000000007, 0.00018345800000000093, 0.0001834720000000005, 0.00018348600000000007, 0.0001835000000000031, 0.00018348600000000007, 0.00018348600000000007, 0.00018349999999999964, 0.00018354099999999887, 0.0001834720000000005, 0.00018338899999999908, 0.00018344400000000136, 0.00018345800000000093, 0.0001834590000000004, 0.0001834720000000005, 0.00018349999999999964, 0.0001834720000000005, 0.00018347299999999997, 0.00018349999999999964, 0.00018349999999999964, 0.0001834720000000005, 0.0001835139999999992, 0.0001834720000000005, 0.00018345800000000093, 0.0001834720000000005, 0.00018345800000000093, 0.00018348699999999954, 0.00018348600000000007, 0.00018348600000000007, 0.00018348600000000007, 0.00018348600000000007, 0.0001834720000000005, 0.00018348600000000007, 0.00018341600000000222, 0.00018345800000000093, 0.0001834590000000004, 0.0001834720000000005, 0.00018347299999999997]</msg>
<status status="PASS" starttime="20201030 18:28:15.954" endtime="20201030 18:28:15.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.950" endtime="20201030 18:28:15.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.961" endtime="20201030 18:28:15.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.960" endtime="20201030 18:28:15.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.958" endtime="20201030 18:28:15.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.598" endtime="20201030 18:28:15.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.598" endtime="20201030 18:28:15.982"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.991" endtime="20201030 18:28:16.011"></status>
</kw>
<msg timestamp="20201030 18:28:16.011" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.989" endtime="20201030 18:28:16.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.014" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.012" endtime="20201030 18:28:16.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.015" endtime="20201030 18:28:16.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.986" endtime="20201030 18:28:16.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.984" endtime="20201030 18:28:16.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.024" endtime="20201030 18:28:16.309"></status>
</kw>
<msg timestamp="20201030 18:28:16.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018272667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018472208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.023" endtime="20201030 18:28:16.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018272667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018472208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.314" endtime="20201030 18:28:16.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.322" endtime="20201030 18:28:16.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.020" endtime="20201030 18:28:16.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.018" endtime="20201030 18:28:16.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:16.330" level="INFO">${PHILIP_RES} = [{'diff': 0.000199541000000001}, {'diff': 0.0001990690000000031}, {'diff': 0.00019904199999999997}, {'diff': 0.00019902799999999693}, {'diff': 0.0001990410000000005}, {'diff': 0.0001990280000000004}, ...</msg>
<status status="PASS" starttime="20201030 18:28:16.326" endtime="20201030 18:28:16.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.334" level="INFO">${RESULT} = {'diff': [0.000199541000000001, 0.0001990690000000031, 0.00019904199999999997, 0.00019902799999999693, 0.0001990410000000005, 0.0001990280000000004, 0.00019905599999999954, 0.00019900000000000126, 0.0...</msg>
<status status="PASS" starttime="20201030 18:28:16.331" endtime="20201030 18:28:16.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.338" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:16.337" endtime="20201030 18:28:16.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.341" level="INFO">VALUE: [0.000199541000000001, 0.0001990690000000031, 0.00019904199999999997, 0.00019902799999999693, 0.0001990410000000005, 0.0001990280000000004, 0.00019905599999999954, 0.00019900000000000126, 0.0001990829999999992, 0.00019902700000000093, 0.00019895899999999855, 0.00019912499999999791, 0.00019904199999999997, 0.00019905599999999954, 0.00019904199999999997, 0.00019905599999999954, 0.00019904199999999997, 0.00019902700000000093, 0.00019911100000000181, 0.00019904199999999997, 0.0001990280000000004, 0.00019906899999999964, 0.00019906899999999964, 0.00019905599999999954, 0.00019904200000000344, 0.0001990410000000005, 0.00019904099999999703, 0.00019904199999999997, 0.00019904199999999997, 0.00019904199999999997, 0.00019905500000000007, 0.0001990280000000004, 0.0001990699999999991, 0.00019904199999999997, 0.00019902700000000093, 0.00019906899999999964, 0.00019905599999999954, 0.00019904199999999997, 0.0001990280000000004, 0.0001990410000000005, 0.00019904199999999997, 0.000199056000000003, 0.0001990280000000004, 0.0001990410000000005, 0.00019904199999999997, 0.00019904199999999997, 0.00019901400000000083, 0.00019902799999999693, 0.00019904199999999997, 0.00019902799999999693]</msg>
<status status="PASS" starttime="20201030 18:28:16.340" endtime="20201030 18:28:16.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.335" endtime="20201030 18:28:16.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.346" endtime="20201030 18:28:16.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.345" endtime="20201030 18:28:16.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.343" endtime="20201030 18:28:16.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.983" endtime="20201030 18:28:16.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.982" endtime="20201030 18:28:16.367"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.376" endtime="20201030 18:28:16.397"></status>
</kw>
<msg timestamp="20201030 18:28:16.398" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.374" endtime="20201030 18:28:16.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.400" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.399" endtime="20201030 18:28:16.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.401" endtime="20201030 18:28:16.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.371" endtime="20201030 18:28:16.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.369" endtime="20201030 18:28:16.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.411" endtime="20201030 18:28:16.697"></status>
</kw>
<msg timestamp="20201030 18:28:16.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019158, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019373736, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:16.409" endtime="20201030 18:28:16.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019158, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019373736, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:16.701" endtime="20201030 18:28:16.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.709" endtime="20201030 18:28:16.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.407" endtime="20201030 18:28:16.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.405" endtime="20201030 18:28:16.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:16.716" level="INFO">${PHILIP_RES} = [{'diff': 0.00021573599999999762}, {'diff': 0.00021522200000000102}, {'diff': 0.00021522200000000102}, {'diff': 0.00021522199999999755}, {'diff': 0.00021522200000000102}, {'diff': 0.000215208000000001...</msg>
<status status="PASS" starttime="20201030 18:28:16.713" endtime="20201030 18:28:16.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.720" level="INFO">${RESULT} = {'diff': [0.00021573599999999762, 0.00021522200000000102, 0.00021522200000000102, 0.00021522199999999755, 0.00021522200000000102, 0.00021520800000000145, 0.0002152779999999993, 0.00021520800000000145,...</msg>
<status status="PASS" starttime="20201030 18:28:16.717" endtime="20201030 18:28:16.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.725" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:16.724" endtime="20201030 18:28:16.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.727" level="INFO">VALUE: [0.00021573599999999762, 0.00021522200000000102, 0.00021522200000000102, 0.00021522199999999755, 0.00021522200000000102, 0.00021520800000000145, 0.0002152779999999993, 0.00021520800000000145, 0.00021520800000000145, 0.0002152360000000006, 0.00021522199999999755, 0.0002152360000000006, 0.00021520799999999798, 0.00021522200000000102, 0.00021522200000000102, 0.00021519400000000188, 0.00021520799999999798, 0.00021520800000000145, 0.00021522200000000102, 0.00021525000000000016, 0.00021517999999999884, 0.00021529199999999887, 0.00021520899999999746, 0.0002151519999999997, 0.00021522200000000102, 0.00021520799999999798, 0.00021520900000000093, 0.00021519500000000136, 0.00021520899999999746, 0.00021520899999999746, 0.0002152230000000005, 0.00021523700000000007, 0.0002151949999999979, 0.00021520900000000093, 0.0002152360000000006, 0.00021520899999999746, 0.00021522200000000102, 0.00021522200000000102, 0.00021520799999999798, 0.00021520800000000145, 0.00021522200000000102, 0.00021520799999999798, 0.00021522200000000102, 0.00021526399999999973, 0.00021522199999999755, 0.00021520800000000145, 0.00021515300000000265, 0.0002152360000000006, 0.00021526399999999973, 0.00021522199999999755]</msg>
<status status="PASS" starttime="20201030 18:28:16.726" endtime="20201030 18:28:16.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.721" endtime="20201030 18:28:16.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.733" endtime="20201030 18:28:16.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.732" endtime="20201030 18:28:16.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.731" endtime="20201030 18:28:16.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.368" endtime="20201030 18:28:16.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.367" endtime="20201030 18:28:16.754"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.763" endtime="20201030 18:28:16.785"></status>
</kw>
<msg timestamp="20201030 18:28:16.785" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.761" endtime="20201030 18:28:16.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.788" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.787" endtime="20201030 18:28:16.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.789" endtime="20201030 18:28:16.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.759" endtime="20201030 18:28:16.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.757" endtime="20201030 18:28:16.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.799" endtime="20201030 18:28:17.085"></status>
</kw>
<msg timestamp="20201030 18:28:17.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018330722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018563264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.797" endtime="20201030 18:28:17.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018330722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018563264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.090" endtime="20201030 18:28:17.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.098" endtime="20201030 18:28:17.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.794" endtime="20201030 18:28:17.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.793" endtime="20201030 18:28:17.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:17.104" level="INFO">${PHILIP_RES} = [{'diff': 0.00023254199999999878}, {'diff': 0.00023201399999999914}, {'diff': 0.000231986}, {'diff': 0.00023202699999999923}, {'diff': 0.00023201399999999914}, {'diff': 0.00023202699999999923}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:28:17.101" endtime="20201030 18:28:17.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.109" level="INFO">${RESULT} = {'diff': [0.00023254199999999878, 0.00023201399999999914, 0.000231986, 0.00023202699999999923, 0.00023201399999999914, 0.00023202699999999923, 0.00023202800000000218, 0.0002320279999999987, 0.00023200...</msg>
<status status="PASS" starttime="20201030 18:28:17.106" endtime="20201030 18:28:17.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.114" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:17.113" endtime="20201030 18:28:17.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.117" level="INFO">VALUE: [0.00023254199999999878, 0.00023201399999999914, 0.000231986, 0.00023202699999999923, 0.00023201399999999914, 0.00023202699999999923, 0.00023202800000000218, 0.0002320279999999987, 0.00023200000000000304, 0.00023201399999999914, 0.00023191700000000162, 0.00023201399999999914, 0.00023199999999999957, 0.0002320140000000026, 0.000231986, 0.00023202699999999923, 0.000231986, 0.00023201399999999914, 0.000231986, 0.00023201399999999914, 0.000231986, 0.00023204199999999828, 0.00023199999999999957, 0.000231986, 0.00023201399999999914, 0.00023201399999999914, 0.00023199999999999957, 0.00023202800000000218, 0.000231986, 0.00023208400000000046, 0.0002320279999999987, 0.0002320140000000026, 0.00023201399999999914, 0.00023199999999999957, 0.00023200000000000304, 0.00023201399999999914, 0.0002320140000000026, 0.0002320409999999988, 0.00023201399999999914, 0.00023197200000000043, 0.00023205599999999785, 0.00023201399999999914, 0.0002319310000000012, 0.00023202800000000218, 0.00023199999999999957, 0.00023205499999999837, 0.000231986, 0.00023201399999999914, 0.00023204200000000175, 0.00023201399999999567]</msg>
<status status="PASS" starttime="20201030 18:28:17.115" endtime="20201030 18:28:17.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.110" endtime="20201030 18:28:17.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.122" endtime="20201030 18:28:17.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.120" endtime="20201030 18:28:17.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.119" endtime="20201030 18:28:17.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.755" endtime="20201030 18:28:17.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.755" endtime="20201030 18:28:17.143"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.151" endtime="20201030 18:28:17.174"></status>
</kw>
<msg timestamp="20201030 18:28:17.174" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.150" endtime="20201030 18:28:17.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.177" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.176" endtime="20201030 18:28:17.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.178" endtime="20201030 18:28:17.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.147" endtime="20201030 18:28:17.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.145" endtime="20201030 18:28:17.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.187" endtime="20201030 18:28:17.474"></status>
</kw>
<msg timestamp="20201030 18:28:17.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018254208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018504111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.186" endtime="20201030 18:28:17.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018254208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018504111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.478" endtime="20201030 18:28:17.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.486" endtime="20201030 18:28:17.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.183" endtime="20201030 18:28:17.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.181" endtime="20201030 18:28:17.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:17.494" level="INFO">${PHILIP_RES} = [{'diff': 0.00024990299999999924}, {'diff': 0.0002494169999999983}, {'diff': 0.0002494170000000018}, {'diff': 0.0002493749999999996}, {'diff': 0.00024944400000000144}, {'diff': 0.0002493619999999995},...</msg>
<status status="PASS" starttime="20201030 18:28:17.491" endtime="20201030 18:28:17.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.498" level="INFO">${RESULT} = {'diff': [0.00024990299999999924, 0.0002494169999999983, 0.0002494170000000018, 0.0002493749999999996, 0.00024944400000000144, 0.0002493619999999995, 0.00024940199999999926, 0.00024940199999999926, 0....</msg>
<status status="PASS" starttime="20201030 18:28:17.495" endtime="20201030 18:28:17.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.503" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:17.502" endtime="20201030 18:28:17.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.505" level="INFO">VALUE: [0.00024990299999999924, 0.0002494169999999983, 0.0002494170000000018, 0.0002493749999999996, 0.00024944400000000144, 0.0002493619999999995, 0.00024940199999999926, 0.00024940199999999926, 0.0002494299999999984, 0.0002494030000000022, 0.000249443999999998, 0.0002494170000000018, 0.0002494169999999983, 0.0002494309999999979, 0.00024943000000000187, 0.00024938899999999917, 0.0002494160000000023, 0.00024941599999999883, 0.0002494590000000005, 0.0002494169999999983, 0.00024943100000000135, 0.0002494030000000022, 0.0002494030000000022, 0.00024940299999999874, 0.0002493749999999996, 0.0002493749999999996, 0.0002494030000000022, 0.0002494170000000018, 0.00024938899999999917, 0.00024940299999999874, 0.0002493749999999996, 0.0002494170000000018, 0.00024940199999999926, 0.0002494030000000022, 0.00024948600000000015, 0.00024941599999999883, 0.0002494299999999984, 0.0002494169999999983, 0.00024943100000000135, 0.0002494169999999983, 0.0002494309999999979, 0.0002494169999999983, 0.00024948600000000015, 0.0002494160000000023, 0.0002494160000000023, 0.00024940299999999874, 0.00024943100000000135, 0.0002494590000000005, 0.0002494170000000018, 0.0002493889999999957]</msg>
<status status="PASS" starttime="20201030 18:28:17.504" endtime="20201030 18:28:17.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.499" endtime="20201030 18:28:17.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.511" endtime="20201030 18:28:17.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.509" endtime="20201030 18:28:17.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.508" endtime="20201030 18:28:17.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.144" endtime="20201030 18:28:17.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.143" endtime="20201030 18:28:17.531"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.540" endtime="20201030 18:28:17.564"></status>
</kw>
<msg timestamp="20201030 18:28:17.565" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.538" endtime="20201030 18:28:17.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.567" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.566" endtime="20201030 18:28:17.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.568" endtime="20201030 18:28:17.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.536" endtime="20201030 18:28:17.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.534" endtime="20201030 18:28:17.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.578" endtime="20201030 18:28:17.864"></status>
</kw>
<msg timestamp="20201030 18:28:17.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019143597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019411569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.576" endtime="20201030 18:28:17.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019143597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019411569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.869" endtime="20201030 18:28:17.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.877" endtime="20201030 18:28:17.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.574" endtime="20201030 18:28:17.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.572" endtime="20201030 18:28:17.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:17.884" level="INFO">${PHILIP_RES} = [{'diff': 0.00026797200000000174}, {'diff': 0.00026741700000000243}, {'diff': 0.0002674029999999994}, {'diff': 0.00026741699999999896}, {'diff': 0.00026741699999999896}, {'diff': 0.0002674440000000021...</msg>
<status status="PASS" starttime="20201030 18:28:17.880" endtime="20201030 18:28:17.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.888" level="INFO">${RESULT} = {'diff': [0.00026797200000000174, 0.00026741700000000243, 0.0002674029999999994, 0.00026741699999999896, 0.00026741699999999896, 0.0002674440000000021, 0.00026742999999999906, 0.0002674159999999995, 0...</msg>
<status status="PASS" starttime="20201030 18:28:17.885" endtime="20201030 18:28:17.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.892" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:17.891" endtime="20201030 18:28:17.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.895" level="INFO">VALUE: [0.00026797200000000174, 0.00026741700000000243, 0.0002674029999999994, 0.00026741699999999896, 0.00026741699999999896, 0.0002674440000000021, 0.00026742999999999906, 0.0002674159999999995, 0.00026742999999999906, 0.0002674159999999995, 0.0002674159999999995, 0.00026734699999999764, 0.0002674159999999995, 0.0002674300000000025, 0.0002674159999999995, 0.0002674300000000025, 0.0002674860000000008, 0.0002674440000000021, 0.00026742999999999906, 0.0002674159999999995, 0.00026742999999999906, 0.00026741700000000243, 0.00026744399999999863, 0.0002674440000000021, 0.0002673889999999998, 0.000267431000000002, 0.00026741699999999896, 0.000267431000000002, 0.00026743099999999853, 0.00026740300000000286, 0.0002674029999999994, 0.00026745900000000114, 0.00026743099999999853, 0.000267431000000002, 0.00026741699999999896, 0.00026747200000000124, 0.00026741699999999896, 0.000267431000000002, 0.00026741699999999896, 0.00026741700000000243, 0.00026741700000000243, 0.00026743099999999853, 0.00026741699999999896, 0.00026743099999999853, 0.0002674029999999994, 0.00026741699999999896, 0.00026741699999999896, 0.00026743099999999853, 0.00026743100000000547, 0.00026743099999999853]</msg>
<status status="PASS" starttime="20201030 18:28:17.893" endtime="20201030 18:28:17.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.889" endtime="20201030 18:28:17.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.903" endtime="20201030 18:28:17.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.901" endtime="20201030 18:28:17.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.900" endtime="20201030 18:28:17.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.532" endtime="20201030 18:28:17.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.532" endtime="20201030 18:28:17.924"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.933" endtime="20201030 18:28:17.957"></status>
</kw>
<msg timestamp="20201030 18:28:17.957" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.931" endtime="20201030 18:28:17.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.960" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.959" endtime="20201030 18:28:17.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.961" endtime="20201030 18:28:17.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.928" endtime="20201030 18:28:17.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.926" endtime="20201030 18:28:17.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.971" endtime="20201030 18:28:18.257"></status>
</kw>
<msg timestamp="20201030 18:28:18.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018358042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018644597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.969" endtime="20201030 18:28:18.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018358042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018644597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.261" endtime="20201030 18:28:18.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.270" endtime="20201030 18:28:18.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.966" endtime="20201030 18:28:18.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.964" endtime="20201030 18:28:18.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:18.276" level="INFO">${PHILIP_RES} = [{'diff': 0.00028655499999999737}, {'diff': 0.0002860689999999999}, {'diff': 0.0002860560000000033}, {'diff': 0.0002860559999999998}, {'diff': 0.0002860699999999994}, {'diff': 0.0002860559999999998}, ...</msg>
<status status="PASS" starttime="20201030 18:28:18.273" endtime="20201030 18:28:18.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.281" level="INFO">${RESULT} = {'diff': [0.00028655499999999737, 0.0002860689999999999, 0.0002860560000000033, 0.0002860559999999998, 0.0002860699999999994, 0.0002860559999999998, 0.00028604100000000077, 0.00028605500000000034, 0.0...</msg>
<status status="PASS" starttime="20201030 18:28:18.277" endtime="20201030 18:28:18.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.286" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:18.285" endtime="20201030 18:28:18.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.288" level="INFO">VALUE: [0.00028655499999999737, 0.0002860689999999999, 0.0002860560000000033, 0.0002860559999999998, 0.0002860699999999994, 0.0002860559999999998, 0.00028604100000000077, 0.00028605500000000034, 0.00028604200000000024, 0.00028607000000000285, 0.00028600000000000153, 0.0002860559999999998, 0.00028604100000000077, 0.00028604100000000077, 0.00028604100000000077, 0.0002860559999999998, 0.0002860279999999972, 0.0002860559999999998, 0.0002860409999999973, 0.0002860689999999999, 0.00028604200000000024, 0.0002860559999999998, 0.0002860559999999998, 0.000286098000000002, 0.0002860559999999998, 0.00028604100000000077, 0.00028605500000000034, 0.00028604200000000024, 0.00028604200000000024, 0.0002860559999999998, 0.00028605500000000034, 0.00028604100000000077, 0.0002860829999999995, 0.00028602800000000067, 0.00028608399999999895, 0.00028595799999999935, 0.0002860689999999999, 0.0002860270000000012, 0.00028605500000000034, 0.00028604200000000024, 0.00028604199999999677, 0.00028604200000000024, 0.00028605500000000034, 0.0002860140000000011, 0.00028604100000000077, 0.0002860559999999998, 0.00028600000000000153, 0.0002861109999999986, 0.00028605500000000034, 0.00028604100000000077]</msg>
<status status="PASS" starttime="20201030 18:28:18.287" endtime="20201030 18:28:18.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.282" endtime="20201030 18:28:18.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.293" endtime="20201030 18:28:18.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.292" endtime="20201030 18:28:18.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.291" endtime="20201030 18:28:18.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.925" endtime="20201030 18:28:18.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.924" endtime="20201030 18:28:18.314"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.323" endtime="20201030 18:28:18.349"></status>
</kw>
<msg timestamp="20201030 18:28:18.349" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.321" endtime="20201030 18:28:18.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.352" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.350" endtime="20201030 18:28:18.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.353" endtime="20201030 18:28:18.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.319" endtime="20201030 18:28:18.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.317" endtime="20201030 18:28:18.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.362" endtime="20201030 18:28:18.648"></status>
</kw>
<msg timestamp="20201030 18:28:18.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018389069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018694847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.360" endtime="20201030 18:28:18.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018389069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018694847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.653" endtime="20201030 18:28:18.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.661" endtime="20201030 18:28:18.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.358" endtime="20201030 18:28:18.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.356" endtime="20201030 18:28:18.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:18.669" level="INFO">${PHILIP_RES} = [{'diff': 0.0003057779999999996}, {'diff': 0.00030526399999999954}, {'diff': 0.00030529200000000214}, {'diff': 0.00030526399999999954}, {'diff': 0.0003052779999999991}, {'diff': 0.00030529100000000267...</msg>
<status status="PASS" starttime="20201030 18:28:18.665" endtime="20201030 18:28:18.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.673" level="INFO">${RESULT} = {'diff': [0.0003057779999999996, 0.00030526399999999954, 0.00030529200000000214, 0.00030526399999999954, 0.0003052779999999991, 0.00030529100000000267, 0.00030530599999999825, 0.00030530499999999877, ...</msg>
<status status="PASS" starttime="20201030 18:28:18.670" endtime="20201030 18:28:18.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.678" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:18.677" endtime="20201030 18:28:18.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.680" level="INFO">VALUE: [0.0003057779999999996, 0.00030526399999999954, 0.00030529200000000214, 0.00030526399999999954, 0.0003052779999999991, 0.00030529100000000267, 0.00030530599999999825, 0.00030530499999999877, 0.0003053200000000013, 0.0003052909999999992, 0.00030529200000000214, 0.0003052780000000026, 0.0003052779999999991, 0.0003053060000000017, 0.00030529100000000267, 0.0003052919999999987, 0.0003052909999999992, 0.0003053329999999979, 0.0003052909999999992, 0.0003053060000000017, 0.0003053750000000001, 0.00030524999999999997, 0.0003052779999999991, 0.0003053469999999975, 0.0003052779999999991, 0.00030529100000000267, 0.0003052919999999987, 0.0003052909999999992, 0.00030529200000000214, 0.00030520800000000126, 0.0003052779999999991, 0.0003053060000000017, 0.0003052919999999987, 0.0003052919999999987, 0.00030529100000000267, 0.00030530500000000224, 0.0003052909999999992, 0.0003052780000000026, 0.0003052779999999991, 0.0003052919999999987, 0.00030530599999999825, 0.0003053050000000057, 0.0003052779999999991, 0.00030530499999999877, 0.00030524999999999997, 0.00030527699999999963, 0.0003052779999999991, 0.00030526399999999954, 0.0003052919999999987, 0.0003052779999999991]</msg>
<status status="PASS" starttime="20201030 18:28:18.679" endtime="20201030 18:28:18.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.674" endtime="20201030 18:28:18.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.685" endtime="20201030 18:28:18.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.684" endtime="20201030 18:28:18.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.683" endtime="20201030 18:28:18.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.315" endtime="20201030 18:28:18.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.315" endtime="20201030 18:28:18.706"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.715" endtime="20201030 18:28:18.743"></status>
</kw>
<msg timestamp="20201030 18:28:18.743" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.713" endtime="20201030 18:28:18.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.746" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.744" endtime="20201030 18:28:18.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.747" endtime="20201030 18:28:18.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.711" endtime="20201030 18:28:18.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.709" endtime="20201030 18:28:18.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.756" endtime="20201030 18:28:19.043"></status>
</kw>
<msg timestamp="20201030 18:28:19.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019071653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.755" endtime="20201030 18:28:19.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019071653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.047" endtime="20201030 18:28:19.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.055" endtime="20201030 18:28:19.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.752" endtime="20201030 18:28:19.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.750" endtime="20201030 18:28:19.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:19.062" level="INFO">${PHILIP_RES} = [{'diff': 0.00032565299999999867}, {'diff': 0.00032517999999999783}, {'diff': 0.00032513900000000207}, {'diff': 0.0003251250000000025}, {'diff': 0.0003251389999999986}, {'diff': 0.00032516599999999826...</msg>
<status status="PASS" starttime="20201030 18:28:19.059" endtime="20201030 18:28:19.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.066" level="INFO">${RESULT} = {'diff': [0.00032565299999999867, 0.00032517999999999783, 0.00032513900000000207, 0.0003251250000000025, 0.0003251389999999986, 0.00032516599999999826, 0.0003251389999999986, 0.0003250830000000003, 0....</msg>
<status status="PASS" starttime="20201030 18:28:19.063" endtime="20201030 18:28:19.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.071" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:19.070" endtime="20201030 18:28:19.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.073" level="INFO">VALUE: [0.00032565299999999867, 0.00032517999999999783, 0.00032513900000000207, 0.0003251250000000025, 0.0003251389999999986, 0.00032516599999999826, 0.0003251389999999986, 0.0003250830000000003, 0.0003251389999999986, 0.0003250969999999999, 0.00032513900000000207, 0.00032511099999999946, 0.0003251389999999986, 0.000325124999999999, 0.00032513900000000207, 0.00032513900000000207, 0.00032515300000000164, 0.00032515300000000164, 0.0003251389999999986, 0.000325124999999999, 0.00032515299999999817, 0.00032516699999999774, 0.00032515300000000164, 0.00032509800000000283, 0.0003251389999999986, 0.0003251800000000013, 0.00032515299999999817, 0.00032515299999999817, 0.0003250969999999999, 0.00032513900000000207, 0.00032513900000000207, 0.000325124999999999, 0.0003250830000000003, 0.0003251389999999951, 0.00032509700000000336, 0.0003251389999999951, 0.00032516600000000173, 0.00032519399999999393, 0.0003251250000000025, 0.0003251670000000012, 0.0003251670000000012, 0.00032515300000000164, 0.0003251800000000013, 0.0003251800000000013, 0.0003251949999999934, 0.0003250830000000038, 0.00032513900000000207, 0.0003251389999999951, 0.00032513900000000207, 0.0003251519999999952]</msg>
<status status="PASS" starttime="20201030 18:28:19.072" endtime="20201030 18:28:19.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.067" endtime="20201030 18:28:19.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.079" endtime="20201030 18:28:19.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.078" endtime="20201030 18:28:19.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.077" endtime="20201030 18:28:19.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.707" endtime="20201030 18:28:19.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.706" endtime="20201030 18:28:19.100"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.111" endtime="20201030 18:28:19.139"></status>
</kw>
<msg timestamp="20201030 18:28:19.140" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.109" endtime="20201030 18:28:19.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.142" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.141" endtime="20201030 18:28:19.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.144" endtime="20201030 18:28:19.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.105" endtime="20201030 18:28:19.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.103" endtime="20201030 18:28:19.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.153" endtime="20201030 18:28:19.439"></status>
</kw>
<msg timestamp="20201030 18:28:19.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205445, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:19.151" endtime="20201030 18:28:19.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205445, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:19.443" endtime="20201030 18:28:19.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.451" endtime="20201030 18:28:19.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.149" endtime="20201030 18:28:19.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.147" endtime="20201030 18:28:19.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:19.458" level="INFO">${PHILIP_RES} = [{'diff': 0.0003461249999999992}, {'diff': 0.00034561099999999914}, {'diff': 0.0003456119999999986}, {'diff': 0.0003456250000000022}, {'diff': 0.00034561099999999914}, {'diff': 0.0003456249999999987},...</msg>
<status status="PASS" starttime="20201030 18:28:19.455" endtime="20201030 18:28:19.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.464" level="INFO">${RESULT} = {'diff': [0.0003461249999999992, 0.00034561099999999914, 0.0003456119999999986, 0.0003456250000000022, 0.00034561099999999914, 0.0003456249999999987, 0.000345583, 0.00034559699999999957, 0.000345583, ...</msg>
<status status="PASS" starttime="20201030 18:28:19.459" endtime="20201030 18:28:19.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.473" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:19.471" endtime="20201030 18:28:19.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.477" level="INFO">VALUE: [0.0003461249999999992, 0.00034561099999999914, 0.0003456119999999986, 0.0003456250000000022, 0.00034561099999999914, 0.0003456249999999987, 0.000345583, 0.00034559699999999957, 0.000345583, 0.0003456110000000026, 0.00034561099999999914, 0.0003456250000000022, 0.00034559699999999957, 0.00034556900000000043, 0.00034559699999999957, 0.0003456660000000014, 0.00034561099999999914, 0.00034559699999999957, 0.0003456250000000022, 0.00034559699999999957, 0.0003456110000000026, 0.0003456530000000013, 0.00034563900000000175, 0.0003456110000000026, 0.00034559799999999904, 0.00034561099999999914, 0.000345583, 0.00034559799999999904, 0.00034561099999999914, 0.00034559700000000304, 0.0003456670000000009, 0.0003456110000000026, 0.00034562499999999524, 0.00034563900000000175, 0.00034558299999999653, 0.0003456110000000026, 0.0003456530000000013, 0.0003456110000000026, 0.00034561099999999567, 0.0003456110000000026, 0.0003455980000000025, 0.00034559700000000304, 0.0003456110000000026, 0.00034561099999999567, 0.0003456110000000026, 0.0003455969999999961, 0.0003456120000000021, 0.00034561099999999567, 0.0003456110000000026, 0.00034561099999999567]</msg>
<status status="PASS" starttime="20201030 18:28:19.475" endtime="20201030 18:28:19.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.466" endtime="20201030 18:28:19.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.486" endtime="20201030 18:28:19.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.483" endtime="20201030 18:28:19.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.481" endtime="20201030 18:28:19.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.101" endtime="20201030 18:28:19.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.101" endtime="20201030 18:28:19.507"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.516" endtime="20201030 18:28:19.545"></status>
</kw>
<msg timestamp="20201030 18:28:19.545" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.514" endtime="20201030 18:28:19.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.548" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.546" endtime="20201030 18:28:19.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.549" endtime="20201030 18:28:19.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.512" endtime="20201030 18:28:19.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.510" endtime="20201030 18:28:19.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.558" endtime="20201030 18:28:19.845"></status>
</kw>
<msg timestamp="20201030 18:28:19.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018522542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018889736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.557" endtime="20201030 18:28:19.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018522542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018889736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.849" endtime="20201030 18:28:19.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.857" endtime="20201030 18:28:19.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.554" endtime="20201030 18:28:19.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.552" endtime="20201030 18:28:19.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:19.865" level="INFO">${PHILIP_RES} = [{'diff': 0.00036719400000000124}, {'diff': 0.0003666950000000002}, {'diff': 0.00036668100000000065}, {'diff': 0.00036668100000000065}, {'diff': 0.0003666670000000011}, {'diff': 0.00036668000000000117...</msg>
<status status="PASS" starttime="20201030 18:28:19.861" endtime="20201030 18:28:19.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.868" level="INFO">${RESULT} = {'diff': [0.00036719400000000124, 0.0003666950000000002, 0.00036668100000000065, 0.00036668100000000065, 0.0003666670000000011, 0.00036668000000000117, 0.00036669400000000074, 0.00036669400000000074, ...</msg>
<status status="PASS" starttime="20201030 18:28:19.865" endtime="20201030 18:28:19.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.873" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:19.872" endtime="20201030 18:28:19.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.875" level="INFO">VALUE: [0.00036719400000000124, 0.0003666950000000002, 0.00036668100000000065, 0.00036668100000000065, 0.0003666670000000011, 0.00036668000000000117, 0.00036669400000000074, 0.00036669400000000074, 0.00036668000000000117, 0.00036668000000000117, 0.0003667500000000025, 0.00036668100000000065, 0.0003666950000000002, 0.00036668100000000065, 0.0003666809999999972, 0.0003666669999999976, 0.00036669400000000074, 0.0003666799999999977, 0.0003666799999999977, 0.0003666799999999977, 0.0003666799999999977, 0.00036672299999999936, 0.0003666669999999976, 0.0003666950000000002, 0.00036668100000000065, 0.00036668000000000117, 0.00036669400000000074, 0.0003667219999999999, 0.00036668000000000117, 0.00036669400000000074, 0.0003666670000000011, 0.0003666530000000015, 0.0003666950000000002, 0.0003666950000000002, 0.0003666950000000002, 0.0003666950000000002, 0.00036668100000000065, 0.00036673599999999945, 0.0003667219999999999, 0.00036669400000000074, 0.00036662500000000237, 0.00036668100000000065, 0.0003666670000000011, 0.00036673599999999945, 0.0003667089999999998, 0.00036668100000000065, 0.00036668000000000117, 0.00036668000000000117, 0.0003666660000000016, 0.00036669400000000074]</msg>
<status status="PASS" starttime="20201030 18:28:19.874" endtime="20201030 18:28:19.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.869" endtime="20201030 18:28:19.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.885" endtime="20201030 18:28:19.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.884" endtime="20201030 18:28:19.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.883" endtime="20201030 18:28:19.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.508" endtime="20201030 18:28:19.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.508" endtime="20201030 18:28:19.906"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.914" endtime="20201030 18:28:19.945"></status>
</kw>
<msg timestamp="20201030 18:28:19.945" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.913" endtime="20201030 18:28:19.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.948" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.946" endtime="20201030 18:28:19.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.949" endtime="20201030 18:28:19.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.910" endtime="20201030 18:28:19.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.908" endtime="20201030 18:28:19.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.958" endtime="20201030 18:28:20.243"></status>
</kw>
<msg timestamp="20201030 18:28:20.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018575625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018964514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.956" endtime="20201030 18:28:20.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018575625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018964514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.247" endtime="20201030 18:28:20.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.255" endtime="20201030 18:28:20.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.954" endtime="20201030 18:28:20.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.952" endtime="20201030 18:28:20.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:20.261" level="INFO">${PHILIP_RES} = [{'diff': 0.0003888889999999999}, {'diff': 0.00038837499999999983}, {'diff': 0.00038837499999999983}, {'diff': 0.00038834800000000017}, {'diff': 0.00038837499999999983}, {'diff': 0.0003884029999999989...</msg>
<status status="PASS" starttime="20201030 18:28:20.258" endtime="20201030 18:28:20.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.265" level="INFO">${RESULT} = {'diff': [0.0003888889999999999, 0.00038837499999999983, 0.00038837499999999983, 0.00038834800000000017, 0.00038837499999999983, 0.00038840299999999897, 0.00038837499999999983, 0.0003883609999999968, ...</msg>
<status status="PASS" starttime="20201030 18:28:20.262" endtime="20201030 18:28:20.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.269" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:20.268" endtime="20201030 18:28:20.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.272" level="INFO">VALUE: [0.0003888889999999999, 0.00038837499999999983, 0.00038837499999999983, 0.00038834800000000017, 0.00038837499999999983, 0.00038840299999999897, 0.00038837499999999983, 0.0003883609999999968, 0.00038838799999999993, 0.00038836100000000026, 0.0003883889999999994, 0.0003883330000000011, 0.00038837499999999983, 0.00038837499999999983, 0.0003883750000000033, 0.00038834800000000017, 0.00038837499999999983, 0.0003884440000000017, 0.0003883889999999994, 0.00038837499999999983, 0.00038837499999999983, 0.00038836100000000026, 0.00038836100000000026, 0.0003883470000000007, 0.0003883469999999972, 0.00038837499999999983, 0.0003883889999999994, 0.00038841599999999907, 0.0003883470000000007, 0.00038837499999999636, 0.0003884029999999955, 0.0003883609999999968, 0.0003883479999999967, 0.00038836100000000373, 0.0003883200000000045, 0.0003883750000000033, 0.0003883609999999968, 0.0003883189999999981, 0.00038838899999999593, 0.0003883339999999971, 0.00038840300000000244, 0.0003883750000000033, 0.0003883750000000033, 0.0003883469999999972, 0.00038837499999999636, 0.00038837499999999636, 0.0003883750000000033, 0.00038844500000000115, 0.0003883750000000033, 0.0003883750000000033]</msg>
<status status="PASS" starttime="20201030 18:28:20.271" endtime="20201030 18:28:20.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.266" endtime="20201030 18:28:20.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.278" endtime="20201030 18:28:20.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.276" endtime="20201030 18:28:20.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.275" endtime="20201030 18:28:20.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.907" endtime="20201030 18:28:20.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.906" endtime="20201030 18:28:20.298"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.307" endtime="20201030 18:28:20.339"></status>
</kw>
<msg timestamp="20201030 18:28:20.340" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.305" endtime="20201030 18:28:20.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.345" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.343" endtime="20201030 18:28:20.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.348" endtime="20201030 18:28:20.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.303" endtime="20201030 18:28:20.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.301" endtime="20201030 18:28:20.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.366" endtime="20201030 18:28:20.658"></status>
</kw>
<msg timestamp="20201030 18:28:20.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017640806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018052, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:20.363" endtime="20201030 18:28:20.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017640806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018052, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:20.662" endtime="20201030 18:28:20.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.670" endtime="20201030 18:28:20.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.358" endtime="20201030 18:28:20.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.354" endtime="20201030 18:28:20.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:20.677" level="INFO">${PHILIP_RES} = [{'diff': 0.00041119400000000014}, {'diff': 0.00041069399999999964}, {'diff': 0.00041068099999999955}, {'diff': 0.00041063900000000084}, {'diff': 0.00041068000000000007}, {'diff': 0.000410694999999999...</msg>
<status status="PASS" starttime="20201030 18:28:20.674" endtime="20201030 18:28:20.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.681" level="INFO">${RESULT} = {'diff': [0.00041119400000000014, 0.00041069399999999964, 0.00041068099999999955, 0.00041063900000000084, 0.00041068000000000007, 0.0004106949999999991, 0.0004105829999999991, 0.00041069399999999964, ...</msg>
<status status="PASS" starttime="20201030 18:28:20.678" endtime="20201030 18:28:20.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.686" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:20.685" endtime="20201030 18:28:20.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.688" level="INFO">VALUE: [0.00041119400000000014, 0.00041069399999999964, 0.00041068099999999955, 0.00041063900000000084, 0.00041068000000000007, 0.0004106949999999991, 0.0004105829999999991, 0.00041069399999999964, 0.0004106949999999991, 0.00041068000000000007, 0.000410681000000003, 0.00041068099999999955, 0.00041068000000000007, 0.000410667, 0.00041073599999999835, 0.00041068000000000007, 0.000410667, 0.00041068000000000007, 0.00041068099999999955, 0.000410667, 0.00041066599999999703, 0.00041068099999999955, 0.0004106949999999991, 0.0004106660000000005, 0.00041068099999999955, 0.0004107500000000014, 0.00041068000000000007, 0.000410667, 0.00041069399999999964, 0.00041069399999999964, 0.0004106949999999991, 0.0004106940000000031, 0.00041066700000000345, 0.0004106530000000039, 0.0004106669999999965, 0.0004106809999999961, 0.0004106669999999965, 0.0004106799999999966, 0.00041069499999999565, 0.0004106799999999966, 0.0004106809999999961, 0.0004107230000000017, 0.0004106939999999962, 0.00041065299999999694, 0.0004106799999999966, 0.00041068000000000354, 0.000410681000000003, 0.00041072200000000225, 0.00041066700000000345, 0.000410681000000003]</msg>
<status status="PASS" starttime="20201030 18:28:20.687" endtime="20201030 18:28:20.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.682" endtime="20201030 18:28:20.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.693" endtime="20201030 18:28:20.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.692" endtime="20201030 18:28:20.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.690" endtime="20201030 18:28:20.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.299" endtime="20201030 18:28:20.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.299" endtime="20201030 18:28:20.714"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.722" endtime="20201030 18:28:20.754"></status>
</kw>
<msg timestamp="20201030 18:28:20.755" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.721" endtime="20201030 18:28:20.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.757" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.756" endtime="20201030 18:28:20.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.758" endtime="20201030 18:28:20.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.718" endtime="20201030 18:28:20.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.716" endtime="20201030 18:28:20.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.767" endtime="20201030 18:28:21.053"></status>
</kw>
<msg timestamp="20201030 18:28:21.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017771292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018205417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.766" endtime="20201030 18:28:21.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017771292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018205417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.057" endtime="20201030 18:28:21.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.065" endtime="20201030 18:28:21.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.763" endtime="20201030 18:28:21.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.761" endtime="20201030 18:28:21.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:21.071" level="INFO">${PHILIP_RES} = [{'diff': 0.0004341250000000005}, {'diff': 0.0004336529999999991}, {'diff': 0.0004335830000000013}, {'diff': 0.00043358400000000075}, {'diff': 0.00043359799999999685}, {'diff': 0.0004336110000000004},...</msg>
<status status="PASS" starttime="20201030 18:28:21.068" endtime="20201030 18:28:21.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.075" level="INFO">${RESULT} = {'diff': [0.0004341250000000005, 0.0004336529999999991, 0.0004335830000000013, 0.00043358400000000075, 0.00043359799999999685, 0.0004336110000000004, 0.00043359700000000084, 0.00043359700000000084, 0....</msg>
<status status="PASS" starttime="20201030 18:28:21.072" endtime="20201030 18:28:21.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.080" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:21.079" endtime="20201030 18:28:21.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.082" level="INFO">VALUE: [0.0004341250000000005, 0.0004336529999999991, 0.0004335830000000013, 0.00043358400000000075, 0.00043359799999999685, 0.0004336110000000004, 0.00043359700000000084, 0.00043359700000000084, 0.0004335980000000003, 0.0004335829999999978, 0.0004336110000000004, 0.00043359700000000084, 0.0004336119999999999, 0.00043361099999999694, 0.0004335830000000013, 0.00043358400000000075, 0.00043358400000000075, 0.0004335969999999974, 0.0004335969999999974, 0.00043351399999999943, 0.0004335700000000012, 0.0004335829999999978, 0.0004335969999999974, 0.00043359700000000084, 0.0004335980000000003, 0.0004335830000000013, 0.00043361099999999694, 0.0004335829999999978, 0.00043358400000000075, 0.00043359700000000084, 0.00043359700000000084, 0.000433625, 0.00043358400000000075, 0.00043358400000000075, 0.0004336529999999991, 0.0004335830000000013, 0.00043358400000000075, 0.00043358299999999433, 0.0004335830000000013, 0.00043355500000000213, 0.00043358400000000075, 0.0004335560000000016, 0.00043358299999999433, 0.00043359700000000084, 0.00043358400000000075, 0.00043352799999999553, 0.00043359700000000084, 0.0004335969999999939, 0.00043352799999999553, 0.00043354200000000204]</msg>
<status status="PASS" starttime="20201030 18:28:21.081" endtime="20201030 18:28:21.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.076" endtime="20201030 18:28:21.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.087" endtime="20201030 18:28:21.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.085" endtime="20201030 18:28:21.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.084" endtime="20201030 18:28:21.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.715" endtime="20201030 18:28:21.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.714" endtime="20201030 18:28:21.108"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.116" endtime="20201030 18:28:21.151"></status>
</kw>
<msg timestamp="20201030 18:28:21.151" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.115" endtime="20201030 18:28:21.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.154" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.152" endtime="20201030 18:28:21.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.155" endtime="20201030 18:28:21.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.112" endtime="20201030 18:28:21.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.110" endtime="20201030 18:28:21.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.164" endtime="20201030 18:28:21.450"></status>
</kw>
<msg timestamp="20201030 18:28:21.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018731111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019188806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.162" endtime="20201030 18:28:21.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018731111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019188806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.454" endtime="20201030 18:28:21.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.462" endtime="20201030 18:28:21.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.160" endtime="20201030 18:28:21.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.158" endtime="20201030 18:28:21.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:21.469" level="INFO">${PHILIP_RES} = [{'diff': 0.00045769499999999755}, {'diff': 0.00045711099999999963}, {'diff': 0.00045709700000000006}, {'diff': 0.0004570560000000008}, {'diff': 0.00045711099999999963}, {'diff': 0.0004571109999999996...</msg>
<status status="PASS" starttime="20201030 18:28:21.465" endtime="20201030 18:28:21.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.473" level="INFO">${RESULT} = {'diff': [0.00045769499999999755, 0.00045711099999999963, 0.00045709700000000006, 0.0004570560000000008, 0.00045711099999999963, 0.00045711099999999963, 0.00045713900000000224, 0.0004571670000000014, ...</msg>
<status status="PASS" starttime="20201030 18:28:21.470" endtime="20201030 18:28:21.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.477" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:21.476" endtime="20201030 18:28:21.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.479" level="INFO">VALUE: [0.00045769499999999755, 0.00045711099999999963, 0.00045709700000000006, 0.0004570560000000008, 0.00045711099999999963, 0.00045711099999999963, 0.00045713900000000224, 0.0004571670000000014, 0.00045708399999999996, 0.00045713900000000224, 0.0004571110000000031, 0.00045712500000000267, 0.00045713899999999877, 0.00045713899999999877, 0.00045711099999999963, 0.00045711099999999963, 0.00045711099999999963, 0.00045711099999999963, 0.00045709700000000006, 0.00045709700000000006, 0.0004571249999999992, 0.0004570699999999969, 0.00045711099999999963, 0.00045713900000000224, 0.00045713900000000224, 0.00045712500000000267, 0.00045712499999999573, 0.0004571110000000031, 0.00045712499999999573, 0.000457098000000003, 0.0004571660000000019, 0.0004571110000000031, 0.0004571110000000031, 0.00045711199999999563, 0.0004571110000000031, 0.00045717999999999454, 0.00045712500000000267, 0.00045711099999999616, 0.00045712500000000267, 0.00045712499999999573, 0.0004571110000000031, 0.00045712499999999573, 0.00045712500000000267, 0.00045711099999999616, 0.00045709700000000353, 0.00045708300000000396, 0.0004571670000000014, 0.00045712500000000267, 0.00045711099999999616, 0.00045709700000000353]</msg>
<status status="PASS" starttime="20201030 18:28:21.478" endtime="20201030 18:28:21.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.473" endtime="20201030 18:28:21.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.487" endtime="20201030 18:28:21.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.486" endtime="20201030 18:28:21.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.485" endtime="20201030 18:28:21.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.109" endtime="20201030 18:28:21.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.108" endtime="20201030 18:28:21.508"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.516" endtime="20201030 18:28:21.551"></status>
</kw>
<msg timestamp="20201030 18:28:21.552" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.515" endtime="20201030 18:28:21.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.554" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.553" endtime="20201030 18:28:21.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.555" endtime="20201030 18:28:21.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.512" endtime="20201030 18:28:21.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.510" endtime="20201030 18:28:21.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.564" endtime="20201030 18:28:21.854"></status>
</kw>
<msg timestamp="20201030 18:28:21.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017701347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018183139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.563" endtime="20201030 18:28:21.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017701347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018183139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.863" endtime="20201030 18:28:21.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.881" endtime="20201030 18:28:21.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.560" endtime="20201030 18:28:21.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.558" endtime="20201030 18:28:21.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:21.894" level="INFO">${PHILIP_RES} = [{'diff': 0.0004817920000000017}, {'diff': 0.0004812639999999986}, {'diff': 0.00048124999999999904}, {'diff': 0.0004812500000000025}, {'diff': 0.00048124999999999904}, {'diff': 0.0004812769999999987},...</msg>
<status status="PASS" starttime="20201030 18:28:21.888" endtime="20201030 18:28:21.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.904" level="INFO">${RESULT} = {'diff': [0.0004817920000000017, 0.0004812639999999986, 0.00048124999999999904, 0.0004812500000000025, 0.00048124999999999904, 0.0004812769999999987, 0.00048126299999999914, 0.00048123599999999947, 0....</msg>
<status status="PASS" starttime="20201030 18:28:21.896" endtime="20201030 18:28:21.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.913" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:21.911" endtime="20201030 18:28:21.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.918" level="INFO">VALUE: [0.0004817920000000017, 0.0004812639999999986, 0.00048124999999999904, 0.0004812500000000025, 0.00048124999999999904, 0.0004812769999999987, 0.00048126299999999914, 0.00048123599999999947, 0.00048119400000000076, 0.00048124999999999904, 0.00048123599999999947, 0.00048120800000000033, 0.0004812639999999986, 0.0004812219999999999, 0.00048123600000000294, 0.00048123599999999947, 0.0004812779999999982, 0.00048123600000000294, 0.00048124999999999904, 0.00048123599999999947, 0.0004812500000000025, 0.0004812219999999999, 0.0004812769999999987, 0.0004812219999999999, 0.00048124999999999904, 0.0004812500000000025, 0.00048126399999999514, 0.0004812640000000021, 0.0004813050000000013, 0.0004812640000000021, 0.00048124999999999557, 0.00048126299999999567, 0.00048127800000000165, 0.00048123600000000294, 0.0004812500000000025, 0.00048123600000000294, 0.00048124999999999557, 0.00048126299999999567, 0.000481235999999996, 0.00048119400000000423, 0.0004812640000000021, 0.00048127800000000165, 0.00048124999999999557, 0.00048126399999999514, 0.00048119499999999676, 0.0004812500000000025, 0.0004812640000000021, 0.0004812640000000021, 0.00048124999999999557, 0.0004813060000000008]</msg>
<status status="PASS" starttime="20201030 18:28:21.915" endtime="20201030 18:28:21.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.906" endtime="20201030 18:28:21.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.928" endtime="20201030 18:28:21.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.925" endtime="20201030 18:28:21.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.923" endtime="20201030 18:28:21.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.509" endtime="20201030 18:28:21.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.508" endtime="20201030 18:28:21.950"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.958" endtime="20201030 18:28:21.994"></status>
</kw>
<msg timestamp="20201030 18:28:21.994" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.957" endtime="20201030 18:28:21.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.997" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.995" endtime="20201030 18:28:21.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.998" endtime="20201030 18:28:22.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.954" endtime="20201030 18:28:22.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.952" endtime="20201030 18:28:22.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.008" endtime="20201030 18:28:22.295"></status>
</kw>
<msg timestamp="20201030 18:28:22.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017782653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018289194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.007" endtime="20201030 18:28:22.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017782653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018289194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.300" endtime="20201030 18:28:22.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.308" endtime="20201030 18:28:22.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.004" endtime="20201030 18:28:22.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.001" endtime="20201030 18:28:22.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:22.315" level="INFO">${PHILIP_RES} = [{'diff': 0.0005065410000000027}, {'diff': 0.0005060140000000025}, {'diff': 0.0005060270000000026}, {'diff': 0.0005060139999999991}, {'diff': 0.0005060420000000017}, {'diff': 0.0005059999999999995}, {...</msg>
<status status="PASS" starttime="20201030 18:28:22.311" endtime="20201030 18:28:22.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.319" level="INFO">${RESULT} = {'diff': [0.0005065410000000027, 0.0005060140000000025, 0.0005060270000000026, 0.0005060139999999991, 0.0005060420000000017, 0.0005059999999999995, 0.0005059999999999995, 0.0005060139999999991, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:28:22.316" endtime="20201030 18:28:22.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.323" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:22.322" endtime="20201030 18:28:22.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.326" level="INFO">VALUE: [0.0005065410000000027, 0.0005060140000000025, 0.0005060270000000026, 0.0005060139999999991, 0.0005060420000000017, 0.0005059999999999995, 0.0005059999999999995, 0.0005060139999999991, 0.0005059859999999999, 0.0005060689999999979, 0.0005059999999999995, 0.0005060279999999986, 0.0005060139999999991, 0.0005059450000000007, 0.0005059999999999995, 0.0005059999999999995, 0.0005060560000000013, 0.0005060550000000018, 0.0005059999999999995, 0.0005059999999999995, 0.0005059859999999999, 0.0005060139999999991, 0.0005060139999999991, 0.0005060279999999986, 0.0005060279999999986, 0.000506014000000006, 0.0005060139999999991, 0.0005059859999999999, 0.0005060139999999991, 0.0005059999999999995, 0.0005060139999999991, 0.0005059449999999938, 0.0005060279999999986, 0.0005060139999999991, 0.0005059999999999995, 0.0005060830000000044, 0.0005059999999999995, 0.0005060279999999986, 0.0005060279999999986, 0.0005060139999999991, 0.000506014000000006, 0.0005059999999999995, 0.0005060420000000052, 0.0005059310000000011, 0.000506014000000006, 0.0005060269999999992, 0.0005059999999999995, 0.0005059869999999994, 0.0005059999999999995, 0.0005060139999999991]</msg>
<status status="PASS" starttime="20201030 18:28:22.324" endtime="20201030 18:28:22.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.320" endtime="20201030 18:28:22.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.331" endtime="20201030 18:28:22.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.329" endtime="20201030 18:28:22.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.328" endtime="20201030 18:28:22.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.951" endtime="20201030 18:28:22.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.950" endtime="20201030 18:28:22.352"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.361" endtime="20201030 18:28:22.400"></status>
</kw>
<msg timestamp="20201030 18:28:22.400" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.359" endtime="20201030 18:28:22.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.403" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.401" endtime="20201030 18:28:22.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.404" endtime="20201030 18:28:22.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.356" endtime="20201030 18:28:22.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.354" endtime="20201030 18:28:22.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.413" endtime="20201030 18:28:22.713"></status>
</kw>
<msg timestamp="20201030 18:28:22.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019135375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.412" endtime="20201030 18:28:22.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019135375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.723" endtime="20201030 18:28:22.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.742" endtime="20201030 18:28:22.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.409" endtime="20201030 18:28:22.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.407" endtime="20201030 18:28:22.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:22.756" level="INFO">${PHILIP_RES} = [{'diff': 0.0005318890000000007}, {'diff': 0.0005313750000000006}, {'diff': 0.0005313189999999988}, {'diff': 0.000531361000000001}, {'diff': 0.0005313470000000015}, {'diff': 0.0005313750000000006}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:22.749" endtime="20201030 18:28:22.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.762" level="INFO">${RESULT} = {'diff': [0.0005318890000000007, 0.0005313750000000006, 0.0005313189999999988, 0.000531361000000001, 0.0005313470000000015, 0.0005313750000000006, 0.0005313480000000009, 0.0005313750000000006, 0.00053...</msg>
<status status="PASS" starttime="20201030 18:28:22.758" endtime="20201030 18:28:22.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.767" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:22.766" endtime="20201030 18:28:22.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.769" level="INFO">VALUE: [0.0005318890000000007, 0.0005313750000000006, 0.0005313189999999988, 0.000531361000000001, 0.0005313470000000015, 0.0005313750000000006, 0.0005313480000000009, 0.0005313750000000006, 0.0005313890000000002, 0.0005313750000000006, 0.0005314020000000003, 0.0005313749999999971, 0.0005313609999999976, 0.000531361000000001, 0.0005313890000000002, 0.0005313890000000002, 0.0005313750000000006, 0.0005313890000000002, 0.0005313750000000006, 0.0005313750000000006, 0.0005314169999999993, 0.0005313750000000006, 0.0005313890000000002, 0.0005314159999999998, 0.0005313330000000019, 0.0005313469999999945, 0.0005313750000000006, 0.0005313339999999944, 0.0005313750000000006, 0.0005313890000000002, 0.0005314029999999997, 0.0005313889999999932, 0.0005313620000000005, 0.0005313890000000002, 0.0005313750000000006, 0.0005313750000000006, 0.0005313340000000014, 0.0005313750000000006, 0.0005313750000000006, 0.000531361000000001, 0.0005314299999999994, 0.0005313880000000007, 0.0005313890000000002, 0.0005314029999999997, 0.0005313060000000022, 0.0005313340000000014, 0.0005313469999999945, 0.0005313470000000015, 0.0005313890000000002, 0.0005313750000000006]</msg>
<status status="PASS" starttime="20201030 18:28:22.768" endtime="20201030 18:28:22.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.763" endtime="20201030 18:28:22.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.775" endtime="20201030 18:28:22.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.774" endtime="20201030 18:28:22.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.773" endtime="20201030 18:28:22.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.353" endtime="20201030 18:28:22.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.352" endtime="20201030 18:28:22.796"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.805" endtime="20201030 18:28:22.844"></status>
</kw>
<msg timestamp="20201030 18:28:22.844" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.803" endtime="20201030 18:28:22.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.847" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.845" endtime="20201030 18:28:22.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.848" endtime="20201030 18:28:22.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.801" endtime="20201030 18:28:22.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.799" endtime="20201030 18:28:22.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.857" endtime="20201030 18:28:23.144"></status>
</kw>
<msg timestamp="20201030 18:28:23.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018388625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0189465, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:22.856" endtime="20201030 18:28:23.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018388625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0189465, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:23.149" endtime="20201030 18:28:23.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.157" endtime="20201030 18:28:23.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.853" endtime="20201030 18:28:23.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.851" endtime="20201030 18:28:23.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:23.163" level="INFO">${PHILIP_RES} = [{'diff': 0.0005578750000000028}, {'diff': 0.0005573609999999993}, {'diff': 0.000557305000000001}, {'diff': 0.0005573610000000027}, {'diff': 0.0005573479999999992}, {'diff': 0.0005573749999999988}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:23.160" endtime="20201030 18:28:23.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.168" level="INFO">${RESULT} = {'diff': [0.0005578750000000028, 0.0005573609999999993, 0.000557305000000001, 0.0005573610000000027, 0.0005573479999999992, 0.0005573749999999988, 0.0005573330000000001, 0.0005573330000000001, 0.00055...</msg>
<status status="PASS" starttime="20201030 18:28:23.164" endtime="20201030 18:28:23.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.173" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:23.172" endtime="20201030 18:28:23.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.175" level="INFO">VALUE: [0.0005578750000000028, 0.0005573609999999993, 0.000557305000000001, 0.0005573610000000027, 0.0005573479999999992, 0.0005573749999999988, 0.0005573330000000001, 0.0005573330000000001, 0.000557305000000001, 0.0005573469999999997, 0.0005573470000000032, 0.0005573479999999992, 0.0005573330000000001, 0.0005573609999999993, 0.0005573750000000023, 0.0005573469999999997, 0.0005573469999999997, 0.0005573750000000023, 0.00055732, 0.0005572780000000013, 0.0005573470000000032, 0.0005573469999999997, 0.0005573609999999993, 0.0005573469999999997, 0.0005573479999999992, 0.0005573610000000062, 0.0005573469999999997, 0.000557305000000001, 0.0005573469999999997, 0.0005573469999999997, 0.0005573619999999987, 0.0005573469999999997, 0.0005573610000000062, 0.0005574170000000045, 0.0005573469999999997, 0.0005573469999999997, 0.0005573479999999992, 0.0005573339999999996, 0.0005573889999999984, 0.0005573750000000058, 0.0005573330000000001, 0.0005573609999999993, 0.0005573609999999993, 0.0005573339999999996, 0.0005573469999999997, 0.0005573749999999988, 0.0005573609999999993, 0.0005573609999999993, 0.0005573469999999997, 0.0005573469999999997]</msg>
<status status="PASS" starttime="20201030 18:28:23.174" endtime="20201030 18:28:23.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.169" endtime="20201030 18:28:23.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.181" endtime="20201030 18:28:23.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.179" endtime="20201030 18:28:23.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.178" endtime="20201030 18:28:23.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.797" endtime="20201030 18:28:23.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.797" endtime="20201030 18:28:23.201"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.210" endtime="20201030 18:28:23.250"></status>
</kw>
<msg timestamp="20201030 18:28:23.251" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.209" endtime="20201030 18:28:23.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.253" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.252" endtime="20201030 18:28:23.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.254" endtime="20201030 18:28:23.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.206" endtime="20201030 18:28:23.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.204" endtime="20201030 18:28:23.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.264" endtime="20201030 18:28:23.551"></status>
</kw>
<msg timestamp="20201030 18:28:23.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018247653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018832125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.262" endtime="20201030 18:28:23.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018247653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018832125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.555" endtime="20201030 18:28:23.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.563" endtime="20201030 18:28:23.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.260" endtime="20201030 18:28:23.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.258" endtime="20201030 18:28:23.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:23.570" level="INFO">${PHILIP_RES} = [{'diff': 0.0005844720000000025}, {'diff': 0.0005839449999999989}, {'diff': 0.0005839299999999999}, {'diff': 0.0005839589999999985}, {'diff': 0.0005840000000000012}, {'diff': 0.0005839299999999999}, {...</msg>
<status status="PASS" starttime="20201030 18:28:23.567" endtime="20201030 18:28:23.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.574" level="INFO">${RESULT} = {'diff': [0.0005844720000000025, 0.0005839449999999989, 0.0005839299999999999, 0.0005839589999999985, 0.0005840000000000012, 0.0005839299999999999, 0.000583959000000002, 0.0005839299999999999, 0.00058...</msg>
<status status="PASS" starttime="20201030 18:28:23.571" endtime="20201030 18:28:23.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.579" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:23.577" endtime="20201030 18:28:23.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.581" level="INFO">VALUE: [0.0005844720000000025, 0.0005839449999999989, 0.0005839299999999999, 0.0005839589999999985, 0.0005840000000000012, 0.0005839299999999999, 0.000583959000000002, 0.0005839299999999999, 0.0005839859999999981, 0.0005839309999999993, 0.0005839299999999999, 0.0005839449999999989, 0.0005839030000000002, 0.000583957999999999, 0.0005839449999999989, 0.0005839020000000007, 0.0005839439999999994, 0.0005839449999999989, 0.0005839440000000029, 0.0005839439999999994, 0.0005839169999999998, 0.0005839300000000033, 0.0005839450000000024, 0.0005839580000000025, 0.0005839299999999964, 0.000583959000000002, 0.000583943999999996, 0.0005839300000000033, 0.000583959000000002, 0.0005839579999999955, 0.0005839170000000032, 0.000583943999999996, 0.0005839440000000029, 0.0005839450000000024, 0.0005839579999999955, 0.0005839580000000025, 0.000583958999999995, 0.0005839440000000029, 0.000583943999999996, 0.0005839310000000028, 0.0005838890000000041, 0.0005839449999999954, 0.0005839580000000025, 0.0005839299999999964, 0.0005839170000000032, 0.0005839440000000029, 0.0005839299999999964, 0.0005839450000000024, 0.0005839579999999955, 0.000583959000000002]</msg>
<status status="PASS" starttime="20201030 18:28:23.580" endtime="20201030 18:28:23.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.575" endtime="20201030 18:28:23.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.586" endtime="20201030 18:28:23.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.585" endtime="20201030 18:28:23.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.584" endtime="20201030 18:28:23.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.202" endtime="20201030 18:28:23.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.202" endtime="20201030 18:28:23.607"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.616" endtime="20201030 18:28:23.659"></status>
</kw>
<msg timestamp="20201030 18:28:23.660" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.614" endtime="20201030 18:28:23.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.662" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.661" endtime="20201030 18:28:23.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.664" endtime="20201030 18:28:23.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.612" endtime="20201030 18:28:23.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.610" endtime="20201030 18:28:23.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.673" endtime="20201030 18:28:23.958"></status>
</kw>
<msg timestamp="20201030 18:28:23.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019229972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019841667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.672" endtime="20201030 18:28:23.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019229972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019841667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.962" endtime="20201030 18:28:23.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.971" endtime="20201030 18:28:23.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.669" endtime="20201030 18:28:23.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.667" endtime="20201030 18:28:23.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:23.977" level="INFO">${PHILIP_RES} = [{'diff': 0.0006116949999999989}, {'diff': 0.0006111250000000006}, {'diff': 0.0006111390000000001}, {'diff': 0.000611111000000001}, {'diff': 0.000611111000000001}, {'diff': 0.0006111390000000001}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:23.974" endtime="20201030 18:28:23.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.982" level="INFO">${RESULT} = {'diff': [0.0006116949999999989, 0.0006111250000000006, 0.0006111390000000001, 0.000611111000000001, 0.000611111000000001, 0.0006111390000000001, 0.0006111390000000001, 0.0006111390000000001, 0.000611...</msg>
<status status="PASS" starttime="20201030 18:28:23.978" endtime="20201030 18:28:23.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.986" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:23.985" endtime="20201030 18:28:23.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.989" level="INFO">VALUE: [0.0006116949999999989, 0.0006111250000000006, 0.0006111390000000001, 0.000611111000000001, 0.000611111000000001, 0.0006111390000000001, 0.0006111390000000001, 0.0006111390000000001, 0.0006111529999999997, 0.0006111669999999993, 0.000611208000000002, 0.0006111529999999997, 0.0006111520000000002, 0.0006111250000000006, 0.0006111390000000001, 0.0006111390000000001, 0.0006111390000000001, 0.0006111380000000007, 0.0006111390000000001, 0.0006111670000000027, 0.0006111389999999967, 0.0006111249999999971, 0.0006110980000000044, 0.0006111530000000032, 0.0006111669999999958, 0.0006111390000000036, 0.0006111249999999971, 0.0006111529999999962, 0.000611208000000002, 0.0006112220000000015, 0.0006111529999999962, 0.000611125000000004, 0.0006111390000000036, 0.0006111109999999975, 0.000611125000000004, 0.000611125000000004, 0.0006111379999999972, 0.0006111670000000027, 0.0006111530000000032, 0.0006111249999999971, 0.0006111530000000032, 0.000611125000000004, 0.0006111109999999975, 0.0006111109999999975, 0.0006111530000000032, 0.0006111249999999971, 0.0006111659999999963, 0.0006111530000000032, 0.0006111389999999967, 0.0006111249999999971]</msg>
<status status="PASS" starttime="20201030 18:28:23.987" endtime="20201030 18:28:23.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.982" endtime="20201030 18:28:23.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.995" endtime="20201030 18:28:24.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.993" endtime="20201030 18:28:24.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.992" endtime="20201030 18:28:24.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.608" endtime="20201030 18:28:24.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.608" endtime="20201030 18:28:24.015"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.024" endtime="20201030 18:28:24.067"></status>
</kw>
<msg timestamp="20201030 18:28:24.068" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.023" endtime="20201030 18:28:24.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.070" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.069" endtime="20201030 18:28:24.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.072" endtime="20201030 18:28:24.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.020" endtime="20201030 18:28:24.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.018" endtime="20201030 18:28:24.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.081" endtime="20201030 18:28:24.367"></status>
</kw>
<msg timestamp="20201030 18:28:24.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018346736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018986222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.079" endtime="20201030 18:28:24.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018346736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018986222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.371" endtime="20201030 18:28:24.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.379" endtime="20201030 18:28:24.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.077" endtime="20201030 18:28:24.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.075" endtime="20201030 18:28:24.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:24.386" level="INFO">${PHILIP_RES} = [{'diff': 0.0006394860000000016}, {'diff': 0.0006389579999999985}, {'diff': 0.0006390270000000003}, {'diff': 0.0006389450000000019}, {'diff': 0.0006389590000000014}, {'diff': 0.000638958999999998}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:24.383" endtime="20201030 18:28:24.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.391" level="INFO">${RESULT} = {'diff': [0.0006394860000000016, 0.0006389579999999985, 0.0006390270000000003, 0.0006389450000000019, 0.0006389590000000014, 0.000638958999999998, 0.0006389450000000019, 0.000638958000000002, 0.000638...</msg>
<status status="PASS" starttime="20201030 18:28:24.387" endtime="20201030 18:28:24.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.396" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:24.395" endtime="20201030 18:28:24.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.398" level="INFO">VALUE: [0.0006394860000000016, 0.0006389579999999985, 0.0006390270000000003, 0.0006389450000000019, 0.0006389590000000014, 0.000638958999999998, 0.0006389450000000019, 0.000638958000000002, 0.0006389579999999985, 0.0006389579999999985, 0.000638958000000002, 0.000638958000000002, 0.0006389579999999985, 0.000638973000000001, 0.0006389029999999997, 0.0006389860000000011, 0.0006389579999999985, 0.0006389720000000015, 0.000638958000000002, 0.000638958000000002, 0.000638957999999995, 0.000638957999999995, 0.000638973000000001, 0.0006389860000000011, 0.0006389450000000019, 0.0006389720000000015, 0.0006389019999999968, 0.0006389860000000011, 0.0006389439999999955, 0.0006389720000000015, 0.0006389450000000019, 0.0006389590000000014, 0.0006389450000000019, 0.0006389590000000014, 0.000638958000000002, 0.000638958000000002, 0.000638957999999995, 0.0006389439999999955, 0.0006390000000000007, 0.0006389450000000019, 0.000638973000000001, 0.0006389590000000014, 0.0006389720000000015, 0.0006389439999999955, 0.0006389159999999963, 0.000638958000000002, 0.000638958000000002, 0.000638958000000002, 0.000638958000000002, 0.0006389870000000006]</msg>
<status status="PASS" starttime="20201030 18:28:24.397" endtime="20201030 18:28:24.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.392" endtime="20201030 18:28:24.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.403" endtime="20201030 18:28:24.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.402" endtime="20201030 18:28:24.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.401" endtime="20201030 18:28:24.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.016" endtime="20201030 18:28:24.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.016" endtime="20201030 18:28:24.424"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.433" endtime="20201030 18:28:24.478"></status>
</kw>
<msg timestamp="20201030 18:28:24.478" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.431" endtime="20201030 18:28:24.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.481" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.479" endtime="20201030 18:28:24.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.482" endtime="20201030 18:28:24.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.429" endtime="20201030 18:28:24.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.426" endtime="20201030 18:28:24.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.491" endtime="20201030 18:28:24.778"></status>
</kw>
<msg timestamp="20201030 18:28:24.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018313208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018981097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.490" endtime="20201030 18:28:24.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018313208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018981097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.782" endtime="20201030 18:28:24.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.791" endtime="20201030 18:28:24.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.487" endtime="20201030 18:28:24.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.485" endtime="20201030 18:28:24.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:24.797" level="INFO">${PHILIP_RES} = [{'diff': 0.0006678889999999979}, {'diff': 0.0006674030000000004}, {'diff': 0.0006673879999999979}, {'diff': 0.0006673609999999983}, {'diff': 0.0006673609999999983}, {'diff': 0.0006673620000000012}, {...</msg>
<status status="PASS" starttime="20201030 18:28:24.794" endtime="20201030 18:28:24.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.801" level="INFO">${RESULT} = {'diff': [0.0006678889999999979, 0.0006674030000000004, 0.0006673879999999979, 0.0006673609999999983, 0.0006673609999999983, 0.0006673620000000012, 0.0006674309999999996, 0.0006673469999999987, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:28:24.798" endtime="20201030 18:28:24.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.806" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:24.805" endtime="20201030 18:28:24.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.808" level="INFO">VALUE: [0.0006678889999999979, 0.0006674030000000004, 0.0006673879999999979, 0.0006673609999999983, 0.0006673609999999983, 0.0006673620000000012, 0.0006674309999999996, 0.0006673469999999987, 0.0006673880000000014, 0.0006673890000000009, 0.0006673890000000009, 0.0006673749999999978, 0.0006674449999999992, 0.0006674030000000004, 0.0006673890000000009, 0.0006674030000000004, 0.0006673750000000013, 0.0006673750000000013, 0.0006673469999999987, 0.0006673889999999974, 0.0006673890000000043, 0.0006673469999999987, 0.0006673750000000048, 0.0006673480000000051, 0.0006674170000000035, 0.0006673890000000043, 0.000667416000000004, 0.0006673889999999974, 0.0006673889999999974, 0.0006673889999999974, 0.0006674169999999965, 0.0006673889999999974, 0.0006674019999999975, 0.000667402999999997, 0.0006673609999999983, 0.0006673889999999974, 0.0006673889999999974, 0.000667319999999999, 0.0006674019999999975, 0.000667402999999997, 0.0006673749999999978, 0.0006673749999999978, 0.0006673749999999978, 0.0006673890000000043, 0.0006674440000000031, 0.0006673609999999983, 0.0006674030000000039, 0.0006673890000000043, 0.0006673890000000043, 0.000667431000000003]</msg>
<status status="PASS" starttime="20201030 18:28:24.807" endtime="20201030 18:28:24.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.802" endtime="20201030 18:28:24.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.814" endtime="20201030 18:28:24.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.812" endtime="20201030 18:28:24.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.811" endtime="20201030 18:28:24.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.425" endtime="20201030 18:28:24.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.424" endtime="20201030 18:28:24.834"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.843" endtime="20201030 18:28:24.891"></status>
</kw>
<msg timestamp="20201030 18:28:24.891" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.842" endtime="20201030 18:28:24.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.894" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.892" endtime="20201030 18:28:24.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.895" endtime="20201030 18:28:24.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.839" endtime="20201030 18:28:24.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.837" endtime="20201030 18:28:24.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.904" endtime="20201030 18:28:25.190"></status>
</kw>
<msg timestamp="20201030 18:28:25.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019214389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019911403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.902" endtime="20201030 18:28:25.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019214389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019911403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.194" endtime="20201030 18:28:25.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.203" endtime="20201030 18:28:25.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.900" endtime="20201030 18:28:25.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.898" endtime="20201030 18:28:25.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:25.209" level="INFO">${PHILIP_RES} = [{'diff': 0.0006970140000000027}, {'diff': 0.0006964720000000001}, {'diff': 0.0006964160000000018}, {'diff': 0.0006963469999999999}, {'diff': 0.0006964439999999975}, {'diff': 0.0006964450000000004}, {...</msg>
<status status="PASS" starttime="20201030 18:28:25.206" endtime="20201030 18:28:25.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.213" level="INFO">${RESULT} = {'diff': [0.0006970140000000027, 0.0006964720000000001, 0.0006964160000000018, 0.0006963469999999999, 0.0006964439999999975, 0.0006964450000000004, 0.0006964580000000005, 0.0006964300000000014, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:28:25.210" endtime="20201030 18:28:25.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.218" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:25.217" endtime="20201030 18:28:25.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.221" level="INFO">VALUE: [0.0006970140000000027, 0.0006964720000000001, 0.0006964160000000018, 0.0006963469999999999, 0.0006964439999999975, 0.0006964450000000004, 0.0006964580000000005, 0.0006964300000000014, 0.0006964309999999974, 0.0006964030000000017, 0.0006964030000000017, 0.0006964439999999975, 0.0006964169999999978, 0.0006964440000000009, 0.0006964310000000008, 0.0006964439999999975, 0.0006964310000000043, 0.0006964309999999974, 0.0006964299999999979, 0.0006964169999999978, 0.0006964159999999983, 0.0006964169999999978, 0.0006964030000000052, 0.0006964170000000047, 0.0006964299999999979, 0.0006964589999999965, 0.0006964439999999975, 0.0006964449999999969, 0.0006964309999999974, 0.0006964300000000048, 0.0006964310000000043, 0.0006964159999999983, 0.0006964449999999969, 0.0006964439999999975, 0.0006964309999999974, 0.0006964439999999975, 0.0006964450000000039, 0.0006964440000000044, 0.0006964870000000026, 0.0006964439999999975, 0.0006964169999999978, 0.0006964169999999978, 0.0006964029999999982, 0.0006963469999999999, 0.000696375000000006, 0.0006964310000000043, 0.0006964019999999987, 0.0006963889999999986, 0.0006964439999999975, 0.0006964309999999974]</msg>
<status status="PASS" starttime="20201030 18:28:25.219" endtime="20201030 18:28:25.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.214" endtime="20201030 18:28:25.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.229" endtime="20201030 18:28:25.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.227" endtime="20201030 18:28:25.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.226" endtime="20201030 18:28:25.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.835" endtime="20201030 18:28:25.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.835" endtime="20201030 18:28:25.250"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.259" endtime="20201030 18:28:25.307"></status>
</kw>
<msg timestamp="20201030 18:28:25.308" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.257" endtime="20201030 18:28:25.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.310" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.309" endtime="20201030 18:28:25.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.311" endtime="20201030 18:28:25.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.254" endtime="20201030 18:28:25.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.252" endtime="20201030 18:28:25.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.321" endtime="20201030 18:28:25.628"></status>
</kw>
<msg timestamp="20201030 18:28:25.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018297861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019024514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.319" endtime="20201030 18:28:25.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018297861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019024514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.639" endtime="20201030 18:28:25.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.660" endtime="20201030 18:28:25.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.316" endtime="20201030 18:28:25.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.315" endtime="20201030 18:28:25.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:25.678" level="INFO">${PHILIP_RES} = [{'diff': 0.0007266530000000007}, {'diff': 0.0007260839999999984}, {'diff': 0.0007261390000000006}, {'diff': 0.0007260969999999985}, {'diff': 0.0007260689999999993}, {'diff': 0.0007260689999999993}, {...</msg>
<status status="PASS" starttime="20201030 18:28:25.670" endtime="20201030 18:28:25.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.689" level="INFO">${RESULT} = {'diff': [0.0007266530000000007, 0.0007260839999999984, 0.0007261390000000006, 0.0007260969999999985, 0.0007260689999999993, 0.0007260689999999993, 0.0007260969999999985, 0.0007260840000000018, 0.0007...</msg>
<status status="PASS" starttime="20201030 18:28:25.681" endtime="20201030 18:28:25.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.696" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:25.694" endtime="20201030 18:28:25.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.700" level="INFO">VALUE: [0.0007266530000000007, 0.0007260839999999984, 0.0007261390000000006, 0.0007260969999999985, 0.0007260689999999993, 0.0007260689999999993, 0.0007260969999999985, 0.0007260840000000018, 0.0007260700000000023, 0.0007260969999999985, 0.0007260689999999993, 0.0007260830000000024, 0.0007260140000000005, 0.0007260830000000024, 0.0007260559999999992, 0.0007260140000000005, 0.0007260840000000018, 0.0007260689999999959, 0.0007260700000000023, 0.0007261110000000015, 0.000726112000000001, 0.0007260689999999959, 0.0007260700000000023, 0.0007260829999999954, 0.000726013999999997, 0.0007260690000000028, 0.0007260420000000031, 0.0007260829999999954, 0.0007260690000000028, 0.0007260830000000024, 0.000726096999999995, 0.0007260420000000031, 0.0007260830000000024, 0.0007261109999999946, 0.0007260690000000028, 0.0007260700000000023, 0.0007260829999999954, 0.0007260700000000023, 0.0007260690000000028, 0.0007260979999999945, 0.0007260830000000024, 0.0007260970000000019, 0.0007260549999999963, 0.0007260840000000018, 0.0007260690000000028, 0.0007260980000000014, 0.0007260689999999959, 0.0007260000000000044, 0.0007260830000000024, 0.000726111999999994]</msg>
<status status="PASS" starttime="20201030 18:28:25.698" endtime="20201030 18:28:25.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.691" endtime="20201030 18:28:25.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.709" endtime="20201030 18:28:25.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.706" endtime="20201030 18:28:25.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.704" endtime="20201030 18:28:25.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.251" endtime="20201030 18:28:25.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.250" endtime="20201030 18:28:25.731"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.741" endtime="20201030 18:28:25.791"></status>
</kw>
<msg timestamp="20201030 18:28:25.792" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.739" endtime="20201030 18:28:25.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.794" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.793" endtime="20201030 18:28:25.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.795" endtime="20201030 18:28:25.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.735" endtime="20201030 18:28:25.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.734" endtime="20201030 18:28:25.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.805" endtime="20201030 18:28:26.091"></status>
</kw>
<msg timestamp="20201030 18:28:26.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020764944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021521833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.803" endtime="20201030 18:28:26.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020764944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021521833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.095" endtime="20201030 18:28:26.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.104" endtime="20201030 18:28:26.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.800" endtime="20201030 18:28:26.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.799" endtime="20201030 18:28:26.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:26.110" level="INFO">${PHILIP_RES} = [{'diff': 0.0007568890000000002}, {'diff': 0.0007563330000000014}, {'diff': 0.0007563480000000004}, {'diff': 0.0007563609999999971}, {'diff': 0.0007563610000000005}, {'diff': 0.0007564029999999992}, {...</msg>
<status status="PASS" starttime="20201030 18:28:26.107" endtime="20201030 18:28:26.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.114" level="INFO">${RESULT} = {'diff': [0.0007568890000000002, 0.0007563330000000014, 0.0007563480000000004, 0.0007563609999999971, 0.0007563610000000005, 0.0007564029999999992, 0.000756347000000001, 0.0007562639999999995, 0.00075...</msg>
<status status="PASS" starttime="20201030 18:28:26.111" endtime="20201030 18:28:26.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.118" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:26.117" endtime="20201030 18:28:26.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.121" level="INFO">VALUE: [0.0007568890000000002, 0.0007563330000000014, 0.0007563480000000004, 0.0007563609999999971, 0.0007563610000000005, 0.0007564029999999992, 0.000756347000000001, 0.0007562639999999995, 0.000756347000000001, 0.0007563880000000002, 0.0007563329999999979, 0.0007562780000000026, 0.000756347999999997, 0.0007563329999999979, 0.0007563470000000044, 0.0007563189999999984, 0.0007563470000000044, 0.000756347999999997, 0.0007563329999999979, 0.0007563470000000044, 0.0007563329999999979, 0.000756361000000004, 0.000756347999999997, 0.0007563470000000044, 0.0007563469999999975, 0.0007563469999999975, 0.0007563330000000049, 0.0007563059999999983, 0.0007563750000000036, 0.0007563469999999975, 0.0007563469999999975, 0.0007563330000000049, 0.0007563609999999971, 0.0007563330000000049, 0.0007563609999999971, 0.0007563329999999979, 0.0007563189999999984, 0.000756347999999997, 0.0007563330000000049, 0.0007563469999999975, 0.0007563470000000044, 0.0007562779999999991, 0.000756347999999997, 0.0007563470000000044, 0.0007563339999999974, 0.0007564170000000023, 0.0007563469999999975, 0.0007563339999999974, 0.0007563329999999979, 0.0007563619999999965]</msg>
<status status="PASS" starttime="20201030 18:28:26.119" endtime="20201030 18:28:26.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.115" endtime="20201030 18:28:26.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.126" endtime="20201030 18:28:26.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.124" endtime="20201030 18:28:26.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.123" endtime="20201030 18:28:26.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.732" endtime="20201030 18:28:26.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.731" endtime="20201030 18:28:26.146"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.155" endtime="20201030 18:28:26.207"></status>
</kw>
<msg timestamp="20201030 18:28:26.207" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.153" endtime="20201030 18:28:26.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.210" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.208" endtime="20201030 18:28:26.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.211" endtime="20201030 18:28:26.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.151" endtime="20201030 18:28:26.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.149" endtime="20201030 18:28:26.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.220" endtime="20201030 18:28:26.521"></status>
</kw>
<msg timestamp="20201030 18:28:26.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01867025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019458, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:28:26.218" endtime="20201030 18:28:26.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01867025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019458, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:28:26.525" endtime="20201030 18:28:26.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.533" endtime="20201030 18:28:26.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.216" endtime="20201030 18:28:26.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.214" endtime="20201030 18:28:26.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:26.540" level="INFO">${PHILIP_RES} = [{'diff': 0.0007877500000000003}, {'diff': 0.0007872220000000006}, {'diff': 0.0007872090000000005}, {'diff': 0.0007872360000000002}, {'diff': 0.0007872360000000002}, {'diff': 0.0007872220000000006}, {...</msg>
<status status="PASS" starttime="20201030 18:28:26.537" endtime="20201030 18:28:26.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.544" level="INFO">${RESULT} = {'diff': [0.0007877500000000003, 0.0007872220000000006, 0.0007872090000000005, 0.0007872360000000002, 0.0007872360000000002, 0.0007872220000000006, 0.0007872780000000024, 0.0007872220000000006, 0.0007...</msg>
<status status="PASS" starttime="20201030 18:28:26.541" endtime="20201030 18:28:26.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.548" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:26.547" endtime="20201030 18:28:26.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.550" level="INFO">VALUE: [0.0007877500000000003, 0.0007872220000000006, 0.0007872090000000005, 0.0007872360000000002, 0.0007872360000000002, 0.0007872220000000006, 0.0007872780000000024, 0.0007872220000000006, 0.0007872360000000002, 0.0007872219999999971, 0.0007872090000000005, 0.0007872360000000002, 0.0007872360000000002, 0.0007872499999999998, 0.0007872219999999971, 0.0007872229999999966, 0.0007872639999999959, 0.0007872219999999971, 0.0007872360000000037, 0.0007871950000000044, 0.0007872220000000041, 0.0007872079999999976, 0.0007872359999999967, 0.0007872229999999966, 0.0007871809999999979, 0.0007872220000000041, 0.0007871940000000049, 0.0007872080000000045, 0.000787208999999997, 0.0007872219999999971, 0.0007872219999999971, 0.0007872219999999971, 0.0007872220000000041, 0.0007872230000000036, 0.0007872220000000041, 0.0007872359999999967, 0.0007872219999999971, 0.000787208999999997, 0.0007872079999999976, 0.0007872360000000037, 0.0007872220000000041, 0.000787208999999997, 0.0007872499999999963, 0.0007872079999999976, 0.0007871799999999984, 0.0007872079999999976, 0.0007872370000000031, 0.0007872220000000041, 0.0007872500000000032, 0.0007872359999999967]</msg>
<status status="PASS" starttime="20201030 18:28:26.549" endtime="20201030 18:28:26.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.545" endtime="20201030 18:28:26.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.556" endtime="20201030 18:28:26.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.555" endtime="20201030 18:28:26.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.554" endtime="20201030 18:28:26.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.147" endtime="20201030 18:28:26.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.147" endtime="20201030 18:28:26.577"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.586" endtime="20201030 18:28:26.638"></status>
</kw>
<msg timestamp="20201030 18:28:26.639" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.584" endtime="20201030 18:28:26.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.641" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.640" endtime="20201030 18:28:26.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.642" endtime="20201030 18:28:26.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.581" endtime="20201030 18:28:26.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.579" endtime="20201030 18:28:26.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.651" endtime="20201030 18:28:26.937"></status>
</kw>
<msg timestamp="20201030 18:28:26.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018016181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018835403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.650" endtime="20201030 18:28:26.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018016181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018835403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.941" endtime="20201030 18:28:26.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.949" endtime="20201030 18:28:26.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.647" endtime="20201030 18:28:26.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.645" endtime="20201030 18:28:26.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:26.955" level="INFO">${PHILIP_RES} = [{'diff': 0.0008192220000000014}, {'diff': 0.0008186950000000012}, {'diff': 0.0008187220000000009}, {'diff': 0.0008187220000000009}, {'diff': 0.00081875}, {'diff': 0.0008186810000000017}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:28:26.952" endtime="20201030 18:28:26.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.960" level="INFO">${RESULT} = {'diff': [0.0008192220000000014, 0.0008186950000000012, 0.0008187220000000009, 0.0008187220000000009, 0.00081875, 0.0008186810000000017, 0.0008187220000000009, 0.000818639000000003, 0.0008187220000000...</msg>
<status status="PASS" starttime="20201030 18:28:26.956" endtime="20201030 18:28:26.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.965" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:26.964" endtime="20201030 18:28:26.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.967" level="INFO">VALUE: [0.0008192220000000014, 0.0008186950000000012, 0.0008187220000000009, 0.0008187220000000009, 0.00081875, 0.0008186810000000017, 0.0008187220000000009, 0.000818639000000003, 0.0008187220000000009, 0.0008186939999999983, 0.0008186939999999983, 0.0008187360000000005, 0.0008187079999999979, 0.0008187219999999974, 0.0008186939999999983, 0.0008187079999999979, 0.0008186950000000012, 0.0008187639999999996, 0.0008187090000000008, 0.0008187090000000008, 0.0008186530000000025, 0.0008187090000000008, 0.0008186949999999943, 0.0008187220000000009, 0.0008187079999999944, 0.0008187220000000009, 0.0008187639999999996, 0.0008187080000000013, 0.000818721999999994, 0.0008186660000000026, 0.0008187360000000005, 0.0008187220000000009, 0.0008187220000000009, 0.0008187080000000013, 0.0008187080000000013, 0.0008187090000000008, 0.0008186519999999961, 0.0008187090000000008, 0.0008187230000000004, 0.0008187090000000008, 0.0008187360000000005, 0.00081875, 0.0008186950000000012, 0.0008187220000000009, 0.0008186940000000018, 0.0008187639999999996, 0.0008187220000000009, 0.0008186940000000018, 0.0008187080000000013, 0.0008186939999999948]</msg>
<status status="PASS" starttime="20201030 18:28:26.966" endtime="20201030 18:28:26.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.961" endtime="20201030 18:28:26.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.972" endtime="20201030 18:28:26.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.971" endtime="20201030 18:28:26.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.969" endtime="20201030 18:28:26.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.578" endtime="20201030 18:28:26.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.577" endtime="20201030 18:28:26.993"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.001" endtime="20201030 18:28:27.056"></status>
</kw>
<msg timestamp="20201030 18:28:27.057" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.000" endtime="20201030 18:28:27.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.059" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.058" endtime="20201030 18:28:27.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.060" endtime="20201030 18:28:27.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.997" endtime="20201030 18:28:27.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.995" endtime="20201030 18:28:27.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.069" endtime="20201030 18:28:27.376"></status>
</kw>
<msg timestamp="20201030 18:28:27.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017959597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018810931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.068" endtime="20201030 18:28:27.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017959597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018810931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.380" endtime="20201030 18:28:27.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.388" endtime="20201030 18:28:27.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.065" endtime="20201030 18:28:27.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.063" endtime="20201030 18:28:27.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:27.394" level="INFO">${PHILIP_RES} = [{'diff': 0.0008513339999999987}, {'diff': 0.0008508189999999992}, {'diff': 0.0008508189999999992}, {'diff': 0.0008508200000000021}, {'diff': 0.0008508190000000027}, {'diff': 0.0008508060000000026}, {...</msg>
<status status="PASS" starttime="20201030 18:28:27.391" endtime="20201030 18:28:27.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.398" level="INFO">${RESULT} = {'diff': [0.0008513339999999987, 0.0008508189999999992, 0.0008508189999999992, 0.0008508200000000021, 0.0008508190000000027, 0.0008508060000000026, 0.0008508050000000031, 0.0008508329999999988, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:28:27.395" endtime="20201030 18:28:27.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.403" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:27.402" endtime="20201030 18:28:27.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.405" level="INFO">VALUE: [0.0008513339999999987, 0.0008508189999999992, 0.0008508189999999992, 0.0008508200000000021, 0.0008508190000000027, 0.0008508060000000026, 0.0008508050000000031, 0.0008508329999999988, 0.0008508890000000005, 0.000850776999999997, 0.0008508199999999987, 0.0008508470000000018, 0.0008507919999999995, 0.0008508189999999992, 0.0008508329999999988, 0.0008508330000000022, 0.0008508190000000027, 0.0008508060000000026, 0.0008508050000000031, 0.0008508340000000017, 0.0008508330000000022, 0.000850791999999996, 0.0008508190000000027, 0.0008508049999999961, 0.0008507500000000043, 0.0008508189999999957, 0.0008508060000000026, 0.0008508189999999957, 0.0008508060000000026, 0.000850791999999996, 0.0008508190000000027, 0.0008508200000000021, 0.0008508050000000031, 0.0008508060000000026, 0.000850792000000003, 0.0008508470000000018, 0.0008508059999999956, 0.0008508190000000027, 0.0008508610000000014, 0.0008508050000000031, 0.0008508199999999952, 0.0008508190000000027, 0.0008508189999999957, 0.000850792000000003, 0.0008508329999999953, 0.0008508340000000017, 0.0008507779999999965, 0.0008508060000000026, 0.0008508330000000022, 0.0008508190000000027]</msg>
<status status="PASS" starttime="20201030 18:28:27.404" endtime="20201030 18:28:27.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.399" endtime="20201030 18:28:27.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.410" endtime="20201030 18:28:27.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.409" endtime="20201030 18:28:27.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.407" endtime="20201030 18:28:27.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.994" endtime="20201030 18:28:27.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.993" endtime="20201030 18:28:27.431"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.439" endtime="20201030 18:28:27.496"></status>
</kw>
<msg timestamp="20201030 18:28:27.497" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.438" endtime="20201030 18:28:27.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.499" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.498" endtime="20201030 18:28:27.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.501" endtime="20201030 18:28:27.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.435" endtime="20201030 18:28:27.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.433" endtime="20201030 18:28:27.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.510" endtime="20201030 18:28:27.795"></status>
</kw>
<msg timestamp="20201030 18:28:27.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018711917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.508" endtime="20201030 18:28:27.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018711917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.800" endtime="20201030 18:28:27.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.808" endtime="20201030 18:28:27.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.505" endtime="20201030 18:28:27.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.504" endtime="20201030 18:28:27.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:27.814" level="INFO">${PHILIP_RES} = [{'diff': 0.0008840139999999989}, {'diff': 0.0008835269999999985}, {'diff': 0.0008835409999999981}, {'diff': 0.000883542000000001}, {'diff': 0.000883527999999998}, {'diff': 0.0008835139999999984}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:27.811" endtime="20201030 18:28:27.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.818" level="INFO">${RESULT} = {'diff': [0.0008840139999999989, 0.0008835269999999985, 0.0008835409999999981, 0.000883542000000001, 0.000883527999999998, 0.0008835139999999984, 0.000883542000000001, 0.0008835419999999976, 0.0008835...</msg>
<status status="PASS" starttime="20201030 18:28:27.815" endtime="20201030 18:28:27.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.822" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:27.821" endtime="20201030 18:28:27.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.825" level="INFO">VALUE: [0.0008840139999999989, 0.0008835269999999985, 0.0008835409999999981, 0.000883542000000001, 0.000883527999999998, 0.0008835139999999984, 0.000883542000000001, 0.0008835419999999976, 0.0008835139999999984, 0.0008835280000000015, 0.0008834999999999989, 0.000883512999999999, 0.0008835000000000023, 0.000883527999999998, 0.0008835280000000015, 0.0008835560000000006, 0.0008835280000000015, 0.0008834999999999954, 0.000883542000000001, 0.0008834860000000028, 0.0008835140000000019, 0.0008835140000000019, 0.0008835410000000016, 0.0008835700000000002, 0.000883542000000001, 0.000883542000000001, 0.0008835140000000019, 0.000883542000000001, 0.000883513999999995, 0.0008835279999999945, 0.0008835280000000015, 0.0008835130000000024, 0.0008835410000000016, 0.0008835410000000016, 0.000883542000000001, 0.0008835279999999945, 0.0008834860000000028, 0.0008836109999999994, 0.0008835280000000015, 0.0008835140000000019, 0.0008835279999999945, 0.000883527000000002, 0.0008835690000000007, 0.0008835690000000007, 0.0008835280000000015, 0.0008835279999999945, 0.0008835280000000015, 0.0008835140000000019, 0.000883542000000001, 0.0008835279999999945]</msg>
<status status="PASS" starttime="20201030 18:28:27.823" endtime="20201030 18:28:27.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.819" endtime="20201030 18:28:27.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.831" endtime="20201030 18:28:27.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.829" endtime="20201030 18:28:27.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.828" endtime="20201030 18:28:27.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.432" endtime="20201030 18:28:27.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.431" endtime="20201030 18:28:27.851"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.860" endtime="20201030 18:28:27.918"></status>
</kw>
<msg timestamp="20201030 18:28:27.919" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.858" endtime="20201030 18:28:27.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.921" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.920" endtime="20201030 18:28:27.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.922" endtime="20201030 18:28:27.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.855" endtime="20201030 18:28:27.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.854" endtime="20201030 18:28:27.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.931" endtime="20201030 18:28:28.233"></status>
</kw>
<msg timestamp="20201030 18:28:28.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017888125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018805528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.930" endtime="20201030 18:28:28.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017888125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018805528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.237" endtime="20201030 18:28:28.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.245" endtime="20201030 18:28:28.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.927" endtime="20201030 18:28:28.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.925" endtime="20201030 18:28:28.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:28.251" level="INFO">${PHILIP_RES} = [{'diff': 0.0009174029999999972}, {'diff': 0.000916860999999998}, {'diff': 0.000916860999999998}, {'diff': 0.000916860999999998}, {'diff': 0.0009168059999999992}, {'diff': 0.0009168470000000019}, {'di...</msg>
<status status="PASS" starttime="20201030 18:28:28.248" endtime="20201030 18:28:28.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.256" level="INFO">${RESULT} = {'diff': [0.0009174029999999972, 0.000916860999999998, 0.000916860999999998, 0.000916860999999998, 0.0009168059999999992, 0.0009168470000000019, 0.000916875000000001, 0.0009168610000000015, 0.00091687...</msg>
<status status="PASS" starttime="20201030 18:28:28.252" endtime="20201030 18:28:28.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.261" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:28.260" endtime="20201030 18:28:28.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.263" level="INFO">VALUE: [0.0009174029999999972, 0.000916860999999998, 0.000916860999999998, 0.000916860999999998, 0.0009168059999999992, 0.0009168470000000019, 0.000916875000000001, 0.0009168610000000015, 0.000916875000000001, 0.0009168329999999988, 0.0009169169999999997, 0.000916860999999998, 0.0009168619999999975, 0.0009168610000000015, 0.0009168619999999975, 0.0009168610000000049, 0.0009168329999999988, 0.000916860999999998, 0.0009168469999999984, 0.000916860999999998, 0.0009168469999999984, 0.000916860999999998, 0.0009168750000000045, 0.0009168749999999976, 0.0009168330000000058, 0.0009168339999999983, 0.0009168610000000049, 0.000916860999999998, 0.0009168189999999993, 0.0009168619999999975, 0.0009168329999999988, 0.0009167640000000005, 0.0009168189999999993, 0.0009168329999999988, 0.000916860999999998, 0.0009168620000000044, 0.000916860999999998, 0.0009168330000000058, 0.0009168469999999984, 0.0009168189999999993, 0.000916860999999998, 0.000916860999999998, 0.0009168469999999984, 0.0009168749999999976, 0.0009168059999999992, 0.0009168329999999919, 0.0009168610000000049, 0.0009167919999999996, 0.0009168610000000049, 0.0009168189999999993]</msg>
<status status="PASS" starttime="20201030 18:28:28.262" endtime="20201030 18:28:28.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.257" endtime="20201030 18:28:28.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.268" endtime="20201030 18:28:28.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.267" endtime="20201030 18:28:28.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.265" endtime="20201030 18:28:28.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.852" endtime="20201030 18:28:28.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.852" endtime="20201030 18:28:28.289"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.297" endtime="20201030 18:28:28.357"></status>
</kw>
<msg timestamp="20201030 18:28:28.358" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.296" endtime="20201030 18:28:28.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.360" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.359" endtime="20201030 18:28:28.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.361" endtime="20201030 18:28:28.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.293" endtime="20201030 18:28:28.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.291" endtime="20201030 18:28:28.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.370" endtime="20201030 18:28:28.656"></status>
</kw>
<msg timestamp="20201030 18:28:28.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017887125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018838431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.369" endtime="20201030 18:28:28.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017887125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018838431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.661" endtime="20201030 18:28:28.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.669" endtime="20201030 18:28:28.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.366" endtime="20201030 18:28:28.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.364" endtime="20201030 18:28:28.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:28.675" level="INFO">${PHILIP_RES} = [{'diff': 0.000951305999999999}, {'diff': 0.0009507920000000024}, {'diff': 0.0009508200000000015}, {'diff': 0.0009507919999999989}, {'diff': 0.000950804999999999}, {'diff': 0.0009508750000000003}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:28.672" endtime="20201030 18:28:28.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.679" level="INFO">${RESULT} = {'diff': [0.000951305999999999, 0.0009507920000000024, 0.0009508200000000015, 0.0009507919999999989, 0.000950804999999999, 0.0009508750000000003, 0.0009507909999999994, 0.0009508610000000008, 0.000950...</msg>
<status status="PASS" starttime="20201030 18:28:28.676" endtime="20201030 18:28:28.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.683" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:28.682" endtime="20201030 18:28:28.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.686" level="INFO">VALUE: [0.000951305999999999, 0.0009507920000000024, 0.0009508200000000015, 0.0009507919999999989, 0.000950804999999999, 0.0009508750000000003, 0.0009507909999999994, 0.0009508610000000008, 0.0009508329999999982, 0.0009507919999999989, 0.0009507640000000032, 0.0009507910000000029, 0.0009507909999999994, 0.0009508050000000025, 0.0009507919999999989, 0.0009508059999999985, 0.0009508340000000046, 0.0009508059999999985, 0.000950804999999999, 0.0009508189999999986, 0.000950804999999999, 0.0009508610000000042, 0.0009508199999999981, 0.0009507779999999993, 0.0009507779999999993, 0.0009507909999999994, 0.0009507769999999999, 0.0009508189999999986, 0.0009507779999999993, 0.0009508059999999985, 0.0009508199999999981, 0.0009507500000000002, 0.0009507769999999999, 0.0009508189999999986, 0.0009508060000000054, 0.0009507500000000002, 0.0009508059999999985, 0.0009507779999999993, 0.0009507779999999993, 0.000950805000000006, 0.0009507779999999993, 0.0009507779999999993, 0.0009507499999999933, 0.0009508060000000054, 0.0009507920000000059, 0.000950804999999999, 0.0009507910000000064, 0.0009508059999999985, 0.0009507920000000059, 0.0009508059999999985]</msg>
<status status="PASS" starttime="20201030 18:28:28.685" endtime="20201030 18:28:28.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.680" endtime="20201030 18:28:28.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.691" endtime="20201030 18:28:28.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.689" endtime="20201030 18:28:28.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.688" endtime="20201030 18:28:28.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.290" endtime="20201030 18:28:28.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.289" endtime="20201030 18:28:28.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.547" endtime="20201030 18:28:28.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.716" endtime="20201030 18:28:28.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.714" endtime="20201030 18:28:28.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.713" endtime="20201030 18:28:28.736"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:06.353" endtime="20201030 18:28:28.736" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:44.166" endtime="20201030 18:28:28.745"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.815" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:28:28.824" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:28:29.817" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:28:28.814" endtime="20201030 18:28:29.818"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.821" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 18:28:29.819" endtime="20201030 18:28:30.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.813" endtime="20201030 18:28:30.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.829" endtime="20201030 18:28:31.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.826" endtime="20201030 18:28:31.051"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.063" endtime="20201030 18:28:31.085"></status>
</kw>
<msg timestamp="20201030 18:28:31.085" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.062" endtime="20201030 18:28:31.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.088" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.086" endtime="20201030 18:28:31.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.091" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:31.089" endtime="20201030 18:28:31.091"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:31.060" endtime="20201030 18:28:31.092"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:31.057" endtime="20201030 18:28:31.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.056" endtime="20201030 18:28:31.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:31.096" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:31.096" endtime="20201030 18:28:31.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.094" endtime="20201030 18:28:31.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.055" endtime="20201030 18:28:31.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.054" endtime="20201030 18:28:31.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.099" endtime="20201030 18:28:31.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.053" endtime="20201030 18:28:31.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.108" endtime="20201030 18:28:31.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.052" endtime="20201030 18:28:31.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.811" endtime="20201030 18:28:31.110"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.116" endtime="20201030 18:28:31.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.114" endtime="20201030 18:28:31.136"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.149" endtime="20201030 18:28:31.168"></status>
</kw>
<msg timestamp="20201030 18:28:31.168" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.147" endtime="20201030 18:28:31.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.171" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.169" endtime="20201030 18:28:31.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.174" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:31.172" endtime="20201030 18:28:31.174"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:31.145" endtime="20201030 18:28:31.175"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:31.143" endtime="20201030 18:28:31.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.141" endtime="20201030 18:28:31.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:31.179" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:31.179" endtime="20201030 18:28:31.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.176" endtime="20201030 18:28:31.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.140" endtime="20201030 18:28:31.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.140" endtime="20201030 18:28:31.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.181" endtime="20201030 18:28:31.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.138" endtime="20201030 18:28:31.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.137" endtime="20201030 18:28:31.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.113" endtime="20201030 18:28:31.184"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.194" endtime="20201030 18:28:31.212"></status>
</kw>
<msg timestamp="20201030 18:28:31.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.193" endtime="20201030 18:28:31.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.214" endtime="20201030 18:28:31.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.216" endtime="20201030 18:28:31.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.189" endtime="20201030 18:28:31.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.187" endtime="20201030 18:28:31.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.226" endtime="20201030 18:28:31.517"></status>
</kw>
<msg timestamp="20201030 18:28:31.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068794819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068823722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.224" endtime="20201030 18:28:31.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068794819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068823722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.521" endtime="20201030 18:28:31.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.530" endtime="20201030 18:28:31.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.222" endtime="20201030 18:28:31.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.220" endtime="20201030 18:28:31.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.536" level="INFO">${RESULT} = [{'diff': 2.890300000001067e-05}, {'diff': 2.6949999999970053e-06}, {'diff': 3.2219999999971716e-06}, {'diff': 3.2360000000036804e-06}, {'diff': 3.2080000000045406e-06}, {'diff': 3.2080000000045406e-0...</msg>
<status status="PASS" starttime="20201030 18:28:31.533" endtime="20201030 18:28:31.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.541" level="INFO">${ACCURACY} = {'diff': [2.890300000001067e-05, 2.6949999999970053e-06, 3.2219999999971716e-06, 3.2360000000036804e-06, 3.2080000000045406e-06, 3.2080000000045406e-06, 2.6389999999987257e-06, 3.2219999999971716e-06,...</msg>
<status status="PASS" starttime="20201030 18:28:31.537" endtime="20201030 18:28:31.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.546" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.545" endtime="20201030 18:28:31.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.549" level="INFO">VALUE: [2.890300000001067e-05, 2.6949999999970053e-06, 3.2219999999971716e-06, 3.2360000000036804e-06, 3.2080000000045406e-06, 3.2080000000045406e-06, 2.6389999999987257e-06, 3.2219999999971716e-06, 3.2079999999906628e-06, 3.2080000000045406e-06, 3.2089999999901364e-06, 2.6939999999975317e-06, 3.2360000000036804e-06, 2.7089999999896364e-06, 3.2219999999971716e-06, 3.1949999999975054e-06, 3.2080000000045406e-06, 2.7080000000040405e-06, 2.7219999999966715e-06, 3.1670000000122434e-06, 2.7080000000040405e-06, 3.1949999999975054e-06, 2.7360000000031803e-06, 2.7220000000105493e-06, 3.7219999999976716e-06, 3.2219999999971716e-06, 3.2220000000110494e-06, 3.1949999999975054e-06, 2.7219999999966715e-06, 2.6949999999970053e-06, 3.223000000010523e-06, 2.777999999994951e-06, 3.2219999999971716e-06, 2.7219999999966715e-06, 3.2079999999906628e-06, 2.6669999999978655e-06, 3.2219999999971716e-06, 3.2080000000045406e-06, 3.1250000000065947e-06, 3.2219999999971716e-06, 2.722999999996145e-06, 3.2079999999906628e-06, 3.209000000004014e-06, 3.2080000000045406e-06, 3.209000000004014e-06, 3.2219999999971716e-06, 3.2079999999906628e-06, 3.2219999999971716e-06, 2.7080000000040405e-06, 3.1669999999983656e-06]</msg>
<status status="PASS" starttime="20201030 18:28:31.547" endtime="20201030 18:28:31.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.542" endtime="20201030 18:28:31.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.553" endtime="20201030 18:28:31.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.552" endtime="20201030 18:28:31.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.550" endtime="20201030 18:28:31.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.185" endtime="20201030 18:28:31.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.185" endtime="20201030 18:28:31.574"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.582" endtime="20201030 18:28:31.600"></status>
</kw>
<msg timestamp="20201030 18:28:31.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.581" endtime="20201030 18:28:31.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.601" endtime="20201030 18:28:31.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.604" endtime="20201030 18:28:31.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.578" endtime="20201030 18:28:31.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.576" endtime="20201030 18:28:31.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.613" endtime="20201030 18:28:31.903"></status>
</kw>
<msg timestamp="20201030 18:28:31.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019484792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.612" endtime="20201030 18:28:31.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019484792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.907" endtime="20201030 18:28:31.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.915" endtime="20201030 18:28:31.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.609" endtime="20201030 18:28:31.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.608" endtime="20201030 18:28:31.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.922" level="INFO">${RESULT} = [{'diff': 3.7230000000006147e-06}, {'diff': 4.222999999997645e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.209000000001545e-06}, {'diff': 3.625000000000156e-06}, {'diff': 3.763000000000377e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:28:31.919" endtime="20201030 18:28:31.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.927" level="INFO">${ACCURACY} = {'diff': [3.7230000000006147e-06, 4.222999999997645e-06, 4.207999999998602e-06, 4.209000000001545e-06, 3.625000000000156e-06, 3.763000000000377e-06, 3.708000000001571e-06, 4.250000000000781e-06, 4.237...</msg>
<status status="PASS" starttime="20201030 18:28:31.923" endtime="20201030 18:28:31.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.932" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.931" endtime="20201030 18:28:31.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.934" level="INFO">VALUE: [3.7230000000006147e-06, 4.222999999997645e-06, 4.207999999998602e-06, 4.209000000001545e-06, 3.625000000000156e-06, 3.763000000000377e-06, 3.708000000001571e-06, 4.250000000000781e-06, 4.237000000000685e-06, 4.207999999998602e-06, 4.207999999998602e-06, 3.7359999999972415e-06, 3.7219999999976716e-06, 3.7230000000006147e-06, 4.194000000002501e-06, 4.721999999998672e-06, 3.722000000001141e-06, 3.6949999999980054e-06, 4.277999999999921e-06, 4.207999999998602e-06, 4.208000000002071e-06, 3.695000000001475e-06, 4.1809999999989356e-06, 4.236000000001211e-06, 3.7079999999981017e-06, 3.7230000000006147e-06, 3.7079999999981017e-06, 3.7359999999972415e-06, 4.222000000001641e-06, 3.708000000001571e-06, 3.722000000001141e-06, 4.138000000000752e-06, 3.709000000001045e-06, 4.222000000001641e-06, 3.763000000000377e-06, 3.7230000000006147e-06, 4.207999999998602e-06, 3.708000000001571e-06, 3.7079999999981017e-06, 4.208000000002071e-06, 4.209000000001545e-06, 4.208000000002071e-06, 4.208000000002071e-06, 4.264000000000351e-06, 4.222000000001641e-06, 3.709000000001045e-06, 4.193999999999032e-06, 3.7089999999975753e-06, 4.221999999998172e-06, 4.237000000000685e-06]</msg>
<status status="PASS" starttime="20201030 18:28:31.933" endtime="20201030 18:28:31.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.928" endtime="20201030 18:28:31.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.939" endtime="20201030 18:28:31.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.937" endtime="20201030 18:28:31.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.936" endtime="20201030 18:28:31.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.575" endtime="20201030 18:28:31.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.574" endtime="20201030 18:28:31.959"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.968" endtime="20201030 18:28:31.986"></status>
</kw>
<msg timestamp="20201030 18:28:31.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.966" endtime="20201030 18:28:31.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.988" endtime="20201030 18:28:31.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.990" endtime="20201030 18:28:31.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.964" endtime="20201030 18:28:31.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.962" endtime="20201030 18:28:31.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.000" endtime="20201030 18:28:32.283"></status>
</kw>
<msg timestamp="20201030 18:28:32.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019908417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019913111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.998" endtime="20201030 18:28:32.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019908417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019913111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.287" endtime="20201030 18:28:32.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.295" endtime="20201030 18:28:32.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.995" endtime="20201030 18:28:32.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.994" endtime="20201030 18:28:32.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.302" level="INFO">${RESULT} = [{'diff': 4.693999999999532e-06}, {'diff': 5.250000000001781e-06}, {'diff': 4.653000000000296e-06}, {'diff': 4.722000000002141e-06}, {'diff': 5.180999999999936e-06}, {'diff': 4.693999999999532e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:32.299" endtime="20201030 18:28:32.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.306" level="INFO">${ACCURACY} = {'diff': [4.693999999999532e-06, 5.250000000001781e-06, 4.653000000000296e-06, 4.722000000002141e-06, 5.180999999999936e-06, 4.693999999999532e-06, 4.722000000002141e-06, 5.667000000000866e-06, 5.6939...</msg>
<status status="PASS" starttime="20201030 18:28:32.303" endtime="20201030 18:28:32.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.310" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.309" endtime="20201030 18:28:32.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.313" level="INFO">VALUE: [4.693999999999532e-06, 5.250000000001781e-06, 4.653000000000296e-06, 4.722000000002141e-06, 5.180999999999936e-06, 4.693999999999532e-06, 4.722000000002141e-06, 5.667000000000866e-06, 5.6939999999970625e-06, 4.694000000003001e-06, 4.693999999999532e-06, 5.250000000001781e-06, 5.222999999998645e-06, 4.708000000002571e-06, 4.7089999999985754e-06, 4.653000000000296e-06, 5.221999999999172e-06, 4.707999999999102e-06, 5.1389999999977565e-06, 5.292000000000491e-06, 4.736000000001711e-06, 5.209000000002545e-06, 5.695000000000006e-06, 4.693999999999532e-06, 5.222999999998645e-06, 5.1949999999995056e-06, 5.223000000002115e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 5.153000000000796e-06, 5.708000000000102e-06, 4.7089999999985754e-06, 4.708000000002571e-06, 5.235999999998742e-06, 4.693999999999532e-06, 4.721999999998672e-06, 5.207999999999602e-06, 4.776999999997478e-06, 4.722999999998145e-06, 5.1949999999995056e-06, 5.2089999999990755e-06, 5.194000000000032e-06, 5.250000000001781e-06, 5.236000000002211e-06, 4.7499999999978115e-06, 4.639000000000726e-06, 4.721999999998672e-06, 5.207999999999602e-06, 4.693999999999532e-06, 5.236000000002211e-06]</msg>
<status status="PASS" starttime="20201030 18:28:32.312" endtime="20201030 18:28:32.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.307" endtime="20201030 18:28:32.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.317" endtime="20201030 18:28:32.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.316" endtime="20201030 18:28:32.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.315" endtime="20201030 18:28:32.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.960" endtime="20201030 18:28:32.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.960" endtime="20201030 18:28:32.338"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.348" endtime="20201030 18:28:32.365"></status>
</kw>
<msg timestamp="20201030 18:28:32.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.346" endtime="20201030 18:28:32.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.367" endtime="20201030 18:28:32.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.369" endtime="20201030 18:28:32.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.343" endtime="20201030 18:28:32.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.341" endtime="20201030 18:28:32.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.379" endtime="20201030 18:28:32.663"></status>
</kw>
<msg timestamp="20201030 18:28:32.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020961736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020968472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.377" endtime="20201030 18:28:32.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020961736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020968472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.667" endtime="20201030 18:28:32.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.676" endtime="20201030 18:28:32.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.374" endtime="20201030 18:28:32.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.373" endtime="20201030 18:28:32.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.683" level="INFO">${RESULT} = [{'diff': 6.735999999996772e-06}, {'diff': 6.7079999999976325e-06}, {'diff': 5.708000000000102e-06}, {'diff': 5.708000000000102e-06}, {'diff': 5.708000000000102e-06}, {'diff': 6.208000000000602e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:28:32.680" endtime="20201030 18:28:32.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.687" level="INFO">${ACCURACY} = {'diff': [6.735999999996772e-06, 6.7079999999976325e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.708000000000102e-06, 6.208000000000602e-06, 6.208000000000602e-06, 5.721999999999672e-06, 5.721...</msg>
<status status="PASS" starttime="20201030 18:28:32.684" endtime="20201030 18:28:32.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.692" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.691" endtime="20201030 18:28:32.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.694" level="INFO">VALUE: [6.735999999996772e-06, 6.7079999999976325e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.708000000000102e-06, 6.208000000000602e-06, 6.208000000000602e-06, 5.721999999999672e-06, 5.721999999999672e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 5.721999999999672e-06, 5.7089999999995755e-06, 6.180999999997466e-06, 5.7089999999995755e-06, 6.290999999998548e-06, 5.708000000000102e-06, 5.695000000000006e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 5.7089999999995755e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 5.708000000000102e-06, 5.7229999999991454e-06, 6.222000000000172e-06, 5.7079999999966324e-06, 6.208000000000602e-06, 6.1939999999975626e-06, 5.7089999999995755e-06, 5.721999999999672e-06, 6.194000000001032e-06, 5.708000000000102e-06, 5.721999999999672e-06, 6.208000000000602e-06, 6.264000000002351e-06, 6.195000000000506e-06, 5.694000000000532e-06, 6.167000000001366e-06, 5.7229999999991454e-06, 5.695000000000006e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.166999999997896e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 5.708000000000102e-06, 6.7230000000001455e-06]</msg>
<status status="PASS" starttime="20201030 18:28:32.693" endtime="20201030 18:28:32.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.688" endtime="20201030 18:28:32.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.700" endtime="20201030 18:28:32.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.698" endtime="20201030 18:28:32.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.697" endtime="20201030 18:28:32.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.339" endtime="20201030 18:28:32.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.338" endtime="20201030 18:28:32.721"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.730" endtime="20201030 18:28:32.747"></status>
</kw>
<msg timestamp="20201030 18:28:32.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.728" endtime="20201030 18:28:32.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.748" endtime="20201030 18:28:32.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.751" endtime="20201030 18:28:32.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.725" endtime="20201030 18:28:32.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.723" endtime="20201030 18:28:32.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.760" endtime="20201030 18:28:33.045"></status>
</kw>
<msg timestamp="20201030 18:28:33.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019991917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.759" endtime="20201030 18:28:33.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019991917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.049" endtime="20201030 18:28:33.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.057" endtime="20201030 18:28:33.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.756" endtime="20201030 18:28:33.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.754" endtime="20201030 18:28:33.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.064" level="INFO">${RESULT} = [{'diff': 7.193999999998563e-06}, {'diff': 6.708000000001102e-06}, {'diff': 7.1529999999993266e-06}, {'diff': 6.722000000000672e-06}, {'diff': 7.2230000000006456e-06}, {'diff': 7.208999999997606e-06},...</msg>
<status status="PASS" starttime="20201030 18:28:33.061" endtime="20201030 18:28:33.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.069" level="INFO">${ACCURACY} = {'diff': [7.193999999998563e-06, 6.708000000001102e-06, 7.1529999999993266e-06, 6.722000000000672e-06, 7.2230000000006456e-06, 7.208999999997606e-06, 7.208000000001602e-06, 6.7230000000001455e-06, 6.7...</msg>
<status status="PASS" starttime="20201030 18:28:33.065" endtime="20201030 18:28:33.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.073" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.072" endtime="20201030 18:28:33.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.076" level="INFO">VALUE: [7.193999999998563e-06, 6.708000000001102e-06, 7.1529999999993266e-06, 6.722000000000672e-06, 7.2230000000006456e-06, 7.208999999997606e-06, 7.208000000001602e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 6.709000000000576e-06, 7.2079999999981326e-06, 6.695000000001006e-06, 6.694000000001532e-06, 6.722000000000672e-06, 7.222000000001172e-06, 7.721999999998203e-06, 7.2079999999981326e-06, 7.208000000001602e-06, 6.709000000000576e-06, 7.194000000002032e-06, 7.2079999999981326e-06, 6.708000000001102e-06, 7.181000000001936e-06, 7.195000000001506e-06, 7.805000000003087e-06, 7.2079999999981326e-06, 7.722000000001672e-06, 6.708000000001102e-06, 6.7230000000001455e-06, 6.708999999997106e-06, 6.722000000000672e-06, 7.194000000002032e-06, 6.722000000000672e-06, 6.708000000001102e-06, 7.2079999999981326e-06, 7.208000000001602e-06, 6.722000000000672e-06, 6.693999999998063e-06, 7.209000000001076e-06, 7.181000000001936e-06, 7.2230000000006456e-06, 6.7219999999972024e-06, 7.208999999997606e-06, 7.181000000001936e-06, 7.708000000002102e-06, 7.222000000001172e-06, 6.694000000001532e-06, 6.708999999997106e-06, 7.722000000001672e-06, 7.208000000001602e-06]</msg>
<status status="PASS" starttime="20201030 18:28:33.074" endtime="20201030 18:28:33.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.070" endtime="20201030 18:28:33.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.081" endtime="20201030 18:28:33.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.079" endtime="20201030 18:28:33.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.078" endtime="20201030 18:28:33.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.722" endtime="20201030 18:28:33.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.721" endtime="20201030 18:28:33.101"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.110" endtime="20201030 18:28:33.126"></status>
</kw>
<msg timestamp="20201030 18:28:33.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.109" endtime="20201030 18:28:33.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.128" endtime="20201030 18:28:33.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.130" endtime="20201030 18:28:33.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.106" endtime="20201030 18:28:33.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.104" endtime="20201030 18:28:33.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.139" endtime="20201030 18:28:33.426"></status>
</kw>
<msg timestamp="20201030 18:28:33.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019568806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.138" endtime="20201030 18:28:33.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019568806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.432" endtime="20201030 18:28:33.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.442" endtime="20201030 18:28:33.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.135" endtime="20201030 18:28:33.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.134" endtime="20201030 18:28:33.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.452" level="INFO">${RESULT} = [{'diff': 7.695000000002006e-06}, {'diff': 8.207999999999133e-06}, {'diff': 7.777999999999952e-06}, {'diff': 8.194999999999036e-06}, {'diff': 8.207999999999133e-06}, {'diff': 8.207999999999133e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:33.447" endtime="20201030 18:28:33.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.457" level="INFO">${ACCURACY} = {'diff': [7.695000000002006e-06, 8.207999999999133e-06, 7.777999999999952e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.222000000002172e-06, 7.708000000002102e-06, 8.1939...</msg>
<status status="PASS" starttime="20201030 18:28:33.453" endtime="20201030 18:28:33.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.462" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.461" endtime="20201030 18:28:33.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.464" level="INFO">VALUE: [7.695000000002006e-06, 8.207999999999133e-06, 7.777999999999952e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.222000000002172e-06, 7.708000000002102e-06, 8.193999999999563e-06, 8.708999999999106e-06, 7.707999999998633e-06, 7.694999999998536e-06, 7.722000000001672e-06, 8.207999999999133e-06, 7.709000000001576e-06, 8.222000000002172e-06, 8.208999999998606e-06, 7.694000000002532e-06, 8.207999999999133e-06, 8.694999999999536e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.195000000002506e-06, 7.708999999998106e-06, 8.236000000001742e-06, 8.236999999997746e-06, 7.735999999997772e-06, 7.722000000001672e-06, 8.264000000000882e-06, 8.292000000000022e-06, 7.721999999998203e-06, 7.707999999998633e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.207999999999133e-06, 7.625000000000687e-06, 8.276999999997509e-06, 7.693999999999063e-06, 8.222000000002172e-06, 8.153000000000327e-06, 7.708999999998106e-06, 8.707999999999633e-06, 7.708999999998106e-06, 8.194999999999036e-06, 8.221999999998703e-06, 7.708000000002102e-06, 8.208999999998606e-06, 8.250000000001312e-06, 7.750000000000812e-06]</msg>
<status status="PASS" starttime="20201030 18:28:33.463" endtime="20201030 18:28:33.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.458" endtime="20201030 18:28:33.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.470" endtime="20201030 18:28:33.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.468" endtime="20201030 18:28:33.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.467" endtime="20201030 18:28:33.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.102" endtime="20201030 18:28:33.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.102" endtime="20201030 18:28:33.490"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.499" endtime="20201030 18:28:33.515"></status>
</kw>
<msg timestamp="20201030 18:28:33.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.497" endtime="20201030 18:28:33.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.517" endtime="20201030 18:28:33.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.519" endtime="20201030 18:28:33.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.495" endtime="20201030 18:28:33.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.493" endtime="20201030 18:28:33.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.529" endtime="20201030 18:28:33.815"></status>
</kw>
<msg timestamp="20201030 18:28:33.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020432653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.527" endtime="20201030 18:28:33.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020432653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.819" endtime="20201030 18:28:33.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.828" endtime="20201030 18:28:33.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.524" endtime="20201030 18:28:33.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.523" endtime="20201030 18:28:33.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.835" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.721999999999203e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:33.832" endtime="20201030 18:28:33.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.839" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.7220...</msg>
<status status="PASS" starttime="20201030 18:28:33.836" endtime="20201030 18:28:33.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.844" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.843" endtime="20201030 18:28:33.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.846" level="INFO">VALUE: [8.694000000000063e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.722999999998676e-06, 9.221999999999703e-06, 8.721999999999203e-06, 8.721999999999203e-06, 9.292000000001022e-06, 9.195000000000036e-06, 9.195000000000036e-06, 9.208000000000133e-06, 8.680999999999967e-06, 8.665999999997454e-06, 8.722999999998676e-06, 8.721999999999203e-06, 9.250000000002312e-06, 9.236000000002742e-06, 8.707999999999633e-06, 9.250000000002312e-06, 9.208000000000133e-06, 9.236999999998746e-06, 8.708999999999106e-06, 9.652999999998357e-06, 8.694000000000063e-06, 9.208000000000133e-06, 9.208000000000133e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.708999999999106e-06, 9.709000000000106e-06, 9.208000000000133e-06, 8.694000000000063e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.709000000000106e-06, 8.639000000001257e-06, 8.707999999999633e-06, 8.708999999999106e-06, 9.694000000001063e-06, 9.208000000000133e-06, 8.694000000000063e-06, 9.263999999998412e-06, 9.235999999999273e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201030 18:28:33.845" endtime="20201030 18:28:33.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.840" endtime="20201030 18:28:33.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.852" endtime="20201030 18:28:33.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.850" endtime="20201030 18:28:33.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.849" endtime="20201030 18:28:33.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.491" endtime="20201030 18:28:33.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.491" endtime="20201030 18:28:33.873"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.881" endtime="20201030 18:28:33.899"></status>
</kw>
<msg timestamp="20201030 18:28:33.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.880" endtime="20201030 18:28:33.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.901" endtime="20201030 18:28:33.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.903" endtime="20201030 18:28:33.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.877" endtime="20201030 18:28:33.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.875" endtime="20201030 18:28:33.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.913" endtime="20201030 18:28:34.200"></status>
</kw>
<msg timestamp="20201030 18:28:34.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019475667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.911" endtime="20201030 18:28:34.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019475667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.204" endtime="20201030 18:28:34.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.213" endtime="20201030 18:28:34.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.909" endtime="20201030 18:28:34.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.907" endtime="20201030 18:28:34.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.221" level="INFO">${RESULT} = [{'diff': 9.694999999997067e-06}, {'diff': 1.0180000000001993e-05}, {'diff': 9.722000000000203e-06}, {'diff': 9.695000000000537e-06}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0223000000000176e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:34.217" endtime="20201030 18:28:34.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.229" level="INFO">${ACCURACY} = {'diff': [9.694999999997067e-06, 1.0180000000001993e-05, 9.722000000000203e-06, 9.695000000000537e-06, 1.0222000000000703e-05, 1.0223000000000176e-05, 9.708000000000633e-06, 1.0263999999999412e-05, 9....</msg>
<status status="PASS" starttime="20201030 18:28:34.222" endtime="20201030 18:28:34.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.234" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.233" endtime="20201030 18:28:34.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.237" level="INFO">VALUE: [9.694999999997067e-06, 1.0180000000001993e-05, 9.722000000000203e-06, 9.695000000000537e-06, 1.0222000000000703e-05, 1.0223000000000176e-05, 9.708000000000633e-06, 1.0263999999999412e-05, 9.708000000000633e-06, 1.0221999999997233e-05, 9.722000000000203e-06, 9.776999999999009e-06, 1.0166000000002423e-05, 1.0208000000001133e-05, 9.722000000000203e-06, 1.0262999999999939e-05, 1.0124999999999718e-05, 1.0208000000001133e-05, 9.693999999997593e-06, 1.0709000000001107e-05, 9.639000000002257e-06, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0222999999996707e-05, 1.0195000000001037e-05, 9.722000000000203e-06, 9.722000000000203e-06, 9.694000000001063e-06, 1.0194000000001563e-05, 1.0236000000000273e-05, 1.0209000000000606e-05, 1.0125000000003187e-05, 9.680000000001493e-06, 9.708000000000633e-06, 1.0222000000000703e-05, 1.0709000000001107e-05, 1.0180999999997997e-05, 9.764000000002382e-06, 9.709000000000106e-06, 1.0222000000000703e-05, 1.0180000000001993e-05, 9.722000000000203e-06, 9.722999999999676e-06, 9.722000000000203e-06, 9.694000000001063e-06, 1.0249999999999843e-05, 1.0165999999998954e-05, 9.722999999999676e-06, 9.709000000000106e-06, 9.709000000000106e-06]</msg>
<status status="PASS" starttime="20201030 18:28:34.236" endtime="20201030 18:28:34.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.230" endtime="20201030 18:28:34.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.242" endtime="20201030 18:28:34.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.241" endtime="20201030 18:28:34.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.240" endtime="20201030 18:28:34.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.874" endtime="20201030 18:28:34.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.873" endtime="20201030 18:28:34.263"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.272" endtime="20201030 18:28:34.289"></status>
</kw>
<msg timestamp="20201030 18:28:34.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.270" endtime="20201030 18:28:34.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.291" endtime="20201030 18:28:34.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.293" endtime="20201030 18:28:34.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.267" endtime="20201030 18:28:34.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.265" endtime="20201030 18:28:34.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.302" endtime="20201030 18:28:34.588"></status>
</kw>
<msg timestamp="20201030 18:28:34.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019537333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.301" endtime="20201030 18:28:34.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019537333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.592" endtime="20201030 18:28:34.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.600" endtime="20201030 18:28:34.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.298" endtime="20201030 18:28:34.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.296" endtime="20201030 18:28:34.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.607" level="INFO">${RESULT} = [{'diff': 1.1179999999999524e-05}, {'diff': 1.1708000000002633e-05}, {'diff': 1.0721999999997733e-05}, {'diff': 1.1708000000002633e-05}, {'diff': 1.0680999999998497e-05}, {'diff': 1.1221999999998233e-...</msg>
<status status="PASS" starttime="20201030 18:28:34.604" endtime="20201030 18:28:34.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.611" level="INFO">${ACCURACY} = {'diff': [1.1179999999999524e-05, 1.1708000000002633e-05, 1.0721999999997733e-05, 1.1708000000002633e-05, 1.0680999999998497e-05, 1.1221999999998233e-05, 1.1208999999998137e-05, 1.1165999999999954e-05...</msg>
<status status="PASS" starttime="20201030 18:28:34.608" endtime="20201030 18:28:34.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.615" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.614" endtime="20201030 18:28:34.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.618" level="INFO">VALUE: [1.1179999999999524e-05, 1.1708000000002633e-05, 1.0721999999997733e-05, 1.1708000000002633e-05, 1.0680999999998497e-05, 1.1221999999998233e-05, 1.1208999999998137e-05, 1.1165999999999954e-05, 1.1236000000001273e-05, 1.1208000000002133e-05, 1.1207999999998663e-05, 1.0708000000001633e-05, 1.0723000000000676e-05, 1.1277999999999982e-05, 1.0694999999998067e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1723000000001677e-05, 1.1207999999998663e-05, 1.1235999999997803e-05, 1.1222000000001703e-05, 1.0722000000001203e-05, 1.1221999999998233e-05, 1.1208000000002133e-05, 1.1208999999998137e-05, 1.1207999999998663e-05, 1.0722000000001203e-05, 1.0709000000001107e-05, 1.1707999999999164e-05, 1.1194999999998567e-05, 1.0707999999998163e-05, 1.0708000000001633e-05, 1.0709000000001107e-05, 1.1222000000001703e-05, 1.1209000000001607e-05, 1.1236000000001273e-05, 1.1263999999996943e-05, 1.1221999999998233e-05, 1.1208000000002133e-05, 1.0709000000001107e-05, 1.0721999999997733e-05, 1.0693999999998594e-05, 1.1208000000002133e-05, 1.1207999999998663e-05, 1.1235999999997803e-05, 1.0709000000001107e-05, 1.0707999999998163e-05, 1.1193999999999094e-05, 1.1708999999998637e-05, 1.1221999999998233e-05]</msg>
<status status="PASS" starttime="20201030 18:28:34.616" endtime="20201030 18:28:34.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.612" endtime="20201030 18:28:34.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.623" endtime="20201030 18:28:34.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.621" endtime="20201030 18:28:34.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.620" endtime="20201030 18:28:34.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.264" endtime="20201030 18:28:34.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.263" endtime="20201030 18:28:34.644"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.652" endtime="20201030 18:28:34.671"></status>
</kw>
<msg timestamp="20201030 18:28:34.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.651" endtime="20201030 18:28:34.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.672" endtime="20201030 18:28:34.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.675" endtime="20201030 18:28:34.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.648" endtime="20201030 18:28:34.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.646" endtime="20201030 18:28:34.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.684" endtime="20201030 18:28:34.970"></status>
</kw>
<msg timestamp="20201030 18:28:34.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020405944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.682" endtime="20201030 18:28:34.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020405944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.975" endtime="20201030 18:28:34.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.983" endtime="20201030 18:28:34.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.680" endtime="20201030 18:28:34.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.678" endtime="20201030 18:28:34.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.990" level="INFO">${RESULT} = [{'diff': 1.2209000000002607e-05}, {'diff': 1.2221999999999233e-05}, {'diff': 1.2194999999999567e-05}, {'diff': 1.2223000000002177e-05}, {'diff': 1.1693999999999594e-05}, {'diff': 1.2249999999998373e-...</msg>
<status status="PASS" starttime="20201030 18:28:34.986" endtime="20201030 18:28:34.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.994" level="INFO">${ACCURACY} = {'diff': [1.2209000000002607e-05, 1.2221999999999233e-05, 1.2194999999999567e-05, 1.2223000000002177e-05, 1.1693999999999594e-05, 1.2249999999998373e-05, 1.2236000000002273e-05, 1.2208999999999137e-05...</msg>
<status status="PASS" starttime="20201030 18:28:34.991" endtime="20201030 18:28:34.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.998" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.997" endtime="20201030 18:28:34.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.001" level="INFO">VALUE: [1.2209000000002607e-05, 1.2221999999999233e-05, 1.2194999999999567e-05, 1.2223000000002177e-05, 1.1693999999999594e-05, 1.2249999999998373e-05, 1.2236000000002273e-05, 1.2208999999999137e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1723000000001677e-05, 1.2207999999999664e-05, 1.2708000000000164e-05, 1.2180000000000524e-05, 1.2208999999999137e-05, 1.1694999999999067e-05, 1.1694999999999067e-05, 1.1709000000002107e-05, 1.2235999999998803e-05, 1.1707999999999164e-05, 1.1709000000002107e-05, 1.2180000000000524e-05, 1.2708000000000164e-05, 1.2207999999999664e-05, 1.2180000000000524e-05, 1.1777000000001009e-05, 1.2153000000000858e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.2235999999998803e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.1707999999999164e-05, 1.2208000000003133e-05, 1.1721999999998733e-05, 1.1722000000002203e-05, 1.2708000000000164e-05, 1.1721999999998733e-05, 1.1749999999997873e-05, 1.1736000000001773e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2236000000002273e-05, 1.1721999999998733e-05, 1.1722000000002203e-05]</msg>
<status status="PASS" starttime="20201030 18:28:34.999" endtime="20201030 18:28:35.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.995" endtime="20201030 18:28:35.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.007" endtime="20201030 18:28:35.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.005" endtime="20201030 18:28:35.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.004" endtime="20201030 18:28:35.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.645" endtime="20201030 18:28:35.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.644" endtime="20201030 18:28:35.027"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.036" endtime="20201030 18:28:35.054"></status>
</kw>
<msg timestamp="20201030 18:28:35.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.034" endtime="20201030 18:28:35.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.055" endtime="20201030 18:28:35.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.058" endtime="20201030 18:28:35.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.032" endtime="20201030 18:28:35.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.030" endtime="20201030 18:28:35.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.067" endtime="20201030 18:28:35.352"></status>
</kw>
<msg timestamp="20201030 18:28:35.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019514083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.065" endtime="20201030 18:28:35.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019514083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.356" endtime="20201030 18:28:35.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.364" endtime="20201030 18:28:35.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.063" endtime="20201030 18:28:35.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.061" endtime="20201030 18:28:35.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.371" level="INFO">${RESULT} = [{'diff': 1.2708999999999637e-05}, {'diff': 1.3235999999999803e-05}, {'diff': 1.3207999999997194e-05}, {'diff': 1.3208000000000664e-05}, {'diff': 1.2708000000000164e-05}, {'diff': 1.3208000000000664e-...</msg>
<status status="PASS" starttime="20201030 18:28:35.368" endtime="20201030 18:28:35.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.376" level="INFO">${ACCURACY} = {'diff': [1.2708999999999637e-05, 1.3235999999999803e-05, 1.3207999999997194e-05, 1.3208000000000664e-05, 1.2708000000000164e-05, 1.3208000000000664e-05, 1.3694000000001594e-05, 1.3222999999999707e-05...</msg>
<status status="PASS" starttime="20201030 18:28:35.372" endtime="20201030 18:28:35.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.381" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.380" endtime="20201030 18:28:35.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.383" level="INFO">VALUE: [1.2708999999999637e-05, 1.3235999999999803e-05, 1.3207999999997194e-05, 1.3208000000000664e-05, 1.2708000000000164e-05, 1.3208000000000664e-05, 1.3694000000001594e-05, 1.3222999999999707e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3722000000000734e-05, 1.2708000000000164e-05, 1.3708000000001164e-05, 1.3208000000000664e-05, 1.3194000000001094e-05, 1.3693999999998124e-05, 1.2708999999999637e-05, 1.3222000000000234e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2708000000000164e-05, 1.3222999999999707e-05, 1.3222000000000234e-05, 1.3209000000000137e-05, 1.3222000000000234e-05, 1.2624999999998748e-05, 1.3209000000000137e-05, 1.3209000000000137e-05, 1.3194999999997098e-05, 1.2721999999999734e-05, 1.2653000000001358e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2806000000000622e-05, 1.3235999999999803e-05, 1.2721999999999734e-05, 1.3763999999999443e-05, 1.3235999999999803e-05, 1.3291000000002079e-05, 1.3180999999997528e-05, 1.3249999999999373e-05, 1.2721999999999734e-05, 1.3194000000001094e-05, 1.3264000000002413e-05, 1.2708999999999637e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.382" endtime="20201030 18:28:35.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.377" endtime="20201030 18:28:35.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.388" endtime="20201030 18:28:35.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.386" endtime="20201030 18:28:35.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.385" endtime="20201030 18:28:35.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.028" endtime="20201030 18:28:35.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.028" endtime="20201030 18:28:35.409"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.417" endtime="20201030 18:28:35.435"></status>
</kw>
<msg timestamp="20201030 18:28:35.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.416" endtime="20201030 18:28:35.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.437" endtime="20201030 18:28:35.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.439" endtime="20201030 18:28:35.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.413" endtime="20201030 18:28:35.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.411" endtime="20201030 18:28:35.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.448" endtime="20201030 18:28:35.735"></status>
</kw>
<msg timestamp="20201030 18:28:35.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.447" endtime="20201030 18:28:35.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.739" endtime="20201030 18:28:35.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.747" endtime="20201030 18:28:35.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.444" endtime="20201030 18:28:35.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.442" endtime="20201030 18:28:35.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.754" level="INFO">${RESULT} = [{'diff': 1.4263999999999943e-05}, {'diff': 1.3638999999999318e-05}, {'diff': 1.4222000000001234e-05}, {'diff': 1.3693999999998124e-05}, {'diff': 1.3709000000000637e-05}, {'diff': 1.3722000000000734e-...</msg>
<status status="PASS" starttime="20201030 18:28:35.751" endtime="20201030 18:28:35.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.758" level="INFO">${ACCURACY} = {'diff': [1.4263999999999943e-05, 1.3638999999999318e-05, 1.4222000000001234e-05, 1.3693999999998124e-05, 1.3709000000000637e-05, 1.3722000000000734e-05, 1.3694000000001594e-05, 1.3722000000000734e-05...</msg>
<status status="PASS" starttime="20201030 18:28:35.755" endtime="20201030 18:28:35.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.763" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.762" endtime="20201030 18:28:35.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.765" level="INFO">VALUE: [1.4263999999999943e-05, 1.3638999999999318e-05, 1.4222000000001234e-05, 1.3693999999998124e-05, 1.3709000000000637e-05, 1.3722000000000734e-05, 1.3694000000001594e-05, 1.3722000000000734e-05, 1.3695000000001067e-05, 1.3736000000000304e-05, 1.3694999999997598e-05, 1.4250000000000373e-05, 1.3708000000001164e-05, 1.3709000000000637e-05, 1.4208000000001664e-05, 1.4694999999998598e-05, 1.4207999999998194e-05, 1.4209000000001137e-05, 1.4208999999997668e-05, 1.4222000000001234e-05, 1.4208000000001664e-05, 1.3736000000000304e-05, 1.4221999999997764e-05, 1.4209000000001137e-05, 1.4222000000001234e-05, 1.3722000000000734e-05, 1.4208000000001664e-05, 1.4222999999997238e-05, 1.3722000000000734e-05, 1.4223000000000707e-05, 1.3708999999997168e-05, 1.4193999999998624e-05, 1.3749999999999873e-05, 1.4208000000001664e-05, 1.4221999999997764e-05, 1.427700000000004e-05, 1.3735999999996834e-05, 1.3707999999997694e-05, 1.4208000000001664e-05, 1.4208000000001664e-05, 1.3708999999997168e-05, 1.4250000000000373e-05, 1.3708000000001164e-05, 1.3694000000001594e-05, 1.3693999999998124e-05, 1.4207999999998194e-05, 1.4278000000002983e-05, 1.4221999999997764e-05, 1.4222000000001234e-05, 1.4236000000000804e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.764" endtime="20201030 18:28:35.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.759" endtime="20201030 18:28:35.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.770" endtime="20201030 18:28:35.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.769" endtime="20201030 18:28:35.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.767" endtime="20201030 18:28:35.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.410" endtime="20201030 18:28:35.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.409" endtime="20201030 18:28:35.791"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.802" endtime="20201030 18:28:35.819"></status>
</kw>
<msg timestamp="20201030 18:28:35.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.800" endtime="20201030 18:28:35.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.821" endtime="20201030 18:28:35.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.824" endtime="20201030 18:28:35.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.796" endtime="20201030 18:28:35.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.793" endtime="20201030 18:28:35.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.838" endtime="20201030 18:28:36.128"></status>
</kw>
<msg timestamp="20201030 18:28:36.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023158264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023173972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.833" endtime="20201030 18:28:36.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023158264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023173972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.132" endtime="20201030 18:28:36.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.141" endtime="20201030 18:28:36.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.830" endtime="20201030 18:28:36.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.828" endtime="20201030 18:28:36.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.147" level="INFO">${RESULT} = [{'diff': 1.5707999999999694e-05}, {'diff': 1.5195000000002568e-05}, {'diff': 1.5236000000001804e-05}, {'diff': 1.5236000000001804e-05}, {'diff': 1.4708000000002164e-05}, {'diff': 1.5195000000002568e-...</msg>
<status status="PASS" starttime="20201030 18:28:36.144" endtime="20201030 18:28:36.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.152" level="INFO">${ACCURACY} = {'diff': [1.5707999999999694e-05, 1.5195000000002568e-05, 1.5236000000001804e-05, 1.5236000000001804e-05, 1.4708000000002164e-05, 1.5195000000002568e-05, 1.5222000000002234e-05, 1.5235999999998334e-05...</msg>
<status status="PASS" starttime="20201030 18:28:36.148" endtime="20201030 18:28:36.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.156" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.155" endtime="20201030 18:28:36.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.159" level="INFO">VALUE: [1.5707999999999694e-05, 1.5195000000002568e-05, 1.5236000000001804e-05, 1.5236000000001804e-05, 1.4708000000002164e-05, 1.5195000000002568e-05, 1.5222000000002234e-05, 1.5235999999998334e-05, 1.5208999999998668e-05, 1.5236000000001804e-05, 1.5208999999998668e-05, 1.4736000000001304e-05, 1.4707999999998694e-05, 1.5208000000002664e-05, 1.5180999999999528e-05, 1.4708999999998168e-05, 1.4708000000002164e-05, 1.5193999999999624e-05, 1.4707999999998694e-05, 1.5694999999999598e-05, 1.5221999999998764e-05, 1.4681000000002498e-05, 1.5707999999999694e-05, 1.5222000000002234e-05, 1.4652999999999888e-05, 1.4666999999999458e-05, 1.5708999999999168e-05, 1.4763999999996974e-05, 1.5223000000001707e-05, 1.4708999999998168e-05, 1.5208999999998668e-05, 1.5235999999998334e-05, 1.4778000000000013e-05, 1.4693999999999124e-05, 1.5208000000002664e-05, 1.5207999999999194e-05, 1.5208999999998668e-05, 1.5236000000001804e-05, 1.5249999999997904e-05, 1.4707999999998694e-05, 1.5207999999999194e-05, 1.5207999999999194e-05, 1.5237000000001277e-05, 1.5207999999999194e-05, 1.4723000000001207e-05, 1.4722000000001734e-05, 1.5221999999998764e-05, 1.4707999999998694e-05, 1.5207999999999194e-05, 1.5207999999999194e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.157" endtime="20201030 18:28:36.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.152" endtime="20201030 18:28:36.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.169" endtime="20201030 18:28:36.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.167" endtime="20201030 18:28:36.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.166" endtime="20201030 18:28:36.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.792" endtime="20201030 18:28:36.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.791" endtime="20201030 18:28:36.189"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.198" endtime="20201030 18:28:36.216"></status>
</kw>
<msg timestamp="20201030 18:28:36.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.196" endtime="20201030 18:28:36.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.217" endtime="20201030 18:28:36.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.220" endtime="20201030 18:28:36.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.194" endtime="20201030 18:28:36.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.192" endtime="20201030 18:28:36.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.229" endtime="20201030 18:28:36.515"></status>
</kw>
<msg timestamp="20201030 18:28:36.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019546958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.227" endtime="20201030 18:28:36.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019546958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.519" endtime="20201030 18:28:36.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.527" endtime="20201030 18:28:36.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.225" endtime="20201030 18:28:36.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.223" endtime="20201030 18:28:36.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.534" level="INFO">${RESULT} = [{'diff': 1.5694999999999598e-05}, {'diff': 1.5694999999999598e-05}, {'diff': 1.6208999999999668e-05}, {'diff': 1.6208000000000194e-05}, {'diff': 1.5707999999999694e-05}, {'diff': 1.5721999999999264e-...</msg>
<status status="PASS" starttime="20201030 18:28:36.531" endtime="20201030 18:28:36.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.539" level="INFO">${ACCURACY} = {'diff': [1.5694999999999598e-05, 1.5694999999999598e-05, 1.6208999999999668e-05, 1.6208000000000194e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.6208000000000194e-05, 1.5707999999999694e-05...</msg>
<status status="PASS" starttime="20201030 18:28:36.535" endtime="20201030 18:28:36.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.543" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.542" endtime="20201030 18:28:36.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.546" level="INFO">VALUE: [1.5694999999999598e-05, 1.5694999999999598e-05, 1.6208999999999668e-05, 1.6208000000000194e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.6208000000000194e-05, 1.5707999999999694e-05, 1.6208999999999668e-05, 1.5749999999998404e-05, 1.6708000000000695e-05, 1.6221999999999764e-05, 1.5694000000000125e-05, 1.6194000000000625e-05, 1.5707999999999694e-05, 1.563900000000132e-05, 1.5721999999999264e-05, 1.5708999999999168e-05, 1.6221999999999764e-05, 1.5736000000002304e-05, 1.6208999999999668e-05, 1.6262999999999e-05, 1.6221999999999764e-05, 1.5721999999999264e-05, 1.5708999999999168e-05, 1.6221999999999764e-05, 1.6709000000000168e-05, 1.5708999999999168e-05, 1.5721999999999264e-05, 1.5708999999999168e-05, 1.6221999999999764e-05, 1.5694999999999598e-05, 1.5707999999999694e-05, 1.6208999999999668e-05, 1.6208999999999668e-05, 1.6208000000000194e-05, 1.5694000000000125e-05, 1.6722000000000264e-05, 1.6208999999999668e-05, 1.6208000000000194e-05, 1.6221999999999764e-05, 1.6235999999999334e-05, 1.6222000000003234e-05, 1.5694000000000125e-05, 1.6208999999999668e-05, 1.6263999999998474e-05, 1.6181000000000528e-05, 1.5708999999999168e-05, 1.5694000000000125e-05, 1.6208000000000194e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.545" endtime="20201030 18:28:36.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.540" endtime="20201030 18:28:36.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.551" endtime="20201030 18:28:36.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.549" endtime="20201030 18:28:36.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.548" endtime="20201030 18:28:36.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.190" endtime="20201030 18:28:36.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.190" endtime="20201030 18:28:36.572"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.580" endtime="20201030 18:28:36.598"></status>
</kw>
<msg timestamp="20201030 18:28:36.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.579" endtime="20201030 18:28:36.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.599" endtime="20201030 18:28:36.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.602" endtime="20201030 18:28:36.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.576" endtime="20201030 18:28:36.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.574" endtime="20201030 18:28:36.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.611" endtime="20201030 18:28:36.898"></status>
</kw>
<msg timestamp="20201030 18:28:36.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01961625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:36.609" endtime="20201030 18:28:36.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01961625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:36.903" endtime="20201030 18:28:36.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.911" endtime="20201030 18:28:36.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.607" endtime="20201030 18:28:36.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.605" endtime="20201030 18:28:36.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.917" level="INFO">${RESULT} = [{'diff': 1.7221999999997295e-05}, {'diff': 1.6708000000000695e-05}, {'diff': 1.72089999999972e-05}, {'diff': 1.718099999999806e-05}, {'diff': 1.7222000000000764e-05}, {'diff': 1.7222000000000764e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:36.914" endtime="20201030 18:28:36.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.923" level="INFO">${ACCURACY} = {'diff': [1.7221999999997295e-05, 1.6708000000000695e-05, 1.72089999999972e-05, 1.718099999999806e-05, 1.7222000000000764e-05, 1.7222000000000764e-05, 1.7209000000000668e-05, 1.7693999999998655e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:28:36.919" endtime="20201030 18:28:36.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.929" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.928" endtime="20201030 18:28:36.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.933" level="INFO">VALUE: [1.7221999999997295e-05, 1.6708000000000695e-05, 1.72089999999972e-05, 1.718099999999806e-05, 1.7222000000000764e-05, 1.7222000000000764e-05, 1.7209000000000668e-05, 1.7693999999998655e-05, 1.6709000000000168e-05, 1.6735999999999834e-05, 1.7208000000001195e-05, 1.7236000000000334e-05, 1.7249999999999904e-05, 1.6709000000000168e-05, 1.7193999999998155e-05, 1.72089999999972e-05, 1.7236000000000334e-05, 1.7249999999999904e-05, 1.7223000000000238e-05, 1.7193999999998155e-05, 1.7208000000001195e-05, 1.6707999999997225e-05, 1.7709000000001168e-05, 1.6735999999999834e-05, 1.7222000000000764e-05, 1.716699999999849e-05, 1.6722000000000264e-05, 1.7222000000000764e-05, 1.7277999999999044e-05, 1.6722000000000264e-05, 1.7166000000002485e-05, 1.7223000000000238e-05, 1.7223000000000238e-05, 1.6693999999997655e-05, 1.7222000000000764e-05, 1.6722000000000264e-05, 1.72089999999972e-05, 1.7208000000001195e-05, 1.7221999999997295e-05, 1.6708000000000695e-05, 1.7236000000000334e-05, 1.7236000000000334e-05, 1.7180000000002055e-05, 1.6709000000000168e-05, 1.6665999999998515e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.6709000000000168e-05, 1.6709000000000168e-05, 1.6722000000000264e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.931" endtime="20201030 18:28:36.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.924" endtime="20201030 18:28:36.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.940" endtime="20201030 18:28:36.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.938" endtime="20201030 18:28:36.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.936" endtime="20201030 18:28:36.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.573" endtime="20201030 18:28:36.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.572" endtime="20201030 18:28:36.961"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.970" endtime="20201030 18:28:36.988"></status>
</kw>
<msg timestamp="20201030 18:28:36.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.968" endtime="20201030 18:28:36.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.989" endtime="20201030 18:28:36.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.992" endtime="20201030 18:28:36.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.965" endtime="20201030 18:28:36.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.963" endtime="20201030 18:28:36.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.001" endtime="20201030 18:28:37.288"></status>
</kw>
<msg timestamp="20201030 18:28:37.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0206855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020703722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:36.999" endtime="20201030 18:28:37.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0206855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020703722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:37.292" endtime="20201030 18:28:37.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.301" endtime="20201030 18:28:37.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.997" endtime="20201030 18:28:37.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.995" endtime="20201030 18:28:37.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.307" level="INFO">${RESULT} = [{'diff': 1.8222000000001765e-05}, {'diff': 1.7722000000001265e-05}, {'diff': 1.8694000000003125e-05}, {'diff': 1.8193999999999155e-05}, {'diff': 1.7722000000001265e-05}, {'diff': 1.769499999999813e-0...</msg>
<status status="PASS" starttime="20201030 18:28:37.304" endtime="20201030 18:28:37.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.311" level="INFO">${ACCURACY} = {'diff': [1.8222000000001765e-05, 1.7722000000001265e-05, 1.8694000000003125e-05, 1.8193999999999155e-05, 1.7722000000001265e-05, 1.769499999999813e-05, 1.8208000000002195e-05, 1.7709000000001168e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:37.308" endtime="20201030 18:28:37.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.316" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.315" endtime="20201030 18:28:37.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.318" level="INFO">VALUE: [1.8222000000001765e-05, 1.7722000000001265e-05, 1.8694000000003125e-05, 1.8193999999999155e-05, 1.7722000000001265e-05, 1.769499999999813e-05, 1.8208000000002195e-05, 1.7709000000001168e-05, 1.8221999999998295e-05, 1.7736000000000834e-05, 1.7736000000000834e-05, 1.7707999999998225e-05, 1.8209000000001668e-05, 1.7707999999998225e-05, 1.7722000000001265e-05, 1.8222000000001765e-05, 1.7750000000000404e-05, 1.7722000000001265e-05, 1.8179999999999585e-05, 1.8221999999998295e-05, 1.8236000000001334e-05, 1.8264000000000474e-05, 1.8708000000002695e-05, 1.76950000000016e-05, 1.7709000000001168e-05, 1.82089999999982e-05, 1.822299999999777e-05, 1.8208000000002195e-05, 1.7721999999997795e-05, 1.7708000000001695e-05, 1.7722000000001265e-05, 1.8236000000001334e-05, 1.8223000000001238e-05, 1.819499999999863e-05, 1.8222000000001765e-05, 1.7723000000000738e-05, 1.765299999999942e-05, 1.822299999999777e-05, 1.7721999999997795e-05, 1.8207999999998725e-05, 1.82089999999982e-05, 1.8207999999998725e-05, 1.822299999999777e-05, 1.7694000000002125e-05, 1.8237000000000808e-05, 1.7722000000001265e-05, 1.8209000000001668e-05, 1.819499999999863e-05, 1.8249999999997435e-05, 1.8223000000001238e-05]</msg>
<status status="PASS" starttime="20201030 18:28:37.317" endtime="20201030 18:28:37.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.312" endtime="20201030 18:28:37.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.324" endtime="20201030 18:28:37.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.323" endtime="20201030 18:28:37.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.322" endtime="20201030 18:28:37.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.962" endtime="20201030 18:28:37.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.961" endtime="20201030 18:28:37.345"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.354" endtime="20201030 18:28:37.370"></status>
</kw>
<msg timestamp="20201030 18:28:37.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.352" endtime="20201030 18:28:37.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.371" endtime="20201030 18:28:37.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.374" endtime="20201030 18:28:37.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.349" endtime="20201030 18:28:37.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.347" endtime="20201030 18:28:37.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.383" endtime="20201030 18:28:37.670"></status>
</kw>
<msg timestamp="20201030 18:28:37.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019641278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.381" endtime="20201030 18:28:37.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019641278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.674" endtime="20201030 18:28:37.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.682" endtime="20201030 18:28:37.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.379" endtime="20201030 18:28:37.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.377" endtime="20201030 18:28:37.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.689" level="INFO">${RESULT} = [{'diff': 1.916700000000049e-05}, {'diff': 1.920900000000267e-05}, {'diff': 1.87089999999987e-05}, {'diff': 1.8694000000003125e-05}, {'diff': 1.8735999999998365e-05}, {'diff': 1.8707999999999225e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:37.685" endtime="20201030 18:28:37.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.696" level="INFO">${ACCURACY} = {'diff': [1.916700000000049e-05, 1.920900000000267e-05, 1.87089999999987e-05, 1.8694000000003125e-05, 1.8735999999998365e-05, 1.8707999999999225e-05, 1.9152000000001446e-05, 1.869499999999913e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 18:28:37.690" endtime="20201030 18:28:37.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.701" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.700" endtime="20201030 18:28:37.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.703" level="INFO">VALUE: [1.916700000000049e-05, 1.920900000000267e-05, 1.87089999999987e-05, 1.8694000000003125e-05, 1.8735999999998365e-05, 1.8707999999999225e-05, 1.9152000000001446e-05, 1.869499999999913e-05, 1.97089999999997e-05, 1.9221999999999295e-05, 1.8707999999999225e-05, 1.8721999999998795e-05, 1.9264000000001474e-05, 1.8736000000001835e-05, 1.9223000000002238e-05, 1.9235999999998865e-05, 1.92089999999992e-05, 1.87089999999987e-05, 1.92089999999992e-05, 1.9207999999999725e-05, 1.915300000000092e-05, 1.9221999999999295e-05, 1.9221999999999295e-05, 1.92089999999992e-05, 1.9221999999999295e-05, 1.8694000000003125e-05, 1.9708000000000225e-05, 1.8722000000002265e-05, 1.920900000000267e-05, 1.866699999999999e-05, 1.9223000000002238e-05, 1.870900000000217e-05, 1.8693999999999655e-05, 1.8707999999999225e-05, 1.91950000000031e-05, 1.919499999999963e-05, 1.8707999999999225e-05, 1.9207999999999725e-05, 1.9207999999999725e-05, 1.9235999999998865e-05, 1.92089999999992e-05, 1.9221999999999295e-05, 1.8708000000002695e-05, 1.9249999999998435e-05, 1.8693999999999655e-05, 1.8707999999999225e-05, 1.9207999999999725e-05, 1.8721999999998795e-05, 1.8722000000002265e-05, 1.9221999999999295e-05]</msg>
<status status="PASS" starttime="20201030 18:28:37.702" endtime="20201030 18:28:37.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.697" endtime="20201030 18:28:37.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.708" endtime="20201030 18:28:37.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.706" endtime="20201030 18:28:37.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.705" endtime="20201030 18:28:37.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.346" endtime="20201030 18:28:37.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.345" endtime="20201030 18:28:37.729"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.737" endtime="20201030 18:28:37.754"></status>
</kw>
<msg timestamp="20201030 18:28:37.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.736" endtime="20201030 18:28:37.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.756" endtime="20201030 18:28:37.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.758" endtime="20201030 18:28:37.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.733" endtime="20201030 18:28:37.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.731" endtime="20201030 18:28:37.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.767" endtime="20201030 18:28:38.054"></status>
</kw>
<msg timestamp="20201030 18:28:38.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019808278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.766" endtime="20201030 18:28:38.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019808278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.058" endtime="20201030 18:28:38.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.067" endtime="20201030 18:28:38.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.763" endtime="20201030 18:28:38.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.761" endtime="20201030 18:28:38.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.073" level="INFO">${RESULT} = [{'diff': 2.0194000000001155e-05}, {'diff': 2.0250000000002905e-05}, {'diff': 1.9721999999999795e-05}, {'diff': 2.02090000000002e-05}, {'diff': 2.0207999999997256e-05}, {'diff': 1.9708000000000225e-05...</msg>
<status status="PASS" starttime="20201030 18:28:38.070" endtime="20201030 18:28:38.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.077" level="INFO">${ACCURACY} = {'diff': [2.0194000000001155e-05, 2.0250000000002905e-05, 1.9721999999999795e-05, 2.02090000000002e-05, 2.0207999999997256e-05, 1.9708000000000225e-05, 2.0222000000000295e-05, 2.0707999999997756e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:38.074" endtime="20201030 18:28:38.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.082" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.081" endtime="20201030 18:28:38.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.084" level="INFO">VALUE: [2.0194000000001155e-05, 2.0250000000002905e-05, 1.9721999999999795e-05, 2.02090000000002e-05, 2.0207999999997256e-05, 1.9708000000000225e-05, 2.0222000000000295e-05, 2.0707999999997756e-05, 1.9721999999999795e-05, 2.0263999999999005e-05, 1.9721999999999795e-05, 2.0235999999999865e-05, 1.9680000000001086e-05, 2.0721999999997326e-05, 1.968100000000056e-05, 2.0208000000000725e-05, 2.0194000000001155e-05, 2.0222000000000295e-05, 2.02090000000002e-05, 1.9721999999999795e-05, 1.968100000000056e-05, 1.9693999999997186e-05, 2.069500000000113e-05, 1.9737000000002308e-05, 1.9721999999999795e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 2.0208000000000725e-05, 2.0222000000000295e-05, 1.97089999999997e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 2.0222000000000295e-05, 2.0263999999999005e-05, 2.0708000000001225e-05, 2.0193999999997686e-05, 2.0194000000001155e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 2.0222000000000295e-05, 1.9707999999996756e-05, 1.9735999999999365e-05, 1.9708000000000225e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 2.0194000000001155e-05, 2.0722000000000795e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.083" endtime="20201030 18:28:38.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.078" endtime="20201030 18:28:38.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.089" endtime="20201030 18:28:38.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.088" endtime="20201030 18:28:38.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.086" endtime="20201030 18:28:38.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.730" endtime="20201030 18:28:38.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.729" endtime="20201030 18:28:38.110"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.119" endtime="20201030 18:28:38.137"></status>
</kw>
<msg timestamp="20201030 18:28:38.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.117" endtime="20201030 18:28:38.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.138" endtime="20201030 18:28:38.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.141" endtime="20201030 18:28:38.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.114" endtime="20201030 18:28:38.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.112" endtime="20201030 18:28:38.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.150" endtime="20201030 18:28:38.437"></status>
</kw>
<msg timestamp="20201030 18:28:38.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020414278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204355, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:38.148" endtime="20201030 18:28:38.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020414278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204355, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:38.441" endtime="20201030 18:28:38.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.449" endtime="20201030 18:28:38.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.146" endtime="20201030 18:28:38.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.144" endtime="20201030 18:28:38.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.456" level="INFO">${RESULT} = [{'diff': 2.1221999999997826e-05}, {'diff': 2.0665999999999046e-05}, {'diff': 2.0708000000001225e-05}, {'diff': 2.0792000000002114e-05}, {'diff': 2.0679999999998616e-05}, {'diff': 2.0736000000000365e-...</msg>
<status status="PASS" starttime="20201030 18:28:38.452" endtime="20201030 18:28:38.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.460" level="INFO">${ACCURACY} = {'diff': [2.1221999999997826e-05, 2.0665999999999046e-05, 2.0708000000001225e-05, 2.0792000000002114e-05, 2.0679999999998616e-05, 2.0736000000000365e-05, 2.072300000000027e-05, 2.0707999999997756e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:38.457" endtime="20201030 18:28:38.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.464" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.463" endtime="20201030 18:28:38.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.467" level="INFO">VALUE: [2.1221999999997826e-05, 2.0665999999999046e-05, 2.0708000000001225e-05, 2.0792000000002114e-05, 2.0679999999998616e-05, 2.0736000000000365e-05, 2.072300000000027e-05, 2.0707999999997756e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2.065299999999895e-05, 2.068099999999809e-05, 2.1221999999997826e-05, 2.0707999999997756e-05, 2.0707999999997756e-05, 2.119500000000163e-05, 2.1221999999997826e-05, 2.1208000000001725e-05, 2.1208000000001725e-05, 2.069500000000113e-05, 2.0722000000000795e-05, 2.0707999999997756e-05, 2.172300000000127e-05, 2.0736000000000365e-05, 2.0722000000000795e-05, 2.0707999999997756e-05, 2.1193999999998686e-05, 2.1235999999997396e-05, 2.12090000000012e-05, 2.0736000000000365e-05, 2.1222000000001295e-05, 2.0722000000000795e-05, 2.07090000000007e-05, 2.07090000000007e-05, 2.0722000000000795e-05, 2.0707999999997756e-05, 2.070899999999723e-05, 2.1207999999998256e-05, 2.1291999999999145e-05, 2.1236000000000865e-05, 2.1221999999997826e-05, 2.170899999999823e-05, 2.1165999999999546e-05, 2.1208000000001725e-05, 2.0736000000000365e-05, 2.0722000000000795e-05, 2.1208000000001725e-05, 2.122300000000077e-05, 2.0722000000000795e-05, 2.12090000000012e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.465" endtime="20201030 18:28:38.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.461" endtime="20201030 18:28:38.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.473" endtime="20201030 18:28:38.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.471" endtime="20201030 18:28:38.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.470" endtime="20201030 18:28:38.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.111" endtime="20201030 18:28:38.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.110" endtime="20201030 18:28:38.493"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.502" endtime="20201030 18:28:38.519"></status>
</kw>
<msg timestamp="20201030 18:28:38.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.500" endtime="20201030 18:28:38.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.521" endtime="20201030 18:28:38.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.523" endtime="20201030 18:28:38.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.498" endtime="20201030 18:28:38.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.496" endtime="20201030 18:28:38.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.532" endtime="20201030 18:28:38.818"></status>
</kw>
<msg timestamp="20201030 18:28:38.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019530556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.531" endtime="20201030 18:28:38.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019530556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.823" endtime="20201030 18:28:38.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.831" endtime="20201030 18:28:38.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.528" endtime="20201030 18:28:38.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.527" endtime="20201030 18:28:38.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.838" level="INFO">${RESULT} = [{'diff': 2.2262999999998062e-05}, {'diff': 2.218099999999959e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.1707999999998756e-05}, {'diff': 2.1722000000001795e-05}, {'diff': 2.1721999999998326e-0...</msg>
<status status="PASS" starttime="20201030 18:28:38.834" endtime="20201030 18:28:38.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.843" level="INFO">${ACCURACY} = {'diff': [2.2262999999998062e-05, 2.218099999999959e-05, 2.2207999999999256e-05, 2.1707999999998756e-05, 2.1722000000001795e-05, 2.1721999999998326e-05, 2.2221999999998826e-05, 2.1708000000002226e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:38.839" endtime="20201030 18:28:38.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.847" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.846" endtime="20201030 18:28:38.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.850" level="INFO">VALUE: [2.2262999999998062e-05, 2.218099999999959e-05, 2.2207999999999256e-05, 2.1707999999998756e-05, 2.1722000000001795e-05, 2.1721999999998326e-05, 2.2221999999998826e-05, 2.1708000000002226e-05, 2.172300000000127e-05, 2.1722000000001795e-05, 2.220899999999873e-05, 2.1694000000002656e-05, 2.1707999999998756e-05, 2.2707999999999756e-05, 2.170899999999823e-05, 2.1721999999998326e-05, 2.2207999999999256e-05, 2.170899999999823e-05, 2.1721999999998326e-05, 2.22229999999983e-05, 2.2180000000000116e-05, 2.1708000000002226e-05, 2.1721999999998326e-05, 2.222300000000177e-05, 2.1707999999998756e-05, 2.220899999999873e-05, 2.2278000000000575e-05, 2.2236000000001865e-05, 2.169499999999866e-05, 2.2207999999999256e-05, 2.216700000000002e-05, 2.2264000000001005e-05, 2.229100000000067e-05, 2.1721999999998326e-05, 2.1778000000000075e-05, 2.22229999999983e-05, 2.2207999999999256e-05, 2.1707999999998756e-05, 2.2250000000001435e-05, 2.2221999999998826e-05, 2.170899999999823e-05, 2.2208000000002726e-05, 2.22229999999983e-05, 2.220899999999873e-05, 2.223699999999787e-05, 2.2207999999999256e-05, 2.222300000000177e-05, 2.2250000000001435e-05, 2.2222000000002295e-05, 2.1764000000000505e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.848" endtime="20201030 18:28:38.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.844" endtime="20201030 18:28:38.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.855" endtime="20201030 18:28:38.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.853" endtime="20201030 18:28:38.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.852" endtime="20201030 18:28:38.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.494" endtime="20201030 18:28:38.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.494" endtime="20201030 18:28:38.875"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.884" endtime="20201030 18:28:38.900"></status>
</kw>
<msg timestamp="20201030 18:28:38.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.882" endtime="20201030 18:28:38.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.902" endtime="20201030 18:28:38.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.904" endtime="20201030 18:28:38.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.880" endtime="20201030 18:28:38.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.878" endtime="20201030 18:28:38.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.913" endtime="20201030 18:28:39.201"></status>
</kw>
<msg timestamp="20201030 18:28:39.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.912" endtime="20201030 18:28:39.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.205" endtime="20201030 18:28:39.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.214" endtime="20201030 18:28:39.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.909" endtime="20201030 18:28:39.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.907" endtime="20201030 18:28:39.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.220" level="INFO">${RESULT} = [{'diff': 2.27229999999988e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.320899999999973e-05}, {'diff': 2.316699999999755e-05}, {'diff': 2.322300000000277e-05}, {'diff': 2.3291999999997676e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:39.217" endtime="20201030 18:28:39.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.224" level="INFO">${ACCURACY} = {'diff': [2.27229999999988e-05, 2.3221999999999826e-05, 2.320899999999973e-05, 2.316699999999755e-05, 2.322300000000277e-05, 2.3291999999997676e-05, 2.2707999999999756e-05, 2.3221999999999826e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 18:28:39.221" endtime="20201030 18:28:39.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.229" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.228" endtime="20201030 18:28:39.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.231" level="INFO">VALUE: [2.27229999999988e-05, 2.3221999999999826e-05, 2.320899999999973e-05, 2.316699999999755e-05, 2.322300000000277e-05, 2.3291999999997676e-05, 2.2707999999999756e-05, 2.3221999999999826e-05, 2.2707999999999756e-05, 2.320899999999973e-05, 2.3221999999999826e-05, 2.32090000000032e-05, 2.3194000000000686e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.3208000000000256e-05, 2.270899999999923e-05, 2.3235999999999396e-05, 2.3208000000000256e-05, 2.2721999999999326e-05, 2.269499999999966e-05, 2.2707999999999756e-05, 2.269500000000313e-05, 2.2722000000002796e-05, 2.3722000000000326e-05, 2.319500000000016e-05, 2.3208000000000256e-05, 2.265300000000095e-05, 2.2638000000001907e-05, 2.27229999999988e-05, 2.3208000000000256e-05, 2.3194000000000686e-05, 2.3221999999999826e-05, 2.2721999999999326e-05, 2.318100000000059e-05, 2.270899999999923e-05, 2.27229999999988e-05, 2.3221999999999826e-05, 2.3249999999998966e-05, 2.3208000000000256e-05, 2.3249999999998966e-05, 2.2707999999999756e-05, 2.2694000000000186e-05, 2.2707999999999756e-05, 2.2721999999999326e-05, 2.266699999999705e-05, 2.3249999999998966e-05, 2.2722000000002796e-05, 2.2707999999999756e-05, 2.320899999999973e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.230" endtime="20201030 18:28:39.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.225" endtime="20201030 18:28:39.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.236" endtime="20201030 18:28:39.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.235" endtime="20201030 18:28:39.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.234" endtime="20201030 18:28:39.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.876" endtime="20201030 18:28:39.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.876" endtime="20201030 18:28:39.257"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.266" endtime="20201030 18:28:39.284"></status>
</kw>
<msg timestamp="20201030 18:28:39.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.264" endtime="20201030 18:28:39.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.285" endtime="20201030 18:28:39.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.288" endtime="20201030 18:28:39.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.262" endtime="20201030 18:28:39.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.260" endtime="20201030 18:28:39.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.297" endtime="20201030 18:28:39.581"></status>
</kw>
<msg timestamp="20201030 18:28:39.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020505778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020529514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.295" endtime="20201030 18:28:39.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020505778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020529514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.585" endtime="20201030 18:28:39.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.594" endtime="20201030 18:28:39.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.293" endtime="20201030 18:28:39.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.291" endtime="20201030 18:28:39.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.600" level="INFO">${RESULT} = [{'diff': 2.3735999999999896e-05}, {'diff': 2.369500000000066e-05}, {'diff': 2.420900000000073e-05}, {'diff': 2.3722000000000326e-05}, {'diff': 2.3735999999999896e-05}, {'diff': 2.4179999999998647e-05...</msg>
<status status="PASS" starttime="20201030 18:28:39.597" endtime="20201030 18:28:39.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.605" level="INFO">${ACCURACY} = {'diff': [2.3735999999999896e-05, 2.369500000000066e-05, 2.420900000000073e-05, 2.3722000000000326e-05, 2.3735999999999896e-05, 2.4179999999998647e-05, 2.4194000000001686e-05, 2.4194000000001686e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:39.601" endtime="20201030 18:28:39.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.609" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.608" endtime="20201030 18:28:39.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.611" level="INFO">VALUE: [2.3735999999999896e-05, 2.369500000000066e-05, 2.420900000000073e-05, 2.3722000000000326e-05, 2.3735999999999896e-05, 2.4179999999998647e-05, 2.4194000000001686e-05, 2.4194000000001686e-05, 2.42230000000003e-05, 2.3721999999996857e-05, 2.3735999999999896e-05, 2.42230000000003e-05, 2.416700000000202e-05, 2.4222000000000826e-05, 2.4276999999999632e-05, 2.419499999999769e-05, 2.416699999999855e-05, 2.420900000000073e-05, 2.370900000000023e-05, 2.3722000000000326e-05, 2.3721999999996857e-05, 2.4207999999997787e-05, 2.4179999999998647e-05, 2.3708000000000756e-05, 2.420900000000073e-05, 2.363899999999891e-05, 2.37229999999998e-05, 2.4194000000001686e-05, 2.3722000000000326e-05, 2.419500000000116e-05, 2.4179999999998647e-05, 2.4221999999997357e-05, 2.4207999999997787e-05, 2.420900000000073e-05, 2.370900000000023e-05, 2.3694000000001186e-05, 2.419500000000116e-05, 2.4722000000001326e-05, 2.37229999999998e-05, 2.4222000000000826e-05, 2.42230000000003e-05, 2.4208000000001256e-05, 2.3708000000000756e-05, 2.366699999999805e-05, 2.365300000000195e-05, 2.3722000000000326e-05, 2.3708000000000756e-05, 2.4222000000000826e-05, 2.420900000000073e-05, 2.3680000000001616e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.610" endtime="20201030 18:28:39.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.605" endtime="20201030 18:28:39.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.617" endtime="20201030 18:28:39.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.616" endtime="20201030 18:28:39.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.615" endtime="20201030 18:28:39.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.258" endtime="20201030 18:28:39.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.257" endtime="20201030 18:28:39.638"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.647" endtime="20201030 18:28:39.663"></status>
</kw>
<msg timestamp="20201030 18:28:39.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.645" endtime="20201030 18:28:39.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.665" endtime="20201030 18:28:39.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.667" endtime="20201030 18:28:39.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.643" endtime="20201030 18:28:39.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.640" endtime="20201030 18:28:39.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.676" endtime="20201030 18:28:39.962"></status>
</kw>
<msg timestamp="20201030 18:28:39.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019567444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019592625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.675" endtime="20201030 18:28:39.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019567444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019592625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.967" endtime="20201030 18:28:39.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.975" endtime="20201030 18:28:39.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.672" endtime="20201030 18:28:39.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.671" endtime="20201030 18:28:39.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.981" level="INFO">${RESULT} = [{'diff': 2.518099999999912e-05}, {'diff': 2.4721999999997857e-05}, {'diff': 2.5207999999998787e-05}, {'diff': 2.4735999999997427e-05}, {'diff': 2.470899999999776e-05}, {'diff': 2.4693999999998717e-05...</msg>
<status status="PASS" starttime="20201030 18:28:39.978" endtime="20201030 18:28:39.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.986" level="INFO">${ACCURACY} = {'diff': [2.518099999999912e-05, 2.4721999999997857e-05, 2.5207999999998787e-05, 2.4735999999997427e-05, 2.470899999999776e-05, 2.4693999999998717e-05, 2.5180000000003117e-05, 2.5207999999998787e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:39.982" endtime="20201030 18:28:39.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.991" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.990" endtime="20201030 18:28:39.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.993" level="INFO">VALUE: [2.518099999999912e-05, 2.4721999999997857e-05, 2.5207999999998787e-05, 2.4735999999997427e-05, 2.470899999999776e-05, 2.4693999999998717e-05, 2.5180000000003117e-05, 2.5207999999998787e-05, 2.4708000000001756e-05, 2.520899999999826e-05, 2.470900000000123e-05, 2.5207999999998787e-05, 2.5208000000002256e-05, 2.5207999999998787e-05, 2.4721999999997857e-05, 2.5207999999998787e-05, 2.5721999999998857e-05, 2.5193999999999217e-05, 2.468100000000209e-05, 2.520900000000173e-05, 2.570899999999876e-05, 2.4721999999997857e-05, 2.5179999999999647e-05, 2.5707999999999287e-05, 2.472299999999733e-05, 2.4722000000001326e-05, 2.468099999999862e-05, 2.5235999999997927e-05, 2.469500000000166e-05, 2.5278000000000106e-05, 2.4707999999998287e-05, 2.520900000000173e-05, 2.4707999999998287e-05, 2.4736000000000896e-05, 2.4707999999998287e-05, 2.5193999999999217e-05, 2.5693999999999717e-05, 2.5207999999998787e-05, 2.5208000000002256e-05, 2.5179999999999647e-05, 2.5207999999998787e-05, 2.5179999999999647e-05, 2.520900000000173e-05, 2.466699999999905e-05, 2.520900000000173e-05, 2.5207999999998787e-05, 2.572299999999833e-05, 2.5221999999998357e-05, 2.5207999999998787e-05, 2.472299999999733e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.992" endtime="20201030 18:28:39.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.987" endtime="20201030 18:28:39.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.998" endtime="20201030 18:28:40.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.997" endtime="20201030 18:28:40.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.996" endtime="20201030 18:28:40.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.639" endtime="20201030 18:28:40.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.638" endtime="20201030 18:28:40.019"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.028" endtime="20201030 18:28:40.046"></status>
</kw>
<msg timestamp="20201030 18:28:40.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.026" endtime="20201030 18:28:40.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.047" endtime="20201030 18:28:40.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.050" endtime="20201030 18:28:40.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.024" endtime="20201030 18:28:40.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.022" endtime="20201030 18:28:40.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.059" endtime="20201030 18:28:40.346"></status>
</kw>
<msg timestamp="20201030 18:28:40.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.057" endtime="20201030 18:28:40.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.350" endtime="20201030 18:28:40.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.358" endtime="20201030 18:28:40.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.055" endtime="20201030 18:28:40.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.053" endtime="20201030 18:28:40.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.365" level="INFO">${RESULT} = [{'diff': 2.619500000000316e-05}, {'diff': 2.5708000000002756e-05}, {'diff': 2.5707999999999287e-05}, {'diff': 2.622299999999883e-05}, {'diff': 2.5707999999999287e-05}, {'diff': 2.620899999999926e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:40.362" endtime="20201030 18:28:40.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.369" level="INFO">${ACCURACY} = {'diff': [2.619500000000316e-05, 2.5708000000002756e-05, 2.5707999999999287e-05, 2.622299999999883e-05, 2.5707999999999287e-05, 2.620899999999926e-05, 2.6263999999998067e-05, 2.6221999999999357e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:40.366" endtime="20201030 18:28:40.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.374" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.373" endtime="20201030 18:28:40.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.376" level="INFO">VALUE: [2.619500000000316e-05, 2.5708000000002756e-05, 2.5707999999999287e-05, 2.622299999999883e-05, 2.5707999999999287e-05, 2.620899999999926e-05, 2.6263999999998067e-05, 2.6221999999999357e-05, 2.6207999999999787e-05, 2.618100000000012e-05, 2.5680000000000147e-05, 2.569499999999919e-05, 2.6194000000000217e-05, 2.6207999999999787e-05, 2.620899999999926e-05, 2.5680000000000147e-05, 2.6278000000001106e-05, 2.5707999999999287e-05, 2.57230000000018e-05, 2.5805000000000272e-05, 2.5707999999999287e-05, 2.62230000000023e-05, 2.5721999999998857e-05, 2.619499999999969e-05, 2.5707999999999287e-05, 2.6221999999999357e-05, 2.6207999999999787e-05, 2.5778000000000606e-05, 2.5735999999998427e-05, 2.5707999999999287e-05, 2.6250000000001966e-05, 2.6207999999999787e-05, 2.570899999999876e-05, 2.6221999999999357e-05, 2.618100000000012e-05, 2.5707999999999287e-05, 2.5735999999998427e-05, 2.6235999999998927e-05, 2.569499999999919e-05, 2.62230000000023e-05, 2.6235999999998927e-05, 2.566700000000005e-05, 2.5722000000002326e-05, 2.6235999999998927e-05, 2.5722000000002326e-05, 2.5750000000001466e-05, 2.619499999999969e-05, 2.5721999999998857e-05, 2.6708000000000287e-05, 2.6180000000000647e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.375" endtime="20201030 18:28:40.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.370" endtime="20201030 18:28:40.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.381" endtime="20201030 18:28:40.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.380" endtime="20201030 18:28:40.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.378" endtime="20201030 18:28:40.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.020" endtime="20201030 18:28:40.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.020" endtime="20201030 18:28:40.402"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.410" endtime="20201030 18:28:40.429"></status>
</kw>
<msg timestamp="20201030 18:28:40.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.409" endtime="20201030 18:28:40.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.430" endtime="20201030 18:28:40.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.433" endtime="20201030 18:28:40.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.406" endtime="20201030 18:28:40.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.404" endtime="20201030 18:28:40.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.442" endtime="20201030 18:28:40.727"></status>
</kw>
<msg timestamp="20201030 18:28:40.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020471097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020497806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.440" endtime="20201030 18:28:40.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020471097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020497806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.731" endtime="20201030 18:28:40.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.739" endtime="20201030 18:28:40.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.437" endtime="20201030 18:28:40.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.436" endtime="20201030 18:28:40.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.746" level="INFO">${RESULT} = [{'diff': 2.670899999999976e-05}, {'diff': 2.7194000000001217e-05}, {'diff': 2.7208000000000787e-05}, {'diff': 2.768099999999815e-05}, {'diff': 2.668100000000062e-05}, {'diff': 2.6638999999998442e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:40.742" endtime="20201030 18:28:40.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.750" level="INFO">${ACCURACY} = {'diff': [2.670899999999976e-05, 2.7194000000001217e-05, 2.7208000000000787e-05, 2.768099999999815e-05, 2.668100000000062e-05, 2.6638999999998442e-05, 2.6721999999999857e-05, 2.7722000000000857e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:40.747" endtime="20201030 18:28:40.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.754" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.753" endtime="20201030 18:28:40.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.757" level="INFO">VALUE: [2.670899999999976e-05, 2.7194000000001217e-05, 2.7208000000000787e-05, 2.768099999999815e-05, 2.668100000000062e-05, 2.6638999999998442e-05, 2.6721999999999857e-05, 2.7722000000000857e-05, 2.7264000000002536e-05, 2.7222000000000357e-05, 2.720900000000026e-05, 2.6777999999998137e-05, 2.7207999999997318e-05, 2.6708000000000287e-05, 2.6735999999999427e-05, 2.6707999999996818e-05, 2.7708000000001287e-05, 2.6694000000000717e-05, 2.6694000000000717e-05, 2.672299999999933e-05, 2.6735999999999427e-05, 2.722299999999983e-05, 2.6735999999999427e-05, 2.719500000000069e-05, 2.7222000000000357e-05, 2.6708000000000287e-05, 2.722299999999983e-05, 2.7236000000003396e-05, 2.6735999999999427e-05, 2.7222000000000357e-05, 2.6708000000000287e-05, 2.7194000000001217e-05, 2.6721999999999857e-05, 2.669500000000019e-05, 2.7207999999997318e-05, 2.6721999999999857e-05, 2.6721999999999857e-05, 2.7263999999999067e-05, 2.670899999999976e-05, 2.7222000000000357e-05, 2.7235999999999927e-05, 2.7263999999999067e-05, 2.7235999999999927e-05, 2.6708000000000287e-05, 2.722299999999983e-05, 2.7207999999997318e-05, 2.722299999999983e-05, 2.7222000000000357e-05, 2.766699999999858e-05, 2.7235999999999927e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.755" endtime="20201030 18:28:40.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.751" endtime="20201030 18:28:40.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.762" endtime="20201030 18:28:40.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.761" endtime="20201030 18:28:40.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.760" endtime="20201030 18:28:40.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.403" endtime="20201030 18:28:40.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.402" endtime="20201030 18:28:40.783"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.793" endtime="20201030 18:28:40.810"></status>
</kw>
<msg timestamp="20201030 18:28:40.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.791" endtime="20201030 18:28:40.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.812" endtime="20201030 18:28:40.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.814" endtime="20201030 18:28:40.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.788" endtime="20201030 18:28:40.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.786" endtime="20201030 18:28:40.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.823" endtime="20201030 18:28:41.109"></status>
</kw>
<msg timestamp="20201030 18:28:41.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020895736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020923458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.822" endtime="20201030 18:28:41.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020895736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020923458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.113" endtime="20201030 18:28:41.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.121" endtime="20201030 18:28:41.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.819" endtime="20201030 18:28:41.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.817" endtime="20201030 18:28:41.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.128" level="INFO">${RESULT} = [{'diff': 2.7721999999997388e-05}, {'diff': 2.872299999999786e-05}, {'diff': 2.8221999999997888e-05}, {'diff': 2.8222000000001357e-05}, {'diff': 2.8221999999997888e-05}, {'diff': 2.7694000000001717e-0...</msg>
<status status="PASS" starttime="20201030 18:28:41.124" endtime="20201030 18:28:41.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.135" level="INFO">${ACCURACY} = {'diff': [2.7721999999997388e-05, 2.872299999999786e-05, 2.8221999999997888e-05, 2.8222000000001357e-05, 2.8221999999997888e-05, 2.7694000000001717e-05, 2.768100000000162e-05, 2.8222000000001357e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:41.129" endtime="20201030 18:28:41.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.140" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.139" endtime="20201030 18:28:41.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.142" level="INFO">VALUE: [2.7721999999997388e-05, 2.872299999999786e-05, 2.8221999999997888e-05, 2.8222000000001357e-05, 2.8221999999997888e-05, 2.7694000000001717e-05, 2.768100000000162e-05, 2.8222000000001357e-05, 2.822300000000083e-05, 2.7708000000001287e-05, 2.8666999999999582e-05, 2.7708000000001287e-05, 2.8221999999997888e-05, 2.8222000000001357e-05, 2.8707999999998818e-05, 2.7694000000001717e-05, 2.8222000000001357e-05, 2.8221999999997888e-05, 2.7736000000000427e-05, 2.7708000000001287e-05, 2.8236000000000927e-05, 2.770900000000076e-05, 2.8236000000000927e-05, 2.7708000000001287e-05, 2.8166000000003077e-05, 2.82370000000004e-05, 2.7721999999997388e-05, 2.7707999999997818e-05, 2.8207999999998318e-05, 2.819500000000169e-05, 2.822299999999736e-05, 2.8222000000001357e-05, 2.872300000000133e-05, 2.8208000000001787e-05, 2.820899999999779e-05, 2.8207999999998318e-05, 2.8764000000000567e-05, 2.8222000000001357e-05, 2.7708000000001287e-05, 2.7777999999999137e-05, 2.8222000000001357e-05, 2.820900000000126e-05, 2.7708000000001287e-05, 2.8180000000002647e-05, 2.7722000000000857e-05, 2.7736000000000427e-05, 2.870900000000176e-05, 2.8221999999997888e-05, 2.7708000000001287e-05, 2.7708000000001287e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.141" endtime="20201030 18:28:41.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.136" endtime="20201030 18:28:41.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.147" endtime="20201030 18:28:41.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.146" endtime="20201030 18:28:41.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.144" endtime="20201030 18:28:41.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.784" endtime="20201030 18:28:41.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.784" endtime="20201030 18:28:41.168"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.176" endtime="20201030 18:28:41.194"></status>
</kw>
<msg timestamp="20201030 18:28:41.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.175" endtime="20201030 18:28:41.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.196" endtime="20201030 18:28:41.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.198" endtime="20201030 18:28:41.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.172" endtime="20201030 18:28:41.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.170" endtime="20201030 18:28:41.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.207" endtime="20201030 18:28:41.494"></status>
</kw>
<msg timestamp="20201030 18:28:41.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019479431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019508667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.206" endtime="20201030 18:28:41.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019479431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019508667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.498" endtime="20201030 18:28:41.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.506" endtime="20201030 18:28:41.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.203" endtime="20201030 18:28:41.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.201" endtime="20201030 18:28:41.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.513" level="INFO">${RESULT} = [{'diff': 2.9236000000001927e-05}, {'diff': 2.922299999999836e-05}, {'diff': 2.9139000000000942e-05}, {'diff': 2.919499999999922e-05}, {'diff': 2.9222000000002357e-05}, {'diff': 2.922299999999836e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:41.510" endtime="20201030 18:28:41.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.517" level="INFO">${ACCURACY} = {'diff': [2.9236000000001927e-05, 2.922299999999836e-05, 2.9139000000000942e-05, 2.919499999999922e-05, 2.9222000000002357e-05, 2.922299999999836e-05, 2.9207999999999318e-05, 2.9278000000000637e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:41.514" endtime="20201030 18:28:41.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.522" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.521" endtime="20201030 18:28:41.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.524" level="INFO">VALUE: [2.9236000000001927e-05, 2.922299999999836e-05, 2.9139000000000942e-05, 2.919499999999922e-05, 2.9222000000002357e-05, 2.922299999999836e-05, 2.9207999999999318e-05, 2.9278000000000637e-05, 2.9221999999998888e-05, 2.8736000000001427e-05, 2.9278000000000637e-05, 2.919499999999922e-05, 2.870899999999829e-05, 2.9180000000000178e-05, 2.869500000000219e-05, 2.8722000000001857e-05, 2.872300000000133e-05, 2.8707999999998818e-05, 2.970899999999929e-05, 2.9264000000001067e-05, 2.9277999999997167e-05, 2.8735999999997958e-05, 2.969500000000319e-05, 2.8694000000002717e-05, 2.8693999999999248e-05, 2.9278000000000637e-05, 2.9207999999999318e-05, 2.920899999999879e-05, 2.870899999999829e-05, 2.8707999999998818e-05, 2.9736000000002427e-05, 2.9208000000002787e-05, 2.9207999999999318e-05, 2.8707999999998818e-05, 2.9222000000002357e-05, 2.8750000000000997e-05, 2.9278000000000637e-05, 2.9222000000002357e-05, 2.9221999999998888e-05, 2.9221999999998888e-05, 2.9721999999999388e-05, 2.918099999999965e-05, 2.8721999999998388e-05, 2.9778000000001137e-05, 2.8721999999998388e-05, 2.870900000000176e-05, 2.9221999999998888e-05, 2.920899999999879e-05, 2.9264000000001067e-05, 2.9236000000001927e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.523" endtime="20201030 18:28:41.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.518" endtime="20201030 18:28:41.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.533" endtime="20201030 18:28:41.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.531" endtime="20201030 18:28:41.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.530" endtime="20201030 18:28:41.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.169" endtime="20201030 18:28:41.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.168" endtime="20201030 18:28:41.554"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.562" endtime="20201030 18:28:41.581"></status>
</kw>
<msg timestamp="20201030 18:28:41.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.561" endtime="20201030 18:28:41.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.582" endtime="20201030 18:28:41.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.585" endtime="20201030 18:28:41.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.558" endtime="20201030 18:28:41.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.556" endtime="20201030 18:28:41.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.594" endtime="20201030 18:28:41.880"></status>
</kw>
<msg timestamp="20201030 18:28:41.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020531361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020561583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.592" endtime="20201030 18:28:41.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020531361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020561583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.884" endtime="20201030 18:28:41.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.893" endtime="20201030 18:28:41.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.590" endtime="20201030 18:28:41.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.588" endtime="20201030 18:28:41.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.899" level="INFO">${RESULT} = [{'diff': 3.0221999999999888e-05}, {'diff': 2.972300000000233e-05}, {'diff': 3.066699999999811e-05}, {'diff': 2.970899999999929e-05}, {'diff': 2.9721999999999388e-05}, {'diff': 3.020899999999979e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:41.896" endtime="20201030 18:28:41.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.903" level="INFO">${ACCURACY} = {'diff': [3.0221999999999888e-05, 2.972300000000233e-05, 3.066699999999811e-05, 2.970899999999929e-05, 2.9721999999999388e-05, 3.020899999999979e-05, 2.9681000000000152e-05, 2.970899999999929e-05, 2.9...</msg>
<status status="PASS" starttime="20201030 18:28:41.900" endtime="20201030 18:28:41.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.908" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.907" endtime="20201030 18:28:41.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.910" level="INFO">VALUE: [3.0221999999999888e-05, 2.972300000000233e-05, 3.066699999999811e-05, 2.970899999999929e-05, 2.9721999999999388e-05, 3.020899999999979e-05, 2.9681000000000152e-05, 2.970899999999929e-05, 2.9763999999998098e-05, 3.0221999999999888e-05, 2.972300000000233e-05, 3.0208000000000318e-05, 3.0221999999999888e-05, 2.970899999999929e-05, 2.9736000000002427e-05, 2.9707999999999818e-05, 3.020899999999979e-05, 2.9722000000002857e-05, 3.020899999999979e-05, 3.020899999999979e-05, 3.020799999999685e-05, 3.020899999999979e-05, 2.9736000000002427e-05, 3.0278000000001637e-05, 2.9762999999998624e-05, 2.9653000000001012e-05, 3.0221999999999888e-05, 3.0221999999999888e-05, 2.9735999999998958e-05, 3.0194000000000748e-05, 3.0235999999999458e-05, 2.9721999999999388e-05, 2.970899999999929e-05, 2.9707999999999818e-05, 3.022299999999936e-05, 3.0208000000000318e-05, 3.023699999999893e-05, 3.0166000000001608e-05, 2.972299999999886e-05, 2.9707999999999818e-05, 3.0249999999999028e-05, 3.020899999999979e-05, 2.9721999999999388e-05, 3.020899999999979e-05, 2.9735999999998958e-05, 2.972299999999886e-05, 3.070799999999735e-05, 3.020899999999979e-05, 2.9707999999999818e-05, 2.9722000000002857e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.909" endtime="20201030 18:28:41.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.904" endtime="20201030 18:28:41.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.916" endtime="20201030 18:28:41.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.915" endtime="20201030 18:28:41.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.913" endtime="20201030 18:28:41.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.555" endtime="20201030 18:28:41.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.554" endtime="20201030 18:28:41.937"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.945" endtime="20201030 18:28:41.963"></status>
</kw>
<msg timestamp="20201030 18:28:41.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.944" endtime="20201030 18:28:41.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.965" endtime="20201030 18:28:41.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.967" endtime="20201030 18:28:41.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.941" endtime="20201030 18:28:41.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.939" endtime="20201030 18:28:41.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.977" endtime="20201030 18:28:42.262"></status>
</kw>
<msg timestamp="20201030 18:28:42.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019510889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.975" endtime="20201030 18:28:42.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019510889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.266" endtime="20201030 18:28:42.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.274" endtime="20201030 18:28:42.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.972" endtime="20201030 18:28:42.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.971" endtime="20201030 18:28:42.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.281" level="INFO">${RESULT} = [{'diff': 3.119399999999828e-05}, {'diff': 3.170799999999835e-05}, {'diff': 3.072200000000039e-05}, {'diff': 3.115299999999904e-05}, {'diff': 3.072200000000039e-05}, {'diff': 3.068100000000115e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:42.277" endtime="20201030 18:28:42.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.286" level="INFO">${ACCURACY} = {'diff': [3.119399999999828e-05, 3.170799999999835e-05, 3.072200000000039e-05, 3.115299999999904e-05, 3.072200000000039e-05, 3.068100000000115e-05, 3.070800000000082e-05, 3.070900000000029e-05, 3.0624...</msg>
<status status="PASS" starttime="20201030 18:28:42.282" endtime="20201030 18:28:42.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.290" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.289" endtime="20201030 18:28:42.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.293" level="INFO">VALUE: [3.119399999999828e-05, 3.170799999999835e-05, 3.072200000000039e-05, 3.115299999999904e-05, 3.072200000000039e-05, 3.068100000000115e-05, 3.070800000000082e-05, 3.070900000000029e-05, 3.06249999999994e-05, 3.125000000000003e-05, 3.120899999999732e-05, 3.070800000000082e-05, 3.068099999999768e-05, 3.118099999999818e-05, 3.120900000000079e-05, 3.122199999999742e-05, 3.07370000000029e-05, 3.070799999999735e-05, 3.070900000000029e-05, 3.072200000000039e-05, 3.120800000000132e-05, 3.069399999999778e-05, 3.120800000000132e-05, 3.069399999999778e-05, 3.07639999999991e-05, 3.120799999999785e-05, 3.069400000000125e-05, 3.070900000000029e-05, 3.120799999999785e-05, 3.173600000000096e-05, 3.122200000000089e-05, 3.122300000000036e-05, 3.120800000000132e-05, 3.072200000000039e-05, 3.119500000000122e-05, 3.122199999999742e-05, 3.0750000000003e-05, 3.070900000000029e-05, 3.069400000000125e-05, 3.072200000000039e-05, 3.115299999999904e-05, 3.072200000000039e-05, 3.122300000000036e-05, 3.170800000000182e-05, 3.122200000000089e-05, 3.06249999999994e-05, 3.069400000000125e-05, 3.122300000000036e-05, 3.070800000000082e-05, 3.073699999999943e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.291" endtime="20201030 18:28:42.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.287" endtime="20201030 18:28:42.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.298" endtime="20201030 18:28:42.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.296" endtime="20201030 18:28:42.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.295" endtime="20201030 18:28:42.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.938" endtime="20201030 18:28:42.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.937" endtime="20201030 18:28:42.318"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.327" endtime="20201030 18:28:42.345"></status>
</kw>
<msg timestamp="20201030 18:28:42.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.325" endtime="20201030 18:28:42.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.346" endtime="20201030 18:28:42.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.349" endtime="20201030 18:28:42.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.323" endtime="20201030 18:28:42.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.321" endtime="20201030 18:28:42.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.358" endtime="20201030 18:28:42.644"></status>
</kw>
<msg timestamp="20201030 18:28:42.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019518556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.356" endtime="20201030 18:28:42.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019518556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.648" endtime="20201030 18:28:42.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.656" endtime="20201030 18:28:42.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.354" endtime="20201030 18:28:42.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.352" endtime="20201030 18:28:42.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.663" level="INFO">${RESULT} = [{'diff': 5.658299999999894e-05}, {'diff': 3.520900000000132e-05}, {'diff': 3.484800000000052e-05}, {'diff': 3.550000000000081e-05}, {'diff': 3.5639000000000504e-05}, {'diff': 3.49580000000016e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:42.660" endtime="20201030 18:28:42.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.667" level="INFO">${ACCURACY} = {'diff': [5.658299999999894e-05, 3.520900000000132e-05, 3.484800000000052e-05, 3.550000000000081e-05, 3.5639000000000504e-05, 3.49580000000016e-05, 3.5290999999999795e-05, 3.548600000000124e-05, 3.491...</msg>
<status status="PASS" starttime="20201030 18:28:42.664" endtime="20201030 18:28:42.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.672" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.671" endtime="20201030 18:28:42.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.674" level="INFO">VALUE: [5.658299999999894e-05, 3.520900000000132e-05, 3.484800000000052e-05, 3.550000000000081e-05, 3.5639000000000504e-05, 3.49580000000016e-05, 3.5290999999999795e-05, 3.548600000000124e-05, 3.491599999999942e-05, 3.500000000000031e-05, 3.4832999999998004e-05, 3.4847000000001044e-05, 3.5416999999999393e-05, 3.554199999999952e-05, 3.497200000000117e-05, 3.497200000000117e-05, 3.469499999999778e-05, 3.5375000000000684e-05, 3.476399999999963e-05, 3.555599999999909e-05, 3.555600000000256e-05, 3.472300000000039e-05, 3.491699999999889e-05, 3.52779999999997e-05, 3.550000000000081e-05, 3.49719999999977e-05, 3.554199999999952e-05, 3.529199999999927e-05, 3.479200000000224e-05, 3.5624999999997464e-05, 3.54719999999982e-05, 3.47779999999992e-05, 3.522199999999795e-05, 3.516599999999967e-05, 3.4819000000001904e-05, 3.480599999999834e-05, 3.5346999999998074e-05, 3.5347000000001544e-05, 3.517999999999924e-05, 3.529199999999927e-05, 3.550000000000081e-05, 3.4846999999997574e-05, 3.550000000000081e-05, 3.5361000000001114e-05, 3.493100000000193e-05, 3.544499999999853e-05, 3.5445000000002e-05, 3.5139000000000004e-05, 3.52779999999997e-05, 3.475000000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.673" endtime="20201030 18:28:42.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.668" endtime="20201030 18:28:42.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.679" endtime="20201030 18:28:42.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.678" endtime="20201030 18:28:42.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.677" endtime="20201030 18:28:42.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.319" endtime="20201030 18:28:42.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.319" endtime="20201030 18:28:42.700"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.709" endtime="20201030 18:28:42.728"></status>
</kw>
<msg timestamp="20201030 18:28:42.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.707" endtime="20201030 18:28:42.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.729" endtime="20201030 18:28:42.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.732" endtime="20201030 18:28:42.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.705" endtime="20201030 18:28:42.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.703" endtime="20201030 18:28:42.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.741" endtime="20201030 18:28:43.026"></status>
</kw>
<msg timestamp="20201030 18:28:43.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020458792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.739" endtime="20201030 18:28:43.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020458792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.031" endtime="20201030 18:28:43.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.039" endtime="20201030 18:28:43.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.737" endtime="20201030 18:28:43.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.735" endtime="20201030 18:28:43.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.046" level="INFO">${RESULT} = [{'diff': 3.640200000000135e-05}, {'diff': 3.591600000000042e-05}, {'diff': 3.5791000000000295e-05}, {'diff': 3.592999999999999e-05}, {'diff': 3.631999999999941e-05}, {'diff': 3.6305000000000365e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:43.042" endtime="20201030 18:28:43.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.050" level="INFO">${ACCURACY} = {'diff': [3.640200000000135e-05, 3.591600000000042e-05, 3.5791000000000295e-05, 3.592999999999999e-05, 3.631999999999941e-05, 3.6305000000000365e-05, 3.6625000000001934e-05, 3.575000000000106e-05, 3.6...</msg>
<status status="PASS" starttime="20201030 18:28:43.046" endtime="20201030 18:28:43.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.054" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.053" endtime="20201030 18:28:43.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.057" level="INFO">VALUE: [3.640200000000135e-05, 3.591600000000042e-05, 3.5791000000000295e-05, 3.592999999999999e-05, 3.631999999999941e-05, 3.6305000000000365e-05, 3.6625000000001934e-05, 3.575000000000106e-05, 3.6624999999998464e-05, 3.6167000000000143e-05, 3.5832999999999005e-05, 3.6403000000000824e-05, 3.644400000000006e-05, 3.6611000000002364e-05, 3.6389000000001254e-05, 3.570899999999835e-05, 3.597300000000164e-05, 3.6360999999998644e-05, 3.6180999999999713e-05, 3.633399999999898e-05, 3.594499999999903e-05, 3.655600000000009e-05, 3.613799999999806e-05, 3.5916999999999893e-05, 3.651400000000138e-05, 3.5804999999999865e-05, 3.638800000000178e-05, 3.6416999999996924e-05, 3.6624999999998464e-05, 3.594399999999956e-05, 3.6597000000002794e-05, 3.6555000000000615e-05, 3.643000000000049e-05, 3.602799999999698e-05, 3.579199999999977e-05, 3.566600000000017e-05, 3.5653000000000074e-05, 3.57780000000002e-05, 3.57780000000002e-05, 3.6402999999997354e-05, 3.6360999999998644e-05, 3.5916999999999893e-05, 3.604200000000002e-05, 3.569500000000225e-05, 3.602800000000045e-05, 3.604200000000002e-05, 3.5861000000001614e-05, 3.629200000000027e-05, 3.661199999999837e-05, 3.6360999999998644e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.055" endtime="20201030 18:28:43.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.051" endtime="20201030 18:28:43.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.063" endtime="20201030 18:28:43.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.061" endtime="20201030 18:28:43.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.060" endtime="20201030 18:28:43.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.701" endtime="20201030 18:28:43.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.700" endtime="20201030 18:28:43.083"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.092" endtime="20201030 18:28:43.109"></status>
</kw>
<msg timestamp="20201030 18:28:43.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.090" endtime="20201030 18:28:43.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.111" endtime="20201030 18:28:43.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.113" endtime="20201030 18:28:43.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.088" endtime="20201030 18:28:43.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.086" endtime="20201030 18:28:43.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.122" endtime="20201030 18:28:43.408"></status>
</kw>
<msg timestamp="20201030 18:28:43.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019515208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.121" endtime="20201030 18:28:43.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019515208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.412" endtime="20201030 18:28:43.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.421" endtime="20201030 18:28:43.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.118" endtime="20201030 18:28:43.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.116" endtime="20201030 18:28:43.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.427" level="INFO">${RESULT} = [{'diff': 3.702800000000145e-05}, {'diff': 3.743000000000149e-05}, {'diff': 3.677799999999773e-05}, {'diff': 3.674999999999859e-05}, {'diff': 3.724999999999909e-05}, {'diff': 3.673600000000249e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:43.424" endtime="20201030 18:28:43.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.432" level="INFO">${ACCURACY} = {'diff': [3.702800000000145e-05, 3.743000000000149e-05, 3.677799999999773e-05, 3.674999999999859e-05, 3.724999999999909e-05, 3.673600000000249e-05, 3.6875000000002184e-05, 3.7610999999999895e-05, 3.72...</msg>
<status status="PASS" starttime="20201030 18:28:43.428" endtime="20201030 18:28:43.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.437" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.436" endtime="20201030 18:28:43.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.439" level="INFO">VALUE: [3.702800000000145e-05, 3.743000000000149e-05, 3.677799999999773e-05, 3.674999999999859e-05, 3.724999999999909e-05, 3.673600000000249e-05, 3.6875000000002184e-05, 3.7610999999999895e-05, 3.7291000000001795e-05, 3.754199999999805e-05, 3.6931000000000463e-05, 3.7638999999999034e-05, 3.722199999999995e-05, 3.6917000000000894e-05, 3.6819000000000435e-05, 3.730599999999737e-05, 3.7111000000002864e-05, 3.734799999999955e-05, 3.75979999999998e-05, 3.690199999999838e-05, 3.744400000000106e-05, 3.7624999999999464e-05, 3.7347000000000075e-05, 3.7319000000000935e-05, 3.754200000000152e-05, 3.7291000000001795e-05, 3.6846999999999575e-05, 3.672300000000239e-05, 3.7360999999999644e-05, 3.7069000000000685e-05, 3.7625000000002934e-05, 3.730600000000084e-05, 3.694399999999709e-05, 3.705600000000059e-05, 3.7110999999999394e-05, 3.748599999999977e-05, 3.7431000000000964e-05, 3.729200000000127e-05, 3.686200000000209e-05, 3.673699999999849e-05, 3.686199999999862e-05, 3.686200000000209e-05, 3.708399999999973e-05, 3.729200000000127e-05, 3.668000000000074e-05, 3.691599999999795e-05, 3.7610999999999895e-05, 3.6846999999999575e-05, 3.7403000000001824e-05, 3.717999999999777e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.438" endtime="20201030 18:28:43.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.433" endtime="20201030 18:28:43.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.444" endtime="20201030 18:28:43.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.443" endtime="20201030 18:28:43.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.442" endtime="20201030 18:28:43.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.084" endtime="20201030 18:28:43.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.084" endtime="20201030 18:28:43.465"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.474" endtime="20201030 18:28:43.493"></status>
</kw>
<msg timestamp="20201030 18:28:43.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.472" endtime="20201030 18:28:43.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.495" endtime="20201030 18:28:43.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.497" endtime="20201030 18:28:43.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.470" endtime="20201030 18:28:43.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.467" endtime="20201030 18:28:43.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.506" endtime="20201030 18:28:43.793"></status>
</kw>
<msg timestamp="20201030 18:28:43.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019564681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019603181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.505" endtime="20201030 18:28:43.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019564681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019603181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.797" endtime="20201030 18:28:43.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.806" endtime="20201030 18:28:43.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.502" endtime="20201030 18:28:43.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.500" endtime="20201030 18:28:43.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.812" level="INFO">${RESULT} = [{'diff': 3.850000000000034e-05}, {'diff': 3.765199999999913e-05}, {'diff': 3.773700000000296e-05}, {'diff': 3.8319000000001935e-05}, {'diff': 3.793000000000199e-05}, {'diff': 3.823600000000052e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:43.809" endtime="20201030 18:28:43.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.816" level="INFO">${ACCURACY} = {'diff': [3.850000000000034e-05, 3.765199999999913e-05, 3.773700000000296e-05, 3.8319000000001935e-05, 3.793000000000199e-05, 3.823600000000052e-05, 3.8111000000000395e-05, 3.8124999999999964e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 18:28:43.813" endtime="20201030 18:28:43.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.821" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.820" endtime="20201030 18:28:43.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.823" level="INFO">VALUE: [3.850000000000034e-05, 3.765199999999913e-05, 3.773700000000296e-05, 3.8319000000001935e-05, 3.793000000000199e-05, 3.823600000000052e-05, 3.8111000000000395e-05, 3.8124999999999964e-05, 3.766600000000217e-05, 3.780600000000134e-05, 3.7861000000000145e-05, 3.7861000000000145e-05, 3.7874999999999714e-05, 3.850000000000034e-05, 3.82919999999988e-05, 3.8138999999999534e-05, 3.795800000000113e-05, 3.801399999999941e-05, 3.7916999999998424e-05, 3.8181000000001714e-05, 3.770900000000035e-05, 3.8167000000002144e-05, 3.773600000000002e-05, 3.820800000000138e-05, 3.773600000000002e-05, 3.7652999999998604e-05, 3.8652999999999604e-05, 3.825000000000009e-05, 3.8582999999998285e-05, 3.8569000000002185e-05, 3.8055000000002115e-05, 3.851399999999991e-05, 3.848600000000077e-05, 3.8583000000001755e-05, 3.776399999999916e-05, 3.7805000000001865e-05, 3.7917000000001894e-05, 3.7680999999997744e-05, 3.825000000000009e-05, 3.8597000000001325e-05, 3.805600000000159e-05, 3.847300000000067e-05, 3.7945000000001033e-05, 3.7861000000000145e-05, 3.831999999999794e-05, 3.798600000000027e-05, 3.854200000000252e-05, 3.8180999999998244e-05, 3.826399999999966e-05, 3.761199999999937e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.822" endtime="20201030 18:28:43.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.817" endtime="20201030 18:28:43.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.829" endtime="20201030 18:28:43.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.827" endtime="20201030 18:28:43.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.826" endtime="20201030 18:28:43.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.466" endtime="20201030 18:28:43.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.465" endtime="20201030 18:28:43.850"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.859" endtime="20201030 18:28:43.877"></status>
</kw>
<msg timestamp="20201030 18:28:43.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.857" endtime="20201030 18:28:43.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.879" endtime="20201030 18:28:43.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.881" endtime="20201030 18:28:43.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.855" endtime="20201030 18:28:43.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.853" endtime="20201030 18:28:43.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.890" endtime="20201030 18:28:44.177"></status>
</kw>
<msg timestamp="20201030 18:28:44.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020660694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.889" endtime="20201030 18:28:44.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020660694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.181" endtime="20201030 18:28:44.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.189" endtime="20201030 18:28:44.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.886" endtime="20201030 18:28:44.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.885" endtime="20201030 18:28:44.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.196" level="INFO">${RESULT} = [{'diff': 3.965200000000113e-05}, {'diff': 3.925000000000109e-05}, {'diff': 3.9360999999998175e-05}, {'diff': 3.900000000000084e-05}, {'diff': 3.8763000000000686e-05}, {'diff': 3.9374999999997745e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:44.193" endtime="20201030 18:28:44.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.200" level="INFO">${ACCURACY} = {'diff': [3.965200000000113e-05, 3.925000000000109e-05, 3.9360999999998175e-05, 3.900000000000084e-05, 3.8763000000000686e-05, 3.9374999999997745e-05, 3.9568999999999716e-05, 3.917999999999977e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:28:44.197" endtime="20201030 18:28:44.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.204" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.203" endtime="20201030 18:28:44.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.207" level="INFO">VALUE: [3.965200000000113e-05, 3.925000000000109e-05, 3.9360999999998175e-05, 3.900000000000084e-05, 3.8763000000000686e-05, 3.9374999999997745e-05, 3.9568999999999716e-05, 3.917999999999977e-05, 3.870800000000188e-05, 3.8681000000002214e-05, 3.9597000000002325e-05, 3.8652999999999604e-05, 3.9166999999999674e-05, 3.926400000000066e-05, 3.9180999999999244e-05, 3.880599999999887e-05, 3.9346999999998605e-05, 3.925000000000109e-05, 3.89720000000017e-05, 3.9430999999999494e-05, 3.9347000000002075e-05, 3.955599999999962e-05, 3.955599999999962e-05, 3.9555000000000146e-05, 3.959799999999833e-05, 3.955599999999962e-05, 3.875000000000059e-05, 3.892999999999952e-05, 3.877799999999973e-05, 3.9624999999997995e-05, 3.9583000000002755e-05, 3.9361000000001645e-05, 3.9041000000000076e-05, 3.9346999999998605e-05, 3.9111000000001395e-05, 3.891599999999995e-05, 3.894399999999909e-05, 3.8847000000001575e-05, 3.867999999999927e-05, 3.926400000000066e-05, 3.947199999999873e-05, 3.872199999999798e-05, 3.954200000000005e-05, 3.9180999999999244e-05, 3.904200000000302e-05, 3.87919999999993e-05, 3.9124999999997495e-05, 3.9416999999999924e-05, 3.9125000000000965e-05, 3.9041000000000076e-05]</msg>
<status status="PASS" starttime="20201030 18:28:44.205" endtime="20201030 18:28:44.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.201" endtime="20201030 18:28:44.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.213" endtime="20201030 18:28:44.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.211" endtime="20201030 18:28:44.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.210" endtime="20201030 18:28:44.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.851" endtime="20201030 18:28:44.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.850" endtime="20201030 18:28:44.233"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.242" endtime="20201030 18:28:44.260"></status>
</kw>
<msg timestamp="20201030 18:28:44.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.241" endtime="20201030 18:28:44.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.262" endtime="20201030 18:28:44.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.264" endtime="20201030 18:28:44.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.238" endtime="20201030 18:28:44.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.236" endtime="20201030 18:28:44.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.273" endtime="20201030 18:28:44.559"></status>
</kw>
<msg timestamp="20201030 18:28:44.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019731056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019771, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:44.272" endtime="20201030 18:28:44.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019731056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019771, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:44.563" endtime="20201030 18:28:44.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.571" endtime="20201030 18:28:44.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.269" endtime="20201030 18:28:44.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.267" endtime="20201030 18:28:44.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.578" level="INFO">${RESULT} = [{'diff': 3.994400000000009e-05}, {'diff': 4.0431000000000494e-05}, {'diff': 4.0403000000001354e-05}, {'diff': 4.026400000000166e-05}, {'diff': 3.997199999999923e-05}, {'diff': 4.023599999999905e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:44.574" endtime="20201030 18:28:44.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.585" level="INFO">${ACCURACY} = {'diff': [3.994400000000009e-05, 4.0431000000000494e-05, 4.0403000000001354e-05, 4.026400000000166e-05, 3.997199999999923e-05, 4.023599999999905e-05, 4.0431000000000494e-05, 4.0624999999998995e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:28:44.579" endtime="20201030 18:28:44.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.590" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.589" endtime="20201030 18:28:44.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.592" level="INFO">VALUE: [3.994400000000009e-05, 4.0431000000000494e-05, 4.0403000000001354e-05, 4.026400000000166e-05, 3.997199999999923e-05, 4.023599999999905e-05, 4.0431000000000494e-05, 4.0624999999998995e-05, 4.047199999999973e-05, 3.997199999999923e-05, 4.047199999999973e-05, 4.0417000000000924e-05, 4.0333000000000035e-05, 4.0222999999998954e-05, 4.024999999999862e-05, 4.002799999999751e-05, 3.9916999999996955e-05, 4.0653000000001605e-05, 4.019400000000034e-05, 4.040200000000188e-05, 4.022199999999948e-05, 4.044400000000059e-05, 4.019400000000034e-05, 4.0681000000000744e-05, 3.976400000000116e-05, 4.0610999999999425e-05, 4.02920000000008e-05, 3.9846999999999105e-05, 4.0596999999999855e-05, 4.0208999999999384e-05, 4.002800000000098e-05, 3.97920000000003e-05, 4.0458999999999634e-05, 3.9930999999999994e-05, 4.030600000000037e-05, 3.977799999999726e-05, 4.0305000000000896e-05, 3.9958999999999134e-05, 4.038800000000231e-05, 3.977800000000073e-05, 4.0222999999998954e-05, 4.0319000000000466e-05, 4.018000000000077e-05, 3.990199999999791e-05, 3.995799999999966e-05, 4.001399999999794e-05, 3.9903000000000854e-05, 4.0625000000002465e-05, 4.0041000000001076e-05, 4.018000000000077e-05]</msg>
<status status="PASS" starttime="20201030 18:28:44.591" endtime="20201030 18:28:44.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.586" endtime="20201030 18:28:44.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.597" endtime="20201030 18:28:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.596" endtime="20201030 18:28:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.595" endtime="20201030 18:28:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.234" endtime="20201030 18:28:44.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.234" endtime="20201030 18:28:44.618"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.627" endtime="20201030 18:28:44.644"></status>
</kw>
<msg timestamp="20201030 18:28:44.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.625" endtime="20201030 18:28:44.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.645" endtime="20201030 18:28:44.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.648" endtime="20201030 18:28:44.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.623" endtime="20201030 18:28:44.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.620" endtime="20201030 18:28:44.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.657" endtime="20201030 18:28:44.943"></status>
</kw>
<msg timestamp="20201030 18:28:44.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019601792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.655" endtime="20201030 18:28:44.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019601792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.947" endtime="20201030 18:28:44.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.956" endtime="20201030 18:28:44.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.653" endtime="20201030 18:28:44.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.651" endtime="20201030 18:28:44.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.962" level="INFO">${RESULT} = [{'diff': 4.1138999999999065e-05}, {'diff': 4.0708999999999884e-05}, {'diff': 4.0916999999997955e-05}, {'diff': 4.094399999999762e-05}, {'diff': 4.123600000000005e-05}, {'diff': 4.154199999999858e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:44.959" endtime="20201030 18:28:44.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.966" level="INFO">${ACCURACY} = {'diff': [4.1138999999999065e-05, 4.0708999999999884e-05, 4.0916999999997955e-05, 4.094399999999762e-05, 4.123600000000005e-05, 4.154199999999858e-05, 4.0847000000000105e-05, 4.0959000000000134e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:28:44.963" endtime="20201030 18:28:44.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.971" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.970" endtime="20201030 18:28:44.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.973" level="INFO">VALUE: [4.1138999999999065e-05, 4.0708999999999884e-05, 4.0916999999997955e-05, 4.094399999999762e-05, 4.123600000000005e-05, 4.154199999999858e-05, 4.0847000000000105e-05, 4.0959000000000134e-05, 4.122199999999701e-05, 4.123600000000005e-05, 4.1388999999999315e-05, 4.14860000000003e-05, 4.1304999999998426e-05, 4.1430999999998025e-05, 4.097200000000023e-05, 4.0888999999998815e-05, 4.143000000000202e-05, 4.1555000000002146e-05, 4.102800000000198e-05, 4.1153000000002105e-05, 4.1097000000000355e-05, 4.104199999999808e-05, 4.1445000000001064e-05, 4.1374999999999745e-05, 4.1181000000001244e-05, 4.1473000000000204e-05, 4.0819000000000966e-05, 4.075000000000259e-05, 4.134799999999661e-05, 4.075000000000259e-05, 4.0903000000001855e-05, 4.1167000000001674e-05, 4.149999999999987e-05, 4.1110999999999925e-05, 4.1596999999997386e-05, 4.076400000000216e-05, 4.097200000000023e-05, 4.1374999999999745e-05, 4.149999999999987e-05, 4.1568999999998246e-05, 4.104199999999808e-05, 4.077799999999826e-05, 4.0902999999998385e-05, 4.147200000000073e-05, 4.155599999999815e-05, 4.074999999999912e-05, 4.0874999999999245e-05, 4.0695000000000314e-05, 4.147200000000073e-05, 4.1124999999999495e-05]</msg>
<status status="PASS" starttime="20201030 18:28:44.972" endtime="20201030 18:28:44.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.967" endtime="20201030 18:28:44.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.978" endtime="20201030 18:28:44.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.977" endtime="20201030 18:28:44.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.975" endtime="20201030 18:28:44.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.619" endtime="20201030 18:28:44.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.618" endtime="20201030 18:28:44.999"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.008" endtime="20201030 18:28:45.027"></status>
</kw>
<msg timestamp="20201030 18:28:45.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.006" endtime="20201030 18:28:45.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.028" endtime="20201030 18:28:45.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.031" endtime="20201030 18:28:45.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.004" endtime="20201030 18:28:45.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.002" endtime="20201030 18:28:45.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.040" endtime="20201030 18:28:45.326"></status>
</kw>
<msg timestamp="20201030 18:28:45.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020657111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.038" endtime="20201030 18:28:45.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020657111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.330" endtime="20201030 18:28:45.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.339" endtime="20201030 18:28:45.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.036" endtime="20201030 18:28:45.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.034" endtime="20201030 18:28:45.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.345" level="INFO">${RESULT} = [{'diff': 4.2125000000000495e-05}, {'diff': 4.172200000000098e-05}, {'diff': 4.2625000000000995e-05}, {'diff': 4.200000000000037e-05}, {'diff': 4.232000000000194e-05}, {'diff': 4.2166999999999205e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:45.342" endtime="20201030 18:28:45.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.349" level="INFO">${ACCURACY} = {'diff': [4.2125000000000495e-05, 4.172200000000098e-05, 4.2625000000000995e-05, 4.200000000000037e-05, 4.232000000000194e-05, 4.2166999999999205e-05, 4.1847000000001106e-05, 4.2111000000000925e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:28:45.346" endtime="20201030 18:28:45.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.354" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.353" endtime="20201030 18:28:45.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.356" level="INFO">VALUE: [4.2125000000000495e-05, 4.172200000000098e-05, 4.2625000000000995e-05, 4.200000000000037e-05, 4.232000000000194e-05, 4.2166999999999205e-05, 4.1847000000001106e-05, 4.2111000000000925e-05, 4.259799999999786e-05, 4.2611000000001426e-05, 4.220799999999844e-05, 4.2319000000002466e-05, 4.1860999999997206e-05, 4.2611000000001426e-05, 4.2360999999997706e-05, 4.2223000000000954e-05, 4.1819000000001966e-05, 4.2360999999997706e-05, 4.240199999999694e-05, 4.192999999999905e-05, 4.200000000000037e-05, 4.229199999999933e-05, 4.2625000000000995e-05, 4.197200000000123e-05, 4.1959000000001134e-05, 4.225000000000062e-05, 4.248599999999783e-05, 4.2332999999998566e-05, 4.256999999999872e-05, 4.2111000000000925e-05, 4.186200000000015e-05, 4.2180999999998775e-05, 4.2402999999999885e-05, 4.1931000000001994e-05, 4.18059999999984e-05, 4.21120000000004e-05, 4.2625000000000995e-05, 4.2360999999997706e-05, 4.1666999999998705e-05, 4.169400000000184e-05, 4.24999999999974e-05, 4.241599999999998e-05, 4.2541000000000107e-05, 4.1875000000000245e-05, 4.2583000000002286e-05, 4.198599999999733e-05, 4.247200000000173e-05, 4.2360999999997706e-05, 4.2666999999999705e-05, 4.2416999999999455e-05]</msg>
<status status="PASS" starttime="20201030 18:28:45.355" endtime="20201030 18:28:45.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.350" endtime="20201030 18:28:45.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.362" endtime="20201030 18:28:45.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.361" endtime="20201030 18:28:45.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.359" endtime="20201030 18:28:45.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.000" endtime="20201030 18:28:45.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.999" endtime="20201030 18:28:45.383"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.392" endtime="20201030 18:28:45.410"></status>
</kw>
<msg timestamp="20201030 18:28:45.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.390" endtime="20201030 18:28:45.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.411" endtime="20201030 18:28:45.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.413" endtime="20201030 18:28:45.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.387" endtime="20201030 18:28:45.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.385" endtime="20201030 18:28:45.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.423" endtime="20201030 18:28:45.708"></status>
</kw>
<msg timestamp="20201030 18:28:45.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019649264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.421" endtime="20201030 18:28:45.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019649264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.712" endtime="20201030 18:28:45.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.721" endtime="20201030 18:28:45.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.418" endtime="20201030 18:28:45.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.417" endtime="20201030 18:28:45.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.727" level="INFO">${RESULT} = [{'diff': 4.3667000000000705e-05}, {'diff': 4.276400000000069e-05}, {'diff': 4.2930999999999525e-05}, {'diff': 4.2930999999999525e-05}, {'diff': 4.3180999999999775e-05}, {'diff': 4.273600000000155e-05...</msg>
<status status="PASS" starttime="20201030 18:28:45.724" endtime="20201030 18:28:45.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.732" level="INFO">${ACCURACY} = {'diff': [4.3667000000000705e-05, 4.276400000000069e-05, 4.2930999999999525e-05, 4.2930999999999525e-05, 4.3180999999999775e-05, 4.273600000000155e-05, 4.28059999999994e-05, 4.3111000000001926e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:28:45.728" endtime="20201030 18:28:45.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.737" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.736" endtime="20201030 18:28:45.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.739" level="INFO">VALUE: [4.3667000000000705e-05, 4.276400000000069e-05, 4.2930999999999525e-05, 4.2930999999999525e-05, 4.3180999999999775e-05, 4.273600000000155e-05, 4.28059999999994e-05, 4.3111000000001926e-05, 4.279199999999983e-05, 4.341600000000098e-05, 4.279199999999983e-05, 4.327800000000076e-05, 4.284799999999811e-05, 4.2666999999999705e-05, 4.291600000000048e-05, 4.325000000000162e-05, 4.3361000000002176e-05, 4.275000000000112e-05, 4.2860999999998206e-05, 4.325000000000162e-05, 4.3082999999999316e-05, 4.3097000000002356e-05, 4.29999999999979e-05, 4.3139000000001065e-05, 4.276400000000069e-05, 4.347199999999926e-05, 4.354200000000058e-05, 4.3195000000002814e-05, 4.3347000000002606e-05, 4.323599999999858e-05, 4.280600000000287e-05, 4.294399999999962e-05, 4.275000000000112e-05, 4.329200000000033e-05, 4.326400000000119e-05, 4.2987000000001274e-05, 4.333399999999904e-05, 4.31800000000003e-05, 4.354200000000058e-05, 4.3625000000001996e-05, 4.323600000000205e-05, 4.3055000000000176e-05, 4.322200000000248e-05, 4.274999999999765e-05, 4.323600000000205e-05, 4.3110999999998456e-05, 4.317999999999683e-05, 4.3318999999999996e-05, 4.326399999999772e-05, 4.3346999999999136e-05]</msg>
<status status="PASS" starttime="20201030 18:28:45.738" endtime="20201030 18:28:45.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.733" endtime="20201030 18:28:45.741"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.744" endtime="20201030 18:28:45.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.743" endtime="20201030 18:28:45.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.742" endtime="20201030 18:28:45.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.384" endtime="20201030 18:28:45.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.383" endtime="20201030 18:28:45.765"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.774" endtime="20201030 18:28:45.792"></status>
</kw>
<msg timestamp="20201030 18:28:45.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.772" endtime="20201030 18:28:45.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.794" endtime="20201030 18:28:45.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.796" endtime="20201030 18:28:45.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.770" endtime="20201030 18:28:45.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.768" endtime="20201030 18:28:45.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.805" endtime="20201030 18:28:46.093"></status>
</kw>
<msg timestamp="20201030 18:28:46.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.804" endtime="20201030 18:28:46.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.097" endtime="20201030 18:28:46.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.105" endtime="20201030 18:28:46.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.801" endtime="20201030 18:28:46.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.799" endtime="20201030 18:28:46.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.112" level="INFO">${RESULT} = [{'diff': 4.452799999999854e-05}, {'diff': 4.44999999999994e-05}, {'diff': 4.3736999999998555e-05}, {'diff': 4.4680999999997806e-05}, {'diff': 4.3805000000000927e-05}, {'diff': 4.379099999999789e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:46.109" endtime="20201030 18:28:46.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.116" level="INFO">${ACCURACY} = {'diff': [4.452799999999854e-05, 4.44999999999994e-05, 4.3736999999998555e-05, 4.4680999999997806e-05, 4.3805000000000927e-05, 4.379099999999789e-05, 4.4305000000001427e-05, 4.374999999999865e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 18:28:46.113" endtime="20201030 18:28:46.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.121" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.120" endtime="20201030 18:28:46.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.123" level="INFO">VALUE: [4.452799999999854e-05, 4.44999999999994e-05, 4.3736999999998555e-05, 4.4680999999997806e-05, 4.3805000000000927e-05, 4.379099999999789e-05, 4.4305000000001427e-05, 4.374999999999865e-05, 4.405499999999771e-05, 4.395800000000019e-05, 4.4374999999999276e-05, 4.456999999999725e-05, 4.444400000000112e-05, 4.4597000000000386e-05, 4.44999999999994e-05, 4.4096999999999886e-05, 4.4152999999998166e-05, 4.405599999999718e-05, 4.4430999999997556e-05, 4.400000000000237e-05, 4.4624999999999526e-05, 4.379200000000083e-05, 4.4638999999999096e-05, 4.38060000000004e-05, 4.4472999999999735e-05, 4.415199999999869e-05, 4.4624999999999526e-05, 4.4347000000000136e-05, 4.4139000000002065e-05, 4.398599999999933e-05, 4.373600000000255e-05, 4.4083000000000316e-05, 4.427800000000176e-05, 4.420800000000044e-05, 4.4110999999999456e-05, 4.4096999999999886e-05, 4.423599999999958e-05, 4.373599999999908e-05, 4.4403000000001885e-05, 4.4695000000000845e-05, 4.397199999999976e-05, 4.4152999999998166e-05, 4.458400000000029e-05, 4.3945000000000095e-05, 4.455600000000115e-05, 4.402800000000151e-05, 4.436199999999918e-05, 4.4152999999998166e-05, 4.41939999999974e-05, 4.429099999999839e-05]</msg>
<status status="PASS" starttime="20201030 18:28:46.122" endtime="20201030 18:28:46.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.117" endtime="20201030 18:28:46.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.128" endtime="20201030 18:28:46.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.127" endtime="20201030 18:28:46.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.125" endtime="20201030 18:28:46.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.766" endtime="20201030 18:28:46.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.765" endtime="20201030 18:28:46.149"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.160" endtime="20201030 18:28:46.179"></status>
</kw>
<msg timestamp="20201030 18:28:46.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.158" endtime="20201030 18:28:46.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.180" endtime="20201030 18:28:46.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.183" endtime="20201030 18:28:46.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.154" endtime="20201030 18:28:46.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.151" endtime="20201030 18:28:46.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.192" endtime="20201030 18:28:46.477"></status>
</kw>
<msg timestamp="20201030 18:28:46.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02249175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:46.190" endtime="20201030 18:28:46.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02249175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:46.481" endtime="20201030 18:28:46.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.489" endtime="20201030 18:28:46.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.188" endtime="20201030 18:28:46.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.186" endtime="20201030 18:28:46.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.496" level="INFO">${RESULT} = [{'diff': 4.5639000000000096e-05}, {'diff': 4.49999999999999e-05}, {'diff': 4.523600000000058e-05}, {'diff': 4.5430999999998556e-05}, {'diff': 4.532000000000147e-05}, {'diff': 4.5361000000000706e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:46.493" endtime="20201030 18:28:46.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.500" level="INFO">${ACCURACY} = {'diff': [4.5639000000000096e-05, 4.49999999999999e-05, 4.523600000000058e-05, 4.5430999999998556e-05, 4.532000000000147e-05, 4.5361000000000706e-05, 4.48060000000014e-05, 4.461199999999943e-05, 4.565...</msg>
<status status="PASS" starttime="20201030 18:28:46.497" endtime="20201030 18:28:46.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.504" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.503" endtime="20201030 18:28:46.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.507" level="INFO">VALUE: [4.5639000000000096e-05, 4.49999999999999e-05, 4.523600000000058e-05, 4.5430999999998556e-05, 4.532000000000147e-05, 4.5361000000000706e-05, 4.48060000000014e-05, 4.461199999999943e-05, 4.5652999999999666e-05, 4.4986999999999805e-05, 4.522199999999754e-05, 4.4959000000000665e-05, 4.543000000000255e-05, 4.491599999999901e-05, 4.5361000000000706e-05, 4.4874999999999776e-05, 4.5319000000001997e-05, 4.4681000000001275e-05, 4.527799999999929e-05, 4.5611000000000956e-05, 4.545799999999822e-05, 4.5361000000000706e-05, 4.4930999999998056e-05, 4.5611000000000956e-05, 4.523600000000058e-05, 4.4681000000001275e-05, 4.555600000000215e-05, 4.4902999999998916e-05, 4.480599999999793e-05, 4.525000000000015e-05, 4.4916999999998486e-05, 4.504199999999861e-05, 4.555599999999868e-05, 4.53879999999969e-05, 4.5625000000000526e-05, 4.552700000000007e-05, 4.556899999999878e-05, 4.504099999999914e-05, 4.4874999999999776e-05, 4.531899999999853e-05, 4.491599999999901e-05, 4.545800000000169e-05, 4.466600000000223e-05, 4.534699999999767e-05, 4.5430999999998556e-05, 4.4874999999999776e-05, 4.505600000000165e-05, 4.5181000000001775e-05, 4.525000000000015e-05, 4.525000000000015e-05]</msg>
<status status="PASS" starttime="20201030 18:28:46.505" endtime="20201030 18:28:46.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.501" endtime="20201030 18:28:46.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.513" endtime="20201030 18:28:46.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.511" endtime="20201030 18:28:46.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.510" endtime="20201030 18:28:46.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.150" endtime="20201030 18:28:46.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.149" endtime="20201030 18:28:46.533"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.542" endtime="20201030 18:28:46.560"></status>
</kw>
<msg timestamp="20201030 18:28:46.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.541" endtime="20201030 18:28:46.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.562" endtime="20201030 18:28:46.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.564" endtime="20201030 18:28:46.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.538" endtime="20201030 18:28:46.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.536" endtime="20201030 18:28:46.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.573" endtime="20201030 18:28:46.858"></status>
</kw>
<msg timestamp="20201030 18:28:46.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.572" endtime="20201030 18:28:46.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.863" endtime="20201030 18:28:46.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.871" endtime="20201030 18:28:46.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.569" endtime="20201030 18:28:46.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.567" endtime="20201030 18:28:46.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.878" level="INFO">${RESULT} = [{'diff': 4.580599999999893e-05}, {'diff': 4.5930999999999056e-05}, {'diff': 4.6430999999999556e-05}, {'diff': 4.60000000000009e-05}, {'diff': 4.634699999999867e-05}, {'diff': 4.572199999999804e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:46.875" endtime="20201030 18:28:46.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.884" level="INFO">${ACCURACY} = {'diff': [4.580599999999893e-05, 4.5930999999999056e-05, 4.6430999999999556e-05, 4.60000000000009e-05, 4.634699999999867e-05, 4.572199999999804e-05, 4.623600000000158e-05, 4.5930999999999056e-05, 4.65...</msg>
<status status="PASS" starttime="20201030 18:28:46.879" endtime="20201030 18:28:46.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.888" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.887" endtime="20201030 18:28:46.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.891" level="INFO">VALUE: [4.580599999999893e-05, 4.5930999999999056e-05, 4.6430999999999556e-05, 4.60000000000009e-05, 4.634699999999867e-05, 4.572199999999804e-05, 4.623600000000158e-05, 4.5930999999999056e-05, 4.656999999999925e-05, 4.6416999999999986e-05, 4.620800000000244e-05, 4.658400000000229e-05, 4.627699999999735e-05, 4.652700000000107e-05, 4.5875000000000776e-05, 4.592999999999958e-05, 4.56800000000028e-05, 4.666600000000076e-05, 4.652800000000054e-05, 4.622200000000201e-05, 4.608299999999885e-05, 4.575000000000065e-05, 4.6361000000001706e-05, 4.645799999999922e-05, 4.5902999999999916e-05, 4.648600000000183e-05, 4.598600000000133e-05, 4.5944999999998626e-05, 4.655599999999968e-05, 4.5973000000001235e-05, 4.6375000000001276e-05, 4.611200000000093e-05, 4.584800000000111e-05, 4.604199999999961e-05, 4.663799999999815e-05, 4.636099999999824e-05, 4.60000000000009e-05, 4.573599999999761e-05, 4.6597000000002387e-05, 4.617999999999983e-05, 4.659699999999892e-05, 4.645799999999922e-05, 4.61939999999994e-05, 4.604199999999961e-05, 4.6153000000000166e-05, 4.5944999999998626e-05, 4.605600000000265e-05, 4.602800000000004e-05, 4.645799999999922e-05, 4.598600000000133e-05]</msg>
<status status="PASS" starttime="20201030 18:28:46.889" endtime="20201030 18:28:46.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.885" endtime="20201030 18:28:46.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.900" endtime="20201030 18:28:46.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.899" endtime="20201030 18:28:46.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.897" endtime="20201030 18:28:46.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.534" endtime="20201030 18:28:46.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.534" endtime="20201030 18:28:46.921"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.932" endtime="20201030 18:28:46.951"></status>
</kw>
<msg timestamp="20201030 18:28:46.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.931" endtime="20201030 18:28:46.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.952" endtime="20201030 18:28:46.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.955" endtime="20201030 18:28:46.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.927" endtime="20201030 18:28:46.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.924" endtime="20201030 18:28:46.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.964" endtime="20201030 18:28:47.250"></status>
</kw>
<msg timestamp="20201030 18:28:47.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022867264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.962" endtime="20201030 18:28:47.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022867264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.254" endtime="20201030 18:28:47.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.263" endtime="20201030 18:28:47.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.960" endtime="20201030 18:28:47.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.958" endtime="20201030 18:28:47.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.269" level="INFO">${RESULT} = [{'diff': 4.755600000000068e-05}, {'diff': 4.704200000000061e-05}, {'diff': 4.723599999999911e-05}, {'diff': 4.722199999999954e-05}, {'diff': 4.734799999999914e-05}, {'diff': 4.708299999999985e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:47.266" endtime="20201030 18:28:47.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.274" level="INFO">${ACCURACY} = {'diff': [4.755600000000068e-05, 4.704200000000061e-05, 4.723599999999911e-05, 4.722199999999954e-05, 4.734799999999914e-05, 4.708299999999985e-05, 4.677799999999732e-05, 4.718000000000083e-05, 4.7499...</msg>
<status status="PASS" starttime="20201030 18:28:47.270" endtime="20201030 18:28:47.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.278" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.277" endtime="20201030 18:28:47.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.281" level="INFO">VALUE: [4.755600000000068e-05, 4.704200000000061e-05, 4.723599999999911e-05, 4.722199999999954e-05, 4.734799999999914e-05, 4.708299999999985e-05, 4.677799999999732e-05, 4.718000000000083e-05, 4.749999999999893e-05, 4.736099999999924e-05, 4.680500000000046e-05, 4.672199999999904e-05, 4.687499999999831e-05, 4.7375000000002276e-05, 4.705500000000071e-05, 4.756900000000078e-05, 4.670799999999947e-05, 4.6917000000000486e-05, 4.7167000000000736e-05, 4.734699999999967e-05, 4.733400000000304e-05, 4.711099999999899e-05, 4.7431000000000556e-05, 4.7167000000000736e-05, 4.7181000000000306e-05, 4.730600000000043e-05, 4.688899999999788e-05, 4.7458999999999696e-05, 4.6972999999998766e-05, 4.727700000000182e-05, 4.676300000000175e-05, 4.754099999999817e-05, 4.749999999999893e-05, 4.666600000000076e-05, 4.676400000000122e-05, 4.709699999999942e-05, 4.722199999999954e-05, 4.687499999999831e-05, 4.759699999999992e-05, 4.726399999999825e-05, 4.687499999999831e-05, 4.6889000000001346e-05, 4.705600000000018e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.702799999999757e-05, 4.733399999999957e-05, 4.7417000000000986e-05, 4.6736999999998086e-05, 4.727799999999782e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.279" endtime="20201030 18:28:47.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.274" endtime="20201030 18:28:47.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.286" endtime="20201030 18:28:47.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.284" endtime="20201030 18:28:47.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.283" endtime="20201030 18:28:47.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.922" endtime="20201030 18:28:47.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.921" endtime="20201030 18:28:47.306"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.315" endtime="20201030 18:28:47.334"></status>
</kw>
<msg timestamp="20201030 18:28:47.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.313" endtime="20201030 18:28:47.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.336" endtime="20201030 18:28:47.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.339" endtime="20201030 18:28:47.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.311" endtime="20201030 18:28:47.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.309" endtime="20201030 18:28:47.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.348" endtime="20201030 18:28:47.634"></status>
</kw>
<msg timestamp="20201030 18:28:47.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020602333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.346" endtime="20201030 18:28:47.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020602333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.638" endtime="20201030 18:28:47.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.646" endtime="20201030 18:28:47.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.344" endtime="20201030 18:28:47.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.342" endtime="20201030 18:28:47.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.653" level="INFO">${RESULT} = [{'diff': 4.811099999999999e-05}, {'diff': 4.791599999999854e-05}, {'diff': 4.834700000000067e-05}, {'diff': 4.844400000000165e-05}, {'diff': 4.795800000000072e-05}, {'diff': 4.768000000000133e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:47.650" endtime="20201030 18:28:47.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.657" level="INFO">${ACCURACY} = {'diff': [4.811099999999999e-05, 4.791599999999854e-05, 4.834700000000067e-05, 4.844400000000165e-05, 4.795800000000072e-05, 4.768000000000133e-05, 4.790299999999845e-05, 4.857000000000125e-05, 4.7917...</msg>
<status status="PASS" starttime="20201030 18:28:47.654" endtime="20201030 18:28:47.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.662" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.661" endtime="20201030 18:28:47.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.664" level="INFO">VALUE: [4.811099999999999e-05, 4.791599999999854e-05, 4.834700000000067e-05, 4.844400000000165e-05, 4.795800000000072e-05, 4.768000000000133e-05, 4.790299999999845e-05, 4.857000000000125e-05, 4.7917000000001486e-05, 4.799999999999943e-05, 4.8445000000001126e-05, 4.7917000000001486e-05, 4.811099999999999e-05, 4.7681000000000806e-05, 4.811099999999999e-05, 4.7903000000001916e-05, 4.838899999999938e-05, 4.8473000000000266e-05, 4.777800000000179e-05, 4.798599999999986e-05, 4.773599999999961e-05, 4.799999999999943e-05, 4.829099999999892e-05, 4.8653000000002666e-05, 4.861100000000049e-05, 4.7959000000000196e-05, 4.7861000000003207e-05, 4.854199999999864e-05, 4.784700000000017e-05, 4.856900000000178e-05, 4.859700000000092e-05, 4.841699999999852e-05, 4.798599999999986e-05, 4.847200000000079e-05, 4.776400000000222e-05, 4.7931000000001056e-05, 4.8181000000001306e-05, 4.866699999999877e-05, 4.811199999999946e-05, 4.830600000000143e-05, 4.843000000000208e-05, 4.812499999999956e-05, 4.768000000000133e-05, 4.799999999999943e-05, 4.838899999999938e-05, 4.834700000000067e-05, 4.809700000000042e-05, 4.830599999999796e-05, 4.812499999999956e-05, 4.849999999999993e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.663" endtime="20201030 18:28:47.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.658" endtime="20201030 18:28:47.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.670" endtime="20201030 18:28:47.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.669" endtime="20201030 18:28:47.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.667" endtime="20201030 18:28:47.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.307" endtime="20201030 18:28:47.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.307" endtime="20201030 18:28:47.691"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.700" endtime="20201030 18:28:47.718"></status>
</kw>
<msg timestamp="20201030 18:28:47.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.698" endtime="20201030 18:28:47.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.720" endtime="20201030 18:28:47.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.722" endtime="20201030 18:28:47.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.695" endtime="20201030 18:28:47.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.693" endtime="20201030 18:28:47.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.732" endtime="20201030 18:28:48.017"></status>
</kw>
<msg timestamp="20201030 18:28:48.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.730" endtime="20201030 18:28:48.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.022" endtime="20201030 18:28:48.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.030" endtime="20201030 18:28:48.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.727" endtime="20201030 18:28:48.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.726" endtime="20201030 18:28:48.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.036" level="INFO">${RESULT} = [{'diff': 4.923600000000111e-05}, {'diff': 4.938900000000038e-05}, {'diff': 4.950000000000093e-05}, {'diff': 4.879200000000236e-05}, {'diff': 4.898600000000086e-05}, {'diff': 4.947200000000179e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:48.033" endtime="20201030 18:28:48.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.044" level="INFO">${ACCURACY} = {'diff': [4.923600000000111e-05, 4.938900000000038e-05, 4.950000000000093e-05, 4.879200000000236e-05, 4.898600000000086e-05, 4.947200000000179e-05, 4.936099999999777e-05, 4.936099999999777e-05, 4.8776...</msg>
<status status="PASS" starttime="20201030 18:28:48.037" endtime="20201030 18:28:48.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.048" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.047" endtime="20201030 18:28:48.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.051" level="INFO">VALUE: [4.923600000000111e-05, 4.938900000000038e-05, 4.950000000000093e-05, 4.879200000000236e-05, 4.898600000000086e-05, 4.947200000000179e-05, 4.936099999999777e-05, 4.936099999999777e-05, 4.877699999999985e-05, 4.867999999999886e-05, 4.926400000000025e-05, 4.962500000000106e-05, 4.922200000000154e-05, 4.879200000000236e-05, 4.950000000000093e-05, 4.923600000000111e-05, 4.876399999999975e-05, 4.879200000000236e-05, 4.926400000000025e-05, 4.868099999999834e-05, 4.958400000000182e-05, 4.877799999999932e-05, 4.8681000000001806e-05, 4.936199999999724e-05, 4.8737000000000086e-05, 4.873600000000061e-05, 4.906900000000228e-05, 4.954100000000017e-05, 4.959700000000192e-05, 4.956899999999931e-05, 4.942999999999961e-05, 4.954100000000017e-05, 4.877799999999932e-05, 4.936100000000124e-05, 4.912500000000056e-05, 4.875000000000018e-05, 4.868099999999834e-05, 4.948600000000136e-05, 4.938900000000038e-05, 4.925000000000068e-05, 4.955600000000268e-05, 4.936099999999777e-05, 4.918099999999884e-05, 4.911100000000099e-05, 4.877699999999985e-05, 4.866699999999877e-05, 4.940299999999995e-05, 4.908399999999785e-05, 4.886099999999727e-05, 4.873600000000061e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.050" endtime="20201030 18:28:48.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.045" endtime="20201030 18:28:48.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.056" endtime="20201030 18:28:48.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.054" endtime="20201030 18:28:48.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.053" endtime="20201030 18:28:48.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.692" endtime="20201030 18:28:48.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.691" endtime="20201030 18:28:48.077"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.085" endtime="20201030 18:28:48.104"></status>
</kw>
<msg timestamp="20201030 18:28:48.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.084" endtime="20201030 18:28:48.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.105" endtime="20201030 18:28:48.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.108" endtime="20201030 18:28:48.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.081" endtime="20201030 18:28:48.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.079" endtime="20201030 18:28:48.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.117" endtime="20201030 18:28:48.403"></status>
</kw>
<msg timestamp="20201030 18:28:48.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019712472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.115" endtime="20201030 18:28:48.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019712472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.407" endtime="20201030 18:28:48.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.415" endtime="20201030 18:28:48.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.113" endtime="20201030 18:28:48.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.111" endtime="20201030 18:28:48.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.422" level="INFO">${RESULT} = [{'diff': 5.012500000000156e-05}, {'diff': 4.966600000000029e-05}, {'diff': 5.049999999999846e-05}, {'diff': 4.987500000000131e-05}, {'diff': 4.972200000000204e-05}, {'diff': 5.018000000000036e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:48.419" endtime="20201030 18:28:48.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.426" level="INFO">${ACCURACY} = {'diff': [5.012500000000156e-05, 4.966600000000029e-05, 5.049999999999846e-05, 4.987500000000131e-05, 4.972200000000204e-05, 5.018000000000036e-05, 5.054200000000064e-05, 4.993000000000011e-05, 4.9889...</msg>
<status status="PASS" starttime="20201030 18:28:48.423" endtime="20201030 18:28:48.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.431" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.429" endtime="20201030 18:28:48.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.433" level="INFO">VALUE: [5.012500000000156e-05, 4.966600000000029e-05, 5.049999999999846e-05, 4.987500000000131e-05, 4.972200000000204e-05, 5.018000000000036e-05, 5.054200000000064e-05, 4.993000000000011e-05, 4.988900000000088e-05, 5.041700000000052e-05, 4.966699999999977e-05, 5.045899999999923e-05, 5.056999999999978e-05, 5.037500000000181e-05, 5.043100000000009e-05, 4.973599999999814e-05, 5.008300000000285e-05, 5.0487000000001836e-05, 4.998599999999839e-05, 5.059799999999892e-05, 5.034700000000267e-05, 5.011099999999852e-05, 4.972200000000204e-05, 5.055600000000021e-05, 4.976400000000075e-05, 5.036099999999877e-05, 5.054199999999717e-05, 4.966699999999977e-05, 4.987500000000131e-05, 5.030599999999996e-05, 5.02079999999995e-05, 5.016700000000027e-05, 4.990300000000045e-05, 4.987500000000131e-05, 5.056999999999978e-05, 4.979199999999989e-05, 5.0237000000001586e-05, 5.004100000000067e-05, 5.045799999999975e-05, 4.96530000000002e-05, 5.026400000000125e-05, 4.981899999999956e-05, 5.0151999999997754e-05, 4.993000000000011e-05, 5.030500000000049e-05, 5.020899999999898e-05, 5.030599999999996e-05, 5.059699999999945e-05, 5.052800000000107e-05, 5.054200000000064e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.432" endtime="20201030 18:28:48.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.427" endtime="20201030 18:28:48.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.438" endtime="20201030 18:28:48.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.436" endtime="20201030 18:28:48.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.435" endtime="20201030 18:28:48.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.077" endtime="20201030 18:28:48.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.077" endtime="20201030 18:28:48.459"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.467" endtime="20201030 18:28:48.487"></status>
</kw>
<msg timestamp="20201030 18:28:48.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.466" endtime="20201030 18:28:48.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.488" endtime="20201030 18:28:48.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.491" endtime="20201030 18:28:48.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.463" endtime="20201030 18:28:48.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.461" endtime="20201030 18:28:48.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.500" endtime="20201030 18:28:48.785"></status>
</kw>
<msg timestamp="20201030 18:28:48.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020598667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020650208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.498" endtime="20201030 18:28:48.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020598667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020650208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.789" endtime="20201030 18:28:48.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.798" endtime="20201030 18:28:48.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.496" endtime="20201030 18:28:48.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.494" endtime="20201030 18:28:48.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.804" level="INFO">${RESULT} = [{'diff': 5.15409999999987e-05}, {'diff': 5.112499999999909e-05}, {'diff': 5.13470000000002e-05}, {'diff': 5.161100000000002e-05}, {'diff': 5.149999999999946e-05}, {'diff': 5.077800000000132e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:48.801" endtime="20201030 18:28:48.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.808" level="INFO">${ACCURACY} = {'diff': [5.15409999999987e-05, 5.112499999999909e-05, 5.13470000000002e-05, 5.161100000000002e-05, 5.149999999999946e-05, 5.077800000000132e-05, 5.097199999999982e-05, 5.163899999999916e-05, 5.150000...</msg>
<status status="PASS" starttime="20201030 18:28:48.805" endtime="20201030 18:28:48.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.813" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.812" endtime="20201030 18:28:48.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.815" level="INFO">VALUE: [5.15409999999987e-05, 5.112499999999909e-05, 5.13470000000002e-05, 5.161100000000002e-05, 5.149999999999946e-05, 5.077800000000132e-05, 5.097199999999982e-05, 5.163899999999916e-05, 5.150000000000293e-05, 5.077699999999838e-05, 5.123599999999964e-05, 5.149999999999946e-05, 5.099999999999896e-05, 5.086200000000221e-05, 5.1637999999999684e-05, 5.129199999999792e-05, 5.088900000000188e-05, 5.108400000000332e-05, 5.077800000000132e-05, 5.10409999999982e-05, 5.083300000000013e-05, 5.15409999999987e-05, 5.0943999999997214e-05, 5.161100000000002e-05, 5.086100000000274e-05, 5.073599999999914e-05, 5.148599999999989e-05, 5.154199999999817e-05, 5.129199999999792e-05, 5.116700000000127e-05, 5.152800000000207e-05, 5.077800000000132e-05, 5.098599999999939e-05, 5.074999999999871e-05, 5.086099999999927e-05, 5.0887999999998934e-05, 5.105600000000071e-05, 5.074999999999871e-05, 5.073599999999914e-05, 5.10409999999982e-05, 5.162499999999959e-05, 5.072199999999957e-05, 5.087500000000231e-05, 5.111099999999952e-05, 5.104200000000114e-05, 5.155499999999827e-05, 5.130600000000096e-05, 5.145800000000075e-05, 5.116700000000127e-05, 5.094500000000016e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.814" endtime="20201030 18:28:48.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.809" endtime="20201030 18:28:48.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.821" endtime="20201030 18:28:48.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.820" endtime="20201030 18:28:48.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.818" endtime="20201030 18:28:48.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.460" endtime="20201030 18:28:48.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.459" endtime="20201030 18:28:48.842"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.851" endtime="20201030 18:28:48.869"></status>
</kw>
<msg timestamp="20201030 18:28:48.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.849" endtime="20201030 18:28:48.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.871" endtime="20201030 18:28:48.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.873" endtime="20201030 18:28:48.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.846" endtime="20201030 18:28:48.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.844" endtime="20201030 18:28:48.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.883" endtime="20201030 18:28:49.169"></status>
</kw>
<msg timestamp="20201030 18:28:49.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019705694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.881" endtime="20201030 18:28:49.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019705694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.173" endtime="20201030 18:28:49.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.182" endtime="20201030 18:28:49.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.878" endtime="20201030 18:28:49.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.877" endtime="20201030 18:28:49.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.188" level="INFO">${RESULT} = [{'diff': 5.229099999999945e-05}, {'diff': 5.230499999999902e-05}, {'diff': 5.227799999999935e-05}, {'diff': 5.2235999999997174e-05}, {'diff': 5.240299999999948e-05}, {'diff': 5.205600000000171e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:49.185" endtime="20201030 18:28:49.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.193" level="INFO">${ACCURACY} = {'diff': [5.229099999999945e-05, 5.230499999999902e-05, 5.227799999999935e-05, 5.2235999999997174e-05, 5.240299999999948e-05, 5.205600000000171e-05, 5.202800000000257e-05, 5.265299999999973e-05, 5.172...</msg>
<status status="PASS" starttime="20201030 18:28:49.189" endtime="20201030 18:28:49.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.198" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.197" endtime="20201030 18:28:49.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.200" level="INFO">VALUE: [5.229099999999945e-05, 5.230499999999902e-05, 5.227799999999935e-05, 5.2235999999997174e-05, 5.240299999999948e-05, 5.205600000000171e-05, 5.202800000000257e-05, 5.265299999999973e-05, 5.172200000000057e-05, 5.187499999999984e-05, 5.197200000000082e-05, 5.2652000000000254e-05, 5.213899999999966e-05, 5.236100000000077e-05, 5.218099999999837e-05, 5.21669999999988e-05, 5.201300000000006e-05, 5.215299999999923e-05, 5.211100000000052e-05, 5.197200000000082e-05, 5.236100000000077e-05, 5.259699999999798e-05, 5.2207999999998034e-05, 5.229199999999892e-05, 5.222200000000107e-05, 5.211100000000052e-05, 5.223600000000064e-05, 5.254199999999917e-05, 5.206999999999781e-05, 5.230599999999849e-05, 5.20279999999991e-05, 5.262500000000059e-05, 5.261099999999755e-05, 5.193099999999812e-05, 5.174999999999971e-05, 5.226300000000031e-05, 5.248600000000089e-05, 5.201399999999953e-05, 5.227699999999988e-05, 5.25409999999997e-05, 5.181900000000156e-05, 5.2416000000003043e-05, 5.230500000000249e-05, 5.186100000000027e-05, 5.262500000000059e-05, 5.230599999999849e-05, 5.241699999999905e-05, 5.205600000000171e-05, 5.2471999999997854e-05, 5.233300000000163e-05]</msg>
<status status="PASS" starttime="20201030 18:28:49.199" endtime="20201030 18:28:49.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.194" endtime="20201030 18:28:49.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.205" endtime="20201030 18:28:49.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.204" endtime="20201030 18:28:49.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.202" endtime="20201030 18:28:49.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.843" endtime="20201030 18:28:49.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.842" endtime="20201030 18:28:49.226"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.235" endtime="20201030 18:28:49.253"></status>
</kw>
<msg timestamp="20201030 18:28:49.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.233" endtime="20201030 18:28:49.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.255" endtime="20201030 18:28:49.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.257" endtime="20201030 18:28:49.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.231" endtime="20201030 18:28:49.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.228" endtime="20201030 18:28:49.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.266" endtime="20201030 18:28:49.553"></status>
</kw>
<msg timestamp="20201030 18:28:49.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.265" endtime="20201030 18:28:49.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.557" endtime="20201030 18:28:49.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.566" endtime="20201030 18:28:49.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.262" endtime="20201030 18:28:49.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.261" endtime="20201030 18:28:49.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.573" level="INFO">${RESULT} = [{'diff': 5.297200000000182e-05}, {'diff': 5.311099999999805e-05}, {'diff': 5.309700000000195e-05}, {'diff': 5.326299999999784e-05}, {'diff': 5.329199999999992e-05}, {'diff': 5.3166000000000324e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:49.569" endtime="20201030 18:28:49.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.577" level="INFO">${ACCURACY} = {'diff': [5.297200000000182e-05, 5.311099999999805e-05, 5.309700000000195e-05, 5.326299999999784e-05, 5.329199999999992e-05, 5.3166000000000324e-05, 5.3443999999999714e-05, 5.2693999999998964e-05, 5.3...</msg>
<status status="PASS" starttime="20201030 18:28:49.573" endtime="20201030 18:28:49.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.581" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.580" endtime="20201030 18:28:49.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.584" level="INFO">VALUE: [5.297200000000182e-05, 5.311099999999805e-05, 5.309700000000195e-05, 5.326299999999784e-05, 5.329199999999992e-05, 5.3166000000000324e-05, 5.3443999999999714e-05, 5.2693999999998964e-05, 5.355500000000027e-05, 5.336100000000177e-05, 5.354200000000017e-05, 5.297200000000182e-05, 5.313900000000066e-05, 5.2916000000000074e-05, 5.308299999999891e-05, 5.3485999999998424e-05, 5.347200000000232e-05, 5.361100000000202e-05, 5.355599999999974e-05, 5.300000000000096e-05, 5.329199999999992e-05, 5.269499999999844e-05, 5.290299999999998e-05, 5.305600000000271e-05, 5.306899999999934e-05, 5.287500000000084e-05, 5.273600000000114e-05, 5.287499999999737e-05, 5.2679999999999394e-05, 5.30410000000002e-05, 5.3416000000000574e-05, 5.3499999999997994e-05, 5.301400000000053e-05, 5.3430000000000144e-05, 5.331999999999906e-05, 5.329199999999992e-05, 5.336100000000177e-05, 5.312499999999762e-05, 5.3249999999997744e-05, 5.31669999999998e-05, 5.293099999999912e-05, 5.280599999999899e-05, 5.334699999999873e-05, 5.287500000000084e-05, 5.288900000000041e-05, 5.276400000000028e-05, 5.329199999999992e-05, 5.276400000000028e-05, 5.3430000000000144e-05, 5.3166000000000324e-05]</msg>
<status status="PASS" starttime="20201030 18:28:49.582" endtime="20201030 18:28:49.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.577" endtime="20201030 18:28:49.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.589" endtime="20201030 18:28:49.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.587" endtime="20201030 18:28:49.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.586" endtime="20201030 18:28:49.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.227" endtime="20201030 18:28:49.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.226" endtime="20201030 18:28:49.609"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.618" endtime="20201030 18:28:49.639"></status>
</kw>
<msg timestamp="20201030 18:28:49.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.617" endtime="20201030 18:28:49.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.640" endtime="20201030 18:28:49.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.643" endtime="20201030 18:28:49.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.614" endtime="20201030 18:28:49.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.612" endtime="20201030 18:28:49.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.652" endtime="20201030 18:28:49.937"></status>
</kw>
<msg timestamp="20201030 18:28:49.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02066225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020716778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:49.650" endtime="20201030 18:28:49.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02066225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020716778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:49.941" endtime="20201030 18:28:49.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.950" endtime="20201030 18:28:49.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.648" endtime="20201030 18:28:49.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.646" endtime="20201030 18:28:49.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.956" level="INFO">${RESULT} = [{'diff': 5.45280000000016e-05}, {'diff': 5.380599999999999e-05}, {'diff': 5.411099999999905e-05}, {'diff': 5.440299999999801e-05}, {'diff': 5.362500000000159e-05}, {'diff': 5.437499999999887e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:49.953" endtime="20201030 18:28:49.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.961" level="INFO">${ACCURACY} = {'diff': [5.45280000000016e-05, 5.380599999999999e-05, 5.411099999999905e-05, 5.440299999999801e-05, 5.362500000000159e-05, 5.437499999999887e-05, 5.397299999999883e-05, 5.4485999999999424e-05, 5.4473...</msg>
<status status="PASS" starttime="20201030 18:28:49.957" endtime="20201030 18:28:49.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.965" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.964" endtime="20201030 18:28:49.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.967" level="INFO">VALUE: [5.45280000000016e-05, 5.380599999999999e-05, 5.411099999999905e-05, 5.440299999999801e-05, 5.362500000000159e-05, 5.437499999999887e-05, 5.397299999999883e-05, 5.4485999999999424e-05, 5.44730000000028e-05, 5.406900000000034e-05, 5.404099999999773e-05, 5.4458000000000284e-05, 5.45549999999978e-05, 5.4415999999998105e-05, 5.38609999999988e-05, 5.436100000000277e-05, 5.388900000000141e-05, 5.3679999999996925e-05, 5.430499999999755e-05, 5.404200000000067e-05, 5.443100000000062e-05, 5.4499999999998994e-05, 5.377800000000085e-05, 5.383399999999913e-05, 5.46670000000013e-05, 5.454200000000117e-05, 5.369499999999944e-05, 5.3999999999998494e-05, 5.4194000000000464e-05, 5.3916000000001074e-05, 5.459799999999945e-05, 5.443100000000062e-05, 5.440300000000148e-05, 5.423600000000264e-05, 5.388899999999794e-05, 5.429200000000092e-05, 5.433300000000016e-05, 5.381900000000009e-05, 5.437500000000234e-05, 5.3735999999998674e-05, 5.4499999999998994e-05, 5.434699999999973e-05, 5.419499999999994e-05, 5.468100000000087e-05, 5.412499999999862e-05, 5.3721999999999104e-05, 5.388900000000141e-05, 5.384699999999923e-05, 5.3680000000000394e-05, 5.383299999999966e-05]</msg>
<status status="PASS" starttime="20201030 18:28:49.966" endtime="20201030 18:28:49.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.961" endtime="20201030 18:28:49.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.973" endtime="20201030 18:28:49.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.972" endtime="20201030 18:28:49.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.971" endtime="20201030 18:28:49.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.610" endtime="20201030 18:28:49.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.610" endtime="20201030 18:28:49.994"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.003" endtime="20201030 18:28:50.021"></status>
</kw>
<msg timestamp="20201030 18:28:50.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.001" endtime="20201030 18:28:50.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.023" endtime="20201030 18:28:50.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.026" endtime="20201030 18:28:50.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.999" endtime="20201030 18:28:50.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.996" endtime="20201030 18:28:50.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.035" endtime="20201030 18:28:50.319"></status>
</kw>
<msg timestamp="20201030 18:28:50.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019914792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019969806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.033" endtime="20201030 18:28:50.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019914792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019969806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.324" endtime="20201030 18:28:50.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.332" endtime="20201030 18:28:50.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.031" endtime="20201030 18:28:50.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.029" endtime="20201030 18:28:50.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.338" level="INFO">${RESULT} = [{'diff': 5.5013999999999064e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.5179999999998425e-05}, {'diff': 5.488899999999894e-05}, {'diff': 5.555500000000227e-05}, {'diff': 5.4722000000000104e-05...</msg>
<status status="PASS" starttime="20201030 18:28:50.335" endtime="20201030 18:28:50.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.343" level="INFO">${ACCURACY} = {'diff': [5.5013999999999064e-05, 5.4735999999999674e-05, 5.5179999999998425e-05, 5.488899999999894e-05, 5.555500000000227e-05, 5.4722000000000104e-05, 5.4901999999999035e-05, 5.475000000000271e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:28:50.339" endtime="20201030 18:28:50.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.348" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.347" endtime="20201030 18:28:50.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.351" level="INFO">VALUE: [5.5013999999999064e-05, 5.4735999999999674e-05, 5.5179999999998425e-05, 5.488899999999894e-05, 5.555500000000227e-05, 5.4722000000000104e-05, 5.4901999999999035e-05, 5.475000000000271e-05, 5.536099999999683e-05, 5.4985999999999924e-05, 5.5430000000002144e-05, 5.562500000000012e-05, 5.46809999999974e-05, 5.488899999999894e-05, 5.5249999999999744e-05, 5.545900000000076e-05, 5.479200000000142e-05, 5.495900000000026e-05, 5.505600000000124e-05, 5.518100000000137e-05, 5.5194000000001464e-05, 5.5249999999999744e-05, 5.491700000000155e-05, 5.53610000000003e-05, 5.554099999999923e-05, 5.5415999999999105e-05, 5.5429999999998675e-05, 5.561100000000055e-05, 5.4958000000000784e-05, 5.491699999999808e-05, 5.51809999999979e-05, 5.558400000000088e-05, 5.5555999999998273e-05, 5.48609999999998e-05, 5.509699999999701e-05, 5.518100000000137e-05, 5.512500000000309e-05, 5.5486000000000424e-05, 5.482000000000056e-05, 5.523699999999965e-05, 5.53480000000002e-05, 5.513899999999919e-05, 5.506899999999787e-05, 5.5165999999998855e-05, 5.530500000000202e-05, 5.4722000000000104e-05, 5.559700000000098e-05, 5.55549999999988e-05, 5.4930000000001644e-05, 5.509700000000048e-05]</msg>
<status status="PASS" starttime="20201030 18:28:50.349" endtime="20201030 18:28:50.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.344" endtime="20201030 18:28:50.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.356" endtime="20201030 18:28:50.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.354" endtime="20201030 18:28:50.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.353" endtime="20201030 18:28:50.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.995" endtime="20201030 18:28:50.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.994" endtime="20201030 18:28:50.376"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.385" endtime="20201030 18:28:50.404"></status>
</kw>
<msg timestamp="20201030 18:28:50.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.383" endtime="20201030 18:28:50.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.406" endtime="20201030 18:28:50.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.408" endtime="20201030 18:28:50.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.381" endtime="20201030 18:28:50.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.379" endtime="20201030 18:28:50.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.417" endtime="20201030 18:28:50.703"></status>
</kw>
<msg timestamp="20201030 18:28:50.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019574889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.416" endtime="20201030 18:28:50.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019574889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.707" endtime="20201030 18:28:50.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.715" endtime="20201030 18:28:50.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.413" endtime="20201030 18:28:50.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.411" endtime="20201030 18:28:50.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.722" level="INFO">${RESULT} = [{'diff': 5.609699999999801e-05}, {'diff': 5.661099999999808e-05}, {'diff': 5.5957999999998315e-05}, {'diff': 5.588899999999994e-05}, {'diff': 5.591699999999908e-05}, {'diff': 5.593099999999865e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:50.719" endtime="20201030 18:28:50.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.726" level="INFO">${ACCURACY} = {'diff': [5.609699999999801e-05, 5.661099999999808e-05, 5.5957999999998315e-05, 5.588899999999994e-05, 5.591699999999908e-05, 5.593099999999865e-05, 5.5722000000001104e-05, 5.6208000000002034e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 18:28:50.723" endtime="20201030 18:28:50.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.731" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.730" endtime="20201030 18:28:50.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.733" level="INFO">VALUE: [5.609699999999801e-05, 5.661099999999808e-05, 5.5957999999998315e-05, 5.588899999999994e-05, 5.591699999999908e-05, 5.593099999999865e-05, 5.5722000000001104e-05, 5.6208000000002034e-05, 5.611200000000052e-05, 5.616699999999933e-05, 5.6250000000000744e-05, 5.587500000000037e-05, 5.591699999999908e-05, 5.587500000000037e-05, 5.654099999999676e-05, 5.606899999999887e-05, 5.6402000000000535e-05, 5.6499999999997524e-05, 5.6528000000000134e-05, 5.6222000000001604e-05, 5.606899999999887e-05, 5.6305999999999023e-05, 5.5735999999997204e-05, 5.563899999999969e-05, 5.629200000000292e-05, 5.636099999999783e-05, 5.6541999999999704e-05, 5.662499999999765e-05, 5.566699999999883e-05, 5.593100000000212e-05, 5.615299999999976e-05, 5.6402000000000535e-05, 5.6486000000001424e-05, 5.6402000000000535e-05, 5.640300000000001e-05, 5.612500000000062e-05, 5.640300000000001e-05, 5.659699999999851e-05, 5.656899999999937e-05, 5.655600000000274e-05, 5.6207999999998565e-05, 5.61809999999989e-05, 5.655600000000274e-05, 5.611099999999758e-05, 5.6485999999997955e-05, 5.6305999999999023e-05, 5.63610000000013e-05, 5.637500000000087e-05, 5.615299999999976e-05, 5.6541999999999704e-05]</msg>
<status status="PASS" starttime="20201030 18:28:50.732" endtime="20201030 18:28:50.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.727" endtime="20201030 18:28:50.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.738" endtime="20201030 18:28:50.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.737" endtime="20201030 18:28:50.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.736" endtime="20201030 18:28:50.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.377" endtime="20201030 18:28:50.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.377" endtime="20201030 18:28:50.759"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.768" endtime="20201030 18:28:50.788"></status>
</kw>
<msg timestamp="20201030 18:28:50.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.766" endtime="20201030 18:28:50.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.790" endtime="20201030 18:28:50.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.792" endtime="20201030 18:28:50.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.764" endtime="20201030 18:28:50.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.762" endtime="20201030 18:28:50.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.801" endtime="20201030 18:28:51.088"></status>
</kw>
<msg timestamp="20201030 18:28:51.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020612958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02066975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:50.800" endtime="20201030 18:28:51.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020612958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02066975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:51.092" endtime="20201030 18:28:51.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.101" endtime="20201030 18:28:51.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.797" endtime="20201030 18:28:51.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.795" endtime="20201030 18:28:51.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.107" level="INFO">${RESULT} = [{'diff': 5.6791999999999954e-05}, {'diff': 5.7542000000000704e-05}, {'diff': 5.7542000000000704e-05}, {'diff': 5.6805999999999524e-05}, {'diff': 5.693099999999965e-05}, {'diff': 5.7499999999998525e-0...</msg>
<status status="PASS" starttime="20201030 18:28:51.104" endtime="20201030 18:28:51.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.111" level="INFO">${ACCURACY} = {'diff': [5.6791999999999954e-05, 5.7542000000000704e-05, 5.7542000000000704e-05, 5.6805999999999524e-05, 5.693099999999965e-05, 5.7499999999998525e-05, 5.7542000000000704e-05, 5.709699999999901e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:51.108" endtime="20201030 18:28:51.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.116" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.115" endtime="20201030 18:28:51.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.118" level="INFO">VALUE: [5.6791999999999954e-05, 5.7542000000000704e-05, 5.7542000000000704e-05, 5.6805999999999524e-05, 5.693099999999965e-05, 5.7499999999998525e-05, 5.7542000000000704e-05, 5.709699999999901e-05, 5.694500000000269e-05, 5.741700000000058e-05, 5.73749999999984e-05, 5.6750000000001244e-05, 5.7485999999998955e-05, 5.736099999999883e-05, 5.70550000000003e-05, 5.713900000000119e-05, 5.716700000000033e-05, 5.755499999999733e-05, 5.688900000000094e-05, 5.7555999999996804e-05, 5.7499999999998525e-05, 5.733299999999969e-05, 5.709699999999901e-05, 5.6791999999999954e-05, 5.743100000000015e-05, 5.743100000000015e-05, 5.6791999999999954e-05, 5.6764000000000814e-05, 5.723699999999818e-05, 5.712500000000162e-05, 5.741700000000058e-05, 5.6778000000000384e-05, 5.7235999999998705e-05, 5.734699999999926e-05, 5.687500000000137e-05, 5.7180000000000425e-05, 5.7485999999998955e-05, 5.761099999999908e-05, 5.71809999999999e-05, 5.733299999999969e-05, 5.688900000000094e-05, 5.711099999999858e-05, 5.6985999999998455e-05, 5.7236000000002174e-05, 5.761099999999908e-05, 5.743100000000015e-05, 5.723700000000165e-05, 5.747300000000233e-05, 5.713899999999772e-05, 5.686200000000127e-05]</msg>
<status status="PASS" starttime="20201030 18:28:51.117" endtime="20201030 18:28:51.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.112" endtime="20201030 18:28:51.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.124" endtime="20201030 18:28:51.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.123" endtime="20201030 18:28:51.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.122" endtime="20201030 18:28:51.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.760" endtime="20201030 18:28:51.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.760" endtime="20201030 18:28:51.145"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.153" endtime="20201030 18:28:51.172"></status>
</kw>
<msg timestamp="20201030 18:28:51.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.152" endtime="20201030 18:28:51.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.174" endtime="20201030 18:28:51.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.176" endtime="20201030 18:28:51.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.149" endtime="20201030 18:28:51.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.147" endtime="20201030 18:28:51.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.185" endtime="20201030 18:28:51.471"></status>
</kw>
<msg timestamp="20201030 18:28:51.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.184" endtime="20201030 18:28:51.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.475" endtime="20201030 18:28:51.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.484" endtime="20201030 18:28:51.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.181" endtime="20201030 18:28:51.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.180" endtime="20201030 18:28:51.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.490" level="INFO">${RESULT} = [{'diff': 5.8222000000000135e-05}, {'diff': 5.781899999999715e-05}, {'diff': 5.76810000000004e-05}, {'diff': 5.7778000000001384e-05}, {'diff': 5.7971999999999885e-05}, {'diff': 5.8485999999999955e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:51.487" endtime="20201030 18:28:51.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.498" level="INFO">${ACCURACY} = {'diff': [5.8222000000000135e-05, 5.781899999999715e-05, 5.76810000000004e-05, 5.7778000000001384e-05, 5.7971999999999885e-05, 5.8485999999999955e-05, 5.8056000000000774e-05, 5.7805999999997054e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:28:51.491" endtime="20201030 18:28:51.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.502" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.501" endtime="20201030 18:28:51.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.505" level="INFO">VALUE: [5.8222000000000135e-05, 5.781899999999715e-05, 5.76810000000004e-05, 5.7778000000001384e-05, 5.7971999999999885e-05, 5.8485999999999955e-05, 5.8056000000000774e-05, 5.7805999999997054e-05, 5.8306000000001024e-05, 5.80550000000013e-05, 5.788899999999847e-05, 5.836099999999983e-05, 5.786099999999933e-05, 5.8070000000000344e-05, 5.776299999999887e-05, 5.830500000000155e-05, 5.7915999999998136e-05, 5.861100000000008e-05, 5.811099999999958e-05, 5.787500000000237e-05, 5.8556000000001274e-05, 5.8306000000001024e-05, 5.8236000000003174e-05, 5.83610000000033e-05, 5.7721999999999635e-05, 5.8306000000001024e-05, 5.791700000000108e-05, 5.793100000000065e-05, 5.7944000000000745e-05, 5.793100000000065e-05, 5.831900000000112e-05, 5.804100000000173e-05, 5.7763999999998344e-05, 5.7999999999999025e-05, 5.8278000000001884e-05, 5.7916000000001605e-05, 5.8541999999998234e-05, 5.859700000000051e-05, 5.861100000000008e-05, 5.8499999999999525e-05, 5.7777999999997914e-05, 5.786099999999933e-05, 5.772299999999911e-05, 5.815300000000176e-05, 5.811099999999958e-05, 5.81810000000009e-05, 5.797299999999936e-05, 5.791700000000108e-05, 5.8208000000000565e-05, 5.858300000000094e-05]</msg>
<status status="PASS" starttime="20201030 18:28:51.504" endtime="20201030 18:28:51.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.499" endtime="20201030 18:28:51.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.510" endtime="20201030 18:28:51.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.508" endtime="20201030 18:28:51.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.507" endtime="20201030 18:28:51.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.146" endtime="20201030 18:28:51.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.145" endtime="20201030 18:28:51.531"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.539" endtime="20201030 18:28:51.559"></status>
</kw>
<msg timestamp="20201030 18:28:51.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.538" endtime="20201030 18:28:51.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.560" endtime="20201030 18:28:51.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.563" endtime="20201030 18:28:51.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.535" endtime="20201030 18:28:51.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.533" endtime="20201030 18:28:51.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.572" endtime="20201030 18:28:51.858"></status>
</kw>
<msg timestamp="20201030 18:28:51.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.570" endtime="20201030 18:28:51.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.862" endtime="20201030 18:28:51.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.871" endtime="20201030 18:28:51.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.568" endtime="20201030 18:28:51.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.566" endtime="20201030 18:28:51.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.877" level="INFO">${RESULT} = [{'diff': 5.9319999999998124e-05}, {'diff': 5.872300000000011e-05}, {'diff': 5.941699999999911e-05}, {'diff': 5.884700000000076e-05}, {'diff': 5.9083999999997444e-05}, {'diff': 5.9277999999999414e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:51.874" endtime="20201030 18:28:51.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.881" level="INFO">${ACCURACY} = {'diff': [5.9319999999998124e-05, 5.872300000000011e-05, 5.941699999999911e-05, 5.884700000000076e-05, 5.9083999999997444e-05, 5.9277999999999414e-05, 5.8679999999998456e-05, 5.9652000000000316e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:28:51.878" endtime="20201030 18:28:51.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.886" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.885" endtime="20201030 18:28:51.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.888" level="INFO">VALUE: [5.9319999999998124e-05, 5.872300000000011e-05, 5.941699999999911e-05, 5.884700000000076e-05, 5.9083999999997444e-05, 5.9277999999999414e-05, 5.8679999999998456e-05, 5.9652000000000316e-05, 5.8777999999998914e-05, 5.879100000000248e-05, 5.891699999999861e-05, 5.8943999999998276e-05, 5.8736000000000205e-05, 5.9236000000000705e-05, 5.8791999999998484e-05, 5.916699999999886e-05, 5.8763999999999345e-05, 5.9306000000002024e-05, 5.9070000000001344e-05, 5.9388000000000496e-05, 5.9056000000001774e-05, 5.9138000000000246e-05, 5.9429999999999206e-05, 5.891700000000208e-05, 5.9513999999996625e-05, 5.909699999999754e-05, 5.9055999999998304e-05, 5.9472000000001385e-05, 5.954099999999976e-05, 5.8749999999999775e-05, 5.893100000000165e-05, 5.9180000000002425e-05, 5.941700000000258e-05, 5.8763999999999345e-05, 5.913899999999972e-05, 5.941699999999911e-05, 5.869500000000097e-05, 5.872300000000011e-05, 5.962500000000065e-05, 5.943099999999868e-05, 5.887500000000337e-05, 5.895899999999732e-05, 5.955499999999933e-05, 5.8944000000001745e-05, 5.90550000000023e-05, 5.8736000000000205e-05, 5.906900000000187e-05, 5.8986000000000455e-05, 5.888899999999947e-05, 5.936099999999736e-05]</msg>
<status status="PASS" starttime="20201030 18:28:51.887" endtime="20201030 18:28:51.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.882" endtime="20201030 18:28:51.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.898" endtime="20201030 18:28:51.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.897" endtime="20201030 18:28:51.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.895" endtime="20201030 18:28:51.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.532" endtime="20201030 18:28:51.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.531" endtime="20201030 18:28:51.919"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.928" endtime="20201030 18:28:51.948"></status>
</kw>
<msg timestamp="20201030 18:28:51.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.926" endtime="20201030 18:28:51.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.950" endtime="20201030 18:28:51.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.953" endtime="20201030 18:28:51.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.923" endtime="20201030 18:28:51.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.921" endtime="20201030 18:28:51.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.962" endtime="20201030 18:28:52.248"></status>
</kw>
<msg timestamp="20201030 18:28:52.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020582417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020641986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.960" endtime="20201030 18:28:52.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020582417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020641986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.252" endtime="20201030 18:28:52.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.260" endtime="20201030 18:28:52.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.958" endtime="20201030 18:28:52.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.956" endtime="20201030 18:28:52.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.267" level="INFO">${RESULT} = [{'diff': 5.956900000000237e-05}, {'diff': 6.0486000000001955e-05}, {'diff': 5.979100000000001e-05}, {'diff': 6.03750000000014e-05}, {'diff': 5.981900000000262e-05}, {'diff': 6.0499999999998055e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:52.264" endtime="20201030 18:28:52.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.271" level="INFO">${ACCURACY} = {'diff': [5.956900000000237e-05, 6.0486000000001955e-05, 5.979100000000001e-05, 6.03750000000014e-05, 5.981900000000262e-05, 6.0499999999998055e-05, 5.988900000000047e-05, 6.0250000000001275e-05, 6.01...</msg>
<status status="PASS" starttime="20201030 18:28:52.268" endtime="20201030 18:28:52.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.275" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:28:52.274" endtime="20201030 18:28:52.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.278" level="INFO">VALUE: [5.956900000000237e-05, 6.0486000000001955e-05, 5.979100000000001e-05, 6.03750000000014e-05, 5.981900000000262e-05, 6.0499999999998055e-05, 5.988900000000047e-05, 6.0250000000001275e-05, 6.016699999999986e-05, 6.0291999999999984e-05, 6.031899999999965e-05, 5.9915999999996666e-05, 6.0514000000001095e-05, 6.0305999999999554e-05, 5.973700000000068e-05, 6.016699999999986e-05, 6.0666000000000886e-05, 5.979100000000001e-05, 5.981900000000262e-05, 5.988900000000047e-05, 6.059699999999904e-05, 6.0166000000000386e-05, 6.030499999999661e-05, 6.009700000000201e-05, 5.98750000000009e-05, 6.0500000000001525e-05, 5.9764000000000345e-05, 6.012500000000115e-05, 5.96949999999985e-05, 6.0514000000001095e-05, 5.965299999999979e-05, 5.96949999999985e-05, 6.047299999999839e-05, 6.022300000000161e-05, 5.972300000000111e-05, 6.0000000000001025e-05, 5.9764000000000345e-05, 5.9722000000001635e-05, 5.990300000000004e-05, 6.052700000000119e-05, 5.988900000000047e-05, 6.0542000000000235e-05, 6.0207999999999096e-05, 5.9777999999999915e-05, 5.963900000000022e-05, 6.020899999999857e-05, 5.984699999999829e-05, 6.002700000000069e-05, 6.0235999999998235e-05, 6.0305999999999554e-05]</msg>
<status status="PASS" starttime="20201030 18:28:52.276" endtime="20201030 18:28:52.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.272" endtime="20201030 18:28:52.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.284" endtime="20201030 18:28:52.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.282" endtime="20201030 18:28:52.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.281" endtime="20201030 18:28:52.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.920" endtime="20201030 18:28:52.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.919" endtime="20201030 18:28:52.305"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.313" endtime="20201030 18:28:52.333"></status>
</kw>
<msg timestamp="20201030 18:28:52.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.312" endtime="20201030 18:28:52.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.335" endtime="20201030 18:28:52.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.337" endtime="20201030 18:28:52.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.309" endtime="20201030 18:28:52.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.307" endtime="20201030 18:28:52.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.346" endtime="20201030 18:28:52.631"></status>
</kw>
<msg timestamp="20201030 18:28:52.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.345" endtime="20201030 18:28:52.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.635" endtime="20201030 18:28:52.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.644" endtime="20201030 18:28:52.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.342" endtime="20201030 18:28:52.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.340" endtime="20201030 18:28:52.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.650" level="INFO">${RESULT} = [{'diff': 6.087499999999843e-05}, {'diff': 6.112499999999868e-05}, {'diff': 6.161099999999961e-05}, {'diff': 6.14300000000012e-05}, {'diff': 6.108299999999997e-05}, {'diff': 6.079099999999754e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:52.647" endtime="20201030 18:28:52.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.655" level="INFO">${ACCURACY} = {'diff': [6.087499999999843e-05, 6.112499999999868e-05, 6.161099999999961e-05, 6.14300000000012e-05, 6.108299999999997e-05, 6.079099999999754e-05, 6.126399999999838e-05, 6.154200000000123e-05, 6.13050...</msg>
<status status="PASS" starttime="20201030 18:28:52.651" endtime="20201030 18:28:52.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.660" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:28:52.659" endtime="20201030 18:28:52.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.662" level="INFO">VALUE: [6.087499999999843e-05, 6.112499999999868e-05, 6.161099999999961e-05, 6.14300000000012e-05, 6.108299999999997e-05, 6.079099999999754e-05, 6.126399999999838e-05, 6.154200000000123e-05, 6.130500000000108e-05, 6.130600000000055e-05, 6.093100000000018e-05, 6.149999999999906e-05, 6.108300000000344e-05, 6.091699999999714e-05, 6.12499999999988e-05, 6.137499999999893e-05, 6.158399999999994e-05, 6.0902000000001566e-05, 6.148600000000295e-05, 6.111200000000205e-05, 6.104099999999779e-05, 6.105499999999736e-05, 6.152699999999872e-05, 6.079100000000101e-05, 6.066700000000036e-05, 6.108299999999997e-05, 6.136199999999883e-05, 6.083299999999972e-05, 6.126399999999838e-05, 6.068099999999993e-05, 6.154199999999777e-05, 6.12499999999988e-05, 6.141700000000111e-05, 6.10560000000003e-05, 6.127800000000141e-05, 6.149999999999906e-05, 6.143100000000068e-05, 6.118100000000043e-05, 6.105500000000083e-05, 6.120899999999957e-05, 6.149999999999906e-05, 6.1013999999998125e-05, 6.136100000000283e-05, 6.116600000000139e-05, 6.12499999999988e-05, 6.116599999999792e-05, 6.136199999999883e-05, 6.147199999999992e-05, 6.154199999999777e-05, 6.0819999999999624e-05]</msg>
<status status="PASS" starttime="20201030 18:28:52.661" endtime="20201030 18:28:52.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.656" endtime="20201030 18:28:52.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.667" endtime="20201030 18:28:52.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.666" endtime="20201030 18:28:52.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.665" endtime="20201030 18:28:52.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.305" endtime="20201030 18:28:52.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.305" endtime="20201030 18:28:52.688"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.697" endtime="20201030 18:28:52.716"></status>
</kw>
<msg timestamp="20201030 18:28:52.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.695" endtime="20201030 18:28:52.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.717" endtime="20201030 18:28:52.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.720" endtime="20201030 18:28:52.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.693" endtime="20201030 18:28:52.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.691" endtime="20201030 18:28:52.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.729" endtime="20201030 18:28:53.016"></status>
</kw>
<msg timestamp="20201030 18:28:53.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01966775, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:28:52.727" endtime="20201030 18:28:53.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01966775, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:28:53.021" endtime="20201030 18:28:53.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.029" endtime="20201030 18:28:53.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.725" endtime="20201030 18:28:53.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.723" endtime="20201030 18:28:53.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.036" level="INFO">${RESULT} = [{'diff': 6.175000000000277e-05}, {'diff': 6.250000000000006e-05}, {'diff': 6.219499999999753e-05}, {'diff': 6.234700000000079e-05}, {'diff': 6.22499999999998e-05}, {'diff': 6.254200000000223e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:53.032" endtime="20201030 18:28:53.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:53.040" level="INFO">${ACCURACY} = {'diff': [6.175000000000277e-05, 6.250000000000006e-05, 6.219499999999753e-05, 6.234700000000079e-05, 6.22499999999998e-05, 6.254200000000223e-05, 6.247300000000039e-05, 6.236199999999983e-05, 6.24869...</msg>
<status status="PASS" starttime="20201030 18:28:53.037" endtime="20201030 18:28:53.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.044" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:28:53.043" endtime="20201030 18:28:53.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.047" level="INFO">VALUE: [6.175000000000277e-05, 6.250000000000006e-05, 6.219499999999753e-05, 6.234700000000079e-05, 6.22499999999998e-05, 6.254200000000223e-05, 6.247300000000039e-05, 6.236199999999983e-05, 6.248699999999996e-05, 6.198599999999999e-05, 6.24300000000022e-05, 6.173599999999974e-05, 6.256899999999843e-05, 6.234699999999732e-05, 6.195800000000085e-05, 6.173599999999974e-05, 6.205499999999836e-05, 6.198599999999999e-05, 6.230599999999809e-05, 6.195800000000085e-05, 6.251399999999963e-05, 6.162500000000265e-05, 6.188900000000247e-05, 6.186099999999986e-05, 6.22499999999998e-05, 6.259800000000051e-05, 6.177699999999897e-05, 6.204099999999879e-05, 6.22499999999998e-05, 6.230500000000208e-05, 6.237499999999993e-05, 6.201399999999913e-05, 6.255499999999886e-05, 6.248600000000049e-05, 6.190299999999857e-05, 6.237499999999993e-05, 6.187499999999943e-05, 6.238900000000297e-05, 6.222200000000067e-05, 6.180600000000105e-05, 6.259799999999704e-05, 6.190299999999857e-05, 6.231899999999818e-05, 6.229199999999852e-05, 6.215300000000229e-05, 6.181900000000115e-05, 6.211100000000011e-05, 6.215299999999882e-05, 6.250000000000006e-05, 6.172200000000017e-05]</msg>
<status status="PASS" starttime="20201030 18:28:53.045" endtime="20201030 18:28:53.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.041" endtime="20201030 18:28:53.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.052" endtime="20201030 18:28:53.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.050" endtime="20201030 18:28:53.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.049" endtime="20201030 18:28:53.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.689" endtime="20201030 18:28:53.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.689" endtime="20201030 18:28:53.072"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.081" endtime="20201030 18:28:53.101"></status>
</kw>
<msg timestamp="20201030 18:28:53.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.080" endtime="20201030 18:28:53.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.103" endtime="20201030 18:28:53.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.105" endtime="20201030 18:28:53.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.077" endtime="20201030 18:28:53.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.075" endtime="20201030 18:28:53.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.114" endtime="20201030 18:28:53.400"></status>
</kw>
<msg timestamp="20201030 18:28:53.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020566542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.113" endtime="20201030 18:28:53.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020566542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.404" endtime="20201030 18:28:53.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.413" endtime="20201030 18:28:53.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.110" endtime="20201030 18:28:53.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.108" endtime="20201030 18:28:53.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.419" level="INFO">${RESULT} = [{'diff': 6.277699999999997e-05}, {'diff': 6.334699999999832e-05}, {'diff': 6.300000000000056e-05}, {'diff': 6.304200000000273e-05}, {'diff': 6.354100000000029e-05}, {'diff': 6.299999999999709e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:53.416" endtime="20201030 18:28:53.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:53.423" level="INFO">${ACCURACY} = {'diff': [6.277699999999997e-05, 6.334699999999832e-05, 6.300000000000056e-05, 6.304200000000273e-05, 6.354100000000029e-05, 6.299999999999709e-05, 6.361099999999814e-05, 6.323600000000124e-05, 6.2972...</msg>
<status status="PASS" starttime="20201030 18:28:53.420" endtime="20201030 18:28:53.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.428" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:28:53.427" endtime="20201030 18:28:53.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.430" level="INFO">VALUE: [6.277699999999997e-05, 6.334699999999832e-05, 6.300000000000056e-05, 6.304200000000273e-05, 6.354100000000029e-05, 6.299999999999709e-05, 6.361099999999814e-05, 6.323600000000124e-05, 6.297200000000142e-05, 6.276399999999988e-05, 6.29020000000001e-05, 6.277699999999997e-05, 6.334699999999832e-05, 6.336100000000136e-05, 6.337500000000093e-05, 6.329100000000004e-05, 6.323600000000124e-05, 6.316599999999992e-05, 6.336100000000136e-05, 6.301400000000013e-05, 6.352700000000072e-05, 6.337500000000093e-05, 6.286100000000086e-05, 6.27500000000003e-05, 6.315299999999982e-05, 6.329200000000298e-05, 6.279200000000248e-05, 6.305599999999884e-05, 6.312499999999721e-05, 6.347200000000192e-05, 6.300000000000056e-05, 6.362499999999771e-05, 6.347300000000139e-05, 6.329199999999952e-05, 6.334699999999832e-05, 6.292999999999924e-05, 6.320799999999863e-05, 6.317999999999949e-05, 6.343099999999921e-05, 6.297199999999795e-05, 6.343099999999921e-05, 6.338899999999703e-05, 6.272300000000064e-05, 6.287500000000043e-05, 6.330599999999909e-05, 6.347199999999845e-05, 6.279199999999902e-05, 6.32500000000008e-05, 6.344499999999878e-05, 6.32500000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:28:53.429" endtime="20201030 18:28:53.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.424" endtime="20201030 18:28:53.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.436" endtime="20201030 18:28:53.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.435" endtime="20201030 18:28:53.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.434" endtime="20201030 18:28:53.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.073" endtime="20201030 18:28:53.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.073" endtime="20201030 18:28:53.457"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.466" endtime="20201030 18:28:53.485"></status>
</kw>
<msg timestamp="20201030 18:28:53.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.464" endtime="20201030 18:28:53.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.487" endtime="20201030 18:28:53.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.489" endtime="20201030 18:28:53.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.462" endtime="20201030 18:28:53.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.460" endtime="20201030 18:28:53.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.498" endtime="20201030 18:28:53.786"></status>
</kw>
<msg timestamp="20201030 18:28:53.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019591819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019656431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.497" endtime="20201030 18:28:53.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019591819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019656431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.790" endtime="20201030 18:28:53.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.798" endtime="20201030 18:28:53.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.494" endtime="20201030 18:28:53.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.492" endtime="20201030 18:28:53.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.805" level="INFO">${RESULT} = [{'diff': 6.461199999999861e-05}, {'diff': 6.412499999999821e-05}, {'diff': 6.419400000000006e-05}, {'diff': 6.379099999999707e-05}, {'diff': 6.39439999999998e-05}, {'diff': 6.430500000000061e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:53.801" endtime="20201030 18:28:53.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:53.810" level="INFO">${ACCURACY} = {'diff': [6.461199999999861e-05, 6.412499999999821e-05, 6.419400000000006e-05, 6.379099999999707e-05, 6.39439999999998e-05, 6.430500000000061e-05, 6.427800000000095e-05, 6.405500000000036e-05, 6.43749...</msg>
<status status="PASS" starttime="20201030 18:28:53.806" endtime="20201030 18:28:53.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.814" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:28:53.813" endtime="20201030 18:28:53.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.817" level="INFO">VALUE: [6.461199999999861e-05, 6.412499999999821e-05, 6.419400000000006e-05, 6.379099999999707e-05, 6.39439999999998e-05, 6.430500000000061e-05, 6.427800000000095e-05, 6.405500000000036e-05, 6.437499999999846e-05, 6.398600000000199e-05, 6.373600000000174e-05, 6.42219999999992e-05, 6.370900000000207e-05, 6.441700000000064e-05, 6.436100000000236e-05, 6.387499999999796e-05, 6.42639999999979e-05, 6.416700000000039e-05, 6.423600000000224e-05, 6.424999999999834e-05, 6.430500000000061e-05, 6.429100000000104e-05, 6.39439999999998e-05, 6.406899999999993e-05, 6.384699999999882e-05, 6.412500000000168e-05, 6.462499999999871e-05, 6.429199999999705e-05, 6.405599999999984e-05, 6.393099999999971e-05, 6.418099999999996e-05, 6.415300000000082e-05, 6.369499999999903e-05, 6.404200000000027e-05, 6.437500000000193e-05, 6.419400000000006e-05, 6.384699999999882e-05, 6.441700000000064e-05, 6.404200000000027e-05, 6.420799999999963e-05, 6.416600000000092e-05, 6.419400000000006e-05, 6.429099999999757e-05, 6.461099999999914e-05, 6.427799999999748e-05, 6.465300000000132e-05, 6.437499999999846e-05, 6.426400000000138e-05, 6.373600000000174e-05, 6.412499999999821e-05]</msg>
<status status="PASS" starttime="20201030 18:28:53.815" endtime="20201030 18:28:53.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.811" endtime="20201030 18:28:53.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.822" endtime="20201030 18:28:53.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.820" endtime="20201030 18:28:53.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.819" endtime="20201030 18:28:53.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.458" endtime="20201030 18:28:53.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.457" endtime="20201030 18:28:53.842"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.851" endtime="20201030 18:28:53.871"></status>
</kw>
<msg timestamp="20201030 18:28:53.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.850" endtime="20201030 18:28:53.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.872" endtime="20201030 18:28:53.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.875" endtime="20201030 18:28:53.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.847" endtime="20201030 18:28:53.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.845" endtime="20201030 18:28:53.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.884" endtime="20201030 18:28:54.175"></status>
</kw>
<msg timestamp="20201030 18:28:54.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.882" endtime="20201030 18:28:54.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.179" endtime="20201030 18:28:54.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.188" endtime="20201030 18:28:54.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.880" endtime="20201030 18:28:54.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.878" endtime="20201030 18:28:54.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.194" level="INFO">${RESULT} = [{'diff': 6.476400000000188e-05}, {'diff': 6.554200000000177e-05}, {'diff': 6.466599999999795e-05}, {'diff': 6.533299999999728e-05}, {'diff': 6.504100000000179e-05}, {'diff': 6.468000000000099e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:54.191" endtime="20201030 18:28:54.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:54.198" level="INFO">${ACCURACY} = {'diff': [6.476400000000188e-05, 6.554200000000177e-05, 6.466599999999795e-05, 6.533299999999728e-05, 6.504100000000179e-05, 6.468000000000099e-05, 6.487499999999896e-05, 6.524999999999934e-05, 6.5360...</msg>
<status status="PASS" starttime="20201030 18:28:54.195" endtime="20201030 18:28:54.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.203" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:28:54.202" endtime="20201030 18:28:54.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.205" level="INFO">VALUE: [6.476400000000188e-05, 6.554200000000177e-05, 6.466599999999795e-05, 6.533299999999728e-05, 6.504100000000179e-05, 6.468000000000099e-05, 6.487499999999896e-05, 6.524999999999934e-05, 6.536099999999989e-05, 6.493099999999724e-05, 6.53479999999998e-05, 6.530600000000109e-05, 6.548600000000002e-05, 6.474999999999884e-05, 6.516700000000139e-05, 6.548699999999949e-05, 6.509799999999955e-05, 6.505500000000136e-05, 6.555499999999839e-05, 6.472200000000317e-05, 6.484699999999982e-05, 6.474999999999884e-05, 6.491600000000167e-05, 6.473599999999927e-05, 6.517999999999802e-05, 6.488899999999853e-05, 6.562499999999971e-05, 6.494500000000028e-05, 6.52220000000002e-05, 6.527799999999848e-05, 6.55419999999983e-05, 6.502799999999823e-05, 6.561100000000014e-05, 6.548699999999949e-05, 6.524999999999934e-05, 6.479200000000102e-05, 6.498600000000299e-05, 6.523599999999977e-05, 6.552799999999873e-05, 6.47219999999997e-05, 6.548600000000002e-05, 6.543000000000174e-05, 6.562499999999971e-05, 6.543000000000174e-05, 6.516699999999792e-05, 6.483399999999973e-05, 6.473600000000274e-05, 6.466700000000089e-05, 6.483399999999973e-05, 6.499999999999909e-05]</msg>
<status status="PASS" starttime="20201030 18:28:54.204" endtime="20201030 18:28:54.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.199" endtime="20201030 18:28:54.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.210" endtime="20201030 18:28:54.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.209" endtime="20201030 18:28:54.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.208" endtime="20201030 18:28:54.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.843" endtime="20201030 18:28:54.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.843" endtime="20201030 18:28:54.231"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.240" endtime="20201030 18:28:54.262"></status>
</kw>
<msg timestamp="20201030 18:28:54.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.238" endtime="20201030 18:28:54.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.265" endtime="20201030 18:28:54.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.271" endtime="20201030 18:28:54.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.235" endtime="20201030 18:28:54.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.233" endtime="20201030 18:28:54.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.289" endtime="20201030 18:28:54.582"></status>
</kw>
<msg timestamp="20201030 18:28:54.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.286" endtime="20201030 18:28:54.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.586" endtime="20201030 18:28:54.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.594" endtime="20201030 18:28:54.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.281" endtime="20201030 18:28:54.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.277" endtime="20201030 18:28:54.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.601" level="INFO">${RESULT} = [{'diff': 6.598699999999999e-05}, {'diff': 6.593100000000171e-05}, {'diff': 6.566699999999842e-05}, {'diff': 6.64159999999997e-05}, {'diff': 6.668000000000299e-05}, {'diff': 6.604200000000227e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:54.598" endtime="20201030 18:28:54.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:54.605" level="INFO">${ACCURACY} = {'diff': [6.598699999999999e-05, 6.593100000000171e-05, 6.566699999999842e-05, 6.64159999999997e-05, 6.668000000000299e-05, 6.604200000000227e-05, 6.569399999999809e-05, 6.573600000000027e-05, 6.64159...</msg>
<status status="PASS" starttime="20201030 18:28:54.602" endtime="20201030 18:28:54.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.609" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:28:54.608" endtime="20201030 18:28:54.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.612" level="INFO">VALUE: [6.598699999999999e-05, 6.593100000000171e-05, 6.566699999999842e-05, 6.64159999999997e-05, 6.668000000000299e-05, 6.604200000000227e-05, 6.569399999999809e-05, 6.573600000000027e-05, 6.64159999999997e-05, 6.645799999999841e-05, 6.62220000000012e-05, 6.609700000000107e-05, 6.656899999999896e-05, 6.583299999999778e-05, 6.644499999999831e-05, 6.659800000000105e-05, 6.580600000000159e-05, 6.643099999999874e-05, 6.662499999999724e-05, 6.611100000000064e-05, 6.568099999999799e-05, 6.569400000000156e-05, 6.627799999999948e-05, 6.606899999999846e-05, 6.648600000000102e-05, 6.645800000000188e-05, 6.661100000000114e-05, 6.586100000000039e-05, 6.601399999999966e-05, 6.634700000000132e-05, 6.644499999999831e-05, 6.597200000000095e-05, 6.65419999999993e-05, 6.593099999999824e-05, 6.618099999999849e-05, 6.62359999999973e-05, 6.602799999999923e-05, 6.583300000000125e-05, 6.586100000000039e-05, 6.618000000000249e-05, 6.64159999999997e-05, 6.569400000000156e-05, 6.611100000000064e-05, 6.620800000000163e-05, 6.577800000000245e-05, 6.648600000000102e-05, 6.615299999999935e-05, 6.620800000000163e-05, 6.632000000000166e-05, 6.652799999999973e-05]</msg>
<status status="PASS" starttime="20201030 18:28:54.610" endtime="20201030 18:28:54.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.606" endtime="20201030 18:28:54.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.619" endtime="20201030 18:28:54.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.616" endtime="20201030 18:28:54.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.615" endtime="20201030 18:28:54.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.232" endtime="20201030 18:28:54.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.231" endtime="20201030 18:28:54.639"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.648" endtime="20201030 18:28:54.667"></status>
</kw>
<msg timestamp="20201030 18:28:54.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.646" endtime="20201030 18:28:54.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.669" endtime="20201030 18:28:54.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.671" endtime="20201030 18:28:54.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.644" endtime="20201030 18:28:54.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.642" endtime="20201030 18:28:54.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.680" endtime="20201030 18:28:54.966"></status>
</kw>
<msg timestamp="20201030 18:28:54.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019414028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.679" endtime="20201030 18:28:54.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019414028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.970" endtime="20201030 18:28:54.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.978" endtime="20201030 18:28:54.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.676" endtime="20201030 18:28:54.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.674" endtime="20201030 18:28:54.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.985" level="INFO">${RESULT} = [{'diff': 6.700000000000109e-05}, {'diff': 6.675000000000084e-05}, {'diff': 6.743099999999974e-05}, {'diff': 6.698699999999752e-05}, {'diff': 6.667999999999952e-05}, {'diff': 6.736099999999842e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:54.981" endtime="20201030 18:28:54.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:54.993" level="INFO">${ACCURACY} = {'diff': [6.700000000000109e-05, 6.675000000000084e-05, 6.743099999999974e-05, 6.698699999999752e-05, 6.667999999999952e-05, 6.736099999999842e-05, 6.754100000000082e-05, 6.680499999999964e-05, 6.7471...</msg>
<status status="PASS" starttime="20201030 18:28:54.986" endtime="20201030 18:28:54.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.998" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:28:54.996" endtime="20201030 18:28:54.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.000" level="INFO">VALUE: [6.700000000000109e-05, 6.675000000000084e-05, 6.743099999999974e-05, 6.698699999999752e-05, 6.667999999999952e-05, 6.736099999999842e-05, 6.754100000000082e-05, 6.680499999999964e-05, 6.747199999999898e-05, 6.754100000000082e-05, 6.716699999999992e-05, 6.729200000000005e-05, 6.698599999999805e-05, 6.67220000000017e-05, 6.686099999999792e-05, 6.673600000000127e-05, 6.662500000000071e-05, 6.670899999999813e-05, 6.750000000000159e-05, 6.712499999999774e-05, 6.694400000000281e-05, 6.706899999999946e-05, 6.675000000000084e-05, 6.743000000000027e-05, 6.744399999999984e-05, 6.762499999999824e-05, 6.686100000000139e-05, 6.736099999999842e-05, 6.706999999999894e-05, 6.687499999999749e-05, 6.701400000000066e-05, 6.679199999999955e-05, 6.67640000000004e-05, 6.668099999999899e-05, 6.72090000000021e-05, 6.73619999999979e-05, 6.725000000000134e-05, 6.705499999999989e-05, 6.680499999999964e-05, 6.743000000000027e-05, 6.748599999999855e-05, 6.733299999999928e-05, 6.744399999999984e-05, 6.745799999999941e-05, 6.750000000000159e-05, 6.697200000000195e-05, 6.722199999999873e-05, 6.725000000000134e-05, 6.72220000000022e-05, 6.705599999999937e-05]</msg>
<status status="PASS" starttime="20201030 18:28:54.999" endtime="20201030 18:28:55.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.994" endtime="20201030 18:28:55.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.005" endtime="20201030 18:28:55.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.004" endtime="20201030 18:28:55.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.003" endtime="20201030 18:28:55.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.640" endtime="20201030 18:28:55.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.640" endtime="20201030 18:28:55.026"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.035" endtime="20201030 18:28:55.054"></status>
</kw>
<msg timestamp="20201030 18:28:55.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.033" endtime="20201030 18:28:55.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.055" endtime="20201030 18:28:55.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.058" endtime="20201030 18:28:55.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.030" endtime="20201030 18:28:55.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.028" endtime="20201030 18:28:55.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.067" endtime="20201030 18:28:55.354"></status>
</kw>
<msg timestamp="20201030 18:28:55.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019617389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019685611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.065" endtime="20201030 18:28:55.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019617389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019685611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.358" endtime="20201030 18:28:55.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.366" endtime="20201030 18:28:55.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.063" endtime="20201030 18:28:55.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.061" endtime="20201030 18:28:55.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:55.373" level="INFO">${RESULT} = [{'diff': 6.822199999999973e-05}, {'diff': 6.804100000000132e-05}, {'diff': 6.848599999999955e-05}, {'diff': 6.84030000000016e-05}, {'diff': 6.798599999999905e-05}, {'diff': 6.833300000000028e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:55.370" endtime="20201030 18:28:55.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:55.378" level="INFO">${ACCURACY} = {'diff': [6.822199999999973e-05, 6.804100000000132e-05, 6.848599999999955e-05, 6.84030000000016e-05, 6.798599999999905e-05, 6.833300000000028e-05, 6.781999999999969e-05, 6.836100000000289e-05, 6.79030...</msg>
<status status="PASS" starttime="20201030 18:28:55.374" endtime="20201030 18:28:55.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.382" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:28:55.381" endtime="20201030 18:28:55.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.385" level="INFO">VALUE: [6.822199999999973e-05, 6.804100000000132e-05, 6.848599999999955e-05, 6.84030000000016e-05, 6.798599999999905e-05, 6.833300000000028e-05, 6.781999999999969e-05, 6.836100000000289e-05, 6.79030000000011e-05, 6.855600000000087e-05, 6.865199999999891e-05, 6.845899999999988e-05, 6.836099999999942e-05, 6.822199999999973e-05, 6.823600000000277e-05, 6.855499999999792e-05, 6.801400000000166e-05, 6.784699999999935e-05, 6.80969999999996e-05, 6.815299999999788e-05, 6.788899999999806e-05, 6.784699999999935e-05, 6.830600000000062e-05, 6.77640000000014e-05, 6.819500000000006e-05, 6.852800000000173e-05, 6.8584e-05, 6.80420000000008e-05, 6.77640000000014e-05, 6.77909999999976e-05, 6.831900000000071e-05, 6.811100000000264e-05, 6.855499999999792e-05, 6.799999999999862e-05, 6.836099999999942e-05, 6.822199999999973e-05, 6.779200000000055e-05, 6.811099999999917e-05, 6.80839999999995e-05, 6.812499999999874e-05, 6.858300000000053e-05, 6.787499999999849e-05, 6.8584e-05, 6.800000000000209e-05, 6.806900000000046e-05, 6.786099999999892e-05, 6.804100000000132e-05, 6.830500000000114e-05, 6.818000000000102e-05, 6.834699999999985e-05]</msg>
<status status="PASS" starttime="20201030 18:28:55.383" endtime="20201030 18:28:55.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.379" endtime="20201030 18:28:55.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.390" endtime="20201030 18:28:55.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.388" endtime="20201030 18:28:55.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.387" endtime="20201030 18:28:55.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.027" endtime="20201030 18:28:55.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.026" endtime="20201030 18:28:55.411"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.420" endtime="20201030 18:28:55.440"></status>
</kw>
<msg timestamp="20201030 18:28:55.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.418" endtime="20201030 18:28:55.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.442" endtime="20201030 18:28:55.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.444" endtime="20201030 18:28:55.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.415" endtime="20201030 18:28:55.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.413" endtime="20201030 18:28:55.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.454" endtime="20201030 18:28:55.740"></status>
</kw>
<msg timestamp="20201030 18:28:55.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021046889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021116208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.452" endtime="20201030 18:28:55.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021046889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021116208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.745" endtime="20201030 18:28:55.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.753" endtime="20201030 18:28:55.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.450" endtime="20201030 18:28:55.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.448" endtime="20201030 18:28:55.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:55.760" level="INFO">${RESULT} = [{'diff': 6.931900000000171e-05}, {'diff': 6.962500000000024e-05}, {'diff': 6.96109999999972e-05}, {'diff': 6.899999999999962e-05}, {'diff': 6.95559999999984e-05}, {'diff': 6.951399999999969e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:55.757" endtime="20201030 18:28:55.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:55.764" level="INFO">${ACCURACY} = {'diff': [6.931900000000171e-05, 6.962500000000024e-05, 6.96109999999972e-05, 6.899999999999962e-05, 6.95559999999984e-05, 6.951399999999969e-05, 6.90420000000018e-05, 6.943100000000174e-05, 6.8888999...</msg>
<status status="PASS" starttime="20201030 18:28:55.761" endtime="20201030 18:28:55.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.769" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:28:55.768" endtime="20201030 18:28:55.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.775" level="INFO">VALUE: [6.931900000000171e-05, 6.962500000000024e-05, 6.96109999999972e-05, 6.899999999999962e-05, 6.95559999999984e-05, 6.951399999999969e-05, 6.90420000000018e-05, 6.943100000000174e-05, 6.888899999999906e-05, 6.933400000000076e-05, 6.969400000000209e-05, 6.936099999999695e-05, 6.901399999999919e-05, 6.897299999999995e-05, 6.898600000000005e-05, 6.92360000000003e-05, 6.863899999999881e-05, 6.884700000000035e-05, 6.92360000000003e-05, 6.890299999999863e-05, 6.90559999999979e-05, 6.884700000000035e-05, 6.922200000000073e-05, 6.937499999999999e-05, 6.930599999999815e-05, 6.95559999999984e-05, 6.963899999999981e-05, 6.954099999999935e-05, 6.955499999999892e-05, 6.947300000000045e-05, 6.94299999999988e-05, 6.92909999999991e-05, 6.87770000000025e-05, 6.922199999999726e-05, 6.948599999999708e-05, 6.904199999999833e-05, 6.943100000000174e-05, 6.96109999999972e-05, 6.874999999999937e-05, 6.952799999999926e-05, 6.895900000000038e-05, 6.926399999999944e-05, 6.911100000000017e-05, 6.952799999999926e-05, 6.911100000000017e-05, 6.874999999999937e-05, 6.955500000000239e-05, 6.880500000000164e-05, 6.884700000000035e-05, 6.92909999999991e-05]</msg>
<status status="PASS" starttime="20201030 18:28:55.771" endtime="20201030 18:28:55.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.765" endtime="20201030 18:28:55.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.787" endtime="20201030 18:28:55.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.784" endtime="20201030 18:28:55.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.781" endtime="20201030 18:28:55.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.412" endtime="20201030 18:28:55.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.411" endtime="20201030 18:28:55.813"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.832" endtime="20201030 18:28:55.857"></status>
</kw>
<msg timestamp="20201030 18:28:55.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.828" endtime="20201030 18:28:55.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.861" endtime="20201030 18:28:55.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.866" endtime="20201030 18:28:55.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.823" endtime="20201030 18:28:55.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.818" endtime="20201030 18:28:55.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.878" endtime="20201030 18:28:56.163"></status>
</kw>
<msg timestamp="20201030 18:28:56.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035499181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035569389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.876" endtime="20201030 18:28:56.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035499181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035569389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.168" endtime="20201030 18:28:56.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.176" endtime="20201030 18:28:56.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.873" endtime="20201030 18:28:56.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.872" endtime="20201030 18:28:56.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.183" level="INFO">${RESULT} = [{'diff': 7.020800000000216e-05}, {'diff': 7.013900000000378e-05}, {'diff': 7.001400000000019e-05}, {'diff': 6.975000000000037e-05}, {'diff': 7.048599999999461e-05}, {'diff': 7.001400000000019e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:56.180" endtime="20201030 18:28:56.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.188" level="INFO">${ACCURACY} = {'diff': [7.020800000000216e-05, 7.013900000000378e-05, 7.001400000000019e-05, 6.975000000000037e-05, 7.048599999999461e-05, 7.001400000000019e-05, 7.004199999999933e-05, 6.97360000000008e-05, 7.02090...</msg>
<status status="PASS" starttime="20201030 18:28:56.184" endtime="20201030 18:28:56.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.193" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.192" endtime="20201030 18:28:56.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.195" level="INFO">VALUE: [7.020800000000216e-05, 7.013900000000378e-05, 7.001400000000019e-05, 6.975000000000037e-05, 7.048599999999461e-05, 7.001400000000019e-05, 7.004199999999933e-05, 6.97360000000008e-05, 7.020900000000163e-05, 6.986200000000387e-05, 7.04439999999959e-05, 6.967999999999558e-05, 7.004099999999985e-05, 6.988900000000353e-05, 7.04439999999959e-05, 6.966600000000295e-05, 6.987499999999702e-05, 7.05689999999995e-05, 7.00559999999989e-05, 7.00559999999989e-05, 7.01109999999977e-05, 6.968100000000199e-05, 6.977799999999951e-05, 7.018100000000249e-05, 7.008399999999804e-05, 6.979199999999908e-05, 7.032000000000566e-05, 7.012499999999727e-05, 6.981899999999874e-05, 7.048600000000155e-05, 7.037499999999752e-05, 7.047200000000198e-05, 6.987499999999702e-05, 7.059699999999863e-05, 7.062499999999777e-05, 7.006999999999847e-05, 7.044500000000231e-05, 7.018099999999555e-05, 7.019499999999512e-05, 7.037499999999752e-05, 7.018100000000249e-05, 7.051300000000121e-05, 7.018100000000249e-05, 6.997299999999401e-05, 6.976399999999994e-05, 7.041599999999676e-05, 7.005499999999942e-05, 7.025000000000087e-05, 7.048600000000155e-05, 6.99309999999953e-05]</msg>
<status status="PASS" starttime="20201030 18:28:56.194" endtime="20201030 18:28:56.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.189" endtime="20201030 18:28:56.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.201" endtime="20201030 18:28:56.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.199" endtime="20201030 18:28:56.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.198" endtime="20201030 18:28:56.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.814" endtime="20201030 18:28:56.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.813" endtime="20201030 18:28:56.221"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.230" endtime="20201030 18:28:56.251"></status>
</kw>
<msg timestamp="20201030 18:28:56.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.229" endtime="20201030 18:28:56.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.252" endtime="20201030 18:28:56.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.255" endtime="20201030 18:28:56.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.226" endtime="20201030 18:28:56.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.224" endtime="20201030 18:28:56.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.264" endtime="20201030 18:28:56.551"></status>
</kw>
<msg timestamp="20201030 18:28:56.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020082806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020154431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.263" endtime="20201030 18:28:56.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020082806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020154431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.555" endtime="20201030 18:28:56.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.564" endtime="20201030 18:28:56.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.260" endtime="20201030 18:28:56.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.258" endtime="20201030 18:28:56.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.571" level="INFO">${RESULT} = [{'diff': 7.162499999999877e-05}, {'diff': 7.15560000000004e-05}, {'diff': 7.163899999999834e-05}, {'diff': 7.083299999999931e-05}, {'diff': 7.147199999999951e-05}, {'diff': 7.165299999999791e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:56.568" endtime="20201030 18:28:56.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.575" level="INFO">${ACCURACY} = {'diff': [7.162499999999877e-05, 7.15560000000004e-05, 7.163899999999834e-05, 7.083299999999931e-05, 7.147199999999951e-05, 7.165299999999791e-05, 7.14170000000007e-05, 7.10559999999999e-05, 7.0735999...</msg>
<status status="PASS" starttime="20201030 18:28:56.572" endtime="20201030 18:28:56.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.580" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.579" endtime="20201030 18:28:56.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.582" level="INFO">VALUE: [7.162499999999877e-05, 7.15560000000004e-05, 7.163899999999834e-05, 7.083299999999931e-05, 7.147199999999951e-05, 7.165299999999791e-05, 7.14170000000007e-05, 7.10559999999999e-05, 7.073599999999833e-05, 7.080599999999965e-05, 7.134700000000285e-05, 7.154099999999788e-05, 7.083400000000226e-05, 7.131999999999972e-05, 7.087499999999802e-05, 7.097300000000195e-05, 7.1069e-05, 7.07360000000018e-05, 7.076399999999747e-05, 7.168100000000052e-05, 7.069399999999962e-05, 7.134699999999938e-05, 7.095799999999944e-05, 7.129200000000058e-05, 7.105500000000042e-05, 7.090300000000063e-05, 7.127800000000101e-05, 7.116700000000045e-05, 7.087500000000149e-05, 7.068099999999952e-05, 7.079200000000008e-05, 7.079199999999661e-05, 7.116600000000098e-05, 7.1069e-05, 7.144400000000037e-05, 7.108299999999956e-05, 7.06109999999982e-05, 7.118100000000002e-05, 7.068000000000005e-05, 7.102800000000076e-05, 7.116700000000045e-05, 7.127800000000101e-05, 7.066699999999995e-05, 7.084699999999888e-05, 7.100000000000162e-05, 7.148599999999908e-05, 7.119400000000012e-05, 7.080599999999965e-05, 7.161100000000267e-05, 7.144400000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:28:56.581" endtime="20201030 18:28:56.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.576" endtime="20201030 18:28:56.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.588" endtime="20201030 18:28:56.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.586" endtime="20201030 18:28:56.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.585" endtime="20201030 18:28:56.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.222" endtime="20201030 18:28:56.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.222" endtime="20201030 18:28:56.608"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.617" endtime="20201030 18:28:56.639"></status>
</kw>
<msg timestamp="20201030 18:28:56.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.616" endtime="20201030 18:28:56.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.640" endtime="20201030 18:28:56.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.643" endtime="20201030 18:28:56.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.613" endtime="20201030 18:28:56.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.611" endtime="20201030 18:28:56.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.652" endtime="20201030 18:28:56.939"></status>
</kw>
<msg timestamp="20201030 18:28:56.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021121944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.651" endtime="20201030 18:28:56.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021121944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.943" endtime="20201030 18:28:56.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.952" endtime="20201030 18:28:56.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.648" endtime="20201030 18:28:56.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.646" endtime="20201030 18:28:56.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.959" level="INFO">${RESULT} = [{'diff': 7.195800000000044e-05}, {'diff': 7.166600000000148e-05}, {'diff': 7.258300000000106e-05}, {'diff': 7.17910000000016e-05}, {'diff': 7.248600000000008e-05}, {'diff': 7.192999999999783e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:56.955" endtime="20201030 18:28:56.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.963" level="INFO">${ACCURACY} = {'diff': [7.195800000000044e-05, 7.166600000000148e-05, 7.258300000000106e-05, 7.17910000000016e-05, 7.248600000000008e-05, 7.192999999999783e-05, 7.220800000000069e-05, 7.170899999999966e-05, 7.18609...</msg>
<status status="PASS" starttime="20201030 18:28:56.960" endtime="20201030 18:28:56.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.967" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.966" endtime="20201030 18:28:56.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.970" level="INFO">VALUE: [7.195800000000044e-05, 7.166600000000148e-05, 7.258300000000106e-05, 7.17910000000016e-05, 7.248600000000008e-05, 7.192999999999783e-05, 7.220800000000069e-05, 7.170899999999966e-05, 7.186099999999945e-05, 7.238899999999909e-05, 7.232000000000072e-05, 7.227799999999854e-05, 7.220900000000016e-05, 7.212499999999927e-05, 7.197200000000001e-05, 7.26110000000002e-05, 7.226399999999897e-05, 7.216700000000145e-05, 7.262499999999977e-05, 7.220800000000069e-05, 7.169400000000062e-05, 7.265300000000238e-05, 7.237499999999952e-05, 7.259699999999716e-05, 7.194500000000034e-05, 7.198599999999958e-05, 7.184699999999988e-05, 7.219500000000059e-05, 7.230600000000115e-05, 7.229200000000158e-05, 7.245900000000041e-05, 7.186099999999945e-05, 7.204100000000185e-05, 7.17360000000028e-05, 7.172199999999976e-05, 7.186099999999945e-05, 7.252799999999879e-05, 7.199999999999915e-05, 7.212499999999927e-05, 7.199999999999915e-05, 7.168100000000052e-05, 7.230600000000115e-05, 7.215300000000188e-05, 7.198599999999958e-05, 7.254199999999836e-05, 7.169500000000009e-05, 7.199999999999915e-05, 7.241599999999876e-05, 7.249999999999965e-05, 7.236099999999995e-05]</msg>
<status status="PASS" starttime="20201030 18:28:56.969" endtime="20201030 18:28:56.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.964" endtime="20201030 18:28:56.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.982" endtime="20201030 18:28:57.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.980" endtime="20201030 18:28:57.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.979" endtime="20201030 18:28:57.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.609" endtime="20201030 18:28:57.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.609" endtime="20201030 18:28:57.003"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.012" endtime="20201030 18:28:57.032"></status>
</kw>
<msg timestamp="20201030 18:28:57.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.010" endtime="20201030 18:28:57.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.033" endtime="20201030 18:28:57.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.036" endtime="20201030 18:28:57.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.007" endtime="20201030 18:28:57.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.005" endtime="20201030 18:28:57.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.046" endtime="20201030 18:28:57.332"></status>
</kw>
<msg timestamp="20201030 18:28:57.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020506931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.044" endtime="20201030 18:28:57.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020506931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.337" endtime="20201030 18:28:57.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.345" endtime="20201030 18:28:57.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.041" endtime="20201030 18:28:57.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.039" endtime="20201030 18:28:57.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:57.352" level="INFO">${RESULT} = [{'diff': 7.322300000000073e-05}, {'diff': 7.286100000000045e-05}, {'diff': 7.31110000000007e-05}, {'diff': 7.347200000000151e-05}, {'diff': 7.268000000000205e-05}, {'diff': 7.309700000000113e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:57.349" endtime="20201030 18:28:57.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:57.357" level="INFO">${ACCURACY} = {'diff': [7.322300000000073e-05, 7.286100000000045e-05, 7.31110000000007e-05, 7.347200000000151e-05, 7.268000000000205e-05, 7.309700000000113e-05, 7.354199999999936e-05, 7.323600000000083e-05, 7.32919...</msg>
<status status="PASS" starttime="20201030 18:28:57.353" endtime="20201030 18:28:57.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.362" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:28:57.361" endtime="20201030 18:28:57.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.364" level="INFO">VALUE: [7.322300000000073e-05, 7.286100000000045e-05, 7.31110000000007e-05, 7.347200000000151e-05, 7.268000000000205e-05, 7.309700000000113e-05, 7.354199999999936e-05, 7.323600000000083e-05, 7.329199999999911e-05, 7.268099999999805e-05, 7.277799999999904e-05, 7.276400000000294e-05, 7.27499999999999e-05, 7.329199999999911e-05, 7.304200000000233e-05, 7.291699999999873e-05, 7.280599999999818e-05, 7.31110000000007e-05, 7.279099999999913e-05, 7.361099999999773e-05, 7.348600000000108e-05, 7.345799999999847e-05, 7.329199999999911e-05, 7.316699999999898e-05, 7.336100000000095e-05, 7.279199999999861e-05, 7.34309999999988e-05, 7.298600000000058e-05, 7.29170000000022e-05, 7.286099999999698e-05, 7.351300000000074e-05, 7.273600000000033e-05, 7.354099999999988e-05, 7.323600000000083e-05, 7.342999999999933e-05, 7.301399999999972e-05, 7.350000000000065e-05, 7.27499999999999e-05, 7.291699999999873e-05, 7.338900000000009e-05, 7.270900000000066e-05, 7.327700000000006e-05, 7.329200000000258e-05, 7.361099999999773e-05, 7.270799999999772e-05, 7.268100000000152e-05, 7.345900000000141e-05, 7.31249999999968e-05, 7.355499999999945e-05, 7.286100000000045e-05]</msg>
<status status="PASS" starttime="20201030 18:28:57.363" endtime="20201030 18:28:57.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.358" endtime="20201030 18:28:57.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:57.370" endtime="20201030 18:28:57.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.368" endtime="20201030 18:28:57.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.367" endtime="20201030 18:28:57.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.004" endtime="20201030 18:28:57.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.003" endtime="20201030 18:28:57.390"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.399" endtime="20201030 18:28:57.419"></status>
</kw>
<msg timestamp="20201030 18:28:57.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.398" endtime="20201030 18:28:57.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.421" endtime="20201030 18:28:57.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.424" endtime="20201030 18:28:57.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.395" endtime="20201030 18:28:57.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.393" endtime="20201030 18:28:57.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.433" endtime="20201030 18:28:57.720"></status>
</kw>
<msg timestamp="20201030 18:28:57.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020120778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020195375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.431" endtime="20201030 18:28:57.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020120778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020195375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.725" endtime="20201030 18:28:57.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.733" endtime="20201030 18:28:57.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.429" endtime="20201030 18:28:57.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.427" endtime="20201030 18:28:57.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:57.740" level="INFO">${RESULT} = [{'diff': 7.459700000000263e-05}, {'diff': 7.365299999999991e-05}, {'diff': 7.444499999999937e-05}, {'diff': 7.41110000000017e-05}, {'diff': 7.400000000000115e-05}, {'diff': 7.461200000000168e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:57.737" endtime="20201030 18:28:57.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:57.744" level="INFO">${ACCURACY} = {'diff': [7.459700000000263e-05, 7.365299999999991e-05, 7.444499999999937e-05, 7.41110000000017e-05, 7.400000000000115e-05, 7.461200000000168e-05, 7.384699999999841e-05, 7.39309999999993e-05, 7.456900...</msg>
<status status="PASS" starttime="20201030 18:28:57.741" endtime="20201030 18:28:57.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.749" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:28:57.748" endtime="20201030 18:28:57.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.752" level="INFO">VALUE: [7.459700000000263e-05, 7.365299999999991e-05, 7.444499999999937e-05, 7.41110000000017e-05, 7.400000000000115e-05, 7.461200000000168e-05, 7.384699999999841e-05, 7.39309999999993e-05, 7.456900000000002e-05, 7.437500000000152e-05, 7.441600000000076e-05, 7.366600000000001e-05, 7.384699999999841e-05, 7.46249999999983e-05, 7.384699999999841e-05, 7.468100000000005e-05, 7.423600000000183e-05, 7.419500000000259e-05, 7.459699999999916e-05, 7.44309999999998e-05, 7.383400000000179e-05, 7.41249999999978e-05, 7.429199999999664e-05, 7.423699999999783e-05, 7.456900000000002e-05, 7.366600000000001e-05, 7.384699999999841e-05, 7.373599999999786e-05, 7.401399999999725e-05, 7.415299999999694e-05, 7.400000000000115e-05, 7.466700000000048e-05, 7.376400000000047e-05, 7.441700000000023e-05, 7.419499999999912e-05, 7.436100000000195e-05, 7.40829999999991e-05, 7.391699999999973e-05, 7.418000000000008e-05, 7.391699999999973e-05, 7.44309999999998e-05, 7.447199999999904e-05, 7.46110000000022e-05, 7.402800000000029e-05, 7.43050000000002e-05, 7.373599999999786e-05, 7.388900000000059e-05, 7.452800000000079e-05, 7.373600000000133e-05, 7.391699999999973e-05]</msg>
<status status="PASS" starttime="20201030 18:28:57.750" endtime="20201030 18:28:57.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.745" endtime="20201030 18:28:57.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:57.757" endtime="20201030 18:28:57.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.755" endtime="20201030 18:28:57.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.754" endtime="20201030 18:28:57.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.391" endtime="20201030 18:28:57.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.391" endtime="20201030 18:28:57.777"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.786" endtime="20201030 18:28:57.807"></status>
</kw>
<msg timestamp="20201030 18:28:57.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.785" endtime="20201030 18:28:57.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.809" endtime="20201030 18:28:57.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.812" endtime="20201030 18:28:57.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.782" endtime="20201030 18:28:57.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.780" endtime="20201030 18:28:57.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.821" endtime="20201030 18:28:58.107"></status>
</kw>
<msg timestamp="20201030 18:28:58.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021038903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021114208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.819" endtime="20201030 18:28:58.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021038903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021114208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.112" endtime="20201030 18:28:58.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.120" endtime="20201030 18:28:58.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.817" endtime="20201030 18:28:58.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.815" endtime="20201030 18:28:58.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.127" level="INFO">${RESULT} = [{'diff': 7.530499999999773e-05}, {'diff': 7.542999999999786e-05}, {'diff': 7.56249999999993e-05}, {'diff': 7.544500000000037e-05}, {'diff': 7.533300000000034e-05}, {'diff': 7.519500000000012e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:58.124" endtime="20201030 18:28:58.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:58.131" level="INFO">${ACCURACY} = {'diff': [7.530499999999773e-05, 7.542999999999786e-05, 7.56249999999993e-05, 7.544500000000037e-05, 7.533300000000034e-05, 7.519500000000012e-05, 7.531999999999678e-05, 7.536099999999948e-05, 7.55559...</msg>
<status status="PASS" starttime="20201030 18:28:58.128" endtime="20201030 18:28:58.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.136" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:28:58.135" endtime="20201030 18:28:58.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.139" level="INFO">VALUE: [7.530499999999773e-05, 7.542999999999786e-05, 7.56249999999993e-05, 7.544500000000037e-05, 7.533300000000034e-05, 7.519500000000012e-05, 7.531999999999678e-05, 7.536099999999948e-05, 7.555599999999746e-05, 7.555599999999746e-05, 7.498599999999911e-05, 7.554200000000136e-05, 7.484700000000288e-05, 7.544399999999743e-05, 7.519400000000065e-05, 7.495799999999997e-05, 7.491600000000126e-05, 7.505499999999748e-05, 7.541599999999829e-05, 7.536099999999948e-05, 7.555600000000093e-05, 7.474999999999843e-05, 7.497199999999954e-05, 7.518099999999708e-05, 7.48050000000007e-05, 7.530600000000068e-05, 7.473699999999833e-05, 7.516699999999751e-05, 7.519399999999718e-05, 7.506900000000052e-05, 7.524999999999893e-05, 7.552699999999885e-05, 7.52639999999985e-05, 7.468000000000058e-05, 7.554199999999789e-05, 7.51110000000027e-05, 7.476400000000147e-05, 7.524999999999893e-05, 7.548599999999961e-05, 7.49310000000003e-05, 7.481999999999975e-05, 7.520899999999969e-05, 7.55830000000006e-05, 7.495899999999944e-05, 7.491599999999779e-05, 7.500000000000215e-05, 7.549999999999918e-05, 7.505499999999748e-05, 7.549999999999918e-05, 7.56249999999993e-05]</msg>
<status status="PASS" starttime="20201030 18:28:58.137" endtime="20201030 18:28:58.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.132" endtime="20201030 18:28:58.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.145" endtime="20201030 18:28:58.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.143" endtime="20201030 18:28:58.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.142" endtime="20201030 18:28:58.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.778" endtime="20201030 18:28:58.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.778" endtime="20201030 18:28:58.165"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.176" endtime="20201030 18:28:58.196"></status>
</kw>
<msg timestamp="20201030 18:28:58.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.173" endtime="20201030 18:28:58.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.198" endtime="20201030 18:28:58.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.201" endtime="20201030 18:28:58.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.170" endtime="20201030 18:28:58.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.168" endtime="20201030 18:28:58.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.210" endtime="20201030 18:28:58.497"></status>
</kw>
<msg timestamp="20201030 18:28:58.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.208" endtime="20201030 18:28:58.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.502" endtime="20201030 18:28:58.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.510" endtime="20201030 18:28:58.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.206" endtime="20201030 18:28:58.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.204" endtime="20201030 18:28:58.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.517" level="INFO">${RESULT} = [{'diff': 7.634799999999692e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.591700000000173e-05}, {'diff': 7.631900000000177e-05}, {'diff': 7.597300000000001e-05}, {'diff': 7.623600000000036e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:58.514" endtime="20201030 18:28:58.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:58.525" level="INFO">${ACCURACY} = {'diff': [7.634799999999692e-05, 7.599999999999968e-05, 7.591700000000173e-05, 7.631900000000177e-05, 7.597300000000001e-05, 7.623600000000036e-05, 7.586099999999998e-05, 7.623600000000036e-05, 7.6540...</msg>
<status status="PASS" starttime="20201030 18:28:58.518" endtime="20201030 18:28:58.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.529" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:28:58.528" endtime="20201030 18:28:58.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.532" level="INFO">VALUE: [7.634799999999692e-05, 7.599999999999968e-05, 7.591700000000173e-05, 7.631900000000177e-05, 7.597300000000001e-05, 7.623600000000036e-05, 7.586099999999998e-05, 7.623600000000036e-05, 7.654099999999942e-05, 7.63050000000022e-05, 7.590300000000216e-05, 7.650000000000018e-05, 7.647199999999757e-05, 7.595800000000097e-05, 7.650000000000018e-05, 7.640199999999972e-05, 7.611100000000023e-05, 7.655600000000193e-05, 7.6070000000001e-05, 7.615299999999894e-05, 7.651399999999975e-05, 7.61249999999998e-05, 7.573599999999986e-05, 7.605500000000195e-05, 7.611100000000023e-05, 7.656899999999855e-05, 7.582000000000075e-05, 7.650000000000018e-05, 7.63189999999983e-05, 7.630599999999821e-05, 7.616699999999851e-05, 7.659800000000064e-05, 7.619500000000112e-05, 7.568100000000105e-05, 7.656899999999855e-05, 7.636100000000048e-05, 7.565200000000244e-05, 7.629100000000263e-05, 7.566600000000201e-05, 7.605500000000195e-05, 7.602799999999882e-05, 7.656899999999855e-05, 7.611100000000023e-05, 7.624999999999993e-05, 7.586099999999998e-05, 7.637500000000005e-05, 7.59310000000013e-05, 7.572299999999976e-05, 7.577799999999857e-05, 7.623699999999983e-05]</msg>
<status status="PASS" starttime="20201030 18:28:58.531" endtime="20201030 18:28:58.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.526" endtime="20201030 18:28:58.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.537" endtime="20201030 18:28:58.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.535" endtime="20201030 18:28:58.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.534" endtime="20201030 18:28:58.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.166" endtime="20201030 18:28:58.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.166" endtime="20201030 18:28:58.558"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.567" endtime="20201030 18:28:58.587"></status>
</kw>
<msg timestamp="20201030 18:28:58.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.565" endtime="20201030 18:28:58.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.588" endtime="20201030 18:28:58.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.591" endtime="20201030 18:28:58.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.563" endtime="20201030 18:28:58.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.560" endtime="20201030 18:28:58.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.600" endtime="20201030 18:28:58.889"></status>
</kw>
<msg timestamp="20201030 18:28:58.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.599" endtime="20201030 18:28:58.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.893" endtime="20201030 18:28:58.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.902" endtime="20201030 18:28:58.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.596" endtime="20201030 18:28:58.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.594" endtime="20201030 18:28:58.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.909" level="INFO">${RESULT} = [{'diff': 7.704199999999939e-05}, {'diff': 7.722199999999832e-05}, {'diff': 7.705499999999949e-05}, {'diff': 7.736100000000148e-05}, {'diff': 7.719399999999918e-05}, {'diff': 7.691599999999979e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:58.905" endtime="20201030 18:28:58.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:58.913" level="INFO">${ACCURACY} = {'diff': [7.704199999999939e-05, 7.722199999999832e-05, 7.705499999999949e-05, 7.736100000000148e-05, 7.719399999999918e-05, 7.691599999999979e-05, 7.694399999999893e-05, 7.748600000000161e-05, 7.7291...</msg>
<status status="PASS" starttime="20201030 18:28:58.910" endtime="20201030 18:28:58.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.918" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:28:58.917" endtime="20201030 18:28:58.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.920" level="INFO">VALUE: [7.704199999999939e-05, 7.722199999999832e-05, 7.705499999999949e-05, 7.736100000000148e-05, 7.719399999999918e-05, 7.691599999999979e-05, 7.694399999999893e-05, 7.748600000000161e-05, 7.729199999999964e-05, 7.686099999999751e-05, 7.711100000000123e-05, 7.752800000000032e-05, 7.70969999999982e-05, 7.761100000000173e-05, 7.736099999999801e-05, 7.725000000000093e-05, 7.701400000000025e-05, 7.752800000000032e-05, 7.680499999999923e-05, 7.717999999999961e-05, 7.679099999999967e-05, 7.749999999999771e-05, 7.668000000000258e-05, 7.670800000000172e-05, 7.745800000000247e-05, 7.698600000000111e-05, 7.736099999999801e-05, 7.711100000000123e-05, 7.705599999999896e-05, 7.680600000000218e-05, 7.69310000000023e-05, 7.706999999999853e-05, 7.723600000000136e-05, 7.6764e-05, 7.680499999999923e-05, 7.747200000000204e-05, 7.754100000000042e-05, 7.748599999999814e-05, 7.702799999999982e-05, 7.666699999999901e-05, 7.679099999999967e-05, 7.698599999999764e-05, 7.686100000000098e-05, 7.752800000000032e-05, 7.716699999999951e-05, 7.736200000000096e-05, 7.744399999999943e-05, 7.736099999999801e-05, 7.679100000000313e-05, 7.742999999999986e-05]</msg>
<status status="PASS" starttime="20201030 18:28:58.919" endtime="20201030 18:28:58.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.914" endtime="20201030 18:28:58.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.925" endtime="20201030 18:28:58.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.924" endtime="20201030 18:28:58.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.923" endtime="20201030 18:28:58.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.559" endtime="20201030 18:28:58.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.558" endtime="20201030 18:28:58.946"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.955" endtime="20201030 18:28:58.976"></status>
</kw>
<msg timestamp="20201030 18:28:58.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.953" endtime="20201030 18:28:58.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.977" endtime="20201030 18:28:58.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.980" endtime="20201030 18:28:58.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.951" endtime="20201030 18:28:58.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.949" endtime="20201030 18:28:58.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.989" endtime="20201030 18:28:59.275"></status>
</kw>
<msg timestamp="20201030 18:28:59.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020891, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020968722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:58.988" endtime="20201030 18:28:59.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020891, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020968722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:59.279" endtime="20201030 18:28:59.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.287" endtime="20201030 18:28:59.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.985" endtime="20201030 18:28:59.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.983" endtime="20201030 18:28:59.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:59.294" level="INFO">${RESULT} = [{'diff': 7.772199999999882e-05}, {'diff': 7.813900000000137e-05}, {'diff': 7.81250000000018e-05}, {'diff': 7.857000000000003e-05}, {'diff': 7.779200000000014e-05}, {'diff': 7.775000000000143e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:59.291" endtime="20201030 18:28:59.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:59.299" level="INFO">${ACCURACY} = {'diff': [7.772199999999882e-05, 7.813900000000137e-05, 7.81250000000018e-05, 7.857000000000003e-05, 7.779200000000014e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.830600000000021e-05, 7.78609...</msg>
<status status="PASS" starttime="20201030 18:28:59.295" endtime="20201030 18:28:59.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.303" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:28:59.302" endtime="20201030 18:28:59.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.306" level="INFO">VALUE: [7.772199999999882e-05, 7.813900000000137e-05, 7.81250000000018e-05, 7.857000000000003e-05, 7.779200000000014e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.830600000000021e-05, 7.786099999999851e-05, 7.849999999999871e-05, 7.855600000000046e-05, 7.861200000000221e-05, 7.811099999999876e-05, 7.849999999999871e-05, 7.847199999999957e-05, 7.815300000000094e-05, 7.793000000000036e-05, 7.773599999999839e-05, 7.806900000000006e-05, 7.819499999999965e-05, 7.829200000000064e-05, 7.811099999999876e-05, 7.845899999999947e-05, 7.830600000000021e-05, 7.777800000000057e-05, 7.848700000000208e-05, 7.8458e-05, 7.859799999999917e-05, 7.7764000000001e-05, 7.844400000000043e-05, 7.830500000000074e-05, 7.829200000000064e-05, 7.786099999999851e-05, 7.765299999999697e-05, 7.820899999999922e-05, 7.804200000000039e-05, 7.836099999999901e-05, 7.774999999999796e-05, 7.768099999999958e-05, 7.781999999999928e-05, 7.837499999999858e-05, 7.843000000000086e-05, 7.804099999999745e-05, 7.836099999999901e-05, 7.823599999999889e-05, 7.793000000000036e-05, 7.798599999999864e-05, 7.779199999999667e-05, 7.818100000000008e-05, 7.811100000000223e-05]</msg>
<status status="PASS" starttime="20201030 18:28:59.304" endtime="20201030 18:28:59.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.300" endtime="20201030 18:28:59.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.312" endtime="20201030 18:28:59.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.310" endtime="20201030 18:28:59.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.309" endtime="20201030 18:28:59.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.947" endtime="20201030 18:28:59.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.946" endtime="20201030 18:28:59.333"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.342" endtime="20201030 18:28:59.361"></status>
</kw>
<msg timestamp="20201030 18:28:59.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.340" endtime="20201030 18:28:59.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.363" endtime="20201030 18:28:59.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.365" endtime="20201030 18:28:59.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.337" endtime="20201030 18:28:59.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.335" endtime="20201030 18:28:59.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.375" endtime="20201030 18:28:59.661"></status>
</kw>
<msg timestamp="20201030 18:28:59.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019924458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.373" endtime="20201030 18:28:59.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019924458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.665" endtime="20201030 18:28:59.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.674" endtime="20201030 18:28:59.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.370" endtime="20201030 18:28:59.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.368" endtime="20201030 18:28:59.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:59.680" level="INFO">${RESULT} = [{'diff': 7.932000000000078e-05}, {'diff': 7.943100000000133e-05}, {'diff': 7.876299999999906e-05}, {'diff': 7.947300000000004e-05}, {'diff': 7.942999999999839e-05}, {'diff': 7.923599999999989e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:59.677" endtime="20201030 18:28:59.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:59.686" level="INFO">${ACCURACY} = {'diff': [7.932000000000078e-05, 7.943100000000133e-05, 7.876299999999906e-05, 7.947300000000004e-05, 7.942999999999839e-05, 7.923599999999989e-05, 7.955499999999852e-05, 7.897200000000007e-05, 7.8778...</msg>
<status status="PASS" starttime="20201030 18:28:59.681" endtime="20201030 18:28:59.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.690" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:28:59.689" endtime="20201030 18:28:59.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.693" level="INFO">VALUE: [7.932000000000078e-05, 7.943100000000133e-05, 7.876299999999906e-05, 7.947300000000004e-05, 7.942999999999839e-05, 7.923599999999989e-05, 7.955499999999852e-05, 7.897200000000007e-05, 7.877800000000157e-05, 7.924999999999946e-05, 7.884699999999994e-05, 7.884699999999994e-05, 7.869500000000015e-05, 7.877800000000157e-05, 7.905600000000096e-05, 7.913900000000237e-05, 7.916699999999804e-05, 7.924999999999946e-05, 7.894400000000093e-05, 7.962499999999983e-05, 7.875000000000243e-05, 7.917999999999814e-05, 7.962499999999983e-05, 7.937499999999958e-05, 7.9458000000001e-05, 7.911099999999976e-05, 7.880600000000071e-05, 7.891700000000126e-05, 7.899999999999921e-05, 7.954199999999842e-05, 7.898599999999964e-05, 7.888899999999865e-05, 7.868000000000111e-05, 7.904099999999845e-05, 7.899999999999921e-05, 7.927699999999913e-05, 7.92779999999986e-05, 7.91389999999989e-05, 7.954200000000189e-05, 7.869400000000068e-05, 7.948600000000014e-05, 7.962499999999983e-05, 7.874999999999896e-05, 7.894400000000093e-05, 7.936100000000001e-05, 7.918100000000108e-05, 7.888899999999865e-05, 7.930499999999827e-05, 7.941599999999882e-05, 7.867999999999764e-05]</msg>
<status status="PASS" starttime="20201030 18:28:59.691" endtime="20201030 18:28:59.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.686" endtime="20201030 18:28:59.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.698" endtime="20201030 18:28:59.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.696" endtime="20201030 18:28:59.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.695" endtime="20201030 18:28:59.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.333" endtime="20201030 18:28:59.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.333" endtime="20201030 18:28:59.719"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.728" endtime="20201030 18:28:59.748"></status>
</kw>
<msg timestamp="20201030 18:28:59.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.726" endtime="20201030 18:28:59.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.749" endtime="20201030 18:28:59.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.752" endtime="20201030 18:28:59.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.723" endtime="20201030 18:28:59.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.721" endtime="20201030 18:28:59.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.761" endtime="20201030 18:29:00.048"></status>
</kw>
<msg timestamp="20201030 18:29:00.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020058625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.760" endtime="20201030 18:29:00.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020058625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.052" endtime="20201030 18:29:00.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.061" endtime="20201030 18:29:00.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.757" endtime="20201030 18:29:00.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.755" endtime="20201030 18:29:00.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:00.068" level="INFO">${RESULT} = [{'diff': 8.05970000000017e-05}, {'diff': 8.020800000000175e-05}, {'diff': 8.034700000000145e-05}, {'diff': 8.038899999999669e-05}, {'diff': 7.972200000000082e-05}, {'diff': 8.001399999999978e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:00.065" endtime="20201030 18:29:00.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:00.073" level="INFO">${ACCURACY} = {'diff': [8.05970000000017e-05, 8.020800000000175e-05, 8.034700000000145e-05, 8.038899999999669e-05, 7.972200000000082e-05, 8.001399999999978e-05, 8.000000000000021e-05, 8.006900000000206e-05, 8.01529...</msg>
<status status="PASS" starttime="20201030 18:29:00.070" endtime="20201030 18:29:00.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.077" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:29:00.076" endtime="20201030 18:29:00.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.080" level="INFO">VALUE: [8.05970000000017e-05, 8.020800000000175e-05, 8.034700000000145e-05, 8.038899999999669e-05, 7.972200000000082e-05, 8.001399999999978e-05, 8.000000000000021e-05, 8.006900000000206e-05, 8.015299999999947e-05, 8.002699999999988e-05, 8.055499999999952e-05, 7.986099999999705e-05, 7.973599999999692e-05, 8.006899999999859e-05, 7.977800000000257e-05, 7.991700000000226e-05, 8.050000000000071e-05, 7.993099999999836e-05, 8.016699999999904e-05, 8.048700000000061e-05, 8.047300000000104e-05, 8.06659999999966e-05, 8.016699999999904e-05, 7.966599999999907e-05, 8.011100000000076e-05, 8.054099999999995e-05, 8.031899999999884e-05, 8.055500000000299e-05, 7.992999999999889e-05, 8.018099999999861e-05, 7.972200000000082e-05, 7.966700000000201e-05, 8.037500000000058e-05, 7.980600000000171e-05, 8.036099999999755e-05, 8.037500000000058e-05, 7.990299999999922e-05, 8.02779999999996e-05, 8.025000000000046e-05, 7.98190000000018e-05, 7.972200000000082e-05, 7.992999999999889e-05, 8.02779999999996e-05, 7.973600000000039e-05, 7.994400000000193e-05, 8.036100000000101e-05, 8.048599999999767e-05, 8.047200000000157e-05, 7.983300000000138e-05, 8.038800000000068e-05]</msg>
<status status="PASS" starttime="20201030 18:29:00.079" endtime="20201030 18:29:00.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.074" endtime="20201030 18:29:00.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.085" endtime="20201030 18:29:00.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.084" endtime="20201030 18:29:00.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.083" endtime="20201030 18:29:00.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.720" endtime="20201030 18:29:00.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.719" endtime="20201030 18:29:00.106"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.115" endtime="20201030 18:29:00.137"></status>
</kw>
<msg timestamp="20201030 18:29:00.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.114" endtime="20201030 18:29:00.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.138" endtime="20201030 18:29:00.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.141" endtime="20201030 18:29:00.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.111" endtime="20201030 18:29:00.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.109" endtime="20201030 18:29:00.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.150" endtime="20201030 18:29:00.437"></status>
</kw>
<msg timestamp="20201030 18:29:00.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021074153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021154722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.149" endtime="20201030 18:29:00.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021074153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021154722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.442" endtime="20201030 18:29:00.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.450" endtime="20201030 18:29:00.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.146" endtime="20201030 18:29:00.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.144" endtime="20201030 18:29:00.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:00.457" level="INFO">${RESULT} = [{'diff': 8.056899999999909e-05}, {'diff': 8.136099999999855e-05}, {'diff': 8.11390000000009e-05}, {'diff': 8.090300000000022e-05}, {'diff': 8.088900000000065e-05}, {'diff': 8.076400000000053e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:00.454" endtime="20201030 18:29:00.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:00.461" level="INFO">${ACCURACY} = {'diff': [8.056899999999909e-05, 8.136099999999855e-05, 8.11390000000009e-05, 8.090300000000022e-05, 8.088900000000065e-05, 8.076400000000053e-05, 8.161100000000227e-05, 8.079199999999967e-05, 8.08749...</msg>
<status status="PASS" starttime="20201030 18:29:00.458" endtime="20201030 18:29:00.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.466" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:29:00.465" endtime="20201030 18:29:00.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.468" level="INFO">VALUE: [8.056899999999909e-05, 8.136099999999855e-05, 8.11390000000009e-05, 8.090300000000022e-05, 8.088900000000065e-05, 8.076400000000053e-05, 8.161100000000227e-05, 8.079199999999967e-05, 8.087499999999762e-05, 8.067999999999964e-05, 8.134699999999898e-05, 8.155499999999705e-05, 8.11390000000009e-05, 8.086100000000151e-05, 8.148599999999867e-05, 8.073599999999792e-05, 8.087500000000108e-05, 8.136099999999855e-05, 8.159699999999923e-05, 8.068099999999911e-05, 8.106999999999906e-05, 8.14719999999991e-05, 8.120900000000222e-05, 8.155500000000052e-05, 8.080599999999924e-05, 8.101400000000078e-05, 8.16109999999988e-05, 8.067999999999964e-05, 8.101400000000078e-05, 8.076400000000053e-05, 8.155500000000052e-05, 8.104199999999992e-05, 8.066699999999954e-05, 8.087500000000108e-05, 8.137500000000158e-05, 8.105599999999949e-05, 8.084800000000142e-05, 8.112500000000133e-05, 8.070800000000225e-05, 8.088800000000118e-05, 8.154100000000095e-05, 8.149999999999824e-05, 8.125000000000146e-05, 8.074999999999749e-05, 8.14719999999991e-05, 8.098600000000164e-05, 8.161100000000227e-05, 8.09169999999998e-05, 8.069499999999868e-05, 8.087500000000108e-05]</msg>
<status status="PASS" starttime="20201030 18:29:00.467" endtime="20201030 18:29:00.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.462" endtime="20201030 18:29:00.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.474" endtime="20201030 18:29:00.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.473" endtime="20201030 18:29:00.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.472" endtime="20201030 18:29:00.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.107" endtime="20201030 18:29:00.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.106" endtime="20201030 18:29:00.495"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.504" endtime="20201030 18:29:00.524"></status>
</kw>
<msg timestamp="20201030 18:29:00.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.503" endtime="20201030 18:29:00.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.526" endtime="20201030 18:29:00.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.529" endtime="20201030 18:29:00.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.500" endtime="20201030 18:29:00.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.498" endtime="20201030 18:29:00.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.538" endtime="20201030 18:29:00.824"></status>
</kw>
<msg timestamp="20201030 18:29:00.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020075556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020157903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.536" endtime="20201030 18:29:00.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020075556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020157903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.829" endtime="20201030 18:29:00.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.837" endtime="20201030 18:29:00.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.534" endtime="20201030 18:29:00.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.532" endtime="20201030 18:29:00.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:00.844" level="INFO">${RESULT} = [{'diff': 8.234699999999998e-05}, {'diff': 8.249999999999924e-05}, {'diff': 8.22780000000016e-05}, {'diff': 8.230500000000127e-05}, {'diff': 8.174999999999849e-05}, {'diff': 8.254099999999848e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:00.841" endtime="20201030 18:29:00.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:00.849" level="INFO">${ACCURACY} = {'diff': [8.234699999999998e-05, 8.249999999999924e-05, 8.22780000000016e-05, 8.230500000000127e-05, 8.174999999999849e-05, 8.254099999999848e-05, 8.223599999999942e-05, 8.207000000000006e-05, 8.16800...</msg>
<status status="PASS" starttime="20201030 18:29:00.845" endtime="20201030 18:29:00.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.854" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:29:00.853" endtime="20201030 18:29:00.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.857" level="INFO">VALUE: [8.234699999999998e-05, 8.249999999999924e-05, 8.22780000000016e-05, 8.230500000000127e-05, 8.174999999999849e-05, 8.254099999999848e-05, 8.223599999999942e-05, 8.207000000000006e-05, 8.168000000000064e-05, 8.166700000000054e-05, 8.219400000000071e-05, 8.191699999999733e-05, 8.22910000000017e-05, 8.184699999999948e-05, 8.257000000000056e-05, 8.262499999999937e-05, 8.179200000000067e-05, 8.19589999999995e-05, 8.212499999999887e-05, 8.255500000000152e-05, 8.255499999999805e-05, 8.219400000000071e-05, 8.19719999999996e-05, 8.226399999999856e-05, 8.258300000000066e-05, 8.223599999999942e-05, 8.213899999999844e-05, 8.220899999999975e-05, 8.21109999999993e-05, 8.219400000000071e-05, 8.187499999999862e-05, 8.20269999999984e-05, 8.236099999999955e-05, 8.208300000000016e-05, 8.237499999999912e-05, 8.19719999999996e-05, 8.173599999999892e-05, 8.25979999999997e-05, 8.166700000000054e-05, 8.230600000000074e-05, 8.198599999999917e-05, 8.232000000000031e-05, 8.230599999999727e-05, 8.212499999999887e-05, 8.24720000000001e-05, 8.268000000000164e-05, 8.207000000000006e-05, 8.229099999999823e-05, 8.241599999999835e-05, 8.192999999999742e-05]</msg>
<status status="PASS" starttime="20201030 18:29:00.855" endtime="20201030 18:29:00.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.850" endtime="20201030 18:29:00.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.862" endtime="20201030 18:29:00.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.860" endtime="20201030 18:29:00.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.859" endtime="20201030 18:29:00.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.496" endtime="20201030 18:29:00.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.495" endtime="20201030 18:29:00.883"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.892" endtime="20201030 18:29:00.912"></status>
</kw>
<msg timestamp="20201030 18:29:00.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.890" endtime="20201030 18:29:00.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.914" endtime="20201030 18:29:00.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.916" endtime="20201030 18:29:00.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.887" endtime="20201030 18:29:00.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.885" endtime="20201030 18:29:00.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.926" endtime="20201030 18:29:01.212"></status>
</kw>
<msg timestamp="20201030 18:29:01.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.924" endtime="20201030 18:29:01.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.216" endtime="20201030 18:29:01.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.225" endtime="20201030 18:29:01.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.921" endtime="20201030 18:29:01.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.920" endtime="20201030 18:29:01.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:01.232" level="INFO">${RESULT} = [{'diff': 8.36529999999995e-05}, {'diff': 8.259700000000023e-05}, {'diff': 8.352799999999938e-05}, {'diff': 8.274999999999949e-05}, {'diff': 8.318099999999815e-05}, {'diff': 8.301299999999984e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:01.228" endtime="20201030 18:29:01.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:01.236" level="INFO">${ACCURACY} = {'diff': [8.36529999999995e-05, 8.259700000000023e-05, 8.352799999999938e-05, 8.274999999999949e-05, 8.318099999999815e-05, 8.301299999999984e-05, 8.329099999999923e-05, 8.334799999999698e-05, 8.26520...</msg>
<status status="PASS" starttime="20201030 18:29:01.233" endtime="20201030 18:29:01.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.241" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:29:01.240" endtime="20201030 18:29:01.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.243" level="INFO">VALUE: [8.36529999999995e-05, 8.259700000000023e-05, 8.352799999999938e-05, 8.274999999999949e-05, 8.318099999999815e-05, 8.301299999999984e-05, 8.329099999999923e-05, 8.334799999999698e-05, 8.26520000000025e-05, 8.331900000000184e-05, 8.306900000000159e-05, 8.287500000000309e-05, 8.317999999999867e-05, 8.322199999999738e-05, 8.34309999999984e-05, 8.340299999999926e-05, 8.34170000000023e-05, 8.319500000000118e-05, 8.363899999999994e-05, 8.268100000000111e-05, 8.27919999999982e-05, 8.34720000000011e-05, 8.286100000000005e-05, 8.31110000000003e-05, 8.318100000000161e-05, 8.354100000000295e-05, 8.268000000000164e-05, 8.345800000000153e-05, 8.352799999999938e-05, 8.329200000000217e-05, 8.341600000000282e-05, 8.309700000000073e-05, 8.337500000000012e-05, 8.350000000000024e-05, 8.315199999999953e-05, 8.31110000000003e-05, 8.274999999999949e-05, 8.309700000000073e-05, 8.337500000000012e-05, 8.343000000000239e-05, 8.330600000000174e-05, 8.272200000000035e-05, 8.268100000000111e-05, 8.304200000000192e-05, 8.355600000000199e-05, 8.305600000000149e-05, 8.319500000000118e-05, 8.329200000000217e-05, 8.331999999999784e-05, 8.3152999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:29:01.242" endtime="20201030 18:29:01.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.237" endtime="20201030 18:29:01.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:01.249" endtime="20201030 18:29:01.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.247" endtime="20201030 18:29:01.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.246" endtime="20201030 18:29:01.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.884" endtime="20201030 18:29:01.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.883" endtime="20201030 18:29:01.269"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.278" endtime="20201030 18:29:01.300"></status>
</kw>
<msg timestamp="20201030 18:29:01.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.277" endtime="20201030 18:29:01.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.302" endtime="20201030 18:29:01.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.304" endtime="20201030 18:29:01.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.274" endtime="20201030 18:29:01.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.272" endtime="20201030 18:29:01.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.314" endtime="20201030 18:29:01.599"></status>
</kw>
<msg timestamp="20201030 18:29:01.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021130111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021213861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.312" endtime="20201030 18:29:01.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021130111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021213861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.604" endtime="20201030 18:29:01.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.612" endtime="20201030 18:29:01.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.309" endtime="20201030 18:29:01.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.307" endtime="20201030 18:29:01.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:01.619" level="INFO">${RESULT} = [{'diff': 8.375000000000049e-05}, {'diff': 8.423599999999795e-05}, {'diff': 8.404199999999945e-05}, {'diff': 8.4153e-05}, {'diff': 8.369499999999822e-05}, {'diff': 8.390200000000028e-05}, {'diff': 8.3...</msg>
<status status="PASS" starttime="20201030 18:29:01.616" endtime="20201030 18:29:01.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:01.623" level="INFO">${ACCURACY} = {'diff': [8.375000000000049e-05, 8.423599999999795e-05, 8.404199999999945e-05, 8.4153e-05, 8.369499999999822e-05, 8.390200000000028e-05, 8.37919999999992e-05, 8.463799999999799e-05, 8.375000000000049e...</msg>
<status status="PASS" starttime="20201030 18:29:01.620" endtime="20201030 18:29:01.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.628" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:29:01.627" endtime="20201030 18:29:01.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.630" level="INFO">VALUE: [8.375000000000049e-05, 8.423599999999795e-05, 8.404199999999945e-05, 8.4153e-05, 8.369499999999822e-05, 8.390200000000028e-05, 8.37919999999992e-05, 8.463799999999799e-05, 8.375000000000049e-05, 8.462500000000137e-05, 8.436100000000155e-05, 8.441600000000035e-05, 8.419400000000271e-05, 8.441699999999983e-05, 8.402799999999988e-05, 8.448600000000167e-05, 8.365300000000297e-05, 8.382000000000181e-05, 8.39309999999989e-05, 8.437500000000112e-05, 8.405600000000249e-05, 8.387500000000062e-05, 8.39590000000015e-05, 8.373600000000092e-05, 8.451399999999734e-05, 8.375000000000049e-05, 8.426399999999709e-05, 8.442999999999992e-05, 8.420899999999829e-05, 8.427800000000013e-05, 8.459700000000223e-05, 8.432000000000231e-05, 8.466700000000008e-05, 8.391699999999933e-05, 8.399999999999727e-05, 8.454199999999995e-05, 8.406999999999859e-05, 8.369400000000221e-05, 8.451399999999734e-05, 8.448600000000167e-05, 8.405500000000302e-05, 8.392999999999942e-05, 8.442999999999992e-05, 8.36529999999995e-05, 8.375000000000049e-05, 8.450000000000124e-05, 8.419500000000218e-05, 8.408399999999816e-05, 8.448600000000167e-05, 8.375000000000049e-05]</msg>
<status status="PASS" starttime="20201030 18:29:01.629" endtime="20201030 18:29:01.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.624" endtime="20201030 18:29:01.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:01.636" endtime="20201030 18:29:01.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.635" endtime="20201030 18:29:01.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.634" endtime="20201030 18:29:01.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.270" endtime="20201030 18:29:01.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.270" endtime="20201030 18:29:01.657"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.666" endtime="20201030 18:29:01.686"></status>
</kw>
<msg timestamp="20201030 18:29:01.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.665" endtime="20201030 18:29:01.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.688" endtime="20201030 18:29:01.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.691" endtime="20201030 18:29:01.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.662" endtime="20201030 18:29:01.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.660" endtime="20201030 18:29:01.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.700" endtime="20201030 18:29:01.985"></status>
</kw>
<msg timestamp="20201030 18:29:01.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.698" endtime="20201030 18:29:01.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.989" endtime="20201030 18:29:01.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.998" endtime="20201030 18:29:01.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.696" endtime="20201030 18:29:02.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.694" endtime="20201030 18:29:02.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:02.005" level="INFO">${RESULT} = [{'diff': 8.56110000000028e-05}, {'diff': 8.563900000000194e-05}, {'diff': 8.465199999999756e-05}, {'diff': 8.544400000000049e-05}, {'diff': 8.479100000000073e-05}, {'diff': 8.504199999999698e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:02.001" endtime="20201030 18:29:02.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:02.012" level="INFO">${ACCURACY} = {'diff': [8.56110000000028e-05, 8.563900000000194e-05, 8.465199999999756e-05, 8.544400000000049e-05, 8.479100000000073e-05, 8.504199999999698e-05, 8.536100000000255e-05, 8.49309999999999e-05, 8.515300...</msg>
<status status="PASS" starttime="20201030 18:29:02.006" endtime="20201030 18:29:02.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.017" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:29:02.016" endtime="20201030 18:29:02.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.020" level="INFO">VALUE: [8.56110000000028e-05, 8.563900000000194e-05, 8.465199999999756e-05, 8.544400000000049e-05, 8.479100000000073e-05, 8.504199999999698e-05, 8.536100000000255e-05, 8.49309999999999e-05, 8.5153000000001e-05, 8.54310000000004e-05, 8.549999999999877e-05, 8.54729999999991e-05, 8.563900000000194e-05, 8.555600000000052e-05, 8.557000000000009e-05, 8.505500000000055e-05, 8.56249999999989e-05, 8.476399999999759e-05, 8.555500000000105e-05, 8.555500000000105e-05, 8.56249999999989e-05, 8.49309999999999e-05, 8.522199999999938e-05, 8.537499999999865e-05, 8.555600000000052e-05, 8.475000000000149e-05, 8.491700000000033e-05, 8.487500000000162e-05, 8.505600000000002e-05, 8.556900000000062e-05, 8.552799999999791e-05, 8.508300000000316e-05, 8.500000000000174e-05, 8.516700000000058e-05, 8.500000000000174e-05, 8.52920000000007e-05, 8.56249999999989e-05, 8.491700000000033e-05, 8.552799999999791e-05, 8.497300000000207e-05, 8.533299999999994e-05, 8.543000000000092e-05, 8.468000000000017e-05, 8.566599999999813e-05, 8.487500000000162e-05, 8.49859999999987e-05, 8.480599999999977e-05, 8.486099999999858e-05, 8.511099999999883e-05, 8.49720000000026e-05]</msg>
<status status="PASS" starttime="20201030 18:29:02.018" endtime="20201030 18:29:02.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.013" endtime="20201030 18:29:02.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:02.032" endtime="20201030 18:29:02.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.030" endtime="20201030 18:29:02.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.029" endtime="20201030 18:29:02.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.658" endtime="20201030 18:29:02.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.658" endtime="20201030 18:29:02.053"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.062" endtime="20201030 18:29:02.082"></status>
</kw>
<msg timestamp="20201030 18:29:02.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.060" endtime="20201030 18:29:02.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.083" endtime="20201030 18:29:02.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.086" endtime="20201030 18:29:02.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.057" endtime="20201030 18:29:02.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.055" endtime="20201030 18:29:02.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.097" endtime="20201030 18:29:02.383"></status>
</kw>
<msg timestamp="20201030 18:29:02.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020064528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.095" endtime="20201030 18:29:02.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020064528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.388" endtime="20201030 18:29:02.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.396" endtime="20201030 18:29:02.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.092" endtime="20201030 18:29:02.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.090" endtime="20201030 18:29:02.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:02.403" level="INFO">${RESULT} = [{'diff': 8.652799999999891e-05}, {'diff': 8.644399999999802e-05}, {'diff': 8.569400000000074e-05}, {'diff': 8.64860000000002e-05}, {'diff': 8.615199999999906e-05}, {'diff': 8.66249999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:02.400" endtime="20201030 18:29:02.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:02.407" level="INFO">${ACCURACY} = {'diff': [8.652799999999891e-05, 8.644399999999802e-05, 8.569400000000074e-05, 8.64860000000002e-05, 8.615199999999906e-05, 8.66249999999999e-05, 8.618000000000167e-05, 8.624999999999952e-05, 8.579200...</msg>
<status status="PASS" starttime="20201030 18:29:02.404" endtime="20201030 18:29:02.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.412" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:29:02.411" endtime="20201030 18:29:02.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.414" level="INFO">VALUE: [8.652799999999891e-05, 8.644399999999802e-05, 8.569400000000074e-05, 8.64860000000002e-05, 8.615199999999906e-05, 8.66249999999999e-05, 8.618000000000167e-05, 8.624999999999952e-05, 8.57920000000012e-05, 8.580600000000077e-05, 8.5847e-05, 8.574999999999902e-05, 8.638899999999922e-05, 8.64860000000002e-05, 8.61799999999982e-05, 8.613899999999897e-05, 8.573599999999945e-05, 8.649999999999977e-05, 8.592999999999795e-05, 8.643000000000192e-05, 8.581900000000087e-05, 8.5847e-05, 8.651399999999934e-05, 8.633300000000094e-05, 8.608300000000069e-05, 8.622199999999691e-05, 8.615299999999854e-05, 8.655600000000152e-05, 8.604200000000145e-05, 8.630600000000127e-05, 8.649999999999977e-05, 8.611099999999983e-05, 8.652799999999891e-05, 8.586099999999958e-05, 8.643099999999793e-05, 8.645800000000106e-05, 8.61249999999994e-05, 8.622200000000038e-05, 8.601399999999884e-05, 8.59310000000009e-05, 8.57920000000012e-05, 8.62370000000029e-05, 8.572199999999988e-05, 8.568000000000117e-05, 8.572199999999988e-05, 8.601399999999884e-05, 8.601399999999884e-05, 8.629199999999823e-05, 8.618099999999768e-05, 8.587499999999915e-05]</msg>
<status status="PASS" starttime="20201030 18:29:02.413" endtime="20201030 18:29:02.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.408" endtime="20201030 18:29:02.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:02.420" endtime="20201030 18:29:02.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.418" endtime="20201030 18:29:02.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.417" endtime="20201030 18:29:02.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.054" endtime="20201030 18:29:02.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.053" endtime="20201030 18:29:02.440"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.450" endtime="20201030 18:29:02.471"></status>
</kw>
<msg timestamp="20201030 18:29:02.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.448" endtime="20201030 18:29:02.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.472" endtime="20201030 18:29:02.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.475" endtime="20201030 18:29:02.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.445" endtime="20201030 18:29:02.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.443" endtime="20201030 18:29:02.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.484" endtime="20201030 18:29:02.771"></status>
</kw>
<msg timestamp="20201030 18:29:02.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021005625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021092583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.483" endtime="20201030 18:29:02.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021005625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021092583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.775" endtime="20201030 18:29:02.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.784" endtime="20201030 18:29:02.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.480" endtime="20201030 18:29:02.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.478" endtime="20201030 18:29:02.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:02.790" level="INFO">${RESULT} = [{'diff': 8.695800000000156e-05}, {'diff': 8.736100000000108e-05}, {'diff': 8.768099999999918e-05}, {'diff': 8.71669999999991e-05}, {'diff': 8.676399999999959e-05}, {'diff': 8.679199999999873e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:02.787" endtime="20201030 18:29:02.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:02.795" level="INFO">${ACCURACY} = {'diff': [8.695800000000156e-05, 8.736100000000108e-05, 8.768099999999918e-05, 8.71669999999991e-05, 8.676399999999959e-05, 8.679199999999873e-05, 8.741699999999936e-05, 8.754199999999948e-05, 8.68750...</msg>
<status status="PASS" starttime="20201030 18:29:02.791" endtime="20201030 18:29:02.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.799" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:29:02.798" endtime="20201030 18:29:02.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.802" level="INFO">VALUE: [8.695800000000156e-05, 8.736100000000108e-05, 8.768099999999918e-05, 8.71669999999991e-05, 8.676399999999959e-05, 8.679199999999873e-05, 8.741699999999936e-05, 8.754199999999948e-05, 8.687500000000015e-05, 8.725000000000052e-05, 8.731999999999837e-05, 8.755599999999905e-05, 8.673599999999698e-05, 8.751400000000034e-05, 8.700000000000027e-05, 8.700000000000027e-05, 8.676399999999959e-05, 8.727799999999966e-05, 8.709699999999779e-05, 8.761100000000133e-05, 8.688899999999972e-05, 8.718100000000215e-05, 8.762499999999743e-05, 8.737500000000065e-05, 8.670899999999732e-05, 8.66799999999987e-05, 8.713800000000049e-05, 8.679100000000273e-05, 8.754100000000001e-05, 8.693000000000242e-05, 8.68050000000023e-05, 8.732000000000184e-05, 8.76250000000009e-05, 8.743099999999893e-05, 8.679199999999873e-05, 8.702799999999941e-05, 8.747200000000163e-05, 8.732000000000184e-05, 8.751400000000034e-05, 8.74860000000012e-05, 8.71250000000004e-05, 8.687500000000015e-05, 8.726400000000009e-05, 8.705499999999908e-05, 8.66799999999987e-05, 8.672200000000088e-05, 8.713899999999997e-05, 8.687500000000015e-05, 8.691699999999886e-05, 8.706999999999812e-05]</msg>
<status status="PASS" starttime="20201030 18:29:02.800" endtime="20201030 18:29:02.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.795" endtime="20201030 18:29:02.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:02.808" endtime="20201030 18:29:02.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.806" endtime="20201030 18:29:02.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.805" endtime="20201030 18:29:02.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.441" endtime="20201030 18:29:02.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.441" endtime="20201030 18:29:02.829"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.838" endtime="20201030 18:29:02.858"></status>
</kw>
<msg timestamp="20201030 18:29:02.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.836" endtime="20201030 18:29:02.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.860" endtime="20201030 18:29:02.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.863" endtime="20201030 18:29:02.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.833" endtime="20201030 18:29:02.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.831" endtime="20201030 18:29:02.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.872" endtime="20201030 18:29:03.158"></status>
</kw>
<msg timestamp="20201030 18:29:03.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020090764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020178694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.870" endtime="20201030 18:29:03.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020090764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020178694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.162" endtime="20201030 18:29:03.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.171" endtime="20201030 18:29:03.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.868" endtime="20201030 18:29:03.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.866" endtime="20201030 18:29:03.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:03.177" level="INFO">${RESULT} = [{'diff': 8.792999999999995e-05}, {'diff': 8.823599999999848e-05}, {'diff': 8.787500000000115e-05}, {'diff': 8.809700000000226e-05}, {'diff': 8.873699999999846e-05}, {'diff': 8.845799999999959e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:03.174" endtime="20201030 18:29:03.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:03.182" level="INFO">${ACCURACY} = {'diff': [8.792999999999995e-05, 8.823599999999848e-05, 8.787500000000115e-05, 8.809700000000226e-05, 8.873699999999846e-05, 8.845799999999959e-05, 8.869499999999975e-05, 8.81670000000001e-05, 8.82219...</msg>
<status status="PASS" starttime="20201030 18:29:03.178" endtime="20201030 18:29:03.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.187" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:29:03.186" endtime="20201030 18:29:03.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.190" level="INFO">VALUE: [8.792999999999995e-05, 8.823599999999848e-05, 8.787500000000115e-05, 8.809700000000226e-05, 8.873699999999846e-05, 8.845799999999959e-05, 8.869499999999975e-05, 8.81670000000001e-05, 8.822199999999891e-05, 8.766700000000308e-05, 8.805599999999955e-05, 8.787500000000115e-05, 8.768099999999918e-05, 8.81519999999976e-05, 8.765200000000056e-05, 8.78189999999994e-05, 8.81250000000014e-05, 8.78059999999993e-05, 8.772200000000188e-05, 8.78059999999993e-05, 8.845899999999907e-05, 8.823599999999848e-05, 8.845899999999907e-05, 8.834699999999904e-05, 8.777800000000016e-05, 8.805600000000302e-05, 8.765300000000004e-05, 8.834699999999904e-05, 8.862499999999843e-05, 8.83189999999999e-05, 8.802800000000041e-05, 8.815300000000054e-05, 8.808299999999922e-05, 8.84860000000022e-05, 8.804199999999998e-05, 8.794500000000247e-05, 8.81250000000014e-05, 8.848599999999873e-05, 8.818099999999968e-05, 8.834799999999851e-05, 8.819399999999977e-05, 8.791600000000038e-05, 8.843000000000045e-05, 8.795799999999909e-05, 8.863900000000147e-05, 8.834700000000251e-05, 8.827800000000066e-05, 8.868100000000018e-05, 8.861100000000233e-05, 8.841700000000036e-05]</msg>
<status status="PASS" starttime="20201030 18:29:03.188" endtime="20201030 18:29:03.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.183" endtime="20201030 18:29:03.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.195" endtime="20201030 18:29:03.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.193" endtime="20201030 18:29:03.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.192" endtime="20201030 18:29:03.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.830" endtime="20201030 18:29:03.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.829" endtime="20201030 18:29:03.216"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.225" endtime="20201030 18:29:03.245"></status>
</kw>
<msg timestamp="20201030 18:29:03.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.223" endtime="20201030 18:29:03.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.247" endtime="20201030 18:29:03.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.249" endtime="20201030 18:29:03.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.220" endtime="20201030 18:29:03.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.218" endtime="20201030 18:29:03.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.259" endtime="20201030 18:29:03.545"></status>
</kw>
<msg timestamp="20201030 18:29:03.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020084333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201735, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:03.257" endtime="20201030 18:29:03.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020084333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201735, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:03.549" endtime="20201030 18:29:03.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.558" endtime="20201030 18:29:03.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.254" endtime="20201030 18:29:03.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.252" endtime="20201030 18:29:03.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:03.565" level="INFO">${RESULT} = [{'diff': 8.91670000000011e-05}, {'diff': 8.879200000000073e-05}, {'diff': 8.948599999999973e-05}, {'diff': 8.934700000000004e-05}, {'diff': 8.918100000000068e-05}, {'diff': 8.907000000000012e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:03.561" endtime="20201030 18:29:03.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:03.569" level="INFO">${ACCURACY} = {'diff': [8.91670000000011e-05, 8.879200000000073e-05, 8.948599999999973e-05, 8.934700000000004e-05, 8.918100000000068e-05, 8.907000000000012e-05, 8.958300000000072e-05, 8.955500000000158e-05, 8.96249...</msg>
<status status="PASS" starttime="20201030 18:29:03.566" endtime="20201030 18:29:03.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.573" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:29:03.572" endtime="20201030 18:29:03.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.576" level="INFO">VALUE: [8.91670000000011e-05, 8.879200000000073e-05, 8.948599999999973e-05, 8.934700000000004e-05, 8.918100000000068e-05, 8.907000000000012e-05, 8.958300000000072e-05, 8.955500000000158e-05, 8.962499999999943e-05, 8.922199999999991e-05, 8.904099999999804e-05, 8.9332999999997e-05, 8.86250000000019e-05, 8.91389999999985e-05, 8.887499999999868e-05, 8.872299999999889e-05, 8.890199999999834e-05, 8.869499999999975e-05, 8.918099999999721e-05, 8.96250000000029e-05, 8.937499999999918e-05, 8.900000000000227e-05, 8.89860000000027e-05, 8.901399999999837e-05, 8.929099999999829e-05, 8.886100000000258e-05, 8.868100000000018e-05, 8.898599999999923e-05, 8.929200000000123e-05, 8.945900000000007e-05, 8.904200000000098e-05, 8.943100000000093e-05, 8.934799999999951e-05, 8.869400000000027e-05, 8.891599999999791e-05, 8.919400000000077e-05, 8.879100000000126e-05, 8.915300000000154e-05, 8.917999999999773e-05, 8.880599999999683e-05, 8.907000000000012e-05, 8.929200000000123e-05, 8.940299999999832e-05, 8.89999999999988e-05, 8.919500000000025e-05, 8.955600000000105e-05, 8.966599999999866e-05, 8.888900000000172e-05, 8.916600000000163e-05, 8.891700000000086e-05]</msg>
<status status="PASS" starttime="20201030 18:29:03.575" endtime="20201030 18:29:03.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.570" endtime="20201030 18:29:03.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.581" endtime="20201030 18:29:03.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.580" endtime="20201030 18:29:03.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.578" endtime="20201030 18:29:03.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.217" endtime="20201030 18:29:03.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.216" endtime="20201030 18:29:03.602"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.611" endtime="20201030 18:29:03.633"></status>
</kw>
<msg timestamp="20201030 18:29:03.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.610" endtime="20201030 18:29:03.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.634" endtime="20201030 18:29:03.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.637" endtime="20201030 18:29:03.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.607" endtime="20201030 18:29:03.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.605" endtime="20201030 18:29:03.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.646" endtime="20201030 18:29:03.932"></status>
</kw>
<msg timestamp="20201030 18:29:03.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021020514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021110222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.645" endtime="20201030 18:29:03.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021020514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021110222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.937" endtime="20201030 18:29:03.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.945" endtime="20201030 18:29:03.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.642" endtime="20201030 18:29:03.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.640" endtime="20201030 18:29:03.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:03.952" level="INFO">${RESULT} = [{'diff': 8.970800000000084e-05}, {'diff': 8.9945000000001e-05}, {'diff': 8.973599999999998e-05}, {'diff': 9.055599999999858e-05}, {'diff': 8.974999999999955e-05}, {'diff': 9.019499999999778e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:03.949" endtime="20201030 18:29:03.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:03.956" level="INFO">${ACCURACY} = {'diff': [8.970800000000084e-05, 8.9945000000001e-05, 8.973599999999998e-05, 9.055599999999858e-05, 8.974999999999955e-05, 9.019499999999778e-05, 9.012499999999993e-05, 9.058399999999772e-05, 8.973599...</msg>
<status status="PASS" starttime="20201030 18:29:03.953" endtime="20201030 18:29:03.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.961" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:29:03.960" endtime="20201030 18:29:03.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.964" level="INFO">VALUE: [8.970800000000084e-05, 8.9945000000001e-05, 8.973599999999998e-05, 9.055599999999858e-05, 8.974999999999955e-05, 9.019499999999778e-05, 9.012499999999993e-05, 9.058399999999772e-05, 8.973599999999998e-05, 9.025000000000005e-05, 9.012499999999993e-05, 9.006899999999818e-05, 8.970800000000084e-05, 8.980500000000183e-05, 9.059800000000076e-05, 8.96939999999978e-05, 9.007000000000112e-05, 8.962499999999943e-05, 8.98060000000013e-05, 8.970900000000032e-05, 8.969500000000075e-05, 9.030500000000233e-05, 9.005500000000208e-05, 9.043000000000245e-05, 9.006900000000165e-05, 9.001399999999937e-05, 8.974999999999955e-05, 9.052799999999944e-05, 9.030599999999833e-05, 9.041699999999889e-05, 8.977799999999869e-05, 9.036099999999714e-05, 8.986199999999958e-05, 9.011099999999689e-05, 8.99589999999971e-05, 8.992999999999848e-05, 9.058299999999825e-05, 8.994399999999805e-05, 8.994399999999805e-05, 8.991699999999839e-05, 8.993099999999796e-05, 9.019500000000125e-05, 8.970799999999737e-05, 8.977799999999869e-05, 9.025000000000005e-05, 8.997200000000066e-05, 9.018099999999821e-05, 9.066599999999966e-05, 9.01939999999983e-05, 9.01519999999996e-05]</msg>
<status status="PASS" starttime="20201030 18:29:03.962" endtime="20201030 18:29:03.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.957" endtime="20201030 18:29:03.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.970" endtime="20201030 18:29:03.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.968" endtime="20201030 18:29:03.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.967" endtime="20201030 18:29:03.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.603" endtime="20201030 18:29:03.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.602" endtime="20201030 18:29:03.990"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.999" endtime="20201030 18:29:04.020"></status>
</kw>
<msg timestamp="20201030 18:29:04.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.998" endtime="20201030 18:29:04.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.022" endtime="20201030 18:29:04.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.025" endtime="20201030 18:29:04.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.995" endtime="20201030 18:29:04.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.993" endtime="20201030 18:29:04.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.034" endtime="20201030 18:29:04.322"></status>
</kw>
<msg timestamp="20201030 18:29:04.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020100153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020191653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.032" endtime="20201030 18:29:04.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020100153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020191653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.327" endtime="20201030 18:29:04.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.338" endtime="20201030 18:29:04.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.030" endtime="20201030 18:29:04.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.028" endtime="20201030 18:29:04.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:04.349" level="INFO">${RESULT} = [{'diff': 9.15000000000013e-05}, {'diff': 9.088900000000025e-05}, {'diff': 9.105499999999961e-05}, {'diff': 9.162500000000143e-05}, {'diff': 9.080499999999936e-05}, {'diff': 9.088900000000025e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:04.344" endtime="20201030 18:29:04.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:04.358" level="INFO">${ACCURACY} = {'diff': [9.15000000000013e-05, 9.088900000000025e-05, 9.105499999999961e-05, 9.162500000000143e-05, 9.080499999999936e-05, 9.088900000000025e-05, 9.075000000000055e-05, 9.131899999999943e-05, 9.12780...</msg>
<status status="PASS" starttime="20201030 18:29:04.351" endtime="20201030 18:29:04.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.363" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:29:04.362" endtime="20201030 18:29:04.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.366" level="INFO">VALUE: [9.15000000000013e-05, 9.088900000000025e-05, 9.105499999999961e-05, 9.162500000000143e-05, 9.080499999999936e-05, 9.088900000000025e-05, 9.075000000000055e-05, 9.131899999999943e-05, 9.127800000000019e-05, 9.079200000000273e-05, 9.075000000000055e-05, 9.106999999999865e-05, 9.086100000000111e-05, 9.130599999999933e-05, 9.073600000000098e-05, 9.097300000000114e-05, 9.117999999999973e-05, 9.080500000000283e-05, 9.067999999999923e-05, 9.122199999999844e-05, 9.154100000000054e-05, 9.105499999999961e-05, 9.113899999999703e-05, 9.105599999999908e-05, 9.111100000000136e-05, 9.130599999999933e-05, 9.077799999999969e-05, 9.144499999999903e-05, 9.097300000000114e-05, 9.087499999999721e-05, 9.136100000000161e-05, 9.1639000000001e-05, 9.141699999999989e-05, 9.161099999999839e-05, 9.081899999999893e-05, 9.066699999999914e-05, 9.08190000000024e-05, 9.066699999999914e-05, 9.154200000000001e-05, 9.149999999999783e-05, 9.080599999999883e-05, 9.140300000000032e-05, 9.104100000000004e-05, 9.088900000000025e-05, 9.101400000000037e-05, 9.11659999999967e-05, 9.105499999999961e-05, 9.076400000000012e-05, 9.161099999999839e-05, 9.127800000000019e-05]</msg>
<status status="PASS" starttime="20201030 18:29:04.364" endtime="20201030 18:29:04.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.359" endtime="20201030 18:29:04.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:04.371" endtime="20201030 18:29:04.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.369" endtime="20201030 18:29:04.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.368" endtime="20201030 18:29:04.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.991" endtime="20201030 18:29:04.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.991" endtime="20201030 18:29:04.392"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.401" endtime="20201030 18:29:04.422"></status>
</kw>
<msg timestamp="20201030 18:29:04.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.399" endtime="20201030 18:29:04.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.424" endtime="20201030 18:29:04.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.426" endtime="20201030 18:29:04.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.396" endtime="20201030 18:29:04.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.394" endtime="20201030 18:29:04.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.436" endtime="20201030 18:29:04.723"></status>
</kw>
<msg timestamp="20201030 18:29:04.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020255597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.434" endtime="20201030 18:29:04.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020255597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.727" endtime="20201030 18:29:04.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.735" endtime="20201030 18:29:04.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.431" endtime="20201030 18:29:04.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.429" endtime="20201030 18:29:04.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:04.742" level="INFO">${RESULT} = [{'diff': 9.19589999999991e-05}, {'diff': 9.248599999999926e-05}, {'diff': 9.204100000000104e-05}, {'diff': 9.240300000000132e-05}, {'diff': 9.265300000000157e-05}, {'diff': 9.180500000000036e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:04.739" endtime="20201030 18:29:04.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:04.746" level="INFO">${ACCURACY} = {'diff': [9.19589999999991e-05, 9.248599999999926e-05, 9.204100000000104e-05, 9.240300000000132e-05, 9.265300000000157e-05, 9.180500000000036e-05, 9.252800000000144e-05, 9.174999999999808e-05, 9.21949...</msg>
<status status="PASS" starttime="20201030 18:29:04.743" endtime="20201030 18:29:04.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.751" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:29:04.750" endtime="20201030 18:29:04.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.754" level="INFO">VALUE: [9.19589999999991e-05, 9.248599999999926e-05, 9.204100000000104e-05, 9.240300000000132e-05, 9.265300000000157e-05, 9.180500000000036e-05, 9.252800000000144e-05, 9.174999999999808e-05, 9.219499999999978e-05, 9.243100000000046e-05, 9.191699999999692e-05, 9.179200000000026e-05, 9.223700000000196e-05, 9.204200000000051e-05, 9.180599999999983e-05, 9.206900000000018e-05, 9.231900000000043e-05, 9.236099999999914e-05, 9.234699999999957e-05, 9.24719999999997e-05, 9.184699999999907e-05, 9.223599999999901e-05, 9.206999999999965e-05, 9.244500000000003e-05, 9.173599999999851e-05, 9.213799999999855e-05, 9.26940000000008e-05, 9.166700000000014e-05, 9.219500000000325e-05, 9.168000000000023e-05, 9.25000000000023e-05, 9.193000000000048e-05, 9.240299999999785e-05, 9.186100000000211e-05, 9.263899999999853e-05, 9.186099999999864e-05, 9.229200000000076e-05, 9.193099999999996e-05, 9.222300000000239e-05, 9.195799999999962e-05, 9.211100000000236e-05, 9.21940000000003e-05, 9.255499999999764e-05, 9.233400000000294e-05, 9.255600000000058e-05, 9.204200000000051e-05, 9.20139999999979e-05, 9.258300000000025e-05, 9.216699999999717e-05, 9.229200000000076e-05]</msg>
<status status="PASS" starttime="20201030 18:29:04.752" endtime="20201030 18:29:04.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.747" endtime="20201030 18:29:04.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:04.759" endtime="20201030 18:29:04.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.757" endtime="20201030 18:29:04.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.756" endtime="20201030 18:29:04.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.393" endtime="20201030 18:29:04.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.392" endtime="20201030 18:29:04.780"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.789" endtime="20201030 18:29:04.811"></status>
</kw>
<msg timestamp="20201030 18:29:04.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.787" endtime="20201030 18:29:04.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.813" endtime="20201030 18:29:04.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.815" endtime="20201030 18:29:04.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.784" endtime="20201030 18:29:04.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.782" endtime="20201030 18:29:04.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.825" endtime="20201030 18:29:05.111"></status>
</kw>
<msg timestamp="20201030 18:29:05.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021104694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021198069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.823" endtime="20201030 18:29:05.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021104694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021198069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.115" endtime="20201030 18:29:05.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.124" endtime="20201030 18:29:05.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.820" endtime="20201030 18:29:05.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.819" endtime="20201030 18:29:05.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.131" level="INFO">${RESULT} = [{'diff': 9.337499999999971e-05}, {'diff': 9.308400000000022e-05}, {'diff': 9.319500000000078e-05}, {'diff': 9.322299999999992e-05}, {'diff': 9.348600000000026e-05}, {'diff': 9.313899999999903e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:05.127" endtime="20201030 18:29:05.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:05.135" level="INFO">${ACCURACY} = {'diff': [9.337499999999971e-05, 9.308400000000022e-05, 9.319500000000078e-05, 9.322299999999992e-05, 9.348600000000026e-05, 9.313899999999903e-05, 9.324999999999958e-05, 9.29720000000002e-05, 9.30689...</msg>
<status status="PASS" starttime="20201030 18:29:05.132" endtime="20201030 18:29:05.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.141" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:29:05.139" endtime="20201030 18:29:05.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.143" level="INFO">VALUE: [9.337499999999971e-05, 9.308400000000022e-05, 9.319500000000078e-05, 9.322299999999992e-05, 9.348600000000026e-05, 9.313899999999903e-05, 9.324999999999958e-05, 9.29720000000002e-05, 9.306899999999771e-05, 9.309700000000032e-05, 9.291600000000191e-05, 9.277800000000169e-05, 9.312499999999946e-05, 9.308400000000022e-05, 9.315300000000207e-05, 9.276399999999865e-05, 9.312499999999946e-05, 9.357000000000115e-05, 9.361100000000039e-05, 9.324999999999958e-05, 9.274999999999908e-05, 9.290200000000234e-05, 9.304099999999857e-05, 9.276399999999865e-05, 9.357000000000115e-05, 9.291700000000139e-05, 9.313899999999903e-05, 9.312499999999946e-05, 9.274999999999908e-05, 9.315300000000207e-05, 9.313799999999955e-05, 9.336100000000014e-05, 9.323600000000001e-05, 9.287499999999921e-05, 9.275000000000255e-05, 9.354100000000254e-05, 9.298599999999976e-05, 9.345800000000112e-05, 9.333400000000047e-05, 9.325000000000305e-05, 9.361199999999986e-05, 9.336100000000014e-05, 9.312499999999946e-05, 9.344400000000155e-05, 9.344400000000155e-05, 9.273599999999951e-05, 9.311099999999989e-05, 9.299999999999933e-05, 9.330500000000186e-05, 9.316700000000164e-05]</msg>
<status status="PASS" starttime="20201030 18:29:05.142" endtime="20201030 18:29:05.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.136" endtime="20201030 18:29:05.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.150" endtime="20201030 18:29:05.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.148" endtime="20201030 18:29:05.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.147" endtime="20201030 18:29:05.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.781" endtime="20201030 18:29:05.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.780" endtime="20201030 18:29:05.170"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.179" endtime="20201030 18:29:05.200"></status>
</kw>
<msg timestamp="20201030 18:29:05.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.178" endtime="20201030 18:29:05.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.202" endtime="20201030 18:29:05.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.204" endtime="20201030 18:29:05.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.175" endtime="20201030 18:29:05.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.173" endtime="20201030 18:29:05.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.214" endtime="20201030 18:29:05.499"></status>
</kw>
<msg timestamp="20201030 18:29:05.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020128736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.212" endtime="20201030 18:29:05.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020128736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.503" endtime="20201030 18:29:05.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.512" endtime="20201030 18:29:05.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.209" endtime="20201030 18:29:05.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.207" endtime="20201030 18:29:05.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.519" level="INFO">${RESULT} = [{'diff': 9.43469999999981e-05}, {'diff': 9.394400000000205e-05}, {'diff': 9.458300000000225e-05}, {'diff': 9.426400000000015e-05}, {'diff': 9.463900000000053e-05}, {'diff': 9.411200000000036e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:05.515" endtime="20201030 18:29:05.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:05.526" level="INFO">${ACCURACY} = {'diff': [9.43469999999981e-05, 9.394400000000205e-05, 9.458300000000225e-05, 9.426400000000015e-05, 9.463900000000053e-05, 9.411200000000036e-05, 9.466699999999967e-05, 9.412499999999699e-05, 9.40419...</msg>
<status status="PASS" starttime="20201030 18:29:05.520" endtime="20201030 18:29:05.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.531" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:29:05.530" endtime="20201030 18:29:05.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.534" level="INFO">VALUE: [9.43469999999981e-05, 9.394400000000205e-05, 9.458300000000225e-05, 9.426400000000015e-05, 9.463900000000053e-05, 9.411200000000036e-05, 9.466699999999967e-05, 9.412499999999699e-05, 9.404199999999904e-05, 9.442999999999951e-05, 9.450000000000083e-05, 9.411100000000089e-05, 9.404099999999957e-05, 9.438900000000028e-05, 9.386099999999717e-05, 9.425000000000058e-05, 9.398600000000076e-05, 9.41529999999996e-05, 9.461099999999792e-05, 9.429199999999929e-05, 9.386099999999717e-05, 9.431999999999843e-05, 9.413900000000003e-05, 9.412500000000046e-05, 9.408299999999828e-05, 9.404099999999957e-05, 9.373600000000051e-05, 9.381899999999846e-05, 9.431899999999896e-05, 9.41529999999996e-05, 9.372200000000094e-05, 9.425000000000058e-05, 9.386100000000064e-05, 9.456999999999868e-05, 9.386100000000064e-05, 9.463899999999706e-05, 9.448700000000074e-05, 9.424999999999711e-05, 9.438899999999681e-05, 9.429199999999929e-05, 9.406900000000218e-05, 9.405499999999914e-05, 9.408300000000175e-05, 9.390299999999935e-05, 9.443099999999899e-05, 9.422200000000144e-05, 9.36529999999991e-05, 9.39590000000011e-05, 9.407000000000165e-05, 9.429100000000329e-05]</msg>
<status status="PASS" starttime="20201030 18:29:05.532" endtime="20201030 18:29:05.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.527" endtime="20201030 18:29:05.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.539" endtime="20201030 18:29:05.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.537" endtime="20201030 18:29:05.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.536" endtime="20201030 18:29:05.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.171" endtime="20201030 18:29:05.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.171" endtime="20201030 18:29:05.560"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.569" endtime="20201030 18:29:05.589"></status>
</kw>
<msg timestamp="20201030 18:29:05.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.567" endtime="20201030 18:29:05.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.591" endtime="20201030 18:29:05.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.593" endtime="20201030 18:29:05.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.564" endtime="20201030 18:29:05.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.562" endtime="20201030 18:29:05.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.603" endtime="20201030 18:29:05.889"></status>
</kw>
<msg timestamp="20201030 18:29:05.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019989528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020085083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.601" endtime="20201030 18:29:05.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019989528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020085083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.894" endtime="20201030 18:29:05.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.902" endtime="20201030 18:29:05.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.598" endtime="20201030 18:29:05.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.597" endtime="20201030 18:29:05.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.909" level="INFO">${RESULT} = [{'diff': 9.555500000000064e-05}, {'diff': 9.549999999999836e-05}, {'diff': 9.481999999999893e-05}, {'diff': 9.508299999999928e-05}, {'diff': 9.556999999999968e-05}, {'diff': 9.495799999999915e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:05.906" endtime="20201030 18:29:05.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:05.913" level="INFO">${ACCURACY} = {'diff': [9.555500000000064e-05, 9.549999999999836e-05, 9.481999999999893e-05, 9.508299999999928e-05, 9.556999999999968e-05, 9.495799999999915e-05, 9.488899999999731e-05, 9.479199999999979e-05, 9.5042...</msg>
<status status="PASS" starttime="20201030 18:29:05.910" endtime="20201030 18:29:05.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.918" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:29:05.917" endtime="20201030 18:29:05.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.920" level="INFO">VALUE: [9.555500000000064e-05, 9.549999999999836e-05, 9.481999999999893e-05, 9.508299999999928e-05, 9.556999999999968e-05, 9.495799999999915e-05, 9.488899999999731e-05, 9.479199999999979e-05, 9.504200000000004e-05, 9.561200000000186e-05, 9.536199999999814e-05, 9.488899999999731e-05, 9.490300000000035e-05, 9.543000000000051e-05, 9.491600000000044e-05, 9.479199999999979e-05, 9.494399999999958e-05, 9.486100000000164e-05, 9.49859999999983e-05, 9.512500000000146e-05, 9.5333999999999e-05, 9.513900000000103e-05, 9.511200000000136e-05, 9.505500000000014e-05, 9.479099999999685e-05, 9.561099999999892e-05, 9.506899999999971e-05, 9.561099999999892e-05, 9.480599999999936e-05, 9.536099999999867e-05, 9.513900000000103e-05, 9.476400000000065e-05, 9.511099999999842e-05, 9.557000000000315e-05, 9.504200000000004e-05, 9.513899999999756e-05, 9.529100000000082e-05, 9.547199999999922e-05, 9.506899999999971e-05, 9.508299999999928e-05, 9.48330000000025e-05, 9.473600000000151e-05, 9.509700000000232e-05, 9.466699999999967e-05, 9.541700000000042e-05, 9.552800000000097e-05, 9.494500000000253e-05, 9.530500000000039e-05, 9.530500000000039e-05, 9.504100000000057e-05]</msg>
<status status="PASS" starttime="20201030 18:29:05.919" endtime="20201030 18:29:05.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.914" endtime="20201030 18:29:05.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.926" endtime="20201030 18:29:05.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.924" endtime="20201030 18:29:05.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.923" endtime="20201030 18:29:05.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.561" endtime="20201030 18:29:05.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.560" endtime="20201030 18:29:05.946"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.955" endtime="20201030 18:29:05.977"></status>
</kw>
<msg timestamp="20201030 18:29:05.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.954" endtime="20201030 18:29:05.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.979" endtime="20201030 18:29:05.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.981" endtime="20201030 18:29:05.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.951" endtime="20201030 18:29:05.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.949" endtime="20201030 18:29:05.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.991" endtime="20201030 18:29:06.277"></status>
</kw>
<msg timestamp="20201030 18:29:06.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020985722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021081681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.989" endtime="20201030 18:29:06.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020985722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021081681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.282" endtime="20201030 18:29:06.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.291" endtime="20201030 18:29:06.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.986" endtime="20201030 18:29:06.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.984" endtime="20201030 18:29:06.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.297" level="INFO">${RESULT} = [{'diff': 9.59590000000031e-05}, {'diff': 9.574999999999861e-05}, {'diff': 9.624999999999911e-05}, {'diff': 9.644400000000108e-05}, {'diff': 9.618000000000126e-05}, {'diff': 9.622199999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:06.294" endtime="20201030 18:29:06.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.302" level="INFO">${ACCURACY} = {'diff': [9.59590000000031e-05, 9.574999999999861e-05, 9.624999999999911e-05, 9.644400000000108e-05, 9.618000000000126e-05, 9.622199999999997e-05, 9.662499999999949e-05, 9.581900000000046e-05, 9.59170...</msg>
<status status="PASS" starttime="20201030 18:29:06.298" endtime="20201030 18:29:06.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.306" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.305" endtime="20201030 18:29:06.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.309" level="INFO">VALUE: [9.59590000000031e-05, 9.574999999999861e-05, 9.624999999999911e-05, 9.644400000000108e-05, 9.618000000000126e-05, 9.622199999999997e-05, 9.662499999999949e-05, 9.581900000000046e-05, 9.591700000000092e-05, 9.600000000000233e-05, 9.64859999999998e-05, 9.604200000000104e-05, 9.623599999999954e-05, 9.569499999999981e-05, 9.634799999999957e-05, 9.572299999999895e-05, 9.601299999999896e-05, 9.579100000000132e-05, 9.613899999999856e-05, 9.599999999999886e-05, 9.633300000000053e-05, 9.592999999999755e-05, 9.591700000000092e-05, 9.587499999999874e-05, 9.63470000000001e-05, 9.574999999999861e-05, 9.602699999999853e-05, 9.591699999999745e-05, 9.652699999999903e-05, 9.594400000000058e-05, 9.641599999999848e-05, 9.606900000000071e-05, 9.624999999999911e-05, 9.593000000000101e-05, 9.662499999999949e-05, 9.641699999999795e-05, 9.620899999999988e-05, 9.647200000000022e-05, 9.66530000000021e-05, 9.655600000000111e-05, 9.562500000000196e-05, 9.599999999999886e-05, 9.661099999999992e-05, 9.63470000000001e-05, 9.66530000000021e-05, 9.659700000000035e-05, 9.62080000000004e-05, 9.569499999999981e-05, 9.626400000000215e-05, 9.572199999999947e-05]</msg>
<status status="PASS" starttime="20201030 18:29:06.307" endtime="20201030 18:29:06.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.302" endtime="20201030 18:29:06.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:06.315" endtime="20201030 18:29:06.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.313" endtime="20201030 18:29:06.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.312" endtime="20201030 18:29:06.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.947" endtime="20201030 18:29:06.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.947" endtime="20201030 18:29:06.336"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.345" endtime="20201030 18:29:06.366"></status>
</kw>
<msg timestamp="20201030 18:29:06.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.343" endtime="20201030 18:29:06.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.368" endtime="20201030 18:29:06.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.370" endtime="20201030 18:29:06.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.340" endtime="20201030 18:29:06.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.338" endtime="20201030 18:29:06.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.380" endtime="20201030 18:29:06.666"></status>
</kw>
<msg timestamp="20201030 18:29:06.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019969833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020066667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.378" endtime="20201030 18:29:06.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019969833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020066667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.671" endtime="20201030 18:29:06.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.679" endtime="20201030 18:29:06.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.375" endtime="20201030 18:29:06.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.374" endtime="20201030 18:29:06.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.686" level="INFO">${RESULT} = [{'diff': 9.68340000000005e-05}, {'diff': 9.697200000000072e-05}, {'diff': 9.74019999999999e-05}, {'diff': 9.733300000000153e-05}, {'diff': 9.688799999999984e-05}, {'diff': 9.751399999999993e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:06.683" endtime="20201030 18:29:06.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.691" level="INFO">${ACCURACY} = {'diff': [9.68340000000005e-05, 9.697200000000072e-05, 9.74019999999999e-05, 9.733300000000153e-05, 9.688799999999984e-05, 9.751399999999993e-05, 9.729099999999935e-05, 9.723600000000054e-05, 9.761100...</msg>
<status status="PASS" starttime="20201030 18:29:06.687" endtime="20201030 18:29:06.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.696" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.695" endtime="20201030 18:29:06.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.698" level="INFO">VALUE: [9.68340000000005e-05, 9.697200000000072e-05, 9.74019999999999e-05, 9.733300000000153e-05, 9.688799999999984e-05, 9.751399999999993e-05, 9.729099999999935e-05, 9.723600000000054e-05, 9.761100000000092e-05, 9.712499999999999e-05, 9.737499999999677e-05, 9.693099999999802e-05, 9.687499999999974e-05, 9.718100000000174e-05, 9.73609999999972e-05, 9.715199999999966e-05, 9.744400000000208e-05, 9.711100000000042e-05, 9.713899999999956e-05, 9.694399999999812e-05, 9.729099999999935e-05, 9.70140000000029e-05, 9.734699999999763e-05, 9.677800000000222e-05, 9.673600000000004e-05, 9.743099999999852e-05, 9.686100000000017e-05, 9.708300000000128e-05, 9.669400000000133e-05, 9.694400000000158e-05, 9.693000000000201e-05, 9.709700000000085e-05, 9.755599999999864e-05, 9.716700000000217e-05, 9.750000000000036e-05, 9.680600000000136e-05, 9.744500000000156e-05, 9.73059999999984e-05, 9.741700000000242e-05, 9.737500000000024e-05, 9.750000000000036e-05, 9.663799999999959e-05, 9.674999999999961e-05, 9.745800000000165e-05, 9.672200000000047e-05, 9.747199999999775e-05, 9.755599999999864e-05, 9.704200000000204e-05, 9.686100000000017e-05, 9.737500000000024e-05]</msg>
<status status="PASS" starttime="20201030 18:29:06.697" endtime="20201030 18:29:06.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.692" endtime="20201030 18:29:06.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:06.704" endtime="20201030 18:29:06.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.702" endtime="20201030 18:29:06.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.701" endtime="20201030 18:29:06.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.336" endtime="20201030 18:29:06.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.336" endtime="20201030 18:29:06.724"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.733" endtime="20201030 18:29:06.754"></status>
</kw>
<msg timestamp="20201030 18:29:06.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.732" endtime="20201030 18:29:06.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.755" endtime="20201030 18:29:06.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.758" endtime="20201030 18:29:06.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.729" endtime="20201030 18:29:06.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.727" endtime="20201030 18:29:06.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.767" endtime="20201030 18:29:07.054"></status>
</kw>
<msg timestamp="20201030 18:29:07.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020074389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020172417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.766" endtime="20201030 18:29:07.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020074389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020172417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.059" endtime="20201030 18:29:07.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.067" endtime="20201030 18:29:07.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.763" endtime="20201030 18:29:07.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.761" endtime="20201030 18:29:07.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.074" level="INFO">${RESULT} = [{'diff': 9.8028e-05}, {'diff': 9.801300000000096e-05}, {'diff': 9.848599999999832e-05}, {'diff': 9.801400000000043e-05}, {'diff': 9.775000000000061e-05}, {'diff': 9.787499999999727e-05}, {'diff': 9.8...</msg>
<status status="PASS" starttime="20201030 18:29:07.071" endtime="20201030 18:29:07.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.079" level="INFO">${ACCURACY} = {'diff': [9.8028e-05, 9.801300000000096e-05, 9.848599999999832e-05, 9.801400000000043e-05, 9.775000000000061e-05, 9.787499999999727e-05, 9.837500000000124e-05, 9.791699999999945e-05, 9.800000000000086...</msg>
<status status="PASS" starttime="20201030 18:29:07.075" endtime="20201030 18:29:07.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.083" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.082" endtime="20201030 18:29:07.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.086" level="INFO">VALUE: [9.8028e-05, 9.801300000000096e-05, 9.848599999999832e-05, 9.801400000000043e-05, 9.775000000000061e-05, 9.787499999999727e-05, 9.837500000000124e-05, 9.791699999999945e-05, 9.800000000000086e-05, 9.798599999999782e-05, 9.787500000000074e-05, 9.804199999999957e-05, 9.788799999999737e-05, 9.794399999999912e-05, 9.781900000000246e-05, 9.845800000000265e-05, 9.836100000000167e-05, 9.794399999999912e-05, 9.806899999999924e-05, 9.77080000000019e-05, 9.7721999999998e-05, 9.855599999999964e-05, 9.776400000000018e-05, 9.823600000000154e-05, 9.825000000000111e-05, 9.855500000000017e-05, 9.794399999999912e-05, 9.783299999999856e-05, 9.788900000000031e-05, 9.86670000000002e-05, 9.820799999999894e-05, 9.792999999999955e-05, 9.788900000000031e-05, 9.85280000000005e-05, 9.78059999999989e-05, 9.862499999999802e-05, 9.773599999999757e-05, 9.76799999999993e-05, 9.861099999999845e-05, 9.79860000000013e-05, 9.84999999999979e-05, 9.823600000000154e-05, 9.837500000000124e-05, 9.800000000000086e-05, 9.791699999999945e-05, 9.819500000000231e-05, 9.777799999999975e-05, 9.823600000000154e-05, 9.805600000000261e-05, 9.822299999999798e-05]</msg>
<status status="PASS" starttime="20201030 18:29:07.084" endtime="20201030 18:29:07.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.079" endtime="20201030 18:29:07.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.095" endtime="20201030 18:29:07.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.094" endtime="20201030 18:29:07.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.093" endtime="20201030 18:29:07.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.725" endtime="20201030 18:29:07.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.725" endtime="20201030 18:29:07.116"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.125" endtime="20201030 18:29:07.148"></status>
</kw>
<msg timestamp="20201030 18:29:07.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.124" endtime="20201030 18:29:07.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.149" endtime="20201030 18:29:07.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.152" endtime="20201030 18:29:07.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.121" endtime="20201030 18:29:07.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.119" endtime="20201030 18:29:07.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.162" endtime="20201030 18:29:07.450"></status>
</kw>
<msg timestamp="20201030 18:29:07.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021121528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021220583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.160" endtime="20201030 18:29:07.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021121528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021220583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.454" endtime="20201030 18:29:07.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.463" endtime="20201030 18:29:07.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.157" endtime="20201030 18:29:07.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.155" endtime="20201030 18:29:07.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.469" level="INFO">${RESULT} = [{'diff': 9.905500000000067e-05}, {'diff': 9.866600000000073e-05}, {'diff': 9.944400000000062e-05}, {'diff': 9.954099999999813e-05}, {'diff': 9.887499999999827e-05}, {'diff': 9.869399999999987e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:07.466" endtime="20201030 18:29:07.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.474" level="INFO">${ACCURACY} = {'diff': [9.905500000000067e-05, 9.866600000000073e-05, 9.944400000000062e-05, 9.954099999999813e-05, 9.887499999999827e-05, 9.869399999999987e-05, 9.927799999999778e-05, 9.897199999999926e-05, 9.9042...</msg>
<status status="PASS" starttime="20201030 18:29:07.471" endtime="20201030 18:29:07.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.478" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.477" endtime="20201030 18:29:07.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.481" level="INFO">VALUE: [9.905500000000067e-05, 9.866600000000073e-05, 9.944400000000062e-05, 9.954099999999813e-05, 9.887499999999827e-05, 9.869399999999987e-05, 9.927799999999778e-05, 9.897199999999926e-05, 9.904200000000057e-05, 9.931899999999702e-05, 9.918100000000027e-05, 9.895899999999916e-05, 9.86800000000003e-05, 9.884699999999913e-05, 9.962499999999902e-05, 9.929200000000082e-05, 9.873599999999857e-05, 9.919499999999984e-05, 9.876400000000118e-05, 9.879200000000032e-05, 9.934699999999963e-05, 9.868099999999977e-05, 9.894499999999959e-05, 9.951299999999899e-05, 9.963899999999859e-05, 9.943000000000105e-05, 9.934699999999963e-05, 9.905500000000067e-05, 9.891600000000098e-05, 9.927800000000125e-05, 9.909799999999885e-05, 9.88609999999987e-05, 9.919499999999984e-05, 9.943100000000052e-05, 9.947299999999923e-05, 9.877800000000075e-05, 9.908399999999928e-05, 9.966699999999773e-05, 9.923600000000254e-05, 9.925000000000211e-05, 9.909699999999938e-05, 9.926399999999821e-05, 9.906999999999971e-05, 9.911099999999895e-05, 9.898599999999882e-05, 9.934699999999963e-05, 9.876300000000171e-05, 9.940300000000138e-05, 9.915300000000113e-05, 9.89999999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:29:07.480" endtime="20201030 18:29:07.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.475" endtime="20201030 18:29:07.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.487" endtime="20201030 18:29:07.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.485" endtime="20201030 18:29:07.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.484" endtime="20201030 18:29:07.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.117" endtime="20201030 18:29:07.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.117" endtime="20201030 18:29:07.508"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.517" endtime="20201030 18:29:07.538"></status>
</kw>
<msg timestamp="20201030 18:29:07.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.515" endtime="20201030 18:29:07.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.540" endtime="20201030 18:29:07.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.542" endtime="20201030 18:29:07.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.513" endtime="20201030 18:29:07.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.510" endtime="20201030 18:29:07.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.552" endtime="20201030 18:29:07.837"></status>
</kw>
<msg timestamp="20201030 18:29:07.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02012, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02022, 'source': 'DUT_IC', 'event': 'FALLING', '...</msg>
<status status="PASS" starttime="20201030 18:29:07.550" endtime="20201030 18:29:07.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02012, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02022, 'source': 'DUT_IC', 'event': 'FALLING', '...</msg>
<status status="PASS" starttime="20201030 18:29:07.841" endtime="20201030 18:29:07.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.850" endtime="20201030 18:29:07.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.547" endtime="20201030 18:29:07.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.545" endtime="20201030 18:29:07.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.856" level="INFO">${RESULT} = [{'diff': 9.99999999999994e-05}, {'diff': 0.00010055500000000217}, {'diff': 9.973599999999957e-05}, {'diff': 0.0001003610000000002}, {'diff': 0.0001004999999999999}, {'diff': 9.974999999999914e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:07.853" endtime="20201030 18:29:07.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.861" level="INFO">${ACCURACY} = {'diff': [9.99999999999994e-05, 0.00010055500000000217, 9.973599999999957e-05, 0.0001003610000000002, 0.0001004999999999999, 9.974999999999914e-05, 0.00010059800000000035, 9.980500000000142e-05, 0.000...</msg>
<status status="PASS" starttime="20201030 18:29:07.857" endtime="20201030 18:29:07.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.866" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.865" endtime="20201030 18:29:07.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.869" level="INFO">VALUE: [9.99999999999994e-05, 0.00010055500000000217, 9.973599999999957e-05, 0.0001003610000000002, 0.0001004999999999999, 9.974999999999914e-05, 0.00010059800000000035, 9.980500000000142e-05, 0.00010055599999999817, 9.977699999999881e-05, 0.00010023600000000008, 0.00010024999999999964, 0.00010002799999999853, 9.988900000000231e-05, 9.987499999999927e-05, 0.00010029099999999888, 9.9722e-05, 9.970800000000044e-05, 0.00010011099999999995, 0.00010034700000000063, 0.00010045800000000119, 9.991600000000198e-05, 0.00010056899999999827, 9.977800000000175e-05, 9.977799999999828e-05, 0.00010018100000000127, 0.00010007000000000071, 0.00010029199999999835, 9.976399999999871e-05, 9.966699999999773e-05, 0.00010063800000000012, 0.00010013899999999909, 0.00010042999999999858, 9.973599999999957e-05, 9.980499999999795e-05, 0.0001001939999999979, 0.00010047199999999729, 9.973599999999957e-05, 0.00010012499999999952, 0.00010019500000000084, 0.00010041699999999848, 9.965300000000163e-05, 0.00010063800000000012, 0.00010031900000000149, 0.00010051399999999946, 0.00010012499999999952, 0.00010023600000000008, 0.00010030499999999845, 0.0001001670000000017, 0.00010044499999999762]</msg>
<status status="PASS" starttime="20201030 18:29:07.867" endtime="20201030 18:29:07.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.862" endtime="20201030 18:29:07.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.874" endtime="20201030 18:29:07.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.872" endtime="20201030 18:29:07.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.871" endtime="20201030 18:29:07.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.509" endtime="20201030 18:29:07.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.508" endtime="20201030 18:29:07.895"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.904" endtime="20201030 18:29:07.925"></status>
</kw>
<msg timestamp="20201030 18:29:07.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.902" endtime="20201030 18:29:07.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.926" endtime="20201030 18:29:07.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.929" endtime="20201030 18:29:07.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.899" endtime="20201030 18:29:07.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.897" endtime="20201030 18:29:07.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.938" endtime="20201030 18:29:08.226"></status>
</kw>
<msg timestamp="20201030 18:29:08.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020111694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.937" endtime="20201030 18:29:08.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020111694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.230" endtime="20201030 18:29:08.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.238" endtime="20201030 18:29:08.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.934" endtime="20201030 18:29:08.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.932" endtime="20201030 18:29:08.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.245" level="INFO">${RESULT} = [{'diff': 0.00010120900000000141}, {'diff': 0.0001013060000000024}, {'diff': 0.0001013749999999973}, {'diff': 0.00010086099999999723}, {'diff': 0.00010077799999999928}, {'diff': 0.000101416}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:29:08.242" endtime="20201030 18:29:08.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.249" level="INFO">${ACCURACY} = {'diff': [0.00010120900000000141, 0.0001013060000000024, 0.0001013749999999973, 0.00010086099999999723, 0.00010077799999999928, 0.000101416, 0.0001015549999999997, 0.00010133300000000206, 0.0001015830...</msg>
<status status="PASS" starttime="20201030 18:29:08.246" endtime="20201030 18:29:08.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.254" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.253" endtime="20201030 18:29:08.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.256" level="INFO">VALUE: [0.00010120900000000141, 0.0001013060000000024, 0.0001013749999999973, 0.00010086099999999723, 0.00010077799999999928, 0.000101416, 0.0001015549999999997, 0.00010133300000000206, 0.00010158300000000231, 0.00010125000000000065, 0.00010073600000000058, 0.00010097200000000126, 0.00010158400000000178, 0.00010137500000000077, 0.00010072300000000048, 0.00010156899999999927, 0.00010062500000000002, 0.00010099999999999693, 0.0001015000000000009, 0.00010105599999999867, 0.00010116599999999976, 0.00010065299999999916, 0.0001007359999999971, 0.0001015000000000009, 0.00010129199999999935, 0.00010163900000000059, 0.00010120799999999847, 0.00010088899999999984, 0.00010133300000000206, 0.00010109699999999791, 0.00010162500000000102, 0.00010143099999999905, 0.00010148600000000133, 0.0001015419999999996, 0.0001015419999999996, 0.00010151400000000046, 0.00010080599999999842, 0.00010090300000000288, 0.00010072299999999701, 0.00010067999999999883, 0.00010084700000000113, 0.00010094399999999865, 0.00010093000000000255, 0.00010136099999999773, 0.00010144399999999915, 0.00010148599999999786, 0.00010111100000000095, 0.0001006809999999983, 0.00010136099999999773, 0.0001013199999999985]</msg>
<status status="PASS" starttime="20201030 18:29:08.255" endtime="20201030 18:29:08.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.250" endtime="20201030 18:29:08.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.262" endtime="20201030 18:29:08.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.260" endtime="20201030 18:29:08.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.259" endtime="20201030 18:29:08.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.896" endtime="20201030 18:29:08.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.895" endtime="20201030 18:29:08.283"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.292" endtime="20201030 18:29:08.314"></status>
</kw>
<msg timestamp="20201030 18:29:08.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.290" endtime="20201030 18:29:08.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.315" endtime="20201030 18:29:08.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.318" endtime="20201030 18:29:08.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.287" endtime="20201030 18:29:08.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.285" endtime="20201030 18:29:08.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.327" endtime="20201030 18:29:08.613"></status>
</kw>
<msg timestamp="20201030 18:29:08.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021171222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02127325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:08.326" endtime="20201030 18:29:08.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021171222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02127325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:08.617" endtime="20201030 18:29:08.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.625" endtime="20201030 18:29:08.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.323" endtime="20201030 18:29:08.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.321" endtime="20201030 18:29:08.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.632" level="INFO">${RESULT} = [{'diff': 0.00010202800000000053}, {'diff': 0.0001023199999999995}, {'diff': 0.00010259699999999941}, {'diff': 0.0001020420000000001}, {'diff': 0.00010230599999999992}, {'diff': 0.0001021809999999998}...</msg>
<status status="PASS" starttime="20201030 18:29:08.629" endtime="20201030 18:29:08.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.636" level="INFO">${ACCURACY} = {'diff': [0.00010202800000000053, 0.0001023199999999995, 0.00010259699999999941, 0.0001020420000000001, 0.00010230599999999992, 0.0001021809999999998, 0.00010213799999999815, 0.00010187500000000127, 0...</msg>
<status status="PASS" starttime="20201030 18:29:08.633" endtime="20201030 18:29:08.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.641" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.639" endtime="20201030 18:29:08.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.643" level="INFO">VALUE: [0.00010202800000000053, 0.0001023199999999995, 0.00010259699999999941, 0.0001020420000000001, 0.00010230599999999992, 0.0001021809999999998, 0.00010213799999999815, 0.00010187500000000127, 0.00010204100000000063, 0.00010202700000000106, 0.0001020139999999975, 0.00010170800000000244, 0.00010248600000000233, 0.00010193000000000008, 0.00010163900000000059, 0.0001023199999999995, 0.0001023199999999995, 0.0001018749999999978, 0.00010230500000000045, 0.00010249999999999843, 0.00010247199999999929, 0.0001017359999999981, 0.0001018610000000017, 0.00010226400000000122, 0.00010197299999999826, 0.0001023749999999983, 0.000101819999999999, 0.00010198599999999836, 0.00010245899999999919, 0.00010223700000000155, 0.00010231900000000002, 0.00010187500000000127, 0.0001021939999999999, 0.00010216600000000076, 0.00010227800000000078, 0.00010230599999999992, 0.00010241700000000048, 0.00010243100000000005, 0.00010169500000000234, 0.00010247199999999929, 0.00010237500000000177, 0.0001016809999999993, 0.0001023749999999983, 0.0001023749999999983, 0.00010166600000000026, 0.00010222199999999904, 0.00010225000000000165, 0.00010199999999999793, 0.00010229200000000035, 0.00010254199999999714]</msg>
<status status="PASS" starttime="20201030 18:29:08.642" endtime="20201030 18:29:08.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.637" endtime="20201030 18:29:08.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.649" endtime="20201030 18:29:08.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.647" endtime="20201030 18:29:08.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.646" endtime="20201030 18:29:08.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.283" endtime="20201030 18:29:08.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.283" endtime="20201030 18:29:08.670"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.679" endtime="20201030 18:29:08.700"></status>
</kw>
<msg timestamp="20201030 18:29:08.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.677" endtime="20201030 18:29:08.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.702" endtime="20201030 18:29:08.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.704" endtime="20201030 18:29:08.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.675" endtime="20201030 18:29:08.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.672" endtime="20201030 18:29:08.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.714" endtime="20201030 18:29:09.000"></status>
</kw>
<msg timestamp="20201030 18:29:09.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.712" endtime="20201030 18:29:09.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.004" endtime="20201030 18:29:09.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.013" endtime="20201030 18:29:09.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.709" endtime="20201030 18:29:09.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.708" endtime="20201030 18:29:09.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.020" level="INFO">${RESULT} = [{'diff': 0.00010331900000000102}, {'diff': 0.0001028749999999988}, {'diff': 0.00010276399999999825}, {'diff': 0.0001026810000000003}, {'diff': 0.00010311099999999948}, {'diff': 0.0001035420000000016}...</msg>
<status status="PASS" starttime="20201030 18:29:09.016" endtime="20201030 18:29:09.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.027" level="INFO">${ACCURACY} = {'diff': [0.00010331900000000102, 0.0001028749999999988, 0.00010276399999999825, 0.0001026810000000003, 0.00010311099999999948, 0.0001035420000000016, 0.00010336099999999973, 0.0001033749999999993, 0....</msg>
<status status="PASS" starttime="20201030 18:29:09.021" endtime="20201030 18:29:09.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.032" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.031" endtime="20201030 18:29:09.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.034" level="INFO">VALUE: [0.00010331900000000102, 0.0001028749999999988, 0.00010276399999999825, 0.0001026810000000003, 0.00010311099999999948, 0.0001035420000000016, 0.00010336099999999973, 0.0001033749999999993, 0.0001026940000000004, 0.00010268000000000083, 0.00010306900000000077, 0.00010343000000000158, 0.00010305600000000067, 0.0001028749999999988, 0.00010349999999999943, 0.00010274999999999868, 0.00010275000000000215, 0.00010288900000000184, 0.00010366599999999879, 0.0001033480000000031, 0.00010280500000000095, 0.00010340300000000191, 0.00010306900000000077, 0.00010297199999999979, 0.00010340299999999844, 0.00010333400000000006, 0.00010343099999999758, 0.00010330600000000092, 0.0001035420000000016, 0.00010318099999999733, 0.00010348599999999986, 0.00010329100000000188, 0.00010359700000000041, 0.00010315199999999872, 0.00010333299999999712, 0.00010297200000000326, 0.00010355600000000117, 0.00010336099999999973, 0.0001029160000000015, 0.0001028749999999988, 0.00010305600000000067, 0.00010270799999999997, 0.0001027359999999991, 0.00010277699999999834, 0.00010276400000000172, 0.00010309699999999991, 0.00010268000000000083, 0.00010283300000000009, 0.00010330600000000092, 0.00010338899999999887]</msg>
<status status="PASS" starttime="20201030 18:29:09.033" endtime="20201030 18:29:09.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.028" endtime="20201030 18:29:09.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.040" endtime="20201030 18:29:09.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.038" endtime="20201030 18:29:09.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.037" endtime="20201030 18:29:09.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.671" endtime="20201030 18:29:09.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.670" endtime="20201030 18:29:09.060"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.070" endtime="20201030 18:29:09.090"></status>
</kw>
<msg timestamp="20201030 18:29:09.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.068" endtime="20201030 18:29:09.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.092" endtime="20201030 18:29:09.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.095" endtime="20201030 18:29:09.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.065" endtime="20201030 18:29:09.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.063" endtime="20201030 18:29:09.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.104" endtime="20201030 18:29:09.391"></status>
</kw>
<msg timestamp="20201030 18:29:09.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020074458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020178417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.102" endtime="20201030 18:29:09.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020074458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020178417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.396" endtime="20201030 18:29:09.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.404" endtime="20201030 18:29:09.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.100" endtime="20201030 18:29:09.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.098" endtime="20201030 18:29:09.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.411" level="INFO">${RESULT} = [{'diff': 0.00010395900000000069}, {'diff': 0.00010430600000000192}, {'diff': 0.00010415300000000266}, {'diff': 0.00010386100000000023}, {'diff': 0.00010391599999999904}, {'diff': 0.000103679999999998...</msg>
<status status="PASS" starttime="20201030 18:29:09.408" endtime="20201030 18:29:09.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.415" level="INFO">${ACCURACY} = {'diff': [0.00010395900000000069, 0.00010430600000000192, 0.00010415300000000266, 0.00010386100000000023, 0.00010391599999999904, 0.00010367999999999836, 0.0001043750000000003, 0.00010429199999999889,...</msg>
<status status="PASS" starttime="20201030 18:29:09.412" endtime="20201030 18:29:09.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.420" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.418" endtime="20201030 18:29:09.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.422" level="INFO">VALUE: [0.00010395900000000069, 0.00010430600000000192, 0.00010415300000000266, 0.00010386100000000023, 0.00010391599999999904, 0.00010367999999999836, 0.0001043750000000003, 0.00010429199999999889, 0.00010461100000000098, 0.00010452799999999957, 0.00010443100000000205, 0.00010430600000000192, 0.0001040139999999995, 0.00010405600000000167, 0.00010412500000000005, 0.000104207999999998, 0.0001037360000000001, 0.00010434700000000116, 0.00010422199999999757, 0.00010431899999999855, 0.00010436100000000073, 0.0001038749999999998, 0.00010393100000000155, 0.00010412500000000005, 0.00010444500000000162, 0.00010393100000000155, 0.00010461200000000045, 0.0001036940000000014, 0.00010370800000000097, 0.0001040420000000021, 0.00010431900000000202, 0.00010449999999999696, 0.00010395900000000069, 0.00010380600000000142, 0.00010397200000000079, 0.00010450000000000043, 0.0001043880000000004, 0.00010431900000000202, 0.00010384700000000066, 0.00010429099999999941, 0.00010433300000000159, 0.0001043750000000003, 0.00010411100000000048, 0.00010408300000000134, 0.00010413899999999962, 0.00010404099999999916, 0.00010463900000000012, 0.00010399999999999993, 0.00010458299999999837, 0.00010390199999999947]</msg>
<status status="PASS" starttime="20201030 18:29:09.421" endtime="20201030 18:29:09.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.416" endtime="20201030 18:29:09.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.427" endtime="20201030 18:29:09.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.426" endtime="20201030 18:29:09.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.424" endtime="20201030 18:29:09.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.061" endtime="20201030 18:29:09.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.061" endtime="20201030 18:29:09.448"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.457" endtime="20201030 18:29:09.478"></status>
</kw>
<msg timestamp="20201030 18:29:09.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.455" endtime="20201030 18:29:09.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.480" endtime="20201030 18:29:09.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.482" endtime="20201030 18:29:09.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.453" endtime="20201030 18:29:09.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.451" endtime="20201030 18:29:09.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.492" endtime="20201030 18:29:09.778"></status>
</kw>
<msg timestamp="20201030 18:29:09.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021143347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021248028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.490" endtime="20201030 18:29:09.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021143347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021248028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.782" endtime="20201030 18:29:09.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.790" endtime="20201030 18:29:09.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.487" endtime="20201030 18:29:09.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.486" endtime="20201030 18:29:09.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.797" level="INFO">${RESULT} = [{'diff': 0.00010468099999999883}, {'diff': 0.00010540300000000044}, {'diff': 0.0001052629999999978}, {'diff': 0.00010543099999999958}, {'diff': 0.00010466600000000326}, {'diff': 0.0001049020000000004...</msg>
<status status="PASS" starttime="20201030 18:29:09.794" endtime="20201030 18:29:09.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.801" level="INFO">${ACCURACY} = {'diff': [0.00010468099999999883, 0.00010540300000000044, 0.0001052629999999978, 0.00010543099999999958, 0.00010466600000000326, 0.00010490200000000047, 0.00010559700000000241, 0.00010480499999999948,...</msg>
<status status="PASS" starttime="20201030 18:29:09.798" endtime="20201030 18:29:09.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.806" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.804" endtime="20201030 18:29:09.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.808" level="INFO">VALUE: [0.00010468099999999883, 0.00010540300000000044, 0.0001052629999999978, 0.00010543099999999958, 0.00010466600000000326, 0.00010490200000000047, 0.00010559700000000241, 0.00010480499999999948, 0.00010555500000000023, 0.00010494400000000265, 0.00010536099999999826, 0.00010537499999999783, 0.0001053200000000025, 0.00010559799999999842, 0.00010525000000000118, 0.00010536100000000173, 0.00010529100000000041, 0.00010517999999999986, 0.00010494399999999918, 0.00010554100000000066, 0.00010476400000000025, 0.00010505600000000268, 0.00010509699999999844, 0.00010543100000000305, 0.00010486099999999776, 0.00010498700000000083, 0.00010511100000000148, 0.00010508399999999835, 0.00010525000000000118, 0.00010475000000000068, 0.00010491700000000298, 0.00010511099999999801, 0.00010534700000000216, 0.00010523599999999814, 0.00010494499999999865, 0.00010562500000000155, 0.00010512500000000105, 0.00010490299999999994, 0.0001053750000000013, 0.0001053750000000013, 0.00010500000000000093, 0.00010530499999999998, 0.00010490299999999994, 0.0001052360000000016, 0.00010566700000000026, 0.00010538900000000087, 0.00010520900000000194, 0.00010547199999999882, 0.00010529199999999989, 0.00010498700000000083]</msg>
<status status="PASS" starttime="20201030 18:29:09.807" endtime="20201030 18:29:09.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.802" endtime="20201030 18:29:09.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.814" endtime="20201030 18:29:09.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.813" endtime="20201030 18:29:09.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.811" endtime="20201030 18:29:09.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.449" endtime="20201030 18:29:09.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.448" endtime="20201030 18:29:09.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.184" endtime="20201030 18:29:09.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.839" endtime="20201030 18:29:09.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.838" endtime="20201030 18:29:09.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.836" endtime="20201030 18:29:09.860"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:31.111" endtime="20201030 18:29:09.860" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.867" endtime="20201030 18:29:09.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.865" endtime="20201030 18:29:09.887"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.900" endtime="20201030 18:29:09.918"></status>
</kw>
<msg timestamp="20201030 18:29:09.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.899" endtime="20201030 18:29:09.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.920" endtime="20201030 18:29:09.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.924" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:09.922" endtime="20201030 18:29:09.925"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:09.896" endtime="20201030 18:29:09.925"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:09.894" endtime="20201030 18:29:09.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.892" endtime="20201030 18:29:09.926"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:09.930" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:09.930" endtime="20201030 18:29:09.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.927" endtime="20201030 18:29:09.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.891" endtime="20201030 18:29:09.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.891" endtime="20201030 18:29:09.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.932" endtime="20201030 18:29:09.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.889" endtime="20201030 18:29:09.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.887" endtime="20201030 18:29:09.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.864" endtime="20201030 18:29:09.935"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.946" endtime="20201030 18:29:09.963"></status>
</kw>
<msg timestamp="20201030 18:29:09.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.944" endtime="20201030 18:29:09.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.965" endtime="20201030 18:29:09.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.967" endtime="20201030 18:29:09.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.942" endtime="20201030 18:29:09.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.938" endtime="20201030 18:29:09.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.977" endtime="20201030 18:29:10.261"></status>
</kw>
<msg timestamp="20201030 18:29:10.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070065569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070089569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.975" endtime="20201030 18:29:10.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070065569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070089569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.265" endtime="20201030 18:29:10.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.274" endtime="20201030 18:29:10.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.972" endtime="20201030 18:29:10.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.971" endtime="20201030 18:29:10.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.281" level="INFO">${RESULT} = [{'diff': 2.4000000000010124e-05}, {'diff': 5.555999999989902e-06}, {'diff': 5.542000000011149e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.02800000000514e-06}, {'diff': 5.541999999997271e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:29:10.277" endtime="20201030 18:29:10.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.286" level="INFO">${ACCURACY} = {'diff': [2.4000000000010124e-05, 5.555999999989902e-06, 5.542000000011149e-06, 6.0689999999974376e-06, 6.02800000000514e-06, 5.541999999997271e-06, 6.0000000000060005e-06, 6.02800000000514e-06, 5.541...</msg>
<status status="PASS" starttime="20201030 18:29:10.282" endtime="20201030 18:29:10.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.290" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.289" endtime="20201030 18:29:10.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.293" level="INFO">VALUE: [2.4000000000010124e-05, 5.555999999989902e-06, 5.542000000011149e-06, 6.0689999999974376e-06, 6.02800000000514e-06, 5.541999999997271e-06, 6.0000000000060005e-06, 6.02800000000514e-06, 5.541999999997271e-06, 5.55600000000378e-06, 6.0689999999974376e-06, 5.541999999997271e-06, 6.054999999990929e-06, 5.471999999992483e-06, 6.0550000000048065e-06, 6.069999999996911e-06, 5.541999999997271e-06, 5.55600000000378e-06, 5.611000000002586e-06, 6.055999999990402e-06, 5.5550000000043065e-06, 6.569999999997411e-06, 6.055999999990402e-06, 6.054999999990929e-06, 5.596999999996077e-06, 5.55600000000378e-06, 5.972000000006861e-06, 6.083999999989542e-06, 6.042000000011649e-06, 5.540999999997798e-06, 5.541999999997271e-06, 6.0829999999900686e-06, 5.5689999999969375e-06, 6.0550000000048065e-06, 5.611000000002586e-06, 5.5550000000043065e-06, 5.540999999997798e-06, 5.52800000000464e-06, 6.0410000000121755e-06, 5.555999999989902e-06, 5.569000000010815e-06, 6.040999999998298e-06, 5.540999999997798e-06, 5.5139999999981315e-06, 6.02800000000514e-06, 5.541999999997271e-06, 6.0550000000048065e-06, 5.541999999997271e-06, 5.5550000000043065e-06, 6.05600000000428e-06]</msg>
<status status="PASS" starttime="20201030 18:29:10.292" endtime="20201030 18:29:10.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.287" endtime="20201030 18:29:10.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.298" endtime="20201030 18:29:10.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.296" endtime="20201030 18:29:10.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.295" endtime="20201030 18:29:10.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.937" endtime="20201030 18:29:10.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.936" endtime="20201030 18:29:10.319"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.328" endtime="20201030 18:29:10.345"></status>
</kw>
<msg timestamp="20201030 18:29:10.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.326" endtime="20201030 18:29:10.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.346" endtime="20201030 18:29:10.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.349" endtime="20201030 18:29:10.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.324" endtime="20201030 18:29:10.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.321" endtime="20201030 18:29:10.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.358" endtime="20201030 18:29:10.642"></status>
</kw>
<msg timestamp="20201030 18:29:10.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020746292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020752847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.357" endtime="20201030 18:29:10.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020746292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020752847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.647" endtime="20201030 18:29:10.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.655" endtime="20201030 18:29:10.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.354" endtime="20201030 18:29:10.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.352" endtime="20201030 18:29:10.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.662" level="INFO">${RESULT} = [{'diff': 6.555000000001837e-06}, {'diff': 7.056000000001811e-06}, {'diff': 6.528000000002171e-06}, {'diff': 6.555999999997841e-06}, {'diff': 7.0279999999992016e-06}, {'diff': 6.542000000001741e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:29:10.659" endtime="20201030 18:29:10.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.672" level="INFO">${ACCURACY} = {'diff': [6.555000000001837e-06, 7.056000000001811e-06, 6.528000000002171e-06, 6.555999999997841e-06, 7.0279999999992016e-06, 6.542000000001741e-06, 6.625000000003156e-06, 7.0279999999992016e-06, 6.55...</msg>
<status status="PASS" starttime="20201030 18:29:10.663" endtime="20201030 18:29:10.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.678" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.677" endtime="20201030 18:29:10.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.681" level="INFO">VALUE: [6.555000000001837e-06, 7.056000000001811e-06, 6.528000000002171e-06, 6.555999999997841e-06, 7.0279999999992016e-06, 6.542000000001741e-06, 6.625000000003156e-06, 7.0279999999992016e-06, 6.555000000001837e-06, 7.042000000002241e-06, 6.555000000001837e-06, 7.056000000001811e-06, 7.0419999999987715e-06, 6.5279999999987015e-06, 6.597000000000547e-06, 6.554999999998368e-06, 7.055000000002337e-06, 6.555999999997841e-06, 7.013999999999632e-06, 7.040999999999298e-06, 6.568999999997938e-06, 7.055000000002337e-06, 7.554999999999368e-06, 7.0279999999992016e-06, 6.556000000001311e-06, 7.055999999998341e-06, 6.556000000001311e-06, 6.541999999998271e-06, 7.0419999999987715e-06, 6.542000000001741e-06, 6.5279999999987015e-06, 7.083000000001477e-06, 6.555999999997841e-06, 7.0419999999987715e-06, 6.542000000001741e-06, 7.084000000000951e-06, 6.540999999998798e-06, 6.555999999997841e-06, 6.555999999997841e-06, 7.0279999999992016e-06, 7.054999999998868e-06, 6.569000000001407e-06, 6.5279999999987015e-06, 7.0829999999980076e-06, 7.055999999998341e-06, 6.541000000002267e-06, 6.555000000001837e-06, 7.070000000001381e-06, 7.054999999998868e-06, 7.040999999999298e-06]</msg>
<status status="PASS" starttime="20201030 18:29:10.680" endtime="20201030 18:29:10.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.673" endtime="20201030 18:29:10.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.686" endtime="20201030 18:29:10.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.684" endtime="20201030 18:29:10.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.683" endtime="20201030 18:29:10.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.319" endtime="20201030 18:29:10.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.319" endtime="20201030 18:29:10.707"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.716" endtime="20201030 18:29:10.733"></status>
</kw>
<msg timestamp="20201030 18:29:10.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.715" endtime="20201030 18:29:10.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.735" endtime="20201030 18:29:10.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.738" endtime="20201030 18:29:10.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.712" endtime="20201030 18:29:10.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.710" endtime="20201030 18:29:10.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.747" endtime="20201030 18:29:11.033"></status>
</kw>
<msg timestamp="20201030 18:29:11.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020730444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0207385, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:10.746" endtime="20201030 18:29:11.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020730444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0207385, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:11.038" endtime="20201030 18:29:11.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.046" endtime="20201030 18:29:11.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.743" endtime="20201030 18:29:11.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.741" endtime="20201030 18:29:11.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.053" level="INFO">${RESULT} = [{'diff': 8.055999999999341e-06}, {'diff': 7.540999999999798e-06}, {'diff': 7.540999999999798e-06}, {'diff': 8.137999999997814e-06}, {'diff': 8.041999999999772e-06}, {'diff': 8.054999999999868e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:11.050" endtime="20201030 18:29:11.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.057" level="INFO">${ACCURACY} = {'diff': [8.055999999999341e-06, 7.540999999999798e-06, 7.540999999999798e-06, 8.137999999997814e-06, 8.041999999999772e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.054999999999868e-06, 7.5000...</msg>
<status status="PASS" starttime="20201030 18:29:11.054" endtime="20201030 18:29:11.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.062" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.061" endtime="20201030 18:29:11.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.065" level="INFO">VALUE: [8.055999999999341e-06, 7.540999999999798e-06, 7.540999999999798e-06, 8.137999999997814e-06, 8.041999999999772e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.054999999999868e-06, 7.500000000000562e-06, 8.054999999999868e-06, 7.555999999998841e-06, 7.554999999999368e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.028000000000202e-06, 8.054999999999868e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.125000000001187e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 8.055999999999341e-06, 8.111000000001617e-06, 7.527000000000228e-06, 7.554999999999368e-06, 7.540999999999798e-06, 8.054999999999868e-06, 8.068999999999438e-06, 7.625000000000687e-06, 7.554999999999368e-06, 7.556000000002311e-06, 8.124999999997717e-06, 7.554999999999368e-06, 8.028000000000202e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.527999999999702e-06, 8.041999999999772e-06, 8.041999999999772e-06, 7.554999999999368e-06, 7.556000000002311e-06, 8.041000000000298e-06, 8.555999999999842e-06, 7.555999999998841e-06, 8.542000000000272e-06, 8.000000000001062e-06, 7.540999999999798e-06, 8.028000000000202e-06]</msg>
<status status="PASS" starttime="20201030 18:29:11.063" endtime="20201030 18:29:11.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.058" endtime="20201030 18:29:11.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.070" endtime="20201030 18:29:11.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.068" endtime="20201030 18:29:11.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.067" endtime="20201030 18:29:11.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.708" endtime="20201030 18:29:11.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.707" endtime="20201030 18:29:11.091"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.101" endtime="20201030 18:29:11.117"></status>
</kw>
<msg timestamp="20201030 18:29:11.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.099" endtime="20201030 18:29:11.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.118" endtime="20201030 18:29:11.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.121" endtime="20201030 18:29:11.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.095" endtime="20201030 18:29:11.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.093" endtime="20201030 18:29:11.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.130" endtime="20201030 18:29:11.418"></status>
</kw>
<msg timestamp="20201030 18:29:11.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021044375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021052931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.129" endtime="20201030 18:29:11.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021044375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021052931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.422" endtime="20201030 18:29:11.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.431" endtime="20201030 18:29:11.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.126" endtime="20201030 18:29:11.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.124" endtime="20201030 18:29:11.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.438" level="INFO">${RESULT} = [{'diff': 8.555999999999842e-06}, {'diff': 8.528000000000702e-06}, {'diff': 8.528000000000702e-06}, {'diff': 9.028000000001202e-06}, {'diff': 9.056000000000342e-06}, {'diff': 9.069000000000438e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:11.434" endtime="20201030 18:29:11.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.442" level="INFO">${ACCURACY} = {'diff': [8.555999999999842e-06, 8.528000000000702e-06, 8.528000000000702e-06, 9.028000000001202e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.040999999997829e-06, 9.041000000001298e-06, 9.0419...</msg>
<status status="PASS" starttime="20201030 18:29:11.439" endtime="20201030 18:29:11.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.447" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.445" endtime="20201030 18:29:11.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.450" level="INFO">VALUE: [8.555999999999842e-06, 8.528000000000702e-06, 8.528000000000702e-06, 9.028000000001202e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.040999999997829e-06, 9.041000000001298e-06, 9.041999999997302e-06, 8.499999999998092e-06, 8.569999999999411e-06, 9.014000000001632e-06, 9.083000000000008e-06, 9.056000000000342e-06, 8.542000000000272e-06, 9.069000000000438e-06, 8.986999999998496e-06, 9.055000000000868e-06, 9.042000000000772e-06, 8.541000000000798e-06, 8.555999999999842e-06, 9.042000000000772e-06, 8.541000000000798e-06, 9.054999999997398e-06, 9.042000000000772e-06, 9.570000000000412e-06, 9.042000000000772e-06, 8.555999999999842e-06, 9.055000000000868e-06, 9.069000000000438e-06, 8.569999999999411e-06, 9.042000000000772e-06, 9.056000000000342e-06, 8.555000000000368e-06, 8.500000000001562e-06, 8.555000000000368e-06, 8.528000000000702e-06, 8.528000000000702e-06, 9.014000000001632e-06, 8.556000000003311e-06, 9.041000000001298e-06, 8.639000000001257e-06, 9.056000000000342e-06, 8.596999999999078e-06, 9.055000000000868e-06, 8.542000000000272e-06, 9.028000000001202e-06, 9.056000000000342e-06, 8.555999999999842e-06, 8.555999999999842e-06]</msg>
<status status="PASS" starttime="20201030 18:29:11.449" endtime="20201030 18:29:11.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.443" endtime="20201030 18:29:11.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.455" endtime="20201030 18:29:11.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.454" endtime="20201030 18:29:11.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.452" endtime="20201030 18:29:11.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.091" endtime="20201030 18:29:11.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.091" endtime="20201030 18:29:11.476"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.485" endtime="20201030 18:29:11.503"></status>
</kw>
<msg timestamp="20201030 18:29:11.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.483" endtime="20201030 18:29:11.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.504" endtime="20201030 18:29:11.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.507" endtime="20201030 18:29:11.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.481" endtime="20201030 18:29:11.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.479" endtime="20201030 18:29:11.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.516" endtime="20201030 18:29:11.804"></status>
</kw>
<msg timestamp="20201030 18:29:11.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020093361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020102917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.515" endtime="20201030 18:29:11.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020093361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020102917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.808" endtime="20201030 18:29:11.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.817" endtime="20201030 18:29:11.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.512" endtime="20201030 18:29:11.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.510" endtime="20201030 18:29:11.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.824" level="INFO">${RESULT} = [{'diff': 9.556000000000842e-06}, {'diff': 1.0055000000001868e-05}, {'diff': 1.0068999999997968e-05}, {'diff': 1.0068999999997968e-05}, {'diff': 1.0069999999997442e-05}, {'diff': 1.0041999999998302e-0...</msg>
<status status="PASS" starttime="20201030 18:29:11.820" endtime="20201030 18:29:11.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.829" level="INFO">${ACCURACY} = {'diff': [9.556000000000842e-06, 1.0055000000001868e-05, 1.0068999999997968e-05, 1.0068999999997968e-05, 1.0069999999997442e-05, 1.0041999999998302e-05, 1.0056000000001342e-05, 1.0069999999997442e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:11.825" endtime="20201030 18:29:11.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.834" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.833" endtime="20201030 18:29:11.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.836" level="INFO">VALUE: [9.556000000000842e-06, 1.0055000000001868e-05, 1.0068999999997968e-05, 1.0068999999997968e-05, 1.0069999999997442e-05, 1.0041999999998302e-05, 1.0056000000001342e-05, 1.0069999999997442e-05, 9.624999999999218e-06, 1.0054999999998399e-05, 1.0013999999999162e-05, 1.0041999999998302e-05, 1.0083000000001008e-05, 1.0042000000001772e-05, 9.569000000000938e-06, 1.0097000000000578e-05, 9.541000000001798e-06, 1.0040999999998829e-05, 9.555999999997372e-06, 1.0070000000000912e-05, 1.0041999999998302e-05, 1.0069000000001438e-05, 9.624999999999218e-06, 1.0070000000000912e-05, 1.0054999999998399e-05, 1.0055999999997872e-05, 9.555999999997372e-06, 9.554999999997899e-06, 9.514000000002132e-06, 1.0056000000001342e-05, 1.0042000000001772e-05, 1.0041999999998302e-05, 9.541000000001798e-06, 1.0570000000001412e-05, 1.0041999999998302e-05, 9.526999999998759e-06, 1.0055000000001868e-05, 9.541000000001798e-06, 9.542000000001272e-06, 9.527999999998232e-06, 1.0124999999999718e-05, 9.500000000002562e-06, 1.0555999999998372e-05, 9.556000000000842e-06, 9.556000000000842e-06, 1.0028000000002202e-05, 1.0055000000001868e-05, 1.0055999999997872e-05, 1.0583000000001508e-05, 1.0070000000000912e-05]</msg>
<status status="PASS" starttime="20201030 18:29:11.835" endtime="20201030 18:29:11.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.830" endtime="20201030 18:29:11.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.841" endtime="20201030 18:29:11.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.840" endtime="20201030 18:29:11.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.839" endtime="20201030 18:29:11.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.477" endtime="20201030 18:29:11.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.476" endtime="20201030 18:29:11.862"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.871" endtime="20201030 18:29:11.889"></status>
</kw>
<msg timestamp="20201030 18:29:11.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.869" endtime="20201030 18:29:11.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.891" endtime="20201030 18:29:11.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.893" endtime="20201030 18:29:11.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.867" endtime="20201030 18:29:11.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.865" endtime="20201030 18:29:11.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.903" endtime="20201030 18:29:12.191"></status>
</kw>
<msg timestamp="20201030 18:29:12.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020082417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.901" endtime="20201030 18:29:12.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020082417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.195" endtime="20201030 18:29:12.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.203" endtime="20201030 18:29:12.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.899" endtime="20201030 18:29:12.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.897" endtime="20201030 18:29:12.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.210" level="INFO">${RESULT} = [{'diff': 1.0500000000000093e-05}, {'diff': 1.1054999999999399e-05}, {'diff': 1.0500000000000093e-05}, {'diff': 1.0570000000001412e-05}, {'diff': 1.1055999999998872e-05}, {'diff': 1.0971999999997983e-...</msg>
<status status="PASS" starttime="20201030 18:29:12.207" endtime="20201030 18:29:12.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.215" level="INFO">${ACCURACY} = {'diff': [1.0500000000000093e-05, 1.1054999999999399e-05, 1.0500000000000093e-05, 1.0570000000001412e-05, 1.1055999999998872e-05, 1.0971999999997983e-05, 1.0513999999999663e-05, 1.0541999999998802e-05...</msg>
<status status="PASS" starttime="20201030 18:29:12.211" endtime="20201030 18:29:12.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.222" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.218" endtime="20201030 18:29:12.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.232" level="INFO">VALUE: [1.0500000000000093e-05, 1.1054999999999399e-05, 1.0500000000000093e-05, 1.0570000000001412e-05, 1.1055999999998872e-05, 1.0971999999997983e-05, 1.0513999999999663e-05, 1.0541999999998802e-05, 1.1000000000000593e-05, 1.0554999999998899e-05, 1.1027999999999732e-05, 1.1040999999999829e-05, 1.1040999999999829e-05, 1.1068999999998969e-05, 1.0556000000001842e-05, 1.1055999999998872e-05, 1.0554999999998899e-05, 1.1541000000000329e-05, 1.1111000000001148e-05, 1.1041999999999302e-05, 1.0554999999998899e-05, 1.0541999999998802e-05, 1.0541999999998802e-05, 1.1055999999998872e-05, 1.1041999999999302e-05, 1.1027000000000259e-05, 1.0555999999998372e-05, 1.0597000000001078e-05, 1.1555999999999372e-05, 1.0999999999997123e-05, 1.0611000000000648e-05, 1.0554999999998899e-05, 1.1096999999998108e-05, 1.0611000000000648e-05, 1.1041999999999302e-05, 1.0555999999998372e-05, 1.1041999999999302e-05, 1.1083000000002008e-05, 1.1000000000000593e-05, 1.0555999999998372e-05, 1.0569000000001938e-05, 1.0584000000000982e-05, 1.1068999999998969e-05, 1.0542000000002272e-05, 1.0555999999998372e-05, 1.0542000000002272e-05, 1.1041999999999302e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.0568999999998469e-05]</msg>
<status status="PASS" starttime="20201030 18:29:12.227" endtime="20201030 18:29:12.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.215" endtime="20201030 18:29:12.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.253" endtime="20201030 18:29:12.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.250" endtime="20201030 18:29:12.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.248" endtime="20201030 18:29:12.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.863" endtime="20201030 18:29:12.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.862" endtime="20201030 18:29:12.276"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.291" endtime="20201030 18:29:12.315"></status>
</kw>
<msg timestamp="20201030 18:29:12.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.288" endtime="20201030 18:29:12.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.317" endtime="20201030 18:29:12.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.320" endtime="20201030 18:29:12.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.284" endtime="20201030 18:29:12.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.281" endtime="20201030 18:29:12.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.332" endtime="20201030 18:29:12.619"></status>
</kw>
<msg timestamp="20201030 18:29:12.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033154611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033166667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.330" endtime="20201030 18:29:12.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033154611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033166667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.623" endtime="20201030 18:29:12.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.632" endtime="20201030 18:29:12.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.326" endtime="20201030 18:29:12.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.324" endtime="20201030 18:29:12.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.638" level="INFO">${RESULT} = [{'diff': 1.2055999999996403e-05}, {'diff': 1.1555999999995903e-05}, {'diff': 1.1582999999995569e-05}, {'diff': 1.2042000000003772e-05}, {'diff': 1.204099999999736e-05}, {'diff': 1.1555000000003368e-0...</msg>
<status status="PASS" starttime="20201030 18:29:12.635" endtime="20201030 18:29:12.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.643" level="INFO">${ACCURACY} = {'diff': [1.2055999999996403e-05, 1.1555999999995903e-05, 1.1582999999995569e-05, 1.2042000000003772e-05, 1.204099999999736e-05, 1.1555000000003368e-05, 1.2055999999996403e-05, 1.2041999999996833e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:12.640" endtime="20201030 18:29:12.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.647" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.646" endtime="20201030 18:29:12.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.650" level="INFO">VALUE: [1.2055999999996403e-05, 1.1555999999995903e-05, 1.1582999999995569e-05, 1.2042000000003772e-05, 1.204099999999736e-05, 1.1555000000003368e-05, 1.2055999999996403e-05, 1.2041999999996833e-05, 1.1555999999995903e-05, 1.204099999999736e-05, 1.1597000000002078e-05, 1.2041999999996833e-05, 1.1569000000002938e-05, 1.1542000000003272e-05, 1.154099999999686e-05, 1.1556000000002842e-05, 1.1555999999995903e-05, 1.2055999999996403e-05, 1.1555999999995903e-05, 1.2542000000004272e-05, 1.154099999999686e-05, 1.1485999999998053e-05, 1.2056000000003342e-05, 1.152699999999729e-05, 1.2027999999997263e-05, 1.2055999999996403e-05, 1.2083000000003008e-05, 1.1568999999995999e-05, 1.2056000000003342e-05, 1.1556000000002842e-05, 1.2041000000004298e-05, 1.1541999999996333e-05, 1.204099999999736e-05, 1.2056000000003342e-05, 1.2084000000002482e-05, 1.2069999999995973e-05, 1.1570000000002412e-05, 1.2056000000003342e-05, 1.2070000000002912e-05, 1.2499999999998623e-05, 1.204099999999736e-05, 1.1541999999996333e-05, 1.1556000000002842e-05, 1.155499999999643e-05, 1.1555999999995903e-05, 1.1555000000003368e-05, 1.1541000000003798e-05, 1.1527000000004228e-05, 1.2027999999997263e-05, 1.2056000000003342e-05]</msg>
<status status="PASS" starttime="20201030 18:29:12.648" endtime="20201030 18:29:12.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.644" endtime="20201030 18:29:12.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.656" endtime="20201030 18:29:12.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.654" endtime="20201030 18:29:12.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.653" endtime="20201030 18:29:12.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.278" endtime="20201030 18:29:12.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.277" endtime="20201030 18:29:12.677"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.686" endtime="20201030 18:29:12.704"></status>
</kw>
<msg timestamp="20201030 18:29:12.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.684" endtime="20201030 18:29:12.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.705" endtime="20201030 18:29:12.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.708" endtime="20201030 18:29:12.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.682" endtime="20201030 18:29:12.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.679" endtime="20201030 18:29:12.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.717" endtime="20201030 18:29:13.004"></status>
</kw>
<msg timestamp="20201030 18:29:13.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02015075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:12.716" endtime="20201030 18:29:13.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02015075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:13.008" endtime="20201030 18:29:13.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.016" endtime="20201030 18:29:13.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.713" endtime="20201030 18:29:13.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.711" endtime="20201030 18:29:13.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.023" level="INFO">${RESULT} = [{'diff': 1.3541999999998333e-05}, {'diff': 1.3069000000000969e-05}, {'diff': 1.3056000000000872e-05}, {'diff': 1.3041999999997833e-05}, {'diff': 1.354099999999886e-05}, {'diff': 1.3041999999997833e-0...</msg>
<status status="PASS" starttime="20201030 18:29:13.020" endtime="20201030 18:29:13.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.028" level="INFO">${ACCURACY} = {'diff': [1.3541999999998333e-05, 1.3069000000000969e-05, 1.3056000000000872e-05, 1.3041999999997833e-05, 1.354099999999886e-05, 1.3041999999997833e-05, 1.2541999999997333e-05, 1.30689999999975e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:29:13.024" endtime="20201030 18:29:13.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.034" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.032" endtime="20201030 18:29:13.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.038" level="INFO">VALUE: [1.3541999999998333e-05, 1.3069000000000969e-05, 1.3056000000000872e-05, 1.3041999999997833e-05, 1.354099999999886e-05, 1.3041999999997833e-05, 1.2541999999997333e-05, 1.30689999999975e-05, 1.3041999999997833e-05, 1.3000000000002593e-05, 1.305499999999793e-05, 1.3042000000001303e-05, 1.2541000000001329e-05, 1.3028000000001733e-05, 1.3097000000000109e-05, 1.3070000000000442e-05, 1.2555000000000899e-05, 1.3041999999997833e-05, 1.2596999999999609e-05, 1.2541999999997333e-05, 1.3055000000001399e-05, 1.305499999999793e-05, 1.3056000000000872e-05, 1.3110999999999678e-05, 1.2541999999997333e-05, 1.2528000000001233e-05, 1.3055000000001399e-05, 1.3110999999999678e-05, 1.254099999999786e-05, 1.254099999999786e-05, 1.3056000000000872e-05, 1.2542000000000803e-05, 1.2556000000000372e-05, 1.2542000000000803e-05, 1.2555000000000899e-05, 1.3027999999998263e-05, 1.2555000000000899e-05, 1.2499999999998623e-05, 1.3527999999998763e-05, 1.3555999999997903e-05, 1.3056000000000872e-05, 1.3070000000000442e-05, 1.3056000000000872e-05, 1.3056000000000872e-05, 1.2528000000001233e-05, 1.2569999999999942e-05, 1.3028000000001733e-05, 1.304099999999836e-05, 1.2542000000000803e-05, 1.2541000000001329e-05]</msg>
<status status="PASS" starttime="20201030 18:29:13.036" endtime="20201030 18:29:13.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.029" endtime="20201030 18:29:13.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.046" endtime="20201030 18:29:13.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.043" endtime="20201030 18:29:13.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.041" endtime="20201030 18:29:13.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.678" endtime="20201030 18:29:13.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.677" endtime="20201030 18:29:13.067"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.076" endtime="20201030 18:29:13.094"></status>
</kw>
<msg timestamp="20201030 18:29:13.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.075" endtime="20201030 18:29:13.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.095" endtime="20201030 18:29:13.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.098" endtime="20201030 18:29:13.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.072" endtime="20201030 18:29:13.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.070" endtime="20201030 18:29:13.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.107" endtime="20201030 18:29:13.394"></status>
</kw>
<msg timestamp="20201030 18:29:13.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020580583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020594653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.106" endtime="20201030 18:29:13.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020580583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020594653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.399" endtime="20201030 18:29:13.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.407" endtime="20201030 18:29:13.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.103" endtime="20201030 18:29:13.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.101" endtime="20201030 18:29:13.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.414" level="INFO">${RESULT} = [{'diff': 1.4070000000001442e-05}, {'diff': 1.355499999999843e-05}, {'diff': 1.3541000000002329e-05}, {'diff': 1.4070000000001442e-05}, {'diff': 1.4055999999998403e-05}, {'diff': 1.4070000000001442e-0...</msg>
<status status="PASS" starttime="20201030 18:29:13.411" endtime="20201030 18:29:13.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.418" level="INFO">${ACCURACY} = {'diff': [1.4070000000001442e-05, 1.355499999999843e-05, 1.3541000000002329e-05, 1.4070000000001442e-05, 1.4055999999998403e-05, 1.4070000000001442e-05, 1.3986000000000554e-05, 1.4000000000000123e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:13.415" endtime="20201030 18:29:13.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.423" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.422" endtime="20201030 18:29:13.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.426" level="INFO">VALUE: [1.4070000000001442e-05, 1.355499999999843e-05, 1.3541000000002329e-05, 1.4070000000001442e-05, 1.4055999999998403e-05, 1.4070000000001442e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.355499999999843e-05, 1.40689999999985e-05, 1.3541999999998333e-05, 1.3597000000000609e-05, 1.405499999999893e-05, 1.3556000000001373e-05, 1.4056000000001873e-05, 1.4055000000002399e-05, 1.3528000000002233e-05, 1.3542000000001803e-05, 1.4041999999998833e-05, 1.4055999999998403e-05, 1.4569000000002469e-05, 1.402699999999979e-05, 1.3570000000000942e-05, 1.4111000000000679e-05, 1.4027999999999263e-05, 1.405499999999893e-05, 1.4069999999997973e-05, 1.4056000000001873e-05, 1.3527999999998763e-05, 1.354099999999886e-05, 1.3486999999999527e-05, 1.3555999999997903e-05, 1.4070000000001442e-05, 1.3986000000000554e-05, 1.355499999999843e-05, 1.3555000000001899e-05, 1.404099999999936e-05, 1.4055999999998403e-05, 1.3555999999997903e-05, 1.3568999999998e-05, 1.4069999999997973e-05, 1.3611000000000179e-05, 1.354099999999886e-05, 1.4070000000001442e-05, 1.3527999999998763e-05, 1.4056000000001873e-05, 1.3555999999997903e-05, 1.3541000000002329e-05, 1.4070000000001442e-05, 1.3568999999998e-05]</msg>
<status status="PASS" starttime="20201030 18:29:13.424" endtime="20201030 18:29:13.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.419" endtime="20201030 18:29:13.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.431" endtime="20201030 18:29:13.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.429" endtime="20201030 18:29:13.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.428" endtime="20201030 18:29:13.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.068" endtime="20201030 18:29:13.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.067" endtime="20201030 18:29:13.452"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.461" endtime="20201030 18:29:13.479"></status>
</kw>
<msg timestamp="20201030 18:29:13.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.459" endtime="20201030 18:29:13.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.481" endtime="20201030 18:29:13.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.483" endtime="20201030 18:29:13.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.456" endtime="20201030 18:29:13.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.454" endtime="20201030 18:29:13.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.493" endtime="20201030 18:29:13.781"></status>
</kw>
<msg timestamp="20201030 18:29:13.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021160889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021175931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.491" endtime="20201030 18:29:13.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021160889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021175931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.785" endtime="20201030 18:29:13.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.793" endtime="20201030 18:29:13.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.488" endtime="20201030 18:29:13.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.487" endtime="20201030 18:29:13.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.800" level="INFO">${RESULT} = [{'diff': 1.5041999999999833e-05}, {'diff': 1.4597000000001609e-05}, {'diff': 1.4514000000000193e-05}, {'diff': 1.50689999999995e-05}, {'diff': 1.454099999999986e-05}, {'diff': 1.5055999999999403e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:13.796" endtime="20201030 18:29:13.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.804" level="INFO">${ACCURACY} = {'diff': [1.5041999999999833e-05, 1.4597000000001609e-05, 1.4514000000000193e-05, 1.50689999999995e-05, 1.454099999999986e-05, 1.5055999999999403e-05, 1.505499999999993e-05, 1.5028000000000263e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:29:13.801" endtime="20201030 18:29:13.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.809" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.808" endtime="20201030 18:29:13.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.812" level="INFO">VALUE: [1.5041999999999833e-05, 1.4597000000001609e-05, 1.4514000000000193e-05, 1.50689999999995e-05, 1.454099999999986e-05, 1.5055999999999403e-05, 1.505499999999993e-05, 1.5028000000000263e-05, 1.4570000000001943e-05, 1.5028000000000263e-05, 1.454099999999986e-05, 1.4541999999999333e-05, 1.504100000000036e-05, 1.4527999999999763e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.555500000000043e-05, 1.5055999999999403e-05, 1.4541999999999333e-05, 1.4556000000002373e-05, 1.5041999999999833e-05, 1.555500000000043e-05, 1.4555999999998903e-05, 1.5083999999998543e-05, 1.5069999999998973e-05, 1.50689999999995e-05, 1.505499999999993e-05, 1.5069000000002969e-05, 1.5084000000002012e-05, 1.5056000000002873e-05, 1.4584000000001512e-05, 1.4568999999999e-05, 1.4527999999999763e-05, 1.455499999999943e-05, 1.5584000000002513e-05, 1.4486999999997058e-05, 1.4972000000001984e-05, 1.4514000000000193e-05, 1.504100000000036e-05, 1.455499999999943e-05, 1.555500000000043e-05, 1.455499999999943e-05, 1.5055999999999403e-05, 1.5569e-05, 1.452700000000029e-05, 1.4568999999999e-05, 1.50689999999995e-05, 1.5125000000001249e-05, 1.4986000000001554e-05]</msg>
<status status="PASS" starttime="20201030 18:29:13.810" endtime="20201030 18:29:13.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.805" endtime="20201030 18:29:13.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.818" endtime="20201030 18:29:13.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.816" endtime="20201030 18:29:13.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.815" endtime="20201030 18:29:13.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.453" endtime="20201030 18:29:13.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.452" endtime="20201030 18:29:13.838"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.847" endtime="20201030 18:29:13.863"></status>
</kw>
<msg timestamp="20201030 18:29:13.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.845" endtime="20201030 18:29:13.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.865" endtime="20201030 18:29:13.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.867" endtime="20201030 18:29:13.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.843" endtime="20201030 18:29:13.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.841" endtime="20201030 18:29:13.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.876" endtime="20201030 18:29:14.163"></status>
</kw>
<msg timestamp="20201030 18:29:14.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019917736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.875" endtime="20201030 18:29:14.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019917736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.167" endtime="20201030 18:29:14.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.175" endtime="20201030 18:29:14.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.872" endtime="20201030 18:29:14.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.871" endtime="20201030 18:29:14.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.182" level="INFO">${RESULT} = [{'diff': 1.6041999999997364e-05}, {'diff': 1.561099999999871e-05}, {'diff': 1.602700000000179e-05}, {'diff': 1.5528000000000763e-05}, {'diff': 1.554099999999739e-05}, {'diff': 1.655500000000143e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:14.178" endtime="20201030 18:29:14.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:14.186" level="INFO">${ACCURACY} = {'diff': [1.6041999999997364e-05, 1.561099999999871e-05, 1.602700000000179e-05, 1.5528000000000763e-05, 1.554099999999739e-05, 1.655500000000143e-05, 1.6056000000000403e-05, 1.558299999999957e-05, 1.6...</msg>
<status status="PASS" starttime="20201030 18:29:14.183" endtime="20201030 18:29:14.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.191" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:29:14.190" endtime="20201030 18:29:14.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.193" level="INFO">VALUE: [1.6041999999997364e-05, 1.561099999999871e-05, 1.602700000000179e-05, 1.5528000000000763e-05, 1.554099999999739e-05, 1.655500000000143e-05, 1.6056000000000403e-05, 1.558299999999957e-05, 1.605500000000093e-05, 1.5541999999996864e-05, 1.5542000000000333e-05, 1.5569e-05, 1.555500000000043e-05, 1.6042000000000833e-05, 1.605500000000093e-05, 1.554100000000086e-05, 1.6056000000000403e-05, 1.6028000000001263e-05, 1.5542000000000333e-05, 1.5569e-05, 1.6069999999999973e-05, 1.554099999999739e-05, 1.5583999999999043e-05, 1.605499999999746e-05, 1.5542000000000333e-05, 1.5513999999997724e-05, 1.5542000000000333e-05, 1.5569e-05, 1.6027999999997794e-05, 1.604099999999789e-05, 1.6042000000000833e-05, 1.552699999999782e-05, 1.554100000000086e-05, 1.5555999999999903e-05, 1.604099999999789e-05, 1.605500000000093e-05, 1.6042000000000833e-05, 1.6027999999997794e-05, 1.5569e-05, 1.6069999999999973e-05, 1.6042000000000833e-05, 1.5555999999999903e-05, 1.558299999999957e-05, 1.6042000000000833e-05, 1.5541999999996864e-05, 1.5569e-05, 1.6041999999997364e-05, 1.604100000000136e-05, 1.555500000000043e-05, 1.6528000000001764e-05]</msg>
<status status="PASS" starttime="20201030 18:29:14.192" endtime="20201030 18:29:14.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.187" endtime="20201030 18:29:14.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.198" endtime="20201030 18:29:14.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.197" endtime="20201030 18:29:14.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.196" endtime="20201030 18:29:14.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.839" endtime="20201030 18:29:14.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.839" endtime="20201030 18:29:14.219"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.227" endtime="20201030 18:29:14.250"></status>
</kw>
<msg timestamp="20201030 18:29:14.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.226" endtime="20201030 18:29:14.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.253" endtime="20201030 18:29:14.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.259" endtime="20201030 18:29:14.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.223" endtime="20201030 18:29:14.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.221" endtime="20201030 18:29:14.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.279" endtime="20201030 18:29:14.576"></status>
</kw>
<msg timestamp="20201030 18:29:14.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019780931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.276" endtime="20201030 18:29:14.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019780931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.580" endtime="20201030 18:29:14.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.589" endtime="20201030 18:29:14.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.270" endtime="20201030 18:29:14.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.266" endtime="20201030 18:29:14.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.595" level="INFO">${RESULT} = [{'diff': 1.755499999999896e-05}, {'diff': 1.652700000000229e-05}, {'diff': 1.6556000000000903e-05}, {'diff': 1.655499999999796e-05}, {'diff': 1.711100000000021e-05}, {'diff': 1.6556000000000903e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:14.592" endtime="20201030 18:29:14.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:14.600" level="INFO">${ACCURACY} = {'diff': [1.755499999999896e-05, 1.652700000000229e-05, 1.6556000000000903e-05, 1.655499999999796e-05, 1.711100000000021e-05, 1.6556000000000903e-05, 1.6569000000001e-05, 1.654099999999839e-05, 1.6542...</msg>
<status status="PASS" starttime="20201030 18:29:14.596" endtime="20201030 18:29:14.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.604" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:29:14.603" endtime="20201030 18:29:14.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.606" level="INFO">VALUE: [1.755499999999896e-05, 1.652700000000229e-05, 1.6556000000000903e-05, 1.655499999999796e-05, 1.711100000000021e-05, 1.6556000000000903e-05, 1.6569000000001e-05, 1.654099999999839e-05, 1.6542000000001333e-05, 1.704099999999889e-05, 1.652700000000229e-05, 1.6527999999998294e-05, 1.6556000000000903e-05, 1.7041999999998364e-05, 1.7027999999998794e-05, 1.658300000000057e-05, 1.7055999999997934e-05, 1.7056000000001403e-05, 1.6555999999997434e-05, 1.656899999999753e-05, 1.654099999999839e-05, 1.652699999999882e-05, 1.655499999999796e-05, 1.6542000000001333e-05, 1.7098000000000113e-05, 1.704099999999889e-05, 1.7041999999998364e-05, 1.705499999999846e-05, 1.704099999999889e-05, 1.7027999999998794e-05, 1.655500000000143e-05, 1.704099999999889e-05, 1.705500000000193e-05, 1.6556000000000903e-05, 1.6542000000001333e-05, 1.6556000000000903e-05, 1.6458999999999918e-05, 1.705499999999846e-05, 1.6556000000000903e-05, 1.6541999999997864e-05, 1.6500000000002624e-05, 1.6556000000000903e-05, 1.7013999999999224e-05, 1.7056000000001403e-05, 1.7070000000000973e-05, 1.658300000000057e-05, 1.708300000000107e-05, 1.7070000000000973e-05, 1.755500000000243e-05, 1.7070000000000973e-05]</msg>
<status status="PASS" starttime="20201030 18:29:14.605" endtime="20201030 18:29:14.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.600" endtime="20201030 18:29:14.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.612" endtime="20201030 18:29:14.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.610" endtime="20201030 18:29:14.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.609" endtime="20201030 18:29:14.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.220" endtime="20201030 18:29:14.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.219" endtime="20201030 18:29:14.632"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.641" endtime="20201030 18:29:14.660"></status>
</kw>
<msg timestamp="20201030 18:29:14.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.639" endtime="20201030 18:29:14.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.662" endtime="20201030 18:29:14.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.664" endtime="20201030 18:29:14.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.637" endtime="20201030 18:29:14.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.635" endtime="20201030 18:29:14.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.673" endtime="20201030 18:29:14.958"></status>
</kw>
<msg timestamp="20201030 18:29:14.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020809264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020827319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.672" endtime="20201030 18:29:14.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020809264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020827319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.963" endtime="20201030 18:29:14.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.971" endtime="20201030 18:29:14.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.669" endtime="20201030 18:29:14.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.667" endtime="20201030 18:29:14.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.978" level="INFO">${RESULT} = [{'diff': 1.805499999999946e-05}, {'diff': 1.8027999999999794e-05}, {'diff': 1.812500000000078e-05}, {'diff': 1.8042000000002834e-05}, {'diff': 1.805499999999946e-05}, {'diff': 1.8055999999998934e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:14.974" endtime="20201030 18:29:14.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:14.982" level="INFO">${ACCURACY} = {'diff': [1.805499999999946e-05, 1.8027999999999794e-05, 1.812500000000078e-05, 1.8042000000002834e-05, 1.805499999999946e-05, 1.8055999999998934e-05, 1.7541999999998864e-05, 1.7500000000000154e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:29:14.979" endtime="20201030 18:29:14.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.986" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:29:14.985" endtime="20201030 18:29:14.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.989" level="INFO">VALUE: [1.805499999999946e-05, 1.8027999999999794e-05, 1.812500000000078e-05, 1.8042000000002834e-05, 1.805499999999946e-05, 1.8055999999998934e-05, 1.7541999999998864e-05, 1.7500000000000154e-05, 1.758300000000157e-05, 1.755499999999896e-05, 1.80690000000025e-05, 1.812500000000078e-05, 1.8070000000001973e-05, 1.805499999999946e-05, 1.8027999999999794e-05, 1.755499999999896e-05, 1.754099999999939e-05, 1.8041999999999364e-05, 1.7555999999998434e-05, 1.8042000000002834e-05, 1.8555999999999434e-05, 1.8041999999999364e-05, 1.8027999999999794e-05, 1.755500000000243e-05, 1.804099999999989e-05, 1.806899999999903e-05, 1.7513999999999724e-05, 1.806899999999903e-05, 1.7541999999998864e-05, 1.755499999999896e-05, 1.80690000000025e-05, 1.8041999999999364e-05, 1.8027999999999794e-05, 1.7541999999998864e-05, 1.8055999999998934e-05, 1.7556000000001903e-05, 1.809699999999817e-05, 1.808300000000207e-05, 1.805499999999946e-05, 1.806899999999903e-05, 1.8027999999999794e-05, 1.7987000000000558e-05, 1.7541999999998864e-05, 1.8041999999999364e-05, 1.7569000000002e-05, 1.755499999999896e-05, 1.8042000000002834e-05, 1.7555999999998434e-05, 1.755499999999896e-05, 1.805499999999946e-05]</msg>
<status status="PASS" starttime="20201030 18:29:14.987" endtime="20201030 18:29:14.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.983" endtime="20201030 18:29:14.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.994" endtime="20201030 18:29:15.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.993" endtime="20201030 18:29:15.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.992" endtime="20201030 18:29:15.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.633" endtime="20201030 18:29:15.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.633" endtime="20201030 18:29:15.015"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.024" endtime="20201030 18:29:15.045"></status>
</kw>
<msg timestamp="20201030 18:29:15.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.022" endtime="20201030 18:29:15.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.048" endtime="20201030 18:29:15.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.053" endtime="20201030 18:29:15.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.020" endtime="20201030 18:29:15.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.018" endtime="20201030 18:29:15.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.072" endtime="20201030 18:29:15.365"></status>
</kw>
<msg timestamp="20201030 18:29:15.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019989292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020007861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.069" endtime="20201030 18:29:15.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019989292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020007861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.369" endtime="20201030 18:29:15.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.377" endtime="20201030 18:29:15.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.063" endtime="20201030 18:29:15.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.060" endtime="20201030 18:29:15.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:15.384" level="INFO">${RESULT} = [{'diff': 1.856899999999953e-05}, {'diff': 1.901299999999828e-05}, {'diff': 1.905500000000046e-05}, {'diff': 1.8541999999999864e-05}, {'diff': 1.9055999999999934e-05}, {'diff': 1.8569999999999004e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:15.381" endtime="20201030 18:29:15.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:15.389" level="INFO">${ACCURACY} = {'diff': [1.856899999999953e-05, 1.901299999999828e-05, 1.905500000000046e-05, 1.8541999999999864e-05, 1.9055999999999934e-05, 1.8569999999999004e-05, 1.905500000000046e-05, 1.85829999999991e-05, 1.90...</msg>
<status status="PASS" starttime="20201030 18:29:15.385" endtime="20201030 18:29:15.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.398" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:29:15.397" endtime="20201030 18:29:15.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.402" level="INFO">VALUE: [1.856899999999953e-05, 1.901299999999828e-05, 1.905500000000046e-05, 1.8541999999999864e-05, 1.9055999999999934e-05, 1.8569999999999004e-05, 1.905500000000046e-05, 1.85829999999991e-05, 1.9055999999999934e-05, 1.9069999999999504e-05, 1.8555999999999434e-05, 1.8555999999999434e-05, 1.9042000000000364e-05, 1.9042000000000364e-05, 1.855499999999996e-05, 1.8541999999999864e-05, 1.8556000000002904e-05, 1.855499999999996e-05, 1.8555999999999434e-05, 1.861100000000171e-05, 1.9042000000000364e-05, 1.9513999999998255e-05, 1.9055999999999934e-05, 1.8541999999999864e-05, 1.906900000000003e-05, 1.8555999999999434e-05, 1.8541999999999864e-05, 1.90829999999996e-05, 1.905500000000046e-05, 1.906900000000003e-05, 1.9042000000000364e-05, 1.854100000000039e-05, 1.8541999999999864e-05, 1.862499999999781e-05, 1.9042000000000364e-05, 1.909699999999917e-05, 1.9042000000000364e-05, 1.855499999999996e-05, 1.906900000000003e-05, 1.904100000000089e-05, 1.8556000000002904e-05, 1.9042000000000364e-05, 1.855499999999996e-05, 1.912500000000178e-05, 1.852700000000082e-05, 1.8514000000000724e-05, 1.855499999999996e-05, 1.855499999999996e-05, 1.9055999999999934e-05, 1.8555999999999434e-05]</msg>
<status status="PASS" starttime="20201030 18:29:15.400" endtime="20201030 18:29:15.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.390" endtime="20201030 18:29:15.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:15.410" endtime="20201030 18:29:15.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.406" endtime="20201030 18:29:15.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.404" endtime="20201030 18:29:15.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.016" endtime="20201030 18:29:15.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.016" endtime="20201030 18:29:15.431"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.440" endtime="20201030 18:29:15.458"></status>
</kw>
<msg timestamp="20201030 18:29:15.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.439" endtime="20201030 18:29:15.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.460" endtime="20201030 18:29:15.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.462" endtime="20201030 18:29:15.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.436" endtime="20201030 18:29:15.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.434" endtime="20201030 18:29:15.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.472" endtime="20201030 18:29:15.760"></status>
</kw>
<msg timestamp="20201030 18:29:15.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020552153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.470" endtime="20201030 18:29:15.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020552153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.764" endtime="20201030 18:29:15.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.773" endtime="20201030 18:29:15.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.467" endtime="20201030 18:29:15.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.466" endtime="20201030 18:29:15.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:15.780" level="INFO">${RESULT} = [{'diff': 1.9570000000000004e-05}, {'diff': 1.954100000000139e-05}, {'diff': 1.954100000000139e-05}, {'diff': 1.9542000000000864e-05}, {'diff': 2.0056000000000934e-05}, {'diff': 2.001299999999928e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:15.777" endtime="20201030 18:29:15.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:15.784" level="INFO">${ACCURACY} = {'diff': [1.9570000000000004e-05, 1.954100000000139e-05, 1.954100000000139e-05, 1.9542000000000864e-05, 2.0056000000000934e-05, 2.001299999999928e-05, 1.954100000000139e-05, 2.0056000000000934e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:29:15.781" endtime="20201030 18:29:15.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.789" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:29:15.788" endtime="20201030 18:29:15.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.791" level="INFO">VALUE: [1.9570000000000004e-05, 1.954100000000139e-05, 1.954100000000139e-05, 1.9542000000000864e-05, 2.0056000000000934e-05, 2.001299999999928e-05, 1.954100000000139e-05, 2.0056000000000934e-05, 1.9999999999999185e-05, 1.9555999999996965e-05, 2.005500000000146e-05, 2.006899999999756e-05, 2.0042000000001364e-05, 2.006900000000103e-05, 2.0028000000001794e-05, 2.012500000000278e-05, 2.005499999999799e-05, 1.9527999999997825e-05, 1.9999999999999185e-05, 2.005500000000146e-05, 2.0098000000003113e-05, 2.005499999999799e-05, 1.955499999999749e-05, 1.9513999999998255e-05, 1.955500000000096e-05, 1.9556000000000434e-05, 2.0070000000000504e-05, 1.9500000000002154e-05, 1.956900000000053e-05, 1.956900000000053e-05, 2.0598000000000144e-05, 1.9556000000000434e-05, 1.956900000000053e-05, 2.0056000000000934e-05, 1.959699999999967e-05, 2.004100000000189e-05, 2.0056000000000934e-05, 1.959699999999967e-05, 1.952700000000182e-05, 1.9556000000000434e-05, 2.0056000000000934e-05, 2.0556000000001434e-05, 2.0042000000001364e-05, 1.954100000000139e-05, 1.956900000000053e-05, 2.0542000000001864e-05, 2.004100000000189e-05, 2.0541999999998395e-05, 1.955500000000096e-05, 2.005499999999799e-05]</msg>
<status status="PASS" starttime="20201030 18:29:15.790" endtime="20201030 18:29:15.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.785" endtime="20201030 18:29:15.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:15.797" endtime="20201030 18:29:15.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.795" endtime="20201030 18:29:15.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.794" endtime="20201030 18:29:15.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.432" endtime="20201030 18:29:15.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.432" endtime="20201030 18:29:15.817"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.826" endtime="20201030 18:29:15.847"></status>
</kw>
<msg timestamp="20201030 18:29:15.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.825" endtime="20201030 18:29:15.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.849" endtime="20201030 18:29:15.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.855" endtime="20201030 18:29:15.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.822" endtime="20201030 18:29:15.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.820" endtime="20201030 18:29:15.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.875" endtime="20201030 18:29:16.168"></status>
</kw>
<msg timestamp="20201030 18:29:16.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023751583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023772667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.871" endtime="20201030 18:29:16.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023751583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023772667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.172" endtime="20201030 18:29:16.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.181" endtime="20201030 18:29:16.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.866" endtime="20201030 18:29:16.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.862" endtime="20201030 18:29:16.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.187" level="INFO">${RESULT} = [{'diff': 2.1084000000001074e-05}, {'diff': 2.0541999999998395e-05}, {'diff': 2.1028000000002794e-05}, {'diff': 2.1055999999998465e-05}, {'diff': 2.105500000000246e-05}, {'diff': 2.056899999999806e-05...</msg>
<status status="PASS" starttime="20201030 18:29:16.184" endtime="20201030 18:29:16.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.192" level="INFO">${ACCURACY} = {'diff': [2.1084000000001074e-05, 2.0541999999998395e-05, 2.1028000000002794e-05, 2.1055999999998465e-05, 2.105500000000246e-05, 2.056899999999806e-05, 2.0569999999997535e-05, 2.1542000000002864e-05, ...</msg>
<status status="PASS" starttime="20201030 18:29:16.189" endtime="20201030 18:29:16.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.196" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.195" endtime="20201030 18:29:16.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.199" level="INFO">VALUE: [2.1084000000001074e-05, 2.0541999999998395e-05, 2.1028000000002794e-05, 2.1055999999998465e-05, 2.105500000000246e-05, 2.056899999999806e-05, 2.0569999999997535e-05, 2.1542000000002864e-05, 2.104099999999942e-05, 2.105499999999899e-05, 2.055499999999849e-05, 2.1027999999999325e-05, 2.106900000000203e-05, 2.10830000000016e-05, 2.104100000000289e-05, 2.056899999999806e-05, 2.062499999999981e-05, 2.105499999999899e-05, 2.105499999999899e-05, 2.055499999999849e-05, 2.0513999999999255e-05, 2.055500000000196e-05, 2.105499999999899e-05, 2.1056000000001934e-05, 2.155500000000296e-05, 2.055499999999849e-05, 2.0527999999998825e-05, 2.05969999999972e-05, 2.0569999999997535e-05, 2.0527999999998825e-05, 2.0570000000001004e-05, 2.1041999999998895e-05, 2.0527999999998825e-05, 2.0555999999997965e-05, 2.0513999999999255e-05, 2.1041999999998895e-05, 2.155499999999949e-05, 2.106899999999856e-05, 2.1042000000002364e-05, 2.104100000000289e-05, 2.1000000000000185e-05, 2.054099999999892e-05, 2.1027999999999325e-05, 2.0542000000001864e-05, 2.1042000000002364e-05, 2.055500000000196e-05, 2.059700000000067e-05, 2.1070000000001504e-05, 2.1027999999999325e-05, 2.1555999999998965e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.197" endtime="20201030 18:29:16.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.193" endtime="20201030 18:29:16.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.205" endtime="20201030 18:29:16.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.203" endtime="20201030 18:29:16.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.202" endtime="20201030 18:29:16.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.818" endtime="20201030 18:29:16.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.818" endtime="20201030 18:29:16.226"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.235" endtime="20201030 18:29:16.254"></status>
</kw>
<msg timestamp="20201030 18:29:16.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.234" endtime="20201030 18:29:16.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.255" endtime="20201030 18:29:16.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.258" endtime="20201030 18:29:16.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.231" endtime="20201030 18:29:16.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.229" endtime="20201030 18:29:16.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.267" endtime="20201030 18:29:16.556"></status>
</kw>
<msg timestamp="20201030 18:29:16.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.266" endtime="20201030 18:29:16.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.561" endtime="20201030 18:29:16.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.569" endtime="20201030 18:29:16.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.263" endtime="20201030 18:29:16.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.261" endtime="20201030 18:29:16.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.576" level="INFO">${RESULT} = [{'diff': 2.205499999999999e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.255500000000049e-05}, {'diff': 2.1527999999999825e-05}, {'diff': 2.154099999999992e-05}, {'diff': 2.1570000000002004e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:16.573" endtime="20201030 18:29:16.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.582" level="INFO">${ACCURACY} = {'diff': [2.205499999999999e-05, 2.205499999999999e-05, 2.255500000000049e-05, 2.1527999999999825e-05, 2.154099999999992e-05, 2.1570000000002004e-05, 2.1556000000002434e-05, 2.2041999999999895e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:29:16.577" endtime="20201030 18:29:16.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.586" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.585" endtime="20201030 18:29:16.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.589" level="INFO">VALUE: [2.205499999999999e-05, 2.205499999999999e-05, 2.255500000000049e-05, 2.1527999999999825e-05, 2.154099999999992e-05, 2.1570000000002004e-05, 2.1556000000002434e-05, 2.2041999999999895e-05, 2.206899999999956e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.2041999999999895e-05, 2.255500000000049e-05, 2.2569999999999535e-05, 2.155499999999949e-05, 2.1541999999999395e-05, 2.1527999999999825e-05, 2.2055999999999465e-05, 2.209700000000217e-05, 2.2040999999996952e-05, 2.2555999999999965e-05, 2.1555999999998965e-05, 2.205499999999999e-05, 2.155500000000296e-05, 2.2070000000002504e-05, 2.158299999999863e-05, 2.205499999999999e-05, 2.2056000000002934e-05, 2.212500000000131e-05, 2.155499999999949e-05, 2.2056000000002934e-05, 2.1555999999998965e-05, 2.211099999999827e-05, 2.2014000000000755e-05, 2.208299999999913e-05, 2.2555999999999965e-05, 2.204100000000042e-05, 2.155499999999949e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.2112000000001214e-05, 2.255500000000049e-05, 2.2555999999999965e-05, 2.254100000000092e-05, 2.256900000000006e-05, 2.1500000000000685e-05, 2.1556000000002434e-05, 2.202700000000085e-05, 2.156899999999906e-05, 2.2026999999997382e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.587" endtime="20201030 18:29:16.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.582" endtime="20201030 18:29:16.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.594" endtime="20201030 18:29:16.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.592" endtime="20201030 18:29:16.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.591" endtime="20201030 18:29:16.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.227" endtime="20201030 18:29:16.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.227" endtime="20201030 18:29:16.615"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.624" endtime="20201030 18:29:16.641"></status>
</kw>
<msg timestamp="20201030 18:29:16.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.622" endtime="20201030 18:29:16.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.643" endtime="20201030 18:29:16.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.645" endtime="20201030 18:29:16.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.620" endtime="20201030 18:29:16.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.617" endtime="20201030 18:29:16.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.655" endtime="20201030 18:29:16.942"></status>
</kw>
<msg timestamp="20201030 18:29:16.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020247958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.653" endtime="20201030 18:29:16.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020247958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.946" endtime="20201030 18:29:16.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.955" endtime="20201030 18:29:16.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.651" endtime="20201030 18:29:16.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.649" endtime="20201030 18:29:16.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.962" level="INFO">${RESULT} = [{'diff': 2.305500000000099e-05}, {'diff': 2.3055999999996996e-05}, {'diff': 2.3056000000000465e-05}, {'diff': 2.2554999999997022e-05}, {'diff': 2.258299999999963e-05}, {'diff': 2.2554999999997022e-05...</msg>
<status status="PASS" starttime="20201030 18:29:16.958" endtime="20201030 18:29:16.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.966" level="INFO">${ACCURACY} = {'diff': [2.305500000000099e-05, 2.3055999999996996e-05, 2.3056000000000465e-05, 2.2554999999997022e-05, 2.258299999999963e-05, 2.2554999999997022e-05, 2.2569999999999535e-05, 2.306900000000056e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:29:16.963" endtime="20201030 18:29:16.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.971" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.970" endtime="20201030 18:29:16.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.973" level="INFO">VALUE: [2.305500000000099e-05, 2.3055999999996996e-05, 2.3056000000000465e-05, 2.2554999999997022e-05, 2.258299999999963e-05, 2.2554999999997022e-05, 2.2569999999999535e-05, 2.306900000000056e-05, 2.305500000000099e-05, 2.3014000000001755e-05, 2.3056000000000465e-05, 2.255500000000049e-05, 2.3014000000001755e-05, 2.255500000000049e-05, 2.30969999999997e-05, 2.25969999999992e-05, 2.256900000000006e-05, 2.261099999999877e-05, 2.262500000000181e-05, 2.254100000000092e-05, 2.256900000000006e-05, 2.2542000000000395e-05, 2.3013999999998286e-05, 2.2528000000000825e-05, 2.3042000000000895e-05, 2.2542000000000395e-05, 2.3056000000000465e-05, 2.3070000000000035e-05, 2.256900000000006e-05, 2.3042000000000895e-05, 2.2999999999998716e-05, 2.3042000000000895e-05, 2.2555999999999965e-05, 2.2555999999999965e-05, 2.2542000000000395e-05, 2.3040999999997952e-05, 2.2528000000000825e-05, 2.3054999999997522e-05, 2.2569999999999535e-05, 2.3097999999999175e-05, 2.2555999999999965e-05, 2.2555999999999965e-05, 2.3042000000000895e-05, 2.3014000000001755e-05, 2.3042000000000895e-05, 2.2555999999999965e-05, 2.30969999999997e-05, 2.3570000000000535e-05, 2.2555999999999965e-05, 2.3056000000000465e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.972" endtime="20201030 18:29:16.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.967" endtime="20201030 18:29:16.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.978" endtime="20201030 18:29:16.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.977" endtime="20201030 18:29:16.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.976" endtime="20201030 18:29:16.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.616" endtime="20201030 18:29:16.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.615" endtime="20201030 18:29:16.999"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.008" endtime="20201030 18:29:17.027"></status>
</kw>
<msg timestamp="20201030 18:29:17.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.007" endtime="20201030 18:29:17.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.028" endtime="20201030 18:29:17.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.031" endtime="20201030 18:29:17.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.004" endtime="20201030 18:29:17.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.002" endtime="20201030 18:29:17.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.040" endtime="20201030 18:29:17.327"></status>
</kw>
<msg timestamp="20201030 18:29:17.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.039" endtime="20201030 18:29:17.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.332" endtime="20201030 18:29:17.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.341" endtime="20201030 18:29:17.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.036" endtime="20201030 18:29:17.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.034" endtime="20201030 18:29:17.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:17.347" level="INFO">${RESULT} = [{'diff': 2.4041999999998426e-05}, {'diff': 2.411100000000027e-05}, {'diff': 2.4040999999998952e-05}, {'diff': 2.4040999999998952e-05}, {'diff': 2.4026999999999382e-05}, {'diff': 2.4042000000001895e-0...</msg>
<status status="PASS" starttime="20201030 18:29:17.344" endtime="20201030 18:29:17.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:17.352" level="INFO">${ACCURACY} = {'diff': [2.4041999999998426e-05, 2.411100000000027e-05, 2.4040999999998952e-05, 2.4040999999998952e-05, 2.4026999999999382e-05, 2.4042000000001895e-05, 2.4055999999997996e-05, 2.4054999999998522e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:17.349" endtime="20201030 18:29:17.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.356" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:29:17.355" endtime="20201030 18:29:17.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.359" level="INFO">VALUE: [2.4041999999998426e-05, 2.411100000000027e-05, 2.4040999999998952e-05, 2.4040999999998952e-05, 2.4026999999999382e-05, 2.4042000000001895e-05, 2.4055999999997996e-05, 2.4054999999998522e-05, 2.462500000000034e-05, 2.4042000000001895e-05, 2.455500000000249e-05, 2.405500000000199e-05, 2.356900000000106e-05, 2.405500000000199e-05, 2.4055999999997996e-05, 2.3499999999999216e-05, 2.4041999999998426e-05, 2.4027999999998856e-05, 2.4013999999999286e-05, 2.4040999999998952e-05, 2.4040999999998952e-05, 2.406900000000156e-05, 2.3554999999998022e-05, 2.3542000000001395e-05, 2.354100000000192e-05, 2.406900000000156e-05, 2.4042000000001895e-05, 2.3526999999998882e-05, 2.3556000000000965e-05, 2.3554999999998022e-05, 2.3556000000000965e-05, 2.3540999999998452e-05, 2.4069999999997566e-05, 2.4070000000001035e-05, 2.4570000000001535e-05, 2.4054999999998522e-05, 2.3542000000001395e-05, 2.4055999999997996e-05, 2.3540999999998452e-05, 2.4555999999998496e-05, 2.35970000000002e-05, 2.3514000000002255e-05, 2.408300000000113e-05, 2.4054999999998522e-05, 2.3556000000000965e-05, 2.4041999999998426e-05, 2.3527999999998356e-05, 2.4055999999997996e-05, 2.3555999999997496e-05, 2.3570000000000535e-05]</msg>
<status status="PASS" starttime="20201030 18:29:17.358" endtime="20201030 18:29:17.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.353" endtime="20201030 18:29:17.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:17.370" endtime="20201030 18:29:17.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.368" endtime="20201030 18:29:17.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.367" endtime="20201030 18:29:17.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.000" endtime="20201030 18:29:17.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.000" endtime="20201030 18:29:17.390"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.399" endtime="20201030 18:29:17.417"></status>
</kw>
<msg timestamp="20201030 18:29:17.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.398" endtime="20201030 18:29:17.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.419" endtime="20201030 18:29:17.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.421" endtime="20201030 18:29:17.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.395" endtime="20201030 18:29:17.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.393" endtime="20201030 18:29:17.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.431" endtime="20201030 18:29:17.717"></status>
</kw>
<msg timestamp="20201030 18:29:17.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020229347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.429" endtime="20201030 18:29:17.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020229347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.722" endtime="20201030 18:29:17.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.730" endtime="20201030 18:29:17.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.426" endtime="20201030 18:29:17.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.425" endtime="20201030 18:29:17.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:17.737" level="INFO">${RESULT} = [{'diff': 2.5041999999999426e-05}, {'diff': 2.5056000000002465e-05}, {'diff': 2.5055999999998996e-05}, {'diff': 2.455500000000249e-05}, {'diff': 2.5041999999999426e-05}, {'diff': 2.4541999999998926e-0...</msg>
<status status="PASS" starttime="20201030 18:29:17.734" endtime="20201030 18:29:17.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:17.742" level="INFO">${ACCURACY} = {'diff': [2.5041999999999426e-05, 2.5056000000002465e-05, 2.5055999999998996e-05, 2.455500000000249e-05, 2.5041999999999426e-05, 2.4541999999998926e-05, 2.4555999999998496e-05, 2.5055999999998996e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:17.738" endtime="20201030 18:29:17.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.747" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:29:17.746" endtime="20201030 18:29:17.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.749" level="INFO">VALUE: [2.5041999999999426e-05, 2.5056000000002465e-05, 2.5055999999998996e-05, 2.455500000000249e-05, 2.5041999999999426e-05, 2.4541999999998926e-05, 2.4555999999998496e-05, 2.5055999999998996e-05, 2.5055999999998996e-05, 2.5014000000000286e-05, 2.4542000000002395e-05, 2.5027999999999856e-05, 2.5040999999999952e-05, 2.5041999999999426e-05, 2.506900000000256e-05, 2.5014000000000286e-05, 2.5055999999998996e-05, 2.5068999999999092e-05, 2.4555999999998496e-05, 2.4541999999998926e-05, 2.5042000000002895e-05, 2.4556000000001965e-05, 2.4570000000001535e-05, 2.5555000000000022e-05, 2.5054999999999522e-05, 2.5040999999999952e-05, 2.562500000000134e-05, 2.455500000000249e-05, 2.4554999999999022e-05, 2.4541999999998926e-05, 2.5069999999998566e-05, 2.5055999999998996e-05, 2.4584000000001105e-05, 2.4500000000000216e-05, 2.4540999999999452e-05, 2.4527999999999356e-05, 2.4554999999999022e-05, 2.4541999999998926e-05, 2.5013000000000812e-05, 2.5040999999999952e-05, 2.4540999999999452e-05, 2.50970000000017e-05, 2.4541999999998926e-05, 2.5054999999999522e-05, 2.512500000000084e-05, 2.4568999999998592e-05, 2.4556000000001965e-05, 2.4554999999999022e-05, 2.5040999999999952e-05, 2.5082999999998662e-05]</msg>
<status status="PASS" starttime="20201030 18:29:17.748" endtime="20201030 18:29:17.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.743" endtime="20201030 18:29:17.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:17.755" endtime="20201030 18:29:17.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.753" endtime="20201030 18:29:17.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.752" endtime="20201030 18:29:17.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.391" endtime="20201030 18:29:17.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.391" endtime="20201030 18:29:17.775"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.784" endtime="20201030 18:29:17.800"></status>
</kw>
<msg timestamp="20201030 18:29:17.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.783" endtime="20201030 18:29:17.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.802" endtime="20201030 18:29:17.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.804" endtime="20201030 18:29:17.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.780" endtime="20201030 18:29:17.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.778" endtime="20201030 18:29:17.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.814" endtime="20201030 18:29:18.102"></status>
</kw>
<msg timestamp="20201030 18:29:18.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020216806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020242889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.812" endtime="20201030 18:29:18.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020216806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020242889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.106" endtime="20201030 18:29:18.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.115" endtime="20201030 18:29:18.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.809" endtime="20201030 18:29:18.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.808" endtime="20201030 18:29:18.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.122" level="INFO">${RESULT} = [{'diff': 2.6082999999999662e-05}, {'diff': 2.6069000000000092e-05}, {'diff': 2.5555000000000022e-05}, {'diff': 2.556900000000306e-05}, {'diff': 2.6027000000001382e-05}, {'diff': 2.5555999999999496e-0...</msg>
<status status="PASS" starttime="20201030 18:29:18.118" endtime="20201030 18:29:18.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:18.126" level="INFO">${ACCURACY} = {'diff': [2.6082999999999662e-05, 2.6069000000000092e-05, 2.5555000000000022e-05, 2.556900000000306e-05, 2.6027000000001382e-05, 2.5555999999999496e-05, 2.5555999999999496e-05, 2.6570000000000066e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:18.123" endtime="20201030 18:29:18.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.131" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:29:18.129" endtime="20201030 18:29:18.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.133" level="INFO">VALUE: [2.6082999999999662e-05, 2.6069000000000092e-05, 2.5555000000000022e-05, 2.556900000000306e-05, 2.6027000000001382e-05, 2.5555999999999496e-05, 2.5555999999999496e-05, 2.6570000000000066e-05, 2.6055999999999996e-05, 2.6055000000000522e-05, 2.556900000000306e-05, 2.6055999999999996e-05, 2.5555000000000022e-05, 2.6055999999999996e-05, 2.5568999999999592e-05, 2.5582999999999162e-05, 2.5540999999996983e-05, 2.5610999999998302e-05, 2.5471999999998607e-05, 2.6069000000000092e-05, 2.5999999999998247e-05, 2.5541999999999926e-05, 2.6000000000001716e-05, 2.6042000000000426e-05, 2.6042000000000426e-05, 2.5555999999999496e-05, 2.5541999999999926e-05, 2.5555000000000022e-05, 2.5541999999999926e-05, 2.6069000000000092e-05, 2.6041000000000952e-05, 2.5556000000002965e-05, 2.563899999999744e-05, 2.5555999999999496e-05, 2.6042000000000426e-05, 2.6041000000000952e-05, 2.6028000000000856e-05, 2.6055000000000522e-05, 2.6027999999997387e-05, 2.547299999999808e-05, 2.6096999999999232e-05, 2.5555000000000022e-05, 2.6055000000000522e-05, 2.6055999999999996e-05, 2.5555999999999496e-05, 2.6055999999999996e-05, 2.5582999999999162e-05, 2.6055000000000522e-05, 2.5541999999999926e-05, 2.6041999999996956e-05]</msg>
<status status="PASS" starttime="20201030 18:29:18.132" endtime="20201030 18:29:18.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.127" endtime="20201030 18:29:18.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.138" endtime="20201030 18:29:18.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.137" endtime="20201030 18:29:18.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.136" endtime="20201030 18:29:18.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.776" endtime="20201030 18:29:18.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.776" endtime="20201030 18:29:18.159"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.168" endtime="20201030 18:29:18.186"></status>
</kw>
<msg timestamp="20201030 18:29:18.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.167" endtime="20201030 18:29:18.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.188" endtime="20201030 18:29:18.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.191" endtime="20201030 18:29:18.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.164" endtime="20201030 18:29:18.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.162" endtime="20201030 18:29:18.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.200" endtime="20201030 18:29:18.487"></status>
</kw>
<msg timestamp="20201030 18:29:18.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021266167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021292708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.198" endtime="20201030 18:29:18.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021266167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021292708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.492" endtime="20201030 18:29:18.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.500" endtime="20201030 18:29:18.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.196" endtime="20201030 18:29:18.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.194" endtime="20201030 18:29:18.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.507" level="INFO">${RESULT} = [{'diff': 2.6541000000001452e-05}, {'diff': 2.6556000000000496e-05}, {'diff': 2.6999999999999247e-05}, {'diff': 2.6556000000000496e-05}, {'diff': 2.661100000000277e-05}, {'diff': 2.7027999999998387e-0...</msg>
<status status="PASS" starttime="20201030 18:29:18.504" endtime="20201030 18:29:18.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:18.511" level="INFO">${ACCURACY} = {'diff': [2.6541000000001452e-05, 2.6556000000000496e-05, 2.6999999999999247e-05, 2.6556000000000496e-05, 2.661100000000277e-05, 2.7027999999998387e-05, 2.6542000000000926e-05, 2.6570000000000066e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:18.508" endtime="20201030 18:29:18.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.516" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:29:18.515" endtime="20201030 18:29:18.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.518" level="INFO">VALUE: [2.6541000000001452e-05, 2.6556000000000496e-05, 2.6999999999999247e-05, 2.6556000000000496e-05, 2.661100000000277e-05, 2.7027999999998387e-05, 2.6542000000000926e-05, 2.6570000000000066e-05, 2.7027999999998387e-05, 2.6555999999997026e-05, 2.7055999999997526e-05, 2.6555000000001022e-05, 2.6542000000000926e-05, 2.7041999999997957e-05, 2.7041999999997957e-05, 2.6540999999997983e-05, 2.7499999999999747e-05, 2.7055000000001522e-05, 2.7084000000000136e-05, 2.6568999999997123e-05, 2.7026999999998913e-05, 2.7027999999998387e-05, 2.7042000000001426e-05, 2.6570000000000066e-05, 2.7056000000000996e-05, 2.6513999999998317e-05, 2.6541999999997457e-05, 2.7097999999999706e-05, 2.7028000000001856e-05, 2.6556000000000496e-05, 2.7056000000000996e-05, 2.6554999999997553e-05, 2.6555000000001022e-05, 2.7055999999997526e-05, 2.6570000000000066e-05, 2.7556000000001496e-05, 2.6597999999999206e-05, 2.7056000000000996e-05, 2.6555999999997026e-05, 2.7055000000001522e-05, 2.6570000000000066e-05, 2.7054999999998053e-05, 2.7042000000001426e-05, 2.7055999999997526e-05, 2.7056000000000996e-05, 2.7056000000000996e-05, 2.6556000000000496e-05, 2.7041999999997957e-05, 2.6555000000001022e-05, 2.6570000000000066e-05]</msg>
<status status="PASS" starttime="20201030 18:29:18.517" endtime="20201030 18:29:18.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.512" endtime="20201030 18:29:18.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.524" endtime="20201030 18:29:18.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.523" endtime="20201030 18:29:18.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.522" endtime="20201030 18:29:18.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.160" endtime="20201030 18:29:18.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.160" endtime="20201030 18:29:18.545"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.554" endtime="20201030 18:29:18.571"></status>
</kw>
<msg timestamp="20201030 18:29:18.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.553" endtime="20201030 18:29:18.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.572" endtime="20201030 18:29:18.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.575" endtime="20201030 18:29:18.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.550" endtime="20201030 18:29:18.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.548" endtime="20201030 18:29:18.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.584" endtime="20201030 18:29:18.871"></status>
</kw>
<msg timestamp="20201030 18:29:18.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020199125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.583" endtime="20201030 18:29:18.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020199125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.876" endtime="20201030 18:29:18.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.884" endtime="20201030 18:29:18.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.580" endtime="20201030 18:29:18.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.578" endtime="20201030 18:29:18.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.891" level="INFO">${RESULT} = [{'diff': 2.7514000000002786e-05}, {'diff': 2.7555999999998027e-05}, {'diff': 2.8041999999998957e-05}, {'diff': 2.7986000000000677e-05}, {'diff': 2.7542000000001926e-05}, {'diff': 2.8125000000000372e-...</msg>
<status status="PASS" starttime="20201030 18:29:18.888" endtime="20201030 18:29:18.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:18.896" level="INFO">${ACCURACY} = {'diff': [2.7514000000002786e-05, 2.7555999999998027e-05, 2.8041999999998957e-05, 2.7986000000000677e-05, 2.7542000000001926e-05, 2.8125000000000372e-05, 2.7554999999998553e-05, 2.7541999999998457e-05...</msg>
<status status="PASS" starttime="20201030 18:29:18.892" endtime="20201030 18:29:18.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.901" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:29:18.900" endtime="20201030 18:29:18.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.903" level="INFO">VALUE: [2.7514000000002786e-05, 2.7555999999998027e-05, 2.8041999999998957e-05, 2.7986000000000677e-05, 2.7542000000001926e-05, 2.8125000000000372e-05, 2.7554999999998553e-05, 2.7541999999998457e-05, 2.7541999999998457e-05, 2.7554999999998553e-05, 2.8069000000002092e-05, 2.8026999999999913e-05, 2.7555000000002022e-05, 2.8068999999998623e-05, 2.8055000000002522e-05, 2.8082999999998193e-05, 2.7554999999998553e-05, 2.8056000000001996e-05, 2.8040999999999483e-05, 2.7555999999998027e-05, 2.8069999999998096e-05, 2.7570000000001066e-05, 2.8554999999999553e-05, 2.7556000000001496e-05, 2.8028000000002856e-05, 2.8000000000000247e-05, 2.7554999999998553e-05, 2.8068999999998623e-05, 2.7556000000001496e-05, 2.8527999999999887e-05, 2.8000000000000247e-05, 2.8569999999998597e-05, 2.7556000000001496e-05, 2.8555999999999027e-05, 2.8541999999999457e-05, 2.8070000000001566e-05, 2.7540999999998983e-05, 2.8486000000001177e-05, 2.7583999999997166e-05, 2.8083000000001662e-05, 2.8111000000000802e-05, 2.7555999999998027e-05, 2.7541000000002452e-05, 2.8040999999999483e-05, 2.8042000000002426e-05, 2.7554999999998553e-05, 2.8056000000001996e-05, 2.8555999999999027e-05, 2.8027999999999387e-05, 2.7527999999998887e-05]</msg>
<status status="PASS" starttime="20201030 18:29:18.902" endtime="20201030 18:29:18.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.897" endtime="20201030 18:29:18.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.909" endtime="20201030 18:29:18.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.907" endtime="20201030 18:29:18.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.906" endtime="20201030 18:29:18.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.546" endtime="20201030 18:29:18.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.545" endtime="20201030 18:29:18.929"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.938" endtime="20201030 18:29:18.956"></status>
</kw>
<msg timestamp="20201030 18:29:18.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.937" endtime="20201030 18:29:18.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.957" endtime="20201030 18:29:18.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.960" endtime="20201030 18:29:18.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.934" endtime="20201030 18:29:18.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.932" endtime="20201030 18:29:18.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.970" endtime="20201030 18:29:19.256"></status>
</kw>
<msg timestamp="20201030 18:29:19.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.968" endtime="20201030 18:29:19.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.260" endtime="20201030 18:29:19.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.269" endtime="20201030 18:29:19.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.965" endtime="20201030 18:29:19.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.963" endtime="20201030 18:29:19.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:19.276" level="INFO">${RESULT} = [{'diff': 2.8554999999999553e-05}, {'diff': 2.8554999999999553e-05}, {'diff': 2.9069999999999097e-05}, {'diff': 2.8527999999999887e-05}, {'diff': 2.847300000000108e-05}, {'diff': 2.9055999999999527e-0...</msg>
<status status="PASS" starttime="20201030 18:29:19.272" endtime="20201030 18:29:19.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:19.280" level="INFO">${ACCURACY} = {'diff': [2.8554999999999553e-05, 2.8554999999999553e-05, 2.9069999999999097e-05, 2.8527999999999887e-05, 2.847300000000108e-05, 2.9055999999999527e-05, 2.9041000000000483e-05, 2.9098000000001706e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:19.277" endtime="20201030 18:29:19.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.285" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:29:19.284" endtime="20201030 18:29:19.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.287" level="INFO">VALUE: [2.8554999999999553e-05, 2.8554999999999553e-05, 2.9069999999999097e-05, 2.8527999999999887e-05, 2.847300000000108e-05, 2.9055999999999527e-05, 2.9041000000000483e-05, 2.9098000000001706e-05, 2.9068999999999623e-05, 2.8555999999999027e-05, 2.9055999999999527e-05, 2.9056000000002996e-05, 2.8554999999999553e-05, 2.8541999999999457e-05, 2.9041000000000483e-05, 2.9040999999997014e-05, 2.8554999999999553e-05, 2.9070000000002566e-05, 2.9082999999999193e-05, 2.9055999999999527e-05, 2.8555999999999027e-05, 2.9110999999998333e-05, 2.9055999999999527e-05, 2.9028000000000387e-05, 2.9041999999999957e-05, 2.8555999999999027e-05, 2.8555999999999027e-05, 2.9054999999996584e-05, 2.9055000000000053e-05, 2.9041999999999957e-05, 2.9041999999999957e-05, 2.9041999999999957e-05, 2.9569000000000123e-05, 2.9068999999999623e-05, 2.9069999999999097e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.9055000000000053e-05, 2.9068999999999623e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8554999999999553e-05, 2.9055000000000053e-05, 2.9041999999999957e-05, 2.8556000000002496e-05, 2.9056000000002996e-05, 2.9041999999999957e-05, 2.9068999999999623e-05, 2.9040999999997014e-05]</msg>
<status status="PASS" starttime="20201030 18:29:19.286" endtime="20201030 18:29:19.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.281" endtime="20201030 18:29:19.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:19.293" endtime="20201030 18:29:19.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.291" endtime="20201030 18:29:19.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.290" endtime="20201030 18:29:19.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.930" endtime="20201030 18:29:19.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.930" endtime="20201030 18:29:19.314"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.323" endtime="20201030 18:29:19.344"></status>
</kw>
<msg timestamp="20201030 18:29:19.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.321" endtime="20201030 18:29:19.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.345" endtime="20201030 18:29:19.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.348" endtime="20201030 18:29:19.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.318" endtime="20201030 18:29:19.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.316" endtime="20201030 18:29:19.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.358" endtime="20201030 18:29:19.645"></status>
</kw>
<msg timestamp="20201030 18:29:19.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023604847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023635403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.356" endtime="20201030 18:29:19.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023604847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023635403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.650" endtime="20201030 18:29:19.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.658" endtime="20201030 18:29:19.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.354" endtime="20201030 18:29:19.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.352" endtime="20201030 18:29:19.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:19.665" level="INFO">${RESULT} = [{'diff': 3.055599999999756e-05}, {'diff': 2.9555000000000553e-05}, {'diff': 3.0055999999997057e-05}, {'diff': 3.0056000000000527e-05}, {'diff': 3.0055000000001053e-05}, {'diff': 3.0056000000000527e-0...</msg>
<status status="PASS" starttime="20201030 18:29:19.662" endtime="20201030 18:29:19.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:19.669" level="INFO">${ACCURACY} = {'diff': [3.055599999999756e-05, 2.9555000000000553e-05, 3.0055999999997057e-05, 3.0056000000000527e-05, 3.0055000000001053e-05, 3.0056000000000527e-05, 3.0056000000000527e-05, 3.0056000000000527e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:19.666" endtime="20201030 18:29:19.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.674" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:29:19.673" endtime="20201030 18:29:19.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.677" level="INFO">VALUE: [3.055599999999756e-05, 2.9555000000000553e-05, 3.0055999999997057e-05, 3.0056000000000527e-05, 3.0055000000001053e-05, 3.0056000000000527e-05, 3.0056000000000527e-05, 3.0056000000000527e-05, 3.0069000000000623e-05, 3.0041000000001483e-05, 3.0041999999997487e-05, 3.0028000000001387e-05, 3.0070000000000097e-05, 2.9514000000001317e-05, 3.0514000000002317e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 3.0040999999998014e-05, 2.9986000000002677e-05, 3.0042000000000957e-05, 3.0554999999998084e-05, 2.9542000000000457e-05, 2.9540999999997514e-05, 3.0069000000000623e-05, 2.997299999999911e-05, 2.9986000000002677e-05, 2.9569000000000123e-05, 3.0068999999997154e-05, 3.0124999999998903e-05, 2.9583999999999167e-05, 3.0042000000000957e-05, 2.9555000000000553e-05, 2.9542000000000457e-05, 2.9556000000000027e-05, 3.0041999999997487e-05, 2.9625000000001872e-05, 2.9556000000000027e-05, 2.9527999999997417e-05, 3.0042000000000957e-05, 3.0042000000000957e-05, 2.9540999999997514e-05, 2.9542000000000457e-05, 3.0055000000001053e-05, 2.9541000000000983e-05, 2.9500000000001747e-05, 3.0055000000001053e-05, 3.0070000000000097e-05, 2.9556000000000027e-05, 2.9569000000000123e-05, 2.9541000000000983e-05]</msg>
<status status="PASS" starttime="20201030 18:29:19.675" endtime="20201030 18:29:19.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.670" endtime="20201030 18:29:19.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:19.683" endtime="20201030 18:29:19.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.681" endtime="20201030 18:29:19.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.680" endtime="20201030 18:29:19.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.314" endtime="20201030 18:29:19.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.314" endtime="20201030 18:29:19.703"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.712" endtime="20201030 18:29:19.730"></status>
</kw>
<msg timestamp="20201030 18:29:19.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.711" endtime="20201030 18:29:19.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.732" endtime="20201030 18:29:19.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.734" endtime="20201030 18:29:19.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.708" endtime="20201030 18:29:19.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.706" endtime="20201030 18:29:19.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.744" endtime="20201030 18:29:20.031"></status>
</kw>
<msg timestamp="20201030 18:29:20.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020185264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02021675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:19.742" endtime="20201030 18:29:20.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020185264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02021675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:20.035" endtime="20201030 18:29:20.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.044" endtime="20201030 18:29:20.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.740" endtime="20201030 18:29:20.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.738" endtime="20201030 18:29:20.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.051" level="INFO">${RESULT} = [{'diff': 3.148599999999724e-05}, {'diff': 3.104199999999849e-05}, {'diff': 3.105500000000205e-05}, {'diff': 3.055599999999756e-05}, {'diff': 3.054200000000146e-05}, {'diff': 3.0526999999998944e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:20.047" endtime="20201030 18:29:20.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:20.056" level="INFO">${ACCURACY} = {'diff': [3.148599999999724e-05, 3.104199999999849e-05, 3.105500000000205e-05, 3.055599999999756e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.105599999999806e-05, 3.056900000000112e-05, 3.111...</msg>
<status status="PASS" starttime="20201030 18:29:20.052" endtime="20201030 18:29:20.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.061" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:29:20.060" endtime="20201030 18:29:20.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.063" level="INFO">VALUE: [3.148599999999724e-05, 3.104199999999849e-05, 3.105500000000205e-05, 3.055599999999756e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.105599999999806e-05, 3.056900000000112e-05, 3.111100000000033e-05, 3.0514000000002317e-05, 3.1054999999998584e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.1082999999997724e-05, 3.105500000000205e-05, 3.156999999999813e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.105599999999806e-05, 3.0568999999997654e-05, 3.10700000000011e-05, 3.055600000000103e-05, 3.0554999999998084e-05, 3.055600000000103e-05, 3.154199999999899e-05, 3.1040999999999014e-05, 3.054100000000198e-05, 3.0500000000002747e-05, 3.1054999999998584e-05, 3.105599999999806e-05, 3.10700000000011e-05, 3.0554999999998084e-05, 3.10700000000011e-05, 3.101400000000282e-05, 3.1040999999999014e-05, 3.1054999999998584e-05, 3.105600000000153e-05, 3.108300000000119e-05, 3.06249999999994e-05, 3.058300000000069e-05, 3.056900000000112e-05, 3.108300000000119e-05, 3.0568999999997654e-05, 3.106999999999763e-05, 3.054100000000198e-05, 3.0540999999998514e-05, 3.058300000000069e-05, 3.104200000000196e-05, 3.1054999999998584e-05, 3.054100000000198e-05]</msg>
<status status="PASS" starttime="20201030 18:29:20.062" endtime="20201030 18:29:20.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.057" endtime="20201030 18:29:20.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:20.068" endtime="20201030 18:29:20.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.067" endtime="20201030 18:29:20.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.066" endtime="20201030 18:29:20.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.704" endtime="20201030 18:29:20.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.704" endtime="20201030 18:29:20.089"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.098" endtime="20201030 18:29:20.115"></status>
</kw>
<msg timestamp="20201030 18:29:20.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.096" endtime="20201030 18:29:20.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.117" endtime="20201030 18:29:20.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.120" endtime="20201030 18:29:20.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.094" endtime="20201030 18:29:20.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.092" endtime="20201030 18:29:20.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.129" endtime="20201030 18:29:20.417"></status>
</kw>
<msg timestamp="20201030 18:29:20.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020191431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.127" endtime="20201030 18:29:20.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020191431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.421" endtime="20201030 18:29:20.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.429" endtime="20201030 18:29:20.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.125" endtime="20201030 18:29:20.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.123" endtime="20201030 18:29:20.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.436" level="INFO">${RESULT} = [{'diff': 3.2138000000001e-05}, {'diff': 3.206999999999863e-05}, {'diff': 3.155599999999856e-05}, {'diff': 3.206999999999863e-05}, {'diff': 3.154199999999899e-05}, {'diff': 3.155500000000255e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:20.433" endtime="20201030 18:29:20.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:20.441" level="INFO">${ACCURACY} = {'diff': [3.2138000000001e-05, 3.206999999999863e-05, 3.155599999999856e-05, 3.206999999999863e-05, 3.154199999999899e-05, 3.155500000000255e-05, 3.1540999999999514e-05, 3.206900000000262e-05, 3.15689...</msg>
<status status="PASS" starttime="20201030 18:29:20.437" endtime="20201030 18:29:20.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.445" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:29:20.444" endtime="20201030 18:29:20.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.448" level="INFO">VALUE: [3.2138000000001e-05, 3.206999999999863e-05, 3.155599999999856e-05, 3.206999999999863e-05, 3.154199999999899e-05, 3.155500000000255e-05, 3.1540999999999514e-05, 3.206900000000262e-05, 3.1568999999998654e-05, 3.202799999999992e-05, 3.163899999999997e-05, 3.205600000000253e-05, 3.151399999999985e-05, 3.198600000000121e-05, 3.1612000000000307e-05, 3.197300000000111e-05, 3.205599999999906e-05, 3.155599999999856e-05, 3.204199999999949e-05, 3.155599999999856e-05, 3.205500000000305e-05, 3.155599999999856e-05, 3.2540999999997045e-05, 3.202799999999992e-05, 3.20700000000021e-05, 3.2041000000000014e-05, 3.199999999999731e-05, 3.204200000000296e-05, 3.20700000000021e-05, 3.155599999999856e-05, 3.204200000000296e-05, 3.155599999999856e-05, 3.2054999999999584e-05, 3.204199999999949e-05, 3.156999999999813e-05, 3.2112000000000807e-05, 3.205599999999906e-05, 3.255600000000303e-05, 3.1554999999999084e-05, 3.2082999999998724e-05, 3.154199999999899e-05, 3.154199999999899e-05, 3.1540999999999514e-05, 3.155599999999856e-05, 3.16250000000004e-05, 3.255599999999956e-05, 3.200000000000078e-05, 3.205599999999906e-05, 3.158400000000117e-05, 3.248700000000118e-05]</msg>
<status status="PASS" starttime="20201030 18:29:20.446" endtime="20201030 18:29:20.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.441" endtime="20201030 18:29:20.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:20.453" endtime="20201030 18:29:20.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.451" endtime="20201030 18:29:20.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.450" endtime="20201030 18:29:20.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.090" endtime="20201030 18:29:20.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.090" endtime="20201030 18:29:20.474"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.483" endtime="20201030 18:29:20.502"></status>
</kw>
<msg timestamp="20201030 18:29:20.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.481" endtime="20201030 18:29:20.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.504" endtime="20201030 18:29:20.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.506" endtime="20201030 18:29:20.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.478" endtime="20201030 18:29:20.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.476" endtime="20201030 18:29:20.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.516" endtime="20201030 18:29:20.802"></status>
</kw>
<msg timestamp="20201030 18:29:20.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021142833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021175931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.514" endtime="20201030 18:29:20.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021142833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021175931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.806" endtime="20201030 18:29:20.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.814" endtime="20201030 18:29:20.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.511" endtime="20201030 18:29:20.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.509" endtime="20201030 18:29:20.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.821" level="INFO">${RESULT} = [{'diff': 3.309799999999877e-05}, {'diff': 3.259700000000226e-05}, {'diff': 3.252800000000042e-05}, {'diff': 3.256999999999913e-05}, {'diff': 3.255599999999956e-05}, {'diff': 3.354200000000099e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:20.818" endtime="20201030 18:29:20.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:20.825" level="INFO">${ACCURACY} = {'diff': [3.309799999999877e-05, 3.259700000000226e-05, 3.252800000000042e-05, 3.256999999999913e-05, 3.255599999999956e-05, 3.354200000000099e-05, 3.254199999999999e-05, 3.254199999999999e-05, 3.3055...</msg>
<status status="PASS" starttime="20201030 18:29:20.822" endtime="20201030 18:29:20.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.830" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:29:20.829" endtime="20201030 18:29:20.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.832" level="INFO">VALUE: [3.309799999999877e-05, 3.259700000000226e-05, 3.252800000000042e-05, 3.256999999999913e-05, 3.255599999999956e-05, 3.354200000000099e-05, 3.254199999999999e-05, 3.254199999999999e-05, 3.3055000000000584e-05, 3.305600000000006e-05, 3.305600000000006e-05, 3.3527000000001944e-05, 3.30839999999992e-05, 3.255600000000303e-05, 3.3096999999999294e-05, 3.254199999999999e-05, 3.304200000000049e-05, 3.255599999999956e-05, 3.254199999999999e-05, 3.254199999999999e-05, 3.3055000000000584e-05, 3.254199999999999e-05, 3.306999999999963e-05, 3.3069000000000154e-05, 3.251400000000085e-05, 3.305600000000006e-05, 3.349999999999881e-05, 3.304200000000049e-05, 3.3041000000001014e-05, 3.2555000000000084e-05, 3.3055000000000584e-05, 3.305600000000006e-05, 3.305600000000006e-05, 3.3082999999999724e-05, 3.302800000000092e-05, 3.2555000000000084e-05, 3.254199999999999e-05, 3.304200000000049e-05, 3.305600000000006e-05, 3.256999999999913e-05, 3.304200000000049e-05, 3.305600000000006e-05, 3.2541000000000514e-05, 3.3040999999997545e-05, 3.254199999999999e-05, 3.354200000000099e-05, 3.305600000000006e-05, 3.251400000000085e-05, 3.3054999999997114e-05, 3.3596999999999794e-05]</msg>
<status status="PASS" starttime="20201030 18:29:20.831" endtime="20201030 18:29:20.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.826" endtime="20201030 18:29:20.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:20.839" endtime="20201030 18:29:20.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.837" endtime="20201030 18:29:20.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.836" endtime="20201030 18:29:20.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.475" endtime="20201030 18:29:20.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.474" endtime="20201030 18:29:20.859"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.868" endtime="20201030 18:29:20.886"></status>
</kw>
<msg timestamp="20201030 18:29:20.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.867" endtime="20201030 18:29:20.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.888" endtime="20201030 18:29:20.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.890" endtime="20201030 18:29:20.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.864" endtime="20201030 18:29:20.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.862" endtime="20201030 18:29:20.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.900" endtime="20201030 18:29:21.185"></status>
</kw>
<msg timestamp="20201030 18:29:21.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020196889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.898" endtime="20201030 18:29:21.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020196889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.190" endtime="20201030 18:29:21.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.198" endtime="20201030 18:29:21.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.895" endtime="20201030 18:29:21.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.893" endtime="20201030 18:29:21.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.205" level="INFO">${RESULT} = [{'diff': 3.4124999999999434e-05}, {'diff': 3.4055000000001584e-05}, {'diff': 3.407000000000063e-05}, {'diff': 3.3555000000001084e-05}, {'diff': 3.355600000000056e-05}, {'diff': 3.4055000000001584e-05...</msg>
<status status="PASS" starttime="20201030 18:29:21.202" endtime="20201030 18:29:21.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.210" level="INFO">${ACCURACY} = {'diff': [3.4124999999999434e-05, 3.4055000000001584e-05, 3.407000000000063e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.4055000000001584e-05, 3.3541000000001514e-05, 3.3541000000001514e-05, ...</msg>
<status status="PASS" starttime="20201030 18:29:21.206" endtime="20201030 18:29:21.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.215" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.214" endtime="20201030 18:29:21.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.217" level="INFO">VALUE: [3.4124999999999434e-05, 3.4055000000001584e-05, 3.407000000000063e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.4055000000001584e-05, 3.3541000000001514e-05, 3.3541000000001514e-05, 3.4054999999998115e-05, 3.456999999999766e-05, 3.3541000000001514e-05, 3.4054999999998115e-05, 3.405600000000106e-05, 3.3555000000001084e-05, 3.3555000000001084e-05, 3.455599999999809e-05, 3.4040999999998545e-05, 3.355599999999709e-05, 3.355600000000056e-05, 3.405600000000106e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.3527000000001944e-05, 3.404199999999802e-05, 3.352799999999795e-05, 3.3596999999999794e-05, 3.3555000000001084e-05, 3.407000000000063e-05, 3.3596999999999794e-05, 3.400000000000278e-05, 3.4041000000002014e-05, 3.3596999999999794e-05, 3.352799999999795e-05, 3.355600000000056e-05, 3.398599999999974e-05, 3.404200000000149e-05, 3.401400000000235e-05, 3.4054999999998115e-05, 3.354200000000099e-05, 3.4054999999998115e-05, 3.406999999999716e-05, 3.3569000000000654e-05, 3.405600000000106e-05, 3.351399999999838e-05, 3.402799999999845e-05, 3.402800000000192e-05, 3.354200000000099e-05, 3.3540999999998045e-05, 3.398599999999974e-05]</msg>
<status status="PASS" starttime="20201030 18:29:21.216" endtime="20201030 18:29:21.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.211" endtime="20201030 18:29:21.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.223" endtime="20201030 18:29:21.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.221" endtime="20201030 18:29:21.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.220" endtime="20201030 18:29:21.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.860" endtime="20201030 18:29:21.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.860" endtime="20201030 18:29:21.243"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.252" endtime="20201030 18:29:21.271"></status>
</kw>
<msg timestamp="20201030 18:29:21.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.251" endtime="20201030 18:29:21.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.273" endtime="20201030 18:29:21.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.275" endtime="20201030 18:29:21.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.248" endtime="20201030 18:29:21.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.246" endtime="20201030 18:29:21.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.285" endtime="20201030 18:29:21.572"></status>
</kw>
<msg timestamp="20201030 18:29:21.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.283" endtime="20201030 18:29:21.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.577" endtime="20201030 18:29:21.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.585" endtime="20201030 18:29:21.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.281" endtime="20201030 18:29:21.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.279" endtime="20201030 18:29:21.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.592" level="INFO">${RESULT} = [{'diff': 5.161100000000002e-05}, {'diff': 5.213899999999966e-05}, {'diff': 5.126399999999878e-05}, {'diff': 5.211199999999999e-05}, {'diff': 5.144500000000066e-05}, {'diff': 5.132000000000053e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:21.589" endtime="20201030 18:29:21.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.596" level="INFO">${ACCURACY} = {'diff': [5.161100000000002e-05, 5.213899999999966e-05, 5.126399999999878e-05, 5.211199999999999e-05, 5.144500000000066e-05, 5.132000000000053e-05, 5.211100000000052e-05, 5.188899999999941e-05, 5.1305...</msg>
<status status="PASS" starttime="20201030 18:29:21.593" endtime="20201030 18:29:21.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.601" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.600" endtime="20201030 18:29:21.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.603" level="INFO">VALUE: [5.161100000000002e-05, 5.213899999999966e-05, 5.126399999999878e-05, 5.211199999999999e-05, 5.144500000000066e-05, 5.132000000000053e-05, 5.211100000000052e-05, 5.188899999999941e-05, 5.130500000000149e-05, 5.126299999999931e-05, 5.183300000000113e-05, 5.21669999999988e-05, 5.177700000000285e-05, 5.129199999999792e-05, 5.211100000000052e-05, 5.181899999999809e-05, 5.183299999999766e-05, 5.190299999999898e-05, 5.169400000000143e-05, 5.211100000000052e-05, 5.218000000000236e-05, 5.215299999999923e-05, 5.190299999999898e-05, 5.169500000000091e-05, 5.180600000000146e-05, 5.218099999999837e-05, 5.154200000000164e-05, 5.222300000000055e-05, 5.172200000000057e-05, 5.194499999999769e-05, 5.137499999999934e-05, 5.222200000000107e-05, 5.126399999999878e-05, 5.22080000000015e-05, 5.13470000000002e-05, 5.149999999999946e-05, 5.177699999999938e-05, 5.173600000000014e-05, 5.136099999999977e-05, 5.149999999999946e-05, 5.126399999999878e-05, 5.219400000000193e-05, 5.172200000000057e-05, 5.2193999999998464e-05, 5.144400000000118e-05, 5.118099999999737e-05, 5.156899999999784e-05, 5.140299999999848e-05, 5.2221999999997604e-05, 5.154199999999817e-05]</msg>
<status status="PASS" starttime="20201030 18:29:21.602" endtime="20201030 18:29:21.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.597" endtime="20201030 18:29:21.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.609" endtime="20201030 18:29:21.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.607" endtime="20201030 18:29:21.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.606" endtime="20201030 18:29:21.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.244" endtime="20201030 18:29:21.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.244" endtime="20201030 18:29:21.630"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.639" endtime="20201030 18:29:21.659"></status>
</kw>
<msg timestamp="20201030 18:29:21.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.637" endtime="20201030 18:29:21.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.661" endtime="20201030 18:29:21.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.663" endtime="20201030 18:29:21.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.634" endtime="20201030 18:29:21.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.632" endtime="20201030 18:29:21.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.673" endtime="20201030 18:29:21.959"></status>
</kw>
<msg timestamp="20201030 18:29:21.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021271042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021323944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.671" endtime="20201030 18:29:21.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021271042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021323944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.963" endtime="20201030 18:29:21.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.971" endtime="20201030 18:29:21.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.669" endtime="20201030 18:29:21.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.666" endtime="20201030 18:29:21.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.978" level="INFO">${RESULT} = [{'diff': 5.2902000000000504e-05}, {'diff': 5.23470000000012e-05}, {'diff': 5.251400000000003e-05}, {'diff': 5.250000000000046e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.238899999999991e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:21.975" endtime="20201030 18:29:21.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.982" level="INFO">${ACCURACY} = {'diff': [5.2902000000000504e-05, 5.23470000000012e-05, 5.251400000000003e-05, 5.250000000000046e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.2930000000003113e-05, 5.283299999999866e-05, 5.231...</msg>
<status status="PASS" starttime="20201030 18:29:21.979" endtime="20201030 18:29:21.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.987" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.986" endtime="20201030 18:29:21.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.990" level="INFO">VALUE: [5.2902000000000504e-05, 5.23470000000012e-05, 5.251400000000003e-05, 5.250000000000046e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.2930000000003113e-05, 5.283299999999866e-05, 5.231899999999859e-05, 5.268099999999887e-05, 5.3193999999999464e-05, 5.287500000000084e-05, 5.272200000000157e-05, 5.263900000000016e-05, 5.305599999999924e-05, 5.251400000000003e-05, 5.245899999999776e-05, 5.322300000000155e-05, 5.30280000000001e-05, 5.320900000000198e-05, 5.258299999999841e-05, 5.262500000000059e-05, 5.259700000000145e-05, 5.2999999999997494e-05, 5.258300000000188e-05, 5.3179999999999894e-05, 5.313900000000066e-05, 5.269400000000243e-05, 5.258299999999841e-05, 5.312499999999762e-05, 5.258300000000188e-05, 5.238899999999991e-05, 5.3193999999999464e-05, 5.240300000000295e-05, 5.3193999999999464e-05, 5.279200000000289e-05, 5.244400000000218e-05, 5.229199999999892e-05, 5.241699999999905e-05, 5.223600000000064e-05, 5.290299999999998e-05, 5.288900000000041e-05, 5.232000000000153e-05, 5.247200000000132e-05, 5.2402000000000004e-05, 5.269500000000191e-05, 5.281899999999909e-05, 5.2957999999998784e-05, 5.3179999999999894e-05, 5.281899999999909e-05]</msg>
<status status="PASS" starttime="20201030 18:29:21.988" endtime="20201030 18:29:21.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.983" endtime="20201030 18:29:21.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.996" endtime="20201030 18:29:22.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.994" endtime="20201030 18:29:22.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.993" endtime="20201030 18:29:22.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.631" endtime="20201030 18:29:22.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.630" endtime="20201030 18:29:22.016"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.025" endtime="20201030 18:29:22.044"></status>
</kw>
<msg timestamp="20201030 18:29:22.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.024" endtime="20201030 18:29:22.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.046" endtime="20201030 18:29:22.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.049" endtime="20201030 18:29:22.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.021" endtime="20201030 18:29:22.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.019" endtime="20201030 18:29:22.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.058" endtime="20201030 18:29:22.344"></status>
</kw>
<msg timestamp="20201030 18:29:22.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020255014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020308875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.056" endtime="20201030 18:29:22.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020255014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020308875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.348" endtime="20201030 18:29:22.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.356" endtime="20201030 18:29:22.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.054" endtime="20201030 18:29:22.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.052" endtime="20201030 18:29:22.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.363" level="INFO">${RESULT} = [{'diff': 5.386100000000227e-05}, {'diff': 5.363899999999769e-05}, {'diff': 5.354200000000017e-05}, {'diff': 5.3693999999999964e-05}, {'diff': 5.375000000000171e-05}, {'diff': 5.409699999999948e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:22.360" endtime="20201030 18:29:22.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:22.368" level="INFO">${ACCURACY} = {'diff': [5.386100000000227e-05, 5.363899999999769e-05, 5.354200000000017e-05, 5.3693999999999964e-05, 5.375000000000171e-05, 5.409699999999948e-05, 5.3499999999997994e-05, 5.3735999999998674e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 18:29:22.364" endtime="20201030 18:29:22.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.373" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:29:22.372" endtime="20201030 18:29:22.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.376" level="INFO">VALUE: [5.386100000000227e-05, 5.363899999999769e-05, 5.354200000000017e-05, 5.3693999999999964e-05, 5.375000000000171e-05, 5.409699999999948e-05, 5.3499999999997994e-05, 5.3735999999998674e-05, 5.4194000000000464e-05, 5.3985999999998924e-05, 5.422299999999908e-05, 5.369500000000291e-05, 5.338900000000091e-05, 5.319499999999894e-05, 5.390299999999751e-05, 5.331999999999906e-05, 5.369499999999944e-05, 5.3763999999997814e-05, 5.329200000000339e-05, 5.4221999999999604e-05, 5.3637999999998215e-05, 5.3749999999998244e-05, 5.377700000000138e-05, 5.331899999999959e-05, 5.356899999999984e-05, 5.409699999999948e-05, 5.333299999999916e-05, 5.3693999999999964e-05, 5.379200000000042e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3957999999999784e-05, 5.411100000000252e-05, 5.3999999999998494e-05, 5.3707999999999534e-05, 5.406999999999981e-05, 5.386100000000227e-05, 5.372200000000257e-05, 5.395899999999926e-05, 5.344499999999919e-05, 5.41670000000008e-05, 5.35280000000006e-05, 5.379100000000095e-05, 5.3985999999998924e-05, 5.3887999999998465e-05, 5.3388000000001434e-05, 5.3443999999999714e-05, 5.327800000000035e-05, 5.326400000000078e-05, 5.413899999999819e-05]</msg>
<status status="PASS" starttime="20201030 18:29:22.374" endtime="20201030 18:29:22.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.369" endtime="20201030 18:29:22.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:22.386" endtime="20201030 18:29:22.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.384" endtime="20201030 18:29:22.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.383" endtime="20201030 18:29:22.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.017" endtime="20201030 18:29:22.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.017" endtime="20201030 18:29:22.407"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.416" endtime="20201030 18:29:22.435"></status>
</kw>
<msg timestamp="20201030 18:29:22.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.414" endtime="20201030 18:29:22.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.436" endtime="20201030 18:29:22.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.439" endtime="20201030 18:29:22.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.412" endtime="20201030 18:29:22.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.409" endtime="20201030 18:29:22.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.448" endtime="20201030 18:29:22.735"></status>
</kw>
<msg timestamp="20201030 18:29:22.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020809889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020864514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.447" endtime="20201030 18:29:22.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020809889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020864514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.739" endtime="20201030 18:29:22.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.748" endtime="20201030 18:29:22.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.444" endtime="20201030 18:29:22.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.442" endtime="20201030 18:29:22.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.754" level="INFO">${RESULT} = [{'diff': 5.462499999999912e-05}, {'diff': 5.488900000000241e-05}, {'diff': 5.5207999999997565e-05}, {'diff': 5.4958000000000784e-05}, {'diff': 5.437499999999887e-05}, {'diff': 5.463899999999869e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:22.751" endtime="20201030 18:29:22.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:22.759" level="INFO">${ACCURACY} = {'diff': [5.462499999999912e-05, 5.488900000000241e-05, 5.5207999999997565e-05, 5.4958000000000784e-05, 5.437499999999887e-05, 5.463899999999869e-05, 5.430600000000049e-05, 5.495900000000026e-05, 5.47...</msg>
<status status="PASS" starttime="20201030 18:29:22.755" endtime="20201030 18:29:22.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.763" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:29:22.762" endtime="20201030 18:29:22.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.766" level="INFO">VALUE: [5.462499999999912e-05, 5.488900000000241e-05, 5.5207999999997565e-05, 5.4958000000000784e-05, 5.437499999999887e-05, 5.463899999999869e-05, 5.430600000000049e-05, 5.495900000000026e-05, 5.4777999999998384e-05, 5.5013999999999064e-05, 5.4679999999997925e-05, 5.4235999999999174e-05, 5.487499999999937e-05, 5.508399999999691e-05, 5.5222000000000604e-05, 5.4471999999999854e-05, 5.480600000000099e-05, 5.4888000000002934e-05, 5.488900000000241e-05, 5.427800000000135e-05, 5.509700000000048e-05, 5.504200000000167e-05, 5.4957999999997315e-05, 5.4763999999998814e-05, 5.4694000000000964e-05, 5.429200000000092e-05, 5.456900000000084e-05, 5.426400000000178e-05, 5.487499999999937e-05, 5.5222000000000604e-05, 5.469500000000044e-05, 5.515299999999876e-05, 5.491700000000155e-05, 5.481999999999709e-05, 5.476400000000228e-05, 5.483400000000013e-05, 5.443100000000062e-05, 5.4985999999999924e-05, 5.477699999999891e-05, 5.4694000000000964e-05, 5.459799999999945e-05, 5.501400000000253e-05, 5.476400000000228e-05, 5.4972000000000354e-05, 5.4708000000000534e-05, 5.5193999999997995e-05, 5.513899999999919e-05, 5.451400000000203e-05, 5.509700000000048e-05, 5.480600000000099e-05]</msg>
<status status="PASS" starttime="20201030 18:29:22.764" endtime="20201030 18:29:22.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.760" endtime="20201030 18:29:22.767"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:22.771" endtime="20201030 18:29:22.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.769" endtime="20201030 18:29:22.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.768" endtime="20201030 18:29:22.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.408" endtime="20201030 18:29:22.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.407" endtime="20201030 18:29:22.792"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.801" endtime="20201030 18:29:22.822"></status>
</kw>
<msg timestamp="20201030 18:29:22.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.799" endtime="20201030 18:29:22.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.824" endtime="20201030 18:29:22.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.827" endtime="20201030 18:29:22.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.796" endtime="20201030 18:29:22.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.794" endtime="20201030 18:29:22.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.836" endtime="20201030 18:29:23.121"></status>
</kw>
<msg timestamp="20201030 18:29:23.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023642181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.834" endtime="20201030 18:29:23.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023642181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.126" endtime="20201030 18:29:23.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.134" endtime="20201030 18:29:23.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.832" endtime="20201030 18:29:23.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.830" endtime="20201030 18:29:23.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:23.141" level="INFO">${RESULT} = [{'diff': 5.526299999999984e-05}, {'diff': 5.60549999999993e-05}, {'diff': 5.5944000000002214e-05}, {'diff': 5.613900000000019e-05}, {'diff': 5.6193999999998995e-05}, {'diff': 5.540299999999901e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:23.137" endtime="20201030 18:29:23.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:23.145" level="INFO">${ACCURACY} = {'diff': [5.526299999999984e-05, 5.60549999999993e-05, 5.5944000000002214e-05, 5.613900000000019e-05, 5.6193999999998995e-05, 5.540299999999901e-05, 5.5763999999999814e-05, 5.58610000000008e-05, 5.558...</msg>
<status status="PASS" starttime="20201030 18:29:23.142" endtime="20201030 18:29:23.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.150" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:29:23.149" endtime="20201030 18:29:23.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.152" level="INFO">VALUE: [5.526299999999984e-05, 5.60549999999993e-05, 5.5944000000002214e-05, 5.613900000000019e-05, 5.6193999999998995e-05, 5.540299999999901e-05, 5.5763999999999814e-05, 5.58610000000008e-05, 5.558300000000141e-05, 5.581999999999809e-05, 5.613900000000019e-05, 5.581900000000209e-05, 5.608299999999844e-05, 5.6014000000000064e-05, 5.609800000000095e-05, 5.606999999999834e-05, 5.594500000000169e-05, 5.53480000000002e-05, 5.620900000000151e-05, 5.582000000000156e-05, 5.583400000000113e-05, 5.531900000000159e-05, 5.533299999999769e-05, 5.5943999999998745e-05, 5.5638000000000215e-05, 5.554099999999923e-05, 5.609700000000148e-05, 5.540299999999901e-05, 5.609700000000148e-05, 5.6027999999999634e-05, 5.554099999999923e-05, 5.5541999999998704e-05, 5.5750000000000244e-05, 5.5958000000001784e-05, 5.563899999999969e-05, 5.583300000000166e-05, 5.563899999999969e-05, 5.608400000000138e-05, 5.554200000000217e-05, 5.582000000000156e-05, 5.526400000000278e-05, 5.6014000000000064e-05, 5.5763999999999814e-05, 5.5916000000003074e-05, 5.583300000000166e-05, 5.531900000000159e-05, 5.612500000000062e-05, 5.5721999999997635e-05, 5.5736000000000674e-05, 5.558300000000141e-05]</msg>
<status status="PASS" starttime="20201030 18:29:23.151" endtime="20201030 18:29:23.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.146" endtime="20201030 18:29:23.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:23.158" endtime="20201030 18:29:23.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.157" endtime="20201030 18:29:23.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.155" endtime="20201030 18:29:23.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.793" endtime="20201030 18:29:23.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.792" endtime="20201030 18:29:23.179"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.188" endtime="20201030 18:29:23.206"></status>
</kw>
<msg timestamp="20201030 18:29:23.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.187" endtime="20201030 18:29:23.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.208" endtime="20201030 18:29:23.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.211" endtime="20201030 18:29:23.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.184" endtime="20201030 18:29:23.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.182" endtime="20201030 18:29:23.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.220" endtime="20201030 18:29:23.506"></status>
</kw>
<msg timestamp="20201030 18:29:23.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020343042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020399806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.218" endtime="20201030 18:29:23.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020343042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020399806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.511" endtime="20201030 18:29:23.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.519" endtime="20201030 18:29:23.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.216" endtime="20201030 18:29:23.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.214" endtime="20201030 18:29:23.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:23.526" level="INFO">${RESULT} = [{'diff': 5.6764000000000814e-05}, {'diff': 5.633399999999816e-05}, {'diff': 5.683400000000213e-05}, {'diff': 5.6443999999999245e-05}, {'diff': 5.702700000000116e-05}, {'diff': 5.6402000000000535e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:23.522" endtime="20201030 18:29:23.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:23.531" level="INFO">${ACCURACY} = {'diff': [5.6764000000000814e-05, 5.633399999999816e-05, 5.683400000000213e-05, 5.6443999999999245e-05, 5.702700000000116e-05, 5.6402000000000535e-05, 5.6971999999998885e-05, 5.708300000000291e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:29:23.527" endtime="20201030 18:29:23.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.535" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:29:23.534" endtime="20201030 18:29:23.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.538" level="INFO">VALUE: [5.6764000000000814e-05, 5.633399999999816e-05, 5.683400000000213e-05, 5.6443999999999245e-05, 5.702700000000116e-05, 5.6402000000000535e-05, 5.6971999999998885e-05, 5.708300000000291e-05, 5.638900000000044e-05, 5.6957999999999315e-05, 5.663899999999722e-05, 5.68610000000018e-05, 5.6778000000000384e-05, 5.66809999999994e-05, 5.633300000000216e-05, 5.659700000000198e-05, 5.638900000000044e-05, 5.7028000000000634e-05, 5.6986000000001924e-05, 5.6264000000000314e-05, 5.722300000000208e-05, 5.683399999999866e-05, 5.6319999999998593e-05, 5.68749999999979e-05, 5.6819999999999093e-05, 5.7193999999999995e-05, 5.6402000000000535e-05, 5.662499999999765e-05, 5.713900000000119e-05, 5.6750000000001244e-05, 5.6722000000002104e-05, 5.6443999999999245e-05, 5.6778000000000384e-05, 5.6957999999999315e-05, 5.6778000000000384e-05, 5.638900000000044e-05, 5.6958000000002784e-05, 5.6277999999999884e-05, 5.6514000000000564e-05, 5.6736000000001674e-05, 5.661100000000155e-05, 5.7000000000001494e-05, 5.6750000000001244e-05, 5.655600000000274e-05, 5.665300000000026e-05, 5.629099999999998e-05, 5.6485999999997955e-05, 5.6972000000002354e-05, 5.65549999999998e-05, 5.6250000000000744e-05]</msg>
<status status="PASS" starttime="20201030 18:29:23.537" endtime="20201030 18:29:23.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.532" endtime="20201030 18:29:23.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:23.543" endtime="20201030 18:29:23.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.542" endtime="20201030 18:29:23.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.541" endtime="20201030 18:29:23.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.180" endtime="20201030 18:29:23.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.179" endtime="20201030 18:29:23.564"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.573" endtime="20201030 18:29:23.592"></status>
</kw>
<msg timestamp="20201030 18:29:23.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.572" endtime="20201030 18:29:23.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.593" endtime="20201030 18:29:23.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.596" endtime="20201030 18:29:23.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.569" endtime="20201030 18:29:23.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.567" endtime="20201030 18:29:23.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.605" endtime="20201030 18:29:23.894"></status>
</kw>
<msg timestamp="20201030 18:29:23.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020273694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020331819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.604" endtime="20201030 18:29:23.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020273694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020331819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.898" endtime="20201030 18:29:23.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.907" endtime="20201030 18:29:23.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.601" endtime="20201030 18:29:23.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.599" endtime="20201030 18:29:23.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:23.913" level="INFO">${RESULT} = [{'diff': 5.812500000000262e-05}, {'diff': 5.738899999999797e-05}, {'diff': 5.765300000000126e-05}, {'diff': 5.783300000000019e-05}, {'diff': 5.808300000000044e-05}, {'diff': 5.7637999999998746e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:23.910" endtime="20201030 18:29:23.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:23.918" level="INFO">${ACCURACY} = {'diff': [5.812500000000262e-05, 5.738899999999797e-05, 5.765300000000126e-05, 5.783300000000019e-05, 5.808300000000044e-05, 5.7637999999998746e-05, 5.806900000000087e-05, 5.7471999999999385e-05, 5.80...</msg>
<status status="PASS" starttime="20201030 18:29:23.914" endtime="20201030 18:29:23.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.922" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:29:23.921" endtime="20201030 18:29:23.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.925" level="INFO">VALUE: [5.812500000000262e-05, 5.738899999999797e-05, 5.765300000000126e-05, 5.783300000000019e-05, 5.808300000000044e-05, 5.7637999999998746e-05, 5.806900000000087e-05, 5.7471999999999385e-05, 5.806900000000087e-05, 5.730500000000055e-05, 5.812499999999915e-05, 5.761100000000255e-05, 5.758299999999994e-05, 5.7721999999999635e-05, 5.8013999999998594e-05, 5.734699999999926e-05, 5.8083999999999913e-05, 5.773700000000215e-05, 5.813899999999872e-05, 5.820900000000004e-05, 5.763900000000169e-05, 5.8042000000001204e-05, 5.8250000000002744e-05, 5.762500000000212e-05, 5.734700000000273e-05, 5.773699999999868e-05, 5.809700000000001e-05, 5.7735999999999205e-05, 5.7401999999998066e-05, 5.812499999999915e-05, 5.7263999999997844e-05, 5.779099999999801e-05, 5.7527999999997664e-05, 5.7513999999998094e-05, 5.7721999999999635e-05, 5.7693999999997025e-05, 5.7542000000000704e-05, 5.8249999999999275e-05, 5.7764000000001814e-05, 5.7514000000001564e-05, 5.7764000000001814e-05, 5.815300000000176e-05, 5.7263999999997844e-05, 5.786200000000227e-05, 5.734699999999926e-05, 5.813899999999872e-05, 5.8222000000000135e-05, 5.7944000000000745e-05, 5.7735999999999205e-05, 5.790299999999804e-05]</msg>
<status status="PASS" starttime="20201030 18:29:23.923" endtime="20201030 18:29:23.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.919" endtime="20201030 18:29:23.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:23.930" endtime="20201030 18:29:23.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.929" endtime="20201030 18:29:23.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.927" endtime="20201030 18:29:23.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.565" endtime="20201030 18:29:23.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.564" endtime="20201030 18:29:23.951"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.960" endtime="20201030 18:29:23.979"></status>
</kw>
<msg timestamp="20201030 18:29:23.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.958" endtime="20201030 18:29:23.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.981" endtime="20201030 18:29:23.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.983" endtime="20201030 18:29:23.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.956" endtime="20201030 18:29:23.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.953" endtime="20201030 18:29:23.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.993" endtime="20201030 18:29:24.278"></status>
</kw>
<msg timestamp="20201030 18:29:24.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021336875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.991" endtime="20201030 18:29:24.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021336875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.283" endtime="20201030 18:29:24.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.291" endtime="20201030 18:29:24.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.989" endtime="20201030 18:29:24.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.987" endtime="20201030 18:29:24.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:24.298" level="INFO">${RESULT} = [{'diff': 5.8236000000003174e-05}, {'diff': 5.891699999999861e-05}, {'diff': 5.8986000000000455e-05}, {'diff': 5.915299999999929e-05}, {'diff': 5.9000000000000025e-05}, {'diff': 5.920900000000104e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:24.294" endtime="20201030 18:29:24.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:24.302" level="INFO">${ACCURACY} = {'diff': [5.8236000000003174e-05, 5.891699999999861e-05, 5.8986000000000455e-05, 5.915299999999929e-05, 5.9000000000000025e-05, 5.920900000000104e-05, 5.913899999999972e-05, 5.8249999999999275e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:29:24.299" endtime="20201030 18:29:24.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.307" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:29:24.306" endtime="20201030 18:29:24.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.309" level="INFO">VALUE: [5.8236000000003174e-05, 5.891699999999861e-05, 5.8986000000000455e-05, 5.915299999999929e-05, 5.9000000000000025e-05, 5.920900000000104e-05, 5.913899999999972e-05, 5.8249999999999275e-05, 5.861100000000008e-05, 5.8514000000002564e-05, 5.902699999999969e-05, 5.870900000000054e-05, 5.8458000000000815e-05, 5.8679999999998456e-05, 5.9208000000001565e-05, 5.852699999999919e-05, 5.8472000000000385e-05, 5.881900000000162e-05, 5.8708000000001065e-05, 5.85689999999979e-05, 5.858300000000094e-05, 5.858300000000094e-05, 5.891699999999861e-05, 5.8777999999998914e-05, 5.8320000000000594e-05, 5.870899999999707e-05, 5.9041999999998734e-05, 5.8319999999997124e-05, 5.9027999999999164e-05, 5.863899999999922e-05, 5.9000000000000025e-05, 5.9027999999999164e-05, 5.9138000000000246e-05, 5.8458000000000815e-05, 5.879099999999901e-05, 5.8694000000001495e-05, 5.833300000000069e-05, 5.915299999999929e-05, 5.880500000000205e-05, 5.9000000000000025e-05, 5.9208000000001565e-05, 5.908299999999797e-05, 5.90550000000023e-05, 5.840299999999854e-05, 5.8985999999996985e-05, 5.858299999999747e-05, 5.891699999999861e-05, 5.8834000000000664e-05, 5.8541999999998234e-05, 5.869500000000097e-05]</msg>
<status status="PASS" starttime="20201030 18:29:24.308" endtime="20201030 18:29:24.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.303" endtime="20201030 18:29:24.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:24.315" endtime="20201030 18:29:24.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.314" endtime="20201030 18:29:24.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.313" endtime="20201030 18:29:24.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.952" endtime="20201030 18:29:24.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.951" endtime="20201030 18:29:24.336"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.345" endtime="20201030 18:29:24.365"></status>
</kw>
<msg timestamp="20201030 18:29:24.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.344" endtime="20201030 18:29:24.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.366" endtime="20201030 18:29:24.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.369" endtime="20201030 18:29:24.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.341" endtime="20201030 18:29:24.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.339" endtime="20201030 18:29:24.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.378" endtime="20201030 18:29:24.664"></status>
</kw>
<msg timestamp="20201030 18:29:24.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020425208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:24.377" endtime="20201030 18:29:24.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020425208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:24.668" endtime="20201030 18:29:24.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.676" endtime="20201030 18:29:24.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.374" endtime="20201030 18:29:24.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.372" endtime="20201030 18:29:24.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:24.683" level="INFO">${RESULT} = [{'diff': 6.0207999999999096e-05}, {'diff': 5.9985999999997985e-05}, {'diff': 5.9777999999999915e-05}, {'diff': 5.9763999999996875e-05}, {'diff': 5.9750000000000775e-05}, {'diff': 5.9264000000003314e-...</msg>
<status status="PASS" starttime="20201030 18:29:24.680" endtime="20201030 18:29:24.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:24.688" level="INFO">${ACCURACY} = {'diff': [6.0207999999999096e-05, 5.9985999999997985e-05, 5.9777999999999915e-05, 5.9763999999996875e-05, 5.9750000000000775e-05, 5.9264000000003314e-05, 5.9721999999998165e-05, 6.009699999999854e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:24.684" endtime="20201030 18:29:24.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.693" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:29:24.692" endtime="20201030 18:29:24.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.696" level="INFO">VALUE: [6.0207999999999096e-05, 5.9985999999997985e-05, 5.9777999999999915e-05, 5.9763999999996875e-05, 5.9750000000000775e-05, 5.9264000000003314e-05, 5.9721999999998165e-05, 6.009699999999854e-05, 5.9972000000001885e-05, 5.9972000000001885e-05, 5.9263999999999845e-05, 5.9471999999997915e-05, 5.9707999999998596e-05, 5.9583999999997944e-05, 6.0084000000001914e-05, 6.0194999999999e-05, 5.9263999999999845e-05, 6.008299999999897e-05, 5.9999999999997555e-05, 5.933300000000169e-05, 6.0249999999997805e-05, 5.9485999999997485e-05, 5.9652000000000316e-05, 5.9263999999999845e-05, 5.9527999999999665e-05, 5.9471999999997915e-05, 5.931900000000212e-05, 5.93750000000004e-05, 5.9514000000000095e-05, 5.988900000000047e-05, 5.9764000000000345e-05, 5.995899999999832e-05, 6.012499999999768e-05, 5.984700000000176e-05, 5.970899999999807e-05, 5.9277999999999414e-05, 5.980499999999958e-05, 5.958300000000194e-05, 5.9721999999998165e-05, 5.9764000000000345e-05, 5.963900000000022e-05, 6.0137999999997777e-05, 6.011099999999811e-05, 5.98750000000009e-05, 5.9458000000001815e-05, 5.9763999999996875e-05, 5.9180000000002425e-05, 5.990300000000004e-05, 6.0221999999998665e-05, 5.9443999999998776e-05]</msg>
<status status="PASS" starttime="20201030 18:29:24.694" endtime="20201030 18:29:24.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.689" endtime="20201030 18:29:24.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:24.701" endtime="20201030 18:29:24.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.699" endtime="20201030 18:29:24.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.698" endtime="20201030 18:29:24.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.337" endtime="20201030 18:29:24.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.337" endtime="20201030 18:29:24.722"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.731" endtime="20201030 18:29:24.750"></status>
</kw>
<msg timestamp="20201030 18:29:24.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.729" endtime="20201030 18:29:24.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.751" endtime="20201030 18:29:24.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.754" endtime="20201030 18:29:24.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.726" endtime="20201030 18:29:24.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.724" endtime="20201030 18:29:24.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.763" endtime="20201030 18:29:25.050"></status>
</kw>
<msg timestamp="20201030 18:29:25.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020295333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.762" endtime="20201030 18:29:25.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020295333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.055" endtime="20201030 18:29:25.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.063" endtime="20201030 18:29:25.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.759" endtime="20201030 18:29:25.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.757" endtime="20201030 18:29:25.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.070" level="INFO">${RESULT} = [{'diff': 6.119399999999706e-05}, {'diff': 6.0485999999998485e-05}, {'diff': 6.0778000000000915e-05}, {'diff': 6.0707999999999596e-05}, {'diff': 6.0486000000001955e-05}, {'diff': 6.083299999999972e-05...</msg>
<status status="PASS" starttime="20201030 18:29:25.066" endtime="20201030 18:29:25.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.074" level="INFO">${ACCURACY} = {'diff': [6.119399999999706e-05, 6.0485999999998485e-05, 6.0778000000000915e-05, 6.0707999999999596e-05, 6.0486000000001955e-05, 6.083299999999972e-05, 6.031899999999965e-05, 6.090300000000104e-05, 6....</msg>
<status status="PASS" starttime="20201030 18:29:25.071" endtime="20201030 18:29:25.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.079" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.077" endtime="20201030 18:29:25.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.081" level="INFO">VALUE: [6.119399999999706e-05, 6.0485999999998485e-05, 6.0778000000000915e-05, 6.0707999999999596e-05, 6.0486000000001955e-05, 6.083299999999972e-05, 6.031899999999965e-05, 6.090300000000104e-05, 6.065300000000079e-05, 6.044499999999925e-05, 6.072299999999864e-05, 6.055500000000033e-05, 6.0334000000002164e-05, 6.065300000000079e-05, 6.095899999999932e-05, 6.0819999999999624e-05, 6.0833999999999194e-05, 6.0971999999999416e-05, 6.115200000000182e-05, 6.0443999999999776e-05, 6.034700000000226e-05, 6.033299999999922e-05, 6.084699999999929e-05, 6.0513999999997625e-05, 6.038900000000097e-05, 6.0528000000000665e-05, 6.116700000000086e-05, 6.0971999999999416e-05, 6.090300000000104e-05, 6.0305999999999554e-05, 6.1000000000002025e-05, 6.1195e-05, 6.118100000000043e-05, 6.1195e-05, 6.040300000000054e-05, 6.0528000000000665e-05, 6.044499999999925e-05, 6.120899999999957e-05, 6.07629999999984e-05, 6.10690000000004e-05, 6.077699999999797e-05, 6.030500000000008e-05, 6.0416000000000636e-05, 6.059700000000251e-05, 6.091700000000061e-05, 6.0514000000001095e-05, 6.0985999999998985e-05, 6.083299999999972e-05, 6.0291999999999984e-05, 6.0986000000002455e-05]</msg>
<status status="PASS" starttime="20201030 18:29:25.080" endtime="20201030 18:29:25.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.075" endtime="20201030 18:29:25.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:25.086" endtime="20201030 18:29:25.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.085" endtime="20201030 18:29:25.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.084" endtime="20201030 18:29:25.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.723" endtime="20201030 18:29:25.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.722" endtime="20201030 18:29:25.107"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.116" endtime="20201030 18:29:25.136"></status>
</kw>
<msg timestamp="20201030 18:29:25.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.115" endtime="20201030 18:29:25.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.138" endtime="20201030 18:29:25.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.141" endtime="20201030 18:29:25.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.112" endtime="20201030 18:29:25.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.110" endtime="20201030 18:29:25.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.150" endtime="20201030 18:29:25.436"></status>
</kw>
<msg timestamp="20201030 18:29:25.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021368458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021430653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.148" endtime="20201030 18:29:25.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021368458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021430653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.441" endtime="20201030 18:29:25.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.450" endtime="20201030 18:29:25.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.146" endtime="20201030 18:29:25.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.144" endtime="20201030 18:29:25.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.457" level="INFO">${RESULT} = [{'diff': 6.2195000000001e-05}, {'diff': 6.134800000000273e-05}, {'diff': 6.138900000000197e-05}, {'diff': 6.209800000000001e-05}, {'diff': 6.20560000000013e-05}, {'diff': 6.191599999999867e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:29:25.454" endtime="20201030 18:29:25.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.461" level="INFO">${ACCURACY} = {'diff': [6.2195000000001e-05, 6.134800000000273e-05, 6.138900000000197e-05, 6.209800000000001e-05, 6.20560000000013e-05, 6.191599999999867e-05, 6.17080000000006e-05, 6.226399999999938e-05, 6.16670000...</msg>
<status status="PASS" starttime="20201030 18:29:25.458" endtime="20201030 18:29:25.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.466" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.465" endtime="20201030 18:29:25.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.468" level="INFO">VALUE: [6.2195000000001e-05, 6.134800000000273e-05, 6.138900000000197e-05, 6.209800000000001e-05, 6.20560000000013e-05, 6.191599999999867e-05, 6.17080000000006e-05, 6.226399999999938e-05, 6.166700000000136e-05, 6.1888999999999e-05, 6.1582999999997e-05, 6.19439999999978e-05, 6.123599999999924e-05, 6.159700000000004e-05, 6.219499999999753e-05, 6.212499999999968e-05, 6.172200000000017e-05, 6.194400000000128e-05, 6.188799999999953e-05, 6.138900000000197e-05, 6.159799999999951e-05, 6.13889999999985e-05, 6.13889999999985e-05, 6.195800000000085e-05, 6.16950000000005e-05, 6.154099999999829e-05, 6.22080000000011e-05, 6.145800000000035e-05, 6.176399999999888e-05, 6.17080000000006e-05, 6.176399999999888e-05, 6.202800000000216e-05, 6.140300000000154e-05, 6.22080000000011e-05, 6.172200000000017e-05, 6.213899999999925e-05, 6.172200000000017e-05, 6.156899999999743e-05, 6.133300000000022e-05, 6.17499999999993e-05, 6.176399999999888e-05, 6.213899999999925e-05, 6.211199999999958e-05, 6.16950000000005e-05, 6.205499999999836e-05, 6.134699999999979e-05, 6.17499999999993e-05, 6.220799999999763e-05, 6.190300000000204e-05, 6.165299999999832e-05]</msg>
<status status="PASS" starttime="20201030 18:29:25.467" endtime="20201030 18:29:25.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.462" endtime="20201030 18:29:25.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:25.474" endtime="20201030 18:29:25.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.473" endtime="20201030 18:29:25.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.472" endtime="20201030 18:29:25.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.108" endtime="20201030 18:29:25.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.108" endtime="20201030 18:29:25.495"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.504" endtime="20201030 18:29:25.524"></status>
</kw>
<msg timestamp="20201030 18:29:25.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.503" endtime="20201030 18:29:25.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.526" endtime="20201030 18:29:25.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.528" endtime="20201030 18:29:25.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.500" endtime="20201030 18:29:25.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.498" endtime="20201030 18:29:25.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.538" endtime="20201030 18:29:25.824"></status>
</kw>
<msg timestamp="20201030 18:29:25.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020407528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.536" endtime="20201030 18:29:25.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020407528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.828" endtime="20201030 18:29:25.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.836" endtime="20201030 18:29:25.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.533" endtime="20201030 18:29:25.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.532" endtime="20201030 18:29:25.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.843" level="INFO">${RESULT} = [{'diff': 6.279099999999954e-05}, {'diff': 6.240300000000254e-05}, {'diff': 6.245800000000135e-05}, {'diff': 6.315200000000035e-05}, {'diff': 6.282000000000162e-05}, {'diff': 6.294500000000175e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:25.840" endtime="20201030 18:29:25.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.848" level="INFO">${ACCURACY} = {'diff': [6.279099999999954e-05, 6.240300000000254e-05, 6.245800000000135e-05, 6.315200000000035e-05, 6.282000000000162e-05, 6.294500000000175e-05, 6.30699999999984e-05, 6.261100000000061e-05, 6.29720...</msg>
<status status="PASS" starttime="20201030 18:29:25.844" endtime="20201030 18:29:25.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.853" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.852" endtime="20201030 18:29:25.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.855" level="INFO">VALUE: [6.279099999999954e-05, 6.240300000000254e-05, 6.245800000000135e-05, 6.315200000000035e-05, 6.282000000000162e-05, 6.294500000000175e-05, 6.30699999999984e-05, 6.261100000000061e-05, 6.297200000000142e-05, 6.245899999999735e-05, 6.237499999999993e-05, 6.291600000000314e-05, 6.245800000000135e-05, 6.250000000000006e-05, 6.265299999999932e-05, 6.297199999999795e-05, 6.258300000000147e-05, 6.30279999999997e-05, 6.240299999999907e-05, 6.277799999999945e-05, 6.2889e-05, 6.298599999999752e-05, 6.316699999999939e-05, 6.309699999999807e-05, 6.281999999999816e-05, 6.309700000000154e-05, 6.269499999999803e-05, 6.320900000000157e-05, 6.230599999999809e-05, 6.227799999999895e-05, 6.263899999999975e-05, 6.241599999999917e-05, 6.250000000000006e-05, 6.319400000000253e-05, 6.292999999999924e-05, 6.316599999999992e-05, 6.315299999999982e-05, 6.287500000000043e-05, 6.300000000000056e-05, 6.316699999999939e-05, 6.290299999999957e-05, 6.300000000000056e-05, 6.277799999999945e-05, 6.281899999999868e-05, 6.27080000000016e-05, 6.265299999999932e-05, 6.294499999999828e-05, 6.23889999999995e-05, 6.315299999999982e-05, 6.231999999999766e-05]</msg>
<status status="PASS" starttime="20201030 18:29:25.854" endtime="20201030 18:29:25.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.849" endtime="20201030 18:29:25.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:25.861" endtime="20201030 18:29:25.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.859" endtime="20201030 18:29:25.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.858" endtime="20201030 18:29:25.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.496" endtime="20201030 18:29:25.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.496" endtime="20201030 18:29:25.881"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.891" endtime="20201030 18:29:25.911"></status>
</kw>
<msg timestamp="20201030 18:29:25.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.889" endtime="20201030 18:29:25.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.912" endtime="20201030 18:29:25.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.915" endtime="20201030 18:29:25.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.886" endtime="20201030 18:29:25.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.884" endtime="20201030 18:29:25.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.924" endtime="20201030 18:29:26.211"></status>
</kw>
<msg timestamp="20201030 18:29:26.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020213236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020276347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.923" endtime="20201030 18:29:26.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020213236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020276347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.216" endtime="20201030 18:29:26.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.224" endtime="20201030 18:29:26.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.920" endtime="20201030 18:29:26.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.918" endtime="20201030 18:29:26.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:26.231" level="INFO">${RESULT} = [{'diff': 6.311100000000111e-05}, {'diff': 6.390300000000057e-05}, {'diff': 6.404200000000027e-05}, {'diff': 6.340300000000007e-05}, {'diff': 6.338800000000103e-05}, {'diff': 6.376299999999793e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:26.227" endtime="20201030 18:29:26.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:26.235" level="INFO">${ACCURACY} = {'diff': [6.311100000000111e-05, 6.390300000000057e-05, 6.404200000000027e-05, 6.340300000000007e-05, 6.338800000000103e-05, 6.376299999999793e-05, 6.326400000000038e-05, 6.354199999999977e-05, 6.3486...</msg>
<status status="PASS" starttime="20201030 18:29:26.232" endtime="20201030 18:29:26.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.240" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:29:26.239" endtime="20201030 18:29:26.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.242" level="INFO">VALUE: [6.311100000000111e-05, 6.390300000000057e-05, 6.404200000000027e-05, 6.340300000000007e-05, 6.338800000000103e-05, 6.376299999999793e-05, 6.326400000000038e-05, 6.354199999999977e-05, 6.348600000000149e-05, 6.394499999999928e-05, 6.345899999999835e-05, 6.422300000000214e-05, 6.391700000000014e-05, 6.326400000000038e-05, 6.369499999999903e-05, 6.427800000000095e-05, 6.352700000000072e-05, 6.391600000000067e-05, 6.419400000000006e-05, 6.356899999999943e-05, 6.338899999999703e-05, 6.387499999999796e-05, 6.340300000000007e-05, 6.37500000000013e-05, 6.326400000000038e-05, 6.420799999999963e-05, 6.340300000000007e-05, 6.395799999999938e-05, 6.390300000000057e-05, 6.338899999999703e-05, 6.399999999999809e-05, 6.367999999999999e-05, 6.40699999999994e-05, 6.377800000000045e-05, 6.412499999999821e-05, 6.365200000000085e-05, 6.333299999999875e-05, 6.347200000000192e-05, 6.3889000000001e-05, 6.356899999999943e-05, 6.409699999999907e-05, 6.387499999999796e-05, 6.33890000000005e-05, 6.37500000000013e-05, 6.361099999999814e-05, 6.333299999999875e-05, 6.395799999999938e-05, 6.368099999999946e-05, 6.32500000000008e-05, 6.368099999999946e-05]</msg>
<status status="PASS" starttime="20201030 18:29:26.241" endtime="20201030 18:29:26.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.236" endtime="20201030 18:29:26.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:26.248" endtime="20201030 18:29:26.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.246" endtime="20201030 18:29:26.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.245" endtime="20201030 18:29:26.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.882" endtime="20201030 18:29:26.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.882" endtime="20201030 18:29:26.268"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.277" endtime="20201030 18:29:26.301"></status>
</kw>
<msg timestamp="20201030 18:29:26.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.276" endtime="20201030 18:29:26.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.303" endtime="20201030 18:29:26.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.306" endtime="20201030 18:29:26.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.273" endtime="20201030 18:29:26.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.271" endtime="20201030 18:29:26.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.315" endtime="20201030 18:29:26.600"></status>
</kw>
<msg timestamp="20201030 18:29:26.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023662597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023727097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.313" endtime="20201030 18:29:26.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023662597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023727097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.605" endtime="20201030 18:29:26.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.613" endtime="20201030 18:29:26.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.311" endtime="20201030 18:29:26.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.309" endtime="20201030 18:29:26.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:26.620" level="INFO">${RESULT} = [{'diff': 6.449999999999859e-05}, {'diff': 6.493100000000071e-05}, {'diff': 6.451399999999816e-05}, {'diff': 6.479200000000102e-05}, {'diff': 6.506899999999746e-05}, {'diff': 6.461099999999914e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:26.616" endtime="20201030 18:29:26.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:26.624" level="INFO">${ACCURACY} = {'diff': [6.449999999999859e-05, 6.493100000000071e-05, 6.451399999999816e-05, 6.479200000000102e-05, 6.506899999999746e-05, 6.461099999999914e-05, 6.484699999999982e-05, 6.491700000000114e-05, 6.5138...</msg>
<status status="PASS" starttime="20201030 18:29:26.621" endtime="20201030 18:29:26.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.629" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:29:26.627" endtime="20201030 18:29:26.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.631" level="INFO">VALUE: [6.449999999999859e-05, 6.493100000000071e-05, 6.451399999999816e-05, 6.479200000000102e-05, 6.506899999999746e-05, 6.461099999999914e-05, 6.484699999999982e-05, 6.491700000000114e-05, 6.513899999999878e-05, 6.430600000000009e-05, 6.48479999999993e-05, 6.47219999999997e-05, 6.480600000000059e-05, 6.448599999999902e-05, 6.516599999999845e-05, 6.462499999999871e-05, 6.4583e-05, 6.451399999999816e-05, 6.474999999999884e-05, 6.429200000000052e-05, 6.440300000000107e-05, 6.519400000000106e-05, 6.429200000000052e-05, 6.509700000000007e-05, 6.423599999999877e-05, 6.44440000000003e-05, 6.451399999999816e-05, 6.482000000000016e-05, 6.465299999999785e-05, 6.481900000000068e-05, 6.427799999999748e-05, 6.445899999999935e-05, 6.444499999999978e-05, 6.50700000000004e-05, 6.517999999999802e-05, 6.481900000000068e-05, 6.466600000000142e-05, 6.501400000000213e-05, 6.465300000000132e-05, 6.451400000000163e-05, 6.437500000000193e-05, 6.44440000000003e-05, 6.4889000000002e-05, 6.469400000000056e-05, 6.447199999999945e-05, 6.449999999999859e-05, 6.498599999999952e-05, 6.484699999999982e-05, 6.433399999999923e-05, 6.451400000000163e-05]</msg>
<status status="PASS" starttime="20201030 18:29:26.630" endtime="20201030 18:29:26.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.625" endtime="20201030 18:29:26.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:26.637" endtime="20201030 18:29:26.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.636" endtime="20201030 18:29:26.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.634" endtime="20201030 18:29:26.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.269" endtime="20201030 18:29:26.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.269" endtime="20201030 18:29:26.661"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.675" endtime="20201030 18:29:26.694"></status>
</kw>
<msg timestamp="20201030 18:29:26.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.673" endtime="20201030 18:29:26.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.695" endtime="20201030 18:29:26.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.698" endtime="20201030 18:29:26.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.670" endtime="20201030 18:29:26.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.665" endtime="20201030 18:29:26.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.707" endtime="20201030 18:29:26.991"></status>
</kw>
<msg timestamp="20201030 18:29:26.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028570917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:26.705" endtime="20201030 18:29:26.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028570917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:26.996" endtime="20201030 18:29:27.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.004" endtime="20201030 18:29:27.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.703" endtime="20201030 18:29:27.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.701" endtime="20201030 18:29:27.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.011" level="INFO">${RESULT} = [{'diff': 6.591700000000214e-05}, {'diff': 6.573600000000027e-05}, {'diff': 6.602699999999975e-05}, {'diff': 6.540199999999913e-05}, {'diff': 6.547200000000045e-05}, {'diff': 6.620799999999816e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:27.007" endtime="20201030 18:29:27.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:27.015" level="INFO">${ACCURACY} = {'diff': [6.591700000000214e-05, 6.573600000000027e-05, 6.602699999999975e-05, 6.540199999999913e-05, 6.547200000000045e-05, 6.620799999999816e-05, 6.57639999999994e-05, 6.583299999999778e-05, 6.58330...</msg>
<status status="PASS" starttime="20201030 18:29:27.012" endtime="20201030 18:29:27.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.020" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:29:27.019" endtime="20201030 18:29:27.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.022" level="INFO">VALUE: [6.591700000000214e-05, 6.573600000000027e-05, 6.602699999999975e-05, 6.540199999999913e-05, 6.547200000000045e-05, 6.620799999999816e-05, 6.57639999999994e-05, 6.583299999999778e-05, 6.583300000000125e-05, 6.574999999999984e-05, 6.570799999999766e-05, 6.594499999999781e-05, 6.577800000000245e-05, 6.600000000000009e-05, 6.572300000000017e-05, 6.605599999999837e-05, 6.52639999999989e-05, 6.552799999999873e-05, 6.569500000000103e-05, 6.598600000000052e-05, 6.561100000000014e-05, 6.5583000000001e-05, 6.597199999999748e-05, 6.554099999999882e-05, 6.549999999999959e-05, 6.615199999999988e-05, 6.582000000000116e-05, 6.60280000000027e-05, 6.52639999999989e-05, 6.549999999999959e-05, 6.530600000000109e-05, 6.577799999999898e-05, 6.611100000000064e-05, 6.619500000000153e-05, 6.526400000000238e-05, 6.52639999999989e-05, 6.57639999999994e-05, 6.594500000000128e-05, 6.597299999999695e-05, 6.570899999999713e-05, 6.601299999999671e-05, 6.544399999999784e-05, 6.62080000000051e-05, 6.555499999999492e-05, 6.583299999999431e-05, 6.552799999999526e-05, 6.581900000000168e-05, 6.601400000000313e-05, 6.545800000000435e-05, 6.5277999999995e-05]</msg>
<status status="PASS" starttime="20201030 18:29:27.021" endtime="20201030 18:29:27.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.016" endtime="20201030 18:29:27.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.027" endtime="20201030 18:29:27.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.026" endtime="20201030 18:29:27.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.025" endtime="20201030 18:29:27.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.663" endtime="20201030 18:29:27.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.662" endtime="20201030 18:29:27.048"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.056" endtime="20201030 18:29:27.075"></status>
</kw>
<msg timestamp="20201030 18:29:27.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.055" endtime="20201030 18:29:27.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.077" endtime="20201030 18:29:27.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.079" endtime="20201030 18:29:27.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.052" endtime="20201030 18:29:27.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.050" endtime="20201030 18:29:27.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.088" endtime="20201030 18:29:27.388"></status>
</kw>
<msg timestamp="20201030 18:29:27.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019579556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.087" endtime="20201030 18:29:27.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019579556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.392" endtime="20201030 18:29:27.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.401" endtime="20201030 18:29:27.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.084" endtime="20201030 18:29:27.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.082" endtime="20201030 18:29:27.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.407" level="INFO">${RESULT} = [{'diff': 6.655499999999939e-05}, {'diff': 6.677799999999998e-05}, {'diff': 6.661100000000114e-05}, {'diff': 6.69030000000001e-05}, {'diff': 6.683299999999878e-05}, {'diff': 6.630599999999862e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:27.404" endtime="20201030 18:29:27.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:27.411" level="INFO">${ACCURACY} = {'diff': [6.655499999999939e-05, 6.677799999999998e-05, 6.661100000000114e-05, 6.69030000000001e-05, 6.683299999999878e-05, 6.630599999999862e-05, 6.708299999999903e-05, 6.704100000000032e-05, 6.63060...</msg>
<status status="PASS" starttime="20201030 18:29:27.408" endtime="20201030 18:29:27.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.416" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:29:27.415" endtime="20201030 18:29:27.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.418" level="INFO">VALUE: [6.655499999999939e-05, 6.677799999999998e-05, 6.661100000000114e-05, 6.69030000000001e-05, 6.683299999999878e-05, 6.630599999999862e-05, 6.708299999999903e-05, 6.704100000000032e-05, 6.630600000000209e-05, 6.65419999999993e-05, 6.64159999999997e-05, 6.687500000000096e-05, 6.680599999999912e-05, 6.682000000000216e-05, 6.634699999999785e-05, 6.659700000000157e-05, 6.644399999999884e-05, 6.69160000000002e-05, 6.669400000000256e-05, 6.70830000000025e-05, 6.67640000000004e-05, 6.698599999999805e-05, 6.698600000000152e-05, 6.705499999999989e-05, 6.702800000000023e-05, 6.643099999999874e-05, 6.62639999999999e-05, 6.679199999999955e-05, 6.627800000000295e-05, 6.632000000000166e-05, 6.651400000000016e-05, 6.629099999999957e-05, 6.70969999999986e-05, 6.676299999999746e-05, 6.716600000000045e-05, 6.665299999999985e-05, 6.72220000000022e-05, 6.67640000000004e-05, 6.716699999999992e-05, 6.662500000000071e-05, 6.637499999999699e-05, 6.72359999999983e-05, 6.650000000000059e-05, 6.669399999999909e-05, 6.688900000000053e-05, 6.688900000000053e-05, 6.720899999999863e-05, 6.675000000000084e-05, 6.715300000000035e-05, 6.695900000000185e-05]</msg>
<status status="PASS" starttime="20201030 18:29:27.417" endtime="20201030 18:29:27.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.412" endtime="20201030 18:29:27.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.481" endtime="20201030 18:29:27.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.480" endtime="20201030 18:29:27.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.478" endtime="20201030 18:29:27.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.049" endtime="20201030 18:29:27.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.048" endtime="20201030 18:29:27.502"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.511" endtime="20201030 18:29:27.531"></status>
</kw>
<msg timestamp="20201030 18:29:27.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.509" endtime="20201030 18:29:27.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.532" endtime="20201030 18:29:27.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.535" endtime="20201030 18:29:27.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.507" endtime="20201030 18:29:27.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.505" endtime="20201030 18:29:27.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.544" endtime="20201030 18:29:27.829"></status>
</kw>
<msg timestamp="20201030 18:29:27.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020658181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020725458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.542" endtime="20201030 18:29:27.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020658181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020725458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.833" endtime="20201030 18:29:27.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.841" endtime="20201030 18:29:27.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.540" endtime="20201030 18:29:27.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.538" endtime="20201030 18:29:27.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.847" level="INFO">${RESULT} = [{'diff': 6.727699999999753e-05}, {'diff': 6.733299999999928e-05}, {'diff': 6.763799999999834e-05}, {'diff': 6.776300000000193e-05}, {'diff': 6.791599999999773e-05}, {'diff': 6.738899999999756e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:27.844" endtime="20201030 18:29:27.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:27.852" level="INFO">${ACCURACY} = {'diff': [6.727699999999753e-05, 6.733299999999928e-05, 6.763799999999834e-05, 6.776300000000193e-05, 6.791599999999773e-05, 6.738899999999756e-05, 6.738899999999756e-05, 6.79169999999972e-05, 6.74719...</msg>
<status status="PASS" starttime="20201030 18:29:27.849" endtime="20201030 18:29:27.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.856" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:29:27.855" endtime="20201030 18:29:27.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.858" level="INFO">VALUE: [6.727699999999753e-05, 6.733299999999928e-05, 6.763799999999834e-05, 6.776300000000193e-05, 6.791599999999773e-05, 6.738899999999756e-05, 6.738899999999756e-05, 6.79169999999972e-05, 6.747199999999898e-05, 6.731899999999971e-05, 6.776399999999794e-05, 6.784699999999935e-05, 6.763899999999781e-05, 6.730599999999962e-05, 6.780600000000012e-05, 6.731899999999971e-05, 6.763900000000128e-05, 6.804100000000132e-05, 6.765300000000085e-05, 6.769499999999956e-05, 6.787499999999849e-05, 6.787500000000196e-05, 6.75969999999991e-05, 6.794400000000034e-05, 6.801400000000166e-05, 6.745799999999941e-05, 6.738900000000103e-05, 6.815299999999788e-05, 6.752800000000073e-05, 6.738900000000103e-05, 6.794400000000034e-05, 6.737499999999799e-05, 6.744500000000278e-05, 6.788899999999806e-05, 6.78480000000023e-05, 6.799999999999862e-05, 6.776399999999794e-05, 6.736100000000189e-05, 6.762500000000171e-05, 6.78619999999984e-05, 6.820800000000016e-05, 6.819399999999712e-05, 6.745799999999941e-05, 6.79160000000012e-05, 6.770799999999966e-05, 6.787500000000196e-05, 6.813900000000178e-05, 6.75420000000003e-05, 6.788900000000153e-05, 6.776399999999794e-05]</msg>
<status status="PASS" starttime="20201030 18:29:27.857" endtime="20201030 18:29:27.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.852" endtime="20201030 18:29:27.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.864" endtime="20201030 18:29:27.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.863" endtime="20201030 18:29:27.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.862" endtime="20201030 18:29:27.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.503" endtime="20201030 18:29:27.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.503" endtime="20201030 18:29:27.885"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.893" endtime="20201030 18:29:27.912"></status>
</kw>
<msg timestamp="20201030 18:29:27.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.892" endtime="20201030 18:29:27.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.914" endtime="20201030 18:29:27.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.916" endtime="20201030 18:29:27.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.889" endtime="20201030 18:29:27.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.887" endtime="20201030 18:29:27.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.925" endtime="20201030 18:29:28.210"></status>
</kw>
<msg timestamp="20201030 18:29:28.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019608083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.923" endtime="20201030 18:29:28.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019608083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.214" endtime="20201030 18:29:28.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.222" endtime="20201030 18:29:28.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.921" endtime="20201030 18:29:28.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.919" endtime="20201030 18:29:28.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:28.230" level="INFO">${RESULT} = [{'diff': 6.830499999999767e-05}, {'diff': 6.908300000000103e-05}, {'diff': 6.868000000000152e-05}, {'diff': 6.824999999999887e-05}, {'diff': 6.90970000000006e-05}, {'diff': 6.919399999999812e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:28.226" endtime="20201030 18:29:28.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:28.236" level="INFO">${ACCURACY} = {'diff': [6.830499999999767e-05, 6.908300000000103e-05, 6.868000000000152e-05, 6.824999999999887e-05, 6.90970000000006e-05, 6.919399999999812e-05, 6.899999999999962e-05, 6.894400000000134e-05, 6.83330...</msg>
<status status="PASS" starttime="20201030 18:29:28.232" endtime="20201030 18:29:28.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.240" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:29:28.239" endtime="20201030 18:29:28.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.243" level="INFO">VALUE: [6.830499999999767e-05, 6.908300000000103e-05, 6.868000000000152e-05, 6.824999999999887e-05, 6.90970000000006e-05, 6.919399999999812e-05, 6.899999999999962e-05, 6.894400000000134e-05, 6.833300000000028e-05, 6.882000000000069e-05, 6.920900000000063e-05, 6.838900000000203e-05, 6.832000000000019e-05, 6.861099999999967e-05, 6.908300000000103e-05, 6.913899999999931e-05, 6.838799999999909e-05, 6.886099999999992e-05, 6.880500000000164e-05, 6.836099999999942e-05, 6.82640000000019e-05, 6.908299999999756e-05, 6.833300000000028e-05, 6.888899999999906e-05, 6.915299999999888e-05, 6.915299999999888e-05, 6.862499999999924e-05, 6.870799999999719e-05, 6.870800000000066e-05, 6.92230000000002e-05, 6.840299999999813e-05, 6.838899999999856e-05, 6.870900000000013e-05, 6.870900000000013e-05, 6.840199999999866e-05, 6.856899999999749e-05, 6.82909999999981e-05, 6.904100000000232e-05, 6.829200000000105e-05, 6.861099999999967e-05, 6.895799999999744e-05, 6.858300000000053e-05, 6.90970000000006e-05, 6.831900000000071e-05, 6.844400000000084e-05, 6.888900000000253e-05, 6.869500000000056e-05, 6.894500000000081e-05, 6.868100000000099e-05, 6.882000000000069e-05]</msg>
<status status="PASS" starttime="20201030 18:29:28.242" endtime="20201030 18:29:28.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.237" endtime="20201030 18:29:28.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:28.248" endtime="20201030 18:29:28.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.246" endtime="20201030 18:29:28.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.245" endtime="20201030 18:29:28.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.886" endtime="20201030 18:29:28.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.885" endtime="20201030 18:29:28.269"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.277" endtime="20201030 18:29:28.296"></status>
</kw>
<msg timestamp="20201030 18:29:28.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.276" endtime="20201030 18:29:28.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.298" endtime="20201030 18:29:28.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.300" endtime="20201030 18:29:28.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.273" endtime="20201030 18:29:28.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.271" endtime="20201030 18:29:28.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.309" endtime="20201030 18:29:28.596"></status>
</kw>
<msg timestamp="20201030 18:29:28.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.308" endtime="20201030 18:29:28.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.600" endtime="20201030 18:29:28.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.608" endtime="20201030 18:29:28.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.305" endtime="20201030 18:29:28.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.303" endtime="20201030 18:29:28.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:28.615" level="INFO">${RESULT} = [{'diff': 6.97360000000008e-05}, {'diff': 7.012500000000074e-05}, {'diff': 6.926399999999944e-05}, {'diff': 6.937499999999999e-05}, {'diff': 6.983300000000178e-05}, {'diff': 6.963800000000034e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:28.612" endtime="20201030 18:29:28.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:28.619" level="INFO">${ACCURACY} = {'diff': [6.97360000000008e-05, 7.012500000000074e-05, 6.926399999999944e-05, 6.937499999999999e-05, 6.983300000000178e-05, 6.963800000000034e-05, 7.011100000000117e-05, 7.013900000000031e-05, 6.92640...</msg>
<status status="PASS" starttime="20201030 18:29:28.616" endtime="20201030 18:29:28.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.623" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:29:28.622" endtime="20201030 18:29:28.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.626" level="INFO">VALUE: [6.97360000000008e-05, 7.012500000000074e-05, 6.926399999999944e-05, 6.937499999999999e-05, 6.983300000000178e-05, 6.963800000000034e-05, 7.011100000000117e-05, 7.013900000000031e-05, 6.92640000000029e-05, 6.990299999999963e-05, 6.922200000000073e-05, 7.019399999999912e-05, 7.012499999999727e-05, 6.979199999999908e-05, 6.975000000000037e-05, 6.94030000000026e-05, 6.944500000000131e-05, 6.938899999999956e-05, 6.954199999999883e-05, 6.988900000000006e-05, 7.025000000000087e-05, 6.983299999999831e-05, 6.997200000000148e-05, 7.008299999999856e-05, 6.995799999999844e-05, 6.954099999999935e-05, 6.924999999999987e-05, 6.926399999999944e-05, 7.001400000000019e-05, 7.020799999999869e-05, 6.948600000000055e-05, 7.018099999999902e-05, 7.001400000000019e-05, 6.955600000000187e-05, 6.976399999999994e-05, 6.995899999999791e-05, 6.970800000000166e-05, 6.952799999999926e-05, 6.95559999999984e-05, 6.952799999999926e-05, 6.938899999999956e-05, 6.991700000000267e-05, 6.981899999999874e-05, 6.963799999999687e-05, 6.958300000000153e-05, 6.941700000000217e-05, 6.934700000000085e-05, 6.983299999999831e-05, 6.970800000000166e-05, 7.013900000000031e-05]</msg>
<status status="PASS" starttime="20201030 18:29:28.624" endtime="20201030 18:29:28.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.620" endtime="20201030 18:29:28.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:28.631" endtime="20201030 18:29:28.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.629" endtime="20201030 18:29:28.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.628" endtime="20201030 18:29:28.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.270" endtime="20201030 18:29:28.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.269" endtime="20201030 18:29:28.651"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.660" endtime="20201030 18:29:28.680"></status>
</kw>
<msg timestamp="20201030 18:29:28.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.658" endtime="20201030 18:29:28.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.682" endtime="20201030 18:29:28.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.684" endtime="20201030 18:29:28.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.656" endtime="20201030 18:29:28.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.654" endtime="20201030 18:29:28.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.693" endtime="20201030 18:29:28.979"></status>
</kw>
<msg timestamp="20201030 18:29:28.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020559708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020630153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.691" endtime="20201030 18:29:28.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020559708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020630153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.984" endtime="20201030 18:29:28.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.992" endtime="20201030 18:29:28.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.689" endtime="20201030 18:29:28.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.687" endtime="20201030 18:29:28.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:28.998" level="INFO">${RESULT} = [{'diff': 7.044499999999884e-05}, {'diff': 7.025000000000087e-05}, {'diff': 7.058399999999854e-05}, {'diff': 7.055499999999992e-05}, {'diff': 7.040300000000013e-05}, {'diff': 7.087500000000149e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:28.995" endtime="20201030 18:29:28.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:29.002" level="INFO">${ACCURACY} = {'diff': [7.044499999999884e-05, 7.025000000000087e-05, 7.058399999999854e-05, 7.055499999999992e-05, 7.040300000000013e-05, 7.087500000000149e-05, 7.058300000000253e-05, 7.095799999999944e-05, 7.0791...</msg>
<status status="PASS" starttime="20201030 18:29:28.999" endtime="20201030 18:29:29.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.007" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:29:29.006" endtime="20201030 18:29:29.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.009" level="INFO">VALUE: [7.044499999999884e-05, 7.025000000000087e-05, 7.058399999999854e-05, 7.055499999999992e-05, 7.040300000000013e-05, 7.087500000000149e-05, 7.058300000000253e-05, 7.095799999999944e-05, 7.07910000000006e-05, 7.070799999999919e-05, 7.044499999999884e-05, 7.076400000000094e-05, 7.083400000000226e-05, 7.043099999999927e-05, 7.044399999999937e-05, 7.095899999999891e-05, 7.106999999999947e-05, 7.055600000000287e-05, 7.04169999999997e-05, 7.037500000000099e-05, 7.102800000000076e-05, 7.125000000000187e-05, 7.045899999999841e-05, 7.041600000000023e-05, 7.116599999999751e-05, 7.049999999999765e-05, 7.052700000000078e-05, 7.120799999999969e-05, 7.077800000000051e-05, 7.063900000000081e-05, 7.059699999999863e-05, 7.044399999999937e-05, 7.050000000000112e-05, 7.088900000000106e-05, 7.080599999999965e-05, 7.052800000000026e-05, 7.025000000000087e-05, 7.097299999999848e-05, 7.038900000000056e-05, 7.043099999999927e-05, 7.02499999999974e-05, 7.069399999999962e-05, 7.037499999999752e-05, 7.027700000000053e-05, 7.070799999999919e-05, 7.081899999999974e-05, 7.086100000000192e-05, 7.098599999999858e-05, 7.084700000000235e-05, 7.113899999999784e-05]</msg>
<status status="PASS" starttime="20201030 18:29:29.008" endtime="20201030 18:29:29.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.003" endtime="20201030 18:29:29.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.015" endtime="20201030 18:29:29.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.014" endtime="20201030 18:29:29.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.012" endtime="20201030 18:29:29.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.652" endtime="20201030 18:29:29.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.652" endtime="20201030 18:29:29.036"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.044" endtime="20201030 18:29:29.064"></status>
</kw>
<msg timestamp="20201030 18:29:29.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.043" endtime="20201030 18:29:29.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.066" endtime="20201030 18:29:29.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.068" endtime="20201030 18:29:29.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.040" endtime="20201030 18:29:29.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.038" endtime="20201030 18:29:29.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.077" endtime="20201030 18:29:29.362"></status>
</kw>
<msg timestamp="20201030 18:29:29.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:29.075" endtime="20201030 18:29:29.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:29.366" endtime="20201030 18:29:29.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.375" endtime="20201030 18:29:29.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.073" endtime="20201030 18:29:29.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.071" endtime="20201030 18:29:29.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:29.381" level="INFO">${RESULT} = [{'diff': 7.138899999999809e-05}, {'diff': 7.188899999999859e-05}, {'diff': 7.138900000000156e-05}, {'diff': 7.163899999999834e-05}, {'diff': 7.154200000000083e-05}, {'diff': 7.201400000000219e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:29.378" endtime="20201030 18:29:29.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:29.386" level="INFO">${ACCURACY} = {'diff': [7.138899999999809e-05, 7.188899999999859e-05, 7.138900000000156e-05, 7.163899999999834e-05, 7.154200000000083e-05, 7.201400000000219e-05, 7.193100000000077e-05, 7.15560000000004e-05, 7.19589...</msg>
<status status="PASS" starttime="20201030 18:29:29.382" endtime="20201030 18:29:29.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.390" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:29:29.389" endtime="20201030 18:29:29.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.393" level="INFO">VALUE: [7.138899999999809e-05, 7.188899999999859e-05, 7.138900000000156e-05, 7.163899999999834e-05, 7.154200000000083e-05, 7.201400000000219e-05, 7.193100000000077e-05, 7.15560000000004e-05, 7.195899999999991e-05, 7.209700000000013e-05, 7.180500000000117e-05, 7.147199999999951e-05, 7.127800000000101e-05, 7.163900000000181e-05, 7.138900000000156e-05, 7.199999999999915e-05, 7.215300000000188e-05, 7.190300000000163e-05, 7.183300000000031e-05, 7.202800000000176e-05, 7.152800000000126e-05, 7.133299999999981e-05, 7.145899999999941e-05, 7.147199999999951e-05, 7.219500000000059e-05, 7.162499999999877e-05, 7.205500000000142e-05, 7.182000000000022e-05, 7.195800000000044e-05, 7.19439999999974e-05, 7.173599999999933e-05, 7.165199999999844e-05, 7.127800000000101e-05, 7.144499999999984e-05, 7.183300000000031e-05, 7.17499999999989e-05, 7.19439999999974e-05, 7.163899999999834e-05, 7.168100000000052e-05, 7.133399999999929e-05, 7.158399999999954e-05, 7.190299999999816e-05, 7.220900000000016e-05, 7.187500000000249e-05, 7.172199999999976e-05, 7.144499999999984e-05, 7.131900000000024e-05, 7.19439999999974e-05, 7.193100000000077e-05, 7.215299999999841e-05]</msg>
<status status="PASS" starttime="20201030 18:29:29.392" endtime="20201030 18:29:29.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.387" endtime="20201030 18:29:29.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.398" endtime="20201030 18:29:29.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.396" endtime="20201030 18:29:29.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.395" endtime="20201030 18:29:29.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.036" endtime="20201030 18:29:29.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.036" endtime="20201030 18:29:29.419"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.427" endtime="20201030 18:29:29.447"></status>
</kw>
<msg timestamp="20201030 18:29:29.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.426" endtime="20201030 18:29:29.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.449" endtime="20201030 18:29:29.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.451" endtime="20201030 18:29:29.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.423" endtime="20201030 18:29:29.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.421" endtime="20201030 18:29:29.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.460" endtime="20201030 18:29:29.747"></status>
</kw>
<msg timestamp="20201030 18:29:29.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019593958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019666208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.458" endtime="20201030 18:29:29.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019593958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019666208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.751" endtime="20201030 18:29:29.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.759" endtime="20201030 18:29:29.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.456" endtime="20201030 18:29:29.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.454" endtime="20201030 18:29:29.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:29.765" level="INFO">${RESULT} = [{'diff': 7.22499999999994e-05}, {'diff': 7.319399999999865e-05}, {'diff': 7.302800000000276e-05}, {'diff': 7.316699999999898e-05}, {'diff': 7.281900000000174e-05}, {'diff': 7.297200000000101e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:29.762" endtime="20201030 18:29:29.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:29.770" level="INFO">${ACCURACY} = {'diff': [7.22499999999994e-05, 7.319399999999865e-05, 7.302800000000276e-05, 7.316699999999898e-05, 7.281900000000174e-05, 7.297200000000101e-05, 7.244500000000084e-05, 7.291699999999873e-05, 7.25280...</msg>
<status status="PASS" starttime="20201030 18:29:29.766" endtime="20201030 18:29:29.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.774" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:29:29.773" endtime="20201030 18:29:29.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.777" level="INFO">VALUE: [7.22499999999994e-05, 7.319399999999865e-05, 7.302800000000276e-05, 7.316699999999898e-05, 7.281900000000174e-05, 7.297200000000101e-05, 7.244500000000084e-05, 7.291699999999873e-05, 7.252800000000226e-05, 7.238899999999909e-05, 7.270800000000119e-05, 7.308399999999757e-05, 7.241699999999823e-05, 7.316600000000298e-05, 7.276399999999947e-05, 7.313800000000037e-05, 7.292999999999883e-05, 7.234700000000038e-05, 7.284700000000088e-05, 7.231900000000124e-05, 7.288899999999959e-05, 7.288899999999959e-05, 7.320800000000169e-05, 7.320800000000169e-05, 7.277799999999904e-05, 7.238899999999909e-05, 7.284800000000036e-05, 7.245900000000041e-05, 7.276400000000294e-05, 7.297200000000101e-05, 7.316699999999898e-05, 7.298599999999711e-05, 7.240299999999866e-05, 7.22499999999994e-05, 7.299999999999668e-05, 7.279199999999861e-05, 7.238899999999909e-05, 7.251399999999922e-05, 7.304199999999886e-05, 7.231899999999777e-05, 7.316699999999898e-05, 7.238899999999909e-05, 7.231899999999777e-05, 7.232000000000072e-05, 7.270900000000066e-05, 7.265299999999891e-05, 7.244499999999737e-05, 7.291699999999873e-05, 7.308400000000104e-05, 7.22499999999994e-05]</msg>
<status status="PASS" starttime="20201030 18:29:29.775" endtime="20201030 18:29:29.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.771" endtime="20201030 18:29:29.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.782" endtime="20201030 18:29:29.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.780" endtime="20201030 18:29:29.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.779" endtime="20201030 18:29:29.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.420" endtime="20201030 18:29:29.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.419" endtime="20201030 18:29:29.802"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.811" endtime="20201030 18:29:29.833"></status>
</kw>
<msg timestamp="20201030 18:29:29.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.809" endtime="20201030 18:29:29.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.835" endtime="20201030 18:29:29.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.837" endtime="20201030 18:29:29.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.807" endtime="20201030 18:29:29.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.805" endtime="20201030 18:29:29.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.846" endtime="20201030 18:29:30.131"></status>
</kw>
<msg timestamp="20201030 18:29:30.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022986833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023060667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.845" endtime="20201030 18:29:30.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022986833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023060667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.135" endtime="20201030 18:29:30.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.143" endtime="20201030 18:29:30.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.842" endtime="20201030 18:29:30.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.841" endtime="20201030 18:29:30.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:30.150" level="INFO">${RESULT} = [{'diff': 7.383399999999832e-05}, {'diff': 7.354199999999936e-05}, {'diff': 7.420899999999869e-05}, {'diff': 7.4069999999999e-05}, {'diff': 7.409800000000161e-05}, {'diff': 7.327799999999954e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:30.147" endtime="20201030 18:29:30.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:30.154" level="INFO">${ACCURACY} = {'diff': [7.383399999999832e-05, 7.354199999999936e-05, 7.420899999999869e-05, 7.4069999999999e-05, 7.409800000000161e-05, 7.327799999999954e-05, 7.32500000000004e-05, 7.351300000000074e-05, 7.3693999...</msg>
<status status="PASS" starttime="20201030 18:29:30.151" endtime="20201030 18:29:30.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.159" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:29:30.158" endtime="20201030 18:29:30.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.161" level="INFO">VALUE: [7.383399999999832e-05, 7.354199999999936e-05, 7.420899999999869e-05, 7.4069999999999e-05, 7.409800000000161e-05, 7.327799999999954e-05, 7.32500000000004e-05, 7.351300000000074e-05, 7.369399999999915e-05, 7.334699999999791e-05, 7.338900000000009e-05, 7.395799999999897e-05, 7.327800000000301e-05, 7.383299999999884e-05, 7.35829999999986e-05, 7.402800000000029e-05, 7.338900000000009e-05, 7.409699999999866e-05, 7.39309999999993e-05, 7.365299999999991e-05, 7.420799999999922e-05, 7.345900000000141e-05, 7.358400000000154e-05, 7.413900000000084e-05, 7.383399999999832e-05, 7.326399999999997e-05, 7.422200000000226e-05, 7.345800000000194e-05, 7.395800000000244e-05, 7.384699999999841e-05, 7.376400000000047e-05, 7.370799999999872e-05, 7.404199999999986e-05, 7.383299999999884e-05, 7.377800000000004e-05, 7.379199999999961e-05, 7.395900000000191e-05, 7.383299999999884e-05, 7.39309999999993e-05, 7.387500000000102e-05, 7.380500000000317e-05, 7.419500000000259e-05, 7.368099999999905e-05, 7.330599999999868e-05, 7.345800000000194e-05, 7.334699999999791e-05, 7.420800000000269e-05, 7.383299999999884e-05, 7.35690000000025e-05, 7.34300000000028e-05]</msg>
<status status="PASS" starttime="20201030 18:29:30.160" endtime="20201030 18:29:30.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.155" endtime="20201030 18:29:30.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:30.167" endtime="20201030 18:29:30.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.165" endtime="20201030 18:29:30.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.164" endtime="20201030 18:29:30.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.803" endtime="20201030 18:29:30.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.803" endtime="20201030 18:29:30.187"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.196" endtime="20201030 18:29:30.215"></status>
</kw>
<msg timestamp="20201030 18:29:30.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.194" endtime="20201030 18:29:30.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.216" endtime="20201030 18:29:30.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.219" endtime="20201030 18:29:30.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.192" endtime="20201030 18:29:30.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.190" endtime="20201030 18:29:30.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.228" endtime="20201030 18:29:30.513"></status>
</kw>
<msg timestamp="20201030 18:29:30.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019647847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.226" endtime="20201030 18:29:30.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019647847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.517" endtime="20201030 18:29:30.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.526" endtime="20201030 18:29:30.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.224" endtime="20201030 18:29:30.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.222" endtime="20201030 18:29:30.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:30.533" level="INFO">${RESULT} = [{'diff': 7.466600000000101e-05}, {'diff': 7.470799999999972e-05}, {'diff': 7.441700000000023e-05}, {'diff': 7.462500000000177e-05}, {'diff': 7.516700000000098e-05}, {'diff': 7.451399999999775e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:30.529" endtime="20201030 18:29:30.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:30.537" level="INFO">${ACCURACY} = {'diff': [7.466600000000101e-05, 7.470799999999972e-05, 7.441700000000023e-05, 7.462500000000177e-05, 7.516700000000098e-05, 7.451399999999775e-05, 7.426400000000097e-05, 7.430600000000315e-05, 7.5167...</msg>
<status status="PASS" starttime="20201030 18:29:30.534" endtime="20201030 18:29:30.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.542" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:29:30.541" endtime="20201030 18:29:30.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.544" level="INFO">VALUE: [7.466600000000101e-05, 7.470799999999972e-05, 7.441700000000023e-05, 7.462500000000177e-05, 7.516700000000098e-05, 7.451399999999775e-05, 7.426400000000097e-05, 7.430600000000315e-05, 7.516700000000098e-05, 7.46110000000022e-05, 7.508399999999957e-05, 7.477700000000156e-05, 7.430599999999968e-05, 7.516599999999804e-05, 7.490300000000116e-05, 7.452800000000079e-05, 7.4763999999998e-05, 7.483300000000331e-05, 7.433300000000281e-05, 7.466700000000048e-05, 7.445799999999947e-05, 7.480600000000018e-05, 7.501400000000172e-05, 7.518100000000055e-05, 7.51249999999988e-05, 7.481999999999975e-05, 7.520899999999969e-05, 7.450000000000165e-05, 7.501399999999825e-05, 7.444499999999937e-05, 7.515300000000141e-05, 7.470799999999972e-05, 7.490199999999822e-05, 7.472199999999929e-05, 7.46249999999983e-05, 7.488899999999812e-05, 7.466700000000048e-05, 7.476400000000147e-05, 7.44309999999998e-05, 7.448600000000208e-05, 7.431999999999925e-05, 7.480600000000018e-05, 7.507e-05, 7.438900000000109e-05, 7.463900000000134e-05, 7.502800000000129e-05, 7.505600000000043e-05, 7.45829999999996e-05, 7.461199999999821e-05, 7.441600000000076e-05]</msg>
<status status="PASS" starttime="20201030 18:29:30.543" endtime="20201030 18:29:30.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.538" endtime="20201030 18:29:30.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:30.549" endtime="20201030 18:29:30.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.548" endtime="20201030 18:29:30.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.547" endtime="20201030 18:29:30.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.188" endtime="20201030 18:29:30.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.188" endtime="20201030 18:29:30.570"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.579" endtime="20201030 18:29:30.598"></status>
</kw>
<msg timestamp="20201030 18:29:30.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.577" endtime="20201030 18:29:30.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.599" endtime="20201030 18:29:30.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.602" endtime="20201030 18:29:30.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.574" endtime="20201030 18:29:30.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.572" endtime="20201030 18:29:30.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.611" endtime="20201030 18:29:30.897"></status>
</kw>
<msg timestamp="20201030 18:29:30.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019729208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.609" endtime="20201030 18:29:30.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019729208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.901" endtime="20201030 18:29:30.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.909" endtime="20201030 18:29:30.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.607" endtime="20201030 18:29:30.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.605" endtime="20201030 18:29:30.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:30.916" level="INFO">${RESULT} = [{'diff': 7.534699999999991e-05}, {'diff': 7.615199999999947e-05}, {'diff': 7.584700000000041e-05}, {'diff': 7.536099999999948e-05}, {'diff': 7.583299999999737e-05}, {'diff': 7.544399999999743e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:30.913" endtime="20201030 18:29:30.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:30.920" level="INFO">${ACCURACY} = {'diff': [7.534699999999991e-05, 7.615199999999947e-05, 7.584700000000041e-05, 7.536099999999948e-05, 7.583299999999737e-05, 7.544399999999743e-05, 7.574999999999943e-05, 7.613899999999937e-05, 7.5485...</msg>
<status status="PASS" starttime="20201030 18:29:30.917" endtime="20201030 18:29:30.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.924" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:29:30.923" endtime="20201030 18:29:30.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.927" level="INFO">VALUE: [7.534699999999991e-05, 7.615199999999947e-05, 7.584700000000041e-05, 7.536099999999948e-05, 7.583299999999737e-05, 7.544399999999743e-05, 7.574999999999943e-05, 7.613899999999937e-05, 7.548599999999961e-05, 7.533300000000034e-05, 7.531900000000077e-05, 7.548599999999961e-05, 7.537499999999905e-05, 7.594399999999793e-05, 7.565299999999844e-05, 7.554200000000136e-05, 7.534799999999939e-05, 7.580600000000118e-05, 7.613899999999937e-05, 7.527799999999807e-05, 7.540199999999872e-05, 7.604099999999892e-05, 7.611100000000023e-05, 7.522199999999979e-05, 7.563899999999887e-05, 7.588899999999912e-05, 7.551400000000222e-05, 7.574999999999943e-05, 7.580499999999823e-05, 7.576400000000247e-05, 7.59029999999987e-05, 7.620800000000122e-05, 7.551400000000222e-05, 7.59310000000013e-05, 7.5763999999999e-05, 7.584800000000336e-05, 7.556999999999703e-05, 7.59440000000014e-05, 7.583300000000084e-05, 7.555499999999798e-05, 7.534699999999991e-05, 7.611100000000023e-05, 7.55830000000006e-05, 7.565300000000191e-05, 7.609700000000066e-05, 7.556899999999755e-05, 7.58189999999978e-05, 7.597199999999707e-05, 7.613899999999937e-05, 7.540300000000166e-05]</msg>
<status status="PASS" starttime="20201030 18:29:30.925" endtime="20201030 18:29:30.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.921" endtime="20201030 18:29:30.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:30.932" endtime="20201030 18:29:30.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.930" endtime="20201030 18:29:30.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.929" endtime="20201030 18:29:30.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.571" endtime="20201030 18:29:30.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.570" endtime="20201030 18:29:30.952"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.961" endtime="20201030 18:29:30.982"></status>
</kw>
<msg timestamp="20201030 18:29:30.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.959" endtime="20201030 18:29:30.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.983" endtime="20201030 18:29:30.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.986" endtime="20201030 18:29:30.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.957" endtime="20201030 18:29:30.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.955" endtime="20201030 18:29:30.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.995" endtime="20201030 18:29:31.281"></status>
</kw>
<msg timestamp="20201030 18:29:31.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020640819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020717833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.993" endtime="20201030 18:29:31.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020640819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020717833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.285" endtime="20201030 18:29:31.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.293" endtime="20201030 18:29:31.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.990" endtime="20201030 18:29:31.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.989" endtime="20201030 18:29:31.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:31.299" level="INFO">${RESULT} = [{'diff': 7.701400000000025e-05}, {'diff': 7.633400000000082e-05}, {'diff': 7.679200000000261e-05}, {'diff': 7.645800000000147e-05}, {'diff': 7.723599999999789e-05}, {'diff': 7.69440000000024e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:31.296" endtime="20201030 18:29:31.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:31.304" level="INFO">${ACCURACY} = {'diff': [7.701400000000025e-05, 7.633400000000082e-05, 7.679200000000261e-05, 7.645800000000147e-05, 7.723599999999789e-05, 7.69440000000024e-05, 7.700000000000068e-05, 7.700000000000068e-05, 7.65969...</msg>
<status status="PASS" starttime="20201030 18:29:31.300" endtime="20201030 18:29:31.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.308" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:29:31.307" endtime="20201030 18:29:31.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.311" level="INFO">VALUE: [7.701400000000025e-05, 7.633400000000082e-05, 7.679200000000261e-05, 7.645800000000147e-05, 7.723599999999789e-05, 7.69440000000024e-05, 7.700000000000068e-05, 7.700000000000068e-05, 7.65969999999977e-05, 7.666699999999901e-05, 7.652799999999932e-05, 7.643099999999833e-05, 7.652799999999932e-05, 7.644500000000137e-05, 7.652799999999932e-05, 7.684699999999794e-05, 7.641699999999876e-05, 7.688800000000065e-05, 7.633299999999787e-05, 7.722199999999832e-05, 7.717999999999961e-05, 7.641700000000223e-05, 7.695800000000197e-05, 7.630499999999873e-05, 7.723600000000136e-05, 7.706999999999853e-05, 7.719499999999865e-05, 7.62639999999995e-05, 7.715200000000047e-05, 7.713900000000037e-05, 7.69029999999997e-05, 7.670799999999825e-05, 7.624999999999993e-05, 7.645800000000147e-05, 7.63890000000031e-05, 7.627799999999907e-05, 7.694399999999893e-05, 7.719399999999918e-05, 7.641700000000223e-05, 7.641699999999876e-05, 7.701400000000025e-05, 7.666599999999954e-05, 7.663899999999987e-05, 7.644500000000137e-05, 7.64310000000018e-05, 7.683400000000132e-05, 7.65700000000015e-05, 7.650000000000018e-05, 7.71380000000009e-05, 7.672200000000129e-05]</msg>
<status status="PASS" starttime="20201030 18:29:31.309" endtime="20201030 18:29:31.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.304" endtime="20201030 18:29:31.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:31.316" endtime="20201030 18:29:31.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.315" endtime="20201030 18:29:31.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.314" endtime="20201030 18:29:31.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.953" endtime="20201030 18:29:31.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.953" endtime="20201030 18:29:31.337"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.346" endtime="20201030 18:29:31.366"></status>
</kw>
<msg timestamp="20201030 18:29:31.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.344" endtime="20201030 18:29:31.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.367" endtime="20201030 18:29:31.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.370" endtime="20201030 18:29:31.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.341" endtime="20201030 18:29:31.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.339" endtime="20201030 18:29:31.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.379" endtime="20201030 18:29:31.665"></status>
</kw>
<msg timestamp="20201030 18:29:31.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019677569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01975525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:31.377" endtime="20201030 18:29:31.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019677569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01975525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:31.669" endtime="20201030 18:29:31.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.677" endtime="20201030 18:29:31.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.375" endtime="20201030 18:29:31.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.373" endtime="20201030 18:29:31.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:31.684" level="INFO">${RESULT} = [{'diff': 7.768099999999958e-05}, {'diff': 7.797199999999907e-05}, {'diff': 7.797200000000254e-05}, {'diff': 7.802800000000082e-05}, {'diff': 7.751400000000075e-05}, {'diff': 7.769499999999915e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:31.681" endtime="20201030 18:29:31.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:31.689" level="INFO">${ACCURACY} = {'diff': [7.768099999999958e-05, 7.797199999999907e-05, 7.797200000000254e-05, 7.802800000000082e-05, 7.751400000000075e-05, 7.769499999999915e-05, 7.815300000000094e-05, 7.788800000000165e-05, 7.7568...</msg>
<status status="PASS" starttime="20201030 18:29:31.685" endtime="20201030 18:29:31.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.693" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:29:31.692" endtime="20201030 18:29:31.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.696" level="INFO">VALUE: [7.768099999999958e-05, 7.797199999999907e-05, 7.797200000000254e-05, 7.802800000000082e-05, 7.751400000000075e-05, 7.769499999999915e-05, 7.815300000000094e-05, 7.788800000000165e-05, 7.756899999999955e-05, 7.7457999999999e-05, 7.79030000000007e-05, 7.779100000000067e-05, 7.806900000000006e-05, 7.775000000000143e-05, 7.809700000000266e-05, 7.738900000000062e-05, 7.811099999999876e-05, 7.76250000000013e-05, 7.725000000000093e-05, 7.75700000000025e-05, 7.755599999999946e-05, 7.76389999999974e-05, 7.815300000000094e-05, 7.791600000000079e-05, 7.755499999999999e-05, 7.8151999999998e-05, 7.806900000000006e-05, 7.81389999999979e-05, 7.74440000000029e-05, 7.806900000000006e-05, 7.79579999999995e-05, 7.754199999999989e-05, 7.727800000000007e-05, 7.749999999999771e-05, 7.747199999999857e-05, 7.776399999999753e-05, 7.777800000000057e-05, 7.74030000000002e-05, 7.795900000000244e-05, 7.784699999999894e-05, 7.819499999999965e-05, 7.804100000000092e-05, 7.776300000000153e-05, 7.723599999999789e-05, 7.811099999999876e-05, 7.815299999999747e-05, 7.72640000000005e-05, 7.809700000000266e-05, 7.744399999999943e-05, 7.729199999999964e-05]</msg>
<status status="PASS" starttime="20201030 18:29:31.694" endtime="20201030 18:29:31.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.690" endtime="20201030 18:29:31.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:31.701" endtime="20201030 18:29:31.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.699" endtime="20201030 18:29:31.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.698" endtime="20201030 18:29:31.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.338" endtime="20201030 18:29:31.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.337" endtime="20201030 18:29:31.721"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.730" endtime="20201030 18:29:31.750"></status>
</kw>
<msg timestamp="20201030 18:29:31.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.728" endtime="20201030 18:29:31.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.751" endtime="20201030 18:29:31.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.754" endtime="20201030 18:29:31.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.726" endtime="20201030 18:29:31.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.724" endtime="20201030 18:29:31.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.763" endtime="20201030 18:29:32.049"></status>
</kw>
<msg timestamp="20201030 18:29:32.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.761" endtime="20201030 18:29:32.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.053" endtime="20201030 18:29:32.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.061" endtime="20201030 18:29:32.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.759" endtime="20201030 18:29:32.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.757" endtime="20201030 18:29:32.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:32.067" level="INFO">${RESULT} = [{'diff': 7.915300000000194e-05}, {'diff': 7.916599999999857e-05}, {'diff': 7.84449999999999e-05}, {'diff': 7.847199999999957e-05}, {'diff': 7.883300000000037e-05}, {'diff': 7.827699999999813e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:32.064" endtime="20201030 18:29:32.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:32.072" level="INFO">${ACCURACY} = {'diff': [7.915300000000194e-05, 7.916599999999857e-05, 7.84449999999999e-05, 7.847199999999957e-05, 7.883300000000037e-05, 7.827699999999813e-05, 7.881899999999734e-05, 7.873599999999939e-05, 7.84719...</msg>
<status status="PASS" starttime="20201030 18:29:32.068" endtime="20201030 18:29:32.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.076" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:29:32.075" endtime="20201030 18:29:32.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.078" level="INFO">VALUE: [7.915300000000194e-05, 7.916599999999857e-05, 7.84449999999999e-05, 7.847199999999957e-05, 7.883300000000037e-05, 7.827699999999813e-05, 7.881899999999734e-05, 7.873599999999939e-05, 7.847199999999957e-05, 7.89580000000005e-05, 7.91389999999989e-05, 7.892999999999789e-05, 7.865299999999797e-05, 7.907000000000053e-05, 7.919500000000065e-05, 7.916699999999804e-05, 7.888899999999865e-05, 7.90840000000001e-05, 7.879200000000114e-05, 7.905500000000149e-05, 7.881899999999734e-05, 7.862499999999883e-05, 7.840199999999825e-05, 7.91389999999989e-05, 7.88190000000008e-05, 7.858300000000012e-05, 7.90970000000002e-05, 7.825000000000193e-05, 7.85969999999997e-05, 7.879199999999767e-05, 7.89450000000004e-05, 7.884799999999942e-05, 7.851400000000175e-05, 7.872199999999982e-05, 7.851399999999828e-05, 7.843099999999686e-05, 7.859700000000316e-05, 7.902699999999888e-05, 7.883300000000037e-05, 7.844400000000043e-05, 7.90970000000002e-05, 7.904200000000139e-05, 7.863900000000187e-05, 7.84030000000012e-05, 7.89580000000005e-05, 7.838899999999815e-05, 7.89450000000004e-05, 7.851399999999828e-05, 7.90840000000001e-05, 7.868099999999711e-05]</msg>
<status status="PASS" starttime="20201030 18:29:32.077" endtime="20201030 18:29:32.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.072" endtime="20201030 18:29:32.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:32.083" endtime="20201030 18:29:32.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.082" endtime="20201030 18:29:32.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.081" endtime="20201030 18:29:32.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.722" endtime="20201030 18:29:32.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.722" endtime="20201030 18:29:32.104"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.113" endtime="20201030 18:29:32.134"></status>
</kw>
<msg timestamp="20201030 18:29:32.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.111" endtime="20201030 18:29:32.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.135" endtime="20201030 18:29:32.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.138" endtime="20201030 18:29:32.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.109" endtime="20201030 18:29:32.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.106" endtime="20201030 18:29:32.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.147" endtime="20201030 18:29:32.431"></status>
</kw>
<msg timestamp="20201030 18:29:32.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020701, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020780611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:32.145" endtime="20201030 18:29:32.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020701, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020780611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:32.436" endtime="20201030 18:29:32.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.444" endtime="20201030 18:29:32.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.142" endtime="20201030 18:29:32.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.141" endtime="20201030 18:29:32.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:32.450" level="INFO">${RESULT} = [{'diff': 7.961100000000026e-05}, {'diff': 7.973599999999692e-05}, {'diff': 7.97779999999991e-05}, {'diff': 7.934700000000044e-05}, {'diff': 7.99580000000015e-05}, {'diff': 7.947300000000004e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:32.447" endtime="20201030 18:29:32.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:32.454" level="INFO">${ACCURACY} = {'diff': [7.961100000000026e-05, 7.973599999999692e-05, 7.97779999999991e-05, 7.934700000000044e-05, 7.99580000000015e-05, 7.947300000000004e-05, 7.947200000000057e-05, 7.96389999999994e-05, 7.9596999...</msg>
<status status="PASS" starttime="20201030 18:29:32.451" endtime="20201030 18:29:32.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.459" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:29:32.458" endtime="20201030 18:29:32.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.461" level="INFO">VALUE: [7.961100000000026e-05, 7.973599999999692e-05, 7.97779999999991e-05, 7.934700000000044e-05, 7.99580000000015e-05, 7.947300000000004e-05, 7.947200000000057e-05, 7.96389999999994e-05, 7.959699999999723e-05, 8.015300000000294e-05, 7.926399999999903e-05, 8.009800000000067e-05, 8.009800000000067e-05, 7.95840000000006e-05, 8.002799999999935e-05, 7.945900000000047e-05, 7.977699999999963e-05, 8.020800000000175e-05, 7.994400000000193e-05, 7.984700000000094e-05, 7.943099999999786e-05, 7.994400000000193e-05, 7.945799999999753e-05, 8.008300000000163e-05, 8.008299999999816e-05, 7.99169999999988e-05, 7.947300000000004e-05, 7.938900000000262e-05, 7.97779999999991e-05, 7.984800000000042e-05, 8.002799999999935e-05, 7.962499999999983e-05, 7.995799999999803e-05, 7.99580000000015e-05, 8.0152e-05, 7.97779999999991e-05, 7.937499999999958e-05, 8.006900000000206e-05, 7.9458000000001e-05, 7.926399999999903e-05, 8.001399999999978e-05, 7.94450000000009e-05, 7.947300000000004e-05, 7.982000000000128e-05, 7.982000000000128e-05, 7.970900000000072e-05, 8.00840000000011e-05, 7.987500000000008e-05, 7.973600000000039e-05, 7.944400000000143e-05]</msg>
<status status="PASS" starttime="20201030 18:29:32.460" endtime="20201030 18:29:32.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.455" endtime="20201030 18:29:32.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:32.477" endtime="20201030 18:29:32.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.475" endtime="20201030 18:29:32.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.474" endtime="20201030 18:29:32.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.105" endtime="20201030 18:29:32.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.104" endtime="20201030 18:29:32.497"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.506" endtime="20201030 18:29:32.526"></status>
</kw>
<msg timestamp="20201030 18:29:32.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.504" endtime="20201030 18:29:32.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.528" endtime="20201030 18:29:32.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.530" endtime="20201030 18:29:32.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.502" endtime="20201030 18:29:32.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.500" endtime="20201030 18:29:32.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.539" endtime="20201030 18:29:32.825"></status>
</kw>
<msg timestamp="20201030 18:29:32.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019838958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.538" endtime="20201030 18:29:32.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019838958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.829" endtime="20201030 18:29:32.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.837" endtime="20201030 18:29:32.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.535" endtime="20201030 18:29:32.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.534" endtime="20201030 18:29:32.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:32.843" level="INFO">${RESULT} = [{'diff': 8.100000000000121e-05}, {'diff': 8.084700000000195e-05}, {'diff': 8.076399999999706e-05}, {'diff': 8.023599999999742e-05}, {'diff': 8.06109999999978e-05}, {'diff': 8.063899999999694e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:32.840" endtime="20201030 18:29:32.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:32.848" level="INFO">${ACCURACY} = {'diff': [8.100000000000121e-05, 8.084700000000195e-05, 8.076399999999706e-05, 8.023599999999742e-05, 8.06109999999978e-05, 8.063899999999694e-05, 8.070800000000225e-05, 8.119499999999918e-05, 8.08750...</msg>
<status status="PASS" starttime="20201030 18:29:32.844" endtime="20201030 18:29:32.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.853" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:29:32.852" endtime="20201030 18:29:32.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.855" level="INFO">VALUE: [8.100000000000121e-05, 8.084700000000195e-05, 8.076399999999706e-05, 8.023599999999742e-05, 8.06109999999978e-05, 8.063899999999694e-05, 8.070800000000225e-05, 8.119499999999918e-05, 8.087500000000108e-05, 8.111200000000124e-05, 8.111200000000124e-05, 8.09589999999985e-05, 8.038900000000015e-05, 8.109800000000167e-05, 8.05840000000016e-05, 8.076400000000053e-05, 8.098599999999817e-05, 8.112500000000133e-05, 8.122199999999885e-05, 8.050000000000071e-05, 8.038900000000015e-05, 8.070799999999878e-05, 8.08329999999989e-05, 8.090300000000022e-05, 8.079199999999967e-05, 8.108399999999863e-05, 8.07230000000013e-05, 8.112500000000133e-05, 8.06390000000004e-05, 8.065299999999997e-05, 8.095799999999903e-05, 8.031999999999831e-05, 8.07910000000002e-05, 8.11390000000009e-05, 8.05970000000017e-05, 8.05970000000017e-05, 8.038900000000015e-05, 8.11390000000009e-05, 8.105599999999949e-05, 8.090300000000022e-05, 8.072200000000182e-05, 8.06390000000004e-05, 8.108399999999863e-05, 8.070900000000172e-05, 8.10840000000021e-05, 8.097299999999807e-05, 8.041599999999982e-05, 8.112499999999787e-05, 8.084700000000195e-05, 8.102700000000088e-05]</msg>
<status status="PASS" starttime="20201030 18:29:32.854" endtime="20201030 18:29:32.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.849" endtime="20201030 18:29:32.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:32.861" endtime="20201030 18:29:32.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.859" endtime="20201030 18:29:32.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.858" endtime="20201030 18:29:32.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.498" endtime="20201030 18:29:32.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.498" endtime="20201030 18:29:32.881"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.890" endtime="20201030 18:29:32.909"></status>
</kw>
<msg timestamp="20201030 18:29:32.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.888" endtime="20201030 18:29:32.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.911" endtime="20201030 18:29:32.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.913" endtime="20201030 18:29:32.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.886" endtime="20201030 18:29:32.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.884" endtime="20201030 18:29:32.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.922" endtime="20201030 18:29:33.209"></status>
</kw>
<msg timestamp="20201030 18:29:33.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019580542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019662514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.921" endtime="20201030 18:29:33.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019580542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019662514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.213" endtime="20201030 18:29:33.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.221" endtime="20201030 18:29:33.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.918" endtime="20201030 18:29:33.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.916" endtime="20201030 18:29:33.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:33.228" level="INFO">${RESULT} = [{'diff': 8.19719999999996e-05}, {'diff': 8.2152999999998e-05}, {'diff': 8.145900000000247e-05}, {'diff': 8.212499999999887e-05}, {'diff': 8.209800000000267e-05}, {'diff': 8.201399999999831e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:29:33.224" endtime="20201030 18:29:33.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:33.232" level="INFO">${ACCURACY} = {'diff': [8.19719999999996e-05, 8.2152999999998e-05, 8.145900000000247e-05, 8.212499999999887e-05, 8.209800000000267e-05, 8.201399999999831e-05, 8.18329999999999e-05, 8.212499999999887e-05, 8.22219999...</msg>
<status status="PASS" starttime="20201030 18:29:33.229" endtime="20201030 18:29:33.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.236" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:29:33.235" endtime="20201030 18:29:33.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.239" level="INFO">VALUE: [8.19719999999996e-05, 8.2152999999998e-05, 8.145900000000247e-05, 8.212499999999887e-05, 8.209800000000267e-05, 8.201399999999831e-05, 8.18329999999999e-05, 8.212499999999887e-05, 8.222199999999985e-05, 8.13329999999994e-05, 8.126400000000103e-05, 8.205499999999755e-05, 8.158299999999966e-05, 8.140300000000072e-05, 8.202799999999788e-05, 8.13329999999994e-05, 8.120800000000275e-05, 8.187499999999862e-05, 8.184699999999948e-05, 8.219499999999672e-05, 8.200000000000221e-05, 8.187499999999862e-05, 8.143099999999986e-05, 8.220800000000028e-05, 8.195800000000003e-05, 8.14719999999991e-05, 8.152800000000085e-05, 8.126400000000103e-05, 8.131899999999984e-05, 8.17780000000011e-05, 8.212499999999887e-05, 8.177799999999763e-05, 8.138899999999769e-05, 8.177700000000163e-05, 8.137500000000158e-05, 8.148600000000214e-05, 8.133400000000235e-05, 8.216600000000157e-05, 8.130500000000027e-05, 8.186099999999905e-05, 8.194400000000046e-05, 8.220800000000028e-05, 8.219400000000071e-05, 8.181900000000034e-05, 8.13329999999994e-05, 8.130599999999974e-05, 8.156999999999956e-05, 8.140300000000072e-05, 8.176400000000153e-05, 8.152800000000085e-05]</msg>
<status status="PASS" starttime="20201030 18:29:33.237" endtime="20201030 18:29:33.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.232" endtime="20201030 18:29:33.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:33.244" endtime="20201030 18:29:33.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.242" endtime="20201030 18:29:33.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.241" endtime="20201030 18:29:33.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.882" endtime="20201030 18:29:33.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.881" endtime="20201030 18:29:33.264"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.273" endtime="20201030 18:29:33.296"></status>
</kw>
<msg timestamp="20201030 18:29:33.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.271" endtime="20201030 18:29:33.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.297" endtime="20201030 18:29:33.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.300" endtime="20201030 18:29:33.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.269" endtime="20201030 18:29:33.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.267" endtime="20201030 18:29:33.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.309" endtime="20201030 18:29:33.594"></status>
</kw>
<msg timestamp="20201030 18:29:33.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022858292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022940514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.307" endtime="20201030 18:29:33.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022858292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022940514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.599" endtime="20201030 18:29:33.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.607" endtime="20201030 18:29:33.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.305" endtime="20201030 18:29:33.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.303" endtime="20201030 18:29:33.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:33.614" level="INFO">${RESULT} = [{'diff': 8.222199999999985e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.283400000000038e-05}, {'diff': 8.270900000000025e-05}, {'diff': 8.254100000000195e-05}, {'diff': 8.302799999999888e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:33.610" endtime="20201030 18:29:33.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:33.618" level="INFO">${ACCURACY} = {'diff': [8.222199999999985e-05, 8.31110000000003e-05, 8.283400000000038e-05, 8.270900000000025e-05, 8.254100000000195e-05, 8.302799999999888e-05, 8.241600000000182e-05, 8.256899999999762e-05, 8.24999...</msg>
<status status="PASS" starttime="20201030 18:29:33.615" endtime="20201030 18:29:33.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.622" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:29:33.621" endtime="20201030 18:29:33.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.625" level="INFO">VALUE: [8.222199999999985e-05, 8.31110000000003e-05, 8.283400000000038e-05, 8.270900000000025e-05, 8.254100000000195e-05, 8.302799999999888e-05, 8.241600000000182e-05, 8.256899999999762e-05, 8.249999999999924e-05, 8.284799999999995e-05, 8.301399999999931e-05, 8.323599999999695e-05, 8.27919999999982e-05, 8.270800000000078e-05, 8.313899999999944e-05, 8.283299999999744e-05, 8.233399999999988e-05, 8.26109999999998e-05, 8.281999999999734e-05, 8.240299999999826e-05, 8.313899999999944e-05, 8.277699999999916e-05, 8.318000000000214e-05, 8.31659999999991e-05, 8.293100000000136e-05, 8.3152999999999e-05, 8.258300000000066e-05, 8.263899999999894e-05, 8.279200000000167e-05, 8.244400000000096e-05, 8.23330000000004e-05, 8.258300000000066e-05, 8.31659999999991e-05, 8.252799999999838e-05, 8.276399999999906e-05, 8.309700000000073e-05, 8.244500000000043e-05, 8.315199999999953e-05, 8.268000000000164e-05, 8.276399999999906e-05, 8.244399999999749e-05, 8.241699999999783e-05, 8.302800000000235e-05, 8.29720000000006e-05, 8.224999999999899e-05, 8.28330000000009e-05, 8.318099999999815e-05, 8.248599999999967e-05, 8.232000000000031e-05, 8.312499999999987e-05]</msg>
<status status="PASS" starttime="20201030 18:29:33.623" endtime="20201030 18:29:33.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.618" endtime="20201030 18:29:33.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:33.630" endtime="20201030 18:29:33.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.629" endtime="20201030 18:29:33.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.628" endtime="20201030 18:29:33.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.265" endtime="20201030 18:29:33.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.264" endtime="20201030 18:29:33.651"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.660" endtime="20201030 18:29:33.680"></status>
</kw>
<msg timestamp="20201030 18:29:33.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.658" endtime="20201030 18:29:33.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.681" endtime="20201030 18:29:33.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.684" endtime="20201030 18:29:33.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.655" endtime="20201030 18:29:33.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.653" endtime="20201030 18:29:33.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.693" endtime="20201030 18:29:33.978"></status>
</kw>
<msg timestamp="20201030 18:29:33.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.691" endtime="20201030 18:29:33.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.983" endtime="20201030 18:29:33.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.991" endtime="20201030 18:29:33.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.688" endtime="20201030 18:29:33.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.687" endtime="20201030 18:29:33.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:33.997" level="INFO">${RESULT} = [{'diff': 8.352699999999991e-05}, {'diff': 8.377799999999963e-05}, {'diff': 8.39859999999977e-05}, {'diff': 8.359700000000123e-05}, {'diff': 8.33330000000014e-05}, {'diff': 8.350000000000024e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:33.994" endtime="20201030 18:29:33.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:34.003" level="INFO">${ACCURACY} = {'diff': [8.352699999999991e-05, 8.377799999999963e-05, 8.39859999999977e-05, 8.359700000000123e-05, 8.33330000000014e-05, 8.350000000000024e-05, 8.409700000000173e-05, 8.41110000000013e-05, 8.3763000...</msg>
<status status="PASS" starttime="20201030 18:29:33.999" endtime="20201030 18:29:34.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.007" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:29:34.006" endtime="20201030 18:29:34.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.010" level="INFO">VALUE: [8.352699999999991e-05, 8.377799999999963e-05, 8.39859999999977e-05, 8.359700000000123e-05, 8.33330000000014e-05, 8.350000000000024e-05, 8.409700000000173e-05, 8.41110000000013e-05, 8.376300000000059e-05, 8.420900000000175e-05, 8.394499999999847e-05, 8.36110000000008e-05, 8.401400000000031e-05, 8.398600000000117e-05, 8.401300000000084e-05, 8.33330000000014e-05, 8.329099999999923e-05, 8.351399999999981e-05, 8.357000000000156e-05, 8.326399999999956e-05, 8.390299999999976e-05, 8.409700000000173e-05, 8.334700000000098e-05, 8.333399999999741e-05, 8.355600000000199e-05, 8.416699999999958e-05, 8.398600000000117e-05, 8.334800000000045e-05, 8.329099999999923e-05, 8.345799999999806e-05, 8.372200000000135e-05, 8.370800000000178e-05, 8.363899999999994e-05, 8.390299999999976e-05, 8.326400000000303e-05, 8.344399999999849e-05, 8.336100000000055e-05, 8.338900000000316e-05, 8.338899999999969e-05, 8.326400000000303e-05, 8.391699999999933e-05, 8.333400000000088e-05, 8.361099999999733e-05, 8.401400000000031e-05, 8.358400000000113e-05, 8.38330000000019e-05, 8.326399999999956e-05, 8.34720000000011e-05, 8.363899999999994e-05, 8.326399999999956e-05]</msg>
<status status="PASS" starttime="20201030 18:29:34.008" endtime="20201030 18:29:34.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.004" endtime="20201030 18:29:34.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:34.015" endtime="20201030 18:29:34.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.013" endtime="20201030 18:29:34.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.012" endtime="20201030 18:29:34.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.652" endtime="20201030 18:29:34.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.651" endtime="20201030 18:29:34.037"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.046" endtime="20201030 18:29:34.066"></status>
</kw>
<msg timestamp="20201030 18:29:34.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.044" endtime="20201030 18:29:34.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.068" endtime="20201030 18:29:34.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.070" endtime="20201030 18:29:34.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.042" endtime="20201030 18:29:34.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.039" endtime="20201030 18:29:34.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.079" endtime="20201030 18:29:34.365"></status>
</kw>
<msg timestamp="20201030 18:29:34.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02067675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020760944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:34.078" endtime="20201030 18:29:34.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02067675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020760944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:34.369" endtime="20201030 18:29:34.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.378" endtime="20201030 18:29:34.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.075" endtime="20201030 18:29:34.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.073" endtime="20201030 18:29:34.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:34.384" level="INFO">${RESULT} = [{'diff': 8.419399999999924e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.497199999999913e-05}, {'diff': 8.480499999999683e-05}, {'diff': 8.459700000000223e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:34.381" endtime="20201030 18:29:34.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:34.388" level="INFO">${ACCURACY} = {'diff': [8.419399999999924e-05, 8.433299999999894e-05, 8.433299999999894e-05, 8.497199999999913e-05, 8.480499999999683e-05, 8.459700000000223e-05, 8.495799999999956e-05, 8.494499999999947e-05, 8.4235...</msg>
<status status="PASS" starttime="20201030 18:29:34.385" endtime="20201030 18:29:34.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.393" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:29:34.392" endtime="20201030 18:29:34.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.395" level="INFO">VALUE: [8.419399999999924e-05, 8.433299999999894e-05, 8.433299999999894e-05, 8.497199999999913e-05, 8.480499999999683e-05, 8.459700000000223e-05, 8.495799999999956e-05, 8.494499999999947e-05, 8.423599999999795e-05, 8.432000000000231e-05, 8.498700000000164e-05, 8.476400000000106e-05, 8.507000000000306e-05, 8.470799999999931e-05, 8.476300000000159e-05, 8.524999999999852e-05, 8.522199999999938e-05, 8.495799999999956e-05, 8.5153000000001e-05, 8.504200000000045e-05, 8.498600000000217e-05, 8.519400000000024e-05, 8.437500000000112e-05, 8.426400000000056e-05, 8.508399999999916e-05, 8.440299999999679e-05, 8.438900000000069e-05, 8.436099999999808e-05, 8.442999999999992e-05, 8.451300000000134e-05, 8.46530000000005e-05, 8.46660000000006e-05, 8.458299999999919e-05, 8.444399999999949e-05, 8.42919999999997e-05, 8.436100000000155e-05, 8.509699999999926e-05, 8.469499999999922e-05, 8.501399999999784e-05, 8.501400000000131e-05, 8.506999999999959e-05, 8.441699999999983e-05, 8.457000000000256e-05, 8.483299999999944e-05, 8.508299999999969e-05, 8.459699999999876e-05, 8.508299999999969e-05, 8.487500000000162e-05, 8.490299999999729e-05, 8.494399999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:29:34.394" endtime="20201030 18:29:34.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.389" endtime="20201030 18:29:34.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:34.401" endtime="20201030 18:29:34.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.399" endtime="20201030 18:29:34.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.398" endtime="20201030 18:29:34.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.037" endtime="20201030 18:29:34.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.037" endtime="20201030 18:29:34.424"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.443" endtime="20201030 18:29:34.469"></status>
</kw>
<msg timestamp="20201030 18:29:34.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.440" endtime="20201030 18:29:34.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.472" endtime="20201030 18:29:34.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.478" endtime="20201030 18:29:34.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.434" endtime="20201030 18:29:34.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.430" endtime="20201030 18:29:34.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.497" endtime="20201030 18:29:34.787"></status>
</kw>
<msg timestamp="20201030 18:29:34.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035356, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035441569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:34.494" endtime="20201030 18:29:34.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035356, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035441569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:34.792" endtime="20201030 18:29:34.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.800" endtime="20201030 18:29:34.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.488" endtime="20201030 18:29:34.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.484" endtime="20201030 18:29:34.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:34.807" level="INFO">${RESULT} = [{'diff': 8.556900000000062e-05}, {'diff': 8.547199999999616e-05}, {'diff': 8.572199999999641e-05}, {'diff': 8.545800000000353e-05}, {'diff': 8.56669999999976e-05}, {'diff': 8.563899999999847e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:34.804" endtime="20201030 18:29:34.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:34.811" level="INFO">${ACCURACY} = {'diff': [8.556900000000062e-05, 8.547199999999616e-05, 8.572199999999641e-05, 8.545800000000353e-05, 8.56669999999976e-05, 8.563899999999847e-05, 8.602800000000188e-05, 8.5459000000003e-05, 8.5833999...</msg>
<status status="PASS" starttime="20201030 18:29:34.808" endtime="20201030 18:29:34.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.816" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:29:34.815" endtime="20201030 18:29:34.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.818" level="INFO">VALUE: [8.556900000000062e-05, 8.547199999999616e-05, 8.572199999999641e-05, 8.545800000000353e-05, 8.56669999999976e-05, 8.563899999999847e-05, 8.602800000000188e-05, 8.5459000000003e-05, 8.583399999999991e-05, 8.623600000000342e-05, 8.586099999999958e-05, 8.526399999999462e-05, 8.576399999999512e-05, 8.545899999999607e-05, 8.538799999999874e-05, 8.561099999999933e-05, 8.620799999999734e-05, 8.554200000000095e-05, 8.583300000000044e-05, 8.570799999999684e-05, 8.523599999999548e-05, 8.611099999999983e-05, 8.569499999999675e-05, 8.536099999999908e-05, 8.534799999999898e-05, 8.5944999999997e-05, 8.552700000000191e-05, 8.619399999999777e-05, 8.611099999999983e-05, 8.576400000000206e-05, 8.570800000000378e-05, 8.538899999999822e-05, 8.540300000000473e-05, 8.566700000000455e-05, 8.600000000000274e-05, 8.608299999999375e-05, 8.622199999999691e-05, 8.531999999999984e-05, 8.526399999999462e-05, 8.620899999999682e-05, 8.570899999999632e-05, 8.602800000000188e-05, 8.557000000000009e-05, 8.615199999999906e-05, 8.559699999999976e-05, 8.53050000000008e-05, 8.538900000000516e-05, 8.570800000000378e-05, 8.575000000000249e-05, 8.56390000000054e-05]</msg>
<status status="PASS" starttime="20201030 18:29:34.817" endtime="20201030 18:29:34.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.812" endtime="20201030 18:29:34.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:34.824" endtime="20201030 18:29:34.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.823" endtime="20201030 18:29:34.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.822" endtime="20201030 18:29:34.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.426" endtime="20201030 18:29:34.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.425" endtime="20201030 18:29:34.845"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.854" endtime="20201030 18:29:34.874"></status>
</kw>
<msg timestamp="20201030 18:29:34.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.853" endtime="20201030 18:29:34.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.876" endtime="20201030 18:29:34.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.878" endtime="20201030 18:29:34.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.850" endtime="20201030 18:29:34.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.848" endtime="20201030 18:29:34.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.888" endtime="20201030 18:29:35.174"></status>
</kw>
<msg timestamp="20201030 18:29:35.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020268556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020355542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.886" endtime="20201030 18:29:35.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020268556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020355542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.179" endtime="20201030 18:29:35.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.187" endtime="20201030 18:29:35.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.883" endtime="20201030 18:29:35.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.882" endtime="20201030 18:29:35.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:35.194" level="INFO">${RESULT} = [{'diff': 8.69860000000007e-05}, {'diff': 8.719500000000172e-05}, {'diff': 8.687500000000015e-05}, {'diff': 8.627700000000266e-05}, {'diff': 8.641600000000235e-05}, {'diff': 8.715299999999954e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:35.190" endtime="20201030 18:29:35.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:35.199" level="INFO">${ACCURACY} = {'diff': [8.69860000000007e-05, 8.719500000000172e-05, 8.687500000000015e-05, 8.627700000000266e-05, 8.641600000000235e-05, 8.715299999999954e-05, 8.672200000000088e-05, 8.711100000000083e-05, 8.64440...</msg>
<status status="PASS" starttime="20201030 18:29:35.195" endtime="20201030 18:29:35.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.204" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:29:35.203" endtime="20201030 18:29:35.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.206" level="INFO">VALUE: [8.69860000000007e-05, 8.719500000000172e-05, 8.687500000000015e-05, 8.627700000000266e-05, 8.641600000000235e-05, 8.715299999999954e-05, 8.672200000000088e-05, 8.711100000000083e-05, 8.644400000000149e-05, 8.690299999999929e-05, 8.645799999999759e-05, 8.62920000000017e-05, 8.701399999999984e-05, 8.709800000000073e-05, 8.68059999999983e-05, 8.640300000000226e-05, 8.640200000000278e-05, 8.668099999999818e-05, 8.691699999999886e-05, 8.6847000000001e-05, 8.715299999999954e-05, 8.663899999999947e-05, 8.704199999999898e-05, 8.626399999999909e-05, 8.69860000000007e-05, 8.71250000000004e-05, 8.675000000000002e-05, 8.633400000000041e-05, 8.670799999999784e-05, 8.677799999999916e-05, 8.627800000000213e-05, 8.666599999999913e-05, 8.691599999999938e-05, 8.631999999999737e-05, 8.647200000000063e-05, 8.668000000000217e-05, 8.640299999999879e-05, 8.624999999999952e-05, 8.640299999999879e-05, 8.708300000000169e-05, 8.633299999999747e-05, 8.631900000000137e-05, 8.672200000000088e-05, 8.63470000000005e-05, 8.627799999999866e-05, 8.64310000000014e-05, 8.640299999999879e-05, 8.630499999999833e-05, 8.647200000000063e-05, 8.644399999999802e-05]</msg>
<status status="PASS" starttime="20201030 18:29:35.205" endtime="20201030 18:29:35.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.200" endtime="20201030 18:29:35.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:35.211" endtime="20201030 18:29:35.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.210" endtime="20201030 18:29:35.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.209" endtime="20201030 18:29:35.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.846" endtime="20201030 18:29:35.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.846" endtime="20201030 18:29:35.232"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.241" endtime="20201030 18:29:35.261"></status>
</kw>
<msg timestamp="20201030 18:29:35.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.240" endtime="20201030 18:29:35.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.262" endtime="20201030 18:29:35.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.265" endtime="20201030 18:29:35.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.237" endtime="20201030 18:29:35.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.235" endtime="20201030 18:29:35.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.274" endtime="20201030 18:29:35.561"></status>
</kw>
<msg timestamp="20201030 18:29:35.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020183542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.273" endtime="20201030 18:29:35.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020183542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.565" endtime="20201030 18:29:35.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.574" endtime="20201030 18:29:35.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.270" endtime="20201030 18:29:35.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.268" endtime="20201030 18:29:35.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:35.581" level="INFO">${RESULT} = [{'diff': 8.736100000000108e-05}, {'diff': 8.822299999999839e-05}, {'diff': 8.737500000000065e-05}, {'diff': 8.763900000000047e-05}, {'diff': 8.74999999999973e-05}, {'diff': 8.813800000000149e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:35.577" endtime="20201030 18:29:35.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:35.585" level="INFO">${ACCURACY} = {'diff': [8.736100000000108e-05, 8.822299999999839e-05, 8.737500000000065e-05, 8.763900000000047e-05, 8.74999999999973e-05, 8.813800000000149e-05, 8.801400000000084e-05, 8.73470000000015e-05, 8.792999...</msg>
<status status="PASS" starttime="20201030 18:29:35.582" endtime="20201030 18:29:35.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.590" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:29:35.589" endtime="20201030 18:29:35.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.593" level="INFO">VALUE: [8.736100000000108e-05, 8.822299999999839e-05, 8.737500000000065e-05, 8.763900000000047e-05, 8.74999999999973e-05, 8.813800000000149e-05, 8.801400000000084e-05, 8.73470000000015e-05, 8.792999999999995e-05, 8.770800000000231e-05, 8.81250000000014e-05, 8.783299999999897e-05, 8.823599999999848e-05, 8.737500000000065e-05, 8.761100000000133e-05, 8.823599999999848e-05, 8.726400000000009e-05, 8.818099999999968e-05, 8.758399999999819e-05, 8.790199999999734e-05, 8.820800000000281e-05, 8.81250000000014e-05, 8.795799999999909e-05, 8.726400000000009e-05, 8.811099999999836e-05, 8.729199999999923e-05, 8.783400000000191e-05, 8.727799999999966e-05, 8.751400000000034e-05, 8.768100000000265e-05, 8.784800000000148e-05, 8.779100000000026e-05, 8.755499999999958e-05, 8.769399999999927e-05, 8.822199999999891e-05, 8.791599999999691e-05, 8.794400000000299e-05, 8.813900000000097e-05, 8.777799999999669e-05, 8.791699999999986e-05, 8.800000000000127e-05, 8.808300000000269e-05, 8.819499999999925e-05, 8.733399999999794e-05, 8.758400000000166e-05, 8.811100000000183e-05, 8.813900000000097e-05, 8.7944999999999e-05, 8.813799999999802e-05, 8.791699999999986e-05]</msg>
<status status="PASS" starttime="20201030 18:29:35.591" endtime="20201030 18:29:35.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.586" endtime="20201030 18:29:35.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:35.599" endtime="20201030 18:29:35.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.597" endtime="20201030 18:29:35.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.596" endtime="20201030 18:29:35.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.233" endtime="20201030 18:29:35.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.233" endtime="20201030 18:29:35.620"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.629" endtime="20201030 18:29:35.650"></status>
</kw>
<msg timestamp="20201030 18:29:35.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.627" endtime="20201030 18:29:35.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.651" endtime="20201030 18:29:35.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.654" endtime="20201030 18:29:35.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.625" endtime="20201030 18:29:35.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.622" endtime="20201030 18:29:35.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.663" endtime="20201030 18:29:35.949"></status>
</kw>
<msg timestamp="20201030 18:29:35.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021234792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021323819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.662" endtime="20201030 18:29:35.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021234792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021323819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.954" endtime="20201030 18:29:35.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.962" endtime="20201030 18:29:35.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.659" endtime="20201030 18:29:35.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.657" endtime="20201030 18:29:35.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:35.969" level="INFO">${RESULT} = [{'diff': 8.902700000000194e-05}, {'diff': 8.830500000000033e-05}, {'diff': 8.906900000000065e-05}, {'diff': 8.897199999999966e-05}, {'diff': 8.851399999999787e-05}, {'diff': 8.877799999999769e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:35.966" endtime="20201030 18:29:35.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:35.973" level="INFO">${ACCURACY} = {'diff': [8.902700000000194e-05, 8.830500000000033e-05, 8.906900000000065e-05, 8.897199999999966e-05, 8.851399999999787e-05, 8.877799999999769e-05, 8.852800000000091e-05, 8.883299999999997e-05, 8.9153...</msg>
<status status="PASS" starttime="20201030 18:29:35.970" endtime="20201030 18:29:35.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.978" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:29:35.977" endtime="20201030 18:29:35.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.981" level="INFO">VALUE: [8.902700000000194e-05, 8.830500000000033e-05, 8.906900000000065e-05, 8.897199999999966e-05, 8.851399999999787e-05, 8.877799999999769e-05, 8.852800000000091e-05, 8.883299999999997e-05, 8.915300000000154e-05, 8.876400000000159e-05, 8.877799999999769e-05, 8.870899999999932e-05, 8.920899999999982e-05, 8.907000000000012e-05, 8.907000000000012e-05, 8.829100000000076e-05, 8.856900000000015e-05, 8.913900000000197e-05, 8.826400000000109e-05, 8.863900000000147e-05, 8.89999999999988e-05, 8.847199999999916e-05, 8.901399999999837e-05, 8.925000000000252e-05, 8.874999999999855e-05, 8.838899999999775e-05, 8.920900000000329e-05, 8.826400000000109e-05, 8.916699999999764e-05, 8.866599999999766e-05, 8.895800000000009e-05, 8.845799999999959e-05, 8.898599999999923e-05, 8.88190000000004e-05, 8.908300000000022e-05, 8.906900000000065e-05, 8.847199999999916e-05, 8.888899999999825e-05, 8.907000000000012e-05, 8.908299999999675e-05, 8.895899999999957e-05, 8.913900000000197e-05, 8.833299999999947e-05, 8.86519999999981e-05, 8.877699999999822e-05, 8.91800000000012e-05, 8.91670000000011e-05, 8.879200000000073e-05, 8.833299999999947e-05, 8.865300000000104e-05]</msg>
<status status="PASS" starttime="20201030 18:29:35.979" endtime="20201030 18:29:35.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.974" endtime="20201030 18:29:35.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:35.987" endtime="20201030 18:29:36.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.985" endtime="20201030 18:29:36.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.984" endtime="20201030 18:29:36.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.621" endtime="20201030 18:29:36.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.620" endtime="20201030 18:29:36.007"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.017" endtime="20201030 18:29:36.036"></status>
</kw>
<msg timestamp="20201030 18:29:36.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.015" endtime="20201030 18:29:36.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.038" endtime="20201030 18:29:36.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.041" endtime="20201030 18:29:36.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.012" endtime="20201030 18:29:36.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.010" endtime="20201030 18:29:36.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.050" endtime="20201030 18:29:36.336"></status>
</kw>
<msg timestamp="20201030 18:29:36.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020302667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.048" endtime="20201030 18:29:36.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020302667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.340" endtime="20201030 18:29:36.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.349" endtime="20201030 18:29:36.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.046" endtime="20201030 18:29:36.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.044" endtime="20201030 18:29:36.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:36.355" level="INFO">${RESULT} = [{'diff': 8.954099999999854e-05}, {'diff': 9.002699999999947e-05}, {'diff': 8.973599999999998e-05}, {'diff': 8.934700000000004e-05}, {'diff': 8.983300000000097e-05}, {'diff': 9.001399999999937e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:36.352" endtime="20201030 18:29:36.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:36.360" level="INFO">${ACCURACY} = {'diff': [8.954099999999854e-05, 9.002699999999947e-05, 8.973599999999998e-05, 8.934700000000004e-05, 8.983300000000097e-05, 9.001399999999937e-05, 8.9638999999999e-05, 8.954200000000148e-05, 8.993099...</msg>
<status status="PASS" starttime="20201030 18:29:36.356" endtime="20201030 18:29:36.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.365" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:29:36.364" endtime="20201030 18:29:36.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.368" level="INFO">VALUE: [8.954099999999854e-05, 9.002699999999947e-05, 8.973599999999998e-05, 8.934700000000004e-05, 8.983300000000097e-05, 9.001399999999937e-05, 8.9638999999999e-05, 8.954200000000148e-05, 8.993099999999796e-05, 9.001399999999937e-05, 8.937499999999918e-05, 8.983400000000044e-05, 9.006999999999765e-05, 8.940199999999884e-05, 9.020799999999787e-05, 8.983300000000097e-05, 9.009700000000079e-05, 8.956899999999768e-05, 9.009700000000079e-05, 8.932000000000037e-05, 8.961199999999933e-05, 8.938900000000222e-05, 8.98190000000014e-05, 8.976399999999912e-05, 9.012499999999993e-05, 8.938899999999875e-05, 8.994399999999805e-05, 8.99999999999998e-05, 8.962499999999943e-05, 8.9638999999999e-05, 8.926399999999862e-05, 9.005500000000208e-05, 8.969400000000127e-05, 8.976399999999912e-05, 8.983300000000097e-05, 9.01389999999995e-05, 8.956999999999715e-05, 8.930500000000133e-05, 8.926399999999862e-05, 8.940300000000179e-05, 8.933399999999994e-05, 8.969500000000075e-05, 8.986100000000011e-05, 8.951399999999887e-05, 8.934700000000004e-05, 8.94999999999993e-05, 8.929200000000123e-05, 8.997200000000066e-05, 9.01389999999995e-05, 8.933300000000047e-05]</msg>
<status status="PASS" starttime="20201030 18:29:36.366" endtime="20201030 18:29:36.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.361" endtime="20201030 18:29:36.369"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:36.373" endtime="20201030 18:29:36.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.371" endtime="20201030 18:29:36.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.370" endtime="20201030 18:29:36.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.008" endtime="20201030 18:29:36.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.008" endtime="20201030 18:29:36.394"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.403" endtime="20201030 18:29:36.423"></status>
</kw>
<msg timestamp="20201030 18:29:36.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.401" endtime="20201030 18:29:36.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.425" endtime="20201030 18:29:36.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.427" endtime="20201030 18:29:36.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.398" endtime="20201030 18:29:36.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.396" endtime="20201030 18:29:36.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.436" endtime="20201030 18:29:36.724"></status>
</kw>
<msg timestamp="20201030 18:29:36.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020168569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.435" endtime="20201030 18:29:36.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020168569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.728" endtime="20201030 18:29:36.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.737" endtime="20201030 18:29:36.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.432" endtime="20201030 18:29:36.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.430" endtime="20201030 18:29:36.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:36.743" level="INFO">${RESULT} = [{'diff': 9.038899999999975e-05}, {'diff': 9.038899999999975e-05}, {'diff': 9.03190000000019e-05}, {'diff': 9.08199999999984e-05}, {'diff': 9.094399999999905e-05}, {'diff': 9.081899999999893e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:36.740" endtime="20201030 18:29:36.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:36.748" level="INFO">${ACCURACY} = {'diff': [9.038899999999975e-05, 9.038899999999975e-05, 9.03190000000019e-05, 9.08199999999984e-05, 9.094399999999905e-05, 9.081899999999893e-05, 9.097199999999819e-05, 9.044499999999803e-05, 9.043100...</msg>
<status status="PASS" starttime="20201030 18:29:36.744" endtime="20201030 18:29:36.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.752" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:29:36.751" endtime="20201030 18:29:36.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.755" level="INFO">VALUE: [9.038899999999975e-05, 9.038899999999975e-05, 9.03190000000019e-05, 9.08199999999984e-05, 9.094399999999905e-05, 9.081899999999893e-05, 9.097199999999819e-05, 9.044499999999803e-05, 9.043100000000193e-05, 9.056999999999815e-05, 9.09589999999981e-05, 9.04450000000015e-05, 9.072200000000141e-05, 9.084699999999807e-05, 9.051399999999987e-05, 9.051399999999987e-05, 9.070800000000184e-05, 9.119400000000277e-05, 9.027799999999919e-05, 9.107000000000212e-05, 9.04450000000015e-05, 9.052799999999944e-05, 9.040299999999932e-05, 9.108399999999822e-05, 9.052799999999944e-05, 9.023699999999996e-05, 9.051299999999693e-05, 9.095799999999862e-05, 9.112499999999746e-05, 9.0639e-05, 9.084699999999807e-05, 9.058300000000172e-05, 9.058300000000172e-05, 9.048600000000073e-05, 9.088899999999678e-05, 9.119499999999878e-05, 9.097199999999819e-05, 9.122300000000139e-05, 9.040199999999984e-05, 9.051399999999987e-05, 9.03190000000019e-05, 9.090200000000034e-05, 9.108299999999875e-05, 9.090299999999982e-05, 9.084699999999807e-05, 9.041700000000236e-05, 9.027799999999919e-05, 9.048600000000073e-05, 9.095799999999862e-05, 9.108400000000169e-05]</msg>
<status status="PASS" starttime="20201030 18:29:36.754" endtime="20201030 18:29:36.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.749" endtime="20201030 18:29:36.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:36.760" endtime="20201030 18:29:36.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.759" endtime="20201030 18:29:36.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.757" endtime="20201030 18:29:36.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.394" endtime="20201030 18:29:36.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.394" endtime="20201030 18:29:36.781"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.790" endtime="20201030 18:29:36.813"></status>
</kw>
<msg timestamp="20201030 18:29:36.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.788" endtime="20201030 18:29:36.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.815" endtime="20201030 18:29:36.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.817" endtime="20201030 18:29:36.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.786" endtime="20201030 18:29:36.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.784" endtime="20201030 18:29:36.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.827" endtime="20201030 18:29:37.112"></status>
</kw>
<msg timestamp="20201030 18:29:37.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023584847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023676764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.825" endtime="20201030 18:29:37.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023584847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023676764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.116" endtime="20201030 18:29:37.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.125" endtime="20201030 18:29:37.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.823" endtime="20201030 18:29:37.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.821" endtime="20201030 18:29:37.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:37.131" level="INFO">${RESULT} = [{'diff': 9.191700000000039e-05}, {'diff': 9.201400000000137e-05}, {'diff': 9.166700000000014e-05}, {'diff': 9.145900000000207e-05}, {'diff': 9.176400000000112e-05}, {'diff': 9.202799999999747e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:37.128" endtime="20201030 18:29:37.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:37.136" level="INFO">${ACCURACY} = {'diff': [9.191700000000039e-05, 9.201400000000137e-05, 9.166700000000014e-05, 9.145900000000207e-05, 9.176400000000112e-05, 9.202799999999747e-05, 9.194400000000005e-05, 9.152700000000097e-05, 9.2139...</msg>
<status status="PASS" starttime="20201030 18:29:37.132" endtime="20201030 18:29:37.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.140" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:29:37.139" endtime="20201030 18:29:37.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.143" level="INFO">VALUE: [9.191700000000039e-05, 9.201400000000137e-05, 9.166700000000014e-05, 9.145900000000207e-05, 9.176400000000112e-05, 9.202799999999747e-05, 9.194400000000005e-05, 9.152700000000097e-05, 9.21390000000015e-05, 9.16529999999971e-05, 9.134700000000204e-05, 9.188900000000125e-05, 9.205600000000008e-05, 9.156999999999915e-05, 9.13199999999989e-05, 9.184800000000201e-05, 9.14450000000025e-05, 9.161099999999839e-05, 9.209699999999932e-05, 9.213800000000202e-05, 9.184699999999907e-05, 9.137500000000118e-05, 9.188900000000125e-05, 9.212500000000193e-05, 9.220799999999987e-05, 9.181899999999993e-05, 9.176399999999765e-05, 9.130599999999933e-05, 9.152800000000044e-05, 9.202800000000094e-05, 9.19589999999991e-05, 9.199999999999833e-05, 9.220899999999935e-05, 9.220799999999987e-05, 9.187500000000168e-05, 9.172199999999894e-05, 9.127800000000019e-05, 9.187499999999821e-05, 9.154200000000001e-05, 9.202800000000094e-05, 9.136099999999814e-05, 9.16529999999971e-05, 9.148600000000173e-05, 9.137500000000118e-05, 9.133399999999847e-05, 9.151400000000087e-05, 9.188900000000125e-05, 9.158400000000219e-05, 9.156899999999968e-05, 9.216600000000116e-05]</msg>
<status status="PASS" starttime="20201030 18:29:37.141" endtime="20201030 18:29:37.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.137" endtime="20201030 18:29:37.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:37.194" endtime="20201030 18:29:37.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.192" endtime="20201030 18:29:37.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.191" endtime="20201030 18:29:37.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.782" endtime="20201030 18:29:37.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.781" endtime="20201030 18:29:37.215"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.224" endtime="20201030 18:29:37.244"></status>
</kw>
<msg timestamp="20201030 18:29:37.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.222" endtime="20201030 18:29:37.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.246" endtime="20201030 18:29:37.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.249" endtime="20201030 18:29:37.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.219" endtime="20201030 18:29:37.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.217" endtime="20201030 18:29:37.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.259" endtime="20201030 18:29:37.544"></status>
</kw>
<msg timestamp="20201030 18:29:37.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.257" endtime="20201030 18:29:37.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.549" endtime="20201030 18:29:37.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.557" endtime="20201030 18:29:37.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.254" endtime="20201030 18:29:37.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.253" endtime="20201030 18:29:37.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:37.565" level="INFO">${RESULT} = [{'diff': 9.255500000000111e-05}, {'diff': 9.238899999999828e-05}, {'diff': 9.245800000000012e-05}, {'diff': 9.299999999999933e-05}, {'diff': 9.284700000000007e-05}, {'diff': 9.30139999999989e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:37.561" endtime="20201030 18:29:37.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:37.569" level="INFO">${ACCURACY} = {'diff': [9.255500000000111e-05, 9.238899999999828e-05, 9.245800000000012e-05, 9.299999999999933e-05, 9.284700000000007e-05, 9.30139999999989e-05, 9.243099999999699e-05, 9.299999999999933e-05, 9.23190...</msg>
<status status="PASS" starttime="20201030 18:29:37.566" endtime="20201030 18:29:37.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.573" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:29:37.572" endtime="20201030 18:29:37.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.576" level="INFO">VALUE: [9.255500000000111e-05, 9.238899999999828e-05, 9.245800000000012e-05, 9.299999999999933e-05, 9.284700000000007e-05, 9.30139999999989e-05, 9.243099999999699e-05, 9.299999999999933e-05, 9.231900000000043e-05, 9.277799999999822e-05, 9.272199999999994e-05, 9.304199999999804e-05, 9.247299999999917e-05, 9.309799999999979e-05, 9.280599999999736e-05, 9.252799999999797e-05, 9.26659999999982e-05, 9.322200000000044e-05, 9.309700000000032e-05, 9.308300000000075e-05, 9.277799999999822e-05, 9.26529999999981e-05, 9.270800000000037e-05, 9.2333e-05, 9.322200000000044e-05, 9.283399999999997e-05, 9.270899999999985e-05, 9.290300000000182e-05, 9.261099999999939e-05, 9.29720000000002e-05, 9.225000000000205e-05, 9.24719999999997e-05, 9.231900000000043e-05, 9.25139999999984e-05, 9.318099999999774e-05, 9.262499999999896e-05, 9.273599999999951e-05, 9.277799999999822e-05, 9.309700000000032e-05, 9.302799999999847e-05, 9.257000000000015e-05, 9.261099999999939e-05, 9.266700000000114e-05, 9.320800000000087e-05, 9.28330000000005e-05, 9.277700000000222e-05, 9.224999999999858e-05, 9.24719999999997e-05, 9.243099999999699e-05, 9.309700000000032e-05]</msg>
<status status="PASS" starttime="20201030 18:29:37.575" endtime="20201030 18:29:37.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.570" endtime="20201030 18:29:37.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:37.587" endtime="20201030 18:29:37.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.586" endtime="20201030 18:29:37.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.585" endtime="20201030 18:29:37.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.215" endtime="20201030 18:29:37.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.215" endtime="20201030 18:29:37.608"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.618" endtime="20201030 18:29:37.639"></status>
</kw>
<msg timestamp="20201030 18:29:37.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.616" endtime="20201030 18:29:37.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.640" endtime="20201030 18:29:37.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.643" endtime="20201030 18:29:37.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.613" endtime="20201030 18:29:37.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.611" endtime="20201030 18:29:37.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.653" endtime="20201030 18:29:37.938"></status>
</kw>
<msg timestamp="20201030 18:29:37.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02170275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:37.651" endtime="20201030 18:29:37.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02170275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:37.943" endtime="20201030 18:29:37.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.951" endtime="20201030 18:29:37.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.648" endtime="20201030 18:29:37.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.646" endtime="20201030 18:29:37.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:37.958" level="INFO">${RESULT} = [{'diff': 9.362499999999996e-05}, {'diff': 9.400000000000033e-05}, {'diff': 9.358300000000125e-05}, {'diff': 9.334700000000057e-05}, {'diff': 9.355599999999811e-05}, {'diff': 9.40139999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:37.955" endtime="20201030 18:29:37.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:37.962" level="INFO">${ACCURACY} = {'diff': [9.362499999999996e-05, 9.400000000000033e-05, 9.358300000000125e-05, 9.334700000000057e-05, 9.355599999999811e-05, 9.40139999999999e-05, 9.344400000000155e-05, 9.338899999999928e-05, 9.42090...</msg>
<status status="PASS" starttime="20201030 18:29:37.959" endtime="20201030 18:29:37.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.967" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:29:37.966" endtime="20201030 18:29:37.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.970" level="INFO">VALUE: [9.362499999999996e-05, 9.400000000000033e-05, 9.358300000000125e-05, 9.334700000000057e-05, 9.355599999999811e-05, 9.40139999999999e-05, 9.344400000000155e-05, 9.338899999999928e-05, 9.420900000000135e-05, 9.36659999999992e-05, 9.334700000000057e-05, 9.384700000000107e-05, 9.38330000000015e-05, 9.349999999999983e-05, 9.372200000000094e-05, 9.345799999999765e-05, 9.36529999999991e-05, 9.390300000000282e-05, 9.379199999999879e-05, 9.344500000000103e-05, 9.416699999999917e-05, 9.377799999999922e-05, 9.370800000000137e-05, 9.367999999999876e-05, 9.381900000000193e-05, 9.358299999999778e-05, 9.354199999999854e-05, 9.426400000000015e-05, 9.372200000000094e-05, 9.340299999999885e-05, 9.34720000000007e-05, 9.352800000000244e-05, 9.402799999999947e-05, 9.363899999999953e-05, 9.40139999999999e-05, 9.38880000000003e-05, 9.331900000000143e-05, 9.329099999999882e-05, 9.365300000000257e-05, 9.412500000000046e-05, 9.34720000000007e-05, 9.41529999999996e-05, 9.345799999999765e-05, 9.327800000000219e-05, 9.40139999999999e-05, 9.41659999999997e-05, 9.329199999999829e-05, 9.357000000000115e-05, 9.333400000000047e-05, 9.36659999999992e-05]</msg>
<status status="PASS" starttime="20201030 18:29:37.968" endtime="20201030 18:29:37.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.963" endtime="20201030 18:29:37.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:37.975" endtime="20201030 18:29:37.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.974" endtime="20201030 18:29:37.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.973" endtime="20201030 18:29:37.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.609" endtime="20201030 18:29:37.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.609" endtime="20201030 18:29:37.996"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.005" endtime="20201030 18:29:38.025"></status>
</kw>
<msg timestamp="20201030 18:29:38.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.004" endtime="20201030 18:29:38.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.027" endtime="20201030 18:29:38.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.029" endtime="20201030 18:29:38.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.001" endtime="20201030 18:29:38.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.999" endtime="20201030 18:29:38.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.039" endtime="20201030 18:29:38.325"></status>
</kw>
<msg timestamp="20201030 18:29:38.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020347083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.037" endtime="20201030 18:29:38.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020347083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.329" endtime="20201030 18:29:38.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.338" endtime="20201030 18:29:38.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.034" endtime="20201030 18:29:38.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.033" endtime="20201030 18:29:38.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:38.345" level="INFO">${RESULT} = [{'diff': 9.427800000000319e-05}, {'diff': 9.488900000000078e-05}, {'diff': 9.475000000000108e-05}, {'diff': 9.480499999999989e-05}, {'diff': 9.494499999999906e-05}, {'diff': 9.468099999999924e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:38.341" endtime="20201030 18:29:38.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:38.350" level="INFO">${ACCURACY} = {'diff': [9.427800000000319e-05, 9.488900000000078e-05, 9.475000000000108e-05, 9.480499999999989e-05, 9.494499999999906e-05, 9.468099999999924e-05, 9.425000000000058e-05, 9.506899999999971e-05, 9.5028...</msg>
<status status="PASS" starttime="20201030 18:29:38.346" endtime="20201030 18:29:38.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.354" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:29:38.353" endtime="20201030 18:29:38.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.357" level="INFO">VALUE: [9.427800000000319e-05, 9.488900000000078e-05, 9.475000000000108e-05, 9.480499999999989e-05, 9.494499999999906e-05, 9.468099999999924e-05, 9.425000000000058e-05, 9.506899999999971e-05, 9.502800000000047e-05, 9.451299999999746e-05, 9.495899999999863e-05, 9.52079999999994e-05, 9.488900000000078e-05, 9.51660000000007e-05, 9.488899999999731e-05, 9.470800000000237e-05, 9.431899999999896e-05, 9.495800000000262e-05, 9.499999999999786e-05, 9.519499999999931e-05, 9.463900000000053e-05, 9.46530000000001e-05, 9.44590000000016e-05, 9.515199999999766e-05, 9.46940000000028e-05, 9.488900000000078e-05, 9.470800000000237e-05, 9.459699999999835e-05, 9.469500000000228e-05, 9.429200000000276e-05, 9.454199999999954e-05, 9.472300000000142e-05, 9.458400000000172e-05, 9.488899999999731e-05, 9.519500000000278e-05, 9.522300000000192e-05, 9.48339999999985e-05, 9.494399999999958e-05, 9.454100000000007e-05, 9.455599999999911e-05, 9.470800000000237e-05, 9.486100000000164e-05, 9.518000000000026e-05, 9.494399999999958e-05, 9.477800000000022e-05, 9.488900000000078e-05, 9.519499999999931e-05, 9.440299999999985e-05, 9.508399999999875e-05, 9.430599999999886e-05]</msg>
<status status="PASS" starttime="20201030 18:29:38.355" endtime="20201030 18:29:38.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.351" endtime="20201030 18:29:38.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:38.362" endtime="20201030 18:29:38.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.360" endtime="20201030 18:29:38.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.359" endtime="20201030 18:29:38.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.997" endtime="20201030 18:29:38.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.996" endtime="20201030 18:29:38.383"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.392" endtime="20201030 18:29:38.413"></status>
</kw>
<msg timestamp="20201030 18:29:38.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.390" endtime="20201030 18:29:38.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.415" endtime="20201030 18:29:38.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.417" endtime="20201030 18:29:38.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.387" endtime="20201030 18:29:38.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.385" endtime="20201030 18:29:38.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.427" endtime="20201030 18:29:38.719"></status>
</kw>
<msg timestamp="20201030 18:29:38.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020186306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020282389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.425" endtime="20201030 18:29:38.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020186306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020282389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.726" endtime="20201030 18:29:38.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.742" endtime="20201030 18:29:38.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.422" endtime="20201030 18:29:38.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.421" endtime="20201030 18:29:38.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:38.758" level="INFO">${RESULT} = [{'diff': 9.608300000000028e-05}, {'diff': 9.594500000000006e-05}, {'diff': 9.590300000000135e-05}, {'diff': 9.620799999999693e-05}, {'diff': 9.594500000000006e-05}, {'diff': 9.607000000000018e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:38.751" endtime="20201030 18:29:38.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:38.767" level="INFO">${ACCURACY} = {'diff': [9.608300000000028e-05, 9.594500000000006e-05, 9.590300000000135e-05, 9.620799999999693e-05, 9.594500000000006e-05, 9.607000000000018e-05, 9.58339999999995e-05, 9.609699999999985e-05, 9.60690...</msg>
<status status="PASS" starttime="20201030 18:29:38.760" endtime="20201030 18:29:38.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.775" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:29:38.773" endtime="20201030 18:29:38.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.779" level="INFO">VALUE: [9.608300000000028e-05, 9.594500000000006e-05, 9.590300000000135e-05, 9.620799999999693e-05, 9.594500000000006e-05, 9.607000000000018e-05, 9.58339999999995e-05, 9.609699999999985e-05, 9.606900000000071e-05, 9.607000000000018e-05, 9.595800000000015e-05, 9.559699999999935e-05, 9.609699999999985e-05, 9.575000000000208e-05, 9.609699999999985e-05, 9.588899999999831e-05, 9.584800000000254e-05, 9.519499999999931e-05, 9.572199999999947e-05, 9.558299999999978e-05, 9.601399999999843e-05, 9.55409999999976e-05, 9.606900000000071e-05, 9.526400000000115e-05, 9.526399999999768e-05, 9.622199999999997e-05, 9.543099999999999e-05, 9.62080000000004e-05, 9.60140000000019e-05, 9.577799999999775e-05, 9.572300000000242e-05, 9.527800000000072e-05, 9.538900000000128e-05, 9.563900000000153e-05, 9.545799999999965e-05, 9.547199999999922e-05, 9.6027999999998e-05, 9.563899999999806e-05, 9.563900000000153e-05, 9.59720000000032e-05, 9.605600000000061e-05, 9.597199999999972e-05, 9.572299999999895e-05, 9.58339999999995e-05, 9.570899999999938e-05, 9.53469999999991e-05, 9.569399999999686e-05, 9.536199999999814e-05, 9.62080000000004e-05, 9.54720000000027e-05]</msg>
<status status="PASS" starttime="20201030 18:29:38.777" endtime="20201030 18:29:38.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.768" endtime="20201030 18:29:38.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:38.787" endtime="20201030 18:29:38.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.785" endtime="20201030 18:29:38.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.783" endtime="20201030 18:29:38.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.384" endtime="20201030 18:29:38.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.383" endtime="20201030 18:29:38.808"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.818" endtime="20201030 18:29:38.839"></status>
</kw>
<msg timestamp="20201030 18:29:38.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.816" endtime="20201030 18:29:38.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.841" endtime="20201030 18:29:38.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.843" endtime="20201030 18:29:38.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.813" endtime="20201030 18:29:38.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.811" endtime="20201030 18:29:38.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.852" endtime="20201030 18:29:39.137"></status>
</kw>
<msg timestamp="20201030 18:29:39.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021774264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021871361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.851" endtime="20201030 18:29:39.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021774264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021871361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.141" endtime="20201030 18:29:39.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.149" endtime="20201030 18:29:39.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.848" endtime="20201030 18:29:39.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.846" endtime="20201030 18:29:39.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:39.156" level="INFO">${RESULT} = [{'diff': 9.709699999999738e-05}, {'diff': 9.638899999999881e-05}, {'diff': 9.677799999999875e-05}, {'diff': 9.663899999999906e-05}, {'diff': 9.715299999999913e-05}, {'diff': 9.676399999999918e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:39.153" endtime="20201030 18:29:39.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:39.160" level="INFO">${ACCURACY} = {'diff': [9.709699999999738e-05, 9.638899999999881e-05, 9.677799999999875e-05, 9.663899999999906e-05, 9.715299999999913e-05, 9.676399999999918e-05, 9.708400000000075e-05, 9.713899999999956e-05, 9.7082...</msg>
<status status="PASS" starttime="20201030 18:29:39.157" endtime="20201030 18:29:39.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.165" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:29:39.163" endtime="20201030 18:29:39.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.168" level="INFO">VALUE: [9.709699999999738e-05, 9.638899999999881e-05, 9.677799999999875e-05, 9.663899999999906e-05, 9.715299999999913e-05, 9.676399999999918e-05, 9.708400000000075e-05, 9.713899999999956e-05, 9.708299999999781e-05, 9.681900000000146e-05, 9.711099999999695e-05, 9.698599999999682e-05, 9.644400000000108e-05, 9.715299999999913e-05, 9.719400000000183e-05, 9.633300000000053e-05, 9.659700000000035e-05, 9.680600000000136e-05, 9.7027999999999e-05, 9.706899999999824e-05, 9.630500000000139e-05, 9.63470000000001e-05, 9.619500000000031e-05, 9.68470000000006e-05, 9.656899999999774e-05, 9.713899999999956e-05, 9.658299999999731e-05, 9.674999999999961e-05, 9.694400000000158e-05, 9.649999999999936e-05, 9.697200000000072e-05, 9.676400000000265e-05, 9.632000000000043e-05, 9.692999999999855e-05, 9.690300000000235e-05, 9.697199999999725e-05, 9.706900000000171e-05, 9.626400000000215e-05, 9.638900000000228e-05, 9.690299999999888e-05, 9.67080000000009e-05, 9.674999999999961e-05, 9.71530000000026e-05, 9.697200000000072e-05, 9.682000000000093e-05, 9.698699999999977e-05, 9.630500000000139e-05, 9.645900000000013e-05, 9.69019999999994e-05, 9.680499999999842e-05]</msg>
<status status="PASS" starttime="20201030 18:29:39.166" endtime="20201030 18:29:39.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.161" endtime="20201030 18:29:39.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.173" endtime="20201030 18:29:39.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.171" endtime="20201030 18:29:39.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.170" endtime="20201030 18:29:39.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.809" endtime="20201030 18:29:39.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.809" endtime="20201030 18:29:39.194"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.202" endtime="20201030 18:29:39.222"></status>
</kw>
<msg timestamp="20201030 18:29:39.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.201" endtime="20201030 18:29:39.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.224" endtime="20201030 18:29:39.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.226" endtime="20201030 18:29:39.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.198" endtime="20201030 18:29:39.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.196" endtime="20201030 18:29:39.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.235" endtime="20201030 18:29:39.531"></status>
</kw>
<msg timestamp="20201030 18:29:39.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.233" endtime="20201030 18:29:39.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.540" endtime="20201030 18:29:39.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.558" endtime="20201030 18:29:39.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.231" endtime="20201030 18:29:39.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.229" endtime="20201030 18:29:39.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:39.570" level="INFO">${RESULT} = [{'diff': 9.765200000000016e-05}, {'diff': 9.795799999999869e-05}, {'diff': 9.765299999999963e-05}, {'diff': 9.820799999999894e-05}, {'diff': 9.779199999999932e-05}, {'diff': 9.780499999999942e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:39.565" endtime="20201030 18:29:39.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:39.575" level="INFO">${ACCURACY} = {'diff': [9.765200000000016e-05, 9.795799999999869e-05, 9.765299999999963e-05, 9.820799999999894e-05, 9.779199999999932e-05, 9.780499999999942e-05, 9.777799999999975e-05, 9.731999999999796e-05, 9.7459...</msg>
<status status="PASS" starttime="20201030 18:29:39.571" endtime="20201030 18:29:39.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.580" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:29:39.579" endtime="20201030 18:29:39.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.582" level="INFO">VALUE: [9.765200000000016e-05, 9.795799999999869e-05, 9.765299999999963e-05, 9.820799999999894e-05, 9.779199999999932e-05, 9.780499999999942e-05, 9.777799999999975e-05, 9.731999999999796e-05, 9.745900000000113e-05, 9.745900000000113e-05, 9.7334000000001e-05, 9.777700000000028e-05, 9.813900000000056e-05, 9.729100000000282e-05, 9.822200000000197e-05, 9.805499999999967e-05, 9.8028e-05, 9.8028e-05, 9.783300000000203e-05, 9.765299999999963e-05, 9.808399999999828e-05, 9.813900000000056e-05, 9.820899999999841e-05, 9.8028e-05, 9.740299999999938e-05, 9.73470000000011e-05, 9.776300000000071e-05, 9.752700000000003e-05, 9.762500000000049e-05, 9.74860000000008e-05, 9.738899999999981e-05, 9.75279999999995e-05, 9.787499999999727e-05, 9.758300000000178e-05, 9.823599999999807e-05, 9.756900000000221e-05, 9.727799999999925e-05, 9.809699999999838e-05, 9.769399999999887e-05, 9.74019999999999e-05, 9.809699999999838e-05, 9.801400000000043e-05, 9.745800000000165e-05, 9.769399999999887e-05, 9.801400000000043e-05, 9.745800000000165e-05, 9.783299999999856e-05, 9.788900000000031e-05, 9.776400000000018e-05, 9.720900000000088e-05]</msg>
<status status="PASS" starttime="20201030 18:29:39.581" endtime="20201030 18:29:39.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.576" endtime="20201030 18:29:39.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.587" endtime="20201030 18:29:39.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.586" endtime="20201030 18:29:39.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.585" endtime="20201030 18:29:39.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.194" endtime="20201030 18:29:39.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.194" endtime="20201030 18:29:39.608"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.616" endtime="20201030 18:29:39.637"></status>
</kw>
<msg timestamp="20201030 18:29:39.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.615" endtime="20201030 18:29:39.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.639" endtime="20201030 18:29:39.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.641" endtime="20201030 18:29:39.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.612" endtime="20201030 18:29:39.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.610" endtime="20201030 18:29:39.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.651" endtime="20201030 18:29:39.938"></status>
</kw>
<msg timestamp="20201030 18:29:39.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01971125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:39.650" endtime="20201030 18:29:39.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01971125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:39.942" endtime="20201030 18:29:39.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.950" endtime="20201030 18:29:39.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.647" endtime="20201030 18:29:39.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.645" endtime="20201030 18:29:39.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:39.957" level="INFO">${RESULT} = [{'diff': 9.8721999999999e-05}, {'diff': 9.88470000000026e-05}, {'diff': 9.894499999999959e-05}, {'diff': 9.870899999999891e-05}, {'diff': 9.901400000000143e-05}, {'diff': 9.831899999999949e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:29:39.953" endtime="20201030 18:29:39.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:39.961" level="INFO">${ACCURACY} = {'diff': [9.8721999999999e-05, 9.88470000000026e-05, 9.894499999999959e-05, 9.870899999999891e-05, 9.901400000000143e-05, 9.831899999999949e-05, 9.89999999999984e-05, 9.851300000000146e-05, 9.86660000...</msg>
<status status="PASS" starttime="20201030 18:29:39.958" endtime="20201030 18:29:39.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.965" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:29:39.964" endtime="20201030 18:29:39.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.968" level="INFO">VALUE: [9.8721999999999e-05, 9.88470000000026e-05, 9.894499999999959e-05, 9.870899999999891e-05, 9.901400000000143e-05, 9.831899999999949e-05, 9.89999999999984e-05, 9.851300000000146e-05, 9.866600000000073e-05, 9.858299999999931e-05, 9.895799999999969e-05, 9.881899999999999e-05, 9.858300000000278e-05, 9.861100000000192e-05, 9.861099999999845e-05, 9.88340000000025e-05, 9.923600000000254e-05, 9.891700000000045e-05, 9.909700000000285e-05, 9.900000000000186e-05, 9.86670000000002e-05, 9.840199999999744e-05, 9.840199999999744e-05, 9.89999999999984e-05, 9.897199999999926e-05, 9.919400000000037e-05, 9.890300000000088e-05, 9.908399999999928e-05, 9.894499999999959e-05, 9.89730000000022e-05, 9.829199999999982e-05, 9.922299999999898e-05, 9.882000000000293e-05, 9.877700000000128e-05, 9.831999999999896e-05, 9.89020000000014e-05, 9.863900000000106e-05, 9.91800000000008e-05, 9.900000000000186e-05, 9.851400000000093e-05, 9.844499999999909e-05, 9.852799999999703e-05, 9.9028000000001e-05, 9.870899999999891e-05, 9.840300000000038e-05, 9.829100000000035e-05, 9.91800000000008e-05, 9.919400000000037e-05, 9.89020000000014e-05, 9.833299999999906e-05]</msg>
<status status="PASS" starttime="20201030 18:29:39.966" endtime="20201030 18:29:39.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.962" endtime="20201030 18:29:39.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.973" endtime="20201030 18:29:39.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.971" endtime="20201030 18:29:39.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.970" endtime="20201030 18:29:39.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.609" endtime="20201030 18:29:39.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.608" endtime="20201030 18:29:39.993"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.002" endtime="20201030 18:29:40.024"></status>
</kw>
<msg timestamp="20201030 18:29:40.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.000" endtime="20201030 18:29:40.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.025" endtime="20201030 18:29:40.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.028" endtime="20201030 18:29:40.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.998" endtime="20201030 18:29:40.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.996" endtime="20201030 18:29:40.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.037" endtime="20201030 18:29:40.322"></status>
</kw>
<msg timestamp="20201030 18:29:40.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020574931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020674486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.035" endtime="20201030 18:29:40.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020574931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020674486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.326" endtime="20201030 18:29:40.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.334" endtime="20201030 18:29:40.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.033" endtime="20201030 18:29:40.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.031" endtime="20201030 18:29:40.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:40.341" level="INFO">${RESULT} = [{'diff': 9.95549999999977e-05}, {'diff': 0.00010013899999999909}, {'diff': 0.00010016699999999823}, {'diff': 0.00010013899999999909}, {'diff': 9.93479999999991e-05}, {'diff': 9.934699999999963e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:40.338" endtime="20201030 18:29:40.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:40.345" level="INFO">${ACCURACY} = {'diff': [9.95549999999977e-05, 0.00010013899999999909, 0.00010016699999999823, 0.00010013899999999909, 9.93479999999991e-05, 9.934699999999963e-05, 0.00010001399999999896, 9.93479999999991e-05, 0.000...</msg>
<status status="PASS" starttime="20201030 18:29:40.342" endtime="20201030 18:29:40.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.349" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:29:40.348" endtime="20201030 18:29:40.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.353" level="INFO">VALUE: [9.95549999999977e-05, 0.00010013899999999909, 0.00010016699999999823, 0.00010013899999999909, 9.93479999999991e-05, 9.934699999999963e-05, 0.00010001399999999896, 9.93479999999991e-05, 0.00010008400000000028, 9.95549999999977e-05, 0.00010020800000000094, 9.970800000000044e-05, 9.98609999999997e-05, 9.973599999999957e-05, 9.958300000000031e-05, 9.976399999999871e-05, 9.938899999999834e-05, 9.9722e-05, 9.991699999999798e-05, 9.983400000000003e-05, 9.9722e-05, 9.976400000000218e-05, 9.961100000000292e-05, 9.959699999999988e-05, 9.959699999999988e-05, 9.99999999999994e-05, 9.927800000000125e-05, 9.933300000000006e-05, 9.983300000000056e-05, 9.927799999999778e-05, 9.98479999999996e-05, 9.994500000000059e-05, 9.990299999999841e-05, 9.940300000000138e-05, 9.954099999999813e-05, 9.933300000000006e-05, 9.970800000000044e-05, 9.934699999999963e-05, 9.975000000000261e-05, 9.983300000000056e-05, 0.00010001399999999896, 9.938900000000181e-05, 9.973599999999957e-05, 9.995900000000016e-05, 0.00010009700000000038, 9.993100000000102e-05, 9.972299999999948e-05, 9.994499999999712e-05, 9.926299999999874e-05, 9.966599999999826e-05]</msg>
<status status="PASS" starttime="20201030 18:29:40.351" endtime="20201030 18:29:40.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.346" endtime="20201030 18:29:40.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:40.358" endtime="20201030 18:29:40.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.356" endtime="20201030 18:29:40.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.355" endtime="20201030 18:29:40.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.994" endtime="20201030 18:29:40.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.994" endtime="20201030 18:29:40.378"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.387" endtime="20201030 18:29:40.408"></status>
</kw>
<msg timestamp="20201030 18:29:40.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.385" endtime="20201030 18:29:40.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.409" endtime="20201030 18:29:40.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.412" endtime="20201030 18:29:40.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.383" endtime="20201030 18:29:40.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.381" endtime="20201030 18:29:40.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.421" endtime="20201030 18:29:40.707"></status>
</kw>
<msg timestamp="20201030 18:29:40.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.420" endtime="20201030 18:29:40.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.711" endtime="20201030 18:29:40.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.719" endtime="20201030 18:29:40.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.417" endtime="20201030 18:29:40.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.415" endtime="20201030 18:29:40.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:40.725" level="INFO">${RESULT} = [{'diff': 0.00010031900000000149}, {'diff': 0.00010116599999999976}, {'diff': 0.00010059700000000088}, {'diff': 0.00010058300000000131}, {'diff': 0.00010112500000000052}, {'diff': 0.000100347000000000...</msg>
<status status="PASS" starttime="20201030 18:29:40.722" endtime="20201030 18:29:40.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:40.732" level="INFO">${ACCURACY} = {'diff': [0.00010031900000000149, 0.00010116599999999976, 0.00010059700000000088, 0.00010058300000000131, 0.00010112500000000052, 0.00010034700000000063, 0.00010045799999999772, 0.00010119499999999837...</msg>
<status status="PASS" starttime="20201030 18:29:40.726" endtime="20201030 18:29:40.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.737" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:29:40.736" endtime="20201030 18:29:40.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.739" level="INFO">VALUE: [0.00010031900000000149, 0.00010116599999999976, 0.00010059700000000088, 0.00010058300000000131, 0.00010112500000000052, 0.00010034700000000063, 0.00010045799999999772, 0.00010119499999999837, 0.00010027799999999878, 0.0001003199999999975, 0.00010108300000000181, 0.00010059700000000088, 0.00010106899999999877, 0.00010108300000000181, 0.0001011939999999989, 0.00010108299999999834, 0.00010065299999999916, 0.00010082000000000146, 0.00010076399999999971, 0.00010062500000000002, 0.00010090299999999941, 0.00010077799999999928, 0.00010038899999999934, 0.0001012220000000015, 0.00010079099999999938, 0.00010058300000000131, 0.000100415999999999, 0.00010108299999999834, 0.00010098600000000083, 0.00010059700000000088, 0.00010056899999999827, 0.0001010000000000004, 0.00010051399999999946, 0.0001005419999999986, 0.00010115300000000313, 0.00010108400000000128, 0.00010090300000000288, 0.00010083300000000156, 0.00010124999999999718, 0.00010101399999999996, 0.00010062500000000002, 0.00010065299999999916, 0.00010044400000000162, 0.00010102799999999953, 0.00010038899999999934, 0.00010094500000000159, 0.00010040300000000238, 0.00010077799999999928, 0.00010047300000000023, 0.00010106999999999824]</msg>
<status status="PASS" starttime="20201030 18:29:40.738" endtime="20201030 18:29:40.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.733" endtime="20201030 18:29:40.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:40.744" endtime="20201030 18:29:40.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.743" endtime="20201030 18:29:40.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.741" endtime="20201030 18:29:40.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.379" endtime="20201030 18:29:40.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.379" endtime="20201030 18:29:40.765"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.773" endtime="20201030 18:29:40.794"></status>
</kw>
<msg timestamp="20201030 18:29:40.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.772" endtime="20201030 18:29:40.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.796" endtime="20201030 18:29:40.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.798" endtime="20201030 18:29:40.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.769" endtime="20201030 18:29:40.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.767" endtime="20201030 18:29:40.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.807" endtime="20201030 18:29:41.093"></status>
</kw>
<msg timestamp="20201030 18:29:41.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019930139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.806" endtime="20201030 18:29:41.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019930139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.097" endtime="20201030 18:29:41.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.105" endtime="20201030 18:29:41.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.803" endtime="20201030 18:29:41.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.802" endtime="20201030 18:29:41.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:41.112" level="INFO">${RESULT} = [{'diff': 0.00010125000000000065}, {'diff': 0.00010206999999999924}, {'diff': 0.00010186099999999823}, {'diff': 0.00010211099999999848}, {'diff': 0.00010220900000000241}, {'diff': 0.000101583999999998...</msg>
<status status="PASS" starttime="20201030 18:29:41.109" endtime="20201030 18:29:41.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:41.116" level="INFO">${ACCURACY} = {'diff': [0.00010125000000000065, 0.00010206999999999924, 0.00010186099999999823, 0.00010211099999999848, 0.00010220900000000241, 0.00010158399999999831, 0.00010140200000000044, 0.00010213800000000162...</msg>
<status status="PASS" starttime="20201030 18:29:41.113" endtime="20201030 18:29:41.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.120" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:29:41.119" endtime="20201030 18:29:41.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.122" level="INFO">VALUE: [0.00010125000000000065, 0.00010206999999999924, 0.00010186099999999823, 0.00010211099999999848, 0.00010220900000000241, 0.00010158399999999831, 0.00010140200000000044, 0.00010213800000000162, 0.00010216600000000076, 0.00010209699999999891, 0.00010155599999999917, 0.00010212500000000152, 0.00010143099999999905, 0.00010147199999999829, 0.00010137500000000077, 0.00010147300000000123, 0.00010216700000000023, 0.00010134799999999763, 0.00010188900000000084, 0.00010147200000000176, 0.00010211100000000195, 0.00010195799999999922, 0.00010169499999999887, 0.00010127799999999978, 0.00010191699999999998, 0.000101819999999999, 0.00010183400000000203, 0.00010193099999999955, 0.00010201400000000097, 0.00010137500000000077, 0.0001015419999999996, 0.00010223600000000208, 0.00010205599999999967, 0.000101416, 0.00010220800000000294, 0.00010183299999999909, 0.00010195799999999922, 0.00010173600000000158, 0.00010184699999999866, 0.00010215300000000066, 0.00010125000000000065, 0.00010152800000000003, 0.00010169499999999887, 0.00010161100000000145, 0.00010220799999999947, 0.00010183299999999909, 0.00010220799999999947, 0.00010179199999999985, 0.00010124999999999718, 0.00010213900000000109]</msg>
<status status="PASS" starttime="20201030 18:29:41.121" endtime="20201030 18:29:41.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.116" endtime="20201030 18:29:41.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:41.127" endtime="20201030 18:29:41.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.126" endtime="20201030 18:29:41.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.125" endtime="20201030 18:29:41.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.765" endtime="20201030 18:29:41.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.765" endtime="20201030 18:29:41.148"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.156" endtime="20201030 18:29:41.178"></status>
</kw>
<msg timestamp="20201030 18:29:41.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.155" endtime="20201030 18:29:41.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.180" endtime="20201030 18:29:41.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.182" endtime="20201030 18:29:41.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.152" endtime="20201030 18:29:41.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.150" endtime="20201030 18:29:41.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.191" endtime="20201030 18:29:41.476"></status>
</kw>
<msg timestamp="20201030 18:29:41.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020556556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020659014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.190" endtime="20201030 18:29:41.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020556556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020659014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.480" endtime="20201030 18:29:41.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.488" endtime="20201030 18:29:41.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.187" endtime="20201030 18:29:41.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.186" endtime="20201030 18:29:41.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:41.495" level="INFO">${RESULT} = [{'diff': 0.00010245799999999972}, {'diff': 0.00010233299999999959}, {'diff': 0.00010247199999999929}, {'diff': 0.00010320899999999994}, {'diff': 0.00010243000000000058}, {'diff': 0.000102526999999998...</msg>
<status status="PASS" starttime="20201030 18:29:41.492" endtime="20201030 18:29:41.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:41.499" level="INFO">${ACCURACY} = {'diff': [0.00010245799999999972, 0.00010233299999999959, 0.00010247199999999929, 0.00010320899999999994, 0.00010243000000000058, 0.00010252699999999809, 0.00010274999999999868, 0.00010243000000000058...</msg>
<status status="PASS" starttime="20201030 18:29:41.496" endtime="20201030 18:29:41.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.503" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:29:41.502" endtime="20201030 18:29:41.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.506" level="INFO">VALUE: [0.00010245799999999972, 0.00010233299999999959, 0.00010247199999999929, 0.00010320899999999994, 0.00010243000000000058, 0.00010252699999999809, 0.00010274999999999868, 0.00010243000000000058, 0.00010318000000000133, 0.00010241700000000048, 0.00010294400000000065, 0.00010258299999999984, 0.0001030139999999985, 0.00010270799999999997, 0.00010313900000000209, 0.00010230500000000045, 0.00010286099999999923, 0.00010238900000000134, 0.00010230599999999992, 0.00010322200000000004, 0.00010261099999999898, 0.0001030420000000011, 0.00010256900000000027, 0.00010270799999999997, 0.00010272199999999954, 0.00010234699999999916, 0.00010248599999999886, 0.00010295899999999969, 0.00010240299999999744, 0.00010282, 0.00010302799999999807, 0.00010275000000000215, 0.00010265200000000169, 0.00010263899999999812, 0.00010233299999999959, 0.00010265300000000116, 0.00010308300000000034, 0.00010229200000000035, 0.00010315300000000166, 0.00010259800000000235, 0.00010320899999999994, 0.00010249999999999843, 0.00010247199999999929, 0.00010298599999999936, 0.00010288899999999837, 0.00010291699999999751, 0.00010311099999999948, 0.00010262500000000202, 0.00010315300000000166, 0.00010262500000000202]</msg>
<status status="PASS" starttime="20201030 18:29:41.504" endtime="20201030 18:29:41.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.500" endtime="20201030 18:29:41.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:41.511" endtime="20201030 18:29:41.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.510" endtime="20201030 18:29:41.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.509" endtime="20201030 18:29:41.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.149" endtime="20201030 18:29:41.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.148" endtime="20201030 18:29:41.532"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.541" endtime="20201030 18:29:41.561"></status>
</kw>
<msg timestamp="20201030 18:29:41.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.539" endtime="20201030 18:29:41.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.563" endtime="20201030 18:29:41.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.565" endtime="20201030 18:29:41.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.536" endtime="20201030 18:29:41.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.534" endtime="20201030 18:29:41.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.574" endtime="20201030 18:29:41.860"></status>
</kw>
<msg timestamp="20201030 18:29:41.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019758569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.573" endtime="20201030 18:29:41.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019758569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.864" endtime="20201030 18:29:41.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.872" endtime="20201030 18:29:41.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.570" endtime="20201030 18:29:41.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.568" endtime="20201030 18:29:41.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:41.878" level="INFO">${RESULT} = [{'diff': 0.00010402699999999959}, {'diff': 0.00010362499999999955}, {'diff': 0.00010422300000000051}, {'diff': 0.0001033879999999994}, {'diff': 0.00010344399999999768}, {'diff': 0.0001040269999999995...</msg>
<status status="PASS" starttime="20201030 18:29:41.875" endtime="20201030 18:29:41.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:41.883" level="INFO">${ACCURACY} = {'diff': [0.00010402699999999959, 0.00010362499999999955, 0.00010422300000000051, 0.0001033879999999994, 0.00010344399999999768, 0.00010402699999999959, 0.00010409699999999744, 0.00010340299999999844,...</msg>
<status status="PASS" starttime="20201030 18:29:41.879" endtime="20201030 18:29:41.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.888" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:29:41.887" endtime="20201030 18:29:41.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.890" level="INFO">VALUE: [0.00010402699999999959, 0.00010362499999999955, 0.00010422300000000051, 0.0001033879999999994, 0.00010344399999999768, 0.00010402699999999959, 0.00010409699999999744, 0.00010340299999999844, 0.00010383300000000109, 0.00010352800000000204, 0.000103513999999999, 0.00010363899999999912, 0.00010408400000000081, 0.00010344500000000062, 0.00010363900000000259, 0.000103820000000001, 0.00010408300000000134, 0.00010326299999999927, 0.0001037360000000001, 0.00010409700000000091, 0.00010415299999999919, 0.00010420800000000147, 0.0001033749999999993, 0.0001036810000000013, 0.00010399999999999993, 0.00010423700000000008, 0.00010370900000000044, 0.0001038339999999971, 0.00010359799999999988, 0.0001033749999999993, 0.00010329100000000188, 0.00010409699999999744, 0.00010348599999999986, 0.00010399999999999993, 0.00010334700000000016, 0.00010355600000000117, 0.00010366700000000173, 0.00010333400000000006, 0.00010405499999999873, 0.00010368099999999783, 0.00010362499999999955, 0.00010358300000000084, 0.00010347200000000029, 0.00010406900000000177, 0.00010334700000000016, 0.00010422200000000104, 0.00010405499999999873, 0.00010334700000000016, 0.00010334699999999669, 0.0001037360000000001]</msg>
<status status="PASS" starttime="20201030 18:29:41.889" endtime="20201030 18:29:41.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.884" endtime="20201030 18:29:41.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:41.895" endtime="20201030 18:29:41.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.894" endtime="20201030 18:29:41.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.892" endtime="20201030 18:29:41.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.533" endtime="20201030 18:29:41.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.532" endtime="20201030 18:29:41.916"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.924" endtime="20201030 18:29:41.945"></status>
</kw>
<msg timestamp="20201030 18:29:41.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.923" endtime="20201030 18:29:41.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.947" endtime="20201030 18:29:41.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.949" endtime="20201030 18:29:41.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.920" endtime="20201030 18:29:41.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.918" endtime="20201030 18:29:41.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.958" endtime="20201030 18:29:42.244"></status>
</kw>
<msg timestamp="20201030 18:29:42.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.956" endtime="20201030 18:29:42.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.249" endtime="20201030 18:29:42.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.256" endtime="20201030 18:29:42.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.954" endtime="20201030 18:29:42.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.952" endtime="20201030 18:29:42.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:42.263" level="INFO">${RESULT} = [{'diff': 0.00010430600000000192}, {'diff': 0.0001050140000000005}, {'diff': 0.00010513900000000062}, {'diff': 0.00010444500000000162}, {'diff': 0.000104514}, {'diff': 0.00010516600000000029}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:29:42.260" endtime="20201030 18:29:42.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:42.267" level="INFO">${ACCURACY} = {'diff': [0.00010430600000000192, 0.0001050140000000005, 0.00010513900000000062, 0.00010444500000000162, 0.000104514, 0.00010516600000000029, 0.00010458300000000184, 0.00010426399999999975, 0.00010520...</msg>
<status status="PASS" starttime="20201030 18:29:42.264" endtime="20201030 18:29:42.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.271" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:29:42.270" endtime="20201030 18:29:42.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.274" level="INFO">VALUE: [0.00010430600000000192, 0.0001050140000000005, 0.00010513900000000062, 0.00010444500000000162, 0.000104514, 0.00010516600000000029, 0.00010458300000000184, 0.00010426399999999975, 0.000105207999999999, 0.00010520800000000247, 0.00010502800000000007, 0.00010522200000000204, 0.00010494500000000212, 0.00010430600000000192, 0.00010491700000000298, 0.00010440299999999944, 0.00010433400000000106, 0.00010502700000000059, 0.00010443000000000258, 0.00010504100000000016, 0.00010445800000000172, 0.00010484700000000166, 0.00010458299999999837, 0.00010426399999999975, 0.00010427799999999932, 0.0001043750000000003, 0.000104820000000002, 0.00010497199999999832, 0.00010522199999999857, 0.00010452700000000009, 0.00010488799999999743, 0.00010466599999999979, 0.00010473599999999764, 0.00010486099999999776, 0.00010463899999999665, 0.00010448600000000086, 0.00010459800000000088, 0.00010458400000000131, 0.00010518099999999933, 0.00010506999999999878, 0.00010495799999999875, 0.00010511099999999801, 0.0001043750000000003, 0.00010504100000000016, 0.00010508299999999887, 0.00010465299999999969, 0.000105207999999999, 0.00010495799999999875, 0.00010456999999999828, 0.00010477799999999982]</msg>
<status status="PASS" starttime="20201030 18:29:42.272" endtime="20201030 18:29:42.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.268" endtime="20201030 18:29:42.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:42.279" endtime="20201030 18:29:42.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.277" endtime="20201030 18:29:42.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.276" endtime="20201030 18:29:42.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.916" endtime="20201030 18:29:42.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.916" endtime="20201030 18:29:42.300"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.308" endtime="20201030 18:29:42.330"></status>
</kw>
<msg timestamp="20201030 18:29:42.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.306" endtime="20201030 18:29:42.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.332" endtime="20201030 18:29:42.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.334" endtime="20201030 18:29:42.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.304" endtime="20201030 18:29:42.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.302" endtime="20201030 18:29:42.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.343" endtime="20201030 18:29:42.629"></status>
</kw>
<msg timestamp="20201030 18:29:42.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020542958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020648472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.342" endtime="20201030 18:29:42.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020542958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020648472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.633" endtime="20201030 18:29:42.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.641" endtime="20201030 18:29:42.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.339" endtime="20201030 18:29:42.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.338" endtime="20201030 18:29:42.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:42.647" level="INFO">${RESULT} = [{'diff': 0.000105514000000001}, {'diff': 0.00010606899999999683}, {'diff': 0.00010577800000000082}, {'diff': 0.00010606999999999978}, {'diff': 0.00010581999999999953}, {'diff': 0.00010522300000000151...</msg>
<status status="PASS" starttime="20201030 18:29:42.644" endtime="20201030 18:29:42.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:42.651" level="INFO">${ACCURACY} = {'diff': [0.000105514000000001, 0.00010606899999999683, 0.00010577800000000082, 0.00010606999999999978, 0.00010581999999999953, 0.00010522300000000151, 0.0001058750000000018, 0.00010620899999999947, 0...</msg>
<status status="PASS" starttime="20201030 18:29:42.648" endtime="20201030 18:29:42.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.656" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:29:42.655" endtime="20201030 18:29:42.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.658" level="INFO">VALUE: [0.000105514000000001, 0.00010606899999999683, 0.00010577800000000082, 0.00010606999999999978, 0.00010581999999999953, 0.00010522300000000151, 0.0001058750000000018, 0.00010620899999999947, 0.0001053750000000013, 0.00010568000000000036, 0.00010555500000000023, 0.00010583299999999962, 0.00010569399999999993, 0.00010550000000000143, 0.00010584700000000266, 0.00010559699999999894, 0.00010525000000000118, 0.0001055559999999997, 0.0001060279999999976, 0.00010615300000000119, 0.00010590299999999747, 0.0001057360000000021, 0.00010583299999999962, 0.00010556999999999928, 0.00010565299999999722, 0.00010569399999999993, 0.00010595799999999975, 0.00010558299999999937, 0.0001055689999999998, 0.00010563900000000112, 0.00010576399999999778, 0.00010579200000000039, 0.00010611099999999901, 0.00010577800000000082, 0.00010609699999999944, 0.00010602800000000107, 0.00010577800000000082, 0.00010597199999999932, 0.00010590300000000094, 0.00010594400000000018, 0.00010527800000000032, 0.00010591700000000051, 0.0001058750000000018, 0.00010584800000000213, 0.00010558399999999885, 0.00010612499999999858, 0.00010540300000000044, 0.00010533300000000259, 0.00010605500000000073, 0.00010609699999999944]</msg>
<status status="PASS" starttime="20201030 18:29:42.657" endtime="20201030 18:29:42.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.652" endtime="20201030 18:29:42.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:42.668" endtime="20201030 18:29:42.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.666" endtime="20201030 18:29:42.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.665" endtime="20201030 18:29:42.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.300" endtime="20201030 18:29:42.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.300" endtime="20201030 18:29:42.689"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.698" endtime="20201030 18:29:42.719"></status>
</kw>
<msg timestamp="20201030 18:29:42.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.696" endtime="20201030 18:29:42.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.721" endtime="20201030 18:29:42.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.723" endtime="20201030 18:29:42.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.694" endtime="20201030 18:29:42.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.691" endtime="20201030 18:29:42.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.733" endtime="20201030 18:29:43.017"></status>
</kw>
<msg timestamp="20201030 18:29:43.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021048042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021155292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.731" endtime="20201030 18:29:43.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021048042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021155292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.021" endtime="20201030 18:29:43.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.030" endtime="20201030 18:29:43.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.728" endtime="20201030 18:29:43.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.727" endtime="20201030 18:29:43.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:43.036" level="INFO">${RESULT} = [{'diff': 0.0001072499999999997}, {'diff': 0.00010636099999999926}, {'diff': 0.00010708400000000035}, {'diff': 0.00010701399999999903}, {'diff': 0.00010647299999999929}, {'diff': 0.0001070829999999974...</msg>
<status status="PASS" starttime="20201030 18:29:43.033" endtime="20201030 18:29:43.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:43.041" level="INFO">${ACCURACY} = {'diff': [0.0001072499999999997, 0.00010636099999999926, 0.00010708400000000035, 0.00010701399999999903, 0.00010647299999999929, 0.0001070829999999974, 0.00010659699999999994, 0.00010701399999999903, ...</msg>
<status status="PASS" starttime="20201030 18:29:43.037" endtime="20201030 18:29:43.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.045" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:29:43.044" endtime="20201030 18:29:43.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.048" level="INFO">VALUE: [0.0001072499999999997, 0.00010636099999999926, 0.00010708400000000035, 0.00010701399999999903, 0.00010647299999999929, 0.0001070829999999974, 0.00010659699999999994, 0.00010701399999999903, 0.00010672200000000007, 0.00010638900000000187, 0.0001068889999999989, 0.00010691700000000151, 0.00010708300000000087, 0.00010661099999999951, 0.00010627800000000132, 0.00010650000000000243, 0.00010708400000000035, 0.00010723600000000014, 0.00010708300000000087, 0.00010699999999999946, 0.00010677799999999835, 0.00010701399999999903, 0.00010632000000000003, 0.00010673599999999964, 0.00010691700000000151, 0.00010641700000000101, 0.00010726400000000275, 0.00010634799999999917, 0.00010722300000000004, 0.00010697199999999685, 0.00010717999999999839, 0.00010680500000000148, 0.00010647199999999982, 0.00010715299999999872, 0.0001067080000000005, 0.00010680500000000148, 0.0001070279999999986, 0.00010682000000000053, 0.0001063880000000024, 0.00010630500000000098, 0.00010637499999999883, 0.00010679099999999844, 0.00010701299999999955, 0.0001067080000000005, 0.0001067499999999992, 0.00010697200000000032, 0.00010694399999999771, 0.00010691700000000151, 0.00010683299999999715, 0.00010701399999999903]</msg>
<status status="PASS" starttime="20201030 18:29:43.046" endtime="20201030 18:29:43.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.042" endtime="20201030 18:29:43.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:43.053" endtime="20201030 18:29:43.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.051" endtime="20201030 18:29:43.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.050" endtime="20201030 18:29:43.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.690" endtime="20201030 18:29:43.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.689" endtime="20201030 18:29:43.073"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.082" endtime="20201030 18:29:43.103"></status>
</kw>
<msg timestamp="20201030 18:29:43.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.081" endtime="20201030 18:29:43.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.105" endtime="20201030 18:29:43.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.107" endtime="20201030 18:29:43.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.078" endtime="20201030 18:29:43.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.076" endtime="20201030 18:29:43.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.116" endtime="20201030 18:29:43.402"></status>
</kw>
<msg timestamp="20201030 18:29:43.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019843306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.115" endtime="20201030 18:29:43.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019843306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.407" endtime="20201030 18:29:43.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.415" endtime="20201030 18:29:43.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.112" endtime="20201030 18:29:43.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.111" endtime="20201030 18:29:43.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:43.421" level="INFO">${RESULT} = [{'diff': 0.00010730499999999851}, {'diff': 0.00010777800000000282}, {'diff': 0.00010811100000000101}, {'diff': 0.00010801300000000055}, {'diff': 0.00010786099999999729}, {'diff': 0.000107695000000001...</msg>
<status status="PASS" starttime="20201030 18:29:43.418" endtime="20201030 18:29:43.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:43.425" level="INFO">${ACCURACY} = {'diff': [0.00010730499999999851, 0.00010777800000000282, 0.00010811100000000101, 0.00010801300000000055, 0.00010786099999999729, 0.0001076950000000014, 0.00010809799999999745, 0.00010747200000000082,...</msg>
<status status="PASS" starttime="20201030 18:29:43.422" endtime="20201030 18:29:43.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.430" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:29:43.429" endtime="20201030 18:29:43.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.432" level="INFO">VALUE: [0.00010730499999999851, 0.00010777800000000282, 0.00010811100000000101, 0.00010801300000000055, 0.00010786099999999729, 0.0001076950000000014, 0.00010809799999999745, 0.00010747200000000082, 0.00010765199999999975, 0.00010751399999999953, 0.00010765300000000269, 0.00010736100000000026, 0.00010795800000000175, 0.00010737499999999983, 0.00010773600000000064, 0.0001073889999999994, 0.00010805599999999874, 0.00010762500000000008, 0.00010727699999999937, 0.00010747200000000082, 0.00010737499999999983, 0.00010725000000000318, 0.00010795799999999828, 0.000108208000000002, 0.0001073889999999994, 0.0001078889999999999, 0.00010727799999999885, 0.00010794500000000165, 0.00010797200000000132, 0.0001073889999999994, 0.00010815299999999972, 0.00010813900000000015, 0.00010813900000000015, 0.00010799999999999699, 0.00010761100000000051, 0.00010797200000000132, 0.0001073889999999994, 0.00010783299999999815, 0.00010790299999999947, 0.00010787500000000033, 0.00010763899999999965, 0.00010777800000000282, 0.00010748600000000039, 0.00010795900000000122, 0.00010726399999999928, 0.00010752700000000309, 0.0001078889999999999, 0.00010783300000000162, 0.00010783299999999815, 0.00010763899999999965]</msg>
<status status="PASS" starttime="20201030 18:29:43.431" endtime="20201030 18:29:43.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.426" endtime="20201030 18:29:43.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:43.437" endtime="20201030 18:29:43.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.435" endtime="20201030 18:29:43.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.434" endtime="20201030 18:29:43.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.074" endtime="20201030 18:29:43.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.074" endtime="20201030 18:29:43.458"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.466" endtime="20201030 18:29:43.488"></status>
</kw>
<msg timestamp="20201030 18:29:43.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.465" endtime="20201030 18:29:43.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.489" endtime="20201030 18:29:43.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.492" endtime="20201030 18:29:43.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.462" endtime="20201030 18:29:43.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.460" endtime="20201030 18:29:43.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.501" endtime="20201030 18:29:43.786"></status>
</kw>
<msg timestamp="20201030 18:29:43.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020611458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020719972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.499" endtime="20201030 18:29:43.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020611458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020719972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.790" endtime="20201030 18:29:43.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.798" endtime="20201030 18:29:43.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.496" endtime="20201030 18:29:43.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.495" endtime="20201030 18:29:43.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:43.805" level="INFO">${RESULT} = [{'diff': 0.00010851400000000053}, {'diff': 0.00010920799999999953}, {'diff': 0.000108902999999997}, {'diff': 0.00010844499999999868}, {'diff': 0.00010898600000000189}, {'diff': 0.00010905599999999974...</msg>
<status status="PASS" starttime="20201030 18:29:43.802" endtime="20201030 18:29:43.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:43.809" level="INFO">${ACCURACY} = {'diff': [0.00010851400000000053, 0.00010920799999999953, 0.000108902999999997, 0.00010844499999999868, 0.00010898600000000189, 0.00010905599999999974, 0.0001090829999999994, 0.00010866699999999979, 0...</msg>
<status status="PASS" starttime="20201030 18:29:43.806" endtime="20201030 18:29:43.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.813" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:29:43.812" endtime="20201030 18:29:43.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.816" level="INFO">VALUE: [0.00010851400000000053, 0.00010920799999999953, 0.000108902999999997, 0.00010844499999999868, 0.00010898600000000189, 0.00010905599999999974, 0.0001090829999999994, 0.00010866699999999979, 0.00010876400000000078, 0.0001088340000000021, 0.00010829099999999994, 0.00010845800000000225, 0.00010888899999999743, 0.00010841699999999954, 0.00010920799999999953, 0.00010909700000000244, 0.00010886099999999829, 0.00010881899999999958, 0.00010873599999999817, 0.00010916700000000029, 0.00010873599999999817, 0.00010838800000000093, 0.00010859699999999847, 0.00010874999999999774, 0.00010911100000000201, 0.00010854199999999967, 0.00010876400000000078, 0.00010826400000000028, 0.00010901400000000103, 0.00010823600000000114, 0.00010845800000000225, 0.00010902799999999713, 0.00010884800000000167, 0.00010899999999999799, 0.00010866600000000032, 0.00010915300000000072, 0.00010876399999999731, 0.00010858300000000237, 0.00010924999999999824, 0.00010904100000000069, 0.00010844399999999921, 0.00010861100000000151, 0.00010841699999999954, 0.00010893099999999961, 0.00010834700000000169, 0.0001084020000000005, 0.0001085829999999989, 0.0001082630000000008, 0.00010915299999999725, 0.00010898600000000189]</msg>
<status status="PASS" starttime="20201030 18:29:43.814" endtime="20201030 18:29:43.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.810" endtime="20201030 18:29:43.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:43.821" endtime="20201030 18:29:43.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.820" endtime="20201030 18:29:43.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.819" endtime="20201030 18:29:43.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.458" endtime="20201030 18:29:43.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.458" endtime="20201030 18:29:43.842"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.851" endtime="20201030 18:29:43.872"></status>
</kw>
<msg timestamp="20201030 18:29:43.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.849" endtime="20201030 18:29:43.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.873" endtime="20201030 18:29:43.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.876" endtime="20201030 18:29:43.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.847" endtime="20201030 18:29:43.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.844" endtime="20201030 18:29:43.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.885" endtime="20201030 18:29:44.170"></status>
</kw>
<msg timestamp="20201030 18:29:44.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.883" endtime="20201030 18:29:44.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.174" endtime="20201030 18:29:44.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.182" endtime="20201030 18:29:44.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.881" endtime="20201030 18:29:44.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.879" endtime="20201030 18:29:44.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:44.188" level="INFO">${RESULT} = [{'diff': 0.00010986100000000276}, {'diff': 0.00010954200000000067}, {'diff': 0.0001098479999999992}, {'diff': 0.00010968100000000036}, {'diff': 0.00011015199999999878}, {'diff': 0.0001101520000000022...</msg>
<status status="PASS" starttime="20201030 18:29:44.185" endtime="20201030 18:29:44.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:44.195" level="INFO">${ACCURACY} = {'diff': [0.00010986100000000276, 0.00010954200000000067, 0.0001098479999999992, 0.00010968100000000036, 0.00011015199999999878, 0.00011015200000000225, 0.00010995800000000028, 0.00010983300000000015,...</msg>
<status status="PASS" starttime="20201030 18:29:44.189" endtime="20201030 18:29:44.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.200" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:29:44.199" endtime="20201030 18:29:44.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.202" level="INFO">VALUE: [0.00010986100000000276, 0.00010954200000000067, 0.0001098479999999992, 0.00010968100000000036, 0.00011015199999999878, 0.00011015200000000225, 0.00010995800000000028, 0.00010983300000000015, 0.0001095280000000011, 0.00011022299999999957, 0.00010993100000000061, 0.00011001400000000203, 0.00010943100000000011, 0.00010927800000000085, 0.0001095699999999998, 0.00010943000000000064, 0.00010983399999999963, 0.0001097219999999996, 0.00010986099999999929, 0.0001093890000000014, 0.0001095829999999999, 0.00010954200000000067, 0.00010956900000000033, 0.00011002799999999813, 0.00010947200000000282, 0.00010934800000000217, 0.00011015299999999825, 0.000109902999999998, 0.00010970800000000003, 0.00011019400000000096, 0.0001094020000000015, 0.00010973599999999917, 0.00010976399999999831, 0.00010988899999999843, 0.00011001399999999856, 0.00010947199999999935, 0.00011012499999999911, 0.00010952799999999763, 0.00010933299999999965, 0.00010951300000000205, 0.00010958399999999938, 0.00010933299999999965, 0.00010934699999999922, 0.00010994400000000071, 0.00010975000000000221, 0.0001097219999999996, 0.00010984699999999972, 0.00010966700000000079, 0.00010933399999999913, 0.00010929100000000094]</msg>
<status status="PASS" starttime="20201030 18:29:44.201" endtime="20201030 18:29:44.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.196" endtime="20201030 18:29:44.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.207" endtime="20201030 18:29:44.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.206" endtime="20201030 18:29:44.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.204" endtime="20201030 18:29:44.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.843" endtime="20201030 18:29:44.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.842" endtime="20201030 18:29:44.228"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.236" endtime="20201030 18:29:44.257"></status>
</kw>
<msg timestamp="20201030 18:29:44.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.235" endtime="20201030 18:29:44.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.259" endtime="20201030 18:29:44.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.262" endtime="20201030 18:29:44.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.232" endtime="20201030 18:29:44.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.230" endtime="20201030 18:29:44.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.272" endtime="20201030 18:29:44.560"></status>
</kw>
<msg timestamp="20201030 18:29:44.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019743722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.271" endtime="20201030 18:29:44.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019743722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.564" endtime="20201030 18:29:44.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.572" endtime="20201030 18:29:44.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.267" endtime="20201030 18:29:44.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.265" endtime="20201030 18:29:44.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:44.578" level="INFO">${RESULT} = [{'diff': 0.00011084699999999725}, {'diff': 0.00011076399999999931}, {'diff': 0.00011026399999999881}, {'diff': 0.00011036099999999979}, {'diff': 0.00011116699999999882}, {'diff': 0.000110263999999998...</msg>
<status status="PASS" starttime="20201030 18:29:44.575" endtime="20201030 18:29:44.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:44.582" level="INFO">${ACCURACY} = {'diff': [0.00011084699999999725, 0.00011076399999999931, 0.00011026399999999881, 0.00011036099999999979, 0.00011116699999999882, 0.00011026399999999881, 0.00011108400000000088, 0.00011059799999999995...</msg>
<status status="PASS" starttime="20201030 18:29:44.579" endtime="20201030 18:29:44.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.587" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:29:44.586" endtime="20201030 18:29:44.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.589" level="INFO">VALUE: [0.00011084699999999725, 0.00011076399999999931, 0.00011026399999999881, 0.00011036099999999979, 0.00011116699999999882, 0.00011026399999999881, 0.00011108400000000088, 0.00011059799999999995, 0.00011104099999999922, 0.00011032000000000056, 0.00011047200000000035, 0.00011083299999999768, 0.00011059700000000047, 0.00011059700000000047, 0.00011045800000000078, 0.00011063899999999918, 0.000110902999999999, 0.000111209000000001, 0.00011118099999999839, 0.00011077799999999888, 0.00011062499999999961, 0.00011088799999999996, 0.00011059700000000047, 0.00011047200000000035, 0.00011116699999999882, 0.00011118000000000239, 0.0001110419999999987, 0.00011120800000000153, 0.00011059700000000047, 0.00011024999999999924, 0.00011091699999999857, 0.00011043000000000164, 0.00011051399999999906, 0.00011106900000000183, 0.00011079100000000244, 0.0001110549999999988, 0.00011067999999999842, 0.00011044400000000121, 0.00011081999999999759, 0.00011059799999999995, 0.00011065300000000222, 0.0001110419999999987, 0.00011099999999999999, 0.00011098600000000042, 0.00011041600000000207, 0.00011104099999999922, 0.00011031900000000108, 0.00011047200000000035, 0.00011117999999999892, 0.00011079199999999845]</msg>
<status status="PASS" starttime="20201030 18:29:44.588" endtime="20201030 18:29:44.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.583" endtime="20201030 18:29:44.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.594" endtime="20201030 18:29:44.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.593" endtime="20201030 18:29:44.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.591" endtime="20201030 18:29:44.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.229" endtime="20201030 18:29:44.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.228" endtime="20201030 18:29:44.615"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.623" endtime="20201030 18:29:44.645"></status>
</kw>
<msg timestamp="20201030 18:29:44.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.622" endtime="20201030 18:29:44.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.646" endtime="20201030 18:29:44.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.649" endtime="20201030 18:29:44.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.619" endtime="20201030 18:29:44.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.617" endtime="20201030 18:29:44.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.658" endtime="20201030 18:29:44.944"></status>
</kw>
<msg timestamp="20201030 18:29:44.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.656" endtime="20201030 18:29:44.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.948" endtime="20201030 18:29:44.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.956" endtime="20201030 18:29:44.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.654" endtime="20201030 18:29:44.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.652" endtime="20201030 18:29:44.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:44.962" level="INFO">${RESULT} = [{'diff': 0.00011150000000000049}, {'diff': 0.00011158299999999843}, {'diff': 0.00011211100000000154}, {'diff': 0.00011127799999999938}, {'diff': 0.00011191699999999957}, {'diff': 0.000111818999999999...</msg>
<status status="PASS" starttime="20201030 18:29:44.959" endtime="20201030 18:29:44.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:44.966" level="INFO">${ACCURACY} = {'diff': [0.00011150000000000049, 0.00011158299999999843, 0.00011211100000000154, 0.00011127799999999938, 0.00011191699999999957, 0.00011181899999999911, 0.00011219499999999896, 0.00011177799999999988...</msg>
<status status="PASS" starttime="20201030 18:29:44.963" endtime="20201030 18:29:44.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.971" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:29:44.970" endtime="20201030 18:29:44.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.973" level="INFO">VALUE: [0.00011150000000000049, 0.00011158299999999843, 0.00011211100000000154, 0.00011127799999999938, 0.00011191699999999957, 0.00011181899999999911, 0.00011219499999999896, 0.00011177799999999988, 0.00011126399999999981, 0.00011158400000000138, 0.00011202800000000013, 0.00011158299999999843, 0.00011159700000000147, 0.00011187500000000086, 0.00011176400000000031, 0.00011147200000000135, 0.00011172199999999813, 0.00011220799999999906, 0.00011134700000000122, 0.00011127799999999938, 0.0001120700000000023, 0.0001114159999999996, 0.00011195900000000175, 0.0001117359999999977, 0.0001120419999999997, 0.00011159700000000147, 0.00011220800000000253, 0.00011176400000000031, 0.00011179199999999945, 0.00011176400000000031, 0.0001120700000000023, 0.00011194499999999871, 0.00011192999999999967, 0.00011212499999999764, 0.00011211099999999807, 0.00011211100000000154, 0.00011144399999999874, 0.00011163900000000018, 0.00011186099999999782, 0.00011158299999999843, 0.00011183300000000215, 0.00011195800000000228, 0.00011213900000000068, 0.00011204100000000022, 0.00011152799999999963, 0.00011130500000000251, 0.00011201400000000056, 0.00011181900000000258, 0.00011145800000000178, 0.00011208299999999893]</msg>
<status status="PASS" starttime="20201030 18:29:44.972" endtime="20201030 18:29:44.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.967" endtime="20201030 18:29:44.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.979" endtime="20201030 18:29:44.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.977" endtime="20201030 18:29:44.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.976" endtime="20201030 18:29:44.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.616" endtime="20201030 18:29:45.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.615" endtime="20201030 18:29:45.000"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.008" endtime="20201030 18:29:45.029"></status>
</kw>
<msg timestamp="20201030 18:29:45.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.007" endtime="20201030 18:29:45.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.031" endtime="20201030 18:29:45.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.033" endtime="20201030 18:29:45.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.004" endtime="20201030 18:29:45.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.002" endtime="20201030 18:29:45.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.042" endtime="20201030 18:29:45.328"></status>
</kw>
<msg timestamp="20201030 18:29:45.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.041" endtime="20201030 18:29:45.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.332" endtime="20201030 18:29:45.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.340" endtime="20201030 18:29:45.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.038" endtime="20201030 18:29:45.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.036" endtime="20201030 18:29:45.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:45.346" level="INFO">${RESULT} = [{'diff': 0.00011276400000000131}, {'diff': 0.00011249999999999802}, {'diff': 0.00011232000000000256}, {'diff': 0.00011306900000000036}, {'diff': 0.00011315300000000125}, {'diff': 0.000112763999999997...</msg>
<status status="PASS" starttime="20201030 18:29:45.343" endtime="20201030 18:29:45.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:45.351" level="INFO">${ACCURACY} = {'diff': [0.00011276400000000131, 0.00011249999999999802, 0.00011232000000000256, 0.00011306900000000036, 0.00011315300000000125, 0.00011276399999999784, 0.00011261099999999857, 0.00011275000000000174...</msg>
<status status="PASS" starttime="20201030 18:29:45.347" endtime="20201030 18:29:45.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.356" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:29:45.355" endtime="20201030 18:29:45.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.358" level="INFO">VALUE: [0.00011276400000000131, 0.00011249999999999802, 0.00011232000000000256, 0.00011306900000000036, 0.00011315300000000125, 0.00011276399999999784, 0.00011261099999999857, 0.00011275000000000174, 0.0001124030000000005, 0.00011320899999999953, 0.00011265300000000075, 0.00011233400000000213, 0.00011231899999999961, 0.00011254100000000072, 0.00011226400000000081, 0.00011270799999999956, 0.00011265299999999728, 0.00011298599999999895, 0.00011227800000000038, 0.00011281999999999959, 0.00011256899999999986, 0.00011224999999999777, 0.00011266700000000032, 0.0001124030000000005, 0.0001122359999999982, 0.00011268099999999989, 0.0001122770000000009, 0.00011231899999999961, 0.0001123749999999979, 0.00011262500000000161, 0.0001132359999999992, 0.00011270799999999956, 0.00011247200000000235, 0.00011261100000000204, 0.00011277800000000088, 0.00011300000000000199, 0.00011236100000000179, 0.00011251300000000158, 0.00011294499999999971, 0.00011317999999999745, 0.00011280499999999707, 0.00011247200000000235, 0.00011216699999999982, 0.00011277799999999741, 0.00011256999999999934, 0.00011308400000000288, 0.00011282000000000306, 0.00011244399999999974, 0.0001125550000000003, 0.00011276400000000131]</msg>
<status status="PASS" starttime="20201030 18:29:45.357" endtime="20201030 18:29:45.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.352" endtime="20201030 18:29:45.359"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:45.363" endtime="20201030 18:29:45.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.361" endtime="20201030 18:29:45.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.360" endtime="20201030 18:29:45.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.001" endtime="20201030 18:29:45.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.000" endtime="20201030 18:29:45.384"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.392" endtime="20201030 18:29:45.413"></status>
</kw>
<msg timestamp="20201030 18:29:45.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.391" endtime="20201030 18:29:45.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.415" endtime="20201030 18:29:45.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.417" endtime="20201030 18:29:45.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.388" endtime="20201030 18:29:45.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.386" endtime="20201030 18:29:45.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.426" endtime="20201030 18:29:45.712"></status>
</kw>
<msg timestamp="20201030 18:29:45.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019670472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.424" endtime="20201030 18:29:45.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019670472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.716" endtime="20201030 18:29:45.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.724" endtime="20201030 18:29:45.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.422" endtime="20201030 18:29:45.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.420" endtime="20201030 18:29:45.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:45.731" level="INFO">${RESULT} = [{'diff': 0.00011363900000000218}, {'diff': 0.00011374999999999927}, {'diff': 0.00011354199999999773}, {'diff': 0.00011365299999999828}, {'diff': 0.00011408300000000093}, {'diff': 0.000113431000000000...</msg>
<status status="PASS" starttime="20201030 18:29:45.728" endtime="20201030 18:29:45.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:45.735" level="INFO">${ACCURACY} = {'diff': [0.00011363900000000218, 0.00011374999999999927, 0.00011354199999999773, 0.00011365299999999828, 0.00011408300000000093, 0.00011343100000000064, 0.00011363900000000218, 0.0001135550000000013,...</msg>
<status status="PASS" starttime="20201030 18:29:45.732" endtime="20201030 18:29:45.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.740" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:29:45.739" endtime="20201030 18:29:45.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.743" level="INFO">VALUE: [0.00011363900000000218, 0.00011374999999999927, 0.00011354199999999773, 0.00011365299999999828, 0.00011408300000000093, 0.00011343100000000064, 0.00011363900000000218, 0.0001135550000000013, 0.00011338799999999899, 0.00011363799999999924, 0.00011341599999999813, 0.00011340199999999856, 0.00011411199999999955, 0.00011326399999999834, 0.00011334699999999975, 0.00011347199999999988, 0.00011393100000000114, 0.00011416700000000182, 0.00011415299999999878, 0.00011355499999999782, 0.00011340199999999856, 0.00011340200000000203, 0.00011345799999999684, 0.00011326399999999834, 0.00011402800000000213, 0.00011405600000000127, 0.00011420800000000106, 0.00011415299999999878, 0.000114290999999999, 0.00011395900000000028, 0.00011345800000000031, 0.00011377799999999841, 0.00011363899999999871, 0.00011383300000000068, 0.00011334699999999975, 0.00011408299999999746, 0.00011384700000000025, 0.00011416699999999835, 0.00011327799999999791, 0.0001140970000000005, 0.00011345899999999978, 0.00011338899999999846, 0.00011413799999999974, 0.00011337500000000236, 0.00011351300000000258, 0.00011343000000000117, 0.00011397299999999985, 0.00011412499999999964, 0.00011388899999999896, 0.00011420800000000106]</msg>
<status status="PASS" starttime="20201030 18:29:45.742" endtime="20201030 18:29:45.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.736" endtime="20201030 18:29:45.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:45.748" endtime="20201030 18:29:45.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.747" endtime="20201030 18:29:45.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.746" endtime="20201030 18:29:45.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.384" endtime="20201030 18:29:45.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.384" endtime="20201030 18:29:45.769"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.777" endtime="20201030 18:29:45.800"></status>
</kw>
<msg timestamp="20201030 18:29:45.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.776" endtime="20201030 18:29:45.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.802" endtime="20201030 18:29:45.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.804" endtime="20201030 18:29:45.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.773" endtime="20201030 18:29:45.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.771" endtime="20201030 18:29:45.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.813" endtime="20201030 18:29:46.099"></status>
</kw>
<msg timestamp="20201030 18:29:46.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020534194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020649375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.812" endtime="20201030 18:29:46.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020534194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020649375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:46.103" endtime="20201030 18:29:46.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.111" endtime="20201030 18:29:46.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.809" endtime="20201030 18:29:46.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.807" endtime="20201030 18:29:46.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:46.117" level="INFO">${RESULT} = [{'diff': 0.00011518100000000239}, {'diff': 0.00011508300000000193}, {'diff': 0.0001148750000000004}, {'diff': 0.00011429199999999848}, {'diff': 0.00011461100000000057}, {'diff': 0.0001145839999999974...</msg>
<status status="PASS" starttime="20201030 18:29:46.114" endtime="20201030 18:29:46.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:46.121" level="INFO">${ACCURACY} = {'diff': [0.00011518100000000239, 0.00011508300000000193, 0.0001148750000000004, 0.00011429199999999848, 0.00011461100000000057, 0.00011458399999999744, 0.00011457000000000134, 0.00011475000000000027,...</msg>
<status status="PASS" starttime="20201030 18:29:46.118" endtime="20201030 18:29:46.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.126" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:29:46.125" endtime="20201030 18:29:46.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.128" level="INFO">VALUE: [0.00011518100000000239, 0.00011508300000000193, 0.0001148750000000004, 0.00011429199999999848, 0.00011461100000000057, 0.00011458399999999744, 0.00011457000000000134, 0.00011475000000000027, 0.00011465300000000275, 0.00011430599999999805, 0.00011508299999999846, 0.00011490200000000006, 0.00011522200000000163, 0.00011431899999999814, 0.00011458300000000143, 0.00011483300000000168, 0.00011523599999999773, 0.00011490299999999953, 0.00011513899999999674, 0.00011454100000000272, 0.00011476300000000036, 0.00011452699999999968, 0.00011490200000000006, 0.00011448599999999698, 0.00011445799999999784, 0.00011508300000000193, 0.00011459699999999753, 0.00011448600000000045, 0.00011482000000000159, 0.00011490299999999953, 0.00011470799999999809, 0.00011519400000000249, 0.00011434700000000075, 0.00011515199999999684, 0.00011445800000000131, 0.00011454099999999925, 0.00011427799999999891, 0.00011502799999999966, 0.00011513900000000021, 0.00011518099999999892, 0.00011463899999999971, 0.00011509800000000098, 0.00011445900000000078, 0.00011522199999999816, 0.00011502700000000018, 0.00011431900000000161, 0.00011454199999999873, 0.00011451399999999959, 0.00011513900000000021, 0.00011458299999999796]</msg>
<status status="PASS" starttime="20201030 18:29:46.127" endtime="20201030 18:29:46.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.122" endtime="20201030 18:29:46.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:46.134" endtime="20201030 18:29:46.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.133" endtime="20201030 18:29:46.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.131" endtime="20201030 18:29:46.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.770" endtime="20201030 18:29:46.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.769" endtime="20201030 18:29:46.155"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.163" endtime="20201030 18:29:46.185"></status>
</kw>
<msg timestamp="20201030 18:29:46.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.162" endtime="20201030 18:29:46.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.187" endtime="20201030 18:29:46.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.189" endtime="20201030 18:29:46.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.159" endtime="20201030 18:29:46.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.157" endtime="20201030 18:29:46.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.198" endtime="20201030 18:29:46.484"></status>
</kw>
<msg timestamp="20201030 18:29:46.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019683806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:46.197" endtime="20201030 18:29:46.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019683806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:46.488" endtime="20201030 18:29:46.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.496" endtime="20201030 18:29:46.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.194" endtime="20201030 18:29:46.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.192" endtime="20201030 18:29:46.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:46.502" level="INFO">${RESULT} = [{'diff': 0.00011597199999999891}, {'diff': 0.00011583399999999869}, {'diff': 0.00011613900000000121}, {'diff': 0.00011540200000000056}, {'diff': 0.00011623599999999873}, {'diff': 0.000115485999999997...</msg>
<status status="PASS" starttime="20201030 18:29:46.499" endtime="20201030 18:29:46.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:46.507" level="INFO">${ACCURACY} = {'diff': [0.00011597199999999891, 0.00011583399999999869, 0.00011613900000000121, 0.00011540200000000056, 0.00011623599999999873, 0.00011548599999999798, 0.00011588900000000096, 0.00011533300000000218...</msg>
<status status="PASS" starttime="20201030 18:29:46.503" endtime="20201030 18:29:46.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.512" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:29:46.511" endtime="20201030 18:29:46.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.514" level="INFO">VALUE: [0.00011597199999999891, 0.00011583399999999869, 0.00011613900000000121, 0.00011540200000000056, 0.00011623599999999873, 0.00011548599999999798, 0.00011588900000000096, 0.00011533300000000218, 0.00011619400000000002, 0.00011620799999999959, 0.00011608299999999946, 0.00011565300000000028, 0.00011577800000000041, 0.00011615299999999731, 0.00011602800000000066, 0.00011625000000000177, 0.00011565200000000081, 0.00011555499999999982, 0.00011602800000000066, 0.00011613900000000121, 0.00011583299999999921, 0.00011609699999999903, 0.0001157499999999978, 0.00011577800000000041, 0.00011579199999999998, 0.00011572199999999866, 0.00011577700000000093, 0.0001155689999999994, 0.00011558300000000243, 0.0001157360000000017, 0.00011612500000000164, 0.00011583299999999921, 0.00011609699999999903, 0.00011551399999999712, 0.00011559800000000148, 0.00011576400000000084, 0.00011570799999999909, 0.00011565200000000081, 0.00011558299999999896, 0.00011536100000000132, 0.00011620799999999959, 0.00011618000000000045, 0.00011583299999999921, 0.00011527799999999991, 0.00011534699999999828, 0.0001155559999999993, 0.00011538900000000046, 0.00011526400000000034, 0.00011604100000000075, 0.00011594399999999977]</msg>
<status status="PASS" starttime="20201030 18:29:46.513" endtime="20201030 18:29:46.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.508" endtime="20201030 18:29:46.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:46.519" endtime="20201030 18:29:46.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.517" endtime="20201030 18:29:46.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.516" endtime="20201030 18:29:46.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.155" endtime="20201030 18:29:46.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.155" endtime="20201030 18:29:46.540"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.548" endtime="20201030 18:29:46.569"></status>
</kw>
<msg timestamp="20201030 18:29:46.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.547" endtime="20201030 18:29:46.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.571" endtime="20201030 18:29:46.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.573" endtime="20201030 18:29:46.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.544" endtime="20201030 18:29:46.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.542" endtime="20201030 18:29:46.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.582" endtime="20201030 18:29:46.868"></status>
</kw>
<msg timestamp="20201030 18:29:46.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:46.581" endtime="20201030 18:29:46.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:46.872" endtime="20201030 18:29:46.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.880" endtime="20201030 18:29:46.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.578" endtime="20201030 18:29:46.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.576" endtime="20201030 18:29:46.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:46.887" level="INFO">${RESULT} = [{'diff': 0.00011658299999999996}, {'diff': 0.00011709700000000003}, {'diff': 0.00011647199999999941}, {'diff': 0.00011652800000000116}, {'diff': 0.00011658399999999944}, {'diff': 0.000116973000000002...</msg>
<status status="PASS" starttime="20201030 18:29:46.884" endtime="20201030 18:29:46.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:46.891" level="INFO">${ACCURACY} = {'diff': [0.00011658299999999996, 0.00011709700000000003, 0.00011647199999999941, 0.00011652800000000116, 0.00011658399999999944, 0.00011697300000000285, 0.0001168889999999985, 0.00011626400000000134,...</msg>
<status status="PASS" starttime="20201030 18:29:46.888" endtime="20201030 18:29:46.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.895" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:29:46.894" endtime="20201030 18:29:46.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.897" level="INFO">VALUE: [0.00011658299999999996, 0.00011709700000000003, 0.00011647199999999941, 0.00011652800000000116, 0.00011658399999999944, 0.00011697300000000285, 0.0001168889999999985, 0.00011626400000000134, 0.00011641600000000113, 0.00011625000000000177, 0.00011677700000000193, 0.00011626400000000134, 0.00011698599999999948, 0.00011638900000000146, 0.00011648599999999898, 0.00011672199999999966, 0.00011697199999999991, 0.00011720900000000006, 0.00011630500000000057, 0.00011718100000000092, 0.00011648600000000245, 0.00011719400000000102, 0.00011716700000000135, 0.00011677800000000141, 0.0001172499999999993, 0.00011684700000000325, 0.00011663899999999824, 0.00011697199999999991, 0.00011644499999999974, 0.00011723599999999973, 0.00011716600000000188, 0.00011626300000000186, 0.00011691600000000163, 0.00011647199999999941, 0.00011631999999999962, 0.00011704200000000123, 0.00011666600000000138, 0.00011694500000000024, 0.00011652799999999769, 0.00011719500000000049, 0.00011705500000000132, 0.00011697199999999991, 0.00011688799999999902, 0.00011644400000000027, 0.00011691599999999816, 0.00011697199999999991, 0.00011677799999999794, 0.0001170560000000008, 0.00011638900000000146, 0.00011694500000000024]</msg>
<status status="PASS" starttime="20201030 18:29:46.896" endtime="20201030 18:29:46.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.892" endtime="20201030 18:29:46.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:46.902" endtime="20201030 18:29:46.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.901" endtime="20201030 18:29:46.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.900" endtime="20201030 18:29:46.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.541" endtime="20201030 18:29:46.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.540" endtime="20201030 18:29:46.923"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.932" endtime="20201030 18:29:46.954"></status>
</kw>
<msg timestamp="20201030 18:29:46.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.930" endtime="20201030 18:29:46.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.956" endtime="20201030 18:29:46.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.958" endtime="20201030 18:29:46.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.927" endtime="20201030 18:29:46.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.925" endtime="20201030 18:29:46.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.967" endtime="20201030 18:29:47.252"></status>
</kw>
<msg timestamp="20201030 18:29:47.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020609597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02072725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:46.966" endtime="20201030 18:29:47.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020609597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02072725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:47.257" endtime="20201030 18:29:47.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.265" endtime="20201030 18:29:47.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.963" endtime="20201030 18:29:47.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.962" endtime="20201030 18:29:47.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:47.271" level="INFO">${RESULT} = [{'diff': 0.00011765299999999881}, {'diff': 0.00011772200000000066}, {'diff': 0.00011757000000000087}, {'diff': 0.00011800000000000005}, {'diff': 0.00011727799999999844}, {'diff': 0.000117347999999999...</msg>
<status status="PASS" starttime="20201030 18:29:47.268" endtime="20201030 18:29:47.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:47.275" level="INFO">${ACCURACY} = {'diff': [0.00011765299999999881, 0.00011772200000000066, 0.00011757000000000087, 0.00011800000000000005, 0.00011727799999999844, 0.00011734799999999976, 0.00011790199999999959, 0.00011777699999999947...</msg>
<status status="PASS" starttime="20201030 18:29:47.272" endtime="20201030 18:29:47.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.280" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:29:47.278" endtime="20201030 18:29:47.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.283" level="INFO">VALUE: [0.00011765299999999881, 0.00011772200000000066, 0.00011757000000000087, 0.00011800000000000005, 0.00011727799999999844, 0.00011734799999999976, 0.00011790199999999959, 0.00011777699999999947, 0.00011773600000000023, 0.00011812500000000017, 0.00011779199999999851, 0.00011795800000000134, 0.00011740300000000203, 0.00011815300000000278, 0.00011820800000000159, 0.00011730600000000105, 0.00011802799999999919, 0.00011727800000000191, 0.00011823600000000073, 0.00011802699999999972, 0.00011769400000000152, 0.00011783300000000121, 0.00011783300000000121, 0.00011741699999999813, 0.00011820800000000159, 0.0001172499999999993, 0.00011800000000000005, 0.00011815300000000278, 0.00011734699999999681, 0.00011754100000000225, 0.00011745800000000084, 0.00011783300000000121, 0.00011729200000000148, 0.00011751399999999912, 0.00011795799999999787, 0.00011795799999999787, 0.00011752799999999869, 0.00011752800000000216, 0.00011777800000000241, 0.00011734700000000028, 0.0001179439999999983, 0.00011763899999999924, 0.00011815299999999931, 0.00011754200000000173, 0.00011813900000000321, 0.00011752799999999869, 0.00011813899999999974, 0.00011732000000000062, 0.00011758400000000044, 0.00011732000000000062]</msg>
<status status="PASS" starttime="20201030 18:29:47.281" endtime="20201030 18:29:47.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.276" endtime="20201030 18:29:47.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:47.288" endtime="20201030 18:29:47.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.286" endtime="20201030 18:29:47.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.285" endtime="20201030 18:29:47.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.924" endtime="20201030 18:29:47.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.923" endtime="20201030 18:29:47.308"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.317" endtime="20201030 18:29:47.338"></status>
</kw>
<msg timestamp="20201030 18:29:47.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.315" endtime="20201030 18:29:47.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.340" endtime="20201030 18:29:47.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.342" endtime="20201030 18:29:47.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.313" endtime="20201030 18:29:47.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.311" endtime="20201030 18:29:47.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.351" endtime="20201030 18:29:47.637"></status>
</kw>
<msg timestamp="20201030 18:29:47.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019518292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019637306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:47.350" endtime="20201030 18:29:47.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019518292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019637306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:47.641" endtime="20201030 18:29:47.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.648" endtime="20201030 18:29:47.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.347" endtime="20201030 18:29:47.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.346" endtime="20201030 18:29:47.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:47.655" level="INFO">${RESULT} = [{'diff': 0.00011901400000000062}, {'diff': 0.00011916600000000041}, {'diff': 0.00011830500000000257}, {'diff': 0.00011841699999999913}, {'diff': 0.00011881899999999918}, {'diff': 0.000118764000000000...</msg>
<status status="PASS" starttime="20201030 18:29:47.652" endtime="20201030 18:29:47.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:47.662" level="INFO">${ACCURACY} = {'diff': [0.00011901400000000062, 0.00011916600000000041, 0.00011830500000000257, 0.00011841699999999913, 0.00011881899999999918, 0.00011876400000000037, 0.00011891699999999963, 0.00011894499999999877...</msg>
<status status="PASS" starttime="20201030 18:29:47.656" endtime="20201030 18:29:47.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.667" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:29:47.666" endtime="20201030 18:29:47.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.669" level="INFO">VALUE: [0.00011901400000000062, 0.00011916600000000041, 0.00011830500000000257, 0.00011841699999999913, 0.00011881899999999918, 0.00011876400000000037, 0.00011891699999999963, 0.00011894499999999877, 0.00011899999999999758, 0.0001186110000000011, 0.00011897299999999791, 0.00011919499999999902, 0.00011837500000000042, 0.0001187639999999969, 0.00011851400000000012, 0.0001189439999999993, 0.00011848600000000098, 0.00011897199999999844, 0.00011876400000000037, 0.0001192089999999986, 0.00011847200000000141, 0.00011831999999999815, 0.00011887500000000092, 0.00011866599999999991, 0.0001191110000000016, 0.00011904100000000029, 0.000118389, 0.00011887500000000092, 0.000119082999999999, 0.00011919399999999955, 0.00011916699999999988, 0.00011911200000000108, 0.00011840299999999956, 0.00011845899999999784, 0.00011837500000000042, 0.00011915300000000031, 0.0001183049999999991, 0.00011904199999999976, 0.00011901399999999715, 0.00011879199999999951, 0.00011834700000000128, 0.00011859800000000101, 0.00011845899999999784, 0.00011870900000000156, 0.00011830599999999858, 0.00011915200000000084, 0.00011869399999999905, 0.00011895800000000234, 0.000119082999999999, 0.00011850000000000055]</msg>
<status status="PASS" starttime="20201030 18:29:47.668" endtime="20201030 18:29:47.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.663" endtime="20201030 18:29:47.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:47.679" endtime="20201030 18:29:47.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.677" endtime="20201030 18:29:47.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.676" endtime="20201030 18:29:47.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.309" endtime="20201030 18:29:47.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.309" endtime="20201030 18:29:47.699"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.708" endtime="20201030 18:29:47.730"></status>
</kw>
<msg timestamp="20201030 18:29:47.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.706" endtime="20201030 18:29:47.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.732" endtime="20201030 18:29:47.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.734" endtime="20201030 18:29:47.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.704" endtime="20201030 18:29:47.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.702" endtime="20201030 18:29:47.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.743" endtime="20201030 18:29:48.029"></status>
</kw>
<msg timestamp="20201030 18:29:48.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:47.742" endtime="20201030 18:29:48.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.033" endtime="20201030 18:29:48.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.041" endtime="20201030 18:29:48.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.739" endtime="20201030 18:29:48.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.737" endtime="20201030 18:29:48.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:48.048" level="INFO">${RESULT} = [{'diff': 0.00011991700000000063}, {'diff': 0.00011984700000000278}, {'diff': 0.00011954100000000079}, {'diff': 0.000120083}, {'diff': 0.00011934699999999882}, {'diff': 0.0001194439999999998}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:29:48.045" endtime="20201030 18:29:48.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:48.052" level="INFO">${ACCURACY} = {'diff': [0.00011991700000000063, 0.00011984700000000278, 0.00011954100000000079, 0.000120083, 0.00011934699999999882, 0.0001194439999999998, 0.00011983299999999975, 0.00011968099999999995, 0.00011997...</msg>
<status status="PASS" starttime="20201030 18:29:48.049" endtime="20201030 18:29:48.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.056" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:29:48.055" endtime="20201030 18:29:48.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.059" level="INFO">VALUE: [0.00011991700000000063, 0.00011984700000000278, 0.00011954100000000079, 0.000120083, 0.00011934699999999882, 0.0001194439999999998, 0.00011983299999999975, 0.00011968099999999995, 0.00011997300000000238, 0.00011959800000000201, 0.00012022300000000263, 0.00011963900000000124, 0.00011972199999999919, 0.00012015299999999784, 0.00012015299999999784, 0.00011981900000000018, 0.00011983299999999975, 0.0001199440000000003, 0.00012015300000000131, 0.00011965300000000081, 0.00011981999999999965, 0.00011958399999999897, 0.000120083, 0.00011969400000000005, 0.00011926400000000087, 0.00011934699999999882, 0.000119389000000001, 0.00011954199999999679, 0.00011986100000000235, 0.00011969400000000005, 0.00011954200000000026, 0.0001195699999999994, 0.00011995900000000281, 0.0001197500000000018, 0.00011983300000000321, 0.0001200699999999999, 0.00011934699999999882, 0.00011970799999999962, 0.00011983299999999975, 0.00011952799999999722, 0.00011963900000000124, 0.000119389000000001, 0.00011936099999999839, 0.00012019400000000055, 0.0001198890000000015, 0.00011984699999999932, 0.00012001400000000162, 0.00011983399999999922, 0.00011965300000000081, 0.00012005499999999739]</msg>
<status status="PASS" starttime="20201030 18:29:48.057" endtime="20201030 18:29:48.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.053" endtime="20201030 18:29:48.060"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:48.064" endtime="20201030 18:29:48.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.062" endtime="20201030 18:29:48.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.061" endtime="20201030 18:29:48.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.700" endtime="20201030 18:29:48.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.700" endtime="20201030 18:29:48.084"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.093" endtime="20201030 18:29:48.115"></status>
</kw>
<msg timestamp="20201030 18:29:48.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.091" endtime="20201030 18:29:48.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.117" endtime="20201030 18:29:48.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.119" endtime="20201030 18:29:48.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.089" endtime="20201030 18:29:48.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.087" endtime="20201030 18:29:48.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.128" endtime="20201030 18:29:48.414"></status>
</kw>
<msg timestamp="20201030 18:29:48.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020698458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020819014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.127" endtime="20201030 18:29:48.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020698458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020819014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.418" endtime="20201030 18:29:48.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.426" endtime="20201030 18:29:48.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.124" endtime="20201030 18:29:48.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.122" endtime="20201030 18:29:48.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:48.432" level="INFO">${RESULT} = [{'diff': 0.00012055600000000083}, {'diff': 0.00012101399999999915}, {'diff': 0.00012083299999999728}, {'diff': 0.0001209029999999986}, {'diff': 0.00012054100000000179}, {'diff': 0.0001209580000000008...</msg>
<status status="PASS" starttime="20201030 18:29:48.429" endtime="20201030 18:29:48.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:48.436" level="INFO">${ACCURACY} = {'diff': [0.00012055600000000083, 0.00012101399999999915, 0.00012083299999999728, 0.0001209029999999986, 0.00012054100000000179, 0.00012095800000000087, 0.00012101299999999968, 0.00012083300000000075,...</msg>
<status status="PASS" starttime="20201030 18:29:48.433" endtime="20201030 18:29:48.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.441" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:29:48.440" endtime="20201030 18:29:48.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.443" level="INFO">VALUE: [0.00012055600000000083, 0.00012101399999999915, 0.00012083299999999728, 0.0001209029999999986, 0.00012054100000000179, 0.00012095800000000087, 0.00012101299999999968, 0.00012083300000000075, 0.00012068100000000095, 0.00012063900000000224, 0.00012119400000000155, 0.0001211249999999997, 0.0001209029999999986, 0.0001211249999999997, 0.00012033400000000319, 0.00012116599999999894, 0.00012090199999999912, 0.00012098600000000001, 0.00012122200000000069, 0.00012101399999999915, 0.00012047199999999994, 0.00012072200000000019, 0.00012076400000000237, 0.000120389000000002, 0.00012041700000000113, 0.00012058399999999997, 0.00012120800000000112, 0.00012102699999999925, 0.0001205830000000005, 0.00012031900000000068, 0.00012086099999999989, 0.00012066700000000138, 0.00012108299999999753, 0.00012102799999999872, 0.0001207639999999989, 0.00012077799999999847, 0.00012119400000000155, 0.00012056899999999746, 0.00012045800000000037, 0.0001209029999999986, 0.00012052800000000169, 0.00012079099999999857, 0.00012063899999999877, 0.00012072200000000019, 0.00012047300000000288, 0.00012059800000000301, 0.00012073599999999976, 0.00012119500000000102, 0.0001212639999999994, 0.00012083300000000075]</msg>
<status status="PASS" starttime="20201030 18:29:48.442" endtime="20201030 18:29:48.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.437" endtime="20201030 18:29:48.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:48.449" endtime="20201030 18:29:48.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.448" endtime="20201030 18:29:48.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.446" endtime="20201030 18:29:48.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.085" endtime="20201030 18:29:48.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.085" endtime="20201030 18:29:48.470"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.478" endtime="20201030 18:29:48.498"></status>
</kw>
<msg timestamp="20201030 18:29:48.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.477" endtime="20201030 18:29:48.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.500" endtime="20201030 18:29:48.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.502" endtime="20201030 18:29:48.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.474" endtime="20201030 18:29:48.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.472" endtime="20201030 18:29:48.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.511" endtime="20201030 18:29:48.797"></status>
</kw>
<msg timestamp="20201030 18:29:48.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019897903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.510" endtime="20201030 18:29:48.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019897903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.801" endtime="20201030 18:29:48.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.809" endtime="20201030 18:29:48.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.507" endtime="20201030 18:29:48.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.505" endtime="20201030 18:29:48.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:48.815" level="INFO">${RESULT} = [{'diff': 0.00012122200000000069}, {'diff': 0.00012152799999999922}, {'diff': 0.00012208400000000147}, {'diff': 0.00012175000000000033}, {'diff': 0.00012216599999999994}, {'diff': 0.000121777999999999...</msg>
<status status="PASS" starttime="20201030 18:29:48.812" endtime="20201030 18:29:48.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:48.820" level="INFO">${ACCURACY} = {'diff': [0.00012122200000000069, 0.00012152799999999922, 0.00012208400000000147, 0.00012175000000000033, 0.00012216599999999994, 0.00012177799999999947, 0.00012127799999999897, 0.00012216700000000288...</msg>
<status status="PASS" starttime="20201030 18:29:48.816" endtime="20201030 18:29:48.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.824" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:29:48.823" endtime="20201030 18:29:48.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.827" level="INFO">VALUE: [0.00012122200000000069, 0.00012152799999999922, 0.00012208400000000147, 0.00012175000000000033, 0.00012216599999999994, 0.00012177799999999947, 0.00012127799999999897, 0.00012216700000000288, 0.00012213900000000028, 0.00012218100000000245, 0.00012208400000000147, 0.00012195899999999787, 0.00012215299999999985, 0.0001217639999999999, 0.00012201400000000015, 0.0001215830000000015, 0.00012158299999999803, 0.00012209700000000157, 0.00012156899999999846, 0.0001219579999999984, 0.000122083000000002, 0.00012184700000000132, 0.00012213900000000028, 0.0001214029999999991, 0.0001220969999999981, 0.00012166599999999944, 0.0001214029999999991, 0.00012177799999999947, 0.00012204199999999929, 0.00012172200000000119, 0.00012156899999999846, 0.00012215299999999985, 0.00012191599999999969, 0.00012219500000000202, 0.00012193099999999873, 0.00012222199999999822, 0.00012188900000000003, 0.00012204200000000276, 0.00012215299999999985, 0.00012183300000000175, 0.00012141700000000213, 0.00012141699999999866, 0.00012132000000000115, 0.0001219440000000023, 0.00012205600000000233, 0.00012213900000000028, 0.0001220969999999981, 0.00012156899999999846, 0.00012191599999999969, 0.00012134699999999735]</msg>
<status status="PASS" starttime="20201030 18:29:48.826" endtime="20201030 18:29:48.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.821" endtime="20201030 18:29:48.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:48.832" endtime="20201030 18:29:48.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.830" endtime="20201030 18:29:48.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.829" endtime="20201030 18:29:48.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.471" endtime="20201030 18:29:48.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.470" endtime="20201030 18:29:48.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.935" endtime="20201030 18:29:48.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:48.857" endtime="20201030 18:29:48.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.855" endtime="20201030 18:29:48.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.854" endtime="20201030 18:29:48.877"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:09.861" endtime="20201030 18:29:48.877" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:28:28.769" endtime="20201030 18:29:48.881"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.934" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:29:48.942" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:29:49.941" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:29:48.933" endtime="20201030 18:29:49.941"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.944" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 18:29:49.943" endtime="20201030 18:29:50.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.932" endtime="20201030 18:29:50.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:50.951" endtime="20201030 18:29:51.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.948" endtime="20201030 18:29:51.186"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.199" endtime="20201030 18:29:51.221"></status>
</kw>
<msg timestamp="20201030 18:29:51.222" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.197" endtime="20201030 18:29:51.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.224" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.223" endtime="20201030 18:29:51.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.227" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:51.225" endtime="20201030 18:29:51.228"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:51.195" endtime="20201030 18:29:51.228"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:51.193" endtime="20201030 18:29:51.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.191" endtime="20201030 18:29:51.229"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:51.233" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:51.232" endtime="20201030 18:29:51.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.230" endtime="20201030 18:29:51.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.190" endtime="20201030 18:29:51.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.190" endtime="20201030 18:29:51.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.235" endtime="20201030 18:29:51.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.188" endtime="20201030 18:29:51.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.238" endtime="20201030 18:29:51.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.187" endtime="20201030 18:29:51.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.930" endtime="20201030 18:29:51.241"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:51.246" endtime="20201030 18:29:51.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.245" endtime="20201030 18:29:51.266"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.279" endtime="20201030 18:29:51.297"></status>
</kw>
<msg timestamp="20201030 18:29:51.297" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.277" endtime="20201030 18:29:51.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.300" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.299" endtime="20201030 18:29:51.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.303" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:51.301" endtime="20201030 18:29:51.303"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:51.275" endtime="20201030 18:29:51.305"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:51.272" endtime="20201030 18:29:51.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.271" endtime="20201030 18:29:51.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:51.310" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:51.309" endtime="20201030 18:29:51.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.307" endtime="20201030 18:29:51.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.270" endtime="20201030 18:29:51.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.270" endtime="20201030 18:29:51.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.313" endtime="20201030 18:29:51.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.268" endtime="20201030 18:29:51.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.267" endtime="20201030 18:29:51.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.243" endtime="20201030 18:29:51.316"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.326" endtime="20201030 18:29:57.452"></status>
</kw>
<msg timestamp="20201030 18:29:57.453" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.324" endtime="20201030 18:29:57.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.458" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.455" endtime="20201030 18:29:57.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.460" endtime="20201030 18:29:57.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.320" endtime="20201030 18:29:57.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.318" endtime="20201030 18:29:57.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:57.471" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 18:29:57.467" endtime="20201030 18:29:57.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.480" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:57.478" endtime="20201030 18:29:57.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.484" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:57.482" endtime="20201030 18:29:57.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.473" endtime="20201030 18:29:57.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.494" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:57.492" endtime="20201030 18:29:57.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.498" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:57.496" endtime="20201030 18:29:57.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.487" endtime="20201030 18:29:57.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.508" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:57.506" endtime="20201030 18:29:57.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.513" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:29:57.511" endtime="20201030 18:29:57.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.501" endtime="20201030 18:29:57.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.528" endtime="20201030 18:29:57.827"></status>
</kw>
<msg timestamp="20201030 18:29:57.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069319583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169402556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.524" endtime="20201030 18:29:57.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069319583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169402556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.831" endtime="20201030 18:29:57.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.838" endtime="20201030 18:29:57.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.519" endtime="20201030 18:29:57.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.515" endtime="20201030 18:29:57.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:57.844" level="INFO">${FILTERED} = [{'diff': 0.100082973}, {'diff': 0.099956125}, {'diff': 0.100008667}, {'diff': 0.10000868099999999}, {'diff': 0.10000868099999993}, {'diff': 0.10000869400000001}, {'diff': 5.419999999922709e-07}, {'di...</msg>
<status status="PASS" starttime="20201030 18:29:57.841" endtime="20201030 18:29:57.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:57.848" level="INFO">${RESULT} = {'diff': [0.100082973, 0.099956125, 0.100008667, 0.10000868099999999, 0.10000868099999993, 0.10000869400000001, 5.419999999922709e-07, 0.100009181, 0.10000868099999993, 0.10000873600000015, 5.41999999...</msg>
<status status="PASS" starttime="20201030 18:29:57.845" endtime="20201030 18:29:57.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.852" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:57.851" endtime="20201030 18:29:57.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.855" level="INFO">VALUE: [0.100082973, 0.099956125, 0.100008667, 0.10000868099999999, 0.10000868099999993, 0.10000869400000001, 5.419999999922709e-07, 0.100009181, 0.10000868099999993, 0.10000873600000015, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.1000092079999999, 0.10000869400000001, 0.10000869400000001, 0.10000870800000028, 0.10000919400000008, 0.10000869400000001, 0.10000868099999982, 0.10000869500000009, 0.10000873599999993, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919499999972, 0.10000868099999982, 0.10000874999999976, 0.10000920800000035, 0.10000873600000038, 0.10000922199999973, 0.10000869399999956, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 18:29:57.853" endtime="20201030 18:29:57.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.849" endtime="20201030 18:29:57.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:57.860" endtime="20201030 18:29:57.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.858" endtime="20201030 18:29:57.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.857" endtime="20201030 18:29:57.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.316" endtime="20201030 18:29:57.880"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:51.241" endtime="20201030 18:29:57.881" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:57.887" endtime="20201030 18:29:57.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.885" endtime="20201030 18:29:57.907"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.921" endtime="20201030 18:29:57.939"></status>
</kw>
<msg timestamp="20201030 18:29:57.940" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.919" endtime="20201030 18:29:57.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.942" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.941" endtime="20201030 18:29:57.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.945" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:57.943" endtime="20201030 18:29:57.946"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:57.917" endtime="20201030 18:29:57.946"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:57.914" endtime="20201030 18:29:57.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.912" endtime="20201030 18:29:57.947"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:57.951" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:57.950" endtime="20201030 18:29:57.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.948" endtime="20201030 18:29:57.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.911" endtime="20201030 18:29:57.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.911" endtime="20201030 18:29:57.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.953" endtime="20201030 18:29:57.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.909" endtime="20201030 18:29:57.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.908" endtime="20201030 18:29:57.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.884" endtime="20201030 18:29:57.955"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.963" endtime="20201030 18:30:04.089"></status>
</kw>
<msg timestamp="20201030 18:30:04.090" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.962" endtime="20201030 18:30:04.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.095" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.092" endtime="20201030 18:30:04.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.098" endtime="20201030 18:30:04.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.959" endtime="20201030 18:30:04.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.957" endtime="20201030 18:30:04.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:04.108" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 18:30:04.105" endtime="20201030 18:30:04.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.117" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:04.115" endtime="20201030 18:30:04.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.121" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:04.119" endtime="20201030 18:30:04.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.110" endtime="20201030 18:30:04.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.134" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:04.130" endtime="20201030 18:30:04.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.138" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:04.136" endtime="20201030 18:30:04.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.124" endtime="20201030 18:30:04.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.148" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:04.146" endtime="20201030 18:30:04.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.152" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:30:04.150" endtime="20201030 18:30:04.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.141" endtime="20201030 18:30:04.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.167" endtime="20201030 18:30:04.466"></status>
</kw>
<msg timestamp="20201030 18:30:04.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065832153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165877083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.164" endtime="20201030 18:30:04.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065832153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165877083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.470" endtime="20201030 18:30:04.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.478" endtime="20201030 18:30:04.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.159" endtime="20201030 18:30:04.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.155" endtime="20201030 18:30:04.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:04.484" level="INFO">${FILTERED} = [{'diff': 0.10004493}, {'diff': 0.10003408300000002}, {'diff': 0.09997119399999999}, {'diff': 0.10000869499999998}, {'diff': 0.10000870899999997}, {'diff': 0.100009236}, {'diff': 0.10000920800000002},...</msg>
<status status="PASS" starttime="20201030 18:30:04.481" endtime="20201030 18:30:04.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:04.488" level="INFO">${RESULT} = {'diff': [0.10004493, 0.10003408300000002, 0.09997119399999999, 0.10000869499999998, 0.10000870899999997, 0.100009236, 0.10000920800000002, 0.10000869500000009, 5.409999999095305e-07, 5.41999999992270...</msg>
<status status="PASS" starttime="20201030 18:30:04.485" endtime="20201030 18:30:04.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.493" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:04.492" endtime="20201030 18:30:04.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.498" level="INFO">VALUE: [0.10004493, 0.10003408300000002, 0.09997119399999999, 0.10000869499999998, 0.10000870899999997, 0.100009236, 0.10000920800000002, 0.10000869500000009, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.420000002143155e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.100009236, 5.419999999922709e-07, 5.419999999922709e-07, 0.1000092079999999, 0.10000869400000001, 0.10000868000000018, 0.10000867999999974, 0.10000868100000027, 0.100008667, 0.10000869400000001, 0.10000874999999976, 5.420000004363601e-07, 5.410000003536197e-07, 0.10000918099999989, 5.419999995481817e-07, 5.409999994654413e-07, 0.10000916700000051, 0.10000868000000018, 0.10000869399999956, 0.1000086799999993, 0.100008667, 0.10000870899999992]</msg>
<status status="PASS" starttime="20201030 18:30:04.497" endtime="20201030 18:30:04.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.489" endtime="20201030 18:30:04.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:04.503" endtime="20201030 18:30:04.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.502" endtime="20201030 18:30:04.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.500" endtime="20201030 18:30:04.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.956" endtime="20201030 18:30:04.524"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:57.882" endtime="20201030 18:30:04.524" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:04.531" endtime="20201030 18:30:04.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.530" endtime="20201030 18:30:04.551"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.565" endtime="20201030 18:30:04.583"></status>
</kw>
<msg timestamp="20201030 18:30:04.584" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.563" endtime="20201030 18:30:04.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.586" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.585" endtime="20201030 18:30:04.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.589" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:04.587" endtime="20201030 18:30:04.590"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:04.560" endtime="20201030 18:30:04.590"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:04.558" endtime="20201030 18:30:04.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.557" endtime="20201030 18:30:04.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:04.595" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:04.594" endtime="20201030 18:30:04.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.592" endtime="20201030 18:30:04.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.556" endtime="20201030 18:30:04.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.555" endtime="20201030 18:30:04.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.597" endtime="20201030 18:30:04.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.554" endtime="20201030 18:30:04.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.552" endtime="20201030 18:30:04.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.528" endtime="20201030 18:30:04.600"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.610" endtime="20201030 18:30:10.736"></status>
</kw>
<msg timestamp="20201030 18:30:10.737" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.607" endtime="20201030 18:30:10.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.743" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.740" endtime="20201030 18:30:10.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.746" endtime="20201030 18:30:10.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.604" endtime="20201030 18:30:10.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.602" endtime="20201030 18:30:10.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:10.757" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 18:30:10.754" endtime="20201030 18:30:10.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.766" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:10.764" endtime="20201030 18:30:10.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.771" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:10.769" endtime="20201030 18:30:10.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.759" endtime="20201030 18:30:10.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.781" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:10.779" endtime="20201030 18:30:10.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.786" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:10.784" endtime="20201030 18:30:10.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.774" endtime="20201030 18:30:10.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.796" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:10.794" endtime="20201030 18:30:10.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.801" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:30:10.799" endtime="20201030 18:30:10.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.789" endtime="20201030 18:30:10.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.818" endtime="20201030 18:30:11.115"></status>
</kw>
<msg timestamp="20201030 18:30:11.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067932, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168064806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:10.814" endtime="20201030 18:30:11.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067932, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168064806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:11.119" endtime="20201030 18:30:11.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.126" endtime="20201030 18:30:11.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.808" endtime="20201030 18:30:11.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.804" endtime="20201030 18:30:11.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:11.133" level="INFO">${FILTERED} = [{'diff': 0.100132806}, {'diff': 0.10004100000000002}, {'diff': 0.09988001399999996}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000920899999999}, {'diff': 0.10000868100000004}, {'diff': 0.10000874...</msg>
<status status="PASS" starttime="20201030 18:30:11.130" endtime="20201030 18:30:11.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:11.137" level="INFO">${RESULT} = {'diff': [0.100132806, 0.10004100000000002, 0.09988001399999996, 5.419999999922709e-07, 0.10000920899999999, 0.10000868100000004, 0.10000874999999998, 0.10000915200000005, 0.10000870800000006, 5.40999...</msg>
<status status="PASS" starttime="20201030 18:30:11.134" endtime="20201030 18:30:11.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.142" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:11.141" endtime="20201030 18:30:11.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.144" level="INFO">VALUE: [0.100132806, 0.10004100000000002, 0.09988001399999996, 5.419999999922709e-07, 0.10000920899999999, 0.10000868100000004, 0.10000874999999998, 0.10000915200000005, 0.10000870800000006, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000913899999997, 0.10000870900000014, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.10000919400000008, 0.10000866599999991, 0.10000868100000027, 0.10000869500000009, 0.10000869500000009, 0.10000873599999993, 0.10000919499999972, 0.10000869499999965, 0.10000870800000028, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 0.10000920799999946, 0.10000869399999956, 0.10000866599999991, 0.10000869500000054, 0.10000916700000051, 0.10000869400000045, 0.10000870799999984]</msg>
<status status="PASS" starttime="20201030 18:30:11.143" endtime="20201030 18:30:11.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.138" endtime="20201030 18:30:11.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:11.150" endtime="20201030 18:30:11.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.148" endtime="20201030 18:30:11.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.147" endtime="20201030 18:30:11.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.600" endtime="20201030 18:30:11.170"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:04.526" endtime="20201030 18:30:11.171" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:11.177" endtime="20201030 18:30:11.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.176" endtime="20201030 18:30:11.197"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.211" endtime="20201030 18:30:11.229"></status>
</kw>
<msg timestamp="20201030 18:30:11.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.209" endtime="20201030 18:30:11.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.233" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.231" endtime="20201030 18:30:11.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.236" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:11.234" endtime="20201030 18:30:11.236"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:11.206" endtime="20201030 18:30:11.237"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:11.204" endtime="20201030 18:30:11.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.203" endtime="20201030 18:30:11.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:11.243" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:11.242" endtime="20201030 18:30:11.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.239" endtime="20201030 18:30:11.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.202" endtime="20201030 18:30:11.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.201" endtime="20201030 18:30:11.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.244" endtime="20201030 18:30:11.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.200" endtime="20201030 18:30:11.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.198" endtime="20201030 18:30:11.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.175" endtime="20201030 18:30:11.247"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.256" endtime="20201030 18:30:17.384"></status>
</kw>
<msg timestamp="20201030 18:30:17.385" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.254" endtime="20201030 18:30:17.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.391" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.387" endtime="20201030 18:30:17.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.394" endtime="20201030 18:30:17.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.251" endtime="20201030 18:30:17.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.249" endtime="20201030 18:30:17.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:17.405" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 18:30:17.402" endtime="20201030 18:30:17.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.414" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:17.412" endtime="20201030 18:30:17.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.419" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:17.417" endtime="20201030 18:30:17.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.407" endtime="20201030 18:30:17.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.430" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:17.428" endtime="20201030 18:30:17.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.434" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:17.432" endtime="20201030 18:30:17.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.422" endtime="20201030 18:30:17.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.445" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:17.443" endtime="20201030 18:30:17.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.448" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:30:17.447" endtime="20201030 18:30:17.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.438" endtime="20201030 18:30:17.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.455" endtime="20201030 18:30:17.747"></status>
</kw>
<msg timestamp="20201030 18:30:17.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067900583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168128889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.454" endtime="20201030 18:30:17.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067900583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168128889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.751" endtime="20201030 18:30:17.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.759" endtime="20201030 18:30:17.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.451" endtime="20201030 18:30:17.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.449" endtime="20201030 18:30:17.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:17.765" level="INFO">${FILTERED} = [{'diff': 0.100228306}, {'diff': 0.10004820800000003}, {'diff': 0.09978008299999996}, {'diff': 0.100009666}, {'diff': 0.10000769399999998}, {'diff': 0.10000870800000006}, {'diff': 0.10000966699999991}...</msg>
<status status="PASS" starttime="20201030 18:30:17.762" endtime="20201030 18:30:17.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:17.769" level="INFO">${RESULT} = {'diff': [0.100228306, 0.10004820800000003, 0.09978008299999996, 0.100009666, 0.10000769399999998, 0.10000870800000006, 0.10000966699999991, 0.100008667, 0.10000769400000009, 0.10000870799999995, 0.10...</msg>
<status status="PASS" starttime="20201030 18:30:17.766" endtime="20201030 18:30:17.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.773" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:17.772" endtime="20201030 18:30:17.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.776" level="INFO">VALUE: [0.100228306, 0.10004820800000003, 0.09978008299999996, 0.100009666, 0.10000769399999998, 0.10000870800000006, 0.10000966699999991, 0.100008667, 0.10000769400000009, 0.10000870799999995, 0.1000096800000001, 0.10000869400000001, 0.10000919400000008, 0.10000970799999997, 5.410000001315751e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000922200000018, 0.10000968099999996, 0.100008667, 0.10000769399999987, 0.10000869400000001, 0.10000970799999997, 0.10000819399999994, 0.10000868000000018, 0.10000968099999996, 0.100008667, 0.10000772199999997, 0.10001019400000022, 0.10000868099999982, 0.1000092079999999, 0.10000969400000015, 0.10000867999999974, 0.10000772199999997, 0.1000102079999996, 0.10000866599999991, 0.10000766699999986, 0.10000869500000054, 0.1000096810000004, 0.10000868000000018, 0.10000768000000004, 0.10000870799999984, 0.10000968099999952]</msg>
<status status="PASS" starttime="20201030 18:30:17.774" endtime="20201030 18:30:17.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.770" endtime="20201030 18:30:17.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:17.781" endtime="20201030 18:30:17.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.779" endtime="20201030 18:30:17.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.778" endtime="20201030 18:30:17.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.248" endtime="20201030 18:30:17.802"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:11.172" endtime="20201030 18:30:17.802" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:17.809" endtime="20201030 18:30:17.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.807" endtime="20201030 18:30:17.829"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.843" endtime="20201030 18:30:17.862"></status>
</kw>
<msg timestamp="20201030 18:30:17.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.842" endtime="20201030 18:30:17.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.865" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.864" endtime="20201030 18:30:17.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.868" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:17.866" endtime="20201030 18:30:17.869"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:17.839" endtime="20201030 18:30:17.869"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:17.836" endtime="20201030 18:30:17.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.834" endtime="20201030 18:30:17.870"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:17.874" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:17.873" endtime="20201030 18:30:17.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.871" endtime="20201030 18:30:17.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.833" endtime="20201030 18:30:17.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.833" endtime="20201030 18:30:17.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.876" endtime="20201030 18:30:17.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.831" endtime="20201030 18:30:17.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.830" endtime="20201030 18:30:17.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.806" endtime="20201030 18:30:17.879"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.887" endtime="20201030 18:30:24.014"></status>
</kw>
<msg timestamp="20201030 18:30:24.015" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.885" endtime="20201030 18:30:24.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.021" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.017" endtime="20201030 18:30:24.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.024" endtime="20201030 18:30:24.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.883" endtime="20201030 18:30:24.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.881" endtime="20201030 18:30:24.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:24.035" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 18:30:24.031" endtime="20201030 18:30:24.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.044" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:24.042" endtime="20201030 18:30:24.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.049" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:24.047" endtime="20201030 18:30:24.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.037" endtime="20201030 18:30:24.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.059" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:24.057" endtime="20201030 18:30:24.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.061" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:24.060" endtime="20201030 18:30:24.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.052" endtime="20201030 18:30:24.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.066" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:24.065" endtime="20201030 18:30:24.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.070" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:30:24.067" endtime="20201030 18:30:24.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.063" endtime="20201030 18:30:24.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.077" endtime="20201030 18:30:24.365"></status>
</kw>
<msg timestamp="20201030 18:30:24.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06772225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168063556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:24.076" endtime="20201030 18:30:24.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06772225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168063556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:24.369" endtime="20201030 18:30:24.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.376" endtime="20201030 18:30:24.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.073" endtime="20201030 18:30:24.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.071" endtime="20201030 18:30:24.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:24.382" level="INFO">${FILTERED} = [{'diff': 0.100341306}, {'diff': 0.10005407000000002}, {'diff': 0.099662639}, {'diff': 0.10000868000000002}, {'diff': 0.10000869500000004}, {'diff': 0.10000868099999993}, {'diff': 0.10000869499999998}...</msg>
<status status="PASS" starttime="20201030 18:30:24.379" endtime="20201030 18:30:24.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:24.386" level="INFO">${RESULT} = {'diff': [0.100341306, 0.10005407000000002, 0.099662639, 0.10000868000000002, 0.10000869500000004, 0.10000868099999993, 0.10000869499999998, 0.10000866600000002, 0.10000870800000006, 0.100008666999999...</msg>
<status status="PASS" starttime="20201030 18:30:24.383" endtime="20201030 18:30:24.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.390" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:24.389" endtime="20201030 18:30:24.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.393" level="INFO">VALUE: [0.100341306, 0.10005407000000002, 0.099662639, 0.10000868000000002, 0.10000869500000004, 0.10000868099999993, 0.10000869499999998, 0.10000866600000002, 0.10000870800000006, 0.10000866699999988, 0.10000868100000004, 0.10000868100000004, 0.100008777, 0.100009236, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000924999999983, 0.1000092079999999, 0.10000866599999991, 0.1000087780000003, 5.409999999095305e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000922300000026, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000924999999983, 5.419999999922709e-07, 0.10000920799999946, 0.10000868000000018, 5.420000004363601e-07, 5.409999994654413e-07, 0.10000919500000016, 5.419999995481817e-07, 5.420000004363601e-07, 0.10000918099999989]</msg>
<status status="PASS" starttime="20201030 18:30:24.391" endtime="20201030 18:30:24.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.387" endtime="20201030 18:30:24.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.402" endtime="20201030 18:30:24.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.400" endtime="20201030 18:30:24.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.399" endtime="20201030 18:30:24.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.879" endtime="20201030 18:30:24.423"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:17.804" endtime="20201030 18:30:24.423" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.430" endtime="20201030 18:30:24.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.428" endtime="20201030 18:30:24.450"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.462" endtime="20201030 18:30:24.479"></status>
</kw>
<msg timestamp="20201030 18:30:24.479" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.461" endtime="20201030 18:30:24.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.482" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.480" endtime="20201030 18:30:24.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.485" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:24.483" endtime="20201030 18:30:24.485"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:24.458" endtime="20201030 18:30:24.486"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:24.456" endtime="20201030 18:30:24.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.455" endtime="20201030 18:30:24.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:24.490" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:24.490" endtime="20201030 18:30:24.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.487" endtime="20201030 18:30:24.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.454" endtime="20201030 18:30:24.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.453" endtime="20201030 18:30:24.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.492" endtime="20201030 18:30:24.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.452" endtime="20201030 18:30:24.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.450" endtime="20201030 18:30:24.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.427" endtime="20201030 18:30:24.495"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.504" endtime="20201030 18:30:30.629"></status>
</kw>
<msg timestamp="20201030 18:30:30.630" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.501" endtime="20201030 18:30:30.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.635" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.632" endtime="20201030 18:30:30.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.638" endtime="20201030 18:30:30.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.499" endtime="20201030 18:30:30.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.497" endtime="20201030 18:30:30.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:30.649" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 18:30:30.645" endtime="20201030 18:30:30.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.657" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:30.655" endtime="20201030 18:30:30.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.661" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:30.659" endtime="20201030 18:30:30.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.650" endtime="20201030 18:30:30.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.672" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:30.669" endtime="20201030 18:30:30.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.674" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:30.673" endtime="20201030 18:30:30.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.664" endtime="20201030 18:30:30.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.679" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:30.678" endtime="20201030 18:30:30.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.681" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:30:30.680" endtime="20201030 18:30:30.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.676" endtime="20201030 18:30:30.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.688" endtime="20201030 18:30:30.979"></status>
</kw>
<msg timestamp="20201030 18:30:30.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063702778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164191806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.687" endtime="20201030 18:30:30.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063702778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164191806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.982" endtime="20201030 18:30:30.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.990" endtime="20201030 18:30:30.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.684" endtime="20201030 18:30:30.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.683" endtime="20201030 18:30:30.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:30.997" level="INFO">${FILTERED} = [{'diff': 0.100489028}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000919400000008}, {'diff': 0.10000868099999993}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201030 18:30:30.994" endtime="20201030 18:30:30.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:31.002" level="INFO">${RESULT} = {'diff': [0.100489028, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919400000008, 0.10000868099999993, 0.10000869499999998, 0.10000868100000004, 0.10000872199999988, 0.1...</msg>
<status status="PASS" starttime="20201030 18:30:30.998" endtime="20201030 18:30:31.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.006" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:31.005" endtime="20201030 18:30:31.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.009" level="INFO">VALUE: [0.100489028, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919400000008, 0.10000868099999993, 0.10000869499999998, 0.10000868100000004, 0.10000872199999988, 0.1000092079999999, 0.10000869500000009, 0.100008667, 0.10000870800000006, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 0.10000918099999989, 0.10000866600000036, 0.10000868099999982, 0.10000868100000027, 0.10000869500000009, 0.10000867999999974, 0.10000866599999991, 0.10000868100000027, 0.10000868099999982, 0.10000876300000039, 5.419999999922709e-07, 0.10000918099999989, 0.10000868100000027, 0.10000867999999974, 0.10000868000000018, 0.10000868099999982, 0.10000869500000009, 0.10000872300000019, 5.419999999922709e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10000913899999997, 0.10000868100000027, 0.10000868000000018, 0.10000870799999984, 0.10000922299999981, 0.100008667]</msg>
<status status="PASS" starttime="20201030 18:30:31.007" endtime="20201030 18:30:31.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.003" endtime="20201030 18:30:31.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:31.014" endtime="20201030 18:30:31.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.012" endtime="20201030 18:30:31.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.011" endtime="20201030 18:30:31.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.495" endtime="20201030 18:30:31.034"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:24.425" endtime="20201030 18:30:31.035" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:29:48.890" endtime="20201030 18:30:31.041"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:27:41.074" endtime="20201030 18:30:31.074"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
